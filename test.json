Pandoc (Meta {unMeta = fromList [("biblio-config",MetaBool True),("date-format",MetaInlines [Str "long"]),("document-css",MetaBool False),("editor",MetaInlines [Str "source"]),("fig-responsive",MetaBool True),("header-includes",MetaList []),("include-after",MetaList [MetaBlocks [RawBlock (Format "html") "</main>\n<!-- /main column -->\n"],MetaBlocks [RawBlock (Format "html") "<script id = \"quarto-html-after-body\" type=\"application/javascript\">\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) => {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () => {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\59851\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    target: function(trigger) {\n      return trigger.previousElementSibling;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    setTimeout(function() {\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i<noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      let href = ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i<bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const cites = ref.parentNode.getAttribute('data-cites').split(' ');\n    tippyHover(ref, function() {\n      var popup = window.document.createElement('div');\n      cites.forEach(function(cite) {\n        var citeDiv = window.document.createElement('div');\n        citeDiv.classList.add('hanging-indent');\n        citeDiv.classList.add('csl-entry');\n        var biblioDiv = window.document.getElementById('ref-' + cite);\n        if (biblioDiv) {\n          citeDiv.innerHTML = biblioDiv.innerHTML;\n        }\n        popup.appendChild(citeDiv);\n      });\n      return popup.innerHTML;\n    });\n  }\n});\n</script>\n"],MetaBlocks [RawBlock (Format "html") "</div> <!-- /content -->\n"]]),("include-before",MetaList [MetaBlocks [RawBlock (Format "html") "<div id=\"quarto-content\" class=\"page-columns page-rows-contents page-layout-article\">\n<div id=\"quarto-margin-sidebar\" class=\"sidebar margin-sidebar\">\n</div>\n<main class=\"content\" id=\"quarto-document-content\">\n"]]),("labels",MetaMap (fromList [("abstract",MetaInlines [Str "Abstract"]),("affilations",MetaInlines [Str "Affiliations"]),("affiliations",MetaInlines [Str "Affiliations"]),("authors",MetaInlines [Str "Authors"]),("description",MetaInlines [Str "Description"]),("doi",MetaInlines [Str "Doi"]),("published",MetaInlines [Str "Published"])])),("lang",MetaInlines [Str "en"]),("link-citations",MetaBool True),("quarto-template-params",MetaMap (fromList [("title-block-categories",MetaInlines [Str "true"])])),("quarto-version",MetaInlines [Str "1.0.38"]),("title",MetaInlines [Str "test"]),("toc-title",MetaInlines [Str "Table",Space,Str "of",Space,Str "contents"])]}) [Header 1 ("this-is-a-header",[],[]) [Str "This",Space,Str "is",Space,Str "a",Space,Str "header"],BulletList [[Para [Str "first",Space,Str "bullet"]],[Para [Str "Second",Space,Str "bullet"],BulletList [[Para [Str "First",Space,Str "sub-bullet"]],[Para [Str "Second",Space,Str "sub-bullet"]]]]],Div ("",["cell"],[]) [CodeBlock ("",["r","cell-code"],[]) "# Some code\n\n1 + 1",Div ("",["cell-output","cell-output-stdout"],[]) [CodeBlock ("",[],[]) "[1] 2"]]]