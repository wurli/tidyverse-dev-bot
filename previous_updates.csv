package,bullet_id,text,bullets_level,section_id,is_codeblock,parent_text
broom,08c43e3e66008881469db655678e936f,Moved forward with deprecation of tidiers for objects from the sp package. See resources linked in tidymodels/broom#1142 for more information on migration from retiring spatial packages.,1,1,FALSE,NA
broom,9bcd6df87fdd6a796ff70ecfeb44e542,Corrected confidence interval values for precision components in `tidy.betareg()` output (#1169).,1,2,FALSE,NA
broom,c9b96e34d219a636d2c5eadf47fa25df,Fixed bug in tidier for `car::linearHypothesis()` output with long formulas (#1171).,1,3,FALSE,NA
broom,3c63306c05bb9533494997ff2f30e667,Added support for columns `adj.r.squared` and `npar` in `glance()` method for objects outputted from `mgcv::gam()` (#1172).,1,4,FALSE,NA
broom,2a65bf4ba9461b57bd27b59405a6da7d,`tidy.coxph()` will now pass its ellipses `...` to `summary()` internally (#1151 by `@​ste-tuf`).,1,5,FALSE,NA
broom,3cb5775c8c8be5e52f5c2a2611ea215a,Transitioned the deprecation of the `region` argument to `tidy.SpatialPolygonsDataFrame` from a warn- to a hard-deprecation (#1142).,1,6,FALSE,NA
broom,7224a667e62a44c1411d219390361282,Removed maptools and rgeos as Suggested packages ahead of their retirement. sp tidiers will be removed from a future release of the package (#1142).,1,7,FALSE,NA
broom,9d947a204969a29737eb0a1b2fefec93,Addressed bug in mlogit tidiers where `augment.mlogit()` would fail if supplied a model fitted with a non-default `dfidx()` (#1156 by `@​gregmacfarlane`).,1,8,FALSE,NA
broom,5e7e8ca91d8bdd1f9c907bffeead0c05,Addressed bug in ANOVA tidiers where `tidy.anova()` would fail if passed a model with many predictors (#1159 by `@​jwilliman`).,1,9,FALSE,NA
broom,1129ad899fbb61bdb9ae653b9fad7b84,"Addressed warnings in ANOVA tidiers for unrecognized column names `Resid..Df`, `Resid..Dev`, and `Deviance`; those columns will be renamed `df.residual`, `residual.deviance`, and `deviance`, respectively (#1159 by `@​jwilliman`).",1,10,FALSE,NA
broom,9493c5020af1b5239c6d427538880ed8,"Added an `intercept` argument to `tidy.aov()`, a logical indicating whether to include information on the intercept as the first row of results (#1144 by `@​victor-vscn`).",1,11,FALSE,NA
broom,a2a07cacd3048c8ac182822194fdb337,Moved forward with soft-deprecation of tidiers for objects from the sp package ahead of the retirement of the rgeos and maptools packages later this year. sp tidiers will be removed from a future release of the package (#1142).,1,12,FALSE,NA
broom,6601461131c5def1d726da6a3be3fcbc,Fixed bug in `augment.glm()` where the `.std.resid` column always contained standardized deviance residuals regardless of the value passed to the `type.residuals` argument (#1147).,1,13,FALSE,NA
broom,5a12fff2f47d9f02b0d198f1406530bc,Addressed test failures on R-devel.,1,14,FALSE,NA
broom,5fa5cca44b9924d03121cc809c4bb8e5,Fixed bug in `tidy.multinom()` where the `conf.level` argument would be ignored.,1,15,FALSE,NA
broom,b7be4e0173a1dad0d6a8f4a66f8eb25f,The default `data` argument for `augment.coxph()` and `augment.survreg()` has been transitioned from `NULL` to `model.frame(x)` (#1126 by `@​capnrefsmmat`).,1,16,FALSE,NA
broom,5175f3908f9c8488e0362d1f89beaaa7,"Migrated 'ggplot2' from strong to weak dependency, i.e. moved from `Imports` to `Suggests`.",1,17,FALSE,NA
broom,7a7646b02ace728c53b09dd4a5d9bb99,"Fixed a bug where `augment()` results would not include residuals when the response term included a function call (#1121, #946, #937, #124).",1,18,FALSE,NA
broom,bd6a6db49067a7f65458ba6d4b38106f,Improves performance of `tidy.lm()` and `tidy.glm()` for full-rank fits (#1112 by `@​capnrefsmmat`).,1,19,FALSE,NA
broom,5c38bc019a4ca8d9aaff85db02f476ca,"Moves forward with deprecation of tidiers for sparse matrices outputted from the Matrix package, initially soft-deprecated in broom 0.5.0. The Matrix tidiers were light wrappers around coercion methods that will now be deprecated from Matrix itself in the upcoming 1.4-2 release. The affected methods are `tidy.sparseMatrix()`, `tidy.dgCMatrix()`, and `tidy.dgTMatrix()`. Note that `tidy.confusionMatrix()`, for relevant objects outputted from the caret package, is unaffected (#1113).",1,20,FALSE,NA
broom,753a3957f10e417eb16740bf49057943,`tidy.anova()` works again with `anova` objects from the `lme4` package (broken by addition of the `terms` column in the previous release),1,21,FALSE,NA
broom,5f52f1dc56c1aad2e09778d2358caa80,Adds minimal ellipsis checking to warn on commonly misspecified arguments passed through ellipses. Notably:,1,22,FALSE,NA
broom,5f52f1dc56c1aad2e09778d2358caa80,• `tidy()` methods will now warn when supplied an `exponentiate` argument if it will be ignored.,2,23,FALSE,Adds minimal ellipsis checking to warn on commonly misspecified arguments passed through ellipses. Notably:
broom,5f52f1dc56c1aad2e09778d2358caa80,• `augment()` methods will now warn when supplied a `newdata` argument if it will be ignored.,2,24,FALSE,Adds minimal ellipsis checking to warn on commonly misspecified arguments passed through ellipses. Notably:
broom,58b9e43861f9eee342f66b7ee2b67adb,"The warning regarding tidiers only maintained via dispatch to `lm` and `glm` is now displayed only once per session, per unique dispatch. That is, if a `class_a` object is tidied using a `(g)lm` method, broom will not warn when tidying `class_a` objects for the rest of the session, but if a `class_b` object is tidied using a `(g)lm` method in the same session, broom will warn again (#1101).",1,25,FALSE,NA
broom,95cbc371e52094e049653ef62aed00a4,Add `exponentiate` argument to `tidy.boot()` (#1039).,1,26,FALSE,NA
broom,38ce9c6445c5499cdc56b9adb0d6ef61,Update in `tidy.htest()` converting matrix-columns to vector-columns (#1081).,1,27,FALSE,NA
broom,35eb45c19c4c1ce940db35c53014036a,Address failures in `tidy.glht()` with `conf.int = TRUE` (#1103).,1,28,FALSE,NA
broom,517dc97047d703fa7b158b9072e92e7d,Address failures in `tidy.zoo()` when input data does not have `colnames` (#1080).,1,29,FALSE,NA
broom,20c9a5186b36b1f101d439b0509b5192,Transition tidiers for bivariate linear or spline-based interpolation---using list tidiers to interface with objects from the akima package is now considered off-label. See the interp package for a FOSS alternative.,1,30,FALSE,NA
broom,9d6eaf9118c5654ec2de5febb93d8a51,"Address failures in `tidy.svyolr()` when `p.values = TRUE`. Instead of aliasing `tidy.polr()` directly, `tidy.svyolr()` lightly wraps that method and warns if `p.values` is supplied (#1107).",1,31,FALSE,NA
broom,40ba60498bd13a0f64333716eb081b82,Adds a `term` column and introduces support for `car::lht()` output in `tidy.anova()` (#1106 by `@​grantmcdermott`).,1,32,FALSE,NA
broom,b7438978f744d50d949c538ba1c9101a,"Adds a dedicated `glance.anova` method (which previously dispatched to the\ deprecated `glance.data.frame()` tidier, #1106 by `@​grantmcdermott`).",1,33,FALSE,NA
broom,61c0cea509d1a57a79b339f6ac6a29cc,Makes many improvements to documentation:,1,34,FALSE,NA
broom,61c0cea509d1a57a79b339f6ac6a29cc,• All tidiers now have example code demonstrating usage in their documentation. Tidiers for base packages as well as selected others also include sample code for visualization of results with ggplot2.,2,35,FALSE,Makes many improvements to documentation:
broom,61c0cea509d1a57a79b339f6ac6a29cc,"• Code examples in the documentation largely now follow consistent style---these changes were made largely to reflect the tidyverse style guide, addressing spacing, object naming, and commenting, among other things.",2,36,FALSE,Makes many improvements to documentation:
broom,61c0cea509d1a57a79b339f6ac6a29cc,• Examples previously marked with `\dontrun` or `\donttest` have been workshopped to run reliably.,2,37,FALSE,Makes many improvements to documentation:
broom,c71b85c34658248fecdaf19b435cb569,Clarifies errors and warnings for deprecated and unmaintained tidiers.,1,38,FALSE,NA
broom,3dccb76a0fabbe52155c342d7450db6b,Ensures that tidiers are placed in files named according to the model-supplying package rather than the model object class for easier navigability of the source code.,1,39,FALSE,NA
broom,67d084fc9fd5cbd8225ac206952fac9d,"Fix `glance.fixest` error when model includes only fixed effects and no regressors (`#1018` by `@​arcruz0`, `#1088` by `@​vincentarelbundock`).",1,40,FALSE,NA
broom,7680af3adaa58198d5ca3373532e6a8b,"Address excessive messaging from `tidy.speedlm` (`#1084` by `@​cgoo4`, `#1087` by `@​vincentarelbundock`).",1,41,FALSE,NA
broom,690a3c77986e3eabb75f349d4608e4f2,"Add `nobs` column to the output of `glance.svyglm` (`#1085` by `@​fschaffner`, `#1086` by `@​vincentarelbundock`).",1,42,FALSE,NA
broom,a11ff5d70d2c504c7dfece75163797f1,Ensure `tidy.prcomp` description entries use consistent punctuation (`#1072` by `@​PursuitOfDataScience`).,1,43,FALSE,NA
broom,b8badaec3d8ddafefdfe7a0d7e468cf4,Address breaking changes in `glance.fixest` and `tidy.btergm`.,1,44,FALSE,NA
broom,6708a80e22504d69a77f2990f2ea4272,Simplify handling of `MASS::polr` output in the corresponding `tidy` and `augment` methods.,1,45,FALSE,NA
broom,38aae5b715a7253a7988843a469b6255,Align continuous integration with current standards in tidymodels packages.,1,46,FALSE,NA
broom,edd98a9a4f5b42d30316aca4d890a965,Addressed issue with the ordering of original observations in `augment.rqs`. Now function preserves the original `data.frame` names also when the input `data.frame` only has one column (`#1052` by `@​ilapros`).,1,47,FALSE,NA
broom,46b2ca8a45be89abe5fdb94860c7389b,Addressed warning from `tidy.rma` when `x$ddf` has length greater than 1 (`#1064` by `@​wviechtb`).,1,48,FALSE,NA
broom,58ff325d44f2732505b9c45a5d84ea8a,Fix errors in `glance.lavaan` in anticipation of upcoming `tidyr` release (`#1067` by `@​DavisVaughan`).,1,49,FALSE,NA
broom,efe7e35a05eff2fcf2c6bd183aea3654,Corrected the confidence interval in `tidy.crr()`. The `tidy.crr(conf.level=)` argument was previously ignored (`#1068` by `@​ddsjoberg`).,1,50,FALSE,NA
broom,ec19d3c0e9bbb9f961c86ff68b47b2e9,Clarifies error when `pysch::mediate` output is dispatched to `tidy.mediate` (`#1037` by `@​LukasWallrich`).,1,51,FALSE,NA
broom,70b1852d8d8039f2ccf98d23a11fcd66,Allows user to specify confidence level for `tidy.rma` (`#1041` by `@​TarenSanders`),1,52,FALSE,NA
broom,6f705de579448bb58038554157d4651e,Clarifies documentation related to usage of `augment_columns()`; most package users should use `augment()` in favor of `augment_columns()`. See `?augment_columns` for more details.,1,53,FALSE,NA
broom,9cf9d8ef8b9e0babb9995279e1fbdb14,Extends support for `emmeans` by fixing non-standard column names in case of asymptotically derived inferential statistics. (`#1046` by `@​crsh`),1,54,FALSE,NA
broom,df84a55c1aa10983a738ad94bc9394c3,"Fixes use of index columns in `augment.mlogit` and adds `.resid` column to output. (`#1045`, `#1053`, `#1055`, and `#1056` by `@​jamesrrae` and `@​gregmacfarlane`)",1,55,FALSE,NA
broom,fe0c64b42cfde1098735acd220b5dbef,Correct column naming of standard error measures in `glance.survfit()`.,1,56,FALSE,NA
broom,f9ba635f03ccfd0889b4fee2fd440e03,Various bug fixes and improvements to documentation.,1,57,FALSE,NA
broom,180f215a6f626869586209e09d1fb317,"Fixes confidence intervals in `tidy.crr()`, which were previously exponentiated when `exponentiate = FALSE` (`#1023` by `@​leejasme`)",1,58,FALSE,NA
broom,601e5b6db08cd41ccb9cc3a646fc1fd7,"Deprecates `Rchoice` tidiers, as the newest 0.3-3 release requires R 4.0+ and does not re-export needed generics.",1,59,FALSE,NA
broom,16b7b29979efe66643eed6fb6b266978,Updates to `ergm` tidiers in anticipation of changes in later releases. (`#1034` by `@​krivit`),1,60,FALSE,NA
broom,fc35eb94dde9f79eb17c5d87e89ee914,Fixed bug in `glance.ergm` related to handling of MCMC details.,1,61,FALSE,NA
broom,cdd78b0ef0c347392702a14cd36e929a,Address breakages in unit tests for {fixest} tidiers.,1,62,FALSE,NA
broom,f73c21e0d52cadd0b3a17f28fce20365,Fixed bug in `tidy.epi.2by2` that resulted in errors with new version of `epiR` (`#1028` by `@​nt-williams`),1,63,FALSE,NA
broom,1b67bf1e48ab738e94a241075b068e43,Added `exponentiate` argument to `tidy.gam()` tidier applicable for parametric terms (`#1013` by `@​ddsjoberg`),1,64,FALSE,NA
broom,194c5f5d3ba1238c6135e792ba5ceb5a,Added `exponentiate` argument to `tidy.negbin()` tidier (`#1011` by `@​ddsjoberg`),1,65,FALSE,NA
broom,88b357ff2ddf60cf69697fb9aa1d0f3e,Fixed failures in `spdep` tidiers following breaking changes in the most recent release,1,66,FALSE,NA
broom,f96f6bb2366a8fd7af487fc26a62aaef,Various bug fixes and improvements to documentation,1,67,FALSE,NA
broom,9c52e32151ff35f60a5268a078706cac,Fixed bug in `augment` tidiers resulting in `.fitted` and `.se.fit` array columns.,1,68,FALSE,NA
broom,6293f872009e58080d280612fbfd3512,Fixed bug that made column `y` non-numeric after `tidy_xyz` (`#973` by `@​jiho`),1,69,FALSE,NA
broom,2b83cd6869783f524d147ae403986799,Added tidiers for `MASS:glm.nb` (`#998` by `@​joshyam-k`),1,70,FALSE,NA
broom,8818df3ab84abb765b9a61883462a8ac,Fixed bug in `tidy.fixest` that sometimes prevented arguments like `se` from being used (`#1001` by `@​karldw`),1,71,FALSE,NA
broom,9552b7f1ad58c9ab51c2740bae55003d,Fixed bug in `tidy.fixest` that resulted in errors when columns with name `x` are present (`#1007` by `@​grantmcdermott`),1,72,FALSE,NA
broom,70c9441d1f55e70bed5aa5590f5e8f38,Moved forward with planned deprecation of `gamlss` tidiers in favor of those provided in `broom.mixed`,1,73,FALSE,NA
broom,c43cdf1df2619a4266a616187ec69dd5,Various bug fixes and improvements to documentation,1,74,FALSE,NA
broom,a2a8cfe37024506d202ba3d56961dc0a,Fixed bug in the `nnet::multinom` tidier in the case that the response variable has only two levels (`#993` by `@​vincentarelbundock` and `@​hughjonesd`),1,75,FALSE,NA
broom,2b64b51cab425daddcfb87787a60be97,Various bug fixes and improvements to documentation,1,76,FALSE,NA
broom,9bf4cbbfaade84aca2402f7dd7a1a8ea,Add tidiers for `Rchoice` objects (`#961` by `@​vincentarelbundock` and `@​Nateme16`),1,77,FALSE,NA
broom,3bb43db31c8cdbb5b5508dbcbfabc178,Add tidiers for objects produced by `car::leveneTest` (`#968` by `@​vincentarelbundock` and `@​mkirzon`),1,78,FALSE,NA
broom,0511a051c0b03c2ce5f96a8323010917,Add tidiers for objects produced by `cmprsk::crr` (`#971` and `#552` by `@​vincentarelbundock` and `@​margarethannum`),1,79,FALSE,NA
broom,a0b3ebf6c2b95cd77d1be2d8261e8c96,Add an `augment()` method for `gam` objects (`#975` and `#645` by `@​vincentarelbundock`),1,80,FALSE,NA
broom,8d9db422cabf66705fee50f73a29e6ab,Add tidiers for `vars` objects (`#979` and `#161` by `@​vincentarelbundock` and `@​Diego-MX`),1,81,FALSE,NA
broom,50ffad387d6b80a30d7f5c865f321460,`tidy.emmGrid` can now return `std.error` and `conf.*` columns at the same time. (`#962` by `@​vincentarelbundock` and `@​jmbarbone`),1,82,FALSE,NA
broom,cbaebcb38a2b77b78b9c2f764bbfd17a,`tidy.garch` can now produce confidence intervals (`#964` by `@​vincentarelbundock` and `@​IndrajeetPatil`),1,83,FALSE,NA
broom,b9df8e4f08facfa5485d3ec626759806,`tidy.coxph` can now report confidence intervals on models utilizing penalized/clustering terms (`#966` by `@​vincentarelbundock` and `@​matthieu-faron`),1,84,FALSE,NA
broom,8036a0f2cad53c8d2f13dd6d7a6a21fb,`augment.lm` now works when some regression weights are equal to zero (`#965` by `@​vincentarelbundock` and `@​vnijs`),1,85,FALSE,NA
broom,9e57a5a023dbc5d3d45350b000b26c4f,"`tidy.coxph` can now handle models utilizing penalized/clustering terms (`#966` and `#969` by `@​vincentarelbundock`, `@​matthieu-faron`, and `@​KZARCA`)",1,86,FALSE,NA
broom,721c057160aff26ad115476f278bde7a,Fix bug in `tidy.speedglm` on R 4.0.0+ (`#974` by `@​uqzwang`),1,87,FALSE,NA
broom,b266c80f3174640e3e2201eb6fdbb4b3,tidy.multinom works with matrix response (`#977` and `#666` by `@​vincentarelbundock` and `@​atyre2`),1,88,FALSE,NA
broom,f4ece5c36856a2e93aa5653c9b92dbe4,Various bug fixes and improvements to documentation and errors.,1,89,FALSE,NA
broom,c13d7c16158e6e2dfd10f8e7ce06776b,Restores tidiers for `summary.lm` objects (`#953` by `@​grantmcdermott`),1,90,FALSE,NA
broom,6d21e27a53efa727e26897f52082a965,"Deprecate tidiers for the `lfe` package, which was archived from CRAN.",1,91,FALSE,NA
broom,ab16d7f2a58fe7c57fe1fc77a949c7cc,Various bug fixes and improvements to documentation and errors.,1,92,FALSE,NA
broom,1da90e6f003d2542dd3d7b55748eef63,Various bug fixes and improvements to documentation and errors.,1,93,FALSE,NA
broom,cd621eb46401ba8286faadd37039cf43,Add tidiers for `margins` objects. (`#700` by `@​grantmcdermott`),1,94,FALSE,NA
broom,aefd0f248cb254086b02cc3de9347902,Added tidier methods for `mlogit` objects (`#887` by `@​gregmacfarlane`),1,95,FALSE,NA
broom,c63fa52c74d2a147fd41dec319d048d1,Add `glance.coeftest()` method (`#932` by `@​grantmcdermott`),1,96,FALSE,NA
broom,37d74273c41c3e0723e4287367495646,Extended the `glance.aov()` method to include an `r.squared` column!,1,97,FALSE,NA
broom,b62163fc6e459c74ee4543b18dd6e1bf,`glance.survfit()` now passes `...` to `summary.survfit()` to allow for adjustment of RMST and other measures (`#880` by `@​vincentarelbundock`),1,98,FALSE,NA
broom,26a286377924e233dbafef5bcbad81b5,Several unsupported model objects that subclass `glm` and `lm` now error more informatively.,1,99,FALSE,NA
broom,1b54ca81767feb06afdb75a840078d5d,A number of improvements to documentation throughout the package.,1,100,FALSE,NA
broom,ee41bcd2dd8100fc5a013d01dd3af61e,Fixed `newdata` warning message in `augment.*()` output when the `newdata` didn't contain the response variable---augment methods no longer expect the response variable in the supplied `newdata` argument. (`#897` by `@​rudeboybert`),1,101,FALSE,NA
broom,3873d91a114e4778da686144b8b10470,Fixed a bug related to `tidy.geeglm()` not being sensitive to the `exponentiate` argument (`#867`),1,102,FALSE,NA
broom,d8221c2f3fbeda611dbcaece39fc843e,Fixed `augment.fixest()` returning residuals in the `.fitted` column. The method also now takes a `type.residuals` argument and defaults to the same `type.predict` argument as the `fixest` `predict()` method. (`#877` by `@​karldw`),1,103,FALSE,NA
broom,41810ade49a383c975ff75b314577fd0,"Fix `tidy.felm` confidence interval bug. Replaces ""robust"" argument with ""se.type"". (`#919` by `@​grantmcdermott`; supersedes `#818` by `@​kuriwaki`)",1,104,FALSE,NA
broom,ed213a7ff8fe4cae9415d0d47516b742,Fix a bug in `tidy.drc()` where some term labels would result in the overwriting of entries in the `curve` column (`#914`),1,105,FALSE,NA
broom,d5fcceaf2b68e67cb67f4ec241976ea7,Fixed bug related to univariate zoo series in `tidy.zoo()` (`#916` by `@​WillemVervoort`),1,106,FALSE,NA
broom,9c1244fb1361cd9f7c3140d9b6eb00d5,"Fixed a bug related to `tidy.prcomp()` assigning the wrong PC labels from ""loadings"" and ""scores"" matrices (`#910` by `@​tavareshugo`)",1,107,FALSE,NA
broom,365109bb67e0bf8a62c8888f01814278,Fixed `tidy.polr()` bug where p-values could only be returned if `exponentiate = FALSE`.,1,108,FALSE,NA
broom,52b393bf2356787bd95cb9b6d395bbf2,"We have changed how we report degrees of freedom for `lm` objects (#212, #273). This is especially important for instructors in statistics courses. Previously the `df` column in `glance.lm()` reported the rank of the design matrix. Now it reports degrees of freedom of the numerator for the overall F-statistic. This is equal to the rank of the model matrix minus one (unless you omit an intercept column), so the new `df` should be the old `df` minus one.",1,109,FALSE,NA
broom,a6e488a472b44e7c57c51b8cebb476db,"We are moving away from supporting `summary.*()` objects. In particular, we have removed `tidy.summary.lm()` as part of a major overhaul of internals. Instead of calling `tidy()` on `summary`-like objects, please call `tidy()` directly on model objects moving forward.",1,110,FALSE,NA
broom,445018be533eb00d9b5ba4992524f302,"We have removed all support for the `quick` argument in `tidy()` methods. This is to simplify internals and is for maintainability purposes. We anticipate this will not influence many users as few people seemed to use it. If this majorly cramps your style, let us know, as we are considering a new verb to return only model parameters. In the meantime, `stats::coef()` together with `tibble::enframe()` provides most of the functionality of `tidy(..., quick = TRUE)`.",1,111,FALSE,NA
broom,35fa995dac9e134c3f7bc4a796c99d6f,"All `conf.int` arguments now default to `FALSE`, and all `conf.level` arguments now default to `0.95`. This should primarily affect `tidy.survreg()`, which previously always returned confidence intervals, although there are some others.",1,112,FALSE,NA
broom,400296505386052c5e95423084c38f5c,"Tidiers for `emmeans`-objects use the arguments `conf.int` and `conf.level` instead of relying on the argument names native to the `emmeans::summary()`-methods (i.e., `infer` and `level`). Similarly, `multcomp`-tidiers now include a call to `summary()` as previous behavior was akin to setting the now removed argument `quick = TRUE`. Both families of tidiers now use the `adj.p.value` column name when appropriate. Finally, `emmeans`-, `multcomp`-, and `TukeyHSD`-tidiers now consistently use the column names `contrast` and `null.value` instead of `comparison`, `level1` and `level2`, or `lhs` and `rhs` (see #692).",1,113,FALSE,NA
broom,9105ac5b8e22565d498fd7c5e3677e10,"Tidier methods for data frames, rowwise data frames, vectors and matrices",1,114,FALSE,NA
broom,0f8bb3fbd9c51f97c1e6ae3d4c2518a0,`bootstrap()`,1,115,FALSE,NA
broom,12e02c323988144c4cb7b7245f689c4c,`confint_tidy()`,1,116,FALSE,NA
broom,33d74af5ebafcb74466f4039a918d7c9,`fix_data_frame()`,1,117,FALSE,NA
broom,1f676ad3b37e5caa3d2749c8193bbf0f,`finish_glance()`,1,118,FALSE,NA
broom,08b06c37f46c2f39565088b67c877f6e,`augment.glmRob()`,1,119,FALSE,NA
broom,f555b34fc4d0dd764653279fa347e335,`tidy.table()` and `tidy.ftable()` have been deprecated in favor of `tibble::as_tibble()`,1,120,FALSE,NA
broom,eed413319082c5be6e29733240f31b10,`tidy.summaryDefault()` and `glance.summaryDefault()` have been deprecated in favor of `skimr::skim()`,1,121,FALSE,NA
broom,185dfc80918dc7111e3cafb865891508,`tidy.brmsfit()`,1,122,FALSE,NA
broom,4699ae515e0c0791b1f58a387a3a3cc9,"`tidy.merMod()`, `glance.merMod()`, `augment.merMod()`",1,123,FALSE,NA
broom,fe6b27c17238bf9db115fe386f865256,"`tidy.lme()`, `glance.lme()`, `augment.lme()`",1,124,FALSE,NA
broom,a8495c9a8e44e8fb1487edcafc3bf2ef,"`tidy.stanreg()`, `glance.stanreg()`",1,125,FALSE,NA
broom,07c970f7fc0236459b5ebc1b72ed0d57,"`tidyMCMC()`, `tidy.rjags()`, `tidy.stanfit()`",1,126,FALSE,NA
broom,77b039d6b265da46d1c421d23ea53926,"`augment.factanal()` now returns a tibble with columns names `.fs1`, `.fs2`, ..., instead of `factor1`, `factor2`, ... (#650)",1,127,FALSE,NA
broom,c986f08507641c5d08734fbb3209b1b8,"We have renamed the output of `augment.htest()`. In particular, we have renamed the `.residuals` column to `.resid` and the `.stdres` to `.std.resid` for consistency. These changes will only affect chi-squared tests.",1,128,FALSE,NA
broom,1f5a67682bdf56d7845e9d4ea3db1971,`tidy.ridgelm()` now always return a `GCV` column and never returns an `xm` column. (#533 by @​jmuhlenkamp),1,129,FALSE,NA
broom,522f01e2780f73635b5b655be587cc31,`tidy.dist()` no longer supports the `upper` argument.,1,130,FALSE,NA
broom,8264dfded5bf1ab13f1bc4da0e992817,"If you pass a dataset to `augment()` via the `data` or `newdata` arguments, you are now guaranteed that the augmented dataset will have exactly the same number of rows as the original dataset. This differs from previous behavior primarily when there are missing values. Previously `augment()` would drop rows containing `NA`. This should no longer be the case.",1,131,FALSE,NA
broom,515ecd66025dfa32874fbdb10a559ce5,`augment.*()` methods no longer accept an `na.action` argument.,1,132,FALSE,NA
broom,db2e9fad03cfbbc08a1b1f4552348807,"In previous versions, several `augment.*()` methods inherited the `augment.lm()` method, but required additions to the `augment.lm()` method itself. We have shifted away from this approach in favor of re-implementing many `augment.*()` methods as standalone methods making use of internal helper functions. As a result, `augment.lm()` and some related methods have deprecated (previously unused) arguments.",1,133,FALSE,NA
broom,91be98340c5432b90aae2f0af582eeca,`augment()` tries to give an informative error when `data` isn't the original training data.,1,134,FALSE,NA
broom,5a58fa1f8361f608155d19561af15045,The `.resid` column in the output of `augment().*` methods is now consistently defined as `y - y_hat`,1,135,FALSE,NA
broom,70ee83658dab78bf3d39398ed1a86d9a,`anova` objects from the `car` package (#754),1,136,FALSE,NA
broom,608ce2aa4fa285995186f6304fd79f08,`pam` objects from the `cluster` package (#637 by @​abbylsmith),1,137,FALSE,NA
broom,19141e135651add0b2159726607caddf,`drm` objects from the `drc` package (#574 by @​edild),1,138,FALSE,NA
broom,e5363a4b79363637b34d765c35671e73,`summary_emm` objects from the `emmeans` package (#691 by @​crsh),1,139,FALSE,NA
broom,6a3737eb84fd42f497e79d2254a76eb2,`epi.2by2` objects from the `epiR` package (#711),1,140,FALSE,NA
broom,5eaf1da1fe55d8e0b4d2e4483f690daf,`fixest` objects from the `fixest` package (#785 by @​karldw),1,141,FALSE,NA
broom,eae1c9817f4b62f47a6a53c970900bf4,`regsubsets` objects from the `leaps` package (#535),1,142,FALSE,NA
broom,fd4dd1fc86466e2ddbe3eb76df18d61c,`lm.beta` objects from the `lm.beta` package (#545 by @​mattle24),1,143,FALSE,NA
broom,eb6aec13451c6697d3371edc6a22a57d,"`rma` objects from the `metafor` package (#674 by @​malcolmbarrett, @​softloud)",1,144,FALSE,NA
broom,a6277e71989762ed41ad59db3ecbe0ee,"`mfx`, `logitmfx`, `negbinmfx`, `poissonmfx`, `probitmfx`, and `betamfx` objects from the`mfx` package (#700 by @​grantmcdermott)",1,145,FALSE,NA
broom,d1697b45c83962993eaf39c6328d41ba,"`lmrob` and `glmrob` objects from the `robustbase` package (#205, #505)",1,146,FALSE,NA
broom,a712b80564f42f7cd0f570d46f4764e4,`sarlm` objects from the `spatialreg` package (#847 by @​gregmacfarlane and @​petrhrobar),1,147,FALSE,NA
broom,f50a4af00526ba24dd3edc3d8cc9e20a,`speedglm` objects from the `speedglm` package (#685),1,148,FALSE,NA
broom,f02577720466eae731bce328dfef3420,`svyglm` objects from the `survey` package (#611),1,149,FALSE,NA
broom,de606314e6e510f762bfc463c7bfa49d,`systemfit` objects from the `systemfit` package (by @​jaspercooper),1,150,FALSE,NA
broom,829e171ae9a98b12580f46680f91b029,"We have restored a simplified version of `glance.aov()`, which used to inherit from the `glance.lm()` method and now contains only the following columns: `logLik`, `AIC`, `BIC, deviance`, `df.residual`, and `nobs` (see #212). Note that `tidy.aov()` gives more complete information about degrees of freedom in an `aov` object.",1,151,FALSE,NA
broom,5e53f4530e19256a84edecf6a11b2859,`tidy.felm()` now has a `robust = TRUE/FALSE` option that supports robust and cluster standard errors. (#781 by @​kuriwaki),1,152,FALSE,NA
broom,3785dbbab527500de740d9c04d96f904,Make `.fitted` values respect `type.predict` argument of `augment.clm()`. (#617),1,153,FALSE,NA
broom,ff45c9328637d41606c641f449b84be1,Return factor rather than numeric class predictions in `.fitted` of `augment.polr()`. (#619) Add an option to return `p.values` in `tidy.polr()`. (#833 by @​LukasWallrich),1,154,FALSE,NA
broom,aab984fd2973e22fb5dfcd646ee36df6,`tidy.kmeans()` now uses the names of the input variables in the output by default. Set `col.names = NULL` to recover the old behavior.,1,155,FALSE,NA
broom,20acbd16cfbdd54e04110b87d3d9bef2,"Previously, F-statistics for weak instruments were returned through `glance.ivreg()`. F-statistics are now returned through `tidy.ivreg(instruments = TRUE)`. Default is `tidy.ivreg(instruments = FALSE)`. `glance.ivreg()` still returns Wu-Hausman and Sargan test statistics.",1,156,FALSE,NA
broom,2013ae022ed6a841b5c9f8109b4fd5df,`glance.biglm()` now returns a `df.residual` column.,1,157,FALSE,NA
broom,464b20c2427c9fe4e0f3c2a623dee4ee,"`tidy.prcomp()` argument `matrix` gained new options `""scores""`, `""loadings""`, and `""eigenvalues""`. (#557 by @​GegznaV)",1,158,FALSE,NA
broom,087f277b1fb50ca243069f50a90a176e,`tidy_optim()` now provides the standard error if the Hessian is present. (#529 by @​billdenney),1,159,FALSE,NA
broom,b89b9b62e05d334f76510a745f9fd8b4,`tidy.htest()` column names are now run through `make.names()` to ensure syntactic correctness. (#549 by @​karissawhiting),1,160,FALSE,NA
broom,98592134b40c2a71ae86fd45be6e3857,`tidy.lmodel2()` now returns a `p.value` column. (#570),1,161,FALSE,NA
broom,1c18c92d591ac387345bf6e36c0877f7,`tidy.lsmobj()` gained a `conf.int` argument for consistency with other tidiers.,1,162,FALSE,NA
broom,57b312b1c426d1863f78fbe16b8f9b15,`tidy.polr()` now returns p-values if `p.values` is set to TRUE and the model does not contain factors with more than two levels.,1,163,FALSE,NA
broom,ffd05b992cd6b7d2325880c0954e3cba,`tidy.zoo()` now doesn't change column names that have spaces or other special characters (previously they were converted to `data.frame` friendly column names by `make.names`.),1,164,FALSE,NA
broom,c01cf884f53e7d3d6f4ee4a806cc1632,`glance.lavaan()` now uses lavaan extractor functions instead of subsetting the fit object manually. (#835),1,165,FALSE,NA
broom,f4bf221ea4dd83cff2d71040a03a73cf,`glance.lm()` no longer errors when only an intercept is provided as an explanatory variable. (#865),1,166,FALSE,NA
broom,db502e3a3f8ccbef28005755d951ac2a,"Bug fix for `tidy.survreg()` when `robust` is set to `TRUE` in model fitting (#842, #728)",1,167,FALSE,NA
broom,26060fc029c0f6e90b1a8bd55b52bef0,Bug fixes in `glance.lavaan()`: address confidence interval error (#577) and correct reported `nobs` and `norig` (#835),1,168,FALSE,NA
broom,033265372483c19d45bbdcdf85151bd4,Bug fix in muhaz tidiers to ensure output is always a `tibble` (#824),1,169,FALSE,NA
broom,790886fce4660f5d907fbc993cc81be4,Several `glance.*()` methods have been refactored in order to return a one-row tibble even when the model matrix is rank-deficient (#823),1,170,FALSE,NA
broom,e16d52fcc0903e4b43a74e64e61e0f52,Bug fix to return confidence intervals correct in `tidy.drc()` (#798),1,171,FALSE,NA
broom,59d48d8fb6a8fc5c56351f0ba7779706,"Added default methods for objects that subclass `glm` and `lm` in order to error more informatively. (#749, #736, #708, #186)",1,172,FALSE,NA
broom,4e08b853d873a320ba4f618cc7bbbb16,Bug fix to allow `augment.kmeans()` to work with masked data (#609),1,173,FALSE,NA
broom,a3052b068b9db6849b0cf6c40a611b38,Bug fix to allow `augment.Mclust()` to work on univariate data (#490),1,174,FALSE,NA
broom,9f3801d8a0bcb35c1426ab8334b34510,Bug fix to allow `tidy.htest()` to supports equal variances (#608),1,175,FALSE,NA
broom,0b1f67ac9b059524b04887dfc62a11ff,Bug fix to better allow `tidy.boot()` to support confidence intervals (#581),1,176,FALSE,NA
broom,2c183dfd91fb97689318617de4d35041,Bug fix for `tidy.polr()` when passed `conf.int = TRUE` (#498),1,177,FALSE,NA
broom,2fd9d0976cdaf27176382557066d1849,"Many `glance()` methods now return a `nobs` column, which contains the number of data points used to fit the model! (#597 by @​vincentarelbundock)",1,178,FALSE,NA
broom,76c2b7a36831189f70ad96fc36bb93c7,"`tidy()` no longer checks for a log or logit link when `exponentiate = TRUE`, and we have refactored to remove extraneous `exponentiate` arguments. If you set `exponentiate = TRUE`, we assume you know what you are doing and that you want exponentiated coefficients (and confidence intervals if `conf.int = TRUE`) regardless of link function.",1,179,FALSE,NA
broom,b031c92a6f2b65036f70f5a7022acb84,We now use `rlang::arg_match()` when possible instead of `arg.match()` to give more informative errors on argument mismatches.,1,180,FALSE,NA
broom,9cf6091aaa4d295d5494fcce49d0e486,The package's site has moved from https://broom.tidyverse.org/ to https://broom.tidymodels.org/.,1,181,FALSE,NA
broom,3f8fe2fb0e890fe41ce24540d4139f25,Revised several vignettes and moved them to the tidymodels.org website. The existing vignettes will now simply link to the revised versions.,1,182,FALSE,NA
broom,a441f43fd67458830e592b602d8334ce,Many improvements to consistency and clarity of documentation.,1,183,FALSE,NA
broom,aa6b6ece7225c6d28d0a0ba443e971a2,Various warnings resulting from changes to the tidyr API in v1.0.0 have been fixed. (#870),1,184,FALSE,NA
broom,8faf135d57590f5965e6aa456786b7b5,Removed dependencies on reshape2 and superseded functions in dplyr.,1,185,FALSE,NA
broom,6e0cde0dc47ebab98a5a3dabaf1d67c1,All documentation now links to help files rather than topics.,1,186,FALSE,NA
broom,19812ea2b4780a194621dbc4f4ce4034,Moved core tests to the `modeltests` package.,1,187,FALSE,NA
broom,a21ceb06d50d3b47a5962e7982ee9363,"Generally, after this release, the broom dev team will first ask that attempts to add tidier methods supporting a model object are first directed to the model-owning package. An article describing best practices in doing so can be found on the {tidymodels} website at https://www.tidymodels.org/learn/develop/broom/, and we will continue adding additional resources to that article as we develop them. In the case that the maintainer is uninterested in taking on the tidier methods, please note this in your issue or PR.",1,188,FALSE,NA
broom,32d66134bcee0d03e270810aed818b71,Added a new vignette discussing how to implement new tidier methods in non-broom packages.,1,189,FALSE,NA
broom,cd47433ac3e9f92f20274a06f5943dd5,Fix failing CRAN checks to due `tibble 3.0.0` release. Removed `xergm` dependency.,1,190,FALSE,NA
broom,feb1b01b33072edc7928dc8c4babec45,Remove tidiers for robust package and drop robust dependency (temporarily),1,191,FALSE,NA
broom,9d09bec247fd1ab76cd919ef4ba8f147,Fixes failing CRAN checks as the joineRML package has been removed from CRAN,1,192,FALSE,NA
broom,3aba83e79584b2dfe1e9d8b68e819dea,Fixes failing CRAN checks due to new matrix classing in R 4.0.0,1,193,FALSE,NA
broom,21f99da9e23abda31abce44233addb46,Fixes failing CRAN checks,1,194,FALSE,NA
broom,0b59a3aa83573312971cbd5291ce1a84,Changes to accommodate ergm 3.10 release. `tidy.ergm()` no longer has a `quick` argument. The old default of `quick = FALSE` is now the only option.,1,195,FALSE,NA
broom,509d8e258558419cfdc785bf8dff773f,"`tidy()`, `glance()` and `augment()` are now re-exported from the generics package.",1,196,FALSE,NA
broom,4224cfc62cd5a9f70db43bf8b17f375e,"subsetting tibbles with `[`, which returns a tibble rather than a vector.",1,198,FALSE,NA
broom,c25780c49b7502a5e83728e180178703,"setting rownames on tibbles, which is deprecated.",1,199,FALSE,NA
broom,28e62761bf0abc67a87a1f0d3d5e3850,"using matrix and vector tidiers, now deprecated.",1,200,FALSE,NA
broom,224c5e3cad6060fdb9a13297242a7c76,handling the additional tibble classes `tbl_df` and `tbl` beyond the `data.frame` class,1,201,FALSE,NA
broom,7ce80928bcf06f03992d5078409b9f53,linking to defunct documentation files -- broom recently moved all tidiers to a `roxygen2` template based documentation system.,1,202,FALSE,NA
broom,4516928f5739b84c186d69478d6fa7f4,"`vignette(""available-methods"", package = ""broom"")` contains a table detailing which tidying methods are available",1,203,FALSE,NA
broom,636b9b961d95dabc826f1658c95be0e8,"`vignette(""adding-tidiers"", package = ""broom"")` is an *in-progress* guide for contributors on how to add new tidiers to broom",1,204,FALSE,NA
broom,fe661dd16b93c5dcdff10e4708b78690,"`vignette(""glossary"", package = ""broom"")` contains tables describing acceptable argument names and column names for the *in-progress* new specification.",1,205,FALSE,NA
broom,507de947995685ee2ba0680b35324c6e,"`vignette(""bootstrapping"", package = ""broom"")` now relies on the `rsample` package and a `tidyr::nest`-`purrr::map`-`tidyr::unnest` workflow. This is now the recommended workflow for working with multiple models, as opposed to the old `dplyr::rowwise`-`dplyr::do` based workflow.",1,206,FALSE,NA
broom,c0f10f9adf025998b2d437ddcb1c5aeb,Matrix and vector tidiers have been deprecated in favor of `tibble::as_tibble` and `tibble::enframe`,1,207,FALSE,NA
broom,e9a38aec2129c0f4df871dd4db58201d,Dataframe tidiers and rowwise dataframe tidiers have been deprecated,1,208,FALSE,NA
broom,0d72909209749c880411a36829a49228,`bootstrap()` has been deprecated in favor of the `rsample`,1,209,FALSE,NA
broom,937b77fe9d53ee9736760a89b3cdfc39,`inflate` has been removed from `broom`,1,210,FALSE,NA
broom,28edccae82eeb269c21e9f171dea9b3b,The `alpha` argument has been removed from `quantreg` tidy methods,1,211,FALSE,NA
broom,6538d75d7e84e575f917bad3f0c9096c,"The `separate.levels` argument has been removed from `tidy.TukeyHSD`. To obtain the effect of `separate.levels = TRUE`, users may `tidyr::separate` after tidying. This is consistent with the `multcomp` tidier behavior.",1,212,FALSE,NA
broom,ca4cef39094e539909a10d08880a8500,"The `fe.error` argument was removed from `tidy.felm`. When fixed effects are tidier, their standard errors are now always included.",1,213,FALSE,NA
broom,a6f7b4a791ad3c639eee1dd6c603600d,The `diag` argument in `tidy.dist` has been renamed `diagonal`,1,214,FALSE,NA
broom,a5f6d1a8e0ca876cf9df34d70e721aea,Advice to help beginners make PRs (#397 by @​karldw),1,215,FALSE,NA
broom,d0fd23423c7229a9448f7223f21cc36b,"`glance` support for `arima` objects fit with `method = ""CSS""` (#396 by @​josue-rodriguez)",1,216,FALSE,NA
broom,a4bd16ac259ffb8c13aa28366166b0d3,A bug fix to re-enable tidying `glmnet` objects with `family = multinomial` (#395 by @​erleholgersen),1,217,FALSE,NA
broom,df958b05cc2bf51499fb5a8416a91cde,A bug fix to allow tidying `quantreg` intercept only models (#378 by @​erleholgersen),1,218,FALSE,NA
broom,481b4131530ff762fdf5c6d0046145f8,A bug fix for `aovlist` objects (#377 by @​mvevans89),1,219,FALSE,NA
broom,74ecdb1f7ed810af4d73b11a74a75a90,Support for `glmnetUtils` objects (#352 by @​Hong-Revo),1,220,FALSE,NA
broom,c6056f8ad330b42f00021a3782c0aee8,A bug fix to allow `tidy_emmeans` to handle column names with dashes (#351 by @​bmannakee),1,221,FALSE,NA
broom,534cb2028cded9568771627e58a52048,`augment.felm` no longer returns `.fe_` and `.comp` columns,1,222,FALSE,NA
broom,828967548db6e6d44dbcc65dc2fa24c9,Support saved formulas in `augment.felm` (#347 by @​ShreyasSingh),1,223,FALSE,NA
broom,967bc99e02f0704ec35f5041ef5d93b5,`confint_tidy` now drops rows of all `NA` (#345 by @​atyre2),1,224,FALSE,NA
broom,1828fcb7c605b1decbd585eca1e26e4f,A new tidier for `caret::confusionMatrix` objects (#344 by @​mkuehn10),1,225,FALSE,NA
broom,85fd2f11aad8d464f26bf60d34a1ab95,Tidiers for `Kendall::Kendall` objects (#343 by @​cimentadaj),1,226,FALSE,NA
broom,53f6b7f77c0c8d4e09934d9ee407a715,A new tidying method for `car::durbinWatsonTest` objects (#341 by @​mkuehn10),1,227,FALSE,NA
broom,1009293817e7d284628dbe1a92bfc4b9,`glance` throws an informative error for `quantreg:rq` models fit with multiple `tau` values (#338 by @​bfgray3),1,228,FALSE,NA
broom,3d5aa0bb38df703449cc49410e9bcd91,`tidy.glmnet` gains the ability to retain zero-valued coefficients with a `return_zeros` argument that defaults to `FALSE` (#337 by @​bfgray3),1,229,FALSE,NA
broom,f997eec29e54042bcc910305299c16a8,`tidy.manova` now retains a `Residuals` row (#334 by @​jarvisc1),1,230,FALSE,NA
broom,7f7729425d13595cfb983dd8026846bc,"Tidiers for `ordinal::clm`, `ordinal::clmm`, `survey::svyolr` and `MASS::polr` ordinal model objects (#332 by @​larmarange)",1,231,FALSE,NA
broom,48096ac126341c5b90f0e3f4938a5019,Support for `anova` objects from `car::Anova` (#325 by @​mariusbarth),1,232,FALSE,NA
broom,51bb5aeb1cab1ec1a353c002288d798a,Tidiers for `tseries::garch` models (#323 by @​wilsonfreitas),1,233,FALSE,NA
broom,9a9ec53e798d7aa3241d81e4aa6b26b0,Removed dependency on `psych` package (#313 by @​nutterb),1,234,FALSE,NA
broom,931a5f55b1f081156f20ab0ce8073f1f,Improved error messages (#303 by @​michaelweylandt),1,235,FALSE,NA
broom,1398e44f4b64e232ccf2674ddf03c376,Compatibility with new `rstanarm` and `loo` packages (#298 by @​jgabry),1,236,FALSE,NA
broom,30c594817d5c0f0dffa6935752434d43,Support for tidying lists return by `irlba::irlba`,1,237,FALSE,NA
broom,395c09ca90e813bdc7dbb34c1c4bc094,A truly huge increase in unit tests (#267 by @​dchiu911),1,238,FALSE,NA
broom,c7bbd5eff910bc4016594d3ee6da3343,Bug fix for `tidy.prcomp` when missing labels (#265 by @​corybrunson),1,239,FALSE,NA
broom,0bd56ee5e4c1a5c8ecb5a4e7c25eca3b,Added a `pkgdown` site at https://broom.tidyverse.org/ (#260 by @​jayhesselberth),1,240,FALSE,NA
broom,b88d589a98d0752a8c14b32de365e59d,Added tidiers for `AER::ivreg` models (#247 by @​hughjonesd),1,241,FALSE,NA
broom,e12d9881ad4df25363c7327d5cab141e,Added tidiers for the `lavaan` package (#233 by @​puterleat),1,242,FALSE,NA
broom,e3de673e3beeb9db90a1c286e3598b0b,Added `conf.int` argument to `tidy.coxph` (#220 by @​larmarange),1,243,FALSE,NA
broom,ab063400727ac4235222460b247e8649,Added `augment` method for chi-squared tests (#138 by @​larmarange),1,244,FALSE,NA
broom,e87a089a9efad3c46277bc2dc94bbc00,changed default se.type for `tidy.rq` to match that of `quantreg::summary.rq()` (#404 by @​ethchr),1,245,FALSE,NA
broom,5139e5655699bf15655b499315ad9dc6,Added argument `quick` for `tidy.plm` and `tidy.felm` (#502 and #509 by @​MatthieuStigler),1,246,FALSE,NA
broom,742cbd0a8937ceeb4d6273c3f085676c,Many small improvements throughout,1,247,FALSE,NA
broom,7ab15f077907a4e5be9ef9913e4b5c81,"Fixed gam tidiers to work with ""Gam"" objects, due to an update in gam 1.15. This fixes failing CRAN tests",1,248,FALSE,NA
broom,c9cee27591cd52d96c5ae8de3fb38f94,Improved test coverage (thanks to #267 from Derek Chiu),1,249,FALSE,NA
broom,87b39f7726ecf9c212240904f95dac27,Changed the deprecated `dplyr::failwith` to `purrr::possibly`,1,250,FALSE,NA
broom,fc33a86668c0af74cd9d801705f594a9,`augment` and `glance` on NULLs now return an empty data frame,1,251,FALSE,NA
broom,07c41fbba4f0214112a1e54c60609e30,Deprecated the `inflate()` function in favor of `tidyr::crossing`,1,252,FALSE,NA
broom,3d354ec9da9b5542fe711a199e6679c2,Fixed confidence intervals in the gmm tidier (thanks to #242 from David Hugh-Jones),1,253,FALSE,NA
broom,d2a4b7ed91c08e3467887084bd27dc6f,Fixed a bug in bootstrap tidiers (thanks to #167 from Jeremy Biesanz),1,254,FALSE,NA
broom,72a2ed474dabe1bd7e1fe3de9f9ce176,Fixed tidy.lm with `quick = TRUE` to return terms as character rather than factor (thanks to #191 from Matteo Sostero),1,255,FALSE,NA
broom,dd4f7565b8cff15621a9d332aa87cf66,Added tidiers for `ivreg` objects from the AER package (thanks to #245 from David Hugh-Jones),1,256,FALSE,NA
broom,2fa3a780f849c644a675d41c0bba1349,Added tidiers for `survdiff` objects from the survival package (thanks to #147 from Michał Bojanowski),1,257,FALSE,NA
broom,430f657f8d583df03fe1dee2eb3ca9df,Added tidiers for `emmeans` from the emmeans package (thanks to #252 from Matthew Kay),1,258,FALSE,NA
broom,4790a0bec8ad49f754e9e19447de5d0b,"Added tidiers for `speedlm` and `speedglm` from the speedglm package (#685, thanks to #248 from David Hugh-Jones)",1,259,FALSE,NA
broom,2000f22439e86410fbc2687644215dbc,Added tidiers for `muhaz` objects from the muhaz package (thanks to #251 from Andreas Bender),1,260,FALSE,NA
broom,ab5db497dacc424f4f0391dbb8cacf2c,Added tidiers for `decompose` and `stl` objects from stats (thanks to #165 from Aaron Jacobs),1,261,FALSE,NA
broom,43a69ae410f5a799beb788d51ee6944b,Added tidiers for `lsmobj` and `ref.grid` objects from the lsmeans package,1,262,FALSE,NA
broom,fb0d14ccf62cdf1687f3edcdde2715a1,Added tidiers for `betareg` objects from the betareg package,1,263,FALSE,NA
broom,fd760535a6999c9336b0aeaa6ffd43d4,Added tidiers for `lmRob` and `glmRob` objects from the robust package,1,264,FALSE,NA
broom,a24a05b455a69f82c9213aeda0f6f91e,Added tidiers for `brms` objects from the brms package (thanks to #149 from Paul Buerkner),1,265,FALSE,NA
broom,aea09019be785aa561b5ca73178d46b1,Fixed tidiers for orcutt 2.0,1,266,FALSE,NA
broom,47382134b40f4190daad7b4cbaad8e0e,Changed `tidy.glmnet` to filter out rows where estimate == 0.,1,267,FALSE,NA
broom,246475dee3cd3994ce9e5bb06e335654,Updates to `rstanarm` tidiers (thanks to #177 from Jonah Gabry),1,268,FALSE,NA
broom,73faf90cfd1543cda5cb37e72fda0d93,Fixed issue with survival package 2.40-1 (thanks to #180 from Marcus Walz),1,269,FALSE,NA
broom,c9d7eab30557ac8befac66c824374872,"Added AppVeyor, codecov.io, and code of conduct",1,270,FALSE,NA
broom,da4238445b16aff2846382174b6a2b33,"Changed name of ""NA's"" column in summaryDefault output to ""na""",1,271,FALSE,NA
broom,6eb932809a29278ff665883e7fe823fc,"Fixed `tidy.TukeyHSD` to include `term` column. Also added `separate.levels` argument, with option to separate `comparison` into `level1` and `level2`",1,272,FALSE,NA
broom,050709a0f2784e3956799edd3b89525e,"Fixed `tidy.manova` to use correct column name for test (previously, always `pillai`)",1,273,FALSE,NA
broom,bfb3d532abade003cf9b769976f404eb,Added `kde_tidiers` to tidy kernel density estimates,1,274,FALSE,NA
broom,b4b2f94f170659578e8a98941b4d9fda,Added `orcutt_tidiers` to tidy the results of `cochrane.orcutt` orcutt package,1,275,FALSE,NA
broom,867d31306b3ab188286615fd64e0e04e,Added `tidy.dist` to tidy the distance matrix output of `dist` from the stats package,1,276,FALSE,NA
broom,cf64c2a91543d87658255e8adf61e1e2,Added `tidy` and `glance` for `lmodel2` objects from the lmodel2 package,1,277,FALSE,NA
broom,596b97bb4ec9bdad4c5a654f4c9becc9,Added tidiers for `poLCA` objects from the poLCA package,1,278,FALSE,NA
broom,cd2ad5290cca3acf8de9da3548cc3ad6,Added tidiers for sparse matrices from the Matrix package,1,279,FALSE,NA
broom,01e5a4572927fc703d7b8c2c4a94fc6a,Added tidiers for `prcomp` objects,1,280,FALSE,NA
broom,e0dae59ab209f5d43cec4e0278359411,Added tidiers for `Mclust` objects from the Mclust package,1,281,FALSE,NA
broom,9326581cb1c7aa04272c04fa1db6a623,Added tidiers for `acf` objects,1,282,FALSE,NA
broom,5b43c2d4ab14f8f1e82025dae7029584,"Fixed to be compatible with dplyr 0.5, which is being submitted to CRAN",1,283,FALSE,NA
broom,d5b381bea928d4f3eea5425718be98b8,"Added tidiers for geeglm, nlrq, roc, boot, bgterm, kappa, binWidth, binDesign, rcorr, stanfit, rjags, gamlss, and mle2 objects.",1,284,FALSE,NA
broom,2e380208da34a9e93ccd3c1c986def90,"Added `tidy` methods for lists, including u, d, v lists from `svd`, and x, y, z lists used by `image` and `persp`",1,285,FALSE,NA
broom,2d3a694d0758516e2944e670b4046dec,"Added `quick` argument to `tidy.lm`, `tidy.nls`, and `tidy.biglm`, to create a smaller and faster version of the output.",1,286,FALSE,NA
broom,901bd67af9188a9eaffc223b43d519db,"Changed `rowwise_df_tidiers` to allow the original data to be saved as a list column, then provided as a column name to `augment`. This required removing `data` from the `augment` S3 signature. Also added `tests-rowwise.R`",1,287,FALSE,NA
broom,2bd2324241f80d823bfecce34c77ee39,Fixed various issues in ANOVA output,1,288,FALSE,NA
broom,8a28e70a2034fe10fab45c74a89601a5,Fixed various issues in lme4 output,1,289,FALSE,NA
broom,bc989451429d818b838a95e07ac11a56,Fixed issues in tests caused by dev version of ggplot2,1,290,FALSE,NA
broom,c92dc7e7428edcc7b54c7001c7c8113c,"Added tidiers for ""plm"" (panel linear model) objects from the plm package.",1,291,FALSE,NA
broom,135b3325a3adbc703f0af7979b501a57,Added `tidy.coeftest` for coeftest objects from the lmtest package.,1,292,FALSE,NA
broom,db4c493ce21c24d8f96ca121cb1840f2,"Set up `tidy.lm` to work with ""mlm"" (multiple linear model) objects (those with multiple response columns).",1,293,FALSE,NA
broom,675685ea8f9e7a6431faedaa7c9eb738,"Added `tidy` and `glance` for ""biglm"" and ""bigglm"" objects from the biglm package.",1,294,FALSE,NA
broom,42b479372048dfaeddbd05608f7985e0,Fixed bug in `tidy.coxph` when one-row matrices are returned,1,295,FALSE,NA
broom,9162e3c47e63b45fa381055f0c350f2c,Added `tidy.power.htest`,1,296,FALSE,NA
broom,6fe1a932abd4b41029c49437e9c6cf23,Added `tidy` and `glance` for `summaryDefault` objects,1,297,FALSE,NA
broom,61ce29055e12c252aa8411e49efb028f,"Added tidiers for ""lme"" (linear mixed effects models) from the nlme package",1,298,FALSE,NA
broom,f032c9deef2edac4d0c6392f5ec79e83,Added `tidy` and `glance` for `multinom` objects from the nnet package.,1,299,FALSE,NA
broom,62d33ceb379167f7d370dc1df4b2a143,"Fixed bug in `tidy.pairwise.htest`, which now can handle cases where the grouping variable is numeric.",1,300,FALSE,NA
broom,550e9cc7d55ce29e5e896171bbbd1847,Added `tidy.aovlist` method. This added `stringr` package to IMPORTS to trim whitespace from the beginning and end of the `term` and `stratum` columns. This also required adjusting `tidy.aov` so that it could handle strata that are missing p-values.,1,301,FALSE,NA
broom,c394839ef595ec11f4f6ddf0717f44a0,Set up `glance.lm` to work with `aov` objects along with `lm` objects.,1,302,FALSE,NA
broom,f940da1adccd811ee9cb1fe010f21bf5,"Added `tidy` and `glance` for matrix objects, with `tidy.matrix` converting a matrix to a data frame with rownames included, and `glance.matrix` returning the same result as `glance.data.frame`.",1,303,FALSE,NA
broom,cb862e7ce943fe65e5230f18c5d6c039,Changed DESCRIPTION Authors@​R to new format,1,304,FALSE,NA
broom,e2e427e589c2e8918e61d011869610e8,Fixed small bug in `felm` where the `.fitted` and `.resid` columns were matrices rather than vectors.,1,305,FALSE,NA
broom,8971ed4e5fb13db56991f5f45c968820,"Added tidiers for `rlm` (robust linear model) and `gam` (generalized additive model) objects, including adjustments to ""lm"" tidiers in order to handle them. See `?rlm_tidiers` and `?gam_tidiers` for more.",1,306,FALSE,NA
broom,25d405317cfc4b5de376d18be324b041,Removed rownames from `tidy.cv.glmnet` output,1,307,FALSE,NA
broom,87a116b7fbf7deec11290bab1e1024e8,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:",1,308,FALSE,NA
broom,87a116b7fbf7deec11290bab1e1024e8,• `lm`,2,309,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,87a116b7fbf7deec11290bab1e1024e8,• `glm`,2,310,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,87a116b7fbf7deec11290bab1e1024e8,• `nls`,2,311,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,87a116b7fbf7deec11290bab1e1024e8,• `merMod` (`lme4`),2,312,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,87a116b7fbf7deec11290bab1e1024e8,• `survreg` (`survival`),2,313,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,87a116b7fbf7deec11290bab1e1024e8,• `coxph` (`survival`),2,314,FALSE,"The behavior of `augment`, particularly with regard to missing data and the `na.exclude` argument, has through the use of the `augment_columns` function been made consistent across the following models:"
broom,66abb910c1937609cf58efc5b816e8a7,"`tidy`, `augment` and `glance` methods were added for `rowwise_df` objects, and are set up to apply across their rows. This allows for simple patterns such as:",1,315,FALSE,NA
broom,ede04b18e439c7ce29f2472707cac5b2,"Added `tidy` and `glance` methods for `Arima` objects, and `tidy` for `pairwise.htest` objects.",1,316,FALSE,NA
broom,7ad8ec588740b4e6b6aaf5fb576fe6b1,"Fixes for CRAN: change package description to title case, removed NOTES, mostly by adding `globals.R` to declare global variables.",1,317,FALSE,NA
broom,a4b5251f697d9321ac31baf4011ec99d,This is the original version published on CRAN.,1,318,FALSE,NA
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,Tidiers have been added for S3 objects from the following packages:,1,319,FALSE,NA
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `lme4`,2,320,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `glmnet`,2,321,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `survival`,2,322,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `zoo`,2,323,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `felm`,2,324,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,6efcbd7cdca0a1efba9c5c7e050ca81d,• `MASS` (`ridgelm` objects),2,325,FALSE,Tidiers have been added for S3 objects from the following packages:
broom,dc40fb4ad7c8bfbc49055701e32ec6ea,"`tidy` and `glance` methods for data.frames have also been added, and `augment.data.frame` produces an error (rather than returning the same data.frame).",1,326,FALSE,NA
broom,df2abba52cea8b6dad04143f38c33745,`stderror` has been changed to `std.error` (affects many functions) to be consistent with broom's naming conventions for columns.,1,327,FALSE,NA
broom,5db5c998d75b98becba96d9323c361c5,"A function `bootstrap` has been added based on this example, to perform the common use case of bootstrapping models.",1,328,FALSE,NA
broom,5f1bbb20c43f37217064eb38090c7891,"Added ""augment"" S3 generic and various implementations. ""augment"" does something different from tidy: it adds columns to the original dataset, including predictions, residuals, or cluster assignments. This was originally described as ""fortify"" in ggplot2.",1,329,FALSE,NA
broom,dbe55382f32e44db4b13bbae63188c2e,"Added ""glance"" S3 generic and various implementations. ""glance"" produces a *one-row* data frame summary, which is necessary for tidy outputs with values like R\^2 or F-statistics.",1,330,FALSE,NA
broom,08d1806eb0ef79d8736c3a3c2af201cf,Re-wrote intro broom vignette/README to introduce all three methods.,1,331,FALSE,NA
broom,a83ae8ceffde635443a01373caa70d56,Wrote a new kmeans vignette.,1,332,FALSE,NA
broom,6d537f8da945678690f82ef446f1c07f,"Added tidying methods for multcomp, sp, and map objects (from fortify-multcomp, fortify-sp, and fortify-map from ggplot2).",1,333,FALSE,NA
broom,5e2f51fd1a4d346cee20f77677234615,"Because this integrates substantial amounts of ggplot2 code (with permission), added Hadley Wickham as an author in DESCRIPTION.",1,334,FALSE,NA
cli,bb5e9a46d1a0f3a3340cc7d743507f27,"`ansi_collapse(x, trunc = 1, style = ""head"")` now indeed show one element if `length(x) == 2`, as documented (@​salim-b, #572).",1,1,FALSE,NA
cli,ef14b1e1c17a4929677d6a5d80f43ac7,"`ansi_collapse()` gains a `sep2` argument to specify a seperate separator for length-two inputs. It defaults to `"" and ""` which, in conjunction with the other defaults, produces a collapsed string that fully adheres to the serial comma rules. (@​salim-b, #569)",1,2,FALSE,NA
cli,de9619ce17d46d762ab35abc3d1e3775,"`ansi_string()` is now an exported function (@​multimeric, #573).",1,3,FALSE,NA
cli,54c9a9f11d0efcd4b59f2d491c0a661a,ANSI hyperlinks are now turned off on the RStudio render plane (#581).,1,4,FALSE,NA
cli,ad35ee17074afb1ed17019823a7253c8,"The progressr progress handler now reports progress correctly (@​HenrikBengtsson, #558).",1,5,FALSE,NA
cli,69146ab7496b7d201843681625709fb4,"New `hash_*sha1()` functions to calculate the SHA-1 hash of strings, objects, files.",1,6,FALSE,NA
cli,b977fec53558af50dc4ea9f088b38fbb,"cli now shows progress bars after one second by default, if they are less than half way at the point. (Or after two seconds, unconditionally, as before.) See the the `cli.progress_show_after` option in `?cli-config` for details (#542).",1,7,FALSE,NA
cli,cba215f31bfd617f8fa086eadb483015,"`format_inline()` now has a new argument `keep_whitespace`, and it keeps whitespace, including newline and form feed characters by default.",1,8,FALSE,NA
cli,1a8c9d4de13eac291c5ba54d81ba76fe,New `keypress()` function to read a single key press from a terminal.,1,9,FALSE,NA
cli,65b3dadeadb77fd047cb41ff6b4798ce,New function `pretty_print_code()` to print function objects with syntax highlighting at the R console.,1,10,FALSE,NA
cli,aeb513c94730d7425474d7774fb2cbf5,`col_*` and `bg_*` functions how handle zero-length input correctly (#532).,1,11,FALSE,NA
cli,787eeffd120972559caa00d23229e35d,New function `ansi_collapse()` to collapse character vectors into a single string.,1,12,FALSE,NA
cli,825a1eab380568be7bcf5924b1431065,"`ansi_strtrim()` now handles some edge cases better, when `ellipsis` has length zero, and when it is wider than `width`.",1,13,FALSE,NA
cli,5f2674cd35db5e317d7dd5422244b999,New `hash_file_md5()` function to calculate the MD5 hash of one or more files.,1,14,FALSE,NA
cli,2d9d734c2ab566d5540c5f2d12dab322,cli has better error messages now.,1,15,FALSE,NA
cli,7b9bca282f6755fc251de47f49910c98,"New `format_inline()` argument: `collapse`, to collapse multi-line output, potentially because of `\f` characters.",1,16,FALSE,NA
cli,afc38ede0fcc79522ed2ef9fc3dd9f4d,New experimental styles to create ANSI hyperlinks in RStudio and terminals that support them. See `?cli::links` for details (#513).,1,17,FALSE,NA
cli,8a8d732293679f30cc0b5d961a65f0d5,Expressions that start and end with a `{}` substitution are now styled correctly. E.g. `{.code {var1} + {var2}}` (#517).,1,18,FALSE,NA
cli,3c600fa5c6a78dc5970f5559948dfcd3,New `{.obj_type_friendly}` inline style to format the type of an R object in a user friendly way (#463).,1,19,FALSE,NA
cli,dc6cc7cf9f414eccb3003b400de0dd79,"Improved vector collapsing behavior. cli now shows both the beginning and end of the collapsed vector, by default (#419).",1,20,FALSE,NA
cli,2bb8583bb6937f9857bcda0749c7748c,Nested `cli()` calls work now (#497).,1,21,FALSE,NA
cli,3bb680950fbdd42b8df57b346e2a0d1b,Return values now work as they should within `cli()` calls (#496).,1,22,FALSE,NA
cli,5a72d579082ca48ade1573ac2be71b48,"Style attributes with underscores have new names with dashes instead: `vec_sep`, `vec_last`, `vec_trunc`, `string-quote`. The old names still work, but the new ones take precedence (#483).",1,23,FALSE,NA
cli,c59bf45980eb4886522eb550fa12f259,cli now does not crash at the end of the R session on Arm Windows (#494; @​kevinushey),1,24,FALSE,NA
cli,f113c8a03cafcd71dc6375fb740c639e,"Vectors are truncated at 20 elements now by default, instead of 100 (#430).",1,25,FALSE,NA
cli,66b8fe24ca07d7970946e38414d08040,"20 new spinners from the awesome cli-spinners package, and from @​HenrikBengtsson in #469. Run this to demo them, some need UTF-8 and emoji support:",1,26,FALSE,NA
cli,66b8fe24ca07d7970946e38414d08040,"```
new <- c(""dots13"", ""dots8Bit"", ""sand"", ""material"", ""weather"", ""christmas"",
  ""grenade"", ""point"", ""layer"", ""betaWave"", ""fingerDance"", ""fistBump"",
  ""soccerHeader"", ""mindblown"", ""speaker"", ""orangePulse"", ""bluePulse"",
  ""orangeBluePulse"", ""timeTravel"", ""aesthetic"", ""growVeriticalDotsLR"",
  ""growVeriticalDotsRL"", ""growVeriticalDotsLL"", ""growVeriticalDotsRR"")
demo_spinners(new)
```",1,27,TRUE,NA
cli,957e97bc253cf5b7ae0fe79e4cb15567,cli exit handlers are now compatible again with the withr package (#437).,1,28,FALSE,NA
cli,2c26db9dc199c3fbc2e4c0c095fa81af,cli functions now keep trailing `\f` characters as newlines. They also keep multiple consecutive `\f` as multiple newlinees (#491).,1,29,FALSE,NA
cli,4b6253f1b7549e5153b9e283dd17fda7,"`{}` substitutions within inline styles are now formatted correctly. E.g. `{.code download({url})}` will not add backticks to `url`, and `{.val pre-{x}-post}` will format the whole value instead of `x`. (#422, #474).",1,30,FALSE,NA
cli,017df773d6a01688b4ba436b4813656d,"cli now replaces newline characters within `{.class ... }` inline styles with spaces. If the `cli.warn_inline_newlines` option is set to TRUE, then it also throws a warning. (#417).",1,31,FALSE,NA
cli,c275f7dd6856713d6b6e7925dc665ab3,"`code_highlight` now falls back to the default theme (instead of no theme) for unknown RStudio themes (#482, @​rossellhayes).",1,32,FALSE,NA
cli,1d576b5c9e835c100b92d47a1cee69ac,`cli_abort()` now supplies `.frame` to `abort()`. This fixes an issue with the `.internal = TRUE` argument (r-lib/rlang#1386).,1,33,FALSE,NA
cli,d16035e097d77fb864f5b6481a6eb60e,"cli now does a better job at detecting the RStudio build pane, job pane and render pane, and their capabilities w.r.t. ANSI colors and hyperlinks. Note that this requires a daily build of RStudio (#465).",1,34,FALSE,NA
cli,4ae19a65318c98e9b0f830d160e0f3a8,"New functions for ANSI strings: `ansi_grep()`, `ansi_grepl()`, `ansi_nzchar()`. They work like the corresponding base R functions, but handle ANSI markup.",1,35,FALSE,NA
cli,3753cb81062b3cf811fc9873b5dc6cc0,"`style_hyperlink()` (really) no longer breaks if the env variable `VTE_VERSION` is of the form `\d{4}`, i.e., 4 consecutive numbers (#441, @​michaelchirico)",1,36,FALSE,NA
cli,f6cf736162229069fcce64f6c011f019,`cli_dl()` and its corresponding `cli_li()` can now style the labels.,1,37,FALSE,NA
cli,500d162a30d068807defeec133d8e0df,"The behavior cli's inline styling expressions is now more predictable. cli does not try to evaluate a styled string as an R expression any more. E.g. the meaning of `""{.emph +1}""` is now always the ""+1"", with style `.emph`, even if an `.emph` variable is available and the `.emph + 1` expression can be evaluated.",1,38,FALSE,NA
cli,62bea213a2762eafd901904ac7b16bce,"Functions that apply bright background colors (e.g. `bg_br_yellow()`) now close themselves. They no longer format text after the end of the function (#484, @​rossellhayes).",1,39,FALSE,NA
cli,60f458040cced6f8f2dfd4e05a8148e1,"`style_hyperlink()` no longer breaks if the env variable `VTE_VERSION` is of the form `\d{4}`, i.e., 4 consecutive numbers (#441, @​michaelchirico)",1,40,FALSE,NA
cli,4223c4b2e07bc306a487cc48a4cd6f80,`ansi_*()` functions support ANSI hyperlinks again (#444).,1,41,FALSE,NA
cli,ecdfe3eabe84f908a66a74f260fbbeb8,Turning off ANSI colors via the `cli.num_colors` option or the `R_CLI_NUM_COLORS` or the `NO_COLOR` environment variable now also turns off ANSI hyperlinks (#447).,1,42,FALSE,NA
cli,b60705b0eccd4706a0b7a2372bf618e9,`symbol` now only has two variants: UTF-8 and ASCII. There are no special variants for RStudio and Windows RGui any more (#424).,1,43,FALSE,NA
cli,354033513b2133cf3799132821a37b0f,"The `cli_theme_dark` option is now known as `cli.theme_dark`, to be consistent with all other cli option names (#380).",1,44,FALSE,NA
cli,054661c13700d91309837f8afd6f2601,"The preferred names of the S3 classes `ansi_string`, `ansi_style`, `boxx`, `rule` and `tree` now have `cli_` prefix: `cli_ansi_string`, etc. This will help avoiding name conflicts with other packages eventually, but for now the old names are kept as well, for compatibility.",1,45,FALSE,NA
cli,ebd9b84e8a8e0c1729518bf12aa41458,`cli_abort()` has been updated to work nicely with rlang 1.0. The default `call` and backtrace soft-truncation are set to `.envir` (which itself is set to the immediate caller of `cli_abort()` by default). Line formatting now happens lazily at display time via `rlang::cnd_message()` (which is called by the `conditionMessage()` method for rlang errors).,1,46,FALSE,NA
cli,5165de14bcde911d587da105893625ed,"New `hash_sha256()` function to calculate SHA-256 hashes. New `hash_raw_*()`, `hash_obj_*()` and `hash_file_*()` functions to calculate various hashes of raw vectors, R objects and files.",1,47,FALSE,NA
cli,6927b20ae2d822781d9e40c38cb84106,"You can use the new `cli.default_num_colors` option to set the default number of ANSI colors, only if ANSI support is otherwise detected. See the details in the manual of `num_ansi_colors()`.",1,48,FALSE,NA
cli,f9bd65b24f3a0136f425a6eadf313324,You can set the new `ESS_BACKGROUND_MODE` environment variable to `dark` to indicate dark mode.,1,49,FALSE,NA
cli,bb28bcf43bef6438480750f1d418eb91,cli now handles quotes and comment characters better in the semantion `cli_*()` functions that perform glue string interpolation (#370).,1,50,FALSE,NA
cli,11c29f4ea4d36b894dab1292f72c6e02,`style_hyperlink()` gains a `params=` argument (#384).,1,51,FALSE,NA
cli,a64a441698a21e408bc9a5259ac4d552,The C progress bar API now uses `double` instead of `int` as the data type of the progress units (#335).,1,52,FALSE,NA
cli,35616a8db8dadca355a7413aac3bd650,Several improvements and changes in the `ansi_*()` functions:,1,53,FALSE,NA
cli,35616a8db8dadca355a7413aac3bd650,• most `ansi_*()` functions are now implemented in C and they are much faster (#316).,2,54,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,• they handle `NA` values better.,2,55,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,"• many functions now use UTF-8 graphemes by default instead of code points. E.g. `ansi_nchar()` counts graphemes, etc.",2,56,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,• they convert their input to UTF-8 and always return UTF-8 encoded strings.,2,57,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,• new function `ansi_simplify()` to remove superfluous ANSI tags.,2,58,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,• new function `ansi_html()` to convert ANSI-highlighted strings to HTML.,2,59,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,35616a8db8dadca355a7413aac3bd650,"• `ansi_has_any()` and `ansi_strip()` now have `sgr` and `csi` arguments to look for SGR tags, CSI tags, or both.",2,60,FALSE,Several improvements and changes in the `ansi_*()` functions:
cli,db907987072010eb369e85199fe9326a,"New functions that handle UTF-8 encoded strings correctly: `utf8_graphemes()`, `utf8_nchar()`, `utf8_substr()`.",1,61,FALSE,NA
cli,fc04bea0432fffd321b68dd2152f5f04,"Support for palettes, including a colorblind friendly palette. See `?ansi_palettes` for details.",1,62,FALSE,NA
cli,4a34725ed8e3060ccdec05c544e75296,"True color support: `num_ansi_colors()` now detects terminals with 24 bit color support, and `make_ansi_style()` uses the exact RGB colors on these terminals (#208).",1,63,FALSE,NA
cli,5ba705c83f5023bb413a144c2979d22e,The new `col_br_*()` and `bg_br_()` functions create bright versions of eight base ANSI colors (#327).,1,64,FALSE,NA
cli,119ea04df123bd518a6181ff6c7d50ce,"New function `code_highlight()` to syntax highlight R code. It supports several themes out of the box, see `code_theme_list()` (#348).",1,65,FALSE,NA
cli,66752fd08aa3c8b4984518d1b28ca660,"New functions for hashing: `hash_animal()`, `hash_emoji()` and `hash_md5()`.",1,66,FALSE,NA
cli,282f31661c7ba7bdc66aff2eca9185ac,New `diff_chr()` and `diff_str()` functions to calculate the difference of character vectors and letters of strings.,1,67,FALSE,NA
cli,014eca7d7630e683f76e539dff8ebe88,"Progress bars with `clear = FALSE` now print the last, completed, state properly.",1,68,FALSE,NA
cli,9ee0b3030f03b27febd21d57df0e64dd,The progress bar for Shiny apps now handles output from `cli_progress_output()`.,1,69,FALSE,NA
cli,44b058eba25bcf16db9b835373d087b2,Progress variables in C `format_done` strings work correctly now (#337).,1,70,FALSE,NA
cli,6e7a56962aaea61c58d4e7570793a980,"`cli_dl()` now works with an empty description, and gives a better error for invalid input (#347).",1,71,FALSE,NA
cli,2c4ba1acecafd4ad794cdffc8566f6ea,`rule()` is now works better if the labels have ANSI markup.,1,72,FALSE,NA
cli,be9e2da081b021c9632572a31d11975a,`cli_spark` objects now have `format()` and `print()` methods.,1,73,FALSE,NA
cli,c4820593d98fb0c72efb83708b770d8c,`cli_process_done()` now does not error without a process (#351).,1,74,FALSE,NA
cli,fb547cd5880234003d89d3b2cbfb69a2,ANSI markup is now supported in RStudio jobs (#353).,1,75,FALSE,NA
cli,2334a6b3d6bb63086d708d21e113ba3c,The lack of ANSI support is now again correctly detected if there is an active `sink()` (#366).,1,76,FALSE,NA
cli,7a982983a7e9a80cb728f612a11f11a7,`ansi_strtrim()` now correctly keeps `NA` values (#309).,1,77,FALSE,NA
cli,11c91aa649d6806c24390401e433e824,"`format_inline()` now uses the correct environment (@​rundel, #314).",1,78,FALSE,NA
cli,3090b1e5ec2dcbdc7f3b0b47ff2e2dde,"New functions for progress bars, please see the new articles at https://cli.r-lib.org/articles/ for details.",1,79,FALSE,NA
cli,e6cb87f01a333581532f6710ce2c1e36,"New `cli_abort()`, `cli_warn()` and `cli_inform()` functions, to throw errors with cli pluralization and styling.",1,80,FALSE,NA
cli,95c4ba5a69da82f1138b977642898075,New `format_inline()` function to format a cli string without emitting it (#278).,1,81,FALSE,NA
cli,33f4f116f3d3a91bebdfaaa04e436fe3,New `style_no_*()` functions to locally undo styling. New `col_none()` and `bg_none()` functions to locally undo text color and background color.,1,82,FALSE,NA
cli,e24e1cd6f1c4f1e3f6d7122a6138682f,"It is now possible to undo text and background color in a theme, by setting them to `NULL` or `""none""`.",1,83,FALSE,NA
cli,8bb67139d0b7984bf6d05f8424818d14,"`cli_memo()` was renamed to `cli_bullets()`, as it is by default formatted as a bullet list (#250).",1,84,FALSE,NA
cli,9316e4206264acb0f5e924cd6b3b7a6c,"New `ansi_toupper()`, `ansi_tolower` and `ansi_chartr()` functions, the ANSI styling aware variants of `toupper()`, `tolower()` and `chartr()` (#248).",1,85,FALSE,NA
cli,a9f1240b9df367557f1badfdc5c3ccb8,New `test_that_cli()` helper function to write testthat tests for cli output.,1,86,FALSE,NA
cli,210734703ef86525ae28b84d31f4833a,`tree()` now does not produce warnings for tibbles (#238).,1,87,FALSE,NA
cli,43743e5c3aa119f4556a4f5e6aec5f19,"New inline style: `.cls` to format class names, e.g. `""{.var fit} must be an {.cls lm} object""`.",1,88,FALSE,NA
cli,293c567f7fe3e6f55e51093f8d9a0c3b,New `cli_memo()` function to create a list of items or tasks.,1,89,FALSE,NA
cli,bdefa44e991085deef05c10675f6ffec,New `cli::cli()` function to create a single cli message from multiple cli calls (#170).,1,90,FALSE,NA
cli,dae58774bbf9d6f4f0c08282d01959f4,"cli now highlights weird names, e.g. path names with leading or trailing space (#227).",1,91,FALSE,NA
cli,6fe388bba2b396ae3f1b267367f11f2a,"Styling is fixed at several places. In particular, nested lists should be now formatted better (#221).",1,92,FALSE,NA
cli,45a9466d4b9386f7eb35a5bbce3b26f3,New `spark_bar()` and `spark_line()` functions to draw small bar or line charts.,1,93,FALSE,NA
cli,9f41d7048a8c378a0140ffa498b88a11,"ANSI color support detection works correctly now in older RStudio, and also on older R versions.",1,94,FALSE,NA
cli,597a0292e32cd571ba05d348fb9258be,"`cli_h1()`, `cli_h2()` and `cli_h3()` now work with multiple glue substitutions (#218).",1,95,FALSE,NA
cli,a5a3b4e5895c1bf84f19cd5ca1992e26,`boxx()` now correctly calculates the width of the box for non-ASCII characters.,1,96,FALSE,NA
cli,df2e70a54b5ed0f33a9af7f1fe1942b6,"New `ansi_trimws()` and `ansi_strwrap()` functions, they are similar to `trimws()` and `strwrap()` but work on ANSI strings.",1,97,FALSE,NA
cli,557e12893072301a74cd190cda0fd874,New `ansi_columns()` function to format ANSI strings in multiple columns.,1,98,FALSE,NA
cli,93de645b11c3efd25a5ea010a3b790a8,"`ansi_substr()`, `ansi_substring()`, `ansi_strsplit()`, `ansi_align()` now always return `cli_ansi_string` objects.",1,99,FALSE,NA
cli,356aad2ec32c5cd15b2bd82251a1da97,"`ansi_nchar()`, `ansi_align()`, `ansi_strtrim()` and the new `ansi_strwrap()` as well handle wide Unicode correctly, according to their display width.",1,100,FALSE,NA
cli,ad1326115c619860791e8db49ce80fb5,`boxx()` can now add headers and footers to boxes.,1,101,FALSE,NA
cli,f1318d257a4713920019d95be8562ec1,"New `style_hyperlink()` function to add hyperlinks, on terminals that support them.",1,102,FALSE,NA
cli,f873e774a2e2d6828e525652828141f4,"`cli_format_method()` now works properly in knitr, and other environments that catch message conditions (#159).",1,103,FALSE,NA
cli,578b88235c37a35c538347131ec0fd39,"ANSI strings created by `col_*`, `bg_*` and `style_*` now also add the `character` class to the result. This fixes issues with code that expect `character` objects.",1,104,FALSE,NA
cli,846285c18185b713a7d8fd34e141ccbd,"New functions to manipulate ANSI strings: `ansi_aling()`, `ansi_has_any()`, `ansi_nchar()`, `ansi_regex()`, `ansi_strip()`, `ansi_strsplit()`, `ansi_substr()`, `ansi_substring()`.",1,105,FALSE,NA
cli,e1d063cc5468cd82feb4a533b5e3d4fa,New `cli_vec()` function to allow easier formatting of collapsed vectors. It is now also possible to use styling to set the collapsing parameters (#129).,1,106,FALSE,NA
cli,be066cb40eb5f9b9ac12ffef20b3d6d9,New `pluralize()` function to perform pluralization without generating cli output (#155).,1,107,FALSE,NA
cli,c8d7bf2ad35bd3d32b29a5f4276df74f,"`console_width()` works better now in RStudio, and also in terminals.",1,108,FALSE,NA
cli,4d0e49c6550be73f3d819f609696f59e,"Styling of verbatim text work properly now (#147, @​tzakharko).",1,109,FALSE,NA
cli,068796a5cde45f82dc9db8849bdd1c10,"Messages (i.e. `message` conditions) coming from cli now have the `cliMessage` class, so you can easily suppress them without suppressing other messages (#156).",1,110,FALSE,NA
cli,5ad878aab87f785c06283b77a4902e5f,"cli prints the output to `stderr()` now, if there is an output or message sink. This is to make interactive and non-interactive sessions consistent (#153).",1,111,FALSE,NA
cli,2539deed1e5a39c04b422408f7534733,Pluralization works correctly now if the last alternative is the empty string (#158).,1,112,FALSE,NA
cli,876871dbbb1855a1157bce0756f49896,cli now caches the result of the dark background detection in iTerm on macOS. Reload cli to delete the cache (#131).,1,113,FALSE,NA
cli,3535ff8d18959ec94ab89b0b774d97bf,"The `is_dynamic_tty()`, `is_ansi_tty()` and `ansi_hide_cursor()` and related functions now default to the `""auto""` stream, which is automatically selected to be either `stdout()` or `stderr()`. See the manual for details (#144).",1,114,FALSE,NA
cli,dda99310bb6ac47d101bb12c29f66a04,"The default theme now quotes file names, paths, email addresses if they don't start or end with an alphanumeric character or a slash. This is to make it easier to spot names that start or end with a space (#167).",1,115,FALSE,NA
cli,ef2ea642c2641b21dd2a18cbdf37897b,"`make_spinner()` clears the line properly now (@​tzakharko, #164).",1,116,FALSE,NA
cli,da2c4fa7948368b9816fdc91d127163c,"Semantic cli functions now automatically replace Unicode non-breaking space characters (`\u00a0`) with regular space characters, right before output. They are still used to calculate the line breaks, but not outputted (#161).",1,117,FALSE,NA
cli,c4ed76664ccc11dbd2c779870c897f3f,"Progress bars now respect `is_dynamic_tty()` and do not output `\r` when this is false (@​jimhester, #177)",1,118,FALSE,NA
cli,19d35738be45b7eb2064e9e8671dfbe3,The status bar now does not simplify multiple spaces by a single space.,1,119,FALSE,NA
cli,3df171da2960128ffabbd56b3bb1050d,cli now does not crash if it fails to detect whether the RStudio theme is a dark theme (#138).,1,120,FALSE,NA
cli,3df4cf977dd286be5ed05708a673b5ea,"cli now works better with wide Unicode characters, for example emojis. In particular, a status bar containing emojis is cleared properly (#133).",1,121,FALSE,NA
cli,88a75ac4c44b62c44351e17efa845ab8,"The status bar now does not flicker when updated, in terminals (#135).",1,122,FALSE,NA
cli,cd6cbf610d50217559c3fdb8e5b64da2,Symbols (`symbol$*`) are now correctly printed in RStudio on Windows (#124).,1,123,FALSE,NA
cli,de4ddc8643c7749dd210b65a63f10db2,"The default theme for `cli_code()` output looks better now, especially in RStudio (#123).",1,124,FALSE,NA
cli,c50c5c37b500ae967f16d4f189a68b6f,"Remove spurious newline after a `cli_process_start()` was cleared manually, and also at the end of the function.",1,125,FALSE,NA
cli,0e4bdf6eb1a894f805d01eaf276abd81,"Use Oxford comma when listing 3 or more items (@​jonocarroll, #128).",1,126,FALSE,NA
cli,3aabb81f48ddc9d736dd89999c97be76,"Fix a bug in `is_dynamic_tty()`, setting `R_CLI_DYNAMIC=""FALSE""` now properly turns dynamic tty off (#70).",1,127,FALSE,NA
cli,a34a9e912ec5fc8551f3901687d1631d,"cli has now functions to add ANSI styles to text. These use the crayon package internally, and provide a simpler interface. See the `col_*`, `bg_*`, `style_*` and also the `make_ansi_style()` and `combine_ansi_styles()` functions (#51).",1,128,FALSE,NA
cli,9cdfa26b41f1cb98e7c1ab4e0fa5b66c,New `is_dynamic_tty()` function detects if `\r` should be used for a stream (#62).,1,129,FALSE,NA
cli,55343b249233d7ffac76cc5fba8b717d,New `is_ansi_tty()` function detects if ANSI control sequences can be used for a stream.,1,130,FALSE,NA
cli,a03b4cbcd4c937beb0fbaf2e0eb59171,"New `ansi_hide_cursor()`, `ansi_show_cursor()` and `ansi_with_hidden_cursor()` functions to hide and show the cursor in terminals.",1,131,FALSE,NA
cli,68e2bfd879acfc38881488e3c0e196f6,New `make_spinner()` function helps integrating spinners into your functions.,1,132,FALSE,NA
cli,1b329b49f1ed4180fb0b27b7fe1df03d,Now `symbol` always uses ASCII symbols when the `cli.unicode` option is set to `FALSE`.,1,133,FALSE,NA
cli,4dd422adc58f9ff6f95cbbd83b9890b9,"New `cli_sitrep()` function, situation report about UTF-8 and ANSI color support (#53).",1,134,FALSE,NA
cli,93098a237a8f280389411d784a4e97b9,"Fall back to ASCII only characters on non-Windows platforms without UTF-8 support, and also in LaTeX when running knitr (#34).",1,135,FALSE,NA
crayon,42502ed417db3c0da9164fe319fe40e8,"crayon functions now mark their output with the right encoding, if their input was marked (#136, #138).",1,1,FALSE,NA
crayon,c677896e092c7c6799d635cbad8e5540,crayon now does not fail to install from source if the utils package is not loaded (#133).,1,2,FALSE,NA
crayon,7bdbfcf39f5e4c63c73f646a264aaae4,"You can use the new `cli.default_num_colors` option to set the default number of ANSI colors, only if ANSI support is otherwise detected. See the details in the manual of `num_ansi_colors()`. (From cli.)",1,3,FALSE,NA
crayon,0481af5c3af847ed5dc9111f69e8611d,crayon now install cleanly on R 3.4.x and R 3.5.x on Windows (#131).,1,4,FALSE,NA
crayon,7dd52778d6094662029ff48a84f54540,Better ANSI support detection if there is an active `sink()`.,1,5,FALSE,NA
crayon,3a4575a7e5b5c2b8cde5a77b8fbdcb17,Support ANSI markup in RStudio jobs.,1,6,FALSE,NA
crayon,951399ca95cadf26852042119e40326f,ANSI color support detection works correctly now in older RStudio (#112).,1,7,FALSE,NA
crayon,0662e4255c7a7052f0d3c9db67410ab2,ANSI color support detection works correctly now on older R versions (#109).,1,8,FALSE,NA
crayon,a4e583a233435114f93a0540274bf1b5,Overhauled and much improved detection of ANSI color support and number of ANSI colors.,1,9,FALSE,NA
crayon,778404f77721572a6c0b1d7a6308f8c2,`NO_COLOR` environment variable disables color (#64),1,10,FALSE,NA
crayon,722b3cfd0eec78925c32bbbdcd0b213a,Now colors are turned on if ANSICON (https://github.com/adoxa/ansicon) is active.,1,11,FALSE,NA
crayon,d685dd0951b5d29cdcbf3134c8c441ce,New `hyperlink()` function to add hyperlinks to terminal output. The new `has_hyperlink()` function tests if the current `stdout()` supports this.,1,12,FALSE,NA
crayon,9a78d35577e9b7ded0909c4800612c73,"`reset` style now restores previous style for text following it (@​brodieG, #35).",1,13,FALSE,NA
crayon,ecfe7eb8a3670501b080954c32ebaef0,Warnings are no longer generated when the INSIDE_EMACS environment variable is set but does not include a version number.,1,14,FALSE,NA
crayon,424c11d4a9204abb4a903c443eaab749,Style functions convert arguments to character now,1,15,FALSE,NA
crayon,04999c0c21275641d950b35c7b25a199,Autodetect RStudio ANSI support,1,16,FALSE,NA
crayon,cd68b4832ac5c727e4e4b3fba62d7c96,"`col_align()` gains `type` argument, default `""width""` (#54).",1,17,FALSE,NA
crayon,2b2b4655655542265e4edaa210adf058,"Removed dependency to `memoise` (@​brodieG, #25)",1,18,FALSE,NA
crayon,48d4500cbe37478bae9a3b07646b7206,"Fixed a test case that changed the `crayon.enabled` setting, potentially (@​brodieG)",1,19,FALSE,NA
crayon,a2e11ffa162c63db188cd60f2213734c,"Added `crayon.colors` option, to specify the number of colors explicitly",1,20,FALSE,NA
crayon,b1904f23c330733ad2615a204ecd9e67,"`TERM=xterm` and `tput colors=8` will use 256 colors, as 256 colors are usually supported in this case (#17)",1,21,FALSE,NA
crayon,05739c2d5fb91170388bd83ff98fbc22,"Support colors in ConEmu and cmder, on Windows",1,22,FALSE,NA
crayon,0bbf157f02da70cdafd79f27e82c2338,Fix color detection in Emacs tramp,1,23,FALSE,NA
crayon,8359e96e3ef276a1bba861eece31cb96,`col_strsplit` and `col_substr` corner cases:,1,24,FALSE,NA
crayon,8359e96e3ef276a1bba861eece31cb96,"• handle empty chunks at beginning or end of strings like `base::strsplit` (@​brodieG, #26)",2,25,FALSE,`col_strsplit` and `col_substr` corner cases:
crayon,8359e96e3ef276a1bba861eece31cb96,• explicitly deal with 'split' values that are not length 1 as that is not currently supported,2,26,FALSE,`col_strsplit` and `col_substr` corner cases:
crayon,8359e96e3ef276a1bba861eece31cb96,"• handle zero length `x` argument in `col_substr`, and add more explicit error messages for corner cases",2,27,FALSE,`col_strsplit` and `col_substr` corner cases:
crayon,abc9a0690d73bea3e9f44c6c0e87afa7,Some performance improvements to `col_substr` (@​brodieG),1,28,FALSE,NA
crayon,8865a4affac84d6a16edf6d773245e33,"Change rgb to ANSI code mapping, based on the ""paint"" ruby gem (@​richfitz, #33, #34)",1,29,FALSE,NA
crayon,8e11b085537af83c7eee056a23c5e929,Fixed some `R CMD check` problems.,1,30,FALSE,NA
crayon,dc5665284ef8884de0fbd53573f94342,Colors are turned on by default in Emacs ESS 23.x and above.,1,31,FALSE,NA
crayon,32d68891ce581a8bd2df74031ea18d17,"Functions to turn on and off a style: `start`, `finish`.",1,32,FALSE,NA
crayon,0db7a2a4f2342194ea0584847f201d57,"Really fix `tput` corner cases (@​jimhester, #21)",1,33,FALSE,NA
crayon,9c8f3752618452543cf009fe797f3002,"Fix detecting number of colors when `tput` exists, but fails with an error and/or does not return anything useful. (@​jimhester, #18, #19)",1,34,FALSE,NA
crayon,877d969876425bd25991080ad8cfb95f,"Fix detection of number of colors, it was cached from installation time (#17).",1,35,FALSE,NA
crayon,9657b44ef9c85a6b6afcc623a1f081e9,Color aware string operations. They are slow and experimental currently.,1,36,FALSE,NA
crayon,03d46cbfe77dac524429a7d44d6f6dad,`show_ansi_colors()` prints all supported colors on the screen.,1,37,FALSE,NA
crayon,776a0a110d6dd6404796cafbd8fe9839,"256 colors, on terminals that support it.",1,38,FALSE,NA
crayon,d1d5e3e5daf2ade9cc656be06c270f3a,"Disable colors on Windows, they are not supported in the default setup.",1,39,FALSE,NA
crayon,1210f5d1b6fec2c38121e691db44a0a7,First released version.,1,40,FALSE,NA
dbplyr,92e87b95272ecd3d1d11894ef4631578,"Functions qualified with the base namespace are now also translated, e.g. `base::paste0(x, ""_1"")` is now translated (@​mgirlich, #1022).",1,1,FALSE,NA
dbplyr,5adfcda931c4ef22eed0d5959d4b7df7,`lead()` translation coerces `n` to an integer.,1,2,FALSE,NA
dbplyr,bd6fa3f786e45d1ca3a9efcf72328e82,"`sql_translator()` now checks for duplicated definitions (@​krlmlr, #1374).",1,3,FALSE,NA
dbplyr,d0fc18250de6e1afe87c24b85a94545b,`reframe()` now gives an informative error that it isn't supported (#1148).,1,4,FALSE,NA
dbplyr,5b1e04fbf6d57ebf5ecbcdd96fd97b95,MySQL/MariaDB:,1,5,FALSE,NA
dbplyr,5b1e04fbf6d57ebf5ecbcdd96fd97b95,"• Fix translation of `as.integer()` for MySQL (@​krlmlr, #1375).",2,6,FALSE,MySQL/MariaDB:
dbplyr,5b1e04fbf6d57ebf5ecbcdd96fd97b95,"• New `simulate_mariadb()` (@​krlmlr, #1375).",2,7,FALSE,MySQL/MariaDB:
dbplyr,47455cda31a90709db93c7379d7364d3,Oracle,1,8,FALSE,NA
dbplyr,47455cda31a90709db93c7379d7364d3,• Fix translation of `as.Date()` applied to a string (#1389).,2,9,FALSE,Oracle
dbplyr,e552f61e622d31647c0701a6ec6cc0eb,"Using `compute(temporary = FALSE)` without providing a name is now deprecated (@​mgirlich, #1154).",1,10,FALSE,NA
dbplyr,50cc7c70e851e7d28278823a44d852b3,"`ntile()`'s first argument has been renamed from `order_by` to `x` to match the interface of `dplyr::ntile()` (@​mgirlich, #1242).",1,11,FALSE,NA
dbplyr,55605707d86cca572a6a700354bf6137,"`simulate_vars()` and `simulate_vars_is_typed()` were removed as they weren't used and tidyselect now offers `tidyselect_data_proxy()` and `tidyselect_data_has_predicates()` (@​mgirllich, #1199).",1,12,FALSE,NA
dbplyr,81a68347dffacbf258ee1f9096369cfc,`sql_not_supported()` now expects a function name without parentheses.,1,13,FALSE,NA
dbplyr,c49a4c1841e910dc1c9a0649f0427ed3,"`sql_query_append()`, `sql_query_insert()`, `sql_query_update()`, `sql_query_upsert()`, and `sql_query_delete()` changed their arguments to make them more consistent to the other `sql_query_*()` functions:",1,14,FALSE,NA
dbplyr,c49a4c1841e910dc1c9a0649f0427ed3,• `x_name` was renamed to `table`.,2,15,FALSE,"`sql_query_append()`, `sql_query_insert()`, `sql_query_update()`, `sql_query_upsert()`, and `sql_query_delete()` changed their arguments to make them more consistent to the other `sql_query_*()` functions:"
dbplyr,c49a4c1841e910dc1c9a0649f0427ed3,• `y` was renamed to `from` and must now be a table identifier or SQL instead of a lazy table.,2,16,FALSE,"`sql_query_append()`, `sql_query_insert()`, `sql_query_update()`, `sql_query_upsert()`, and `sql_query_delete()` changed their arguments to make them more consistent to the other `sql_query_*()` functions:"
dbplyr,c49a4c1841e910dc1c9a0649f0427ed3,• `sql_query_append()` and `sql_query_insert()` have gained the argument `cols`.,2,17,FALSE,"`sql_query_append()`, `sql_query_insert()`, `sql_query_update()`, `sql_query_upsert()`, and `sql_query_delete()` changed their arguments to make them more consistent to the other `sql_query_*()` functions:"
dbplyr,2f5b7dac23f0557d0d9f136107fff9bd,"`remote_name()` now returns a string with the name of the table. To get the qualified identifier use the newly added `remote_table()` (@​mgirlich, #1280).",1,18,FALSE,NA
dbplyr,f2d68e59d7c5ad60a35445584aeab049,"`tbl_lazy()` loses `src` argument after it has been deprecated for years (@​mgirlich, #1208).",1,19,FALSE,NA
dbplyr,27d05718445d523e0b124b406899524c,"`translate_sql()` now requires the `con` argument (@​mgirlich, #1311). The `vars` argument has been removed after it threw an error for the last 7 years (@​mgirlich).",1,20,FALSE,NA
dbplyr,8903056b604db309255589f4ea221cb9,Preliminary databricks Spark SQL backend (#1377).,1,21,FALSE,NA
dbplyr,1b303fee3d7169013c209cadbb246143,Joins,1,22,FALSE,NA
dbplyr,1b303fee3d7169013c209cadbb246143,"• `*_join()` after `full_join()` works again (@​mgirlich, #1178).",2,23,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• `*_join()` now allows specifying the relationship argument. It must be `NULL` or `""many-to-many""` (@​bairdj, #1305).",2,24,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• Queries now qualify `*` with the table alias for better compatibility (@​mgirlich, #1003).",2,25,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• `full_join()` can now handle column names that only differ in case (@​ejneer, #1255).",2,26,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• The `na_matches` argument of `semi_join()` and `anti_join()` works again (@​mgirlich, #1211).",2,27,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• A `semi/anti_join()` on fitlered `y` is inlined when possible (@​mgirlich, #884).",2,28,FALSE,Joins
dbplyr,1b303fee3d7169013c209cadbb246143,"• Joins now work again for Pool and Oracle connections (@​mgirlich, #1177, #1181).",2,29,FALSE,Joins
dbplyr,1ddaf2cf8aeb45a5e5bcd15072b02ccf,"A sequence of `union()` resp. `union_all()` now produces a flat query instead of subqueries (@​mgirlich, #1269).",1,30,FALSE,NA
dbplyr,3d0f7174c9fe2258326d64b613ab5922,Added translations for:,1,31,FALSE,NA
dbplyr,3d0f7174c9fe2258326d64b613ab5922,"• `nzchar()` (@​MichaelChirico, @​mgirlich, #1094).",2,32,FALSE,Added translations for:
dbplyr,3d0f7174c9fe2258326d64b613ab5922,"• `str_detect()`, `str_starts()` and `str_ends()` with fixed patterns (@​mgirlich, #1009).",2,33,FALSE,Added translations for:
dbplyr,3d0f7174c9fe2258326d64b613ab5922,"• `runif()` (@​mgirlich, #1200).",2,34,FALSE,Added translations for:
dbplyr,4035440171cccdf67a85750cba8eaeaf,"`if_any()` and `if_all()` translations are now wrapped in parentheses. This makes sure it can be combined via `&` with other conditions (@​mgirlich, #1153).",1,35,FALSE,NA
dbplyr,602a32296eb195c29eb7f805a8927d2e,"`nth()`, `first()`, and `last()` now support the `na_rm` argument (@​mgirlich, #1193).",1,36,FALSE,NA
dbplyr,d29a8261513649f035822571b884cc64,"`across()` now supports namespaced functions, e.g. `across(x, dplyr::dense_rank)` (@​mgirlich, #1231).",1,37,FALSE,NA
dbplyr,e9acec6cb18296140a0f55d56eedb3be,`db_copy_to(overwrite = TRUE)` now actually works.,1,38,FALSE,NA
dbplyr,4655546ef80d0197a003b43bcffd6479,"`db_copy_to()`'s `...` are now passed to `db_write_table()` (@​mgirlich, #1237).",1,39,FALSE,NA
dbplyr,90cf32a19481c93619e8b343b714728e,Added `db_supports_table_alias_with_as()` to customise whether a backend supports specifying a table alias with `AS` or not (@​mgirlich).,1,40,FALSE,NA
dbplyr,058fbfe09de3cb774376885e6821939d,`db_write_table()` and `db_save_query()` gain the `overwrite` argument.,1,41,FALSE,NA
dbplyr,4ad1b6b4b4727127a7e1e83b44f36a5d,`dbplyr_pivot_wider_spec()` is now exported. Unlike `pivot_wider()` this can be lazy. Note that this will be removed soon after `pivot_wider_spec()` becomes a generic (@​mgirlich).,1,42,FALSE,NA
dbplyr,53a1819beb5079cd3df2e58454bfa360,"`filter()`ing with window functions now generates columns called `col01` rather than `q01` (@​mgirlich, #1258).",1,43,FALSE,NA
dbplyr,4721f50af3b77de6fd09a4e2e55c6995,`pivot_wider()` now matches tidyr `NA` column handling (@​ejneer #1238).,1,44,FALSE,NA
dbplyr,afa31340b165a832f5f21333cf3360a7,"`select()` can once again be used after `arrange(desc(x))` (@​ejneer, #1240).",1,45,FALSE,NA
dbplyr,e7850fe8238622d76eb1146203a3bba6,`show_query()` and `remote_query()` gain the argument `sql_options` that allows to control how the SQL is generated. It can be created via `sql_options()` which has the following arguments:,1,46,FALSE,NA
dbplyr,e7850fe8238622d76eb1146203a3bba6,• `cte`: use common table expressions?,2,47,FALSE,`show_query()` and `remote_query()` gain the argument `sql_options` that allows to control how the SQL is generated. It can be created via `sql_options()` which has the following arguments:
dbplyr,e7850fe8238622d76eb1146203a3bba6,• `use_star`: use `SELECT *` or explicitly select every column?,2,48,FALSE,`show_query()` and `remote_query()` gain the argument `sql_options` that allows to control how the SQL is generated. It can be created via `sql_options()` which has the following arguments:
dbplyr,e7850fe8238622d76eb1146203a3bba6,"• `qualify_all_columns`: qualify all columns in a join or only the ambiguous ones? (@​mgirlich, #1146).",2,49,FALSE,`show_query()` and `remote_query()` gain the argument `sql_options` that allows to control how the SQL is generated. It can be created via `sql_options()` which has the following arguments:
dbplyr,481a2ca91ee3d21721decf43d48e0b86,"Consequently the `cte` argument of `show_query()` and `remote_query()` has been deprecated (@​mgirlich, #1146).",1,49,FALSE,NA
dbplyr,8eb354286cf9431a445b85fc56b66b06,"`slice_min/max()` can now order by multiple variables like dplyr, e.g. use `slice_min(lf, tibble(x, y))` (@​mgirlich, #1167).",1,50,FALSE,NA
dbplyr,8640a7ac998fded7c12084730b617812,"`slice_*()` now supports the data masking pronouns `.env` and `.data` (@​mgirlich, #1294).",1,51,FALSE,NA
dbplyr,329088f927385a957bd46dea20e4c90e,`sql_join_suffix()` gains the argument `suffix` so that methods can check whether the suffix is valid for the backend (@​mgirlich).,1,52,FALSE,NA
dbplyr,4a177fa895714a41d36a481f88c995d4,"`sql_random()` is now deprecated. It was used to power `slice_sample()` which is now done via the translation for `runif()` (@​mgirlich, #1200).",1,53,FALSE,NA
dbplyr,7a6d562e648b469b13148612478b0449,"`tbl()` now informs when the user probably forgot to wrap the table identifier with `in_schema()` or `sql()` (@​mgirlich, #1287).",1,54,FALSE,NA
dbplyr,11fe6cc485a45b0b8bec8476bdc4e909,Access,1,55,FALSE,NA
dbplyr,11fe6cc485a45b0b8bec8476bdc4e909,"• Added translation for `!=` to `<>` (@​erikvona, #1219).",2,56,FALSE,Access
dbplyr,0861e1927a1a2091daa58fe8d6c836c0,DuckDB,1,57,FALSE,NA
dbplyr,0861e1927a1a2091daa58fe8d6c836c0,• now supports the `returning` argument of `rows_*()`.,2,58,FALSE,DuckDB
dbplyr,c35c3a119cb943790987949dcc071c1a,MySQL/MariaDB:,1,59,FALSE,NA
dbplyr,c35c3a119cb943790987949dcc071c1a,"• `rows_update()` and `rows_patch()` now give an informative error when the unsupported `returning` argument is used (@​mgirlich, #1279).",2,60,FALSE,MySQL/MariaDB:
dbplyr,c35c3a119cb943790987949dcc071c1a,"• `rows_upsert()` now gives an informative error that it isn't supported (@​mgirlich, #1279).",2,61,FALSE,MySQL/MariaDB:
dbplyr,c35c3a119cb943790987949dcc071c1a,"• `rows_*()` use the column types of `x` when auto copying `y` (@​mgirlich, #1327).",2,62,FALSE,MySQL/MariaDB:
dbplyr,c35c3a119cb943790987949dcc071c1a,"• `copy_inline()` now works (@​mgirlich, #1188).",2,63,FALSE,MySQL/MariaDB:
dbplyr,c35c3a119cb943790987949dcc071c1a,"• Fix translation of `as.numeric()`, `as.POSIXct()`, `as_datetime()`, and `as.integer64()` (@​avsdev-cw, #1189).",2,64,FALSE,MySQL/MariaDB:
dbplyr,204ff5e36992889ebfae14a0f2f8fcee,MS SQL:,1,65,FALSE,NA
dbplyr,204ff5e36992889ebfae14a0f2f8fcee,"• `row_number()` now works when no order is specified (@​ejneer, @​fh-mthomson, #1332)",2,66,FALSE,MS SQL:
dbplyr,a952dc68925e7cbaa771ad23438119e1,Oracle:,1,67,FALSE,NA
dbplyr,a952dc68925e7cbaa771ad23438119e1,"• Fix translation of `rows_upsert()` (@​mgirlich, @​TBlackmore, #1286)",2,68,FALSE,Oracle:
dbplyr,a952dc68925e7cbaa771ad23438119e1,"• `head(n)` is now translated to `WHERE ROWNUM <= n` to also support old versions \<= 11.2 (@​JeremyPasco, #1292).",2,69,FALSE,Oracle:
dbplyr,4e29843803d7d2e995bd9d07d18e4693,Postgres,1,70,FALSE,NA
dbplyr,4e29843803d7d2e995bd9d07d18e4693,"• The `rows_*()` functions now also work inside a transaction (@​mgirlich, #1183).",2,71,FALSE,Postgres
dbplyr,912e97b9eb7147393545479c9317fc8e,SQLite,1,72,FALSE,NA
dbplyr,912e97b9eb7147393545479c9317fc8e,• Subqueries now also get an alias. This makes it consistent with other backends and simplifies the implementation.,2,73,FALSE,SQLite
dbplyr,53c2b76c08f8efaf3664824c7b5e109a,SQL Server,1,74,FALSE,NA
dbplyr,53c2b76c08f8efaf3664824c7b5e109a,"• `distinct(.keep_all = TRUE)` now works (@​mgirlich, #1053).",2,75,FALSE,SQL Server
dbplyr,53c2b76c08f8efaf3664824c7b5e109a,"• The translation of `between()` now also works when used in `mutate()` (@​mgirlich, #1241).",2,76,FALSE,SQL Server
dbplyr,53c2b76c08f8efaf3664824c7b5e109a,"• `any()` and `all()` now work (@​ejneer, #1273).",2,77,FALSE,SQL Server
dbplyr,53c2b76c08f8efaf3664824c7b5e109a,"• Fixed negation of bit (boolean) fields (@​ejneer, #1239)",2,78,FALSE,SQL Server
dbplyr,044437f20183076937d8f524b3acc371,Snowflake:,1,79,FALSE,NA
dbplyr,044437f20183076937d8f524b3acc371,"• `na.rm = TRUE` is now respected in `pmin()` and `pmax()` instead of being silently ignored (@​fh-mthomson, #1329)",2,80,FALSE,Snowflake:
dbplyr,044437f20183076937d8f524b3acc371,"• `row_number()` now works when no order is specified (@​fh-mthomson, #1332)",2,81,FALSE,Snowflake:
dbplyr,a939ad8d4dca559de885bc2a57eaf681,Teradata,1,82,FALSE,NA
dbplyr,a939ad8d4dca559de885bc2a57eaf681,"• `distinct()` + `head()` now work (@​mgirlich, #685).",2,83,FALSE,Teradata
dbplyr,a939ad8d4dca559de885bc2a57eaf681,"• `as.Date(x)` is now translate to `CAST(x AS DATE)` again unless `x` is a string (@​mgirlich, #1285).",2,84,FALSE,Teradata
dbplyr,a939ad8d4dca559de885bc2a57eaf681,"• `row_number()` no longer defaults to partitioning by groups (now aligned with other databases when no order is specified: `ROW_NUMBER()` defaults to `ORDER BY (SELECT NULL)`) (@​fh-mthomson, #1331)",2,85,FALSE,Teradata
dbplyr,f99eba4020aa54641981afaae6dbd86d,Hot patch release to resolve R CMD check failures.,1,86,FALSE,NA
dbplyr,1132e330bfff4dd5d128b95eb85cb683,Hot patch to fix R CMD check issues,1,87,FALSE,NA
dbplyr,c654e26c444d46ba4691a94d8ffd54ee,Hot patch to fix R CMD check issues,1,88,FALSE,NA
dbplyr,c13b83417098f75d65b4d5b0b9ab2e42,"`window_order()` now only accepts bare symbols or symbols wrapped in `desc()`. This breaking change is necessary to allow `select()` to drop and rename variables used in `window_order()` (@​mgirlich, #1103).",1,89,FALSE,NA
dbplyr,80697e45dd1d3c91037c7fb053a67d60,"`quantile()` and `median()` now error for SQL Server when used in `summarise()` and for PostgreSQL when used in `mutate()` as they can't be properly translated (@​mgirlich, #1110).",1,90,FALSE,NA
dbplyr,4b79f7cb7a3703a1cdf6964aa201403b,Added an informative error for unsupported join arguments `unmatched` and `multiple` (@​mgirlich).,1,91,FALSE,NA
dbplyr,c5c6f96b4a47021fa6a24bd83b205d53,"Using predicates, e.g. `where(is.integer)`, in `across()` now produces an error as they never worked anyway (@​mgirlich, #1169).",1,92,FALSE,NA
dbplyr,0bfaae7d2f6ef7f306bf2a1711563b12,"Catch unsupported argument `pivot_wider(id_expand = TRUE)` and `pivot_longer(cols_vary)` (@​mgirlich, #1109).",1,93,FALSE,NA
dbplyr,2bca46c0eb124b40e0ebad1b4fa0191f,"Fixed an issue when using a window function after a `summarise()` and `select()` (@​mgirlich, #1104).",1,94,FALSE,NA
dbplyr,a9f35db9ce36507ec3a06bc5e3593840,"Fixed an issue when there where at least 3 joins and renamed variables (@​mgirlich, #1101).",1,95,FALSE,NA
dbplyr,b0680c30a9850755b9fe3515395fac09,"`mutate()` and `select()` after `distinct()` now again produce a subquery to generate the correct translation (@​mgirlich, #1119, #1141).",1,96,FALSE,NA
dbplyr,acdd2b8a663958483ad4463f23ebba6f,"Fixed an issue when using `filter()` on a summarised variable (@​mgirlich, #1128).",1,97,FALSE,NA
dbplyr,015c64cb1dcb9cd1d54d84e7c8971b6c,"`mutate()` + `filter()` now again produces a new query if the `mutate()` uses a window function or SQL (@​mgirlich, #1135).",1,98,FALSE,NA
dbplyr,58312de1da3f25b4bcd36d01518b9221,"`across()` and `pick()` can be used (again) in `distinct()` (@​mgirlich, #1125).",1,99,FALSE,NA
dbplyr,b4f306aca1509975c1939bcdbf3a1739,"The `rows_*()` function work again for tables in a schema in PostgreSQL (@​mgirlich, #1133).",1,100,FALSE,NA
dbplyr,b410858dcbb7e1cc6d3bb486d0a643ea,"`sql()` now evaluates its arguments locally also when used in `across()` (@​mgirlich, #1039).",1,101,FALSE,NA
dbplyr,ad4a80da582f8b35442e619940c7a09f,"The rank functions (`row_number()`, `min_rank()`, `rank()`, `dense_rank()`, `percent_rank()`, and `cume_dist()`) now support multiple variables by wrapping them in `tibble()`, e.g. `rank(tibble(x, y))` (@​mgirlich, #1118).",1,102,FALSE,NA
dbplyr,1c9087ff933b21aefbdc8ee6d3bcecb3,"`pull()` now supports the argument `name` (@​mgirlich, #1136).",1,103,FALSE,NA
dbplyr,2b2866c0a0a4a15fd1e87adfa497df26,"Added support for `join_by()` added in dplyr 1.1.0 (@​mgirlich, #1074).",1,104,FALSE,NA
dbplyr,4cf3ca8fe96bfe87b8c81e3d108ceb60,Using `by = character()` to perform a cross join is now soft-deprecated in favor of `cross_join()`.,1,105,FALSE,NA
dbplyr,b81c7a52984fab47e8475e979fea797c,"`full_join()` and `right_join()` are now translated directly to `FULL JOIN` and `RIGHT JOIN` for SQLite as native support was finally added (@​mgirlich, #1150).",1,106,FALSE,NA
dbplyr,0e0591f0b05780dee35fe58c659cfde3,"`case_match()` now works with strings on the left hand side (@​mgirlich, #1143).",1,107,FALSE,NA
dbplyr,226f05beec1ccc62edf38fc23bbec39e,"The rank functions (`row_number()`, `min_rank()`, `rank()`, `dense_rank()`, `percent_rank()`, and `cume_dist()`) now work again for variables wrapped in `desc()`, e.g. `row_number(desc(x))` (@​mgirlich, #1118).",1,108,FALSE,NA
dbplyr,d97bc3ff5de5f5c10b54c7d2d118fe82,"Moved argument `auto_index` after `...` in `*_join()` (@​mgirlich, #1115).",1,109,FALSE,NA
dbplyr,677e67d9653d93b70cab48d6c7b53d80,"Removed dependency on assertthat (@​mgirlich, #1112).",1,110,FALSE,NA
dbplyr,ff7ba090bd9fa846010ecd801798df4d,"`across()` now uses the original value when a column is overridden to match the behaviour of dplyr. For example `mutate(df, across(c(x, y), ~ .x / x))` now produces",1,111,FALSE,NA
dbplyr,ff7ba090bd9fa846010ecd801798df4d,"```
SELECT `x` / `x` AS `x`, `y` / `x` AS `y`
FROM `df`
```",1,112,TRUE,NA
dbplyr,ff7ba090bd9fa846010ecd801798df4d,instead of,1,112,FALSE,NA
dbplyr,ff7ba090bd9fa846010ecd801798df4d,"```
SELECT `x`, `y` / `x` AS `y`
FROM (
  SELECT `x` / `x` AS `x`, `y`
  FROM `df`
) 
```",1,113,TRUE,NA
dbplyr,ff7ba090bd9fa846010ecd801798df4d,"(@​mgirlich, #1015).",1,113,FALSE,NA
dbplyr,65a1c4c34a074ae2f74ddb3c40f11ad6,"Restricted length of table aliases to avoid truncation on certain backends (e.g., Postgres) (@​fh-mthomson, #1096)",1,114,FALSE,NA
dbplyr,01eac2c8bcf1540d6a2ddfc408250001,"Compatibility with purrr 1.0.0 (@​mgirlich, #1085).",1,115,FALSE,NA
dbplyr,e68aaa276d4902de3019aa01a0561cb8,"`stringr::str_like()` (new in 1.5.0) is translated to the closest `LIKE` equivalent (@​rjpat, #509)",1,116,FALSE,NA
dbplyr,ef37784397a5e63e698b4cf17970884e,In preparation for dplyr 1.1.0:,1,117,FALSE,NA
dbplyr,ef37784397a5e63e698b4cf17970884e,"• The `.by` argument is supported (@​mgirlich, #1051).",2,118,FALSE,In preparation for dplyr 1.1.0:
dbplyr,ef37784397a5e63e698b4cf17970884e,"• Passing `...` to `across()` is deprecated because the evaluation timing of `...` is ambiguous. Now instead of (e.g.) `across(a:b, mean, na.rm = TRUE)` use `across(a:b, \(x) mean(x, na.rm = TRUE)`",2,119,FALSE,In preparation for dplyr 1.1.0:
dbplyr,ef37784397a5e63e698b4cf17970884e,"• `pick()` is translated (@​mgirlich, #1044).",2,120,FALSE,In preparation for dplyr 1.1.0:
dbplyr,ef37784397a5e63e698b4cf17970884e,"• `case_match()` is translated (@​mgirlich, #1020).",2,121,FALSE,In preparation for dplyr 1.1.0:
dbplyr,ef37784397a5e63e698b4cf17970884e,"• `case_when()` now supports the `.default` argument (@​mgirlich, #1017).",2,122,FALSE,In preparation for dplyr 1.1.0:
dbplyr,bf5043578f97d6b0f189d72fb133df70,"Variables that aren't found in either the data or in the environment now produce an error (@​mgirlich, #907).",1,123,FALSE,NA
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:",1,124,FALSE,NA
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `*_join()` + `select()` (@​mgirlich, #876).",2,125,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `select()` + `*_join()` (@​mgirlich, #875).",2,126,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `mutate()` + `filter()` and `filter()` + `filter()` (@​mgirlich, #792).",2,127,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `distinct()` (@​mgirlich, #880).",2,128,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `summarise()` + `filter()` now translates to `HAVING` (@​mgirlich, #877).",2,129,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,c089aad85a5abab610d2c28e5df2a96b,"• `left/inner_join()` + `left/inner_join()` (@​mgirlich, #865).",2,130,FALSE,"dbplyr now produces fewer subqueries resulting in shorter, more readable, and, in some cases, faster SQL. The following combination of verbs now avoids a subquery if possible:"
dbplyr,f51fdc174e2c0a0d9c7258db54670682,"dbplyr now uses `SELECT *` after a join instead of explicitly selecting every column, where possible (@​mgirlich, #898).",1,131,FALSE,NA
dbplyr,36b55291a733f66f12b78abc611c7e2f,"Joins only use the table aliases (""LHS"" and ""RHS"") if necessary (@​mgirlich).",1,132,FALSE,NA
dbplyr,da1310ae95150e141eddb7eccd5a8f3f,"When using common table expressions, the results of joins and set operations are now reused (@​mgirlich, #978).",1,133,FALSE,NA
dbplyr,98c4846cb1e07a999a54720da44971b8,"Many errors have been improved and now show the function where the error happened instead of a helper function (@​mgirlich, #907).",1,134,FALSE,NA
dbplyr,f6eadc896f7c7e4d636aa0a59e25eb87,"Errors produced by the database, e.g. in `collect()` or `rows_*()`, now show the verb where the error happened (@​mgirlich).",1,135,FALSE,NA
dbplyr,36041b1dbc329ca6eeb13842ce858435,"`window_order()` now produces a better error message when applied to a data frame (@​mgirlich, #947).",1,136,FALSE,NA
dbplyr,eba088dd19b45b56299c003e8aca2595,"Using a named `across()` now gives a clear error message (@​mgirlich, #761).",1,137,FALSE,NA
dbplyr,5cefa7f276689600fd1927297c9d1ef7,"Keyword highlighting can now be customised via the option `dbplyr_highlight`. Turn it off via `options(dbplyr_highlight = FALSE)` or pass a custom ansi style, e.g. `options(dbplyr_highlight = cli::combine_ansi_styles(""bold"", ""cyan""))` (@​mgirlich, #974).",1,138,FALSE,NA
dbplyr,01ed9ca68b036bcd745e2b7ff3ecb064,"The rank functions (`row_number()`, `min_rank()`, `rank()`, `dense_rank()`, `percent_rank()`, and `cume_dist()`) now give missing values the rank NA to match the behaviour of dplyr (@​mgirlich, #991).",1,139,FALSE,NA
dbplyr,cc0287a0888f49a2cdcc129f70e43b61,`NA`s in `blob()`s are correctly translated to `NULL` (#983).,1,140,FALSE,NA
dbplyr,36c2289566ea4c5ceea1cd049b6f554e,"`copy_inline()` gains a `types` argument to specify the SQL column types (@​mgirlich, #963).",1,141,FALSE,NA
dbplyr,f8905bb331e414562a48cda78d33d9e9,"`cur_column()` is now supported (@​mgirlich, #951).",1,142,FALSE,NA
dbplyr,2c756e0f3192d93ba320f1cd435ff44e,"`distinct()` returns columns ordered the way you request, not the same as the input data (@​mgirlich).",1,143,FALSE,NA
dbplyr,40f35a237df16fc868b30c6c3ecc68de,"`fill()` can now fill ""downup"" and ""updown"" (@​mgirlich, #1057), and now order by non-numeric columns also in the up direction (@​mgirlich, #1057).",1,144,FALSE,NA
dbplyr,4e558daa79cdbad80290f2371063cea8,`filter()` now works when using a window function and an external vector (#1048).,1,145,FALSE,NA
dbplyr,7e3fe92af5ec14dfaebf8d0cee98ab3e,"`group_by()` + renamed columns works once again (@​mgirlich, #928).",1,146,FALSE,NA
dbplyr,607229410c1028f68a04feca58703cbd,"`last()` is correctly translated when no window frame is specified (@​mgirlich, #1063).",1,147,FALSE,NA
dbplyr,24fedc9025dce5ad00aa4bb87fbb80fe,"`setOldClass()` uses a namespace, fixing an installation issue (@​mgirlich, #927).",1,148,FALSE,NA
dbplyr,6fd8dbad56d5762de57c6f4835047353,"`sql()` is now translated differently. The `...` are now evaluated locally instead of being translated with `translate_sql()` (@​mgirlich, #952).",1,149,FALSE,NA
dbplyr,23bcba95028b67fb74c74d175785761d,HANA:,1,150,FALSE,NA
dbplyr,23bcba95028b67fb74c74d175785761d,• Correctly translates `as.character()` (#1027).,2,151,FALSE,HANA:
dbplyr,23bcba95028b67fb74c74d175785761d,• `copy_inline()` now works for Hana (#950),2,152,FALSE,HANA:
dbplyr,36b5de1db27b0f16e868ab0dcea27e10,MySQL:,1,153,FALSE,NA
dbplyr,36b5de1db27b0f16e868ab0dcea27e10,"• `str_flatten()` uses `collapse = """"` by default (@​fh-afrachioni, #993)",2,154,FALSE,MySQL:
dbplyr,4f11bf6fe4f7d986fa2fc367b7673062,Oracle:,1,155,FALSE,NA
dbplyr,4f11bf6fe4f7d986fa2fc367b7673062,"• `slice_sample()` now works for Oracle (@​mgirlich, #986).",2,156,FALSE,Oracle:
dbplyr,4f11bf6fe4f7d986fa2fc367b7673062,• `copy_inline()` now works for Oracle (#972),2,157,FALSE,Oracle:
dbplyr,eae68832d9e96ea9416872acec3811b7,PostgreSQL:,1,158,FALSE,NA
dbplyr,eae68832d9e96ea9416872acec3811b7,• Generates correct literals for Dates (#727).,2,159,FALSE,PostgreSQL:
dbplyr,eae68832d9e96ea9416872acec3811b7,"• `str_flatten()` uses `collapse = """"` by default (@​fh-afrachioni, #993)",2,160,FALSE,PostgreSQL:
dbplyr,eae68832d9e96ea9416872acec3811b7,"• `rows_*()` use the column types of `x` when auto copying (@​mgirlich, #909).",2,161,FALSE,PostgreSQL:
dbplyr,9563cf98a81098eea9cc9f3142f170ab,Redshift:,1,162,FALSE,NA
dbplyr,9563cf98a81098eea9cc9f3142f170ab,"• `round()` now respects the `digits` argument (@​owenjonesuob, #1033).",2,163,FALSE,Redshift:
dbplyr,9563cf98a81098eea9cc9f3142f170ab,"• No longer tries to use named windows anymore (@​owenjonesuob, #1035).",2,164,FALSE,Redshift:
dbplyr,9563cf98a81098eea9cc9f3142f170ab,"• `copy_inline()` now works for Redshift (#949, thanks to @​ejneer for an initial implementation).",2,165,FALSE,Redshift:
dbplyr,9563cf98a81098eea9cc9f3142f170ab,"• `str_flatten()` uses `collapse = """"` by default (@​fh-afrachioni, #993)",2,166,FALSE,Redshift:
dbplyr,b28aa8d7afb4757841b6cd4f97e38f01,Snowflake:,1,167,FALSE,NA
dbplyr,af53beffab45e7fab1c00062516ac9a6,"numeric functions: `all()`, `any()`, `log10()`, `round()`, `cor()`, `cov()` and `sd()`.",1,168,FALSE,NA
dbplyr,54a15b64eae77eb9aa7ebfa841762661,"date functions: `day()`, `mday()`, `wday()`, `yday()`, `week()`, `isoweek()`, `month()`, `quarter()`, `isoyear()`, `seconds()`, `minutes()`, `hours()`, `days()`, `weeks()`, `months()`, `years()` and `floor_date()`.",1,169,FALSE,NA
dbplyr,58e6eac64925823a246c5cc7d43d82f9,"string functions: `grepl()`, `paste()`, `paste0()`, `str_c()`, `str_locate()`, `str_detect()`, `str_replace()`, `str_replace_all()`, `str_remove()`, `str_remove_all()`, `str_trim()`, `str_squish()` and `str_flatten()` (@​fh-afrachioni, #860).",1,170,FALSE,NA
dbplyr,ac01baf28eb123a3b1e0d2400b5b9d94,"`str_flatten()` uses `collapse = """"` by default (@​fh-afrachioni, #993)",1,171,FALSE,NA
dbplyr,9066b0e4489aecc81e6f2472d303314f,SQLite:,1,172,FALSE,NA
dbplyr,9066b0e4489aecc81e6f2472d303314f,"• `quantile()` gives a better error saying that it is not supported (@​mgirlich, #1000).",2,173,FALSE,SQLite:
dbplyr,8a45d154c897532618884596847b7bc5,SQL server:,1,174,FALSE,NA
dbplyr,8a45d154c897532618884596847b7bc5,"• `as.POSIXct()` now translated correctly (@​krlmlr, #1011).",2,175,FALSE,SQL server:
dbplyr,8a45d154c897532618884596847b7bc5,• `median()` now translated correctly (#1008).,2,176,FALSE,SQL server:
dbplyr,8a45d154c897532618884596847b7bc5,"• `pivot_wider()` works again for MS SQL (@​mgirlich, #929).",2,177,FALSE,SQL server:
dbplyr,8a45d154c897532618884596847b7bc5,"• Always use 1 and 0 as literals for logicals (@​krlmlr, #934).",2,178,FALSE,SQL server:
dbplyr,cbd36011742eac422000114fd723a2bf,Teradata:,1,179,FALSE,NA
dbplyr,cbd36011742eac422000114fd723a2bf,"• Querying works again. Unfortunately, the fix requires every column to once again by explicitly selected (@​mgirlich, #966).",2,180,FALSE,Teradata:
dbplyr,cbd36011742eac422000114fd723a2bf,"• New translations for `as.Date()`, `week()`, `quarter()`, `paste()`, `startsWith()`, `row_number()`, `weighted.mean()`, `lead()`, `lag()`, and `cumsum()` (@​overmar, #913).",2,181,FALSE,Teradata:
dbplyr,7c55add6013ae1aee7adf4a862192de3,"Querying Oracle databases works again. Unfortunately, the fix requires every column to be explicitly selected again (@​mgirlich, #908).",1,182,FALSE,NA
dbplyr,a056cbcaf4578c9597276b08643ce7c2,"`semi_join()` and `anti_join()` work again for Spark (@​mgirlich, #915).",1,183,FALSE,NA
dbplyr,2499fa11eddd83cb8752a85ff2423703,"`str_c()` is now translated to `||` in Oracle (@​mgirlich, #921).",1,184,FALSE,NA
dbplyr,b47584c34243b666cf78ad4c9ce9119b,"`sd()`, `var()`, `cor()` and `cov()` now give clear error messages on databases that don't support them.",1,185,FALSE,NA
dbplyr,f60f3a34caf4accd4e1449abc233f9b6,`any()` and `all()` gain default translations for all backends.,1,186,FALSE,NA
dbplyr,a8cb9d7804f6246fe116b67ee939fe4c,"SQL formatting has been considerably improved with new wrapping and indenting. `show_query()` creates more readable queries by printing the keywords in blue (@​mgirlich, #644). When possible dbplyr now uses `SELECT *` instead of explicitly selecting every column (@​mgirlich).",1,187,FALSE,NA
dbplyr,2b0f18a04754207a7de8a4c4ee59ee15,"Added support for `rows_insert()`, `rows_append()`, `rows_update()`, `rows_patch()`, `rows_upsert()`, and `rows_delete()` (@​mgirlich, #736).",1,188,FALSE,NA
dbplyr,6b4d3af10d8aeb6a0339f4dba3a92522,"Added `copy_inline()` as a `copy_to()` equivalent that does not need write access (@​mgirlich, #628).",1,189,FALSE,NA
dbplyr,201d1e2f7ffdf3074f92958cbc4d3280,"`remote_query()`, `show_query()`, `compute()` and `collect()` have an experimental `cte` argument. If `TRUE` the SQL query will use common table expressions instead of nested queries (@​mgirlich, #638).",1,190,FALSE,NA
dbplyr,bc2e25bef5c97ec33fc0db79d5d8f084,"New `in_catalog()`, which works like `in_schema()`, but allows creation of table identifiers consisting of three components: catalog, schema, name (#806, @​krlmlr).",1,191,FALSE,NA
dbplyr,278c07192ef383dc6dcbe5350174fbf7,"When possible, dbplyr now uses `SELECT *` instead of explicitly selecting every column (@​mgirlich).",1,192,FALSE,NA
dbplyr,956438518c14f85a536cc4116f29c253,"New translation for `cut()` (@​mgirlich, #697).",1,193,FALSE,NA
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,Improved translations for specific backends:,1,194,FALSE,NA
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `as.Date()` for Oracle (@​mgirlich, #661).",2,195,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `case_when()` with a final clause of the form `TRUE ~ ...` uses `ELSE ...` for SQLite (@​mgirlich, #754).",2,196,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `day()`, `week()`, `isoweek()`, and `isoyear()` for Postgres (@​mgirlich, #675).",2,197,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,• `explain()` for ROracle (@​mgirlich).,2,198,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `fill()` for SQL Server (#651, @​mgirlich) and RPostgreSQL (@​mgirlich).",2,199,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `quantile()` for SQL Server (@​mgirlich, #620).",2,200,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `str_flatten()` for Redshift (@​hdplsa, #804)",2,201,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `slice_sample()` for MySQL/MariaDB and SQL Server (@​mgirlich, #617).",2,202,FALSE,Improved translations for specific backends:
dbplyr,4e02866b4bad247dd70fc49d8bc1ffb1,"• `union()` for Hive (@​mgirlich, #663).",2,203,FALSE,Improved translations for specific backends:
dbplyr,ac7ec8e4377b01365aeae7d63762d33f,"The backend function `dbplyr_fill0()` (used for databases that lack `IGNORE NULLS` support) now respects database specific translations (@​rsund, #753).",1,204,FALSE,NA
dbplyr,e670ecd108a052a9d0b5a45410c24b8e,"Calls of the form `stringr::foo()` or `lubridate::foo()` are now evaluated in the database, rather than locally (#197).",1,205,FALSE,NA
dbplyr,4a740e1177b34dca662b0ca4671bbdab,"Unary plus (e.g. `db %>% filter(x == +1)`) now works (@​mgirlich, #674).",1,206,FALSE,NA
dbplyr,19676eb4d30a351e146138788658d960,"`is.na()`, `ifelse()`, `if_else()`, `case_when()`, and `if()` generate slightly more compact SQL (@​mgirlich, #738).",1,207,FALSE,NA
dbplyr,3561c64b656e9ddc60b855b36e97ee98,"`if_else()` now supports the `missing` argument (@​mgirlich, #641).",1,208,FALSE,NA
dbplyr,442a4fcd81e33154b9c04246bd5fdfe8,"`n()` now respects the window frame (@​mgirlich, #700).",1,209,FALSE,NA
dbplyr,36dd91d13a65d7fb5a9e7376648907ad,"`quantile()` no longer errors when using the `na.rm` argument (@​mgirlich, #600).",1,210,FALSE,NA
dbplyr,80021a28d0b3e8aea5f4d20b2ea27e0a,"`remote_name()` now returns a name in more cases where it makes sense (@​mgirlich, #850).",1,211,FALSE,NA
dbplyr,c6b76e146edde5259da50c4ead75aa03,"The partial evaluation code is now more aligned with `dtplyr`. This makes it easier to transfer bug fixes and new features from one package to the other. In this process the second argument of `partial_eval()` was changed to a lazy frame instead of a character vector of variables (@​mgirlich, #766). Partially evaluated expressions with infix operations are now correctly translated. For example `translate_sql(!!expr(2 - 1) * x)` now works (@​mgirlich, #634).",1,212,FALSE,NA
dbplyr,d885b64e4f3095d9a981cb874a754ff1,"New `pillar::tbl_format_header()` method for lazy tables: Printing a lazy table where all rows are displayed also shows the exact number of rows in the header. The threshold is controlled by `getOption(""pillar.print_min"")`, with a default of 10 (#796, @​krlmlr).",1,213,FALSE,NA
dbplyr,6e656d186292179a65c052a3e5b54de2,The 1st edition extension mechanism is formally deprecated (#507).,1,214,FALSE,NA
dbplyr,6ec5839f24760e01a6965e99d5c2736c,"`across()`, `if_any()` and `if_all()` now defaults to `.cols = everything()` (@​mgirlich, #760). If `.fns` is not provided `if_any()` and `if_all()` work like a parallel version of `any()`/`any()` (@​mgirlich, #734).",1,215,FALSE,NA
dbplyr,74c5ec94081d06b2e174a53cadef8f9e,"`across()`, `if_any()`, and `if_all()` can now translate evaluated lists and functions (@​mgirlich, #796), and accept the name of a list of functions (@​mgirlich, #817).",1,216,FALSE,NA
dbplyr,71f558b3ed350fd0c2f76b40ab92f495,"Multiple `across()` calls in `mutate()` and `transmute()` can now access freshly created variables (@​mgirlich, #802).",1,217,FALSE,NA
dbplyr,b9555e867a58c26380e11e682469f43a,"`add_count()` now doesn't change the groups of the input (@​mgirlich, #614).",1,218,FALSE,NA
dbplyr,a51d3bee482a6f9efbbe8f35d8671906,"`compute()` can now handle when `name` is named by unnaming it first (@​mgirlich, #623), and now works when `temporary = TRUE` for Oracle (@​mgirlich, #621).",1,219,FALSE,NA
dbplyr,973a089ebc1e42bc5c8f0f3df851326f,"`distinct()` now supports `.keep_all = TRUE` (@​mgirlich, #756).",1,220,FALSE,NA
dbplyr,2f391f6a90cf68e6d65c897d597b5c78,"`expand()` now works in DuckDB (@​mgirlich, #712).",1,221,FALSE,NA
dbplyr,421c999a56cd0e42fa332cc7ff5d4c8f,"`explain()` passes `...` to methods (@​mgirlich, #783), and works for Redshift (@​mgirlich, #740).",1,222,FALSE,NA
dbplyr,f4a18ffe50352a53ac89abf257753e6d,"`filter()` throws an error if you supply a named argument (@​mgirlich, #764).",1,223,FALSE,NA
dbplyr,6eec30bd2954e4893de900af4605b01e,"Joins disambiguates columns that only differ in case (@​mgirlich, #702). New arguments `x_as` and `y_as` allow you to control the table alias used in SQL query (@​mgirlich, #637). Joins with `na_matches = ""na""` now work for DuckDB (@​mgirlich, #704).",1,224,FALSE,NA
dbplyr,75e8f7786bdda25198881ed80fd89dc0,"`mutate()` and `transmute()` use named windows if a window definition is used at least twice and the backend supports named windows (@​mgirlich, #624).",1,225,FALSE,NA
dbplyr,9c99b61218b4ed7d688935b485be2e2b,"`mutate()` now supports the arguments `.keep`, `.before`, and `.after` (@​mgirlich, #802).",1,226,FALSE,NA
dbplyr,03d886f13daf20a13f29ce372ba87832,`na.rm = FALSE` only warns once every 8 hours across all functions (#899).,1,227,FALSE,NA
dbplyr,68058b8f012ea4c5ef5997fa1a6780b9,"`nesting()` now supports the `.name_repair` argument (@​mgirlich, #654).",1,228,FALSE,NA
dbplyr,d4b3d0927ae67890b3e44bce72731b19,"`pivot_longer()` can now pivot a column named `name` (@​mgirlich, #692), can repair names (@​mgirlich, #694), and can work with multiple `names_from` columns (@​mgirlich, #693).",1,229,FALSE,NA
dbplyr,2565f13b1bfbac60a1d8308eb22f128e,"`pivot_wider(values_fn = )` and `pivot_longer(values_transform = )` can now be formulas (@​mgirlich, #745).",1,230,FALSE,NA
dbplyr,af8556e6562392c19c6703672ce694e9,"`pivot_wider()` now supports the arguments `names_vary`, `names_expand`, and `unused_fn` (@​mgirlich, #774).",1,231,FALSE,NA
dbplyr,a50058d10c4f85a118a7c8b3bd3931e1,"`remote_name()` now returns a name in more cases where it makes sense (@​mgirlich, #850).",1,232,FALSE,NA
dbplyr,9be880ddeb3de96bb1a8aae9021df8ca,`sql_random()` is now exported.,1,233,FALSE,NA
dbplyr,45a52c20636671905680b17e9a694ad4,"`ungroup()` removes variables in `...` from grouping (@​mgirlich, #689).",1,234,FALSE,NA
dbplyr,c72020221039a8cf21ab30a832e88009,"`transmute()` now keeps grouping variables (@​mgirlich, #802).",1,235,FALSE,NA
dbplyr,1f4df3d18d83b9e530fa1571daddcf41,New support for Snowflake (@​edgararuiz),1,236,FALSE,NA
dbplyr,5859187ae98b544cbffb0a106c582944,"`compute()`, `sql_table_index()`, and `sql_query_wrap()` now work with schemas (@​mgirlich, #595).",1,237,FALSE,NA
dbplyr,592a29fed5a054dd2220c780524a6b34,`if_any()` and `if_all()` are now translated.,1,238,FALSE,NA
dbplyr,7a698927ab2b011c01df6e208a88ef8e,"`group_by()` now ungroups when the dots argument is empty and `.add` is `FALSE` (@​mgirlich, #615).",1,239,FALSE,NA
dbplyr,dc8b5e679871024b2397d069743b3c99,"`sql_escape_date()` and `sql_escape_datetime` gain methods for MS Access (@​erikvona, #608).",1,240,FALSE,NA
dbplyr,b0f2afb79e18fa9400587007ac46a120,"Thanks to @​mgirlich, dbplyr gains support for key verbs from tidyr: `pivot_longer()` (#532), `pivot_wider()` (#543), `expand()` (#538), `complete()` (#538), `replace_na()` (#538), `fill()` (#566).",1,241,FALSE,NA
dbplyr,9219735558d9ff50b1c23944587627da,@​mgirlich is now a dbplyr author in recognition of his significant and sustained contributions.,1,242,FALSE,NA
dbplyr,8ebb7d5dfb87c04b3cdbef0e0322e9ee,"`across()` implementation has been rewritten to support more inputs: it now translates formulas (#525), works with SQL functions that don't have R translations (#534), and work with `NULL` (#554)",1,243,FALSE,NA
dbplyr,5de4b442cb5bac8aa8222c53d1b994e7,"`summarise()` now supports argument `.groups` (@​mgirlich, #584).",1,244,FALSE,NA
dbplyr,166e910ffc1df574004c17b9e1142097,"All backends: `str_sub()`, `substr()` and `substring()` get better translations (#577). Most importantly, the results of using negative locations should match the underlying R implementations more closely.",1,245,FALSE,NA
dbplyr,9be1065a3c71db2ba325ea4eb54cf069,MS SQL:,1,246,FALSE,NA
dbplyr,9be1065a3c71db2ba325ea4eb54cf069,"• `as.integer()` and `as.integer64()` translations cast first to `NUMERIC` to avoid CASTing weirdness (@​DavidPatShuiFong, #496).",2,247,FALSE,MS SQL:
dbplyr,9be1065a3c71db2ba325ea4eb54cf069,• Assumes a boolean context inside of `[` (#546),2,248,FALSE,MS SQL:
dbplyr,9be1065a3c71db2ba325ea4eb54cf069,• `str_sub()` with `end = -1` now works (#577).,2,249,FALSE,MS SQL:
dbplyr,f7e064b7ea5ffccb5ad9a47bc624170b,"Redshift: `lag()` and `lead()` lose the `default` parameter since it's not supported (@​hdplsa, #548).",1,250,FALSE,NA
dbplyr,34e0f702f837cbbe69ea76eb10d1f2a3,"SQLite: custom translation of `full_join()` and `right_join()` (@​mgirlich, #536).",1,251,FALSE,NA
dbplyr,1dd23003ea7091453a2270c71b663da1,RPostgreSQL backend warns if `temporary = TRUE` since temporary tables are not supported by `RPostgreSQL::dbWriteTable()` (#574).,1,252,FALSE,NA
dbplyr,242cd72bf11a328240e8eb8ad9355332,`count()` method provides closer match to dplyr semantics (#347).,1,253,FALSE,NA
dbplyr,9344e66cc9fc7eb2203c278926f72735,"`distinct()` now respects grouping (@​mgirlich, #535).",1,254,FALSE,NA
dbplyr,886e48e0caad432a487c6a68bf936ade,"`db_connection_describe()` no longer uses partial matching (@​mgirlich, #564).",1,255,FALSE,NA
dbplyr,f3acceb1f7e6ab176c4ee00a770a3ad5,`pull()` no longer `select()`s the result when there's already only one variable (#562).,1,256,FALSE,NA
dbplyr,30cb8c51349a74e568131f83b00ca5ba,"`select()` no longer relocates grouping variables to the front (@​mgirlich, #568). and informs when adding missing grouping variables (@​mgirlich, #559).",1,257,FALSE,NA
dbplyr,612f20705352071a1c690e1a851275d8,`tbl.src_dbi(...)` now passed on to `tbl_sql()` (#530).,1,258,FALSE,NA
dbplyr,4b5f23fa91b2a04ec2f855f3a5e58458,`across()` is now translated into individual SQL statements (#480).,1,259,FALSE,NA
dbplyr,d2336338f6921310d21369843799334d,`rename()` and `select()` support dplyr 1.0.0 tidyselect syntax (apart from predicate functions which can't easily work on computed queries) (#502).,1,260,FALSE,NA
dbplyr,615d97f471148574b192dee4d5c19318,`relocate()` makes it easy to move columns (#494) and `rename_with()` makes it easy to rename columns programmatically (#502).,1,261,FALSE,NA
dbplyr,cf3908c02c641dfcf0b749bae6adee60,"`slice_min()`, `slice_max()`, and `slice_order()` are now supported. `slice_head()` and `slice_tail()` throw clear error messages (#394)",1,262,FALSE,NA
dbplyr,ea14529c5297f851cd8499d0a603a8a5,Documentation has been radically improved with new topics for each major verb and each backend giving more details about the SQL translation.,1,263,FALSE,NA
dbplyr,0525b73e85d6bacd8ef3c615e6ad45e3,"`intersect()`, `union()` and `setdiff()` gain an `all` argument to add the `ALL` argument (#414).",1,264,FALSE,NA
dbplyr,642e36bd124ded49ef003d5783979231,"Join functions gains a `na_matches` argument that allows you to control whether or not `NA` (`NULL`) values match other `NA` values. The default is `""never""`, which is the usual behaviour in databases. You can set `na_matches = ""na""` to match R's usual join behaviour (#180). Additional arguments error (instead of being silently swallowed) (#382).",1,265,FALSE,NA
dbplyr,585bb32b9de8cbda9c1647f800090360,Joins now only use aliases where needed to disambiguate columns; this should make generated queries more readable.,1,266,FALSE,NA
dbplyr,020dbb11d64db13eb60b9c66ab327751,"Subqueries no longer include an `ORDER BY` clause. This is not part of the SQL spec, and has very limited support across databases. Now such queries generate a warning suggesting that you move your `arrange()` call later in the pipeline (#276). (There's one exception: `ORDER BY` is still generated if `LIMIT` is present; this tends to affect the returns rows but not necessarily their order).",1,267,FALSE,NA
dbplyr,08037c079d3790e277267df110d0580e,Subquery names are now scoped within the query. This makes query text deterministic which helps some query optimisers/cachers (#336).,1,268,FALSE,NA
dbplyr,b1ee095ea2fe84261325f75f9b3048b6,`sql_optimise()` now can partially optimise a pipeline; due to an unfortunate bug it previously gave up too easily.,1,269,FALSE,NA
dbplyr,48ca1016700aa4df2a3a66348142cc3a,"`in_schema()` quotes each input individually (#287) (use `sql()` to opt out of quoting, if needed). And `DBI::Id()` should work anywhere that `in_schema()` does.",1,270,FALSE,NA
dbplyr,ea074ce902288a59a04e28b66345ba66,Experimental new SAP HANA backend (#233). Requires the latest version of odbc.,1,271,FALSE,NA
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,All backends:,1,272,FALSE,NA
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,"• You can now use `::` in translations, so that (e.g.) `dbplyr::n()` is translated to `count(*)` (#207).",2,273,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,• `[[` can now also translate numeric indices (#520).,2,274,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,• `%/%` now generates a clear error message; previously it was translated to `/` which is not correct (#108).,2,275,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,• `n()` is translated to `count(*)` instead of `count()` (#343).,2,276,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,• `sub_str()` translation is more consistent in edge cases (@​ianmcook).,2,277,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,"• All `median()` (@​lorenzwalthert, #483), `pmin()`, `pmax()` (#479), `sd()` and `var()` functions have an `na.rm` argument that warns once when not `TRUE`. This makes them consistent with `mean()` and `sum()`.",2,278,FALSE,All backends:
dbplyr,ec5136ced6ce00f03b18bb6d35352bf1,• `substring()` is now translated the same way as `substr()` (#378).,2,279,FALSE,All backends:
dbplyr,f9284d0bc9fbfc4aa1e2a1c133eaacdb,"blob vectors can now be used with `!!` and `!!!` operators, for example in `filter()` (@​okhoma, #433)",1,280,FALSE,NA
dbplyr,eb6bdcb5324eff25b51d273322e6c66b,MySQL uses standard SQL for index creation.,1,281,FALSE,NA
dbplyr,c532fb1279b0fd30d1162f8aee6252b7,"MS SQL translation does better a distinguishing between bit and boolean (#377, #318). `if` and `ifelse` once again generate `IIF`, creating simpler expressions. `as.*()` function uses `TRY_CAST()` instead of `CAST()` for version 11+ (2012+) (@​DavidPatShuiFong, #380).",1,282,FALSE,NA
dbplyr,4da5f4df216b91c509736ef8c5357a77,odbc no longer translates `count()`; this was an accidental inclusion.,1,283,FALSE,NA
dbplyr,84aa21c4d7dd667433ca65f96c9506f4,"Oracle translation now depends on Oracle 12c, and uses a ""row-limiting"" clause for `head()`. It gains translations for `today()` and `now()`, and improved `as.Date()` translation (@​rlh1994, #267).",1,284,FALSE,NA
dbplyr,b57ab1d45a5c8bce38d69e10dabbc1b8,"PostgreSQL: new translations for lubridate period functions `years()`, `months()`, `days()`, and `floor_date()` (@​bkkkk, #333) and stringr functions `str_squish()`, `str_remove()`, and `str_remove_all()` (@​shosaco).",1,285,FALSE,NA
dbplyr,15fd8b20616e08428cdd6cedec692f01,New RedShift translations when used with `RPostgres::Redshift()`.,1,286,FALSE,NA
dbplyr,15fd8b20616e08428cdd6cedec692f01,"• `str_replace()` errors since there's no Redshift translation, and `str_replace_all()` uses `REGEXP_REPLACE()` (#446).",2,287,FALSE,New RedShift translations when used with `RPostgres::Redshift()`.
dbplyr,15fd8b20616e08428cdd6cedec692f01,• `paste()` and `paste0()` use `||` (#458).,2,288,FALSE,New RedShift translations when used with `RPostgres::Redshift()`.
dbplyr,15fd8b20616e08428cdd6cedec692f01,• `as.numeric()` and `as.double()` cast to `FLOAT` (#408).,2,289,FALSE,New RedShift translations when used with `RPostgres::Redshift()`.
dbplyr,15fd8b20616e08428cdd6cedec692f01,• `substr()` and `str_sub()` use `SUBSTRING()` (#327).,2,290,FALSE,New RedShift translations when used with `RPostgres::Redshift()`.
dbplyr,d2d33382d137b6b0c16e280011f0ffba,"SQLite gains translations for lubridate functions `today()`, `now()`, `year()`, `month()`, `day()`, `hour()`, `minute()`, `second()`,`yday()` (#262), and correct translation for `median()` (#357).",1,291,FALSE,NA
dbplyr,60a7e58e93c008b809e686af4050f93c,New `dbplyr_edition()` generic allows you to opt-in to the 2nd edition of the dbplyr API.,1,292,FALSE,NA
dbplyr,30dff8051be7bb883a9ba07e21043d9d,"`db_write_table()` now calls `DBI::dbWriteTable()` instead of nine generics that formerly each did a small part: `db_create_indexes()`, `db_begin()`, `db_rollback()`, `db_commit()`, `db_list_tables()`, `drop_drop_table()`, `db_has_table()`, `db_create_table()`, and `db_data_types()`. You can now delete the methods for these generics. `db_query_rows()` is no longer used; it appears that it hasn't been used for some time, so if you have a method, you can delete it.",1,293,FALSE,NA
dbplyr,fd985fafc66b6c33b219f6a8f16a0d90,`DBI::dbQuoteIdentifier()` is now used instead of `sql_escape_ident()` and `DBI::dbQuoteString()` instead of `sql_escape_string()`.,1,294,FALSE,NA
dbplyr,f0e5be61a2aad1276d5379acf47885be,A number of `db_*` generics have been replaced with new SQL generation generics:,1,295,FALSE,NA
dbplyr,f0e5be61a2aad1276d5379acf47885be,• `dplyr::db_analyze()` -\> `dbplyr::sql_table_analyze()`,2,296,FALSE,A number of `db_*` generics have been replaced with new SQL generation generics:
dbplyr,f0e5be61a2aad1276d5379acf47885be,• `dplyr::db_create_index()` -\> `dbplyr::sql_table_index()`,2,297,FALSE,A number of `db_*` generics have been replaced with new SQL generation generics:
dbplyr,f0e5be61a2aad1276d5379acf47885be,• `dplyr::db_explain()` -\> `dbplyr::sql_queriy_explain()`,2,298,FALSE,A number of `db_*` generics have been replaced with new SQL generation generics:
dbplyr,f0e5be61a2aad1276d5379acf47885be,• `dplyr::db_query_fields()` -\> `dbplyr::sql_query_fields()`,2,299,FALSE,A number of `db_*` generics have been replaced with new SQL generation generics:
dbplyr,f0e5be61a2aad1276d5379acf47885be,• `dplyr::db_save_query()` -\> `dbplyr::sql_query_save()`,2,300,FALSE,A number of `db_*` generics have been replaced with new SQL generation generics:
dbplyr,af9c46f7f0d2404c4cb3edf9c35a7d1b,This makes them easier to test and is an important part of the process of moving all database generics in dbplyr (#284).,1,300,FALSE,NA
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:,1,301,FALSE,NA
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::sql_select()` -\> `dbplyr::sql_query_select()`,2,302,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::sql_join()` -\> `dbplyr::sql_query_join()`,2,303,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::sql_semi_join()` -\> `dbplyr::sql_query_semi_join()`,2,304,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::sql_set_op()` -\> `dbplyr::sql_query_set_op()`,2,305,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::sql_subquery()` -\> `dbplyr::sql_query_wrap()`,2,306,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,0324e1b3cb1956bcd8f2207bee72680f,• `dplyr::db_desc()` -\> `dbplyr::db_connection_describe()`,2,307,FALSE,A number of other generics have been renamed to facilitate the move from dplyr to dbplyr:
dbplyr,f6b3e66ee799a871bd840f588ee729e7,New `db_temporary_table()` generic makes it easier to work with databases that require temporary tables to be specially named.,1,308,FALSE,NA
dbplyr,1812138fe609966d3aa91790455eece4,"New `sql_expr_matches()` generic allows databases to use more efficient alternatives when determine if two values ""match"" (i.e. like equality but a pair of `NULL`s will also match). For more details, see https://modern-sql.com/feature/is-distinct-from",1,309,FALSE,NA
dbplyr,6ee6799b67b92b0c375bde52afde7a9f,New `sql_join_suffix()` allows backends to control the default suffixes used (#254).,1,310,FALSE,NA
dbplyr,5ebc2c0beaaccee0a806c86d88ae8f40,All old lazy eval shims have been removed. These have been deprecated for some time.,1,311,FALSE,NA
dbplyr,d9e85f262e21b7f3d3cf14220a651f83,Date-time escaping methods for Athena and Presto have moved to the packages where they belong.,1,312,FALSE,NA
dbplyr,21718579b2b372eb4f5a2bc1daea40cd,Attempting to embed a Shiny reactive in a query now gives a helpful error (#439).,1,313,FALSE,NA
dbplyr,6e984042937d68b7293bcfd035060780,`copy_lahman()` and `copy_nycflights13()` (and hence `nycflights13_sqlite()`) and friends now return DBI connections rather than the now deprecated `src_dbi()` (#440).,1,314,FALSE,NA
dbplyr,b5078bcda9d80ce0c9a913b710357ea3,"`copy_to()` can now `overwrite` when table is specified with schema (#489), and gains an `in_transaction` argument used to optionally suppress the transaction wrapper (#368).",1,315,FALSE,NA
dbplyr,4d1835ff50f91a902f7c358f9d297cd6,`distinct()` no longer duplicates column if grouped (#354).,1,316,FALSE,NA
dbplyr,6a4f90164fd057d0ed38cd0410d8dc05,`transmute()` now correctly tracks variables it needs when creating subqueries (#313).,1,317,FALSE,NA
dbplyr,36243e825dbe79ee6147e2dd1b00d1d5,`mutate()` grouping variables no longer generates a downstream error (#396),1,318,FALSE,NA
dbplyr,349f1707d366b1c2cc404258c635f7d5,`mutate()` correctly generates subqueries when you re-use the same variable three or more times (#412).,1,319,FALSE,NA
dbplyr,3da32d4b5373ecd64155df503c75f9f3,"`window_order()` overrides ordering, rather than appending to it.",1,320,FALSE,NA
dbplyr,0daef03c5529c5a8f7733ac882165292,"Internally `DBI::dbExecute()` now uses `immediate = TRUE`; this improves support for session-scoped temporary tables in MS SQL (@​krlmlr, #438).",1,321,FALSE,NA
dbplyr,bd9443e29c412efa97856619a2b15d2d,"Subqueries with `ORDER BY` use `TOP 9223372036854775807` instead of `TOP 100 PERCENT` on SQL Server for compatibility with Azure Data Warehouse (#337, @​alexkyllo).",1,322,FALSE,NA
dbplyr,d4d93ec30a89750e0fa9d784fdd9d0e3,"`escape()` now supports `blob` vectors using new `sql_escape_raw()` generic. It enables using blob variables in dplyr verbs, for example to filter nvarchar values by UTF-16 blobs (see https://github.com/r-dbi/DBI/issues/215#issuecomment-356376133). (@​okhoma, #433)",1,323,FALSE,NA
dbplyr,a2958d8ed0b339004aa9af43d616fd20,"Added `setOldClass()` calls for `""ident""` and `""ident_q""` classes for compatibility with dplyr 1.0.0 (#448, @​krlmlr).",1,324,FALSE,NA
dbplyr,466ff265cf2ae6511c6df6ae97320ccf,"Postgres `str_detect()` translation uses same argument names as stringr, and gains a `negate` argument (#444).",1,325,FALSE,NA
dbplyr,19c280357c516b4c837ce4a9c5a8fafb,"`semi_join()` and `anti_join()` now correctly support the `sql_on` argument (#443, @​krlmlr).",1,326,FALSE,NA
dbplyr,859179d071d2e78fb0166039504c479c,dbplyr now uses RPostgres (instead of RPostgreSQL) and RMariaDB (instead of RMySQL) for its internal tests and data functions (#427).,1,327,FALSE,NA
dbplyr,7484a7525676a9e082e50bac7cf44c77,"The Date and POSIXt methods for `escape()` now use exported `sql_escape_date()` and `sql_escape_datetime()` generics to allow backend specific formatting of date and datetime literals. These are used to provide methods for Athena and Presto backends (@​OssiLehtinen, #384, #391).",1,328,FALSE,NA
dbplyr,029592bdb695a4e33be7b1615d39ddbe,"`first()`, `last()`, `nth()`, `lead()` and `lag()` now respect the `window_frame()` (@​krlmlr, #366).",1,329,FALSE,NA
dbplyr,34f318060c3447999d90450122f4e729,"SQL server: new translations for `str_flatten()` (@​PauloJhonny, #405).",1,330,FALSE,NA
dbplyr,2d2e54bc5dc112c6bdb612442b1edf85,"SQL server: temporary datasets are now session-local, not global (#401).",1,331,FALSE,NA
dbplyr,d4030c63ba56511a16f09f89170c31d5,"Postgres: correct `str_detect()`, `str_replace()` and `str_replace_all()` translation (@​shosaco, #362).",1,332,FALSE,NA
dbplyr,2c0dc9c2f815d2cb31202912fe962596,Fix bug when partially evaluating unquoting quosure containing a single symbol (#317),1,333,FALSE,NA
dbplyr,e1e009119ac598104c88c27cc891c506,Fixes for rlang and dpylr compatibility.,1,334,FALSE,NA
dbplyr,eb8363584fc4cc6858f8d487dbc7e7af,`x %in% y` strips names of `y` (#269).,1,335,FALSE,NA
dbplyr,40c8fd820d7c4a12c90d53ec3fee84f1,"Enhancements for scoped verbs (`mutate_all()`, `summarise_if()`, `filter_at()` etc) (#296, #306).",1,336,FALSE,NA
dbplyr,6ba7dc3cf579c9b09ca2c44c4e0ac4e5,MS SQL use `TOP 100 PERCENT` as stop-gap to allow subqueries with `ORDER BY` (#277).,1,337,FALSE,NA
dbplyr,28d4467911a8be95425eebaae565bb15,"Window functions now translated correctly for Hive (#293, @​cderv).",1,338,FALSE,NA
dbplyr,5725987069fb2c669a63b73364cbf7b5,"`` Error: `con` must not be NULL ``: If you see this error, it probably means that you have forgotten to pass `con` down to a dbplyr function. Previously, dbplyr defaulted to using `simulate_dbi()` which introduced subtle escaping bugs. (It's also possible I have forgotten to pass it somewhere that the dbplyr tests don't pick up, so if you can't figure it out, please let me know).",1,339,FALSE,NA
dbplyr,dd622ffdb196af202e46cc8af7fd89ae,"Subsetting (`[[`, `$`, and `[`) functions are no longer evaluated locally. This makes the translation more consistent and enables useful new idioms for modern databases (#200).",1,340,FALSE,NA
dbplyr,f21d26e4c3710ca5ff07e284293771ff,"MySQL/MariaDB (https://mariadb.com/kb/en/library/window-functions/) and SQLite (https://www.sqlite.org/windowfunctions.html) translations gain support for window functions, available in Maria DB 10.2, MySQL 8.0, and SQLite 3.25 (#191).",1,341,FALSE,NA
dbplyr,fdd38fe94df0a2b4dfb6e698f2eba402,"Overall, dplyr generates many fewer subqueries:",1,342,FALSE,NA
dbplyr,fdd38fe94df0a2b4dfb6e698f2eba402,• Joins and semi-joins no longer add an unneeded subquery (#236). This is facilitated by the new `bare_identifier_ok` argument to `sql_render()`; the previous argument was called `root` and confused me.,2,343,FALSE,"Overall, dplyr generates many fewer subqueries:"
dbplyr,fdd38fe94df0a2b4dfb6e698f2eba402,"• Many sequences of `select()`, `rename()`, `mutate()`, and `transmute()` can be collapsed into a single query, instead of always generating a subquery (#213).",2,344,FALSE,"Overall, dplyr generates many fewer subqueries:"
dbplyr,6f2637169ae755c990ce52d81afbb65d,"New `vignette(""sql"")` describes some advantages of dbplyr over SQL (#205) and gives some advice about writing literal SQL inside of dplyr, when you need to (#196).",1,345,FALSE,NA
dbplyr,77848dfbd3b74444c56c866d23100136,"New `vignette(""reprex"")` gives some hints on creating reprexes that work anywhere (#117). This is supported by a new `tbl_memdb()` that matches the existing `tbl_lazy()`.",1,346,FALSE,NA
dbplyr,768dcc8335a949a8fb313571b681bfef,"All `..._join()` functions gain an `sql_on` argument that allows specifying arbitrary join predicates in SQL code (#146, @​krlmlr).",1,347,FALSE,NA
dbplyr,83df5ce29c69dd257975b8567b4925dc,"New translations for some lubridate functions: `today()`, `now()`, `year()`, `month()`, `day()`, `hour()`, `minute()`, `second()`, `quarter()`, `yday()` (@​colearendt, @​derekmorr). Also added new translation for `as.POSIXct()`.",1,348,FALSE,NA
dbplyr,3dd0c3ff5995d40f0f93f071c15ab24a,"New translations for stringr functions: `str_c()`, `str_sub()`, `str_length()`, `str_to_upper()`, `str_to_lower()`, and `str_to_title()` (@​colearendt). Non-translated stringr functions throw a clear error.",1,349,FALSE,NA
dbplyr,b725b7a90a4fd3d922c400c740002d2e,"New translations for bitwise operations: `bitwNot()`, `bitwAnd()`, `bitwOr()`, `bitwXor()`, `bitwShiftL()`, and `bitwShiftR()`. Unlike the base R functions, the translations do not coerce arguments to integers (@​davidchall, #235).",1,350,FALSE,NA
dbplyr,9d53a8baf936ec70e26d5b305171d354,New translation for `x[y]` to `CASE WHEN y THEN x END`. This enables `sum(a[b == 0])` to work as you expect from R (#202). `y` needs to be a logical expression; if not you will likely get a type error from your database.,1,351,FALSE,NA
dbplyr,49e3b2fc11bb214d9bba7e6c1e5ec756,"New translations for `x$y` and `x[[""y""]]` to `x.y`, enabling you to index into nested fields in databases that provide them (#158).",1,352,FALSE,NA
dbplyr,c800c94e7ac536f1030dbf724cee34f9,The `.data` and `.env` pronouns of tidy evaluation are correctly translated (#132).,1,353,FALSE,NA
dbplyr,ad959f56db13d0ef727e8c27f9fa471c,"New translation for `median()` and `quantile()`. Works for all ANSI compliant databases (SQL Server, Postgres, MariaDB, Teradata) and has custom translations for Hive. Thanks to @​edavidaja for researching the SQL variants! (#169)",1,354,FALSE,NA
dbplyr,e82859c5290f518967eed6393259d169,`na_if()` is correct translated to `NULLIF()` (rather than `NULL_IF`) (#211).,1,355,FALSE,NA
dbplyr,9e7ad126c360f98243763922eac38846,"`n_distinct()` translation throws an error when given more than one argument. (#101, #133).",1,356,FALSE,NA
dbplyr,78c07e5c0c21679852fd069084fe32c9,"New default translations for `paste()`, `paste0()`, and the hyperbolic functions (these previously were only available for ODBC databases).",1,357,FALSE,NA
dbplyr,76dc1ef04f7a8975910b227e4bd7f8f9,"Corrected translations of `pmin()` and `pmax()` to `LEAST()` and `GREATEST()` for ANSI compliant databases (#118), to `MIN()` and `MAX()` for SQLite, and to an error for SQL server.",1,358,FALSE,NA
dbplyr,6386187afc038d955f28e2e8be6a5d24,New translation for `switch()` to the simple form of `CASE WHEN` (#192).,1,359,FALSE,NA
dbplyr,1d7f2b6dfff99c510a61af4af552e38e,"SQL simulation has been overhauled. It now works reliably, is better documented, and always uses ANSI escaping (i.e. `` ` `` for field names and `'` for strings).",1,360,FALSE,NA
dbplyr,c5ca30af8fa7b86741310a364df71f56,"`tbl_lazy()` now actually puts a `dbplyr::src` in the `$src` field. This shouldn't affect any downstream code unless you were previously working around this weird difference between `tbl_lazy` and `tbl_sql` classes. It also includes the `src` class in its class, and when printed, shows the generated SQL (#111).",1,361,FALSE,NA
dbplyr,8d93558a2fa71b109ff61e72673c5729,MySQL/MariaDB,1,362,FALSE,NA
dbplyr,8d93558a2fa71b109ff61e72673c5729,"• Translations also applied to connections via the odbc package (@​colearendt, #238)",2,363,FALSE,MySQL/MariaDB
dbplyr,8d93558a2fa71b109ff61e72673c5729,"• Basic support for regular expressions via `str_detect()` and\ `str_replace_all()` (@​colearendt, #168).",2,364,FALSE,MySQL/MariaDB
dbplyr,8d93558a2fa71b109ff61e72673c5729,"• Improved translation for `as.logical(x)` to `IF(x, TRUE, FALSE)`.",2,365,FALSE,MySQL/MariaDB
dbplyr,2d7bcfbd42287415b559297d11108c23,Oracle,1,366,FALSE,NA
dbplyr,2d7bcfbd42287415b559297d11108c23,"• New custom translation for `paste()` and `paste0()` (@​cderv, #221)",2,367,FALSE,Oracle
dbplyr,ae62bddcdf46e6ca9d5dd2d8a5dc92ee,Postgres,1,368,FALSE,NA
dbplyr,ae62bddcdf46e6ca9d5dd2d8a5dc92ee,"• Basic support for regular expressions via `str_detect()` and\ `str_replace_all()` (@​colearendt, #168).",2,369,FALSE,Postgres
dbplyr,545949273e2d5727c79234d9e08db2a6,SQLite,1,370,FALSE,NA
dbplyr,545949273e2d5727c79234d9e08db2a6,"• `explain()` translation now generates `EXPLAIN QUERY PLAN` which generates a higher-level, more human friendly explanation.",2,371,FALSE,SQLite
dbplyr,2bf3d8d2631885a11db07f3e17447388,SQL server,1,372,FALSE,NA
dbplyr,2bf3d8d2631885a11db07f3e17447388,• Improved translation for `as.logical(x)` to `CAST(x as BIT)` (#250).,2,373,FALSE,SQL server
dbplyr,2bf3d8d2631885a11db07f3e17447388,"• Translates `paste()`, `paste0()`, and `str_c()` to `+`.",2,374,FALSE,SQL server
dbplyr,2bf3d8d2631885a11db07f3e17447388,• `copy_to()` method applies temporary table name transformation earlier so that you can now overwrite temporary tables (#258).,2,375,FALSE,SQL server
dbplyr,2bf3d8d2631885a11db07f3e17447388,• `db_write_table()` method uses correct argument name for passing along field types (#251).,2,376,FALSE,SQL server
dbplyr,29a3b2d32e46fcb0b342a907007a114f,Aggregation functions only warn once per session about the use of `na.rm = TRUE` (#216).,1,377,FALSE,NA
dbplyr,599f0ecd6ef2c13a19e5e5f9180c2e05,"table names generated by `random_table_name()` have the prefix ""dbplyr\_"", which makes it easier to find them programmatically (@​mattle24, #111)",1,378,FALSE,NA
dbplyr,b3b23659f5a031c2edb6b8f12d4b2bea,Functions that are only available in a windowed (`mutate()`) query now throw an error when called in a aggregate (`summarise()`) query (#129),1,379,FALSE,NA
dbplyr,ef17c158f9f26171d3ff97cab9050b76,"`arrange()` understands the `.by_group` argument, making it possible sort by groups if desired. The default is `FALSE` (#115)",1,380,FALSE,NA
dbplyr,4918567cdb094c09fdb0cfc935f1447f,"`distinct()` now handles computed variables like `distinct(df, y = x + y)` (#154).",1,381,FALSE,NA
dbplyr,6039c2753763c967b5b81718e624c8dc,"`escape()`, `sql_expr()` and `build_sql()` no longer accept `con = NULL` as a shortcut for `con = simulate_dbi()`. This made it too easy to forget to pass `con` along, introducing extremely subtle escaping bugs. `win_over()` gains a `con` argument for the same reason.",1,382,FALSE,NA
dbplyr,393720614f9a0ec8d14e19f8e684fb1f,New `escape_ansi()` always uses ANSI SQL 92 standard escaping (for use in examples and documentation).,1,383,FALSE,NA
dbplyr,15a1d954b64b521498a2b05d6bd47c29,"`mutate(df, x = NULL)` drops `x` from the output, just like when working with local data frames (#194).",1,384,FALSE,NA
dbplyr,7ce5543ed5d52c1b22836fa431686aa4,"`partial_eval()` processes inlined functions (including rlang lambda functions). This makes dbplyr work with more forms of scoped verbs like `df %>% summarise_all(~ mean(.))`, `df %>% summarise_all(list(mean))` (#134).",1,385,FALSE,NA
dbplyr,82afad6196900165b95013df7dacf44c,"`sql_aggregate()` now takes an optional argument `f_r` for passing to `check_na_rm()`. This allows the warning to show the R function name rather than the SQL function name (@​sverchkov, #153).",1,386,FALSE,NA
dbplyr,52599d296bda4c30897e8f5117a4a035,`sql_infix()` gains a `pad` argument for the rare operator that doesn't need to be surrounded by spaces.,1,387,FALSE,NA
dbplyr,a5693e74e7d1b46620ea40ebb5b7219d,"`sql_prefix()` no longer turns SQL functions into uppercase, allowing for correct translation of case-sensitive SQL functions (#181, @​mtoto).",1,388,FALSE,NA
dbplyr,d55c2327bc521406c0de8af182b2086a,`summarise()` gives a clear error message if you refer to a variable created in that same `summarise()` (#114).,1,389,FALSE,NA
dbplyr,4bdad3614eff2fd6fcb7d947024fc992,New `sql_call2()` which is to `rlang::call2()` as `sql_expr()` is to `rlang::expr()`.,1,390,FALSE,NA
dbplyr,730e0ad7291630d13ac653f0d6dc2e07,`show_query()` and `explain()` use `cat()` rather than message.,1,391,FALSE,NA
dbplyr,614e6a9af7e29bd12932b615faac464d,"`union()`, `union_all()`, `setdiff()` and `intersect()` do a better job of matching columns across backends (#183).",1,392,FALSE,NA
dbplyr,000e54dbebb58e7e6ad4cf58a2c5b840,Now supports for dplyr 0.8.0 (#190) and R 3.1.0,1,393,FALSE,NA
dbplyr,e0ff12055fbbedbed440d18667d0c054,"Calls of the form `dplyr::foo()` are now evaluated in the database, rather than locally (#197).",1,394,FALSE,NA
dbplyr,c596694831dd70ae596031ddf004eaa0,`vars` argument to `tbl_sql()` has been formally deprecated; it hasn't actually done anything for a while (#3254).,1,395,FALSE,NA
dbplyr,65edaec7242971360949a15297b7e505,"`src` and `tbl` objects now include a class generated from the class of the underlying connection object. This makes it possible for dplyr backends to implement different behaviour at the dplyr level, when needed. (#2293)",1,396,FALSE,NA
dbplyr,85b859cb5ff0086f6418a3486a16f7ee,"`x %in% y` is now translated to `FALSE` if `y` is empty (@​mgirlich, #160).",1,397,FALSE,NA
dbplyr,1758950af2cd3303073e0af152ec3d1d,New `as.integer64(x)` translation to `CAST(x AS BIGINT)` (#3305),1,398,FALSE,NA
dbplyr,07cb872cdc0489d8933dec614c958de5,"`case_when` now translates with a ELSE clause if a formula of the form `TRUE~<RHS>` is provided . (@​cderv, #112)",1,399,FALSE,NA
dbplyr,4d423668ea4389df916628b7c43696cb,`cummean()` now generates `AVG()` not `MEAN()` (#157),1,400,FALSE,NA
dbplyr,90461ef07833068cc05aef0fdde6f6e4,`str_detect()` now uses correct parameter order (#3397),1,401,FALSE,NA
dbplyr,ea3bc713d4cc3ad53af941c44d8549ba,MS SQL,1,402,FALSE,NA
dbplyr,ea3bc713d4cc3ad53af941c44d8549ba,• Cumulative summary functions now work (#157),2,403,FALSE,MS SQL
dbplyr,ea3bc713d4cc3ad53af941c44d8549ba,"• `ifelse()` uses `CASE WHEN` instead of `IIF`; this allows more complex operations, such as `%in%`, to work properly (#93)",2,404,FALSE,MS SQL
dbplyr,f82a7d7fd027bf548f0ab01481116eda,Oracle,1,405,FALSE,NA
dbplyr,f82a7d7fd027bf548f0ab01481116eda,• Custom `db_drop_table()` now only drops tables if they exist (#3306),2,406,FALSE,Oracle
dbplyr,f82a7d7fd027bf548f0ab01481116eda,• Custom `setdiff()` translation (#3493),2,407,FALSE,Oracle
dbplyr,f82a7d7fd027bf548f0ab01481116eda,• Custom `db_explain()` translation (#3471),2,408,FALSE,Oracle
dbplyr,8ff67baba7b5aa42793487e74b3464f3,SQLite,1,409,FALSE,NA
dbplyr,8ff67baba7b5aa42793487e74b3464f3,"• Correct translation for `as.numeric()`/`as.double()` (@​chris-park, #171).",2,410,FALSE,SQLite
dbplyr,09529143d55b595786c1f84e6c7dbd91,Redshift,1,411,FALSE,NA
dbplyr,09529143d55b595786c1f84e6c7dbd91,• `substr()` translation improved (#3339),2,412,FALSE,Redshift
dbplyr,b0d071ffcdda9fb17f2c1a8ebefc2e3d,"`copy_to()` will only remove existing table when `overwrite = TRUE` and the table already exists, eliminating a confusing ""NOTICE"" from PostgreSQL (#3197).",1,413,FALSE,NA
dbplyr,f9452e4937863637f71e6c42f81e84b8,`partial_eval()` handles unevaluated formulas (#184).,1,414,FALSE,NA
dbplyr,cd27b24a0672fa68cc2f97895cfe2b05,`pull.tbl_sql()` now extracts correctly from grouped tables (#3562).,1,415,FALSE,NA
dbplyr,cc65f771506046492d85df3455b06b5b,"`sql_render.op()` now correctly forwards the `con` argument (@​kevinykuo, #73).",1,416,FALSE,NA
dbplyr,b2411edadfc9ea9a1e7c56f469f13855,R CMD check fixes,1,417,FALSE,NA
dbplyr,74729f020d863be215494722f67f722f,Forward compatibility fixes for rlang 0.2.0,1,418,FALSE,NA
dbplyr,476c248980d86b02bc81adb87e2eaf81,New translations for,1,419,FALSE,NA
dbplyr,476c248980d86b02bc81adb87e2eaf81,• MS Access (#2946) (@​DavisVaughan),2,420,FALSE,New translations for
dbplyr,476c248980d86b02bc81adb87e2eaf81,"• Oracle, via odbc or ROracle (#2928, #2732, @​edgararuiz)",2,421,FALSE,New translations for
dbplyr,476c248980d86b02bc81adb87e2eaf81,• Teradata.,2,422,FALSE,New translations for
dbplyr,476c248980d86b02bc81adb87e2eaf81,• Redshift.,2,423,FALSE,New translations for
dbplyr,e0c0372c22fe4a660db851223b30ffc0,dbplyr now supplies appropriate translations for the RMariaDB and RPostgres packages (#3154). We generally recommend using these packages in favour of the older RMySQL and RPostgreSQL packages as they are fully DBI compliant and tested with DBItest.,1,424,FALSE,NA
dbplyr,2ab7152709878994caaa1b7bf756853b,"`copy_to()` can now ""copy"" tbl_sql in the same src, providing another way to cache a query into a temporary table (#3064). You can also `copy_to` tbl_sqls from another source, and `copy_to()` will automatically collect then copy.",1,425,FALSE,NA
dbplyr,355668bbddaf8008a203f3e784781547,"Initial support for stringr functions: `str_length()`, `str_to_upper()`, `str_to_lower()`, `str_replace_all()`, `str_detect()`, `str_trim()`. Regular expression support varies from database to database, but most simple regular expressions should be ok.",1,426,FALSE,NA
dbplyr,3ef83c784b095398b5b6d061e18204cc,`db_compute()` gains an `analyze` argument to match `db_copy_to()`.,1,427,FALSE,NA
dbplyr,4b5edde256fb9c29d9bfd8e7bfa78cb0,"New `remote_name()`, `remote_con()`, `remote_src()`, `remote_query()` and `remote_query_plan()` provide a standard API for get metadata about a remote tbl (#3130, #2923, #2824).",1,428,FALSE,NA
dbplyr,9356ae2a3e1a8f9dd79e41c528a97071,New `sql_expr()` is a more convenient building block for low-level SQL translation (#3169).,1,429,FALSE,NA
dbplyr,8893d7c3290a2a09cb20a4bdb8f53c97,"New `sql_aggregate()` and `win_aggregate()` for generating SQL and windowed SQL functions for aggregates. These take one argument, `x`, and warn if `na.rm` is not `TRUE` (#3155). `win_recycled()` is equivalent to `win_aggregate()` and has been soft-deprecated.",1,430,FALSE,NA
dbplyr,560920a5da474c0a41f125f2a187f69e,`db_write_table` now needs to return the table name,1,431,FALSE,NA
dbplyr,46ef683a2f7b15df2ed7be375bfa54f3,Multiple `head()` calls in a row now collapse to a single call. This avoids a printing problem with MS SQL (#3084).,1,432,FALSE,NA
dbplyr,2b7a6030538ad475e5b2741ef1dc2f0b,`escape()` now works with integer64 values from the bit64 package (#3230),1,433,FALSE,NA
dbplyr,badf75c660241eefcb4400d6dae83a16,"`if`, `ifelse()`, and `if_else()` now correctly scope the false condition so that it only applies to non-NULL conditions (#3157)",1,434,FALSE,NA
dbplyr,eff78f04c91f8fa9d9f5e06eaf7f5eeb,"`ident()` and `ident_q()` handle 0-length inputs better, and should be easier to use with S3 (#3212)",1,435,FALSE,NA
dbplyr,6600aaa4deb8062b148e6dbec0df8574,"`in_schema()` should now work in more places, particularly in `copy_to()` (#3013, @​baileych)",1,436,FALSE,NA
dbplyr,87c6e7aae7fd365486dde98d95e066c1,SQL generation for joins no longer gets stuck in a endless loop if you request an empty suffix (#3220).,1,437,FALSE,NA
dbplyr,7b7efb156ac57a9a2bc7958554569f19,`mutate()` has better logic for splitting a single mutate into multiple subqueries (#3095).,1,438,FALSE,NA
dbplyr,7d4f48310b92262d4da520eec0208a6c,"Improved `paste()` and `paste0()` support in MySQL, PostgreSQL (#3168), and RSQLite (#3176). MySQL and PostgreSQL gain support for `str_flatten()` which behaves like `paste(x, collapse = ""-"")` (but for technical reasons can't be implemented as a straightforward translation of `paste()`).",1,439,FALSE,NA
dbplyr,6f5498dcc951f404952cac8e44adecd3,`same_src.tbl_sql()` now performs correct comparison instead of always returning `TRUE`. This means that `copy = TRUE` once again allows you to perform cross-database joins (#3002).,1,440,FALSE,NA
dbplyr,70235fd1285f90b4dde39519284c8388,"`select()` queries no longer alias column names unnecessarily (#2968, @​DavisVaughan).",1,441,FALSE,NA
dbplyr,4b63b5632d1342435a52a1e9d91b8541,"`select()` and `rename()` are now powered by tidyselect, fixing a few renaming bugs (#3132, #2943, #2860).",1,442,FALSE,NA
dbplyr,ea34d3927c6417e952d57716deef8ca0,`summarise()` once again performs partial evaluation before database submission (#3148).,1,443,FALSE,NA
dbplyr,9295fd92182971f14f52224c31b3ad9c,`test_src()` makes it easier to access a single test source.,1,444,FALSE,NA
dbplyr,14f9cccb604c6e750f85f7eb463e5619,MS SQL,1,445,FALSE,NA
dbplyr,14f9cccb604c6e750f85f7eb463e5619,• Better support for temporary tables (@​Hong-Revo),2,446,FALSE,MS SQL
dbplyr,14f9cccb604c6e750f85f7eb463e5619,"• Different translations for filter/mutate contexts for: `NULL` evaluation (`is.na()`, `is.null()`), logical operators (`!`, `&`, `&&`, `|`, `||`), and comparison operators (`==`, `!=`, `<`, `>`, `>=`, `<=`)",2,447,FALSE,MS SQL
dbplyr,2eb56224e365542a02062db642406326,MySQL: `copy_to()` (via `db_write_table()`) correctly translates logical variables to integers (#3151).,1,448,FALSE,NA
dbplyr,3b826dd24d183043011ccba0c74f3c55,odbc: improved `n()` translation in windowed context.,1,449,FALSE,NA
dbplyr,b2b8b9b03997c0ee9132d18bd42808b7,SQLite: improved `na_if` translation (@​cwarden),1,450,FALSE,NA
dbplyr,a8b9052c1b7bd8f224e99880e72c7498,PostgreSQL: translation for `grepl()` added (@​zozlak),1,451,FALSE,NA
dbplyr,3cab94d2661d81df2fdf6f84232b9177,"Oracle: changed VARVHAR to VARCHAR2 datatype (@​washcycle, #66)",1,452,FALSE,NA
dbplyr,bfc6a15ac8af7ac5e40bd3e145028f4e,`full_join()` over non-overlapping columns `by = character()` translated to `CROSS JOIN` (#2924).,1,453,FALSE,NA
dbplyr,fcf43e84cb184d76869d313b0b8b104d,"`case_when()` now translates to SQL ""CASE WHEN"" (#2894)",1,454,FALSE,NA
dbplyr,103618428c188acc34b0b64eda43d7d3,`x %in% c(1)` now generates the same SQL as `x %in% 1` (#2898).,1,455,FALSE,NA
dbplyr,92648b5f9d25ad4beda8cc61574964e1,"New `window_order()` and `window_frame()` give you finer control over the window functions that dplyr creates (#2874, #2593).",1,456,FALSE,NA
dbplyr,f0f6911e92cda7c8b412fb007c15b55e,Added SQL translations for Oracle (@​edgararuiz).,1,457,FALSE,NA
dbplyr,93062819d0e4678af76a2cdc6ea17eae,`x %in% c(1)` now generates the same SQL as `x %in% 1` (#2898).,1,458,FALSE,NA
dbplyr,21fa990f5a7c00f11d5936b65be35297,"`head(tbl, 0)` is now supported (#2863).",1,459,FALSE,NA
dbplyr,c887757b1a7b28686aed3563afe1e1e6,`select()`ing zero columns gives a more information error message (#2863).,1,460,FALSE,NA
dbplyr,3ad0835c0b1efd29d103134b0d30ce59,"Variables created in a join are now disambiguated against other variables in the same table, not just variables in the other table (#2823).",1,461,FALSE,NA
dbplyr,900118efbc3739f2615217f5c316d712,PostgreSQL gains a better translation for `round()` (#60).,1,462,FALSE,NA
dbplyr,45cc85f3258a98eb292ab0c06c1d4837,"Added custom `db_analyze_table()` for MS SQL, Oracle, Hive and Impala (@​edgararuiz)",1,463,FALSE,NA
dbplyr,17fc397f0778400107caabe52ad66d89,Added support for `sd()` for aggregate and window functions (#2887) (@​edgararuiz),1,464,FALSE,NA
dbplyr,f35cf791f42fdb641567aeed6c885af7,"You can now use the magrittr pipe within expressions, e.g. `mutate(mtcars, cyl %>% as.character())`.",1,465,FALSE,NA
dbplyr,4535151c1edf3d463d9e8824a5243451,"If a translation was supplied for a summarise function, but not for the equivalent windowed variant, the expression would be translated to `NULL` with a warning. Now `sql_variant()` checks that all aggregate functions have matching window functions so that correct translations or clean errors will be generated (#2887)",1,466,FALSE,NA
dbplyr,008cb02f0cce0c0e66d856cfb369723a,"`tbl()` and `copy_to()` now work directly with DBI connections (#2423, #2576), so there is no longer a need to generate a dplyr src.",1,467,FALSE,NA
dbplyr,008cb02f0cce0c0e66d856cfb369723a,"```
library(dplyr)

con <- DBI::dbConnect(RSQLite::SQLite(), "":memory:"")
copy_to(con, mtcars)

mtcars2 <- tbl(con, ""mtcars"")
mtcars2
```",1,468,TRUE,NA
dbplyr,b539eaa66e9abf97064f66f6be07cbf3,`glimpse()` now works with remote tables (#2665),1,469,FALSE,NA
dbplyr,811347aeaa00b0edde54c42be0aba0e1,"dplyr has gained a basic SQL optimiser, which collapses certain nested SELECT queries into a single query (#1979). This will improve query execution performance for databases with less sophisticated query optimisers, and fixes certain problems with ordering and limits in subqueries (#1979). A big thanks goes to @​hhoeflin for figuring out this optimisation.",1,470,FALSE,NA
dbplyr,060296a58d9bb590d85a0265180c2b1b,"`compute()` and `collapse()` now preserve the ""ordering"" of rows. This only affects the computation of window functions, as the rest of SQL does not care about row order (#2281).",1,471,FALSE,NA
dbplyr,41ca4eb2cdddfa3e4de264230518d471,`copy_to()` gains an `overwrite` argument which allows you to overwrite an existing table. Use with care! (#2296),1,472,FALSE,NA
dbplyr,b7e707de0bfeea1c7ea7b88723a5972c,"New `in_schema()` function makes it easy to refer to tables in schema: `in_schema(""my_schema_name"", ""my_table_name"")`.",1,473,FALSE,NA
dbplyr,43c83aadf7dc0efc66a671c1d52d704a,`query()` is no longer exported. It hasn't been useful for a while so this shouldn't break any code.,1,474,FALSE,NA
dbplyr,d1f68dc24b09a44220f9a2e6c5f7c2ee,Partial evaluation occurs immediately when you execute a verb (like `filter()` or `mutate()`) rather than happening when the query is executed (#2370).,1,475,FALSE,NA
dbplyr,329fb9d0fc76ddb2c3ce91e2ce6f6987,"`mutate.tbl_sql()` will now generate as many subqueries as necessary so that you can refer to variables that you just created (like in mutate with regular dataframes) (#2481, #2483).",1,476,FALSE,NA
dbplyr,444bc64b807661882976895540f2c1ad,SQL joins have been improved:,1,477,FALSE,NA
dbplyr,444bc64b807661882976895540f2c1ad,"• SQL joins always use the `ON ...` syntax, avoiding `USING ...` even for natural joins. Improved handling of tables with columns of the same name (#1997, @​javierluraschi). They now generate SQL more similar to what you'd write by hand, eliminating a layer or two of subqueries (#2333)",2,478,FALSE,SQL joins have been improved:
dbplyr,444bc64b807661882976895540f2c1ad,"• \[API\] They now follow the same rules for including duplicated key variables that the data frame methods do, namely that key variables are only kept from `x`, and never from `y` (#2410)",2,479,FALSE,SQL joins have been improved:
dbplyr,444bc64b807661882976895540f2c1ad,"• \[API\] The `sql_join()` generic now gains a `vars` argument which lists the variables taken from the left and right sides of the join. If you have a custom `sql_join()` method, you'll need to update how your code generates joins, following the template in `sql_join.generic()`.",2,480,FALSE,SQL joins have been improved:
dbplyr,444bc64b807661882976895540f2c1ad,• `full_join()` throws a clear error when you attempt to use it with a MySQL backend (#2045),2,481,FALSE,SQL joins have been improved:
dbplyr,444bc64b807661882976895540f2c1ad,"• `right_join()` and `full_join()` now return results consistent with local data frame sources when there are records in the right table with no match in the left table. `right_join()` returns values of `by` columns from the right table. `full_join()` returns coalesced values of `by` columns from the left and right tables (#2578, @​ianmcook)",2,482,FALSE,SQL joins have been improved:
dbplyr,222fbb630785d979e3a6569b66a244e4,`group_by()` can now perform an inline mutate for database backends (#2422).,1,483,FALSE,NA
dbplyr,ba955455178748e84c817badfd024109,"The SQL generation set operations (`intersect()`, `setdiff()`, `union()`, and `union_all()`) have been considerably improved. By default, the component SELECT are surrounded with parentheses, except on SQLite. The SQLite backend will now throw an error if you attempt a set operation on a query that contains a LIMIT, as that is not supported in SQLite (#2270). All set operations match column names across inputs, filling in non-matching variables with NULL (#2556).",1,484,FALSE,NA
dbplyr,81c6be248cc156f2607bf37a8e55f56e,`rename()` and `group_by()` now combine correctly (#1962),1,485,FALSE,NA
dbplyr,ed4fc399b5960b1b64021b447db19af9,`tbl_lazy()` and `lazy_tbl()` have been exported. These help you test generated SQL with out an active database connection.,1,486,FALSE,NA
dbplyr,b06f72e53f01c9406a1a6ecce66e2def,`ungroup()` correctly resets grouping variables (#2704).,1,487,FALSE,NA
dbplyr,f9e3728f330465c89d4db1c37e14f764,New `as.sql()` safely coerces an input to SQL.,1,488,FALSE,NA
dbplyr,d1f256a308706a1dbe1de8aa44510fe0,"More translators for `as.character()`, `as.integer()` and `as.double()` (#2775).",1,489,FALSE,NA
dbplyr,91db3fff8d927099f4792ff16882c51b,New `ident_q()` makes it possible to specifier identifiers that do not need to be quoted.,1,490,FALSE,NA
dbplyr,153fd9866172b6010fcdce123dc85a8b,Translation of inline scalars:,1,491,FALSE,NA
dbplyr,153fd9866172b6010fcdce123dc85a8b,"• Logical values are now translated differently depending on the backend. The default is to use ""true"" and ""false"" which is the SQL-99 standard, but not widely support. SQLite translates to ""0"" and ""1"" (#2052).",2,492,FALSE,Translation of inline scalars:
dbplyr,153fd9866172b6010fcdce123dc85a8b,• `Inf` and `-Inf` are correctly escaped,2,493,FALSE,Translation of inline scalars:
dbplyr,153fd9866172b6010fcdce123dc85a8b,• Better test for whether or not a double is similar to an integer and hence needs a trailing 0.0 added (#2004).,2,494,FALSE,Translation of inline scalars:
dbplyr,153fd9866172b6010fcdce123dc85a8b,• Quoting defaults to `DBI::dbEscapeString()` and `DBI::dbQuoteIdentifier()` respectively.,2,495,FALSE,Translation of inline scalars:
dbplyr,b2229192d060c18017e1bb151ccbf8b8,`::` and `:::` are handled correctly (#2321),1,496,FALSE,NA
dbplyr,2dafd6de3d0d35ee65b78003ad15ed48,`x %in% 1` is now correctly translated to `x IN (1)` (#511).,1,497,FALSE,NA
dbplyr,ea595fe5c3f4bb3065e7df011216f6a8,`ifelse()` and `if_else()` use correct argument names in SQL translation (#2225).,1,498,FALSE,NA
dbplyr,083c7ee0af33ed8ee10c246f30781154,"`ident()` now returns an object with class `c(""ident"", ""character"")`. It no longer contains ""sql"" to indicate that this is not already escaped.",1,499,FALSE,NA
dbplyr,bca5074c0c52303d9bbcb5113161642a,`is.na()` and `is.null()` gain extra parens in SQL translation to preserve correct precedence (#2302).,1,500,FALSE,NA
dbplyr,b67d7479b0f8cf1be22828a4708ba3ce,"\[API\] `log(x, b)` is now correctly translated to the SQL `log(b, x)` (#2288). SQLite does not support the 2-argument log function so it is translated to `log(x) / log(b)`.",1,501,FALSE,NA
dbplyr,8bbd7ea7aba3d96650a3c2c8a12a14d1,"`nth(x, i)` is now correctly translated to `nth_value(x, i)`.",1,502,FALSE,NA
dbplyr,036b83a3ed67d1a0f28830b92e0daa08,`n_distinct()` now accepts multiple variables (#2148).,1,503,FALSE,NA
dbplyr,91f08fdd7426dd4789ff9f74131d10c9,"\[API\] `substr()` is now translated to SQL, correcting for the difference in the third argument. In R, it's the position of the last character, in SQL it's the length of the string (#2536).",1,504,FALSE,NA
dbplyr,c9643ea5a60d14d904aabfce4cb014f9,`win_over()` escapes expression using current database rules.,1,505,FALSE,NA
dbplyr,4b952bc922fc669aec812859d2ec949e,`copy_to()` now uses `db_write_table()` instead of `db_create_table()` and `db_insert_into()`. `db_write_table.DBIConnection()` uses `dbWriteTable()`.,1,506,FALSE,NA
dbplyr,4383887c8f1142bdb6420f3805028315,"New `db_copy_to()`, `db_compute()` and `db_collect()` allow backends to override the entire database process behind `copy_to()`, `compute()` and `collect()`. `db_sql_render()` allow additional control over the SQL rendering process.",1,507,FALSE,NA
dbplyr,3d2b9e8badb3699cb302d7138b4ebb1f,All generics whose behaviour can vary from database to database now provide a DBIConnection method. That means that you can easily scan the NAMESPACE to see the extension points.,1,508,FALSE,NA
dbplyr,cdeb235a98d98711ce29a21b20e1495d,`sql_escape_logical()` allows you to control the translation of literal logicals (#2614).,1,509,FALSE,NA
dbplyr,6b86b26eaa90acbf91bf05f47b670013,"`src_desc()` has been replaced by `db_desc()` and now dispatches on the connection, eliminating the last method that required dispatch on the class of the src.",1,510,FALSE,NA
dbplyr,9c51a4ac3b830049367ca25b93427ce8,"`win_over()`, `win_rank()`, `win_recycled()`, `win_cumulative()`, `win_current_group()` and `win_current_order()` are now exported. This should make it easier to provide customised SQL for window functions (#2051, #2126).",1,511,FALSE,NA
dbplyr,144f715b7d10bd15e501f08ea3fdd406,SQL translation for Microsoft SQL Server (@​edgararuiz),1,512,FALSE,NA
dbplyr,6f2bedbdfda22c365bb78878fbcefda7,SQL translation for Apache Hive (@​edgararuiz),1,513,FALSE,NA
dbplyr,e625c276a3ab673c8261e98d641a0ee0,SQL translation for Apache Impala (@​edgararuiz),1,514,FALSE,NA
dbplyr,a87df60c58e6fe6c0f6b61fa14f53075,`collect()` once again defaults to return all rows in the data (#1968). This makes it behave the same as `as.data.frame()` and `as_tibble()`.,1,515,FALSE,NA
dbplyr,ce52a256e14ed7222df7ca92d285ffc8,`collect()` only regroups by variables present in the data (#2156),1,516,FALSE,NA
dbplyr,75e025d8b388dc51a8986b581582a91a,"`collect()` will automatically LIMIT the result to the `n`, the number of rows requested. This will provide the query planner with more information that it may be able to use to improve execution time (#2083).",1,517,FALSE,NA
dbplyr,e5d0e319cfc9748d883e29dbfa23502e,`common_by()` gets a better error message for unexpected inputs (#2091),1,518,FALSE,NA
dbplyr,6adfb23517e9e7e2b9239bbabc0d112f,"`copy_to()` no longer checks that the table doesn't exist before creation, instead preferring to fall back on the database for error messages. This should reduce both false positives and false negative (#1470)",1,519,FALSE,NA
dbplyr,700c78f716baf281be65381a99287fad,"`copy_to()` now succeeds for MySQL if a character column contains `NA` (#1975, #2256, #2263, #2381, @​demorenoc, @​eduardgrebe).",1,520,FALSE,NA
dbplyr,4e76a5f22c181c0b836cb25f5080bd45,`copy_to()` now returns its output invisibly (since you're often just calling for the side-effect).,1,521,FALSE,NA
dbplyr,895acee55b4d0ced83bb2956bdb1bb8f,`distinct()` reports improved variable information for SQL backends. This means that it is more likely to work in the middle of a pipeline (#2359).,1,522,FALSE,NA
dbplyr,54953b5ca5e4125fefdf6b2ddad90dd1,Ungrouped `do()` on database backends now collects all data locally first (#2392).,1,523,FALSE,NA
dbplyr,4d90fd6ca54504758ea39c7150cd5715,Call `dbFetch()` instead of the deprecated `fetch()` (#2134). Use `DBI::dbExecute()` for non-query SQL commands (#1912),1,524,FALSE,NA
dbplyr,7ff0c281ad3669216c248a11407f2d44,"`explain()` and `show_query()` now invisibly return the first argument, making them easier to use inside a pipeline.",1,525,FALSE,NA
dbplyr,df01d3b213acb978b559cf2bb6c28f08,"`print.tbl_sql()` displays ordering (#2287) and prints table name, if known.",1,526,FALSE,NA
dbplyr,d3ea7192b4575784ecba5bcb6f2f6c85,"`print(df, n = Inf)` and `head(df, n = Inf)` now work with remote tables (#2580).",1,527,FALSE,NA
dbplyr,8914b5ebc0c052e296265dc1d0e818dd,`db_desc()` and `sql_translate_env()` get defaults for DBIConnection.,1,528,FALSE,NA
dbplyr,f5ba32e8d8b79baef078288cc0831f54,"Formatting now works by overriding the `tbl_sum()` generic instead of `print()`. This means that the output is more consistent with tibble, and that `format()` is now supported also for SQL sources (tidyverse/dbplyr#14).",1,529,FALSE,NA
dbplyr,b057899e8c8d6b409e861e900c61922d,"\[API\] The signature of `op_base` has changed to `op_base(x, vars, class)`",1,530,FALSE,NA
dbplyr,67ba2da4ea02e80cd1598386a1e8710b,\[API\] `translate_sql()` and `partial_eval()` have been refined:,1,531,FALSE,NA
dbplyr,67ba2da4ea02e80cd1598386a1e8710b,• `translate_sql()` no longer takes a vars argument; instead call `partial_eval()` yourself.,2,532,FALSE,\[API\] `translate_sql()` and `partial_eval()` have been refined:
dbplyr,67ba2da4ea02e80cd1598386a1e8710b,"• Because it no longer needs the environment `translate_sql()_` now works with a list of dots, rather than a `lazy_dots`.",2,533,FALSE,\[API\] `translate_sql()` and `partial_eval()` have been refined:
dbplyr,67ba2da4ea02e80cd1598386a1e8710b,• `partial_eval()` now takes a character vector of variable names rather than a tbl.,2,534,FALSE,\[API\] `translate_sql()` and `partial_eval()` have been refined:
dbplyr,67ba2da4ea02e80cd1598386a1e8710b,• This leads to a simplification of the `op` data structure: dots is now a list of expressions rather than a `lazy_dots`.,2,535,FALSE,\[API\] `translate_sql()` and `partial_eval()` have been refined:
dbplyr,fb67787feb80e22e6d89507003321865,\[API\] `op_vars()` now returns a list of quoted expressions. This enables escaping to happen at the correct time (i.e. when the connection is known).,1,536,FALSE,NA
dplyr,0b75180f9b530a1c9b4e7e1c89b28260,"`join_by()` now allows its helper functions to be namespaced with `dplyr::`, like `join_by(dplyr::between(x, lower, upper))` (#6838).",1,1,FALSE,NA
dplyr,a0ae32fbcc7854d158bc94dee1cf2a2e,`left_join()` and friends now return a specialized error message if they detect that your join would return more rows than dplyr can handle (#6912).,1,2,FALSE,NA
dplyr,ac41efd537506b1561c81bcbe218a703,`slice_*()` now throw the correct error if you forget to name `n` while also prefixing the call with `dplyr::` (#6946).,1,3,FALSE,NA
dplyr,9135daf55110e9bf0e199d91cb968be0,`dplyr_reconstruct()`'s default method has been rewritten to avoid materializing duckplyr queries too early (#6947).,1,4,FALSE,NA
dplyr,ae912a5814beb41cb5be110af94c7f30,"Updated the `storms` data to include 2022 data (#6937, @​steveharoz).",1,5,FALSE,NA
dplyr,163478f11900f97c70657128e5d68e34,"Updated the `starwars` data to use a new API, because the old one is defunct. There are very minor changes to the data itself (#6938, @​steveharoz).",1,6,FALSE,NA
dplyr,599e5293f927713d1c5367c24f118c25,`mutate_each()` and `summarise_each()` now throw correct deprecation messages (#6869).,1,7,FALSE,NA
dplyr,f6c22e892c86847017b0b6dbc1ceb05a,"`setequal()` now requires the input data frames to be compatible, similar to the other set methods like `setdiff()` or `intersect()` (#6786).",1,8,FALSE,NA
dplyr,f00df903257254742847b49bd4a8fa8c,`count()` better documents that it has a `.drop` argument (#6820).,1,9,FALSE,NA
dplyr,f757feaf1ebdef1d743ba934db89e50c,Fixed tests to maintain compatibility with the next version of waldo (#6823).,1,10,FALSE,NA
dplyr,d0cca4c00124f16b87906aca96887706,Joins better handle key columns will all `NA`s (#6804).,1,11,FALSE,NA
dplyr,c35b29e2aee4c79fa1295f5be2c67904,"Mutating joins now warn about multiple matches much less often. At a high level, a warning was previously being thrown when a one-to-many or many-to-many relationship was detected between the keys of `x` and `y`, but is now only thrown for a many-to-many relationship, which is much rarer and much more dangerous than one-to-many because it can result in a Cartesian explosion in the number of rows returned from the join (#6731, #6717). We've accomplished this in two steps:",1,12,FALSE,NA
dplyr,c35b29e2aee4c79fa1295f5be2c67904,"• `multiple` now defaults to `""all""`, and the options of `""error""` and `""warning""` are now deprecated in favor of using `relationship` (see below). We are using an accelerated deprecation process for these two options because they've only been available for a few weeks, and `relationship` is a clearly superior alternative.",2,13,FALSE,"Mutating joins now warn about multiple matches much less often. At a high level, a warning was previously being thrown when a one-to-many or many-to-many relationship was detected between the keys of `x` and `y`, but is now only thrown for a many-to-many relationship, which is much rarer and much more dangerous than one-to-many because it can result in a Cartesian explosion in the number of rows returned from the join (#6731, #6717). We've accomplished this in two steps:"
dplyr,c35b29e2aee4c79fa1295f5be2c67904,"• The mutating joins gain a new `relationship` argument, allowing you to optionally enforce one of the following relationship constraints between the keys of `x` and `y`: `""one-to-one""`, `""one-to-many""`, `""many-to-one""`, or `""many-to-many""`. For example, `""many-to-one""` enforces that each row in `x` can match at most 1 row in `y`. If a row in `x` matches \>1 rows in `y`, an error is thrown. This option serves as the replacement for `multiple = ""error""`. The default behavior of `relationship` doesn't assume that there is any relationship between `x` and `y`. However, for equality joins it will check for the presence of a many-to-many relationship, and will warn if it detects one.",2,14,FALSE,"Mutating joins now warn about multiple matches much less often. At a high level, a warning was previously being thrown when a one-to-many or many-to-many relationship was detected between the keys of `x` and `y`, but is now only thrown for a many-to-many relationship, which is much rarer and much more dangerous than one-to-many because it can result in a Cartesian explosion in the number of rows returned from the join (#6731, #6717). We've accomplished this in two steps:"
dplyr,ac523888b21b5ae9c3d3c8479fedd016,"This change unfortunately does mean that if you have set `multiple = ""all""` to avoid a warning and you happened to be doing a many-to-many style join, then you will need to replace `multiple = ""all""` with `relationship = ""many-to-many""` to silence the new warning, but we believe this should be rare since many-to-many relationships are fairly uncommon.",1,14,FALSE,NA
dplyr,71700dd694265a1a8eae45b496f3c953,"Fixed a major performance regression in `case_when()`. It is still a little slower than in dplyr 1.0.10, but we plan to improve this further in the future (#6674).",1,15,FALSE,NA
dplyr,8ad119b7c702892a0e6e9c7bb135c842,"Fixed a performance regression related to `nth()`, `first()`, and `last()` (#6682).",1,16,FALSE,NA
dplyr,93fec07f9941bdc83b2e1d0ecc73f97d,Fixed an issue where expressions involving infix operators had an abnormally large amount of overhead (#6681).,1,17,FALSE,NA
dplyr,368b8571fe9628c0ba7e35bb993191c2,`group_data()` on ungrouped data frames is faster (#6736).,1,18,FALSE,NA
dplyr,e524a59c019944548ffb9bffd733dd19,`n()` is a little faster when there are many groups (#6727).,1,19,FALSE,NA
dplyr,3bf8c29edd30f483838262596a0ac749,"`pick()` now returns a 1 row, 0 column tibble when `...` evaluates to an empty selection. This makes it more compatible with tidyverse recycling rules in some edge cases (#6685).",1,20,FALSE,NA
dplyr,0ee66419b868ee3aebb8556d85dfd6bd,`if_else()` and `case_when()` again accept logical conditions that have attributes (#6678).,1,21,FALSE,NA
dplyr,88f35165a7964db42d84655b60d79382,`arrange()` can once again sort the `numeric_version` type from base R (#6680).,1,22,FALSE,NA
dplyr,8c0cf4917286adab5316e6b7823a4b0a,`slice_sample()` now works when the input has a column named `replace`. `slice_min()` and `slice_max()` now work when the input has columns named `na_rm` or `with_ties` (#6725).,1,23,FALSE,NA
dplyr,fb83a487f654d30dd880d4986348ad46,`nth()` now errors informatively if `n` is `NA` (#6682).,1,24,FALSE,NA
dplyr,65aa1e0b74258d7f36d3fbbe7254d248,Joins now throw a more informative error when `y` doesn't have the same source as `x` (#6798).,1,25,FALSE,NA
dplyr,978479e58ee6f57f3fdfcc18c475852b,"All major dplyr verbs now throw an informative error message if the input data frame contains a column named `NA` or `""""` (#6758).",1,26,FALSE,NA
dplyr,210578408ccc0359a7cb852bb525f741,Deprecation warnings thrown by `filter()` now mention the correct package where the problem originated from (#6679).,1,27,FALSE,NA
dplyr,be42a8442fd219bd5e2fcb1082330cc4,Fixed an issue where using `<-` within a grouped `mutate()` or `summarise()` could cross contaminate other groups (#6666).,1,28,FALSE,NA
dplyr,bc376c5075fee0cdc91a8509d407de17,"The compatibility vignette has been replaced with a more general vignette on using dplyr in packages, `vignette(""in-packages"")` (#6702).",1,29,FALSE,NA
dplyr,b6873786fc7fca47bd459aa0bcdc59cc,The developer documentation in `?dplyr_extending` has been refreshed and brought up to date with all changes made in 1.1.0 (#6695).,1,30,FALSE,NA
dplyr,6d5b54334fa089873245dffa9bd4916e,`rename_with()` now includes an example of using `paste0(recycle0 = TRUE)` to correctly handle empty selections (#6688).,1,31,FALSE,NA
dplyr,30406db8d8cbb3cc16f1886d0464c7d8,R \>=3.5.0 is now explicitly required. This is in line with the tidyverse policy of supporting the 5 most recent versions of R.,1,32,FALSE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,"`.by`/`by` is an experimental alternative to `group_by()` that supports per-operation grouping for `mutate()`, `summarise()`, `filter()`, and the `slice()` family (#6528). Rather than:",1,33,FALSE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,"```
starwars %>%
  group_by(species, homeworld) %>%
  summarise(mean_height = mean(height))
```",1,34,TRUE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,You can now write:,1,34,FALSE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,"```
starwars %>%
  summarise(
    mean_height = mean(height),
    .by = c(species, homeworld)
  )
```",1,35,TRUE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,"The most useful reason to do this is because `.by` only affects a single operation. In the example above, an ungrouped data frame went into the `summarise()` call, so an ungrouped data frame will come out; with `.by`, you never need to remember to `ungroup()` afterwards and you never need to use the `.groups` argument. Additionally, using `summarise()` with `.by` will never sort the results by the group key, unlike with `group_by()`. Instead, the results are returned using the existing ordering of the groups from the original data. We feel this is more predictable, better maintains any ordering you might have already applied with a previous call to `arrange()`, and provides a way to maintain the current ordering without having to resort to factors. This feature was inspired by data.table, where the equivalent syntax looks like:",1,35,FALSE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,"```
starwars[, .(mean_height = mean(height)), by = .(species, homeworld)]
```",1,36,TRUE,NA
dplyr,dd5c4d97a9e11ffb29a6537fd0f91ef9,`with_groups()` is superseded in favor of `.by` (#6582).,1,36,FALSE,NA
dplyr,9629b31bda60ed7c627d76c64b231573,"`reframe()` is a new experimental verb that creates a new data frame by applying functions to columns of an existing data frame. It is very similar to `summarise()`, with two big differences:",1,37,FALSE,NA
dplyr,9629b31bda60ed7c627d76c64b231573,"• `reframe()` can return an arbitrary number of rows per group, while `summarise()` reduces each group down to a single row.",2,38,FALSE,"`reframe()` is a new experimental verb that creates a new data frame by applying functions to columns of an existing data frame. It is very similar to `summarise()`, with two big differences:"
dplyr,9629b31bda60ed7c627d76c64b231573,"• `reframe()` always returns an ungrouped data frame, while `summarise()` might return a grouped or rowwise data frame, depending on the scenario.",2,39,FALSE,"`reframe()` is a new experimental verb that creates a new data frame by applying functions to columns of an existing data frame. It is very similar to `summarise()`, with two big differences:"
dplyr,98461aaa7b639e04eaf4c7d1f3d5419c,"`reframe()` has been added in response to valid concern from the community that allowing `summarise()` to return any number of rows per group increases the chance for accidental bugs. We still feel that this is a powerful technique, and is a principled replacement for `do()`, so we have moved these features to `reframe()` (#6382).",1,39,FALSE,NA
dplyr,d005bf26eb0a6ff0dc1413858725385f,"`group_by()` now uses a new algorithm for computing groups. It is often faster than the previous approach (especially when there are many groups), and in most cases there should be no changes. The one exception is with character vectors, see the C locale news bullet below for more details (#4406, #6297).",1,40,FALSE,NA
dplyr,59399b112944352931a44c6a62c06361,"`arrange()` now uses a faster algorithm for sorting character vectors, which is heavily inspired by data.table's `forder()`. See the C locale news bullet below for more details (#4962).",1,41,FALSE,NA
dplyr,8f2a8715333be98bc6f607fb1c162382,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240).",1,42,FALSE,NA
dplyr,8f2a8715333be98bc6f607fb1c162382,"• A *join specification* can now be created through `join_by()`. This allows you to specify both the left and right hand side of a join using unquoted column names, such as `join_by(sale_date == commercial_date)`. Join specifications can be supplied to any `*_join()` function as the `by` argument.",2,43,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,• Join specifications allow for new types of joins:,2,44,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"‣ Equality joins: The most common join, specified by `==`. For example, `join_by(sale_date == commercial_date)`.",3,45,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"‣ Inequality joins: For joining on inequalities, i.e.`>=`, `>`, `<`, and `<=`. For example, use `join_by(sale_date >= commercial_date)` to find every commercial that aired before a particular sale.",3,46,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"‣ Rolling joins: For ""rolling"" the closest match forward or backwards when there isn't an exact match, specified by using the rolling helper, `closest()`. For example, `join_by(closest(sale_date >= commercial_date))` to find only the most recent commercial that aired before a particular sale.",3,47,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"‣ Overlap joins: For detecting overlaps between sets of columns, specified by using one of the overlap helpers: `between()`, `within()`, or `overlaps()`. For example, use `join_by(between(commercial_date, sale_date_lower, sale_date))` to find commercials that aired before a particular sale, as long as they occurred after some lower bound, such as 40 days before the sale was made.",3,48,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"Note that you cannot use arbitrary expressions in the join conditions, like `join_by(sale_date - 40 >= commercial_date)`. Instead, use `mutate()` to create a new column containing the result of `sale_date - 40` and refer to that by name in `join_by()`.",2,48,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"• `multiple` is a new argument for controlling what happens when a row in `x` matches multiple rows in `y`. For equality joins and rolling joins, where this is usually surprising, this defaults to signalling a `""warning""`, but still returns all of the matches. For inequality joins, where multiple matches are usually expected, this defaults to returning `""all""` of the matches. You can also return only the `""first""` or `""last""` match, `""any""` of the matches, or you can `""error""`.",2,49,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"• `keep` now defaults to `NULL` rather than `FALSE`. `NULL` implies `keep = FALSE` for equality conditions, but `keep = TRUE` for inequality conditions, since you generally want to preserve both sides of an inequality join.",2,50,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,8f2a8715333be98bc6f607fb1c162382,"• `unmatched` is a new argument for controlling what happens when a row would be dropped because it doesn't have a match. For backwards compatibility, the default is `""drop""`, but you can also choose to `""error""` if dropped rows would be surprising.",2,51,FALSE,"Joins have been completely overhauled to enable more flexible join operations and provide more tools for quality control. Many of these changes are inspired by data.table's join syntax (#5914, #5661, #5413, #2240)."
dplyr,452de15d661b9a42409decbfbf2c75bd,"`across()` gains an experimental `.unpack` argument to optionally unpack (as in, `tidyr::unpack()`) data frames returned by functions in `.fns` (#6360).",1,52,FALSE,NA
dplyr,0f74fa6f39c59fd88fe917540212cf5b,"`consecutive_id()` for creating groups based on contiguous runs of the same values, like `data.table::rleid()` (#1534).",1,53,FALSE,NA
dplyr,ed7a2ce551e2b82eaf85b02123be3ca4,"`case_match()` is a ""vectorised switch"" variant of `case_when()` that matches on values rather than logical expressions. It is like a SQL ""simple"" `CASE WHEN` statement, whereas `case_when()` is like a SQL ""searched"" `CASE WHEN` statement (#6328).",1,54,FALSE,NA
dplyr,f5869377a53a4f1f06f6bb8a63bc9217,`cross_join()` is a more explicit and slightly more correct replacement for using `by = character()` during a join (#6604).,1,55,FALSE,NA
dplyr,a164ab908197e71052d6aa6c38fc23ba,"`pick()` makes it easy to access a subset of columns from the current group. `pick()` is intended as a replacement for `across(.fns = NULL)`, `cur_data()`, and `cur_data_all()`. We feel that `pick()` is a much more evocative name when you are just trying to select a subset of columns from your data (#6204).",1,56,FALSE,NA
dplyr,777dc3a5fa33323b58ed8f01fddff63d,`symdiff()` computes the symmetric difference (#4811).,1,57,FALSE,NA
dplyr,9f2fec5f942ed438b581f3072d4f5901,"`arrange()` and `group_by()` now use the C locale, not the system locale, when ordering or grouping character vectors. This brings *substantial* performance improvements, increases reproducibility across R sessions, makes dplyr more consistent with data.table, and we believe it should affect little existing code. If it does affect your code, you can use `options(dplyr.legacy_locale = TRUE)` to quickly revert to the previous behavior. However, in general, we instead recommend that you use the new `.locale` argument to precisely specify the desired locale. For a full explanation please read the associated grouping and ordering tidyups.",1,58,FALSE,NA
dplyr,73660cb6331340e90f92c8be278ed3ea,"`bench_tbls()`, `compare_tbls()`, `compare_tbls2()`, `eval_tbls()`, `eval_tbls2()`, `location()` and `changes()`, deprecated in 1.0.0, are now defunct (#6387).",1,59,FALSE,NA
dplyr,6b33a40e5f0b01a1c76cab6dc0223118,"`frame_data()`, `data_frame_()`, `lst_()` and `tbl_sum()` are no longer re-exported from tibble (#6276, #6277, #6278, #6284).",1,60,FALSE,NA
dplyr,ef7e42c4234af4a7ca26ab189e853179,"`select_vars()`, `rename_vars()`, `select_var()` and `current_vars()`, deprecated in 0.8.4, are now defunct (#6387).",1,61,FALSE,NA
dplyr,5e8052d82b0a7150eeb144a7de559e8f,"`across()`, `c_across()`, `if_any()`, and `if_all()` now require the `.cols` and `.fns` arguments. In general, we now recommend that you use `pick()` instead of an empty `across()` call or `across()` with no `.fns` (e.g. `across(c(x, y))`. (#6523).",1,62,FALSE,NA
dplyr,5e8052d82b0a7150eeb144a7de559e8f,"• Relying on the previous default of `.cols = everything()` is deprecated. We have skipped the soft-deprecation stage in this case, because indirect usage of `across()` and friends in this way is rare.",2,63,FALSE,"`across()`, `c_across()`, `if_any()`, and `if_all()` now require the `.cols` and `.fns` arguments. In general, we now recommend that you use `pick()` instead of an empty `across()` call or `across()` with no `.fns` (e.g. `across(c(x, y))`. (#6523)."
dplyr,5e8052d82b0a7150eeb144a7de559e8f,"• Relying on the previous default of `.fns = NULL` is not yet formally soft-deprecated, because there was no good alternative until now, but it is discouraged and will be soft-deprecated in the next minor release.",2,64,FALSE,"`across()`, `c_across()`, `if_any()`, and `if_all()` now require the `.cols` and `.fns` arguments. In general, we now recommend that you use `pick()` instead of an empty `across()` call or `across()` with no `.fns` (e.g. `across(c(x, y))`. (#6523)."
dplyr,8099f9dea8b22e615569a7802c15189a,"Passing `...` to `across()` is soft-deprecated because it's ambiguous when those arguments are evaluated. Now, instead of (e.g.) `across(a:b, mean, na.rm = TRUE)` you should write `across(a:b, ~ mean(.x, na.rm = TRUE))` (#6073).",1,65,FALSE,NA
dplyr,24b319a3f1ef6eafc1a9fcc1d4e5fbf3,"`all_equal()` is deprecated. We've advised against it for some time, and we explicitly recommend you use `all.equal()`, manually reordering the rows and columns as needed (#6324).",1,66,FALSE,NA
dplyr,fddddb5bef059b289b250894e94c3095,`cur_data()` and `cur_data_all()` are soft-deprecated in favour of `pick()` (#6204).,1,67,FALSE,NA
dplyr,cde3fb32b7136145614f42784b75628b,Using `by = character()` to perform a cross join is now soft-deprecated in favor of `cross_join()` (#6604).,1,68,FALSE,NA
dplyr,02e2880444e047efb94ce36b5877c75b,`filter()`ing with a 1-column matrix is deprecated (#6091).,1,69,FALSE,NA
dplyr,38f2e388014de392399213ea56e0820f,`progress_estimate()` is deprecated for all uses (#6387).,1,70,FALSE,NA
dplyr,6fe1508261a79546c23b07114cba1fe9,"Using `summarise()` to produce a 0 or \>1 row ""summary"" is deprecated in favor of the new `reframe()`. See the NEWS bullet about `reframe()` for more details (#6382).",1,71,FALSE,NA
dplyr,456cf0a25b965990f29b05f6222dc4a0,"All functions deprecated in 1.0.0 (released April 2020) and earlier now warn every time you use them (#6387). This includes `combine()`, `src_local()`, `src_mysql()`, `src_postgres()`, `src_sqlite()`, `rename_vars_()`, `select_vars_()`, `summarise_each_()`, `mutate_each_()`, `as.tbl()`, `tbl_df()`, and a handful of older arguments. They are likely to be made defunct in the next major version (but not before mid 2024).",1,72,FALSE,NA
dplyr,ef052c3d47788b25688445b729a3ca20,`slice()`ing with a 1-column matrix is deprecated.,1,73,FALSE,NA
dplyr,0f23ab9addf1655f05c846f53d5ee984,`recode()` is superseded in favour of `case_match()` (#6433).,1,74,FALSE,NA
dplyr,aa4982b30c042121889f4a8f9068b73c,"`recode_factor()` is superseded. We don't have a direct replacement for it yet, but we plan to add one to forcats. In the meantime you can often use `case_match(.ptype = factor(levels = ))` instead (#6433).",1,75,FALSE,NA
dplyr,95f5f786117d0d8395ffca180d7aeca8,"`transmute()` is superseded in favour of `mutate(.keep = ""none"")` (#6414).",1,76,FALSE,NA
dplyr,8a50c556555931b29de7cdacb8c817f4,"The `.keep`, `.before`, and `.after` arguments to `mutate()` have moved from experimental to stable.",1,77,FALSE,NA
dplyr,d94d8aae645aea36d41479d7c0cde673,The `rows_*()` family of functions have moved from experimental to stable.,1,78,FALSE,NA
dplyr,3ccad9f6587051896b3aff1020295f30,"`between()` can now work with all vector types, not just numeric and date-time. Additionally, `left` and `right` can now also be vectors (with the same length as `x`), and `x`, `left`, and `right` are cast to the common type before the comparison is made (#6183, #6260, #6478).",1,79,FALSE,NA
dplyr,fe6be17f19662753c733f159e5201608,`case_when()` (#5106):,1,80,FALSE,NA
dplyr,fe6be17f19662753c733f159e5201608,"• Has a new `.default` argument that is intended to replace usage of `TRUE ~ default_value` as a more explicit and readable way to specify a default value. In the future, we will deprecate the unsafe recycling of the LHS inputs that allows `TRUE ~` to work, so we encourage you to switch to using `.default`.",2,81,FALSE,`case_when()` (#5106):
dplyr,fe6be17f19662753c733f159e5201608,"• No longer requires exact matching of the types of RHS values. For example, the following no longer requires you to use `NA_character_`.",2,82,FALSE,`case_when()` (#5106):
dplyr,fe6be17f19662753c733f159e5201608,"```
x <- c(""little"", ""unknown"", ""small"", ""missing"", ""large"")

case_when(
  x %in% c(""little"", ""small"") ~ ""one"",
  x %in% c(""big"", ""large"") ~ ""two"",
  x %in% c(""missing"", ""unknown"") ~ NA
)
```",2,83,TRUE,`case_when()` (#5106):
dplyr,fe6be17f19662753c733f159e5201608,"• Supports a larger variety of RHS value types. For example, you can use a data frame to create multiple columns at once.",2,84,FALSE,`case_when()` (#5106):
dplyr,fe6be17f19662753c733f159e5201608,• Has new `.ptype` and `.size` arguments which allow you to enforce a particular output type and size.,2,85,FALSE,`case_when()` (#5106):
dplyr,fe6be17f19662753c733f159e5201608,"• Has a better error when types or lengths were incompatible (#6261, #6206).",2,86,FALSE,`case_when()` (#5106):
dplyr,fb087e45e8d4417a2664f233455f369d,`coalesce()` (#6265):,1,87,FALSE,NA
dplyr,fb087e45e8d4417a2664f233455f369d,• Discards `NULL` inputs up front.,2,88,FALSE,`coalesce()` (#6265):
dplyr,fb087e45e8d4417a2664f233455f369d,"• No longer iterates over the columns of data frame input. Instead, a row is now only coalesced if it is entirely missing, which is consistent with `vctrs::vec_detect_missing()` and greatly simplifies the implementation.",2,89,FALSE,`coalesce()` (#6265):
dplyr,fb087e45e8d4417a2664f233455f369d,• Has new `.ptype` and `.size` arguments which allow you to enforce a particular output type and size.,2,90,FALSE,`coalesce()` (#6265):
dplyr,f77a11ac4e234ddb64e60b028f783c81,"`first()`, `last()`, and `nth()` (#6331):",1,91,FALSE,NA
dplyr,f77a11ac4e234ddb64e60b028f783c81,"• When used on a data frame, these functions now return a single row rather than a single column. This is more consistent with the vctrs principle that a data frame is generally treated as a vector of rows.",2,92,FALSE,"`first()`, `last()`, and `nth()` (#6331):"
dplyr,f77a11ac4e234ddb64e60b028f783c81,"• The `default` is no longer ""guessed"", and will always automatically be set to a missing value appropriate for the type of `x`.",2,93,FALSE,"`first()`, `last()`, and `nth()` (#6331):"
dplyr,f77a11ac4e234ddb64e60b028f783c81,"• Error if `n` is not an integer. `nth(x, n = 2)` is fine, but `nth(x, n = 2.5)` is now an error.",2,94,FALSE,"`first()`, `last()`, and `nth()` (#6331):"
dplyr,f77a11ac4e234ddb64e60b028f783c81,"• No longer support indexing into scalar objects, like `<lm>` or scalar S4 objects (#6670).",2,95,FALSE,"`first()`, `last()`, and `nth()` (#6331):"
dplyr,d1f58ba0139645014cb60f855a079af7,"Additionally, they have all gained an `na_rm` argument since they are summary functions (#6242, with contributions from @​tnederlof).",1,95,FALSE,NA
dplyr,527dd5e22dded3a9f138d7ee99a183b6,"`if_else()` gains most of the same benefits as `case_when()`. In particular, `if_else()` now takes the common type of `true`, `false`, and `missing` to determine the output type, meaning that you can now reliably use `NA`, rather than `NA_character_` and friends (#6243). `if_else()` also no longer allows you to supply `NULL` for either `true` or `false`, which was an undocumented usage that we consider to be off-label, because `true` and `false` are intended to be (and documented to be) vector inputs (#6730).",1,96,FALSE,NA
dplyr,dfd1a166ef23ab8ecc70e195260af218,"`na_if()` (#6329) now casts `y` to the type of `x` before comparison, which makes it clearer that this function is type and size stable on `x`. In particular, this means that you can no longer do `na_if(<tibble>, 0)`, which previously accidentally allowed you to replace any instance of `0` across every column of the tibble with `NA`. `na_if()` was never intended to work this way, and this is considered off-label usage. You can also now replace `NaN` values in `x` with `na_if(x, NaN)`.",1,97,FALSE,NA
dplyr,e5f9bcf17819abbddc94ff99e476b752,"`lag()` and `lead()` now cast `default` to the type of `x`, rather than taking the common type. This ensures that these functions are type stable on `x` (#6330).",1,98,FALSE,NA
dplyr,4e885a3cd60d85ca3d82521d1b0ea8f4,"`row_number()`, `min_rank()`, `dense_rank()`, `ntile()`, `cume_dist()`, and `percent_rank()` are faster and work for more types. You can now rank by multiple columns by supplying a data frame (#6428).",1,99,FALSE,NA
dplyr,394c8635d2403817b9af41ec6b4cbab3,"`with_order()` now checks that the size of `order_by` is the same size as `x`, and now works correctly when `order_by` is a data frame (#6334).",1,100,FALSE,NA
dplyr,e9a95044d9fa9ed0cdf17d0e214b6dff,Fixed an issue with latest rlang that caused internal tools (such as `mask$eval_all_summarise()`) to be mentioned in error messages (#6308).,1,101,FALSE,NA
dplyr,6b8efdbf2c4c7b5d12417b0f7f0e513f,Warnings are enriched with contextualised information in `summarise()` and `filter()` just like they have been in `mutate()` and `arrange()`.,1,102,FALSE,NA
dplyr,2f4eb2f3d2fb1a7ccafac6039e7182e0,Joins now reference the correct column in `y` when a type error is thrown while joining on two columns with different names (#6465).,1,103,FALSE,NA
dplyr,8416284817a747a5956103f6069501f8,Joins on very wide tables are no longer bottlenecked by the application of `suffix` (#6642).,1,104,FALSE,NA
dplyr,47ef7e06d1ddbc8fe830e4f900b268bc,`*_join()` now error if you supply them with additional arguments that aren't used (#6228).,1,105,FALSE,NA
dplyr,b7ce2a229c5548f1ddecc49d6bdb4bb4,`across()` used without functions inside a rowwise-data frame no longer generates an invalid data frame (#6264).,1,106,FALSE,NA
dplyr,28c415429a421da75ff4cb7aab5c8761,"Anonymous functions supplied with `function()` and `\()` are now inlined by `across()` if possible, which slightly improves performance and makes possible further optimisations in the future.",1,107,FALSE,NA
dplyr,5aea801201c61bb3eed31d24cdd60b71,"Functions supplied to `across()` are no longer masked by columns (#6545). For instance, `across(1:2, mean)` will now work as expected even if there is a column called `mean`.",1,108,FALSE,NA
dplyr,1aea2e66456eba55a5b8762d55cfdf1e,`across()` will now error when supplied `...` without a `.fns` argument (#6638).,1,109,FALSE,NA
dplyr,d2b9a2e0ef1614b13eb97125d66f5d8f,`arrange()` now correctly ignores `NULL` inputs (#6193).,1,110,FALSE,NA
dplyr,651821e7f4b4c2d554ae72c75706c6cc,`arrange()` now works correctly when `across()` calls are used as the 2nd (or more) ordering expression (#6495).,1,111,FALSE,NA
dplyr,57b92ab25440fa7b52e1eea4da6cbbea,"`arrange(df, mydesc::desc(x))` works correctly when mydesc re-exports `dplyr::desc()` (#6231).",1,112,FALSE,NA
dplyr,5a16223d2a6fcdb11a000e78fcc0ce54,`c_across()` now evaluates `all_of()` correctly and no longer allows you to accidentally select grouping variables (#6522).,1,113,FALSE,NA
dplyr,5764bf76dd3c35decb7d7dddd791992c,`c_across()` now throws a more informative error if you try to rename during column selection (#6522).,1,114,FALSE,NA
dplyr,27b1bf2ad289a459df4748dc01349940,"dplyr no longer provides `count()` and `tally()` methods for `tbl_sql`. These methods have been accidentally overriding the `tbl_lazy` methods that dbplyr provides, which has resulted in issues with the grouping structure of the output (#6338, tidyverse/dbplyr#940).",1,115,FALSE,NA
dplyr,909cfd31907e628557c7c20e524a248d,`cur_group()` now works correctly with zero row grouped data frames (#6304).,1,116,FALSE,NA
dplyr,1a9ce84f64f14b5080cae8be810a25da,`desc()` gives a useful error message if you give it a non-vector (#6028).,1,117,FALSE,NA
dplyr,725137b0d81e035940d151e260e6f779,`distinct()` now retains attributes of bare data frames (#6318).,1,118,FALSE,NA
dplyr,8df37a715a699628f00160cf68e386ad,"`distinct()` returns columns ordered the way you request, not the same as the input data (#6156).",1,119,FALSE,NA
dplyr,5c9b623cd252053673ca076863d3327d,"Error messages in `group_by()`, `distinct()`, `tally()`, and `count()` are now more relevant (#6139).",1,120,FALSE,NA
dplyr,c10cb696ad9bf0d070c9cc16007c2928,`group_by_prepare()` loses the `caller_env` argument. It was rarely used and it is no longer needed (#6444).,1,121,FALSE,NA
dplyr,710dc1d2f381380871a2f2b8f067f0b8,`group_walk()` gains an explicit `.keep` argument (#6530).,1,122,FALSE,NA
dplyr,322d5c944e840af36987d266f444fd63,"Warnings emitted inside `mutate()` and variants are now collected and stashed away. Run the new `last_dplyr_warnings()` function to see the warnings emitted within dplyr verbs during the last top-level command. This fixes performance issues when thousands of warnings are emitted with rowwise and grouped data frames (#6005, #6236).",1,123,FALSE,NA
dplyr,b08a17dc40e5624ed3bbbb2361b1fb7c,`mutate()` behaves a little better with 0-row rowwise inputs (#6303).,1,124,FALSE,NA
dplyr,393c6d8d5c053a36d7ad692c9cbfec83,A rowwise `mutate()` now automatically unlists list-columns containing length 1 vectors (#6302).,1,125,FALSE,NA
dplyr,3bbd021df23190ded77d4cb2034acf65,`nest_join()` has gained the `na_matches` argument that all other joins have.,1,126,FALSE,NA
dplyr,95ac6c32e7974bd71cf46799da193ec5,`nest_join()` now preserves the type of `y` (#6295).,1,127,FALSE,NA
dplyr,45374843f4725340d08ebebb871938dc,`n_distinct()` now errors if you don't give it any input (#6535).,1,128,FALSE,NA
dplyr,ad84bedb3df3fc41569b71fe84dd325f,"`nth()`, `first()`, `last()`, and `with_order()` now sort character `order_by` vectors in the C locale. Using character vectors for `order_by` is rare, so we expect this to have little practical impact (#6451).",1,129,FALSE,NA
dplyr,d37df8f749b777ddf55969204c49777f,`ntile()` now requires `n` to be a single positive integer.,1,130,FALSE,NA
dplyr,5b48b44f7d334625bd38067b6363b716,`relocate()` now works correctly with empty data frames and when `.before` or `.after` result in empty selections (#6167).,1,131,FALSE,NA
dplyr,ebe1b7e6f1e9baade239006c38cbb651,`relocate()` no longer drops attributes of bare data frames (#6341).,1,132,FALSE,NA
dplyr,12aa51098ef616cff9fb84b379f27e65,"`relocate()` now retains the last name change when a single column is renamed multiple times while it is being moved. This better matches the behavior of `rename()` (#6209, with help from @​eutwt).",1,133,FALSE,NA
dplyr,3d10bafa60a844a05c8b782f803997ed,`rename()` now contains examples of using `all_of()` and `any_of()` to rename using a named character vector (#6644).,1,134,FALSE,NA
dplyr,8315eabf99113205643402eaf1522aa4,`rename_with()` now disallows renaming in the `.cols` tidy-selection (#6561).,1,135,FALSE,NA
dplyr,b25fb5b4a4c95961822fe45f20490a15,`rename_with()` now checks that the result of `.fn` is the right type and size (#6561).,1,136,FALSE,NA
dplyr,cbb9ef2d8a869eefb0f61e7aff7bf589,`rows_insert()` now checks that `y` contains the `by` columns (#6652).,1,137,FALSE,NA
dplyr,5d6cbfc8ef3f6dfe5b3a96f1d2cba976,`setequal()` ignores differences between freely coercible types (e.g. integer and double) (#6114) and ignores duplicated rows (#6057).,1,138,FALSE,NA
dplyr,68f1d34c93eac0fd61cdaae9be982b6d,"`slice()` helpers again produce output equivalent to `slice(.data, 0)` when the `n` or `prop` argument is 0, fixing a bug introduced in the previous version (@​eutwt, #6184).",1,139,FALSE,NA
dplyr,8685411ada9954d63f79d3d6b42a7117,`slice()` with no inputs now returns 0 rows. This is mostly for theoretical consistency (#6573).,1,140,FALSE,NA
dplyr,c2af6d97aa62c9ae1854eb707b6ae668,"`slice()` now errors if any expressions in `...` are named. This helps avoid accidentally misspelling an optional argument, such as `.by` (#6554).",1,141,FALSE,NA
dplyr,8dc40fa342ba11ec7222abb85d1ec1dc,`slice_*()` now requires `n` to be an integer.,1,142,FALSE,NA
dplyr,c3f08b53dce61f0f0c4cf8016261ab65,`slice_*()` generics now perform argument validation. This should make methods more consistent and simpler to implement (#6361).,1,143,FALSE,NA
dplyr,6c30b42bad52dcfa32ea11c6c7cbcd43,`slice_min()` and `slice_max()` can `order_by` multiple variables if you supply them as a data.frame or tibble (#6176).,1,144,FALSE,NA
dplyr,91635d0230715de0c28076025d300cfe,"`slice_min()` and `slice_max()` now consistently include missing values in the result if necessary (i.e. there aren't enough non-missing values to reach the `n` or `prop` you have selected). If you don't want missing values to be included at all, set `na_rm = TRUE` (#6177).",1,145,FALSE,NA
dplyr,e76624111192c22c1776488c42189e8f,`slice_sample()` now accepts negative `n` and `prop` values (#6402).,1,146,FALSE,NA
dplyr,86f6ad10d667545facf55dc1ed77086e,"`slice_sample()` returns a data frame or group with the same number of rows as the input when `replace = FALSE` and `n` is larger than the number of rows or `prop` is larger than 1. This reverts a change made in 1.0.8, returning to the behavior of 1.0.7 (#6185)",1,147,FALSE,NA
dplyr,cdbf507172366aba1ba1f3e467f2a085,`slice_sample()` now gives a more informative error when `replace = FALSE` and the number of rows requested in the sample exceeds the number of rows in the data (#6271).,1,148,FALSE,NA
dplyr,2eecb22acd4b79f77cf6d243ae494dbd,"`storms` has been updated to include 2021 data and some missing storms that were omitted due to an error (@​steveharoz, #6320).",1,149,FALSE,NA
dplyr,049d38d373ad445c0f982405dd219430,`summarise()` now correctly recycles named 0-column data frames (#6509).,1,150,FALSE,NA
dplyr,ce30d59aa0f31786aba39b0d42229f9c,"`union_all()`, like `union()`, now requires that data frames be compatible: i.e. they have the same columns, and the columns have compatible types.",1,151,FALSE,NA
dplyr,baa6ece367f21a3ca79fc7cecd9069ec,`where()` is re-exported from tidyselect (#6597).,1,152,FALSE,NA
dplyr,a8b7436c1db94256a92ff9950c1f770e,"New `rows_append()` which works like `rows_insert()` but ignores keys and allows you to insert arbitrary rows with a guarantee that the type of `x` won't change (#6249, thanks to @​krlmlr for the implementation and @​mgirlich for the idea).",1,153,FALSE,NA
dplyr,4b8b884f16e96f3e1134298cb8745e1a,"The `rows_*()` functions no longer require that the key values in `x` uniquely identify each row. Additionally, `rows_insert()` and `rows_delete()` no longer require that the key values in `y` uniquely identify each row. Relaxing this restriction should make these functions more practically useful for data frames, and alternative backends can enforce this in other ways as needed (i.e. through primary keys) (#5553).",1,154,FALSE,NA
dplyr,efe5c5f8dc6222657f7dc9c072680a98,"`rows_insert()` gained a new `conflict` argument allowing you greater control over rows in `y` with keys that conflict with keys in `x`. A conflict arises if a key in `y` already exists in `x`. By default, a conflict results in an error, but you can now also `""ignore""` these `y` rows. This is very similar to the `ON CONFLICT DO NOTHING` command from SQL (#5588, with helpful additions from @​mgirlich and @​krlmlr).",1,155,FALSE,NA
dplyr,ed2caac203fe741d5ba590d0f3d0d463,"`rows_update()`, `rows_patch()`, and `rows_delete()` gained a new `unmatched` argument allowing you greater control over rows in `y` with keys that are unmatched by the keys in `x`. By default, an unmatched key results in an error, but you can now also `""ignore""` these `y` rows (#5984, #5699).",1,156,FALSE,NA
dplyr,ebbd46975c51dc6fef68af29c95a009f,"`rows_delete()` no longer requires that the columns of `y` be a strict subset of `x`. Only the columns specified through `by` will be utilized from `y`, all others will be dropped with a message.",1,157,FALSE,NA
dplyr,95fa8dbd1bfa1328bb5bcc19d4ecc9b9,"The `rows_*()` functions now always retain the column types of `x`. This behavior was documented, but previously wasn't being applied correctly (#6240).",1,158,FALSE,NA
dplyr,6e3be578e7b891c8e5b75958f00d7a5d,The `rows_*()` functions now fail elegantly if `y` is a zero column data frame and `by` isn't specified (#6179).,1,159,FALSE,NA
dplyr,b9c1ae5018f4ecd0c0d5d690591fec57,Better display of error messages thanks to rlang 1.0.0.,1,160,FALSE,NA
dplyr,1267a7cbe9a654833f94cc9cb9f37e45,"`mutate(.keep = ""none"")` is no longer identical to `transmute()`. `transmute()` has not been changed, and completely ignores the column ordering of the existing data, instead relying on the ordering of expressions supplied through `...`. `mutate(.keep = ""none"")` has been changed to ensure that pre-existing columns are never moved, which aligns more closely with the other `.keep` options (#6086).",1,161,FALSE,NA
dplyr,a03f35d9356444da1f3f88a9110b7960,"`filter()` forbids matrix results (#5973) and warns about data frame results, especially data frames created from `across()` with a hint to use `if_any()` or `if_all()`.",1,162,FALSE,NA
dplyr,5a8200d1c2060372e9e8229d5f68165c,"`slice()` helpers (`slice_head()`, `slice_tail()`, `slice_min()`, `slice_max()`) now accept negative values for `n` and `prop` (#5961).",1,163,FALSE,NA
dplyr,b7d0f76f71637d49adea22cbf5bb19c6,`slice()` now indicates which group produces an error (#5931).,1,164,FALSE,NA
dplyr,ad25b1c55ee76380343402b3c6bbc3fb,`cur_data()` and `cur_data_all()` don't simplify list columns in rowwise data frames (#5901).,1,165,FALSE,NA
dplyr,9dfd1d28d180f64e95e5ea3c9a2f292e,dplyr now uses `rlang::check_installed()` to prompt you whether to install required packages that are missing.,1,166,FALSE,NA
dplyr,9b338a751563d2016278f4101e9adc8f,"`storms` data updated to 2020 (@​steveharoz, #5899).",1,167,FALSE,NA
dplyr,7cbd66f774ed770020ca60a4ec68d64f,`coalesce()` accepts 1-D arrays (#5557).,1,168,FALSE,NA
dplyr,da19d2ab28ebea01c75e4a6a1be7c751,The deprecated `trunc_mat()` is no longer reexported from dplyr (#6141).,1,169,FALSE,NA
dplyr,b1ffcad51f26754308222b0085c1fbb9,`across()` uses the formula environment when inlining them (#5886).,1,170,FALSE,NA
dplyr,eba288fe508efa9ea10070ba2e7775ad,`summarise.rowwise_df()` is quiet when the result is ungrouped (#5875).,1,171,FALSE,NA
dplyr,cd41f69bb63039d34270c3500c22045a,`c_across()` and `across()` key deparsing not confused by long calls (#5883).,1,172,FALSE,NA
dplyr,d0000aaedff1b554ec7d129ed9e5cad1,`across()` handles named selections (#5207).,1,173,FALSE,NA
dplyr,5901c2b688019a0b87efce2149a2e47d,`add_count()` is now generic (#5837).,1,174,FALSE,NA
dplyr,26e43bec8b9e0e831fbd6bca04b33eb1,`if_any()` and `if_all()` abort when a predicate is mistakingly used as `.cols=` (#5732).,1,175,FALSE,NA
dplyr,bc963797818c98e669b62cef0834dce5,Multiple calls to `if_any()` and/or `if_all()` in the same expression are now properly disambiguated (#5782).,1,176,FALSE,NA
dplyr,9d9854da2e3842cf69edbbf99e22473d,`filter()` now inlines `if_any()` and `if_all()` expressions. This greatly improves performance with grouped data frames.,1,177,FALSE,NA
dplyr,977f8a41579ceb0bb2d483f2129a312e,"Fixed behaviour of `...` in top-level `across()` calls (#5813, #5832).",1,178,FALSE,NA
dplyr,f42a2ac3b42b582257b5abe8dd077c86,`across()` now inlines lambda-formulas. This is slightly more performant and will allow more optimisations in the future.,1,179,FALSE,NA
dplyr,9710d24fcf22eb84fa9751e694a548f3,"Fixed issue in `bind_rows()` causing lists to be incorrectly transformed as data frames (#5417, #5749).",1,180,FALSE,NA
dplyr,e78b9172d7620474d4f0a4a5e91a1365,`select()` no longer creates duplicate variables when renaming a variable to the same name as a grouping variable (#5841).,1,181,FALSE,NA
dplyr,a87b82bfd140904e102a14da7dace0db,"`dplyr_col_select()` keeps attributes for bare data frames (#5294, #5831).",1,182,FALSE,NA
dplyr,e1aec51489982ecffd0bae502271640c,Fixed quosure handling in `dplyr::group_by()` that caused issues with extra arguments (tidyverse/lubridate#959).,1,183,FALSE,NA
dplyr,b5d523892d771555a0f9d446c401141b,"Removed the `name` argument from the `compute()` generic (@​ianmcook, #5783).",1,184,FALSE,NA
dplyr,671b7c41eefec9c3d18dc63750e5ec62,row-wise data frames of 0 rows and list columns are supported again (#5804).,1,185,FALSE,NA
dplyr,3abf5bd8757c6935545b7dc640344c31,Fixed edge case of `slice_sample()` when `weight_by=` is used and there 0 rows (#5729).,1,186,FALSE,NA
dplyr,da8e46391d6a6516b84a6f424a79d5aa,`across()` can again use columns in functions defined inline (#5734).,1,187,FALSE,NA
dplyr,64d2dfe474125de6ae6fc51321f48837,Using testthat 3rd edition.,1,188,FALSE,NA
dplyr,e301fbb58643f0c53456e2b4aa189f6b,Fixed bugs introduced in `across()` in previous version (#5765).,1,189,FALSE,NA
dplyr,5ed98e25c7162b63e562b50e911ed58b,`group_by()` keeps attributes unrelated to the grouping (#5760).,1,190,FALSE,NA
dplyr,8cc4c9cea1aa99ec8460712993ed061d,The `.cols=` argument of `if_any()` and `if_all()` defaults to `everything()`.,1,191,FALSE,NA
dplyr,81b55200543cbb1fa031d879a7ac58c9,Improved performance for `across()`. This makes `summarise(across())` and `mutate(across())` perform as well as the superseded colwise equivalents (#5697).,1,192,FALSE,NA
dplyr,e6913861ab8d8afc94a6ccd8a7c83f8a,"New functions `if_any()` and `if_all()` (#4770, #5713).",1,193,FALSE,NA
dplyr,49d9df492381b6ab5791da246fc1170b,`summarise()` silently ignores NULL results (#5708).,1,194,FALSE,NA
dplyr,d2aeb01ddb93fdf747dcf7ae63e9bbfa,Fixed a performance regression in `mutate()` when warnings occur once per group (#5675). We no longer instrument warnings with debugging information when `mutate()` is called within `suppressWarnings()`.,1,195,FALSE,NA
dplyr,cf383fdd6eb54410c48a531b83ef8b9b,`summarise()` no longer informs when the result is ungrouped (#5633).,1,196,FALSE,NA
dplyr,43c4a9e3865f9a805dda4f587bbd70d5,"`group_by(.drop = FALSE)` preserves ordered factors (@​brianrice2, #5545).",1,197,FALSE,NA
dplyr,fc548f84f4129f0f3e013c4ed42929f4,`count()` and `tally()` are now generic.,1,198,FALSE,NA
dplyr,a32358a00afbfa0b6fc310ffd53b1883,"Removed default fallbacks to lazyeval methods; this will yield better error messages when you call a dplyr function with the wrong input, and is part of our long term plan to remove the deprecated lazyeval interface.",1,199,FALSE,NA
dplyr,dcb117cd085a98db61214701890f0e16,"`inner_join()` gains a `keep` parameter for consistency with the other mutating joins (@​patrickbarks, #5581).",1,200,FALSE,NA
dplyr,980e6ae92101f65cc495acdd1cb9da58,"Improved performance with many columns, with a dynamic data mask using active bindings and lazy chops (#5017).",1,201,FALSE,NA
dplyr,6474abdea02eba40ff2f5eefde8abac8,`mutate()` and friends preserves row names in data frames once more (#5418).,1,202,FALSE,NA
dplyr,1c715955ead79b5f73cadbd00dbd40e0,"`group_by()` uses the ungrouped data for the implicit mutate step (#5598). You might have to define an `ungroup()` method for custom classes. For example, see https://github.com/hadley/cubelyr/pull/3.",1,203,FALSE,NA
dplyr,285b49b2795680a4ab1fcbfc783a8912,`relocate()` can rename columns it relocates (#5569).,1,204,FALSE,NA
dplyr,171beb4fb3a96a8ac477db27e3640120,`distinct()` and `group_by()` have better error messages when the mutate step fails (#5060).,1,205,FALSE,NA
dplyr,afbbd6eebd323a787151465d72f55788,Clarify that `between()` is not vectorised (#5493).,1,206,FALSE,NA
dplyr,318d6536a1316cd826ea58f6d7af8325,Fixed `across()` issue where data frame columns would could not be referred to with `all_of()` in the nested case (`mutate()` within `mutate()`) (#5498).,1,207,FALSE,NA
dplyr,1059b0360904f19882c40fbc844520da,`across()` handles data frames with 0 columns (#5523).,1,208,FALSE,NA
dplyr,6a10aa38319302de3d6c59483b834a12,"`mutate()` always keeps grouping variables, unconditional to `.keep=` (#5582).",1,209,FALSE,NA
dplyr,5b4da2719314d8794629d27e0b023d1b,dplyr now depends on R 3.3.0,1,210,FALSE,NA
dplyr,ab863a40863da3e51f3e8a7e76fb5908,Fixed `across()` issue where data frame columns would mask objects referred to from `all_of()` (#5460).,1,211,FALSE,NA
dplyr,e282ef13a6d04a81cfdc228717afed1c,"`bind_cols()` gains a `.name_repair` argument, passed to `vctrs::vec_cbind()` (#5451)",1,212,FALSE,NA
dplyr,cf5222ae230891a0a06b39a091fbffc4,"`summarise(.groups = ""rowwise"")` makes a rowwise data frame even if the input data is not grouped (#5422).",1,213,FALSE,NA
dplyr,81c150854ceeedc12348e32bce2f5782,New function `cur_data_all()` similar to `cur_data()` but includes the grouping variables (#5342).,1,214,FALSE,NA
dplyr,8ff4aaf08ec1d25fee904e97ac171b7a,"`count()` and `tally()` no longer automatically weights by column `n` if present (#5298). dplyr 1.0.0 introduced this behaviour because of Hadley's faulty memory. Historically `tally()` automatically weighted and `count()` did not, but this behaviour was accidentally changed in 0.8.2 (#4408) so that neither automatically weighted by `n`. Since 0.8.2 is almost a year old, and the automatically weighting behaviour was a little confusing anyway, we've removed it from both `count()` and `tally()`. Use of `wt = n()` is now deprecated; now just omit the `wt` argument.",1,215,FALSE,NA
dplyr,342f317c54ecb93fc4352784606b5f01,`coalesce()` now supports data frames correctly (#5326).,1,216,FALSE,NA
dplyr,585037af04ca399b0076d9537a22260a,"`cummean()` no longer has off-by-one indexing problem (@​cropgen, #5287).",1,217,FALSE,NA
dplyr,b7b521361a1a4e9274f42c7b979326af,The call stack is preserved on error. This makes it possible to `recover()` into problematic code called from dplyr verbs (#5308).,1,218,FALSE,NA
dplyr,13d33900c9617af77463f75fdebad758,"`bind_cols()` no longer converts to a tibble, returns a data frame if the input is a data frame.",1,219,FALSE,NA
dplyr,51141d8ebe9121b20447ce2c08516db1,"`bind_rows()`, `*_join()`, `summarise()` and `mutate()` use vctrs coercion rules. There are two main user facing changes:",1,220,FALSE,NA
dplyr,51141d8ebe9121b20447ce2c08516db1,• Combining factor and character vectors silently creates a character vector; previously it created a character vector with a warning.,2,221,FALSE,"`bind_rows()`, `*_join()`, `summarise()` and `mutate()` use vctrs coercion rules. There are two main user facing changes:"
dplyr,51141d8ebe9121b20447ce2c08516db1,• Combining multiple factors creates a factor with combined levels; previously it created a character vector with a warning.,2,222,FALSE,"`bind_rows()`, `*_join()`, `summarise()` and `mutate()` use vctrs coercion rules. There are two main user facing changes:"
dplyr,f32175618e216f12bbc39b2f9659a517,"`bind_rows()` and other functions use vctrs name repair, see `?vctrs::vec_as_names`.",1,223,FALSE,NA
dplyr,6fc0a697b99cdc7b32d71d9baf014717,`all.equal.tbl_df()` removed.,1,224,FALSE,NA
dplyr,6fc0a697b99cdc7b32d71d9baf014717,"• Data frames, tibbles and grouped data frames are no longer considered equal, even if the data is the same.",2,225,FALSE,`all.equal.tbl_df()` removed.
dplyr,6fc0a697b99cdc7b32d71d9baf014717,• Equality checks for data frames no longer ignore row order or groupings.,2,226,FALSE,`all.equal.tbl_df()` removed.
dplyr,6fc0a697b99cdc7b32d71d9baf014717,"• `expect_equal()` uses `all.equal()` internally. When comparing data frames, tests that used to pass may now fail.",2,227,FALSE,`all.equal.tbl_df()` removed.
dplyr,73a929b5c6f5ae03528fed8237720232,`distinct()` keeps the original column order.,1,228,FALSE,NA
dplyr,f59874b4a7ca33aa903a34878e289288,"`distinct()` on missing columns now raises an error, it has been a compatibility warning for a long time.",1,229,FALSE,NA
dplyr,a77a4cdb639808914e196fec7b06ff97,`group_modify()` puts the grouping variable to the front.,1,230,FALSE,NA
dplyr,c08050fa4442ed07240d46c51086b1fe,"`n()` and `row_number()` can no longer be called directly when dplyr is not loaded, and this now generates an error: `dplyr::mutate(mtcars, x = n())`. Fix by prefixing with `dplyr::` as in `dplyr::mutate(mtcars, x = dplyr::n())`",1,231,FALSE,NA
dplyr,702aa2323bfd38d4f1334365ad9cdadd,"The old data format for `grouped_df` is no longer supported. This may affect you if you have serialized grouped data frames to disk, e.g. with `saveRDS()` or when using knitr caching.",1,232,FALSE,NA
dplyr,a12f32e7474c17fafa1812ce1f70fa5a,`lead()` and `lag()` are stricter about their inputs.,1,233,FALSE,NA
dplyr,6583ed96d8635c65c3009bdf859db229,"Extending data frames requires that the extra class or classes are added first, not last. Having the extra class at the end causes some vctrs operations to fail with a message like:",1,234,FALSE,NA
dplyr,6583ed96d8635c65c3009bdf859db229,"```
Input must be a vector, not a `<data.frame/...>` object
```",1,235,TRUE,NA
dplyr,44f56b8e3ef7ea2cbb1702b634dcf7c2,`right_join()` no longer sorts the rows of the resulting tibble according to the order of the RHS `by` argument in tibble `y`.,1,236,FALSE,NA
dplyr,39a674673001ead8061461f589eede4c,"The `cur_` functions (`cur_data()`, `cur_group()`, `cur_group_id()`, `cur_group_rows()`) provide a full set of options to you access information about the ""current"" group in dplyr verbs. They are inspired by data.table's `.SD`, `.GRP`, `.BY`, and `.I`.",1,237,FALSE,NA
dplyr,8cd65bee6137a98853a13082f16eef58,"The `rows_` functions (`rows_insert()`, `rows_update()`, `rows_upsert()`, `rows_patch()`, `rows_delete()`) provide a new API to insert and delete rows from a second data frame or table. Support for updating mutable backends is planned (#4654).",1,238,FALSE,NA
dplyr,db0fe2f803aa96c0136ee23824a160a3,`mutate()` and `summarise()` create multiple columns from a single expression if you return a data frame (#2326).,1,239,FALSE,NA
dplyr,256147dd9de050a56b50d53140c84842,"`select()` and `rename()` use the latest version of the tidyselect interface. Practically, this means that you can now combine selections using Boolean logic (i.e. `!`, `&` and `|`), and use predicate functions with `where()` (e.g. `where(is.character)`) to select variables by type (#4680). It also makes it possible to use `select()` and `rename()` to repair data frames with duplicated names (#4615) and prevents you from accidentally introducing duplicate names (#4643). This also means that dplyr now re-exports `any_of()` and `all_of()` (#5036).",1,240,FALSE,NA
dplyr,19c2fba9ac9a358fe738ed3333f67ff5,`slice()` gains a new set of helpers:,1,241,FALSE,NA
dplyr,19c2fba9ac9a358fe738ed3333f67ff5,"• `slice_head()` and `slice_tail()` select the first and last rows, like `head()` and `tail()`, but return `n` rows *per group*.",2,242,FALSE,`slice()` gains a new set of helpers:
dplyr,19c2fba9ac9a358fe738ed3333f67ff5,"• `slice_sample()` randomly selects rows, taking over from `sample_frac()` and `sample_n()`.",2,243,FALSE,`slice()` gains a new set of helpers:
dplyr,19c2fba9ac9a358fe738ed3333f67ff5,"• `slice_min()` and `slice_max()` select the rows with the minimum or maximum values of a variable, taking over from the confusing `top_n()`.",2,244,FALSE,`slice()` gains a new set of helpers:
dplyr,f225029305320f3018317e9f02e1faf2,`summarise()` can create summaries of greater than length 1 if you use a summary function that returns multiple values.,1,245,FALSE,NA
dplyr,2f2e86816f5f08a5d0998e5d3fd711ca,`summarise()` gains a `.groups=` argument to control the grouping structure.,1,246,FALSE,NA
dplyr,c7246947eb48c9523913564267e73f9e,New `relocate()` verb makes it easy to move columns around within a data frame (#4598).,1,247,FALSE,NA
dplyr,dd335a91ac89734f6b3cd4e6e18b6d3b,New `rename_with()` is designed specifically for the purpose of renaming selected columns with a function (#4771).,1,248,FALSE,NA
dplyr,a77a2b7fb578ed44bbf9f9c326eca3b5,`ungroup()` can now selectively remove grouping variables (#3760).,1,249,FALSE,NA
dplyr,71f0f4367378a028d2061385594b8abb,"`pull()` can now return named vectors by specifying an additional column name (@​ilarischeinin, #4102).",1,250,FALSE,NA
dplyr,f57d19c7d472c90a01e32c5dfd11554f,"`mutate()` (for data frames only), gains experimental new arguments `.before` and `.after` that allow you to control where the new columns are placed (#2047).",1,251,FALSE,NA
dplyr,d220d3f3be0cade9e7df392ee47fb132,"`mutate()` (for data frames only), gains an experimental new argument called `.keep` that allows you to control which variables are kept from the input `.data`. `.keep = ""all""` is the default; it keeps all variables. `.keep = ""none""` retains no input variables (except for grouping keys), so behaves like `transmute()`. `.keep = ""unused""` keeps only variables not used to make new columns. `.keep = ""used""` keeps only the input variables used to create new columns; it's useful for double checking your work (#3721).",1,252,FALSE,NA
dplyr,ba04802a67d2c917d23fba20f182086b,"New, experimental, `with_groups()` makes it easy to temporarily group or ungroup (#4711).",1,253,FALSE,NA
dplyr,ef453c069158efdf9ca5cb00cedb3c6e,"New function `across()` that can be used inside `summarise()`, `mutate()`, and other verbs to apply a function (or a set of functions) to a selection of columns. See `vignette(""colwise"")` for more details.",1,254,FALSE,NA
dplyr,0216de70eebae3c02c69ef61586c0003,"New function `c_across()` that can be used inside `summarise()` and `mutate()` in row-wise data frames to easily (e.g.) compute a row-wise mean of all numeric variables. See `vignette(""rowwise"")` for more details.",1,255,FALSE,NA
dplyr,6f27ec8b7c57736723bf4b258d40221e,`rowwise()` is no longer questioning; we now understand that it's an important tool when you don't have vectorised code. It now also allows you to specify additional variables that should be preserved in the output when summarising (#4723). The rowwise-ness is preserved by all operations; you need to explicit drop it with `as_tibble()` or `group_by()`.,1,256,FALSE,NA
dplyr,7fcfc6bacbe5a3afc32011cd38286c4c,"New, experimental, `nest_by()`. It has the same interface as `group_by()`, but returns a rowwise data frame of grouping keys, supplemental with a list-column of data frames containing the rest of the data.",1,257,FALSE,NA
dplyr,883d829dc91decc029cd84ced97ffc23,"The implementation of all dplyr verbs have been changed to use primitives provided by the vctrs package. This makes it easier to add support for new types of vector, radically simplifies the implementation, and makes all dplyr verbs more consistent.",1,258,FALSE,NA
dplyr,93b66c59ad1f91e16d17a076308d4b6d,"The place where you are mostly likely to be impacted by the coercion changes is when working with factors in joins or grouped mutates: now when combining factors with different levels, dplyr creates a new factor with the union of the levels. This matches base R more closely, and while perhaps strictly less correct, is much more convenient.",1,259,FALSE,NA
dplyr,137049d5de8ed86ba878920967504817,dplyr dropped its two heaviest dependencies: Rcpp and BH. This should make it considerably easier and faster to build from source.,1,260,FALSE,NA
dplyr,8856f7b9af2b063d79657269fd34232a,"The implementation of all verbs has been carefully thought through. This mostly makes implementation simpler but should hopefully increase consistency, and also makes it easier to adapt to dplyr to new data structures in the new future. Pragmatically, the biggest difference for most people will be that each verb documents its return value in terms of rows, columns, groups, and data frame attributes.",1,261,FALSE,NA
dplyr,6268a1d0c9a4a87b021cbe9f0db8273b,Row names are now preserved when working with data frames.,1,262,FALSE,NA
dplyr,e6a0162c52eba9207069db5841824cab,`group_by()` uses hashing from the `vctrs` package.,1,263,FALSE,NA
dplyr,ab704d9d6070ecd19139f8c929fd7a49,"Grouped data frames now have `names<-`, `[[<-`, `[<-` and `$<-` methods that re-generate the underlying grouping. Note that modifying grouping variables in multiple steps (i.e. `df$grp1 <- 1; df$grp2 <- 1`) will be inefficient since the data frame will be regrouped after each modification.",1,264,FALSE,NA
dplyr,046b4db5a5abc5430e5d04f7c3a3bacc,`[.grouped_df` now regroups to respect any grouping columns that have been removed (#4708).,1,265,FALSE,NA
dplyr,00172a315f97c57b3f3cd4ec4decdf56,`mutate()` and `summarise()` can now modify grouping variables (#4709).,1,266,FALSE,NA
dplyr,a0fd4ece6a2b0cfb15066b304e64c29f,"`group_modify()` works with additional arguments (@​billdenney and @​cderv, #4509)",1,267,FALSE,NA
dplyr,1b6f9173e9134b65763c34b5a8d9e3bf,`group_by()` does not create an arbitrary NA group when grouping by factors with `drop = TRUE` (#4460).,1,268,FALSE,NA
dplyr,1e1261c782c138d2a600fd1488899c8c,"All deprecations now use the lifecycle, that means by default you'll only see a deprecation warning once per session, and you can control with `options(lifecycle_verbosity = x)` where `x` is one of NULL, ""quiet"", ""warning"", and ""error"".",1,269,FALSE,NA
dplyr,84c9949c2c911a2ebf3e2e203af60a52,"`id()`, deprecated in dplyr 0.5.0, is now defunct.",1,270,FALSE,NA
dplyr,8df5f6b7a52a66e987feb89ed374409f,"`failwith()`, deprecated in dplyr 0.7.0, is now defunct.",1,271,FALSE,NA
dplyr,f95f11a687b0b7ef5caae04e1b06d1d7,`tbl_cube()` and `nasa` have been pulled out into a separate cubelyr package (#4429).,1,272,FALSE,NA
dplyr,1b917573727240df8698982727b0501e,"`rbind_all()` and `rbind_list()` have been removed (@​bjungbogati, #4430).",1,273,FALSE,NA
dplyr,4ebc5fc8e7b8e2c05ec688f1a74592c3,"`dr_dplyr()` has been removed as it is no longer needed (#4433, @​smwindecker).",1,274,FALSE,NA
dplyr,c5175d5b90adec04ad956e50e6ddb846,"Use of pkgconfig for setting `na_matches` argument to join functions is now deprecated (#4914). This was rarely used, and I'm now confident that the default is correct for R.",1,275,FALSE,NA
dplyr,fe2ece5858031d59607ad3563533dfa6,"In `add_count()`, the `drop` argument has been deprecated because it didn't actually affect the output.",1,276,FALSE,NA
dplyr,ad8aeba13e452bbbe0f6a913fd581df6,`add_rownames()`: please use `tibble::rownames_to_column()` instead.,1,277,FALSE,NA
dplyr,fb7b49d077931684b90576cbed4d0f0c,`as.tbl()` and `tbl_df()`: please use `as_tibble()` instead.,1,278,FALSE,NA
dplyr,4406724c9face55b3342d360c868baa2,"`bench_tbls()`, `compare_tbls()`, `compare_tbls2()`, `eval_tbls()` and `eval_tbls2()` are now deprecated. That were only used in a handful of packages, and we now believe that you're better off performing comparisons more directly (#4675).",1,279,FALSE,NA
dplyr,4d5fa60893994b3c5c3f590964d0211c,`combine()`: please use `vctrs::vec_c()` instead.,1,280,FALSE,NA
dplyr,fb2ac278e8fc9571ff74ca45bf52542a,`funs()`: please use `list()` instead.,1,281,FALSE,NA
dplyr,bf2a6c6ce71a3e79ad791c9a62b89aeb,`group_by(add = )`: please use `.add` instead.,1,282,FALSE,NA
dplyr,28609063ac1379161cef4c7459719730,`group_by(.dots = )`/`group_by_prepare(.dots = )`: please use `!!!` instead (#4734).,1,283,FALSE,NA
dplyr,bf322687f9960ed93d7d3f2acd898cc9,"The use of zero-arg `group_indices()` to retrieve the group id for the ""current"" group is deprecated; instead use `cur_group_id()`.",1,284,FALSE,NA
dplyr,046fce22d59b7cd4613cb95a5bb5c255,"Passing arguments to `group_keys()` or `group_indices()` to change the grouping has been deprecated, instead do grouping first yourself.",1,285,FALSE,NA
dplyr,b3029d1b0f6f37a46a1d4c1dca36c852,`location()` and `changes()`: please use `lobstr::ref()` instead.,1,286,FALSE,NA
dplyr,909081b9e9ba3022170cbc9bbe9edc84,`progress_estimated()` is soft deprecated; it's not the responsibility of dplyr to provide progress bars (#4935).,1,287,FALSE,NA
dplyr,76868a0e5a0fd64a2e3161553a2a6824,`src_local()` has been deprecated; it was part of an approach to testing dplyr backends that didn't pan out.,1,288,FALSE,NA
dplyr,7608c20843d27475e8a991bfe0e6df0a,"`src_mysql()`, `src_postgres()`, and `src_sqlite()` has been deprecated. We've recommended against them for some time. Instead please use the approach described at https://dbplyr.tidyverse.org/.",1,289,FALSE,NA
dplyr,9cb13668de212c9e58c6840b3a188a2b,"`select_vars()`, `rename_vars()`, `select_var()`, `current_vars()` are now deprecated (@​perezp44, #4432)",1,290,FALSE,NA
dplyr,3573b2079c5d3899b21284e50b98ae54,"The scoped helpers (all functions ending in `_if`, `_at`, or `_all`) have been superseded by `across()`. This dramatically reduces the API surface for dplyr, while at the same providing providing a more flexible and less error-prone interface (#4769). `rename_*()` and `select_*()` have been superseded by `rename_with()`.",1,291,FALSE,NA
dplyr,fa55f483054a21ddb0cf64b70dd81ee9,`do()` is superseded in favour of `summarise()`.,1,292,FALSE,NA
dplyr,e6197ebf1ac8ad5041b11cc7d0cf4bea,"`sample_n()` and `sample_frac()` have been superseded by `slice_sample()`. See `?sample_n` for details about why, and for examples converting from old to new usage.",1,293,FALSE,NA
dplyr,a62a1395f883c666bcc932338d2f380a,"`top_n()` has been superseded by`slice_min()`/`slice_max()`. See `?top_n` for details about why, and how to convert old to new usage (#4494).",1,294,FALSE,NA
dplyr,28b00038c6ad6caf7e029fcc3ea635c0,`all_equal()` is questioning; it solves a problem that no longer seems important.,1,295,FALSE,NA
dplyr,cab48ee3eabb531f5b54517a74cdfa5a,`rowwise()` is no longer questioning.,1,296,FALSE,NA
dplyr,739fb995d657e2248c434535ef5b2c3d,"New `vignette(""base"")` which describes how dplyr verbs relate to the base R equivalents (@​sastoudt, #4755)",1,297,FALSE,NA
dplyr,9d49c69b55611f48907690ad121aac6c,"New `vignette(""grouping"")` gives more details about how dplyr verbs change when applied to grouped data frames (#4779, @​MikeKSmith).",1,298,FALSE,NA
dplyr,ed171e86a6a4513d51e243414d1090a5,"`vignette(""programming"")` has been completely rewritten to reflect our latest vocabulary, the most recent rlang features, and our current recommendations. It should now be substantially easier to program with dplyr.",1,299,FALSE,NA
dplyr,1b1808fdb3b3c7d497f57f78b60bd67c,"dplyr now has a rudimentary, experimental, and stop-gap, extension mechanism documented in `?dplyr_extending`",1,300,FALSE,NA
dplyr,9572557b7d8a40f627b4c0dd546bfaa2,"dplyr no longer provides a `all.equal.tbl_df()` method. It never should have done so in the first place because it owns neither the generic nor the class. It also provided a problematic implementation because, by default, it ignored the order of the rows and the columns which is usually important. This is likely to cause new test failures in downstream packages; but on the whole we believe those failures to either reflect unexpected behaviour or tests that need to be strengthened (#2751).",1,301,FALSE,NA
dplyr,22ece56290db2fa0235b072953c80ecf,`coalesce()` now uses vctrs recycling and common type coercion rules (#5186).,1,302,FALSE,NA
dplyr,f6d2072f9c8e501dfd4f58f042f4bbab,`count()` and `add_count()` do a better job of preserving input class and attributes (#4086).,1,303,FALSE,NA
dplyr,ae4fe5248a4b91f05a189442211ef351,`distinct()` errors if you request it use variables that don't exist (this was previously a warning) (#4656).,1,304,FALSE,NA
dplyr,019ab11d952f2deaec84df9290966efb,"`filter()`, `mutate()` and `summarise()` get better error messages.",1,305,FALSE,NA
dplyr,e6a95c3bd64fbb9c5b89f75244ae17cf,`filter()` handles data frame results when all columns are logical vectors by reducing them with `&` (#4678). In particular this means `across()` can be used in `filter()`.,1,306,FALSE,NA
dplyr,2fb4d186ac6fddf7c652a01a00f1d945,"`left_join()`, `right_join()`, and `full_join()` gain a `keep` argument so that you can optionally choose to keep both sets of join keys (#4589). This is useful when you want to figure out which rows were missing from either side.",1,307,FALSE,NA
dplyr,987b4cf2ba330280c2044054d6d5471b,Join functions can now perform a cross-join by specifying `by = character()` (#4206.),1,308,FALSE,NA
dplyr,479791da7e9ae8d3316b674b2b4681a8,`groups()` now returns `list()` for ungrouped data; previously it returned `NULL` which was type-unstable (when there are groups it returns a list of symbols).,1,309,FALSE,NA
dplyr,862649e462af9517210cefb47175b1e4,"The first argument of `group_map()`, `group_modify()` and `group_walk()` has been changed to `.data` for consistency with other generics.",1,310,FALSE,NA
dplyr,0399e7e4bcb29cedf04e6aa4b23cfb15,`group_keys.rowwise_df()` gives a 0 column data frame with `n()` rows.,1,311,FALSE,NA
dplyr,34a677d3b12bdea53883f88b23b23afe,`group_map()` is now a generic (#4576).,1,312,FALSE,NA
dplyr,b4766691c4a0a7feee8ea3cf178a57c6,"`group_by(..., .add = TRUE)` replaces `group_by(..., add = TRUE)`, with a deprecation message. The old argument name was a mistake because it prevents you from creating a new grouping var called `add` and it violates our naming conventions (#4137).",1,313,FALSE,NA
dplyr,d7f18b993499484756e229c28871e628,"`intersect()`, `union()`, `setdiff()` and `setequal()` generics are now imported from the generics package. This reduces a conflict with lubridate.",1,314,FALSE,NA
dplyr,ea04a7ed810a3bd43c900213db669dea,`order_by()` gives an informative hint if you accidentally call it instead of `arrange()` #3357.,1,315,FALSE,NA
dplyr,0d1c28248c8b2fb32a6059de8ce5d7fd,"`tally()` and `count()` now message if the default output `name` (n), already exists in the data frame. To quiet the message, you'll need to supply an explicit `name` (#4284). You can override the default weighting to using a constant by setting `wt = 1`.",1,316,FALSE,NA
dplyr,d9d99c3386b98927d106beccca95236e,"`starwars` dataset now does a better job of separating biological sex from gender identity. The previous `gender` column has been renamed to `sex`, since it actually describes the individual's biological sex. A new `gender` column encodes the actual gender identity using other information about the Star Wars universe (@​MeganBeckett, #4456).",1,317,FALSE,NA
dplyr,ba4f43a8ff2e2fd54995ef31be3ac213,"`src_tbls()` accepts `...` arguments (#4485, @​ianmcook). This could be a breaking change for some dplyr backend packages that implement `src_tbls()`.",1,318,FALSE,NA
dplyr,800c602a79edaa3b54dd7f0060dc1db2,Better performance for extracting slices of factors and ordered factors (#4501).,1,319,FALSE,NA
dplyr,9d381d77cdfb9a0e08c9325d80e98b94,"`rename_at()` and `rename_all()` call the function with a simple character vector, not a `dplyr_sel_vars` (#4459).",1,320,FALSE,NA
dplyr,0dea74e0e7c83b3898a2d398740989d9,`ntile()` is now more consistent with database implementations if the buckets have irregular size (#4495).,1,321,FALSE,NA
dplyr,75515e61bbe06920bd99941c8682cb1b,Maintenance release for compatibility with R-devel.,1,322,FALSE,NA
dplyr,67190103c5b6a56daae658ae727023ac,Adapt tests to changes in dependent packages.,1,323,FALSE,NA
dplyr,14db880c4e1434051bad5ce0bef7d0d6,Fixed performance regression introduced in version 0.8.2 (#4458).,1,324,FALSE,NA
dplyr,957f24efe56079e253e29f5c11d2a30f,"`top_frac(data, proportion)` is a shorthand for `top_n(data, proportion * n())` (#4017).",1,325,FALSE,NA
dplyr,a33b342796380009dc58513136352dc5,Using quosures in colwise verbs is deprecated (#4330).,1,326,FALSE,NA
dplyr,eafb0befd0ba6fd62d8ecf38ecb1169b,"Updated `distinct_if()`, `distinct_at()` and `distinct_all()` to include `.keep_all` argument (@​beansrowning, #4343).",1,327,FALSE,NA
dplyr,774699323b7998b82143866b10502ad6,`rename_at()` handles empty selection (#4324).,1,328,FALSE,NA
dplyr,c2fb0b2caaa3df3622b6ca846e9e6eda,`*_if()` functions correctly handle columns with special names (#4380).,1,329,FALSE,NA
dplyr,f0d575e002fc2f48b715ec14d3390336,colwise functions support constants in formulas (#4374).,1,330,FALSE,NA
dplyr,3b2df3a7630c9d6cf0ce1944e78c6949,hybrid rank functions correctly handle NA (#4427).,1,331,FALSE,NA
dplyr,9513aaa897288f970eb03ac15383afa8,"`first()`, `last()` and `nth()` hybrid version handles factors (#4295).",1,332,FALSE,NA
dplyr,f808f7171c6abd24d1c2b513c3291a84,"`top_n()` quotes its `n` argument, `n` no longer needs to be constant for all groups (#4017).",1,333,FALSE,NA
dplyr,0d4063d64ba945e5e72653cbb9ac57ee,`tbl_vars()` keeps information on grouping columns by returning a `dplyr_sel_vars` object (#4106).,1,334,FALSE,NA
dplyr,db395215b76df38d0721720f8b82b197,"`group_split()` always sets the `ptype` attribute, which make it more robust in the case where there are 0 groups.",1,335,FALSE,NA
dplyr,5cecd589383284d7741eb6e96f654bec,`group_map()` and `group_modify()` work in the 0 group edge case (#4421),1,336,FALSE,NA
dplyr,90678873f91587ef8a560a730bd7ace7,`select.list()` method added so that `select()` does not dispatch on lists (#4279).,1,337,FALSE,NA
dplyr,040fb103ba47812e18f1befed7402bd9,`view()` is reexported from tibble (#4423).,1,338,FALSE,NA
dplyr,9d8e3346fbdbcbdb5a99d310128d7bed,`group_by()` puts NA groups last in character vectors (#4227).,1,339,FALSE,NA
dplyr,de7bf6a14274d6ca6727c255fa59d051,`arrange()` handles integer64 objects (#4366).,1,340,FALSE,NA
dplyr,1a2492cfbac3b9974a2addccebe4dc2f,`summarise()` correctly resolves summarised list columns (#4349).,1,341,FALSE,NA
dplyr,3ebc7b4be2926ec7f7ac04e62a86f525,`group_modify()` is the new name of the function previously known as `group_map()`,1,342,FALSE,NA
dplyr,01010e6a7e7ec15892962804af80004d,`group_map()` now only calls the function on each group and return a list.,1,343,FALSE,NA
dplyr,bc5fecb571b72c8450274a1c7df7e6a6,"`group_by_drop_default()`, previously known as `dplyr:::group_drops()` is exported (#4245).",1,344,FALSE,NA
dplyr,1520a681752e61763b749a80b9887798,Lists of formulas passed to colwise verbs are now automatically named.,1,345,FALSE,NA
dplyr,08788021e87e2442e38f515bfd3dc81b,`group_by()` does a shallow copy even in the no groups case (#4221).,1,346,FALSE,NA
dplyr,dae9b0606dc11214d45f3ad62c0e61a7,Fixed `mutate()` on rowwise data frames with 0 rows (#4224).,1,347,FALSE,NA
dplyr,550057033a9aa6d65eb988f9657c5a2c,Fixed handling of bare formulas in colwise verbs (#4183).,1,348,FALSE,NA
dplyr,38a5b603f9f3f330850a42b5642de75e,Fixed performance of `n_distinct()` (#4202).,1,349,FALSE,NA
dplyr,582132aaa9175e5a3ea284db0ff8e188,"`group_indices()` now ignores empty groups by default for `data.frame`, which is consistent with the default of `group_by()` (@​yutannihilation, #4208).",1,350,FALSE,NA
dplyr,408e137f2bc2c71d86c19517244962cc,Fixed integer overflow in hybrid `ntile()` (#4186).,1,351,FALSE,NA
dplyr,d12323328124e5e17242aece78ac9b15,colwise functions `summarise_at()` ... can rename vars in the case of multiple functions (#4180).,1,352,FALSE,NA
dplyr,e5cb7802c9e474ff1776a2f134d477b5,`select_if()` and `rename_if()` handle logical vector predicate (#4213).,1,353,FALSE,NA
dplyr,8b761826a0265190deea20ab5badbf32,hybrid `min()` and `max()` cast to integer when possible (#4258).,1,354,FALSE,NA
dplyr,f7c81fdad98d378ede68788f17a51473,`bind_rows()` correctly handles the cases where there are multiple consecutive `NULL` (#4296).,1,355,FALSE,NA
dplyr,6e2a3bca7e86f66d20b43ed5e9c43b35,Support for R 3.1.\* has been dropped. The minimal R version supported is now 3.2.0. https://www.tidyverse.org/articles/2019/04/r-version-support/,1,356,FALSE,NA
dplyr,788bab8ccd2754b421741ba44f46628d,`rename_at()` handles empty selection (#4324).,1,357,FALSE,NA
dplyr,4a3111e75b3d78407227db4a1a0585e6,"Fixed integer C/C++ division, forced released by CRAN (#4185).",1,358,FALSE,NA
dplyr,d07dbd136e0295d81842a7f809710f0c,"The error `could not find function ""n""` or the warning `` Calling `n()` without importing or prefixing it is deprecated, use `dplyr::n()` `` indicates when functions like `n()`, `row_number()`, ... are not imported or prefixed. The easiest fix is to import dplyr with `import(dplyr)` in your `NAMESPACE` or `#' @​import dplyr` in a roxygen comment, alternatively such functions can be imported selectively as any other function with `importFrom(dplyr, n)` in the `NAMESPACE` or `#' @​importFrom dplyr n` in a roxygen comment. The third option is to prefix them, i.e. use `dplyr::n()`",1,359,FALSE,NA
dplyr,a71cf29169a62d749b96fe2a1e426a3d,"If you see `checking S3 generic/method consistency` in R CMD check for your package, note that :",1,360,FALSE,NA
dplyr,a71cf29169a62d749b96fe2a1e426a3d,• `sample_n()` and `sample_frac()` have gained `...`,2,361,FALSE,"If you see `checking S3 generic/method consistency` in R CMD check for your package, note that :"
dplyr,a71cf29169a62d749b96fe2a1e426a3d,• `filter()` and `slice()` have gained `.preserve`,2,362,FALSE,"If you see `checking S3 generic/method consistency` in R CMD check for your package, note that :"
dplyr,a71cf29169a62d749b96fe2a1e426a3d,• `group_by()` has gained `.drop`,2,363,FALSE,"If you see `checking S3 generic/method consistency` in R CMD check for your package, note that :"
dplyr,68b0a7cfae778a2c5a7b2a46a3227041,"`` Error: `.data` is a corrupt grouped_df, ... `` signals code that makes wrong assumptions about the internals of a grouped data frame.",1,364,FALSE,NA
dplyr,fb69bdd4e4ecbcb852c1dc243bd63514,New selection helpers `group_cols()`. It can be called in selection contexts such as `select()` and matches the grouping variables of grouped tibbles.,1,365,FALSE,NA
dplyr,f39f387c83ec0f517bbfd7bde4dbcaf4,`last_col()` is re-exported from tidyselect (#3584).,1,366,FALSE,NA
dplyr,07f10bb2d3261a4a6a80832badb07d52,`group_trim()` drops unused levels of factors that are used as grouping variables.,1,367,FALSE,NA
dplyr,bb9f005cb57eaaaccef45c8079eee31c,`nest_join()` creates a list column of the matching rows. `nest_join()` + `tidyr::unnest()` is equivalent to `inner_join` (#3570).,1,368,FALSE,NA
dplyr,bb9f005cb57eaaaccef45c8079eee31c,"```
band_members %>%
  nest_join(band_instruments)
```",1,369,TRUE,NA
dplyr,defc04599b585da0bb70bfce55639fa0,`group_nest()` is similar to `tidyr::nest()` but focusing on the variables to nest by instead of the nested columns.,1,370,FALSE,NA
dplyr,defc04599b585da0bb70bfce55639fa0,"```
starwars %>%
  group_by(species, homeworld) %>%
  group_nest()

starwars %>%
  group_nest(species, homeworld)
```",1,371,TRUE,NA
dplyr,c98708b93b7b9daa592e299dd7e39cd9,"`group_split()` is similar to `base::split()` but operating on existing groups when applied to a grouped data frame, or subject to the data mask on ungrouped data frames",1,372,FALSE,NA
dplyr,c98708b93b7b9daa592e299dd7e39cd9,"```
starwars %>%
  group_by(species, homeworld) %>%
  group_split()

starwars %>%
  group_split(species, homeworld)
```",1,373,TRUE,NA
dplyr,ef855da90fe92d082567357fcecd6520,"`group_map()` and `group_walk()` are purrr-like functions to iterate on groups of a grouped data frame, jointly identified by the data subset (exposed as `.x`) and the data key (a one row tibble, exposed as `.y`). `group_map()` returns a grouped data frame that combines the results of the function, `group_walk()` is only used for side effects and returns its input invisibly.",1,374,FALSE,NA
dplyr,ef855da90fe92d082567357fcecd6520,"```
mtcars %>%
  group_by(cyl) %>%
  group_map(~ head(.x, 2L))
```",1,375,TRUE,NA
dplyr,3fa229a83574686fc7223b3f90b4af28,"`distinct_prepare()`, previously known as `distinct_vars()` is exported. This is mostly useful for alternative backends (e.g. `dbplyr`).",1,376,FALSE,NA
dplyr,86fc109b20db11a88054c7906f7d3fa9,"`group_by()` gains the `.drop` argument. When set to `FALSE` the groups are generated based on factor levels, hence some groups may be empty (#341).",1,377,FALSE,NA
dplyr,86fc109b20db11a88054c7906f7d3fa9,"```
# 3 groups
tibble(
  x = 1:2,
  f = factor(c(""a"", ""b""), levels = c(""a"", ""b"", ""c""))
) %>%
  group_by(f, .drop = FALSE)

# the order of the grouping variables matter
df <- tibble(
  x = c(1,2,1,2),
  f = factor(c(""a"", ""b"", ""a"", ""b""), levels = c(""a"", ""b"", ""c""))
)
df %>% group_by(f, x, .drop = FALSE)
df %>% group_by(x, f, .drop = FALSE)
```",1,378,TRUE,NA
dplyr,86fc109b20db11a88054c7906f7d3fa9,The default behaviour drops the empty groups as in the previous versions.,1,378,FALSE,NA
dplyr,86fc109b20db11a88054c7906f7d3fa9,"```
tibble(
    x = 1:2,
    f = factor(c(""a"", ""b""), levels = c(""a"", ""b"", ""c""))
  ) %>%
    group_by(f)
```",1,379,TRUE,NA
dplyr,4ef2af2bb844521dcb285475bc73d14d,"`filter()` and `slice()` gain a `.preserve` argument to control which groups it should keep. The default `filter(.preserve = FALSE)` recalculates the grouping structure based on the resulting data, otherwise it is kept as is.",1,380,FALSE,NA
dplyr,4ef2af2bb844521dcb285475bc73d14d,"```
df <- tibble(
  x = c(1,2,1,2),
  f = factor(c(""a"", ""b"", ""a"", ""b""), levels = c(""a"", ""b"", ""c""))
) %>%
  group_by(x, f, .drop = FALSE)

df %>% filter(x == 1)
df %>% filter(x == 1, .preserve = TRUE)
```",1,381,TRUE,NA
dplyr,34061a5dfbe413e97255a206bd6bd672,"The notion of lazily grouped data frames have disappeared. All dplyr verbs now recalculate immediately the grouping structure, and respect the levels of factors.",1,382,FALSE,NA
dplyr,f1403016a9758ee14fccd607b9db4960,"Subsets of columns now properly dispatch to the `[` or `[[` method when the column is an object (a vector with a class) instead of making assumptions on how the column should be handled. The `[` method must handle integer indices, including `NA_integer_`, i.e. `x[NA_integer_]` should produce a vector of the same class as `x` with whatever represents a missing value.",1,383,FALSE,NA
dplyr,8f9a4cec744f025d6e3af71a48a5d198,`tally()` works correctly on non-data frame table sources such as `tbl_sql` (#3075).,1,384,FALSE,NA
dplyr,8593039d0acd389c453af8f9245d7e9d,`sample_n()` and `sample_frac()` can use `n()` (#3527),1,385,FALSE,NA
dplyr,4bd65b2c7d9420bfd0b0ddc273e8459b,"`distinct()` respects the order of the variables provided (#3195, @​foo-bar-baz-qux) and handles the 0 rows and 0 columns special case (#2954).",1,386,FALSE,NA
dplyr,e8dbfadadc378e226abfef3e174aa63e,`combine()` uses tidy dots (#3407).,1,387,FALSE,NA
dplyr,223955d0fe6b063a4219b42e62896cde,`group_indices()` can be used without argument in expressions in verbs (#1185).,1,388,FALSE,NA
dplyr,26f04cd22cc3b2be799d419a78c4ca23,"Using `mutate_all()`, `transmute_all()`, `mutate_if()` and `transmute_if()` with grouped tibbles now informs you that the grouping variables are ignored. In the case of the `_all()` verbs, the message invites you to use `mutate_at(df, vars(-group_cols()))` (or the equivalent `transmute_at()` call) instead if you'd like to make it explicit in your code that the operation is not applied on the grouping variables.",1,389,FALSE,NA
dplyr,31ff18ca65c28ec43087135bae9d0b70,Scoped variants of `arrange()` respect the `.by_group` argument (#3504).,1,390,FALSE,NA
dplyr,7aa66f6a8508d6981cd064fac7cb2e75,`first()` and `last()` hybrid functions fall back to R evaluation when given no arguments (#3589).,1,391,FALSE,NA
dplyr,9aaff3b2b4d2ba2d6cf0fa8e3f82569c,`mutate()` removes a column when the expression evaluates to `NULL` for all groups (#2945).,1,392,FALSE,NA
dplyr,d35e032da5382b8c44976ac307ca6450,"grouped data frames support `[, drop = TRUE]` (#3714).",1,393,FALSE,NA
dplyr,db36d4ccfd888b144c708397cea63efd,New low-level constructor `new_grouped_df()` and validator `validate_grouped_df` (#3837).,1,394,FALSE,NA
dplyr,928833d5b3f62e07882f744adedeb2d9,`glimpse()` prints group information on grouped tibbles (#3384).,1,395,FALSE,NA
dplyr,7389bb9e23562c6a055aafb24eb5f622,`sample_n()` and `sample_frac()` gain `...` (#2888).,1,396,FALSE,NA
dplyr,efe7c7fd25517f4ae466af6d2ae5c818,Scoped filter variants now support functions and purrr-like lambdas:,1,397,FALSE,NA
dplyr,efe7c7fd25517f4ae466af6d2ae5c818,"```
mtcars %>% filter_at(vars(hp, vs), ~ . %% 2 == 0)
```",1,398,TRUE,NA
dplyr,07c184f55e55cd94e3238862be699e3b,"`do()`, `rowwise()` and `combine()` are questioning (#3494).",1,399,FALSE,NA
dplyr,4923cb52fb4fdf1e996f4769fed0b18d,`funs()` is soft-deprecated and will start issuing warnings in a future version.,1,400,FALSE,NA
dplyr,fcf0119ef558bc22efddef78afdb507f,"Scoped variants for `distinct()`: `distinct_at()`, `distinct_if()`, `distinct_all()` (#2948).",1,401,FALSE,NA
dplyr,63dbfc9d946dba74e493bcb50fc1b226,`summarise_at()` excludes the grouping variables (#3613).,1,402,FALSE,NA
dplyr,4e89f50e8e61a7368b4ff6f10140d0b8,"`mutate_all()`, `mutate_at()`, `summarise_all()` and `summarise_at()` handle utf-8 names (#2967).",1,403,FALSE,NA
dplyr,4a42e08a740e233123a9ca92348845f7,"R expressions that cannot be handled with native code are now evaluated with unwind-protection when available (on R 3.5 and later). This improves the performance of dplyr on data frames with many groups (and hence many expressions to evaluate). We benchmarked that computing a grouped average is consistently twice as fast with unwind-protection enabled. Unwind-protection also makes dplyr more robust in corner cases because it ensures the C++ destructors are correctly called in all circumstances (debugger exit, captured condition, restart invocation).",1,404,FALSE,NA
dplyr,4d0d1de1250154474273aba1f705cdba,`sample_n()` and `sample_frac()` gain `...` (#2888).,1,405,FALSE,NA
dplyr,2f55193ee27ac48da80362b0a5f6fa02,Improved performance for wide tibbles (#3335).,1,406,FALSE,NA
dplyr,1acb34c2ad0589691811756a05327d6d,"Faster hybrid `sum()`, `mean()`, `var()` and `sd()` for logical vectors (#3189).",1,407,FALSE,NA
dplyr,ec4602269a6fafcfb8cdd421f5db2f70,Hybrid version of `sum(na.rm = FALSE)` exits early when there are missing values. This considerably improves performance when there are missing values early in the vector (#3288).,1,408,FALSE,NA
dplyr,6d781e709548c1edd8d8beaa6cb9fa2f,`group_by()` does not trigger the additional `mutate()` on simple uses of the `.data` pronoun (#3533).,1,409,FALSE,NA
dplyr,c2dab81544080221fc9668db1a85de41,"The grouping metadata of grouped data frame has been reorganized in a single tidy tibble, that can be accessed with the new `group_data()` function. The grouping tibble consists of one column per grouping variable, followed by a list column of the (1-based) indices of the groups. The new `group_rows()` function retrieves that list of indices (#3489).",1,410,FALSE,NA
dplyr,c2dab81544080221fc9668db1a85de41,"```
# the grouping metadata, as a tibble
group_by(starwars, homeworld) %>%
  group_data()

# the indices
group_by(starwars, homeworld) %>%
  group_data() %>%
  pull(.rows)

group_by(starwars, homeworld) %>%
  group_rows()
```",1,411,TRUE,NA
dplyr,0938f3251684c986560619c1a1dc358f,Hybrid evaluation has been completely redesigned for better performance and stability.,1,412,FALSE,NA
dplyr,1a388dd8489a80b8e43b295e67ab5fbf,Add documentation example for moving variable to back in `?select` (#3051).,1,413,FALSE,NA
dplyr,fdcb2b7659a8e4599548e67ed2a68ed3,"column wise functions are better documented, in particular explaining when grouping variables are included as part of the selection.",1,414,FALSE,NA
dplyr,0738e870d34fefb7793b148b2ae048eb,`mutate_each()` and `summarise_each()` are deprecated.,1,415,FALSE,NA
dplyr,5fad15dd0ace835e17faaddcfdac4716,`exprs()` is no longer exported to avoid conflicts with `Biobase::exprs()` (#3638).,1,416,FALSE,NA
dplyr,8f4ed1f5c4d541896376d60e0998ab8a,The MASS package is explicitly suggested to fix CRAN warnings on R-devel (#3657).,1,417,FALSE,NA
dplyr,238c28f0edfdeeb943408f857016ca77,Set operations like `intersect()` and `setdiff()` reconstruct groups metadata (#3587) and keep the order of the rows (#3839).,1,418,FALSE,NA
dplyr,4305786dd4553295309ed0a4fcb09739,Using namespaced calls to `base::sort()` and `base::unique()` from C++ code to avoid ambiguities when these functions are overridden (#3644).,1,419,FALSE,NA
dplyr,816f7f4ff6b73b2c81498ffc818a8579,Fix rchk errors (#3693).,1,420,FALSE,NA
dplyr,774ff81c536fa3a63b7503ba8e1543c5,"The major change in this version is that dplyr now depends on the selecting backend of the tidyselect package. If you have been linking to `dplyr::select_helpers` documentation topic, you should update the link to point to `tidyselect::select_helpers`.",1,421,FALSE,NA
dplyr,f04ecaf4ebf99df6a85b35aebc210bde,"Another change that causes warnings in packages is that dplyr now exports the `exprs()` function. This causes a collision with `Biobase::exprs()`. Either import functions from dplyr selectively rather than in bulk, or do not import `Biobase::exprs()` and refer to it with a namespace qualifier.",1,422,FALSE,NA
dplyr,f240a5388b26956a32123db40457b9d9,"`distinct(data, ""string"")` now returns a one-row data frame again. (The previous behavior was to return the data unchanged.)",1,423,FALSE,NA
dplyr,df4dc5eddcebe639f1985af23472934e,`do()` operations with more than one named argument can access `.` (#2998).,1,424,FALSE,NA
dplyr,fe0d0db10f84a09814edac16588866a2,"Reindexing grouped data frames (e.g. after `filter()` or `..._join()`) never updates the `""class""` attribute. This also avoids unintended updates to the original object (#3438).",1,425,FALSE,NA
dplyr,58264c3140fdd7039cb1289a12a0153e,Fixed rare column name clash in `..._join()` with non-join columns of the same name in both tables (#3266).,1,426,FALSE,NA
dplyr,58b767ef9868905b2a9a63fba4a2726f,"Fix `ntile()` and `row_number()` ordering to use the locale-dependent ordering functions in R when dealing with character vectors, rather than always using the C-locale ordering function in C (#2792, @​foo-bar-baz-qux).",1,427,FALSE,NA
dplyr,66d9411fcd18d8dbc9e59f46cc58c280,"Summaries of summaries (such as `summarise(b = sum(a), c = sum(b))`) are now computed using standard evaluation for simplicity and correctness, but slightly slower (#3233).",1,428,FALSE,NA
dplyr,ede0e01c7ca255e099e963d309f739fe,Fixed `summarise()` for empty data frames with zero columns (#3071).,1,429,FALSE,NA
dplyr,65c3ac2d02e211af8a793cdc68638060,"`enexpr()`, `expr()`, `exprs()`, `sym()` and `syms()` are now exported. `sym()` and `syms()` construct symbols from strings or character vectors. The `expr()` variants are equivalent to `quo()`, `quos()` and `enquo()` but return simple expressions rather than quosures. They support quasiquotation.",1,430,FALSE,NA
dplyr,2d000d44bf483cf249e8fc748e810470,"dplyr now depends on the new tidyselect package to power `select()`, `rename()`, `pull()` and their variants (#2896). Consequently `select_vars()`, `select_var()` and `rename_vars()` are soft-deprecated and will start issuing warnings in a future version. Following the switch to tidyselect, `select()` and `rename()` fully support character vectors. You can now unquote variables like this:",1,431,FALSE,NA
dplyr,2d000d44bf483cf249e8fc748e810470,"```
vars <- c(""disp"", ""cyl"")
select(mtcars, !! vars)
select(mtcars, -(!! vars))
```",1,432,TRUE,NA
dplyr,2d000d44bf483cf249e8fc748e810470,"Note that this only works in selecting functions because in other contexts strings and character vectors are ambiguous. For instance strings are a valid input in mutating operations and `mutate(df, ""foo"")` creates a new column by recycling ""foo"" to the number of rows.",1,432,FALSE,NA
dplyr,4cef07bc29c1e96c9c3da9e37d6ba611,"Support for raw vector columns in `arrange()`, `group_by()`, `mutate()`, `summarise()` and `..._join()` (minimal `raw` x `raw` support initially) (#1803).",1,433,FALSE,NA
dplyr,9d1f1c42e954ea8367077f4919a0f23b,`bind_cols()` handles unnamed list (#3402).,1,434,FALSE,NA
dplyr,916cf19049c372ce69d65e1381e3dc32,`bind_rows()` works around corrupt columns that have the object bit set while having no class attribute (#3349).,1,435,FALSE,NA
dplyr,0611ad78a6e7b659a92847cc7f013ffb,"`combine()` returns `logical()` when all inputs are `NULL` (or when there are no inputs) (#3365, @​zeehio).",1,436,FALSE,NA
dplyr,981c97b5dd17b7625b255ebc78cf2d1e,`distinct()` now supports renaming columns (#3234).,1,437,FALSE,NA
dplyr,3fccdcac9d5da898e6f68c265110457a,Hybrid evaluation simplifies `dplyr::foo()` to `foo()` (#3309). Hybrid functions can now be masked by regular R functions to turn off hybrid evaluation (#3255). The hybrid evaluator finds functions from dplyr even if dplyr is not attached (#3456).,1,438,FALSE,NA
dplyr,8d1d9aba63a05e48c62266dad59fe4e0,In `mutate()` it is now illegal to use `data.frame` in the rhs (#3298).,1,439,FALSE,NA
dplyr,e33c8c5efae7a4e33df04ad407eefd84,Support `!!!` in `recode_factor()` (#3390).,1,440,FALSE,NA
dplyr,a9f3cc55bebc1ffd61116bf62f04eaee,`row_number()` works on empty subsets (#3454).,1,441,FALSE,NA
dplyr,897b66519c098060751a6d3dd6e0238e,`select()` and `vars()` now treat `NULL` as empty inputs (#3023).,1,442,FALSE,NA
dplyr,c67adcbe0d38a645ef28a4ac492acdb7,"Scoped select and rename functions (`select_all()`, `rename_if()` etc.) now work with grouped data frames, adapting the grouping as necessary (#2947, #3410). `group_by_at()` can group by an existing grouping variable (#3351). `arrange_at()` can use grouping variables (#3332).",1,443,FALSE,NA
dplyr,e4d8419c5a38b7aed592ea494212b08a,"`slice()` no longer enforce tibble classes when input is a simple `data.frame`, and ignores 0 (#3297, #3313).",1,444,FALSE,NA
dplyr,a36127e5809f98dcdf4807706b8404ad,`transmute()` no longer prints a message when including a group variable.,1,445,FALSE,NA
dplyr,9c25be4104817f794b1864a060f30a51,"Improved documentation for `funs()` (#3094) and set operations (e.g. `union()`) (#3238, @​edublancas).",1,446,FALSE,NA
dplyr,55f49b800e26a03fb8c7e685fc42a80e,Better error message if dbplyr is not installed when accessing database backends (#3225).,1,447,FALSE,NA
dplyr,55b44cbdbb5af082f696887603df6920,`arrange()` fails gracefully on `data.frame` columns (#3153).,1,448,FALSE,NA
dplyr,50986c4dc71c0072dd26ecb1ada6e3bd,Corrected error message when calling `cbind()` with an object of wrong length (#3085).,1,449,FALSE,NA
dplyr,21e1776e84613d385fa38f82e281f021,"Add warning with explanation to `distinct()` if any of the selected columns are of type `list` (#3088, @​foo-bar-baz-qux), or when used on unknown columns (#2867, @​foo-bar-baz-qux).",1,450,FALSE,NA
dplyr,725234c71d0e72a79d05eddf60f0ba81,Show clear error message for bad arguments to `funs()` (#3368).,1,451,FALSE,NA
dplyr,08d5dd46ba06e98b3a624b2e90e207a0,"Better error message in `..._join()` when joining data frames with duplicate or `NA` column names. Joining such data frames with a semi- or anti-join now gives a warning, which may be converted to an error in future versions (#3243, #3417).",1,452,FALSE,NA
dplyr,c76d3591a488865ce1be6e1013118acc,Dedicated error message when trying to use columns of the `Interval` or `Period` classes (#2568).,1,453,FALSE,NA
dplyr,9395ef2da6b5eb14a2520e0e49cf9dc1,"Added an `.onDetach()` hook that allows for plyr to be loaded and attached without the warning message that says functions in dplyr will be masked, since dplyr is no longer attached (#3359, @​jwnorman).",1,454,FALSE,NA
dplyr,20b915a18cbcd6a71a659f7339dd2ea9,"`sample_n()` and `sample_frac()` on grouped data frame are now faster especially for those with large number of groups (#3193, @​saurfang).",1,455,FALSE,NA
dplyr,4765c670831ff193b644de6b986e439b,Compute variable names for joins in R (#3430).,1,456,FALSE,NA
dplyr,be527e41c3e6f7a4d1576034b0df22fd,Bumped Rcpp dependency to 0.12.15 to avoid imperfect detection of `NA` values in hybrid evaluation fixed in RcppCore/Rcpp#790 (#2919).,1,457,FALSE,NA
dplyr,aca0b8a8ecb0818d249953d86ce71cf0,"Avoid cleaning the data mask, a temporary environment used to evaluate expressions. If the environment, in which e.g. a `mutate()` expression is evaluated, is preserved until after the operation, accessing variables from that environment now gives a warning but still returns `NULL` (#3318).",1,458,FALSE,NA
dplyr,a92b4c8c6779272751bf82aa3ecc086a,Fix recent Fedora and ASAN check errors (#3098).,1,459,FALSE,NA
dplyr,83794af8418d15f0a1d7d2224ee08216,Avoid dependency on Rcpp 0.12.10 (#3106).,1,460,FALSE,NA
dplyr,340368254441f92a583acdbf4284ea0a,Fixed protection error that occurred when creating a character column using grouped `mutate()` (#2971).,1,461,FALSE,NA
dplyr,9f59e8d4607e8c6059e61ec4b6e3df9f,Fixed a rare problem with accessing variable values in `summarise()` when all groups have size one (#3050).,1,462,FALSE,NA
dplyr,8b0a5f23633254adef42791aff03842b,"`distinct()` now throws an error when used on unknown columns (#2867, @​foo-bar-baz-qux).",1,463,FALSE,NA
dplyr,d0673faa85e50e994eb0378fbbdb3d99,Fixed rare out-of-bounds memory write in `slice()` when negative indices beyond the number of rows were involved (#3073).,1,464,FALSE,NA
dplyr,8aa82ff50083f0b6f3a7658b9ec5b7dd,"`select()`, `rename()` and `summarise()` no longer change the grouped vars of the original data (#3038).",1,465,FALSE,NA
dplyr,6149fe57cfd1b6155d89f049999af3e4,"`nth(default = var)`, `first(default = var)` and `last(default = var)` fall back to standard evaluation in a grouped operation instead of triggering an error (#3045).",1,466,FALSE,NA
dplyr,aa5954dc73d931c8482061bf1e86fdf3,"`case_when()` now works if all LHS are atomic (#2909), or when LHS or RHS values are zero-length vectors (#3048).",1,467,FALSE,NA
dplyr,51d2da071a1ebd58cdb60fa931f6efb4,`case_when()` accepts `NA` on the LHS (#2927).,1,468,FALSE,NA
dplyr,763ade5e98b1bfc2f1c48bd6ffcb558c,Semi- and anti-joins now preserve the order of left-hand-side data frame (#3089).,1,469,FALSE,NA
dplyr,15b340d6d1ad7da76e03761f634f40d8,Improved error message for invalid list arguments to `bind_rows()` (#3068).,1,470,FALSE,NA
dplyr,eb968a4c86aa8b38350ae6c15c93c8e7,Grouping by character vectors is now faster (#2204).,1,471,FALSE,NA
dplyr,8f0c10ca5e08f13cec0a90f0078e2981,Fixed a crash that occurred when an unexpected input was supplied to the `call` argument of `order_by()` (#3065).,1,472,FALSE,NA
dplyr,d2e8d298c43d557f4d2b0868e34bc86a,Move build-time vs. run-time checks out of `.onLoad()` and into `dr_dplyr()`.,1,473,FALSE,NA
dplyr,b76c5bff9abff9b3eb054f6e28c67432,Use new versions of bindrcpp and glue to avoid protection problems. Avoid wrapping arguments to internal error functions (#2877). Fix two protection mistakes found by rchk (#2868).,1,474,FALSE,NA
dplyr,cc7b6fd719505bac1d78196c3c6c477b,Fix C++ error that caused compilation to fail on mac cran (#2862),1,475,FALSE,NA
dplyr,b06e80e35f459f5030099dbe6f0ddd0f,"Fix undefined behaviour in `between()`, where `NA_REAL` were assigned instead of `NA_LOGICAL`. (#2855, @​zeehio)",1,476,FALSE,NA
dplyr,c360a422ba276b23487876ce45d956eb,`top_n()` now executes operations lazily for compatibility with database backends (#2848).,1,477,FALSE,NA
dplyr,0c5a420bde1e9b9e6d2709e67e512eb6,"Reuse of new variables created in ungrouped `mutate()` possible again, regression introduced in dplyr 0.7.0 (#2869).",1,478,FALSE,NA
dplyr,59065f3ec95fcc6da145cef79479256d,Quosured symbols do not prevent hybrid handling anymore. This should fix many performance issues introduced with tidyeval (#2822).,1,479,FALSE,NA
dplyr,0869fdbbacfef912500c8b22d9f525e6,Five new datasets provide some interesting built-in datasets to demonstrate dplyr verbs (#2094):,1,480,FALSE,NA
dplyr,0869fdbbacfef912500c8b22d9f525e6,• `starwars` dataset about starwars characters; has list columns,2,481,FALSE,Five new datasets provide some interesting built-in datasets to demonstrate dplyr verbs (#2094):
dplyr,0869fdbbacfef912500c8b22d9f525e6,• `storms` has the trajectories of \~200 tropical storms,2,482,FALSE,Five new datasets provide some interesting built-in datasets to demonstrate dplyr verbs (#2094):
dplyr,0869fdbbacfef912500c8b22d9f525e6,"• `band_members`, `band_instruments` and `band_instruments2` has some simple data to demonstrate joins.",2,483,FALSE,Five new datasets provide some interesting built-in datasets to demonstrate dplyr verbs (#2094):
dplyr,ea5872879f4695bd8b99698159dfec42,"New `add_count()` and `add_tally()` for adding an `n` column within groups (#2078, @​dgrtwo).",1,484,FALSE,NA
dplyr,da1a71fc76cffa6262e163453e63cf8e,`arrange()` for grouped data frames gains a `.by_group` argument so you can choose to sort by groups if you want to (defaults to `FALSE`) (#2318),1,485,FALSE,NA
dplyr,291240bbff37a98b07aeda748d9553e9,"New `pull()` generic for extracting a single column either by name or position (either from the left or the right). Thanks to @​paulponcet for the idea (#2054). This verb is powered with the new `select_var()` internal helper, which is exported as well. It is like `select_vars()` but returns a single variable.",1,486,FALSE,NA
dplyr,f70bf1d74d28a15ea29187acca068e4f,"`as_tibble()` is re-exported from tibble. This is the recommend way to create tibbles from existing data frames. `tbl_df()` has been softly deprecated. `tribble()` is now imported from tibble (#2336, @​chrMongeau); this is now preferred to `frame_data()`.",1,487,FALSE,NA
dplyr,4512065c5fa53dfcbb91a7f6982b9ca2,dplyr no longer messages that you need dtplyr to work with data.table (#2489).,1,488,FALSE,NA
dplyr,253697c7e58015aeabd66c7796691e84,"Long deprecated `regroup()`, `mutate_each_q()` and `summarise_each_q()` functions have been removed.",1,489,FALSE,NA
dplyr,1d0a6082ba91c9fc74072241acd5b9d0,Deprecated `failwith()`. I'm not even sure why it was here.,1,490,FALSE,NA
dplyr,94fda2d6a6de91d4422316a334a8973d,"Soft-deprecated `mutate_each()` and `summarise_each()`, these functions print a message which will be changed to a warning in the next release.",1,491,FALSE,NA
dplyr,3695747964be5d411a946ea85167eb9b,"The `.env` argument to `sample_n()` and `sample_frac()` is defunct, passing a value to this argument print a message which will be changed to a warning in the next release.",1,492,FALSE,NA
dplyr,041f0d333ade96624ed37177060ce6cb,"Almost all database related code has been moved out of dplyr and into a new package, dbplyr. This makes dplyr simpler, and will make it easier to release fixes for bugs that only affect databases. `src_mysql()`, `src_postgres()`, and `src_sqlite()` will still live dplyr so your existing code continues to work.",1,493,FALSE,NA
dplyr,b8dfc9ef40fb1714f965a8b086c18aae,"It is no longer necessary to create a remote ""src"". Instead you can work directly with the database connection returned by DBI. This reflects the maturity of the DBI ecosystem. Thanks largely to the work of Kirill Muller (funded by the R Consortium) DBI backends are now much more consistent, comprehensive, and easier to use. That means that there's no longer a need for a layer in between you and DBI.",1,494,FALSE,NA
dplyr,fe4656dd416ce8d77386fe8fdd0e4aba,"Internally, column names are always represented as character vectors, and not as language symbols, to avoid encoding problems on Windows (#1950, #2387, #2388).",1,496,FALSE,NA
dplyr,dab342889076b90cf1753ca6763c0883,"Error messages and explanations of data frame inequality are now encoded in UTF-8, also on Windows (#2441).",1,497,FALSE,NA
dplyr,89c2fd41753d10c14dd74cbff71354e5,"Joins now always reencode character columns to UTF-8 if necessary. This gives a nice speedup, because now pointer comparison can be used instead of string comparison, but relies on a proper encoding tag for all strings (#2514).",1,498,FALSE,NA
dplyr,4f93da30a3f6e465d4d1d421b4451fdb,"Fixed problems when joining factor or character encodings with a mix of native and UTF-8 encoded values (#1885, #2118, #2271, #2451).",1,499,FALSE,NA
dplyr,f2dddea5298d610bcdc9d694a2902ee8,"Fix `group_by()` for data frames that have UTF-8 encoded names (#2284, #2382).",1,500,FALSE,NA
dplyr,169fc7600de44a902b29a8ae105525e5,"New `group_vars()` generic that returns the grouping as character vector, to avoid the potentially lossy conversion to language symbols. The list returned by `group_by_prepare()` now has a new `group_names` component (#1950, #2384).",1,501,FALSE,NA
dplyr,cd51d3174dde3c7b238799197c3c9146,"`rename()`, `select()`, `group_by()`, `filter()`, `arrange()` and `transmute()` now have scoped variants (verbs suffixed with `_if()`, `_at()` and `_all()`). Like `mutate_all()`, `summarise_if()`, etc, these variants apply an operation to a selection of variables.",1,502,FALSE,NA
dplyr,8f737b07e0e50ad0124ef2c4b35cf6d8,"The scoped verbs taking predicates (`mutate_if()`, `summarise_if()`, etc) now support S3 objects and lazy tables. S3 objects should implement methods for `length()`, `[[` and `tbl_vars()`. For lazy tables, the first 100 rows are collected and the predicate is applied on this subset of the data. This is robust for the common case of checking the type of a column (#2129).",1,503,FALSE,NA
dplyr,dd6d90516cd901d34b6cf3cea133de9d,Summarise and mutate colwise functions pass `...` on to the manipulation functions.,1,504,FALSE,NA
dplyr,4eec0add7f72f9922f2e81160cdeef65,The performance of colwise verbs like `mutate_all()` is now back to where it was in `mutate_each()`.,1,505,FALSE,NA
dplyr,aa9b9410d6ab3832b71d49894927c695,`funs()` has better handling of namespaced functions (#2089).,1,506,FALSE,NA
dplyr,3d9bd7fd40c7bdc807bc2e43bdd42bae,"Fix issue with `mutate_if()` and `summarise_if()` when a predicate function returns a vector of `FALSE` (#1989, #2009, #2011).",1,507,FALSE,NA
dplyr,33142064d3e9c9f19545c5fbf67fbba3,"`order_by()`, `top_n()`, `sample_n()` and `sample_frac()` now use tidyeval to capture their arguments by expression. This makes it possible to use unquoting idioms (see `vignette(""programming"")`) and fixes scoping issues (#2297).",1,509,FALSE,NA
dplyr,dcadf41b36d03c22bec52f77c8aeae8b,Most verbs taking dots now ignore the last argument if empty. This makes it easier to copy lines of code without having to worry about deleting trailing commas (#1039).,1,510,FALSE,NA
dplyr,8c0602c25c2aa52d64e8d985d71f8b46,"\[API\] The new `.data` and `.env` environments can be used inside all verbs that operate on data: `.data$column_name` accesses the column `column_name`, whereas `.env$var` accesses the external variable `var`. Columns or external variables named `.data` or `.env` are shadowed, use `.data$...` and/or `.env$...` to access them. (`.data` implements strict matching also for the `$` operator (#2591).) The `column()` and `global()` functions have been removed. They were never documented officially. Use the new `.data` and `.env` environments instead.",1,511,FALSE,NA
dplyr,5629de9a864476f9968ce2c8e104510c,"Expressions in verbs are now interpreted correctly in many cases that failed before (e.g., use of `$`, `case_when()`, nonstandard evaluation, ...). These expressions are now evaluated in a specially constructed temporary environment that retrieves column data on demand with the help of the `bindrcpp` package (#2190). This temporary environment poses restrictions on assignments using `<-` inside verbs. To prevent leaking of broken bindings, the temporary environment is cleared after the evaluation (#2435).",1,512,FALSE,NA
dplyr,59412b1760f1ae41c6ac0fe64aa31ab6,"\[API\] `xxx_join.tbl_df(na_matches = ""never"")` treats all `NA` values as different from each other (and from any other value), so that they never match. This corresponds to the behavior of joins for database sources, and of database joins in general. To match `NA` values, pass `na_matches = ""na""` to the join verbs; this is only supported for data frames. The default is `na_matches = ""na""`, kept for the sake of compatibility to v0.5.0. It can be tweaked by calling `pkgconfig::set_config(""dplyr::na_matches"", ""na"")` (#2033).",1,513,FALSE,NA
dplyr,f8e25a5f52785451ecd072c9e0601154,`common_by()` gets a better error message for unexpected inputs (#2091),1,514,FALSE,NA
dplyr,088eb03b7942ea8ca6258120ffeb6d58,"Fix groups when joining grouped data frames with duplicate columns (#2330, #2334, @​davidkretch).",1,515,FALSE,NA
dplyr,ff8ea67cf73ec569f1091b3cc537fb8c,"One of the two join suffixes can now be an empty string, dplyr no longer hangs (#2228, #2445).",1,516,FALSE,NA
dplyr,caf2cdaa5e84fa4b8949ee79ef18426f,Anti- and semi-joins warn if factor levels are inconsistent (#2741).,1,517,FALSE,NA
dplyr,81ff0793eb2010b9f1f4376cce514b0c,Warnings about join column inconsistencies now contain the column names (#2728).,1,518,FALSE,NA
dplyr,9b0c2ec1035f1b9d4a6c1bfc2d4f0cac,"For selecting variables, the first selector decides if it's an inclusive selection (i.e., the initial column list is empty), or an exclusive selection (i.e., the initial column list contains all columns). This means that `select(mtcars, contains(""am""), contains(""FOO""), contains(""vs""))` now returns again both `am` and `vs` columns like in dplyr 0.4.3 (#2275, #2289, @​r2evans).",1,519,FALSE,NA
dplyr,e6197a81a78682d3a178a711fdb6dd62,Select helpers now throw an error if called when no variables have been set (#2452),1,520,FALSE,NA
dplyr,f522ee81bb2cdb752ef8d06d52a089b7,Helper functions in `select()` (and related verbs) are now evaluated in a context where column names do not exist (#2184).,1,521,FALSE,NA
dplyr,16ed58f62155248346cb72d247a9b987,"`select()` (and the internal function `select_vars()`) now support column names in addition to column positions. As a result, expressions like `select(mtcars, ""cyl"")` are now allowed.",1,522,FALSE,NA
dplyr,69621f9458a01ecdfda342b1869113e3,"`recode()`, `case_when()` and `coalesce()` now support splicing of arguments with rlang's `!!!` operator.",1,523,FALSE,NA
dplyr,0fe5655535981fffd6ea1f8d16406a9a,`count()` now preserves the grouping of its input (#2021).,1,524,FALSE,NA
dplyr,5707afffe07f3032726938d964a6f886,`distinct()` no longer duplicates variables (#2001).,1,525,FALSE,NA
dplyr,2694ebc67b694357730fb1cd0c77210b,"Empty `distinct()` with a grouped data frame works the same way as an empty `distinct()` on an ungrouped data frame, namely it uses all variables (#2476).",1,526,FALSE,NA
dplyr,cb8030e48d2bc469c56af50625ff6b96,`copy_to()` now returns its output invisibly (since you're often just calling for the side-effect).,1,527,FALSE,NA
dplyr,7d3503b803345f027562007d9731f9f1,`filter()` and `lag()` throw informative error if used with ts objects (#2219),1,528,FALSE,NA
dplyr,036dcd58e901897615b34d25b5413aa5,`mutate()` recycles list columns of length 1 (#2171).,1,529,FALSE,NA
dplyr,ed1f1172f3082f4601692afe7974831d,"`mutate()` gives better error message when attempting to add a non-vector column (#2319), or attempting to remove a column with `NULL` (#2187, #2439).",1,530,FALSE,NA
dplyr,b7c8efd9a74099124470f1efb9ead87e,"`summarise()` now correctly evaluates newly created factors (#2217), and can create ordered factors (#2200).",1,531,FALSE,NA
dplyr,e9734aa73384de466ae58b24d18484b2,"Ungrouped `summarise()` uses summary variables correctly (#2404, #2453).",1,532,FALSE,NA
dplyr,ba3d20875ad840be7cb860a68342014f,Grouped `summarise()` no longer converts character `NA` to empty strings (#1839).,1,533,FALSE,NA
dplyr,1a6b49f6b156fea1b155aa1d05687688,"`all_equal()` now reports multiple problems as a character vector (#1819, #2442).",1,534,FALSE,NA
dplyr,fb3aa732688a491836458039595d66f0,"`all_equal()` checks that factor levels are equal (#2440, #2442).",1,535,FALSE,NA
dplyr,1108eec17937a5de8d133c7dd3a131d3,`bind_rows()` and `bind_cols()` give an error for database tables (#2373).,1,536,FALSE,NA
dplyr,e679ee8d19fe7c6a835877c34062fc28,"`bind_rows()` works correctly with `NULL` arguments and an `.id` argument (#2056), and also for zero-column data frames (#2175).",1,537,FALSE,NA
dplyr,7ce81c01cabb3d10a2f9aa918ccd0b86,"Breaking change: `bind_rows()` and `combine()` are more strict when coercing. Logical values are no longer coerced to integer and numeric. Date, POSIXct and other integer or double-based classes are no longer coerced to integer or double as there is chance of attributes or information being lost (#2209, @​zeehio).",1,538,FALSE,NA
dplyr,fff7da9ccb230d4a3468b12d2792618b,`bind_cols()` now calls `tibble::repair_names()` to ensure that all names are unique (#2248).,1,539,FALSE,NA
dplyr,f48af7797c8163ac856e02e7636aab2c,`bind_cols()` handles empty argument list (#2048).,1,540,FALSE,NA
dplyr,bfc8127ec50ae6ba66a9ad03d91dd09a,"`bind_cols()` better handles `NULL` inputs (#2303, #2443).",1,541,FALSE,NA
dplyr,27a9c785f901addcc6fd9f35032d1bfa,"`bind_rows()` explicitly rejects columns containing data frames (#2015, #2446).",1,542,FALSE,NA
dplyr,1bd39ec7af1d5cadf39720189d46306b,"`bind_rows()` and `bind_cols()` now accept vectors. They are treated as rows by the former and columns by the latter. Rows require inner names like `c(col1 = 1, col2 = 2)`, while columns require outer names: `col1 = c(1, 2)`. Lists are still treated as data frames but can be spliced explicitly with `!!!`, e.g. `bind_rows(!!! x)` (#1676).",1,543,FALSE,NA
dplyr,af5c73e5e27156c5f5b77ca6ac3e7fb6,"`rbind_list()` and `rbind_all()` now call `.Deprecated()`, they will be removed in the next CRAN release. Please use `bind_rows()` instead.",1,544,FALSE,NA
dplyr,99a8e1ff0492bd39fd1a9cbbf35bfa8b,"`combine()` accepts `NA` values (#2203, @​zeehio)",1,545,FALSE,NA
dplyr,2cc55b018a185946a5c1a3d775304d13,"`combine()` and `bind_rows()` with character and factor types now always warn about the coercion to character (#2317, @​zeehio)",1,546,FALSE,NA
dplyr,7f8dc7e378fe9206ba512f66b9c1f6ec,`combine()` and `bind_rows()` accept `difftime` objects.,1,547,FALSE,NA
dplyr,b60152b3cacc1c11c389bc705fc54bb4,"`mutate` coerces results from grouped dataframes accepting combinable data types (such as `integer` and `numeric`). (#1892, @​zeehio)",1,548,FALSE,NA
dplyr,e92db0a72b8ff35306b5f343a062bf76,`%in%` gets new hybrid handler (#126).,1,549,FALSE,NA
dplyr,dfbc279d0fda1cfd37dea2327ebdf8da,`between()` returns NA if `left` or `right` is `NA` (fixes #2562).,1,550,FALSE,NA
dplyr,d7816e3045d1bb8a1756246cb54f395c,"`case_when()` supports `NA` values (#2000, @​tjmahr).",1,551,FALSE,NA
dplyr,c0da61bc7603f2a191c8eb5d3404849f,"`first()`, `last()`, and `nth()` have better default values for factor, Dates, POSIXct, and data frame inputs (#2029).",1,552,FALSE,NA
dplyr,4c38956a6bd01ec4a2bfa7400168d74f,"Fixed segmentation faults in hybrid evaluation of `first()`, `last()`, `nth()`, `lead()`, and `lag()`. These functions now always fall back to the R implementation if called with arguments that the hybrid evaluator cannot handle (#948, #1980).",1,553,FALSE,NA
dplyr,648a8cfe42a2fcb33ea65abb40d9b3f6,`n_distinct()` gets larger hash tables given slightly better performance (#977).,1,554,FALSE,NA
dplyr,02108ed93d71217031bd6d2f45e52f70,`nth()` and `ntile()` are more careful about proper data types of their return values (#2306).,1,555,FALSE,NA
dplyr,737dea5f11b6b07f45a812db6878f22e,`ntile()` ignores `NA` when computing group membership (#2564).,1,556,FALSE,NA
dplyr,2e4b56225a692ab067a8bef8d919aa32,"`lag()` enforces integer `n` (#2162, @​kevinushey).",1,557,FALSE,NA
dplyr,2078528444edb69b68bd9f5741048ea1,"hybrid `min()` and `max()` now always return a `numeric` and work correctly in edge cases (empty input, all `NA`, ...) (#2305, #2436).",1,558,FALSE,NA
dplyr,8eb836afa193b46a969578bdf79fb3c6,"`min_rank(""string"")` no longer segfaults in hybrid evaluation (#2279, #2444).",1,559,FALSE,NA
dplyr,c421b9e33b0cc8bc1a9c87da6c209b99,`recode()` can now recode a factor to other types (#2268),1,560,FALSE,NA
dplyr,68aae27a27e08af7ffcd1d2307f3386d,"`recode()` gains `.dots` argument to support passing replacements as list (#2110, @​jlegewie).",1,561,FALSE,NA
dplyr,a459edf9127bb4a598809c15afc992d4,Many error messages are more helpful by referring to a column name or a position in the argument list (#2448).,1,562,FALSE,NA
dplyr,310a0a45fe395ce52f99cc16a5d97e19,New `is_grouped_df()` alias to `is.grouped_df()`.,1,563,FALSE,NA
dplyr,508ea9f133d7e8777507c226669efa5e,"`tbl_vars()` now has a `group_vars` argument set to `TRUE` by default. If `FALSE`, group variables are not returned.",1,564,FALSE,NA
dplyr,ee7d1549ad4ec16985077b60e9bd12e7,Fixed segmentation fault after calling `rename()` on an invalid grouped data frame (#2031).,1,565,FALSE,NA
dplyr,0a182ffda1e962d4141f2ac866211f18,`rename_vars()` gains a `strict` argument to control if an error is thrown when you try and rename a variable that doesn't exist.,1,566,FALSE,NA
dplyr,0fe851c8021eb46da96a50d4dcf683e1,Fixed undefined behavior for `slice()` on a zero-column data frame (#2490).,1,567,FALSE,NA
dplyr,fcda02631a674510b2dcdede6e40b13e,Fixed very rare case of false match during join (#2515).,1,568,FALSE,NA
dplyr,deac8765c28e5a43d6150d01f95258d3,Restricted workaround for `match()` to R 3.3.0. (#1858).,1,569,FALSE,NA
dplyr,acec6592a845ca75993653c7493e5169,dplyr now warns on load when the version of R or Rcpp during installation is different to the currently installed version (#2514).,1,570,FALSE,NA
dplyr,cddebd98f9d7a6dbc3420c0241dc9fbd,Fixed improper reuse of attributes when creating a list column in `summarise()` and perhaps `mutate()` (#2231).,1,571,FALSE,NA
dplyr,dbf31a11cc86356010c7ee7fba0f5b49,"`mutate()` and `summarise()` always strip the `names` attribute from new or updated columns, even for ungrouped operations (#1689).",1,572,FALSE,NA
dplyr,478e57dd6ee81b8b88a080a8c2e833a0,Fixed rare error that could lead to a segmentation fault in `all_equal(ignore_col_order = FALSE)` (#2502).,1,573,FALSE,NA
dplyr,fe451df1b84799797a609918a74f0b97,"The ""dim"" and ""dimnames"" attributes are always stripped when copying a vector (#1918, #2049).",1,574,FALSE,NA
dplyr,ebb0b381d3c42c46ec32ef50b6b9298f,"`grouped_df` and `rowwise` are registered officially as S3 classes. This makes them easier to use with S4 (#2276, @​joranE, #2789).",1,575,FALSE,NA
dplyr,9d2b0759f492e88d203d350cc4701b2d,"All operations that return tibbles now include the `""tbl""` class. This is important for correct printing with tibble 1.3.1 (#2789).",1,576,FALSE,NA
dplyr,83ead4143484625ef0be3426eb63ef5b,Makeflags uses PKG_CPPFLAGS for defining preprocessor macros.,1,577,FALSE,NA
dplyr,cdee73a40c1d0ff307f6ac841e307bb2,"astyle formatting for C++ code, tested but not changed as part of the tests (#2086, #2103).",1,578,FALSE,NA
dplyr,ed0cca7394dcd55cb9e2082a8882b42c,Update RStudio project settings to install tests (#1952).,1,579,FALSE,NA
dplyr,1bf9ec71bf03078b9acbcb702072025b,"Using `Rcpp::interfaces()` to register C callable interfaces, and registering all native exported functions via `R_registerRoutines()` and `useDynLib(.registration = TRUE)` (#2146).",1,580,FALSE,NA
dplyr,cf37308c59699b0b1f017202e5dcec55,"Formatting of grouped data frames now works by overriding the `tbl_sum()` generic instead of `print()`. This means that the output is more consistent with tibble, and that `format()` is now supported also for SQL sources (#2781).",1,581,FALSE,NA
dplyr,a4223d1e224b1b9e4f1d2e59d1d77180,`arrange()` once again ignores grouping (#1206).,1,582,FALSE,NA
dplyr,f516d6dee72f0023953ddabeb7e15aab,"`distinct()` now only keeps the distinct variables. If you want to return all variables (using the first row for non-distinct values) use `.keep_all = TRUE` (#1110). For SQL sources, `.keep_all = FALSE` is implemented using `GROUP BY`, and `.keep_all = TRUE` raises an error (#1937, #1942, @​krlmlr). (The default behaviour of using all variables when none are specified remains - this note only applies if you select some variables).",1,583,FALSE,NA
dplyr,7dce0e49944efd0a4f3044efe1b67667,"The select helper functions `starts_with()`, `ends_with()` etc are now real exported functions. This means that you'll need to import those functions if you're using from a package where dplyr is not attached. i.e. `dplyr::select(mtcars, starts_with(""m""))` used to work, but now you'll need `dplyr::select(mtcars, dplyr::starts_with(""m""))`.",1,584,FALSE,NA
dplyr,bc7a7222f34b307917c764a12a0ed937,"The long deprecated `chain()`, `chain_q()` and `%.%` have been removed. Please use `%>%` instead.",1,585,FALSE,NA
dplyr,5e95c1a252b0db9bf925237166d2d50f,`id()` has been deprecated. Please use `group_indices()` instead (#808).,1,586,FALSE,NA
dplyr,c2049fe5a0e48c7b7a7734ba6c162071,`rbind_all()` and `rbind_list()` are formally deprecated. Please use `bind_rows()` instead (#803).,1,587,FALSE,NA
dplyr,a503eee6426f26796861cd033900a2b1,Outdated benchmarking demos have been removed (#1487).,1,588,FALSE,NA
dplyr,a44e5ae9a034088c8a43b6b98839c5eb,Code related to starting and signalling clusters has been moved out to multidplyr.,1,589,FALSE,NA
dplyr,9c661ec919adb6676c32e8741d29df5d,"`coalesce()` finds the first non-missing value from a set of vectors. (#1666, thanks to @​krlmlr for initial implementation).",1,590,FALSE,NA
dplyr,d7be4ae6d03e45dcf5eec511eb5b08d8,`case_when()` is a general vectorised if + else if (#631).,1,591,FALSE,NA
dplyr,529853504447784c35cfffe0bc058026,"`if_else()` is a vectorised if statement: it's a stricter (type-safe), faster, and more predictable version of `ifelse()`. In SQL it is translated to a `CASE` statement.",1,592,FALSE,NA
dplyr,d5aa23e7ae5929c45becac16f9ecac56,`na_if()` makes it easy to replace a certain value with an `NA` (#1707). In SQL it is translated to `NULL_IF`.,1,593,FALSE,NA
dplyr,5d9bf4d8df43fedcb5d14966484c760f,"`near(x, y)` is a helper for `abs(x - y) < tol` (#1607).",1,594,FALSE,NA
dplyr,cfa6594f7ad10f29be424b58b81d8f6d,`recode()` is vectorised equivalent to `switch()` (#1710).,1,595,FALSE,NA
dplyr,a40784d470475cccac0523bf40082c2d,"`union_all()` method. Maps to `UNION ALL` for SQL sources, `bind_rows()` for data frames/tbl_dfs, and `combine()` for vectors (#1045).",1,596,FALSE,NA
dplyr,edc3b11f18770e59547862adc42feedd,"A new family of functions replace `summarise_each()` and `mutate_each()` (which will thus be deprecated in a future release). `summarise_all()` and `mutate_all()` apply a function to all columns while `summarise_at()` and `mutate_at()` operate on a subset of columns. These columns are selected with either a character vector of columns names, a numeric vector of column positions, or a column specification with `select()` semantics generated by the new `columns()` helper. In addition, `summarise_if()` and `mutate_if()` take a predicate function or a logical vector (these verbs currently require local sources). All these functions can now take ordinary functions instead of a list of functions generated by `funs()` (though this is only useful for local sources). (#1845, @​lionel-)",1,597,FALSE,NA
dplyr,e59657647209ba201c180bb548f22173,"`select_if()` lets you select columns with a predicate function. Only compatible with local sources. (#497, #1569, @​lionel-)",1,598,FALSE,NA
dplyr,62b146d3773c7f9b39c7918d4982d5f2,"`$` and `[[` methods that never do partial matching (#1504), and throw an error if the variable does not exist.",1,599,FALSE,NA
dplyr,8dae745e68ef9515762507cd0a200022,"`all_equal()` allows to compare data frames ignoring row and column order, and optionally ignoring minor differences in type (e.g. int vs. double) (#821). The test handles the case where the df has 0 columns (#1506). The test fails fails when convert is `FALSE` and types don't match (#1484).",1,600,FALSE,NA
dplyr,95fe1b483a1886484ac09a12113c0c32,"`all_equal()` shows better error message when comparing raw values or when types are incompatible and `convert = TRUE` (#1820, @​krlmlr).",1,601,FALSE,NA
dplyr,2ea144f954d050e9e53cbc7ae67cef19,`add_row()` makes it easy to add a new row to data frame (#1021),1,602,FALSE,NA
dplyr,57a85ec7eefeb66970406bef238952a6,"`as_data_frame()` is now an S3 generic with methods for lists (the old `as_data_frame()`), data frames (trivial), and matrices (with efficient C++ implementation) (#876). It no longer strips subclasses.",1,603,FALSE,NA
dplyr,0109769869ce56cdda7a57efc3c4b579,"The internals of `data_frame()` and `as_data_frame()` have been aligned, so `as_data_frame()` will now automatically recycle length-1 vectors. Both functions give more informative error messages if you attempting to create an invalid data frame. You can no longer create a data frame with duplicated names (#820). Both check for `POSIXlt` columns, and tell you to use `POSIXct` instead (#813).",1,604,FALSE,NA
dplyr,a749901866b5b9a7e33d50d2d8849df7,"`frame_data()` properly constructs rectangular tables (#1377, @​kevinushey), and supports list-cols.",1,605,FALSE,NA
dplyr,39571011d9af8df488575b878c1a2c6d,`glimpse()` is now a generic. The default method dispatches to `str()` (#1325). It now (invisibly) returns its first argument (#1570).,1,606,FALSE,NA
dplyr,49efb3c67bcecba0c0f12857e9c8d3d3,`lst()` and `lst_()` which create lists in the same way that `data_frame()` and `data_frame_()` create data frames (#1290).,1,607,FALSE,NA
dplyr,ab3a264db06147b3e2cf3ae3b1d369b6,`print.tbl_df()` is considerably faster if you have very wide data frames. It will now also only list the first 100 additional variables not already on screen - control this with the new `n_extra` parameter to `print()` (#1161). When printing a grouped data frame the number of groups is now printed with thousands separators (#1398). The type of list columns is correctly printed (#1379),1,608,FALSE,NA
dplyr,559088d403d66371ff3d46fc4d471f2f,"Package includes `setOldClass(c(""tbl_df"", ""tbl"", ""data.frame""))` to help with S4 dispatch (#969).",1,609,FALSE,NA
dplyr,f7b2ab3150995c19ebaf0f926625cc83,`tbl_df` automatically generates column names (#1606).,1,610,FALSE,NA
dplyr,25f70e0957f2a54dedb37ecfd7326c36,"new `as_data_frame.tbl_cube()` (#1563, @​krlmlr).",1,611,FALSE,NA
dplyr,17e2fa2f2a9f98303a72b36c6c828511,"`tbl_cube`s are now constructed correctly from data frames, duplicate dimension values are detected, missing dimension values are filled with `NA`. The construction from data frames now guesses the measure variables by default, and allows specification of dimension and/or measure variables (#1568, @​krlmlr).",1,612,FALSE,NA
dplyr,ebe8538f7963eb0b0812440915aa4f50,"Swap order of `dim_names` and `met_name` arguments in `as.tbl_cube` (for `array`, `table` and `matrix`) for consistency with `tbl_cube` and `as.tbl_cube.data.frame`. Also, the `met_name` argument to `as.tbl_cube.table` now defaults to `""Freq""` for consistency with `as.data.frame.table` (@​krlmlr, #1374).",1,613,FALSE,NA
dplyr,ebddda595af5362b9d67152ccad0826a,"`as_data_frame()` on SQL sources now returns all rows (#1752, #1821, @​krlmlr).",1,614,FALSE,NA
dplyr,d5a4716163e1706cb827270f86f02b67,"`compute()` gets new parameters `indexes` and `unique_indexes` that make it easier to add indexes (#1499, @​krlmlr).",1,615,FALSE,NA
dplyr,664c435a69622bbd58a0737677aabf39,`db_explain()` gains a default method for DBIConnections (#1177).,1,616,FALSE,NA
dplyr,9f954f9619d46c02429b1e9ba16e4204,"The backend testing system has been improved. This lead to the removal of `temp_srcs()`. In the unlikely event that you were using this function, you can instead use `test_register_src()`, `test_load()`, and `test_frame()`.",1,617,FALSE,NA
dplyr,d8cc572d00ee3bde587aa1f1a5cfd6c9,You can now use `right_join()` and `full_join()` with remote tables (#1172).,1,618,FALSE,NA
dplyr,7cc306977a2394354d18c002776052cf,"`src_memdb()` is a session-local in-memory SQLite database. `memdb_frame()` works like `data_frame()`, but creates a new table in that database.",1,619,FALSE,NA
dplyr,3f3dccada76eb82cb2e850b01d58c512,"`src_sqlite()` now uses a stricter quoting character, `` ` ``, instead of `""`. SQLite ""helpfully"" will convert `""x""` into a string if there is no identifier called x in the current scope (#1426).",1,620,FALSE,NA
dplyr,316f2d2c4ed80fe9e786d2949697ed26,`src_sqlite()` throws errors if you try and use it with window functions (#907).,1,621,FALSE,NA
dplyr,43228a45c2e7b948fe56a5feeaeab81e,`filter.tbl_sql()` now puts parens around each argument (#934).,1,622,FALSE,NA
dplyr,fccb85ad5208827a5f9b04a1b81c4f61,Unary `-` is better translated (#1002).,1,623,FALSE,NA
dplyr,446a1d4c8c71dde287c849609ecbfb09,"`escape.POSIXt()` method makes it easier to use date times. The date is rendered in ISO 8601 format in UTC, which should work in most databases (#857).",1,624,FALSE,NA
dplyr,98970fd1b66372428c24f12160f19a68,`is.na()` gets a missing space (#1695).,1,625,FALSE,NA
dplyr,01a0243cf721d72c8f1c0448aaa0368b,"`if`, `is.na()`, and `is.null()` get extra parens to make precedence more clear (#1695).",1,626,FALSE,NA
dplyr,13737f712fe4a547ee0cfe3479046708,`pmin()` and `pmax()` are translated to `MIN()` and `MAX()` (#1711).,1,627,FALSE,NA
dplyr,39551fdafc6ce29e8042b5231b1fb3aa,Window functions:,1,628,FALSE,NA
dplyr,39551fdafc6ce29e8042b5231b1fb3aa,• Work on ungrouped data (#1061).,2,629,FALSE,Window functions:
dplyr,39551fdafc6ce29e8042b5231b1fb3aa,• Warning if order is not set on cumulative window functions.,2,630,FALSE,Window functions:
dplyr,39551fdafc6ce29e8042b5231b1fb3aa,"• Multiple partitions or ordering variables in windowed functions no longer generate extra parentheses, so should work for more databases (#1060)",2,631,FALSE,Window functions:
dplyr,22479ffc3ff618c12a61d45cf33158c9,"`sql_join()` has been considerably simplified - it is now only responsible for generating the join query, not for generating the intermediate selects that rename the variable. Similarly for `sql_semi_join()`. If you've provided new methods in your backend, you'll need to rewrite.",1,632,FALSE,NA
dplyr,fd38883d8292bdf2d778e7e417f74b30,`select_query()` gains a distinct argument which is used for generating queries for `distinct()`. It loses the `offset` argument which was never used (and hence never tested).,1,633,FALSE,NA
dplyr,cd8d08c1c6f1d9a4afaf2fad5409523c,`src_translate_env()` has been replaced by `sql_translate_env()` which should have methods for the connection object.,1,634,FALSE,NA
dplyr,1dfd44810314c10422a6565cf8abb9a2,"`translate_sql()` and `partial_eval()` got a new API: now use connection + variable names, rather than a `tbl`. This makes testing considerably easier. `translate_sql_q()` has been renamed to `translate_sql_()`.",1,635,FALSE,NA
dplyr,bfcc276dc5615505c785ce59b76f7af2,"Also note that the sql generation generics now have a default method, instead methods for DBIConnection and NULL.",1,636,FALSE,NA
dplyr,1a456b598ff69906f1f8a6b1e776c718,"Avoiding segfaults in presence of `raw` columns (#1803, #1817, @​krlmlr).",1,637,FALSE,NA
dplyr,4a7f039353695fd77895c08778eba345,"`arrange()` fails gracefully on list columns (#1489) and matrices (#1870, #1945, @​krlmlr).",1,638,FALSE,NA
dplyr,ea2fa5f82602862e4ead3be100abe5e7,"`count()` now adds additional grouping variables, rather than overriding existing (#1703). `tally()` and `count()` can now count a variable called `n` (#1633). Weighted `count()`/`tally()` ignore `NA`s (#1145).",1,639,FALSE,NA
dplyr,386d5aface6f286ee774ccc726194363,"The progress bar in `do()` is now updated at most 20 times per second, avoiding unnecessary redraws (#1734, @​mkuhn)",1,640,FALSE,NA
dplyr,508819960b06480db1eb74247bb0ff40,`distinct()` doesn't crash when given a 0-column data frame (#1437).,1,641,FALSE,NA
dplyr,60de76e946376fa123a033858007971b,"`filter()` throws an error if you supply an named arguments. This is usually a type: `filter(df, x = 1)` instead of `filter(df, x == 1)` (#1529).",1,642,FALSE,NA
dplyr,0a8e41a83252b5783d66d203c1b98488,"`summarise()` correctly coerces factors with different levels (#1678), handles min/max of already summarised variable (#1622), and supports data frames as columns (#1425).",1,643,FALSE,NA
dplyr,9c1286d06ebf148843bd9c2ed4e7d9c5,"`select()` now informs you that it adds missing grouping variables (#1511). It works even if the grouping variable has a non-syntactic name (#1138). Negating a failed match (e.g. `select(mtcars, -contains(""x""))`) returns all columns, instead of no columns (#1176) The `select()` helpers are now exported and have their own documentation (#1410). `one_of()` gives a useful error message if variables names are not found in data frame (#1407).",1,644,FALSE,NA
dplyr,c93420ccc0fb1efd676acd81a3457b66,"The naming behaviour of `summarise_each()` and `mutate_each()` has been tweaked so that you can force inclusion of both the function and the variable name: `summarise_each(mtcars, funs(mean = mean), everything())` (#442).",1,645,FALSE,NA
dplyr,7728db5a631533bee5d35f6df7c32a6a,"`mutate()` handles factors that are all `NA` (#1645), or have different levels in different groups (#1414). It disambiguates `NA` and `NaN` (#1448), and silently promotes groups that only contain `NA` (#1463). It deep copies data in list columns (#1643), and correctly fails on incompatible columns (#1641). `mutate()` on a grouped data no longer groups grouping attributes (#1120). `rowwise()` mutate gives expected results (#1381).",1,646,FALSE,NA
dplyr,1e31dd7cebf20028c0736a6608c3c2fc,"`one_of()` tolerates unknown variables in `vars`, but warns (#1848, @​jennybc).",1,647,FALSE,NA
dplyr,611a315d2c258fbcda35204e1e9beb45,`print.grouped_df()` passes on `...` to `print()` (#1893).,1,648,FALSE,NA
dplyr,5f07ae0d1af9a24695ee450df5d76274,`slice()` correctly handles grouped attributes (#1405).,1,649,FALSE,NA
dplyr,52314a16fb852258602437e19aee6284,`ungroup()` generic gains `...` (#922).,1,650,FALSE,NA
dplyr,8a09e38240522f7fd6457d4a89625ce6,`bind_cols()` matches the behaviour of `bind_rows()` and ignores `NULL` inputs (#1148). It also handles `POSIXct`s with integer base type (#1402).,1,651,FALSE,NA
dplyr,7c2700ad735835fc36f8013c0e31fa27,"`bind_rows()` handles 0-length named lists (#1515), promotes factors to characters (#1538), and warns when binding factor and character (#1485). bind_rows()\` is more flexible in the way it can accept data frames, lists, list of data frames, and list of lists (#1389).",1,652,FALSE,NA
dplyr,f21769d20530fae358c4699749afc70d,"`bind_rows()` rejects `POSIXlt` columns (#1875, @​krlmlr).",1,653,FALSE,NA
dplyr,d19dea47a99dc38b93143f9853316747,Both `bind_cols()` and `bind_rows()` infer classes and grouping information from the first data frame (#1692).,1,654,FALSE,NA
dplyr,a1535c0571495de7c190fe9261082163,`rbind()` and `cbind()` get `grouped_df()` methods that make it harder to create corrupt data frames (#1385). You should still prefer `bind_rows()` and `bind_cols()`.,1,655,FALSE,NA
dplyr,7c537f44a62810f8a817e726f03665ce,"Joins now use correct class when joining on `POSIXct` columns (#1582, @​joel23888), and consider time zones (#819). Joins handle a `by` that is empty (#1496), or has duplicates (#1192). Suffixes grow progressively to avoid creating repeated column names (#1460). Joins on string columns should be substantially faster (#1386). Extra attributes are ok if they are identical (#1636). Joins work correct when factor levels not equal (#1712, #1559). Anti- and semi-joins give correct result when by variable is a factor (#1571), but warn if factor levels are inconsistent (#2741). A clear error message is given for joins where an explicit `by` contains unavailable columns (#1928, #1932). Warnings about join column inconsistencies now contain the column names (#2728).",1,656,FALSE,NA
dplyr,1593ef7f5b5ea9938c9ba6cab2b44c0f,"`inner_join()`, `left_join()`, `right_join()`, and `full_join()` gain a `suffix` argument which allows you to control what suffix duplicated variable names receive (#1296).",1,657,FALSE,NA
dplyr,261745363d3c77bdde7d3cee3cd815a4,"Set operations (`intersect()`, `union()` etc) respect coercion rules (#799). `setdiff()` handles factors with `NA` levels (#1526).",1,658,FALSE,NA
dplyr,d79a8d681f24828d8071fd7f5c0eb818,"There were a number of fixes to enable joining of data frames that don't have the same encoding of column names (#1513), including working around bug 16885 regarding `match()` in R 3.3.0 (#1806, #1810, @​krlmlr).",1,659,FALSE,NA
dplyr,932a67e11d40fc5bd168194d43b1528f,`combine()` silently drops `NULL` inputs (#1596).,1,660,FALSE,NA
dplyr,c759149a08420913d492318fc1ff875a,Hybrid `cummean()` is more stable against floating point errors (#1387).,1,661,FALSE,NA
dplyr,78630fe52c8a5fecd78ab60e8c780d79,"Hybrid `lead()` and `lag()` received a considerable overhaul. They are more careful about more complicated expressions (#1588), and falls back more readily to pure R evaluation (#1411). They behave correctly in `summarise()` (#1434). and handle default values for string columns.",1,662,FALSE,NA
dplyr,fa7743266889bce0accd471a220c8517,Hybrid `min()` and `max()` handle empty sets (#1481).,1,663,FALSE,NA
dplyr,9207c99e5ffafaae6f0e8af2a6d6b7c8,"`n_distinct()` uses multiple arguments for data frames (#1084), falls back to R evaluation when needed (#1657), reverting decision made in (#567). Passing no arguments gives an error (#1957, #1959, @​krlmlr).",1,664,FALSE,NA
dplyr,8cd5ab6b1074847e4517f6d4d0fdfadd,"`nth()` now supports negative indices to select from end, e.g. `nth(x, -2)` selects the 2nd value from the end of `x` (#1584).",1,665,FALSE,NA
dplyr,41d3d5893999f4ae961a92cdb69c32fe,"`top_n()` can now also select bottom `n` values by passing a negative value to `n` (#1008, #1352).",1,666,FALSE,NA
dplyr,f43d3921aba2888585a9eca2498c2538,Hybrid evaluation leaves formulas untouched (#1447).,1,667,FALSE,NA
dplyr,e95026ce1562694ecf846a4776f2601b,"`frame_data()` provides a means for constructing `data_frame`s using a simple row-wise language. (#1358, @​kevinushey)",1,668,FALSE,NA
dplyr,9c9e9832cc7978a1eb53672aa66de8a6,`all.equal()` no longer runs all outputs together (#1130).,1,669,FALSE,NA
dplyr,b9968f62ea2fbb85765b8754d0b1f305,`as_data_frame()` gives better error message with NA column names (#1101).,1,670,FALSE,NA
dplyr,423b96cd31336db4e4b6492890eb811a,`[.tbl_df` is more careful about subsetting column names (#1245).,1,671,FALSE,NA
dplyr,3b14ec7d91a72363ed0fdba6b416676b,`arrange()` and `mutate()` work on empty data frames (#1142).,1,672,FALSE,NA
dplyr,13fa0146f73869929cfcaa7936ddd9b5,"`arrange()`, `filter()`, `slice()`, and `summarise()` preserve data frame meta attributes (#1064).",1,673,FALSE,NA
dplyr,86550a493d012f87e15aeb8bf5534930,"`bind_rows()` and `bind_cols()` accept lists (#1104): during initial data cleaning you no longer need to convert lists to data frames, but can instead feed them to `bind_rows()` directly.",1,674,FALSE,NA
dplyr,8b5a2ee7fe7f107814a516db099ba273,"`bind_rows()` gains a `.id` argument. When supplied, it creates a new column that gives the name of each data frame (#1337, @​lionel-).",1,675,FALSE,NA
dplyr,e3a34d5be68b66f1bba5acf8ef45abbc,"`bind_rows()` respects the `ordered` attribute of factors (#1112), and does better at comparing `POSIXct`s (#1125). The `tz` attribute is ignored when determining if two `POSIXct` vectors are comparable. If the `tz` of all inputs is the same, it's used, otherwise its set to `UTC`.",1,676,FALSE,NA
dplyr,15405e919586f965a4ed9d73b22bb43b,"`data_frame()` always produces a `tbl_df` (#1151, @​kevinushey)",1,677,FALSE,NA
dplyr,039d2e3a0738a7d3ee4d5075ed032904,"`filter(x, TRUE, TRUE)` now just returns `x` (#1210), it doesn't internally modify the first argument (#971), and it now works with rowwise data (#1099). It once again works with data tables (#906).",1,678,FALSE,NA
dplyr,9477f2efcde62468e52eb6305d2e0cb1,"`glimpse()` also prints out the number of variables in addition to the number of observations (@​ilarischeinin, #988).",1,679,FALSE,NA
dplyr,8a0c8ce346e92baa5a70a62051270667,"Joins handles matrix columns better (#1230), and can join `Date` objects with heterogeneous representations (some `Date`s are integers, while other are numeric). This also improves `all.equal()` (#1204).",1,680,FALSE,NA
dplyr,e8930ea98eb951c6a797dcb3fdd19016,Fixed `percent_rank()` and `cume_dist()` so that missing values no longer affect denominator (#1132).,1,681,FALSE,NA
dplyr,977d4bce77825c0c98b736cb59181961,"`print.tbl_df()` now displays the class for all variables, not just those that don't fit on the screen (#1276). It also displays duplicated column names correctly (#1159).",1,682,FALSE,NA
dplyr,5a429aed52ff036a530587db9692b928,`print.grouped_df()` now tells you how many groups there are.,1,683,FALSE,NA
dplyr,6bfb14096fe75172eb4c4c94a12f4632,"`mutate()` can set to `NULL` the first column (used to segfault, #1329) and it better protects intermediary results (avoiding random segfaults, #1231).",1,684,FALSE,NA
dplyr,d940c807f713e3469172d003369d3e3f,"`mutate()` on grouped data handles the special case where for the first few groups, the result consists of a `logical` vector with only `NA`. This can happen when the condition of an `ifelse` is an all `NA` logical vector (#958).",1,685,FALSE,NA
dplyr,b22dcec950b6c028fca2f9a97df571f0,`mutate.rowwise_df()` handles factors (#886) and correctly handles 0-row inputs (#1300).,1,686,FALSE,NA
dplyr,c58b6639f6864b7026ea9ac848a492cc,`n_distinct()` gains an `na_rm` argument (#1052).,1,687,FALSE,NA
dplyr,95b860830995aff8954903253d1883a5,"The `Progress` bar used by `do()` now respects global option `dplyr.show_progress` (default is TRUE) so you can turn it off globally (@​jimhester #1264, #1226).",1,688,FALSE,NA
dplyr,f586afd923d49b673b550ebdc5be0411,"`summarise()` handles expressions that returning heterogenous outputs, e.g. `median()`, which that sometimes returns an integer, and other times a numeric (#893).",1,689,FALSE,NA
dplyr,a4a586dce31ecf89044cda568dc91a2f,`slice()` silently drops columns corresponding to an NA (#1235).,1,690,FALSE,NA
dplyr,e317f8308c0ec3f7b4383d367543a85a,`ungroup.rowwise_df()` gives a `tbl_df` (#936).,1,691,FALSE,NA
dplyr,143f2efc3814aba2f62da344af806b4c,More explicit duplicated column name error message (#996).,1,692,FALSE,NA
dplyr,b42d8221b7a6d8b646951a145a8aba0a,"When "","" is already being used as the decimal point (`getOption(""OutDec"")`), use ""."" as the thousands separator when printing out formatted numbers (@​ilarischeinin, #988).",1,693,FALSE,NA
dplyr,b7e5d9dceb9a276fad0b4b6520232fe2,"`db_query_fields.SQLiteConnection` uses `build_sql` rather than `paste0` (#926, @​NikNakk)",1,694,FALSE,NA
dplyr,d7a1d88dcf7fa60f57df69abe181fff0,Improved handling of `log()` (#1330).,1,695,FALSE,NA
dplyr,b34a259b6d5568452db79f122c2f54be,"`n_distinct(x)` is translated to `COUNT(DISTINCT(x))` (@​skparkes, #873).",1,696,FALSE,NA
dplyr,fcf7e48b4f5f5d6df68f90b07194f3d2,`print(n = Inf)` now works for remote sources (#1310).,1,697,FALSE,NA
dplyr,cdc559434d634d1a4ffaebf6bd494095,Hybrid evaluation does not take place for objects with a class (#1237).,1,698,FALSE,NA
dplyr,ef2f02a2d101f27a44cbc74fd314f420,Improved `$` handling (#1134).,1,699,FALSE,NA
dplyr,4dbcc93996d663fe06039a8270678da5,Simplified code for `lead()` and `lag()` and make sure they work properly on factors (#955). Both respect the `default` argument (#915).,1,700,FALSE,NA
dplyr,5037b5149279911f47c049f1d9b7a0e9,"`mutate` can set to `NULL` the first column (used to segfault, #1329).",1,701,FALSE,NA
dplyr,f624268b65970d3cbd0a12700dd998fd,`filter` on grouped data handles indices correctly (#880).,1,702,FALSE,NA
dplyr,bc5e3bca4e2f346abddf16a463e5b02f,`sum()` issues a warning about integer overflow (#1108).,1,703,FALSE,NA
dplyr,1d231dd312115c65d93ff27b93cbd33e,"`lag()` and `lead()` for grouped data were confused about indices and therefore produced wrong results (#925, #937). `lag()` once again overrides `lag()` instead of just the default method `lag.default()`. This is necessary due to changes in R CMD check. To use the lag function provided by another package, use `pkg::lag`.",1,704,FALSE,NA
dplyr,4e25a28882acc536cd51de27b77ed317,Fixed a number of memory issues identified by valgrind.,1,705,FALSE,NA
dplyr,c0ac59531c26d11a28b91b910b2b0053,Improved performance when working with large number of columns (#879).,1,706,FALSE,NA
dplyr,5183564cbcd807254ccc6e5e62b50cba,Lists-cols that contain data frames now print a slightly nicer summary (#1147),1,707,FALSE,NA
dplyr,8f0e8ff507c0ab9c41011d1afe21a5a0,Set operations give more useful error message on incompatible data frames (#903).,1,708,FALSE,NA
dplyr,3b9f07d985ade4a2084856d17a8d3bcb,`all.equal()` gives the correct result when `ignore_row_order` is `TRUE` (#1065) and `all.equal()` correctly handles character missing values (#1095).,1,709,FALSE,NA
dplyr,b1d17adb25dec0348a74f86a0c44421a,`bind_cols()` always produces a `tbl_df` (#779).,1,710,FALSE,NA
dplyr,bfefdf1a31ea00a519ec8ac8d789ab53,`bind_rows()` gains a test for a form of data frame corruption (#1074).,1,711,FALSE,NA
dplyr,989c7af8de57a53a3300bc033633c601,`bind_rows()` and `summarise()` now handles complex columns (#933).,1,712,FALSE,NA
dplyr,68a65b58fa3d0bcd3b266922b44e159c,Workaround for using the constructor of `DataFrame` on an unprotected object (#998),1,713,FALSE,NA
dplyr,99880d075d9ea2619e42bf2c0644feb9,Improved performance when working with large number of columns (#879).,1,714,FALSE,NA
dplyr,98b7d63f54f22632162de79d1d3ea93e,Don't assume that RPostgreSQL is available.,1,715,FALSE,NA
dplyr,12c1eb71f7a42739329fc5bb5205295c,`add_rownames()` turns row names into an explicit variable (#639).,1,716,FALSE,NA
dplyr,2aef3397021df3a49dcd1a54d0d750d6,`as_data_frame()` efficiently coerces a list into a data frame (#749).,1,717,FALSE,NA
dplyr,f7d54bb50ff3ccb6d6f8b943c5e3274e,`bind_rows()` and `bind_cols()` efficiently bind a list of data frames by row or column. `combine()` applies the same coercion rules to vectors (it works like `c()` or `unlist()` but is consistent with the `bind_rows()` rules).,1,718,FALSE,NA
dplyr,d120c90918c385ae69aa51debe1a95c6,"`right_join()` (include all rows in `y`, and matching rows in `x`) and `full_join()` (include all rows in `x` and `y`) complete the family of mutating joins (#96).",1,719,FALSE,NA
dplyr,2730e130627b31ebd907c5b1165e421a,`group_indices()` computes a unique integer id for each group (#771). It can be called on a grouped_df without any arguments or on a data frame with same arguments as `group_by()`.,1,720,FALSE,NA
dplyr,fb3a0988f31f80b1dde9aeaf24493a99,"`vignette(""data_frames"")` describes dplyr functions that make it easier and faster to create and coerce data frames. It subsumes the old `memory` vignette.",1,721,FALSE,NA
dplyr,cc2f6acb930998c2ca4362f36013e4ee,"`vignette(""two-table"")` describes how two-table verbs work in dplyr.",1,722,FALSE,NA
dplyr,a0a55d28159923a09a2a6ec266e6db90,`data_frame()` (and `as_data_frame()` & `tbl_df()`) now explicitly forbid columns that are data frames or matrices (#775). All columns must be either a 1d atomic vector or a 1d list.,1,723,FALSE,NA
dplyr,1db40f0d5a37a5d3f35bf5d83f4f0041,"`do()` uses lazyeval to correctly evaluate its arguments in the correct environment (#744), and new `do_()` is the SE equivalent of `do()` (#718). You can modify grouped data in place: this is probably a bad idea but it's sometimes convenient (#737). `do()` on grouped data tables now passes in all columns (not all columns except grouping vars) (#735, thanks to @​kismsu). `do()` with database tables no longer potentially includes grouping variables twice (#673). Finally, `do()` gives more consistent outputs when there are no rows or no groups (#625).",1,724,FALSE,NA
dplyr,e393a430cb56f0df574b803a4e4cb703,"`first()` and `last()` preserve factors, dates and times (#509).",1,725,FALSE,NA
dplyr,f8f00d22357accf612dd324999f36c69,Overhaul of single table verbs for data.table backend. They now all use a consistent (and simpler) code base. This ensures that (e.g.) `n()` now works in all verbs (#579).,1,726,FALSE,NA
dplyr,04fe9bc14f1f29607ab459939b16ab50,"In `*_join()`, you can now name only those variables that are different between the two tables, e.g. `inner_join(x, y, c(""a"", ""b"", ""c"" = ""d""))` (#682). If non-join columns are the same, dplyr will add `.x` and `.y` suffixes to distinguish the source (#655).",1,727,FALSE,NA
dplyr,2f45ac06d3c8f28067321a24d144dd91,`mutate()` handles complex vectors (#436) and forbids `POSIXlt` results (instead of crashing) (#670).,1,728,FALSE,NA
dplyr,19c17b73742d7c90ae2ce5fe9c5c2da4,"`select()` now implements a more sophisticated algorithm so if you're doing multiples includes and excludes with and without names, you're more likely to get what you expect (#644). You'll also get a better error message if you supply an input that doesn't resolve to an integer column position (#643).",1,729,FALSE,NA
dplyr,c00878b078e5af6306d2215e28baf3dc,"Printing has received a number of small tweaks. All `print()` methods invisibly return their input so you can interleave `print()` statements into a pipeline to see interim results. `print()` will column names of 0 row data frames (#652), and will never print more 20 rows (i.e. `options(dplyr.print_max)` is now 20), not 100 (#710). Row names are no never printed since no dplyr method is guaranteed to preserve them (#669). `glimpse()` prints the number of observations (#692) `type_sum()` gains a data frame method.",1,730,FALSE,NA
dplyr,45b59a5079b31292a9f3aa753f6a7fac,`summarise()` handles list output columns (#832),1,731,FALSE,NA
dplyr,e15a837a9f697b1f181cc2f077e5dfa5,"`slice()` works for data tables (#717). Documentation clarifies that slice can't work with relational databases, and the examples show how to achieve the same results using `filter()` (#720).",1,732,FALSE,NA
dplyr,d0bea580166e03811202c458b03c3558,dplyr now requires RSQLite \>= 1.0. This shouldn't affect your code in any way (except that RSQLite now doesn't need to be attached) but does simplify the internals (#622).,1,733,FALSE,NA
dplyr,8e358b5be015ee93a5d727f75a02ec46,"Functions that need to combine multiple results into a single column (e.g. `join()`, `bind_rows()` and `summarise()`) are more careful about coercion. Joining factors with the same levels in the same order preserves the original levels (#675). Joining factors with non-identical levels generates a warning and coerces to character (#684). Joining a character to a factor (or vice versa) generates a warning and coerces to character. Avoid these warnings by ensuring your data is compatible before joining. `rbind_list()` will throw an error if you attempt to combine an integer and factor (#751). `rbind()`ing a column full of `NA`s is allowed and just collects the appropriate missing value for the column type being collected (#493). `summarise()` is more careful about `NA`, e.g. the decision on the result type will be delayed until the first non NA value is returned (#599). It will complain about loss of precision coercions, which can happen for expressions that return integers for some groups and a doubles for others (#599).",1,734,FALSE,NA
dplyr,7cbccd9634721264230730d2d4b7e693,"A number of functions gained new or improved hybrid handlers: `first()`, `last()`, `nth()` (#626), `lead()` & `lag()` (#683), `%in%` (#126). That means when you use these functions in a dplyr verb, we handle them in C++, rather than calling back to R, and hence improving performance. Hybrid `min_rank()` correctly handles `NaN` values (#726). Hybrid implementation of `nth()` falls back to R evaluation when `n` is not a length one integer or numeric, e.g. when it's an expression (#734). Hybrid `dense_rank()`, `min_rank()`, `cume_dist()`, `ntile()`, `row_number()` and `percent_rank()` now preserve NAs (#774)",1,735,FALSE,NA
dplyr,223898465c76692bcec7b21b55e65d93,`filter` returns its input when it has no rows or no columns (#782).,1,736,FALSE,NA
dplyr,d20cc833c6663a2316670e6f63d2e7db,"Join functions keep attributes (e.g. time zone information) from the left argument for `POSIXct` and `Date` objects (#819), and only only warn once about each incompatibility (#798).",1,737,FALSE,NA
dplyr,c962ded41ef6169a641ac82ecc94abd5,"`[.tbl_df` correctly computes row names for 0-column data frames, avoiding problems with xtable (#656). `[.grouped_df` will silently drop grouping if you don't include the grouping columns (#733).",1,738,FALSE,NA
dplyr,871d96c967b40ccfaded3becc311e504,`data_frame()` now acts correctly if the first argument is a vector to be recycled. (#680 thanks @​jimhester),1,739,FALSE,NA
dplyr,404005608ffe2275fd6be5712404fb22,"`filter.data.table()` works if the table has a variable called ""V1"" (#615).",1,740,FALSE,NA
dplyr,f9d605d796b51342822a59a0f4fa3ef8,"`*_join()` keeps columns in original order (#684). Joining a factor to a character vector doesn't segfault (#688). `*_join` functions can now deal with multiple encodings (#769), and correctly name results (#855).",1,741,FALSE,NA
dplyr,105cd77dd5938cd6b97d4412022a766a,`*_join.data.table()` works when data.table isn't attached (#786).,1,742,FALSE,NA
dplyr,ae30355b17fe7962e48c37b2f98f4fb3,`group_by()` on a data table preserves original order of the rows (#623). `group_by()` supports variables with more than 39 characters thanks to a fix in lazyeval (#705). It gives meaningful error message when a variable is not found in the data frame (#716).,1,743,FALSE,NA
dplyr,72bdb0fbf1c1a8ec15cb7e15c5b39fe4,`grouped_df()` requires `vars` to be a list of symbols (#665).,1,744,FALSE,NA
dplyr,c3597d004c2d6cdff9edc1c8ff7afe75,"`min(.,na.rm = TRUE)` works with `Date`s built on numeric vectors (#755).",1,745,FALSE,NA
dplyr,d5c43e709b02e14fc95730236ce9d1c7,`rename_()` generic gets missing `.dots` argument (#708).,1,746,FALSE,NA
dplyr,3cfc7975a960148e4c374e231342c7b8,"`row_number()`, `min_rank()`, `percent_rank()`, `dense_rank()`, `ntile()` and `cume_dist()` handle data frames with 0 rows (#762). They all preserve missing values (#774). `row_number()` doesn't segfault when giving an external variable with the wrong number of variables (#781).",1,747,FALSE,NA
dplyr,e5fd59286cd7ffa50fe93c7bc45874a8,`group_indices` handles the edge case when there are no variables (#867).,1,748,FALSE,NA
dplyr,fa96f5338d5c08bb1e813c2a761f5f47,Removed bogus `NAs introduced by coercion to integer range` on 32-bit Windows (#2708).,1,749,FALSE,NA
dplyr,1e8598f8abd18e8eb5b0e0f8f81ee1be,Fixed problem with test script on Windows.,1,750,FALSE,NA
dplyr,0636c47330bd6c866ca55dde712dbc39,"`between()` vector function efficiently determines if numeric values fall in a range, and is translated to special form for SQL (#503).",1,751,FALSE,NA
dplyr,2b94812e16b8c78cd8035c57e5a7e033,`count()` makes it even easier to do (weighted) counts (#358).,1,752,FALSE,NA
dplyr,23fe36ab969e083d2df374142ada9233,"`data_frame()` by @​kevinushey is a nicer way of creating data frames. It never coerces column types (no more `stringsAsFactors = FALSE`!), never munges column names, and never adds row names. You can use previously defined columns to compute new columns (#376).",1,753,FALSE,NA
dplyr,1d1d854a35f22de646e16d92f0135dc8,`distinct()` returns distinct (unique) rows of a tbl (#97). Supply additional variables to return the first row for each unique combination of variables.,1,754,FALSE,NA
dplyr,894ed2fd45256bdffb269db212a8c21b,"Set operations, `intersect()`, `union()` and `setdiff()` now have methods for data frames, data tables and SQL database tables (#93). They pass their arguments down to the base functions, which will ensure they raise errors if you pass in two many arguments.",1,755,FALSE,NA
dplyr,eb4254145ead8ecbb62bbf09c424d0a8,"Joins (e.g. `left_join()`, `inner_join()`, `semi_join()`, `anti_join()`) now allow you to join on different variables in `x` and `y` tables by supplying a named vector to `by`. For example, `by = c(""a"" = ""b"")` joins `x.a` to `y.b`.",1,756,FALSE,NA
dplyr,94d6b7bc886b2cdbdb038654efb00eec,`n_groups()` function tells you how many groups in a tbl. It returns 1 for ungrouped data. (#477),1,757,FALSE,NA
dplyr,0885dae76990b6129ef80e0e4d33266f,`transmute()` works like `mutate()` but drops all variables that you didn't explicitly refer to (#302).,1,758,FALSE,NA
dplyr,e959a1e7e1710de1f2807334068d2d9e,`rename()` makes it easy to rename variables - it works similarly to `select()` but it preserves columns that you didn't otherwise touch.,1,759,FALSE,NA
dplyr,d006bb09cf76cd2145550b6b972cf6c2,"`slice()` allows you to selecting rows by position (#226). It includes positive integers, drops negative integers and you can use expression like `n()`.",1,760,FALSE,NA
dplyr,5bd81fb7491cbee13968d771363ef906,You can now program with dplyr - every function that does non-standard evaluation (NSE) has a standard evaluation (SE) version ending in `_`. This is powered by the new lazyeval package which provides all the tools needed to implement NSE consistently and correctly.,1,761,FALSE,NA
dplyr,94cbdbfd07906f561c7f3b0ca01ac8af,"See `vignette(""nse"")` for full details.",1,762,FALSE,NA
dplyr,938e6b01db9a9d093271e4abc605c879,`regroup()` is deprecated. Please use the more flexible `group_by_()` instead.,1,763,FALSE,NA
dplyr,3e0688a6a5065b8a621ae30bf603f9eb,`summarise_each_q()` and `mutate_each_q()` are deprecated. Please use `summarise_each_()` and `mutate_each_()` instead.,1,764,FALSE,NA
dplyr,226c1763ce6a10b8dec4f74146de847e,`funs_q` has been replaced with `funs_`.,1,765,FALSE,NA
dplyr,b81d03a0cac8caf2672c4d4150d06617,`%.%` has been deprecated: please use `%>%` instead. `chain()` is defunct. (#518),1,766,FALSE,NA
dplyr,6623980145066f868735d73e846c3e6f,`filter.numeric()` removed. Need to figure out how to reimplement with new lazy eval system.,1,767,FALSE,NA
dplyr,a635569c6d4b4c09b3883fcd350a65ef,The `Progress` refclass is no longer exported to avoid conflicts with shiny. Instead use `progress_estimated()` (#535).,1,768,FALSE,NA
dplyr,5a9d812562ee7d827f9735902b062827,"`src_monetdb()` is now implemented in MonetDB.R, not dplyr.",1,769,FALSE,NA
dplyr,27dcab9b7c6147fedd7d16d0fbd19cf6,`show_sql()` and `explain_sql()` and matching global options `dplyr.show_sql` and `dplyr.explain_sql` have been removed. Instead use `show_query()` and `explain()`.,1,770,FALSE,NA
dplyr,491ca4eba99ef2310fcd79469dc56b69,Main verbs now have individual documentation pages (#519).,1,771,FALSE,NA
dplyr,0a7df0ae7adcf6f8f9e17281eee22c2f,"`%>%` is simply re-exported from magrittr, instead of creating a local copy (#496, thanks to @​jimhester)",1,772,FALSE,NA
dplyr,6196435af089c71d5dd1cf047c9a6505,"Examples now use `nycflights13` instead of `hflights` because it the variables have better names and there are a few interlinked tables (#562). `Lahman` and `nycflights13` are (once again) suggested packages. This means many examples will not work unless you explicitly install them with `install.packages(c(""Lahman"", ""nycflights13""))` (#508). dplyr now depends on Lahman 3.0.1. A number of examples have been updated to reflect modified field names (#586).",1,773,FALSE,NA
dplyr,8b66112a0630eab20dc686df67cfb19c,"`do()` now displays the progress bar only when used in interactive prompts and not when knitting (#428, @​jimhester).",1,774,FALSE,NA
dplyr,57c27377edf94268adfcf35a0bece49e,`glimpse()` now prints a trailing new line (#590).,1,775,FALSE,NA
dplyr,e4005e1c8ce488279689a13c70f7b81f,`group_by()` has more consistent behaviour when grouping by constants: it creates a new column with that value (#410). It renames grouping variables (#410). The first argument is now `.data` so you can create new groups with name x (#534).,1,776,FALSE,NA
dplyr,f677e9369f83e7f0bf6308214a204e5f,"Now instead of overriding `lag()`, dplyr overrides `lag.default()`, which should avoid clobbering lag methods added by other packages. (#277).",1,777,FALSE,NA
dplyr,30483b84d284e6f26bf4dba0b1fbfd8e,"`mutate(data, a = NULL)` removes the variable `a` from the returned dataset (#462).",1,778,FALSE,NA
dplyr,5cd7562329c9473ee42c16c1e79f8805,`trunc_mat()` and hence `print.tbl_df()` and friends gets a `width` argument to control the default output width. Set `options(dplyr.width = Inf)` to always show all columns (#589).,1,779,FALSE,NA
dplyr,7fd13971dae9d69a49d1cdeda9496a49,"`select()` gains `one_of()` selector: this allows you to select variables provided by a character vector (#396). It fails immediately if you give an empty pattern to `starts_with()`, `ends_with()`, `contains()` or `matches()` (#481, @​leondutoit). Fixed buglet in `select()` so that you can now create variables called `val` (#564).",1,780,FALSE,NA
dplyr,c8b62b96b79c0556da2df56e0b9019af,Switched from RC to R6.,1,781,FALSE,NA
dplyr,c112fce97fc4ee927db089b83aaa2fc7,"`tally()` and `top_n()` work consistently: neither accidentally evaluates the `wt` param. (#426, @​mnel)",1,782,FALSE,NA
dplyr,68cd2b6e10aaf7442898ba27ab8e13be,`rename` handles grouped data (#640).,1,783,FALSE,NA
dplyr,b8c74268ff2393e8ab83dc82403a488a,"Correct SQL generation for `paste()` when used with the collapse parameter targeting a Postgres database. (@​rbdixon, #1357)",1,784,FALSE,NA
dplyr,c14660903b23c186705a1528d0584799,"The db backend system has been completely overhauled in order to make it possible to add backends in other packages, and to support a much wider range of databases. See `vignette(""new-sql-backend"")` for instruction on how to create your own (#568).",1,785,FALSE,NA
dplyr,7ac3a14045363c12ff9a1249bc872f14,`src_mysql()` gains a method for `explain()`.,1,786,FALSE,NA
dplyr,bf3594da49d4bc98612ff04f803f5ae8,"When `mutate()` creates a new variable that uses a window function, automatically wrap the result in a subquery (#484).",1,787,FALSE,NA
dplyr,181a08c667af5e141837bc12d5c18a1d,Correct SQL generation for `first()` and `last()` (#531).,1,788,FALSE,NA
dplyr,cbc2107df64b82a8e082e6332a56338b,`order_by()` now works in conjunction with window functions in databases that support them.,1,789,FALSE,NA
dplyr,e409e12bc8ff460e2b685ccfb4076906,"All verbs now understand how to work with `difftime()` (#390) and `AsIs` (#453) objects. They all check that colnames are unique (#483), and are more robust when columns are not present (#348, #569, #600).",1,790,FALSE,NA
dplyr,7d3e6dec99738dd85968cb508d0898a9,Hybrid evaluation bugs fixed:,1,791,FALSE,NA
dplyr,7d3e6dec99738dd85968cb508d0898a9,• Call substitution stopped too early when a sub expression contained a `$` (#502).,2,792,FALSE,Hybrid evaluation bugs fixed:
dplyr,7d3e6dec99738dd85968cb508d0898a9,• Handle `::` and `:::` (#412).,2,793,FALSE,Hybrid evaluation bugs fixed:
dplyr,7d3e6dec99738dd85968cb508d0898a9,• `cumany()` and `cumall()` properly handle `NA` (#408).,2,794,FALSE,Hybrid evaluation bugs fixed:
dplyr,7d3e6dec99738dd85968cb508d0898a9,"• `nth()` now correctly preserve the class when using dates, times and factors (#509).",2,795,FALSE,Hybrid evaluation bugs fixed:
dplyr,7d3e6dec99738dd85968cb508d0898a9,• no longer substitutes within `order_by()` because `order_by()` needs to do its own NSE (#169).,2,796,FALSE,Hybrid evaluation bugs fixed:
dplyr,80fa7dbb12fa90a0b68fabe14e9038e3,"`[.tbl_df` always returns a tbl_df (i.e. `drop = FALSE` is the default) (#587, #610). `[.grouped_df` preserves important output attributes (#398).",1,797,FALSE,NA
dplyr,f000e169da117975a02af388c123cfe8,"`arrange()` keeps the grouping structure of grouped data (#491, #605), and preserves input classes (#563).",1,798,FALSE,NA
dplyr,758b5879aee01f7bab8c9f7511156f96,"`contains()` accidentally matched regular expressions, now it passes `fixed = TRUE` to `grep()` (#608).",1,799,FALSE,NA
dplyr,9f26ed031c7c03943dc9ee77b6d6605b,`filter()` asserts all variables are white listed (#566).,1,800,FALSE,NA
dplyr,4c1c7bc1deadcb80df19762c4312c2dd,`mutate()` makes a `rowwise_df` when given a `rowwise_df` (#463).,1,801,FALSE,NA
dplyr,ba71cc6605a1ce9f46cd0a292e681a6b,`rbind_all()` creates `tbl_df` objects instead of raw `data.frame`s.,1,802,FALSE,NA
dplyr,8421ef265282e1e9fcdb321cb573283c,"If `select()` doesn't match any variables, it returns a 0-column data frame, instead of the original (#498). It no longer fails when if some columns are not named (#492)",1,803,FALSE,NA
dplyr,1572cac1e74aa33c97dd43a1028c3f09,"`sample_n()` and `sample_frac()` methods for data.frames exported. (#405, @​alyst)",1,804,FALSE,NA
dplyr,e60ec7cb227a02b765bf40a2efc5b575,"A grouped data frame may have 0 groups (#486). Grouped df objects gain some basic validity checking, which should prevent some crashes related to corrupt `grouped_df` objects made by `rbind()` (#606).",1,805,FALSE,NA
dplyr,fa3e486c5711067a5ad89c1e44622751,"More coherence when joining columns of compatible but different types, e.g. when joining a character vector and a factor (#455), or a numeric and integer (#450)",1,806,FALSE,NA
dplyr,95bc1b213ca2776e1edb2383658d1ad5,"`mutate()` works for on zero-row grouped data frame, and with list columns (#555).",1,807,FALSE,NA
dplyr,16aff5e6e6d43a48b475aa0d0b9d7e0c,`LazySubset` was confused about input data size (#452).,1,808,FALSE,NA
dplyr,49dc862e3a85827eeba6679d2346c66c,Internal `n_distinct()` is stricter about its inputs: it requires one symbol which must be from the data frame (#567).,1,809,FALSE,NA
dplyr,3bfe1eee4698a874b9bbf017c2f1b24c,`rbind_*()` handle data frames with 0 rows (#597). They fill character vector columns with `NA` instead of blanks (#595). They work with list columns (#463).,1,810,FALSE,NA
dplyr,57572668f0e600b3021fda3e4a5a9c76,Improved handling of encoding for column names (#636).,1,811,FALSE,NA
dplyr,6ae67dea87fd57743059f9a1988ee03f,Improved handling of hybrid evaluation re \$ and @​ (#645).,1,812,FALSE,NA
dplyr,6f13d58926bd5539485882840295435d,Fix major omission in `tbl_dt()` and `grouped_dt()` methods - I was accidentally doing a deep copy on every result :(,1,813,FALSE,NA
dplyr,ba367833e8fe6aba2dc9563229117a13,"`summarise()` and `group_by()` now retain over-allocation when working with data.tables (#475, @​arunsrinivasan).",1,814,FALSE,NA
dplyr,e6e1ded6da2ce3d9d1d4803eab0dd5bc,"joining two data.tables now correctly dispatches to data table methods, and result is a data table (#470)",1,815,FALSE,NA
dplyr,ae4ed8b6dc39e7dfb315949bdfa6d028,`summarise.tbl_cube()` works with single grouping variable (#480).,1,816,FALSE,NA
dplyr,76f3985b295a0c6785ebf23ab2fb8ee1,"`glimpse()` makes it possible to see all the columns in a tbl, displaying as much data for each variable as can be fit on a single line.",1,820,FALSE,NA
dplyr,82904418d23d0c526dd4eb0f81515983,`sample_n()` randomly samples a fixed number of rows from a tbl; `sample_frac()` randomly samples a fixed fraction of rows. Only works for local data frames and data tables (#202).,1,821,FALSE,NA
dplyr,aa2dc54e244e787ceb156f39aa6f2774,`summarise_each()` and `mutate_each()` make it easy to apply one or more functions to multiple columns in a tbl (#178).,1,822,FALSE,NA
dplyr,074b8bf7c2623aac4dfbca59fc6954c5,"If you load plyr after dplyr, you'll get a message suggesting that you load plyr first (#347).",1,823,FALSE,NA
dplyr,a1bb9ea7d979d24c5f7b94c49504a74f,"`as.tbl_cube()` gains a method for matrices (#359, @​paulstaab)",1,824,FALSE,NA
dplyr,5d2c9df2abccb89a3ed209d93fa6a569,"`compute()` gains `temporary` argument so you can control whether the results are temporary or permanent (#382, @​cpsievert)",1,825,FALSE,NA
dplyr,5e19dca2625980f13229091007bd42c8,"`group_by()` now defaults to `add = FALSE` so that it sets the grouping variables rather than adding to the existing list. I think this is how most people expected `group_by` to work anyway, so it's unlikely to cause problems (#385).",1,826,FALSE,NA
dplyr,ca1f8bee1f530b3e6bc2c49cc5691625,"Support for MonetDB tables with `src_monetdb()` (#8, thanks to @​hannesmuehleisen).",1,827,FALSE,NA
dplyr,11b14171b12dcf5f7a3a9e4a90596ce4,New vignettes:,1,828,FALSE,NA
dplyr,11b14171b12dcf5f7a3a9e4a90596ce4,• `memory` vignette which discusses how dplyr minimises memory usage for local data frames (#198).,2,829,FALSE,New vignettes:
dplyr,11b14171b12dcf5f7a3a9e4a90596ce4,• `new-sql-backend` vignette which discusses how to add a new SQL backend/source to dplyr.,2,830,FALSE,New vignettes:
dplyr,e7e4ff217d8b719096ae990ecc4862fa,`changes()` output more clearly distinguishes which columns were added or deleted.,1,831,FALSE,NA
dplyr,41fcb903bed7d345c7bd7d16b2fc9837,`explain()` is now generic.,1,832,FALSE,NA
dplyr,94b506aadd4aca06b7a2dd31b47e9a3b,"dplyr is more careful when setting the keys of data tables, so it never accidentally modifies an object that it doesn't own. It also avoids unnecessary key setting which negatively affected performance. (#193, #255).",1,833,FALSE,NA
dplyr,6541b2a03bf96dc5ab06d2565d79f765,"`print()` methods for `tbl_df`, `tbl_dt` and `tbl_sql` gain `n` argument to control the number of rows printed (#362). They also works better when you have columns containing lists of complex objects.",1,834,FALSE,NA
dplyr,19ffe68f3af529eb14df37ee960f7e49,"`row_number()` can be called without arguments, in which case it returns the same as `1:n()` (#303).",1,835,FALSE,NA
dplyr,e16fced84a0807c7b590b432eefe5a22,"`""comment""` attribute is allowed (white listed) as well as names (#346).",1,836,FALSE,NA
dplyr,f94172055f5e9b2197c727ab8cdd2d55,"hybrid versions of `min`, `max`, `mean`, `var`, `sd` and `sum` handle the `na.rm` argument (#168). This should yield substantial performance improvements for those functions.",1,837,FALSE,NA
dplyr,29d0401a288423df3bee9213e1f331bd,Special case for call to `arrange()` on a grouped data frame with no arguments. (#369),1,838,FALSE,NA
dplyr,d6a3ed058c659d628b5147cf54410816,Code adapted to Rcpp \> 0.11.1,1,839,FALSE,NA
dplyr,ba6a3c2dc5a0cd8403448aca2847399b,"internal `DataDots` class protects against missing variables in verbs (#314), including the case where `...` is missing. (#338)",1,840,FALSE,NA
dplyr,f913cbe7b757b3a6c666390a4970aec4,`all.equal.data.frame` from base is no longer bypassed. we now have `all.equal.tbl_df` and `all.equal.tbl_dt` methods (#332).,1,841,FALSE,NA
dplyr,257622acf837bdc83bffc7786d171a10,`arrange()` correctly handles NA in numeric vectors (#331) and 0 row data frames (#289).,1,842,FALSE,NA
dplyr,0bd68029f98527531a5536d7f4da01b3,`copy_to.src_mysql()` now works on windows (#323),1,843,FALSE,NA
dplyr,29ec4db2c3f5bf1f66269bc810ddf6d7,`*_join()` doesn't reorder column names (#324).,1,844,FALSE,NA
dplyr,d9a6791574ba88ea7cd2b75ff6c34964,`rbind_all()` is stricter and only accepts list of data frames (#288),1,845,FALSE,NA
dplyr,fa61b9b7c60ff72a79061e1fc5b1fa60,`rbind_*` propagates time zone information for `POSIXct` columns (#298).,1,846,FALSE,NA
dplyr,f61a3bd874eea0c4ea0763a6407fe410,`rbind_*` is less strict about type promotion. The numeric `Collecter` allows collection of integer and logical vectors. The integer `Collecter` also collects logical values (#321).,1,847,FALSE,NA
dplyr,e4a4a01d10d8e0968ab4025684f8c3e9,internal `sum` correctly handles integer (under/over)flow (#308).,1,848,FALSE,NA
dplyr,fcb892d7dcf63831316a9c1c81aff96f,`summarise()` checks consistency of outputs (#300) and drops `names` attribute of output columns (#357).,1,849,FALSE,NA
dplyr,a683242202ebafe4930a35d1b9b92bf1,"join functions throw error instead of crashing when there are no common variables between the data frames, and also give a better error message when only one data frame has a by variable (#371).",1,850,FALSE,NA
dplyr,fe49f561c8c7a30799a813062e9d7100,"`top_n()` returns `n` rows instead of `n - 1` (@​leondutoit, #367).",1,851,FALSE,NA
dplyr,6bf5807b2b8f36837a098869c128736d,"SQL translation always evaluates subsetting operators (`$`, `[`, `[[`) locally. (#318).",1,852,FALSE,NA
dplyr,463d3ef2b212564ff2b98f43030356da,`select()` now renames variables in remote sql tbls (#317) and implicitly adds grouping variables (#170).,1,853,FALSE,NA
dplyr,6e0ffd7bfdbb20215a4ce5b566ce584d,internal `grouped_df_impl` function errors if there are no variables to group by (#398).,1,854,FALSE,NA
dplyr,098fa98b532dcd9a3061c177c975a204,`n_distinct` did not treat NA correctly in the numeric case #384.,1,855,FALSE,NA
dplyr,7d6e32bd70c1f644a901217734ae0df3,Some compiler warnings triggered by -Wall or -pedantic have been eliminated.,1,856,FALSE,NA
dplyr,f84a83c8f601fcb4fd710dfb16ac026a,`group_by` only creates one group for NA (#401).,1,857,FALSE,NA
dplyr,290c862511365ae8a1d67a22655501c5,Hybrid evaluator did not evaluate expression in correct environment (#403).,1,858,FALSE,NA
dplyr,f60ed41fc672c1ad05572f7b4c4a2015,`select()` actually renames columns in a data table (#284).,1,859,FALSE,NA
dplyr,cf95919b867650b57659657540fe93e3,`rbind_all()` and `rbind_list()` now handle missing values in factors (#279).,1,860,FALSE,NA
dplyr,a17f603327fa9cfcbdd50af8e2be94c8,SQL joins now work better if names duplicated in both x and y tables (#310).,1,861,FALSE,NA
dplyr,dcd7ff18907661c0d9d3fef72c65c408,Builds against Rcpp 0.11.1,1,862,FALSE,NA
dplyr,059255fd8ee150f8327cc47315341555,`select()` correctly works with the vars attribute (#309).,1,863,FALSE,NA
dplyr,f3f17b9d97f633df898971e3c9367bee,Internal code is stricter when deciding if a data frame is grouped (#308): this avoids a number of situations which previously caused problems.,1,864,FALSE,NA
dplyr,cb1c90f8ca3a8e582ddfc0292f10ce58,More data frame joins work with missing values in keys (#306).,1,865,FALSE,NA
dplyr,b82acd282bcb5c0beaaf244347048f2c,"`select()` is substantially more powerful. You can use named arguments to rename existing variables, and new functions `starts_with()`, `ends_with()`, `contains()`, `matches()` and `num_range()` to select variables based on their names. It now also makes a shallow copy, substantially reducing its memory impact (#158, #172, #192, #232).",1,866,FALSE,NA
dplyr,ac340ae351ff4fbcd4164bdfcaad988e,`summarize()` added as alias for `summarise()` for people from countries that don't don't spell things correctly ;) (#245),1,867,FALSE,NA
dplyr,b5585adb872a9a02d39469d3aef7755d,"`filter()` now fails when given anything other than a logical vector, and correctly handles missing values (#249). `filter.numeric()` proxies `stats::filter()` so you can continue to use `filter()` function with numeric inputs (#264).",1,868,FALSE,NA
dplyr,819f6d42e0f444b07c2b604260584ef7,`summarise()` correctly uses newly created variables (#259).,1,869,FALSE,NA
dplyr,87bf1cca378973508aef5595816b82cc,`mutate()` correctly propagates attributes (#265) and `mutate.data.frame()` correctly mutates the same variable repeatedly (#243).,1,870,FALSE,NA
dplyr,0fa918de49e4157484f2125ff3334707,"`lead()` and `lag()` preserve attributes, so they now work with dates, times and factors (#166).",1,871,FALSE,NA
dplyr,a925524ab780b7e3fbbea6eaa241badf,`n()` never accepts arguments (#223).,1,872,FALSE,NA
dplyr,1188ca5d20cac265ff46ee1624af9591,`row_number()` gives correct results (#227).,1,873,FALSE,NA
dplyr,2f71ca65d21ce2b7fb3e0c05102e1a0a,`rbind_all()` silently ignores data frames with 0 rows or 0 columns (#274).,1,874,FALSE,NA
dplyr,460fee268141288adc4fe841bbc3f76f,"`group_by()` orders the result (#242). It also checks that columns are of supported types (#233, #276).",1,875,FALSE,NA
dplyr,b3ca8ab9c2024c059ae250f35eb3f89b,"The hybrid evaluator did not handle some expressions correctly, for example in `if(n() > 5) 1 else 2` the subexpression `n()` was not substituted correctly. It also correctly processes `$` (#278).",1,876,FALSE,NA
dplyr,599b1be1f9fd7d5a645cd836f38f76f4,`arrange()` checks that all columns are of supported types (#266). It also handles list columns (#282).,1,877,FALSE,NA
dplyr,cf14e62eb863a56506c1f64dd2c05e79,Working towards Solaris compatibility.,1,878,FALSE,NA
dplyr,6b6c88cf9eafbc062923a31778b7aa7a,Benchmarking vignette temporarily disabled due to microbenchmark problems reported by BDR.,1,879,FALSE,NA
dplyr,1f6d508a363e3f93c7c8ca89a80571eb,new `location()` and `changes()` functions which provide more information about how data frames are stored in memory so that you can see what gets copied.,1,880,FALSE,NA
dplyr,a0f67fb259d6763392650af2a9a50edd,renamed `explain_tbl()` to `explain()` (#182).,1,881,FALSE,NA
dplyr,39b11d6f160fe9a1bfbe69fa77ab7fc8,`tally()` gains `sort` argument to sort output so highest counts come first (#173).,1,882,FALSE,NA
dplyr,1c1dd8dc56d015f991faea0f618aaff4,"`ungroup.grouped_df()`, `tbl_df()`, `as.data.frame.tbl_df()` now only make shallow copies of their inputs (#191).",1,883,FALSE,NA
dplyr,de1a6f167b5c2cd22bbeb696c8b36309,The `benchmark-baseball` vignette now contains fairer (including grouping times) comparisons with `data.table`. (#222),1,884,FALSE,NA
dplyr,4e4fbb7f9dcdeba57018a287030ef01e,`filter()` (#221) and `summarise()` (#194) correctly propagate attributes.,1,885,FALSE,NA
dplyr,f2c57d24a23529a9cd6fcf07dbc182ad,`summarise()` throws an error when asked to summarise an unknown variable instead of crashing (#208).,1,886,FALSE,NA
dplyr,233fb08c5d8213ef775a7e3270703bad,`group_by()` handles factors with missing values (#183).,1,887,FALSE,NA
dplyr,6f4e6faae58acdfc7429a022b440763c,"`filter()` handles scalar results (#217) and better handles scoping, e.g. `filter(., variable)` where `variable` is defined in the function that calls `filter`. It also handles `T` and `F` as aliases to `TRUE` and `FALSE` if there are no `T` or `F` variables in the data or in the scope.",1,888,FALSE,NA
dplyr,e7b910f494a1e191b5e55e7160e7ea8d,`select.grouped_df` fails when the grouping variables are not included in the selected variables (#170),1,889,FALSE,NA
dplyr,f9b5f53e5e2f295ed5030317df73dab3,`all.equal.data.frame()` handles a corner case where the data frame has `NULL` names (#217),1,890,FALSE,NA
dplyr,e05c84ac31610f0895b6bf6965f0c9a4,`mutate()` gives informative error message on unsupported types (#179),1,891,FALSE,NA
dplyr,5cc910eedb1d59328bd4f75fbd6d1015,"dplyr source package no longer includes pandas benchmark, reducing download size from 2.8 MB to 0.5 MB.",1,892,FALSE,NA
dtplyr,3374dee3c34addb773cc36aa49582fe9,`reframe()` is now translated.,1,1,FALSE,NA
dtplyr,267401eb4d06fdd2775d54a630e21e87,`consecutive_id()` is now mapped to `data.table::rleid()`. Note: `rleid()` only accepts vector inputs and cannot be used with data frame inputs.,1,2,FALSE,NA
dtplyr,725268cf513624b53277ce396129f4e1,`case_match()` is now translated to `fcase()`.,1,3,FALSE,NA
dtplyr,2a20c502981bc98b13733ac9fbc338eb,Can use `.data` in `lead()`/`lag()` (#441),1,4,FALSE,NA
dtplyr,38087ccba80c8acbf9d2719ea39835ad,Can namespace calls to `desc()` (#427).,1,5,FALSE,NA
dtplyr,36b03970841fb5bc6519c31964ea4f69,`case_when(.default = )` now works.,1,6,FALSE,NA
dtplyr,a5024810c597d460b938461702ac053c,`.by` no longer alters grouping in prior steps (#439),1,7,FALSE,NA
dtplyr,8269c735abcce4cd7eff06f4338e4b27,Arguments to `$` and `[[` calls are no longer prepended with `..` (#434),1,8,FALSE,NA
dtplyr,62621a239a112fdb8fc1b4bd0c48f006,Grouping now works with non-standard column names (#451),1,9,FALSE,NA
dtplyr,0e2aa56ae1ba1d55860bd90137e38044,Fix for failing R CMD check.,1,10,FALSE,NA
dtplyr,7ae1312e71f8894f20b8b103dcdc98b4,`dtplyr` no longer directly depends on `crayon`.,1,11,FALSE,NA
dtplyr,44171ebbdfb896acd11ec82f78e90132,dplyr and tidyr verbs no longer dispatch to dtplyr translations when used directly on data.table objects. `lazy_dt()` must now explicitly be called by the user (#312).,1,12,FALSE,NA
dtplyr,02a2e282c5049d7681bc21f808cf7702,`across()` output can now be used as a data frame (#341).,1,13,FALSE,NA
dtplyr,3cd18005f151e734fbf544056604176d,"`.by`/`by` has been implemented for `mutate()`, `summarise()`, `filter()`, and the `slice()` family (#399).",1,14,FALSE,NA
dtplyr,4512f34af3f82b191d217a479b2361aa,"New translations for `add_count()`, `pick()` (#341), and `unite()`.",1,15,FALSE,NA
dtplyr,6a82780aa6a29ed72e146d38bd6175c5,"`min_rank()`, `dense_rank()`, `percent_rank()`, & `cume_dist()` are now mapped to their `data.table` equivalents (#396).",1,16,FALSE,NA
dtplyr,d5e9414c2cbc0a07106955c9014ca0e9,`arrange()` now utilizes `setorder()` when possible for improved performance (#364).,1,17,FALSE,NA
dtplyr,c526e6a697feac22d8658f1243ed61cb,`select()` now drops columns by reference when possible for improved performance (#367).,1,18,FALSE,NA
dtplyr,877d8bdbf4cffd9d5184ded48b8b8b0d,`slice()` uses an intermediate variable to reduce computation time of row selection (#377).,1,19,FALSE,NA
dtplyr,1fa484d32a52db56a8590a8ec1afdfbb,dtplyr no longer directly depends on `ellipsis`.,1,20,FALSE,NA
dtplyr,e9addf79207078c7ea07ff1cd103e052,Chained operations properly prevent modify-by-reference (#210).,1,21,FALSE,NA
dtplyr,bd774c884b13cfed4aeba553cd384a41,"`across()`, `if_any()`, and `if_all()` evaluate the `.cols` argument in the environment from which the function was called.",1,22,FALSE,NA
dtplyr,93c99f210b52ad00d1e67248e7b7bbae,`count()` properly handles grouping variables (#356).,1,23,FALSE,NA
dtplyr,1d161a70b43005bbb45f0056524a566d,`desc()` now supports use of `.data` pronoun inside in `arrange()` (#346).,1,24,FALSE,NA
dtplyr,c970234fe98b5d6703156023a6710983,`full_join()` now produces output with correctly named columns when a non-default value for `suffix` is supplied. Previously the `suffix` argument was ignored (#382).,1,25,FALSE,NA
dtplyr,27b5e6ed8db657c6d46dc314cc3fbbc1,"`if_any()` and `if_all()` now work without specifying the `.fns` argument (@​mgirlich, #325) and for a list of functions specified in the (@​mgirlich, #335).",1,26,FALSE,NA
dtplyr,07c7774aa0def85a93e8a4d7c7ac468d,`pivot_wider()`'s `names_glue` now works even when `names_from` contains `NA`s (#394).,1,27,FALSE,NA
dtplyr,0808c359feef7ae36bf4d1a1a812ec6a,"In `semi_join()` the `y` table is again coerced to a lazy table if `copy = TRUE` (@​mgirlich, #322).",1,28,FALSE,NA
dtplyr,b6c902833a568b2ebd70827585ab38d1,`mutate()` can now use `.keep`.,1,29,FALSE,NA
dtplyr,4fec057c51c54ef9ea08fa4adcd19c77,`mutate()`/`summarize()` correctly translates anonymous functions (#362).,1,30,FALSE,NA
dtplyr,13b799373b83d603153b63c0c6074abf,`mutate()`/`transmute()` now supports `glue::glue()` and `stringr::str_glue()` without specifying `.envir`.,1,31,FALSE,NA
dtplyr,88f72fd8d9ca540b3397a57e43fb50ba,`where()` now clearly errors because dtplyr doesn't support selection by predicate (#271).,1,32,FALSE,NA
dtplyr,61945c8cc437cf8fe9bff258d8489615,Hot patch release to resolve R CMD check failures.,1,33,FALSE,NA
dtplyr,43ad8ed9837417236d0c740a3f9ed307,Fix for upcoming rlang release.,1,34,FALSE,NA
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,dtplyr gains translations for many more tidyr verbs:,1,35,FALSE,NA
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `drop_na()` (@​markfairbanks, #194)",2,36,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `complete()` (@​markfairbanks, #225)",2,37,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `expand()` (@​markfairbanks, #225)",2,38,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `fill()` (@​markfairbanks, #197)",2,39,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `pivot_longer()` (@​markfairbanks, #204)",2,40,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `replace_na()` (@​markfairbanks, #202)",2,41,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `nest()` (@​mgirlich, #251)",2,42,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,ce9269fde67ef24a5390a5ffedbea1ac,"• `separate()` (@​markfairbanks, #269)",2,43,FALSE,dtplyr gains translations for many more tidyr verbs:
dtplyr,68f7378bdf873ee41003263b70a29055,"`tally()` gains a translation (@​mgirlich, #201).",1,44,FALSE,NA
dtplyr,641c0a591cc4477b1cfd1233835aba7e,"`ifelse()` is mapped to `fifelse()` (@​markfairbanks, #220).",1,45,FALSE,NA
dtplyr,0df8459d2333e3041ae99d6e16aa89a4,"`slice()` helpers (`slice_head()`, `slice_tail()`, `slice_min()`, `slice_max()` and `slice_sample()`) now accept negative values for `n` and `prop`.",1,46,FALSE,NA
dtplyr,14cbe5f65f52fdd479abe5a2f645475e,"`across()` defaults to `everything()` when `.cols` isn't provided (@​markfairbanks, #231), and handles named selections (@​eutwt #293). It ˜ow handles `.fns` arguments in more forms (@​eutwt #288):",1,47,FALSE,NA
dtplyr,14cbe5f65f52fdd479abe5a2f645475e,"• Anonymous functions, such as `function(x) x + 1`",2,48,FALSE,"`across()` defaults to `everything()` when `.cols` isn't provided (@​markfairbanks, #231), and handles named selections (@​eutwt #293). It ˜ow handles `.fns` arguments in more forms (@​eutwt #288):"
dtplyr,14cbe5f65f52fdd479abe5a2f645475e,"• Formulas which don't require a function call, such as `~ 1`",2,49,FALSE,"`across()` defaults to `everything()` when `.cols` isn't provided (@​markfairbanks, #231), and handles named selections (@​eutwt #293). It ˜ow handles `.fns` arguments in more forms (@​eutwt #288):"
dtplyr,71fc5562c0751dcaf22ea6dea79d553c,"`arrange(dt, desc(col))` is translated to `dt[order(-col)]` in order to take advantage of data.table's fast order (@​markfairbanks, #227).",1,50,FALSE,NA
dtplyr,906304b194ba30e07c96d9076f4a5296,"`count()` applied to data.tables no longer breaks when dtplyr is loaded (@​mgirlich, #201).",1,51,FALSE,NA
dtplyr,abcb9290304dcdc84caecdae6c627987,`case_when()` supports use of `T` to specify the default (#272).,1,52,FALSE,NA
dtplyr,c639bb622ceba69a30ff5570f5d042e6,"`filter()` errors for named input, e.g. `filter(dt, x = 1)` (@​mgirlich, #267) and works for negated logical columns (@​mgirlich, @​211).",1,53,FALSE,NA
dtplyr,62169309df419f96805a5cf6f8d00e89,"`group_by()` ungroups when no grouping variables are specified (@​mgirlich, #248), and supports inline mutation like `group_by(dt, y = x)` (@​mgirlich, #246).",1,54,FALSE,NA
dtplyr,deb34e5730242f48cc509c9909ece4c5,"`if_else()` named arguments are translated to the correct arguments in `data.table::fifelse()` (@​markfairbanks, #234). `if_else()` supports `.data` and `.env` pronouns (@​markfairbanks, #220).",1,55,FALSE,NA
dtplyr,1e9cc7a629f92cda934ee9daec1bb5af,"`if_any()` and `if_all()` default to `everything()` when `.cols` isn't provided (@​eutwt, #294).",1,56,FALSE,NA
dtplyr,71e19dae49ab0683e222d66240630e23,`intersect()`/`union()`/`union_all()`/`setdiff()` convert data.table inputs to `lazy_dt()` (#278).,1,57,FALSE,NA
dtplyr,06ec384f0d3c12e233bae1d4d45bdaf5,`lag()`/`lead()` are translated to `shift()`.,1,58,FALSE,NA
dtplyr,50f13a4b2cb4b918cf13d5d37e6cf98e,"`lazy_dt()` keeps groups (@​mgirlich, #206).",1,59,FALSE,NA
dtplyr,a5660eaa8dbd0f1847897b1ddd332fa7,"`left_join()` produces the same column order as dplyr (@​markfairbanks, #139).",1,60,FALSE,NA
dtplyr,ff429a678e437105010390ab0b2a24ad,"`left_join()`, `right_join()`, `full_join()`, and `inner_join()` perform a cross join for `by = character()` (@​mgirlich, #242).",1,61,FALSE,NA
dtplyr,12eb248352df213d38bc5a54158d45c5,"`left_join()`, `right_join()`, and `inner_join()` are always translated to the `[.data.table` equivalent. For simple merges the translation gets a bit longer but thanks to the simpler code base it helps to better handle names in `by` and duplicated variables names produced in the data.table join (@​mgirlich, #222).",1,62,FALSE,NA
dtplyr,4a165413a4591e629bb1f3ccd3417ea7,"`mutate()` and `transmute()` work when called without variables (@​mgirlich, #248).",1,63,FALSE,NA
dtplyr,6e09b87ee3907d2c8291ebb369dc4701,`mutate()` gains new experimental arguments `.before` and `.after` that allow you to control where the new columns are placed (to match dplyr 1.0.0) (@​eutwt #291).,1,64,FALSE,NA
dtplyr,729d0218dbfc7cce39fc4b3bcb4da603,"`mutate()` can modify grouping columns (instead of creating another column with the same name) (@​mgirlich, #246).",1,65,FALSE,NA
dtplyr,5e42fa2aa3072c786642cc40a9d20b7a,`n_distinct()` is translated to `uniqueN()`.,1,66,FALSE,NA
dtplyr,31384493b597cb5d1f8ff83efe895741,"`tally()` and `count()` follow the dplyr convention of creating a unique name if the default output `name` (n) already exists (@​eutwt, #295).",1,67,FALSE,NA
dtplyr,b40432ae9d078659b279b346b35f8ae3,"`pivot_wider()` names the columns correctly when `names_from` is a numeric column (@​mgirlich, #214).",1,68,FALSE,NA
dtplyr,be14ba2f1e6810fe5126c2a49f618159,"`pull()` supports the `name` argument (@​mgirlich, #263).",1,69,FALSE,NA
dtplyr,31cd614d6478d84ac3e185a33e6359bc,`slice()` no longer returns excess rows (#10).,1,70,FALSE,NA
dtplyr,e107d850aa4d39ccd2de1f651baa628d,"`slice_*()` functions after `group_by()` are faster (@​mgirlich, #216).",1,71,FALSE,NA
dtplyr,83ea5bc81ccb41c4f4a0e3c9b9cddb34,"`slice_max()` works when ordering by a character column (@​mgirlich, #218).",1,72,FALSE,NA
dtplyr,a137fafb0814a859afcaa4276a7af642,"`summarise()` supports the `.groups` argument (@​mgirlich, #245).",1,73,FALSE,NA
dtplyr,783b2400176383179bdb0e008f17824d,"`summarise()`, `tally()`, and `count()` can change the value of a grouping variables (@​eutwt, #295).",1,74,FALSE,NA
dtplyr,7560d1872af34565baa44006b3599c40,"`transmute()` doesn't produce duplicate columns when assigning to the same variable (@​mgirlich, #249). It correctly flags grouping variables so they selected (@​mgirlich, #246).",1,75,FALSE,NA
dtplyr,17a2e1a7042ae9ed6275b4c5f79d8b54,"`ungroup()` removes variables in `...` from grouping (@​mgirlich, #253).",1,76,FALSE,NA
dtplyr,2f106f4e28267155e0c84ef4c8360c81,"All verbs now have (very basic) documentation pointing back to the dplyr generic, and providing a (very rough) description of the translation accompanied with a few examples.",1,77,FALSE,NA
dtplyr,7805fdf452c54c7c7dba027d7061d188,"Passing a data.table to a dplyr generic now converts it to a `lazy_dt()`, making it a little easier to move between data.table and dplyr syntax.",1,78,FALSE,NA
dtplyr,918d28bc159125539beebd681659596a,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:,1,79,FALSE,NA
dtplyr,918d28bc159125539beebd681659596a,"• `across()`, `if_any()`, `if_all()` (#154).",2,80,FALSE,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:
dtplyr,918d28bc159125539beebd681659596a,• `count()` (#159).,2,81,FALSE,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:
dtplyr,918d28bc159125539beebd681659596a,"• `relocate()` (@​smingerson, #162).",2,82,FALSE,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:
dtplyr,918d28bc159125539beebd681659596a,• `rename_with()` (#160),2,83,FALSE,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:
dtplyr,918d28bc159125539beebd681659596a,"• `slice_min()`, `slice_max()`, `slice_head()`, `slice_tail()`, and `slice_sample()` (#174).",2,84,FALSE,dtplyr has been bought up to compatibility with dplyr 1.0.0. This includes new translations for:
dtplyr,add982b5483797adf3768638f2eccc3a,And `rename()` and `select()` now support dplyr 1.0.0 tidyselect syntax (apart from predicate functions which can't easily work on lazily evaluated data tables).,1,84,FALSE,NA
dtplyr,4fa7725ccdac3338e9fc7cf4b12b1d24,"We have begun the process of adding translations for tidyr verbs beginning with `pivot_wider()` (@​markfairbanks, #189).",1,85,FALSE,NA
dtplyr,702021065613ab4c9a556df4c347375e,`compute()` now creates an intermediate assignment within the translation. This will generally have little impact on performance but it allows you to use intermediate variables to simplify complex translations.,1,86,FALSE,NA
dtplyr,d1fd9a17104a9b4266910c403dd95902,`case_when()` is now translated to `fcase()` (#190).,1,87,FALSE,NA
dtplyr,c244fbdd89e4bc48ffdf244e49ad8161,"`cur_data()` (`.SD`), `cur_group()` (`.BY`), `cur_group_id()` (`.GRP`), and `cur_group_rows() (`.I\`) are now tranlsated to their data.table equivalents (#166).",1,88,FALSE,NA
dtplyr,9de8377c6b997cda438aab90a1727078,`filter()` on grouped data nows use a much faster translation using on `.I` rather than `.SD` (and requiring an intermediate assignment) (#176). Thanks to suggestion from @​myoung3 and @​ColeMiller1.,1,89,FALSE,NA
dtplyr,823d0c1ffe8ff8422641b2b92054b603,Translation of individual expressions:,1,90,FALSE,NA
dtplyr,823d0c1ffe8ff8422641b2b92054b603,• `x[[1]]` is now translated correctly.,2,91,FALSE,Translation of individual expressions:
dtplyr,823d0c1ffe8ff8422641b2b92054b603,"• Anonymous functions are now preserved (@​smingerson, #155)",2,92,FALSE,Translation of individual expressions:
dtplyr,823d0c1ffe8ff8422641b2b92054b603,• Environment variables used in the `i` argument of `[.data.table` are now correctly inlined when not in the global environment (#164).,2,93,FALSE,Translation of individual expressions:
dtplyr,823d0c1ffe8ff8422641b2b92054b603,• `T` and `F` are correctly translated to `TRUE` and `FALSE` (#140).,2,94,FALSE,Translation of individual expressions:
dtplyr,872a70c700d3ec8cdce157ef3f34e596,"Grouped filter, mutate, and slice no longer affect ordering of output (#178).",1,95,FALSE,NA
dtplyr,0782b69d9921f6d8b8e8be45534b920e,`as_tibble()` gains a `.name_repair` argument (@​markfairbanks).,1,96,FALSE,NA
dtplyr,1161eb3feb14ba88440e89fb28458970,`as.data.table()` always calls `[]` so that the result will print (#146).,1,97,FALSE,NA
dtplyr,07e97b3ce76477b5dc1aba70aa64151a,"`print.lazy_dt()` shows total rows, and grouping, if present.",1,98,FALSE,NA
dtplyr,d0f4d9b941ca9fdc27e7df42ebef1b32,`group_map()` and `group_walk()` are now translated (#108).,1,99,FALSE,NA
dtplyr,44840f4f2518a4367ce393a88911f911,Better handling for `.data` and `.env` pronouns (#138).,1,100,FALSE,NA
dtplyr,d6f58752435e8e0ff698c1573835771e,dplyr verbs now work with `NULL` inputs (#129).,1,101,FALSE,NA
dtplyr,9f2988f14cfeeff3c23134c806ce54b7,"joins do better job at determining output variables in the presence of duplicated outputs (#128). When joining based on different variables in `x` and `y`, joins consistently preserve column from `x`, not `y` (#137).",1,102,FALSE,NA
dtplyr,4568b930f0855c9d83f90c4e23dc539a,`lazy_dt()` objects now have a useful `glimpse()` method (#132).,1,103,FALSE,NA
dtplyr,51be3416daee08c9997a13cbe7494b73,"`group_by()` now has an `arrange` parameter which, if set to `FALSE`, sets the data.table translation to use `by` rather than `keyby` (#85).",1,104,FALSE,NA
dtplyr,cecffd40db3d3d13bd4368803070e0c7,"`rename()` now works without `data.table` attached, as intended (@​michaelchirico, #123).",1,105,FALSE,NA
dtplyr,3990ece9eb8a482ac3562b47f971baf0,dtplyr has been re-licensed as MIT (#165).,1,106,FALSE,NA
dtplyr,6b92823e25ea8398f6ab1e6f2a3fa4f0,"Converted from eager approach to lazy approach. You now must use `lazy_dt()` to begin a translation pipeline, and must use `collect()`, `as.data.table()`, `as.data.frame()`, or `as_tibble()` to finish the translation and actually perform the computation (#38). This represents a complete overhaul of the package replacing the eager evaluation used in the previous releases. This unfortunately breaks all existing code that used dtplyr, but frankly the previous version was extremely inefficient so offered little of data.table's impressive speed, and was used by very few people.",1,107,FALSE,NA
dtplyr,cde596870c81750cbb14f895b3ff72ed,dtplyr provides methods for data.tables that warning you that they use the data frame implementation and you should use `lazy_dt()` (#77),1,108,FALSE,NA
dtplyr,d2d45d06df7bb3f3141a8c7405e22d79,Joins now pass `...` on to data.table's merge method (#41).,1,109,FALSE,NA
dtplyr,c6ff336a1b591664ac139e44c25fad6a,"`ungroup()` now copies its input (@​christophsax, #54).",1,110,FALSE,NA
dtplyr,a22cbeda7f0d31e4f14fbc04fffe102d,"`mutate()` preserves grouping (@​christophsax, #17).",1,111,FALSE,NA
dtplyr,8c24ee85b77ffc447eb7e53743f4dc0e,"`if_else()` and `coalesce()` are mapped to data.table's `fifelse()` and `fcoalesce()` respectively (@​michaelchirico, #112).",1,112,FALSE,NA
dtplyr,220df19d80079755a6345b353129233b,Maintenance release for CRAN checks.,1,113,FALSE,NA
dtplyr,4348e6b9e0ba4d8b0343defb6107413b,"`inner_join()`, `left_join()`, `right_join()`, and `full_join()`: new `suffix` argument which allows you to control what suffix duplicated variable names receive, as introduced in dplyr 0.5 (#40, @​christophsax).",1,114,FALSE,NA
dtplyr,6f4adde9b79040d72524386759acf4cd,"Joins use extended `merge.data.table()` and the `on` argument, introduced in data.table 1.9.6. Avoids copy and allows joins by different keys (#20, #21, @​christophsax).",1,115,FALSE,NA
dtplyr,d246077ad2aab1bf99f0dabf1f9cdbf1,This is a compatibility release. It makes dtplyr compatible with dplyr 0.6.0 in addition to dplyr 0.5.0.,1,116,FALSE,NA
dtplyr,762aab796056b488268a1fe064308061,"`distinct()` gains `.keep_all` argument (#30, #31).",1,117,FALSE,NA
dtplyr,12b27377dbc92482c4d7dc79d01e3455,Slightly improve test coverage (#6).,1,118,FALSE,NA
dtplyr,45a76875c85eee860c383fd36824f766,Install `devtools` from GitHub on Travis (#32).,1,119,FALSE,NA
dtplyr,78eaf337337727daf0cc7a67316cac16,"Joins return `data.table`. Right and full join are now implemented (#16, #19).",1,120,FALSE,NA
dtplyr,49bf1d797ce0dff48cd3ceee5034ba1c,Remove warnings from tests (#4).,1,121,FALSE,NA
dtplyr,72e59b3396415f7f6b4b8e4942800ef4,Extracted from `dplyr` at revision e5f2952923028803.,1,122,FALSE,NA
forcats,2cae128f2f6d8e1e2cbc5435a19aaff9,New `fct_na_value_to_level()` and `fct_na_level_to_value()` to convert NA values to NA levels and vice versa (#337).,1,1,FALSE,NA
forcats,e5bb68d41d64743654b6d0ce4f34f9fa,"All functions now validate their inputs, giving more useful errors if you accidentally misspecify an input.",1,2,FALSE,NA
forcats,c84237ebcbd430be1350118a2fe54ea9,`fct_collapse()` can now use `other_level = NA` (#291).,1,3,FALSE,NA
forcats,af1576a78af97a7382b45d2b267b13e5,`fct_count()` works with factors that contain `NA`s in levels.,1,4,FALSE,NA
forcats,bf5f4173206b2c3157c9fe597898e014,`fct_explicit_na()` is deprecated in favour of `fct_na_value_to_level()`.,1,5,FALSE,NA
forcats,ebeed13ba784fa4fc55f878c4de0249c,`fct_expand()` gains an `after` argument so that you can choose where the new levels are placed (#138).,1,6,FALSE,NA
forcats,1b09c5b7449fc87d9a791ae2e7c477cc,`fct_infreq()` gains the ability to weight by another variable using the `w` argument (#261).,1,7,FALSE,NA
forcats,48697c3cadcfcf8aa5c259dd13345968,`fct_inorder()` now works when not all levels appear in the data (#262).,1,8,FALSE,NA
forcats,7309f933185f37705bdb4f1f5ded182c,`fct_lump_prop()` and friends now work correctly if you supply weights and have empty levels (#292).,1,9,FALSE,NA
forcats,ba603e55a3faa6857389b9cb8923a74f,"`fct_lump_n()` and `fct_lump_prop()` will now create an ""Other"" level even if it only consists of a single level. This makes them consistent with the other `fct_lump_*` functions (#274).",1,10,FALSE,NA
forcats,f47d73990bba5e7d21c9413d24ec4247,`fct_other()` no longer generates a warning if no levels are replaced with other (#265).,1,11,FALSE,NA
forcats,4febea1554f1941efb67c64e98d1375d,"`fct_relevel()`, `fct_cross()`, and `fct_expand()` now error if you name the arguments in `...` since those names are ignored and your code probably doesn't do what you think it does (#319).",1,12,FALSE,NA
forcats,7ab6dc6c498a471d050f81b1f85a7f66,`fct_reorder()` and `fct_reorder2()` now remove `NA` values in `.x` with a warning (like `ggplot2::geom_point()` and friends). You can suppress the warning by setting `.na_rm = TRUE` (#315).,1,13,FALSE,NA
forcats,2954f5afea72c45eb142e1501561f4b9,`fct_reorder()` and `fct_reorder2()` gain a new `.default` argument that controls the placement of empty levels (including levels that might become empty after removing missing values in `.x`) (#266).,1,14,FALSE,NA
forcats,234f131077d2a9622998fc8338c8cda2,`fct_unique()` now captures implicit missing values if present (#293).,1,15,FALSE,NA
forcats,7df8ec7f38f2de78aea7062b88491e22,New `fct()` which works like `factor()` but errors if values of `x` are not included in the levels specification (#299),1,16,FALSE,NA
forcats,856aa396ead8dc705edc0dc3d218a4fe,`first2()` and `last2()` now ignore missing values in both `x` and `y` (#303).,1,17,FALSE,NA
forcats,34a695a3cbf071f7a8bb3c2bff73f454,Error messages are more informative.,1,18,FALSE,NA
forcats,b148b0e0a3e3dd62dfdf76bd13f64d34,Re-license as MIT (#277).,1,19,FALSE,NA
forcats,a92e82b1649048ea48a316da9656c6bc,"`fct_lump_n()` no longer uses a partial argument name (@​malcolmbarrett, #276).",1,20,FALSE,NA
forcats,950982015e69221d932987d365807c49,"`as_factor()` gains a logical method that always returns a factor with levels ""FALSE"" and ""TRUE"" (#185).",1,21,FALSE,NA
forcats,9e79aec5ce54555c587b88829d56f3bf,"`fct_c()`, `fct_collapse()` and `fct_recode()` are now explicitly documented as using dynamic dots (@​labouz, #234).",1,22,FALSE,NA
forcats,fcc95713c6f6573ded5923a95977c327,"`fct_collapse()` now accepts a `other_level` argument, to allow a user-specified `Other` level (@​gtm19, #194). It now correctly collapses factors when `other_level` is not `NULL` (#172), and makes `""Other""` the last level (#202) (@​gtm19, #172 & #202)",1,23,FALSE,NA
forcats,e40a43d308940b03f2a41cc6c995ced4,`fct_count()` no longer converts implicit NAs into explicit NAs (#151).,1,24,FALSE,NA
forcats,4b73dc467f1d5a41f4e1be492d53896a,`fct_inseq()` behaves more robustly when factor levels aren't all numbers (#221).,1,25,FALSE,NA
forcats,477e2c3e78b13625533813dfc098a874,"`fct_lump()` has been split up into three new functions: `fct_lump_prop()`, `fct_lump_n()`, and `fct_lump_lowfreq()`. (@​jonocarroll, #167, #142). All `fct_lump_()` functions check their inputs more carefully (@​robinson_es, #169)",1,26,FALSE,NA
forcats,b2d3ac75e6c592983267b19498e7658f,"`fct_reorder2()` gains a helper function `first2()`, that sorts `.y` by the first value of `.x` (@​jtr13).",1,27,FALSE,NA
forcats,a23063ae28528f4e0d925b7e42d3e0a2,"`fct_collapse()` gains a `group_other` argument to allow you to group all un-named levels into `""Other""`. (#100, @​AmeliaMN)",1,28,FALSE,NA
forcats,ef7779011d65bcf215f2ea589e353b3f,"`fct_cross()` creates a new factor containing the combined levels from two or more input factors, similar to `base::interaction` (@​tslumley, #136)",1,29,FALSE,NA
forcats,18852b777b8ea3fa7e755d8ceead69fa,"`fct_inseq()` reorders labels in numeric order, if possible (#145, @​kbodwin).",1,30,FALSE,NA
forcats,435394b12acceb74460f699a0ab60cb3,"`fct_lump_min()` preserves levels that appear at least `min` times (can also be used with the `w` weighted argument) (@​robinsones, #142).",1,31,FALSE,NA
forcats,6f433d6ace995767a2d05383b7a1ab24,"`fct_match()` performs validated matching, providing a safer alternative to `f %in% c(""x"", ""y"")` which silently returns `FALSE` if `""x""` or `""y""` are not levels of `f` (e.g. because of a typo) (#126, @​jonocarroll).",1,32,FALSE,NA
forcats,d6f76d84dfe280db6a1242667273de44,`fct_relevel()` can now level factors using a function that is passed the current levels (#117).,1,33,FALSE,NA
forcats,b3a825ce157f43ce04f15ab79e0b6dc6,"`as_factor()` now has a numeric method. By default, orders factors in numeric order, unlike the other methods which default to order of appearance. (#145, @​kbodwin)",1,34,FALSE,NA
forcats,7b10093712a31eebda5d7c55680a86d2,"`fct_count()` gains a parameter to also compute the proportion (@​zhiiiyang, #146).",1,35,FALSE,NA
forcats,867e9f3d9133d857e8d639c9168628bd,"`fct_lump()` now does not change the label if no lumping occurs (@​zhiiiyang, #130).",1,36,FALSE,NA
forcats,2fdd12bd0dc143eed21961316f332a3f,`fct_relabel()` now accepts character input.,1,37,FALSE,NA
forcats,ba487f810cd1afd79dd93ef5332598db,`fct_reorder()` and `fct_reorder2()` no longer require that the summary function return a numeric vector of length 1; instead it can return any orderable vector of length 1 (#147).,1,38,FALSE,NA
forcats,b43f049303eb0a73c69d4818ad00a562,"`fct_reorder()`, `fct_reorder2()` and `as_factor()` now use the ellipsis package to warn if you pass in named components to `...` (#174).",1,39,FALSE,NA
forcats,a62825ba93c70f5216b62d7ee4b71088,`fct_c()` now requires explicit splicing with `!!!` if you have a list of factors that you want to combine. This is consistent with an emerging standards for handling `...` throughout the tidyverse.,1,40,FALSE,NA
forcats,6c61327613159e757e10ccb9b4af48c1,`fct_reorder()` and `fct_reorder2()` have renamed `fun` to `.fun` to avoid spurious matching of named arguments.,1,41,FALSE,NA
forcats,5a2a5608c6ff76d5c422a8aa4762aadf,"All functions that take `...` use ""tidy"" dots: this means that you use can `!!!` to splice in a list of values, and trailing empty arguments are automatically removed. Additionally, all other arguments gain a `.` prefix in order to avoid unhelpful matching of named arguments (#110).",1,42,FALSE,NA
forcats,2b6e510729a76fec9510079f0bbc7d19,"`fct_lump()` gains `w` argument (#70, @​wilkox) to weight value frequencies before lumping them together (#68).",1,43,FALSE,NA
forcats,2c5736f2b1f6175bf05201d2c420c702,`as_factor()` and `fct_inorder()` accept NA levels (#98).,1,44,FALSE,NA
forcats,51bd0e3e37c07c7be7db54d664c178f4,`fct_explicit_na()` also replaces NAs encoded in levels.,1,45,FALSE,NA
forcats,e67f198ae61b4a6df04c0ff39d3a248b,`fct_lump()` correctly accounts for `NA` values in input (#41),1,46,FALSE,NA
forcats,a08decb205cf62a687222d5a73314188,`lvls_revalue()` preserves NA levels.,1,47,FALSE,NA
forcats,8ab910a71039b9ec6753c63ee0bb058e,Test coverage increased from 80% to 99%.,1,48,FALSE,NA
forcats,cabfc80aa51fa880c68d4364fd26dc1a,`fct_drop()` now preserves attributes (#83).,1,49,FALSE,NA
forcats,2e99ea954a807ba5c478722843ca4672,`fct_expand()` and `lvls_expand()` now also take character vectors (#99).,1,50,FALSE,NA
forcats,a41cc34ceb85cf6d6b91a7781bd6c848,"`fct_relabel()` now accepts objects coercible to functions by `rlang::as_function` (#91, @​alistaire47)",1,51,FALSE,NA
forcats,fbcb7c20587d005631398826e84d6c10,`as_factor()` which works like `as.factor()` but orders levels by appearance to avoid differences between locales (#39).,1,52,FALSE,NA
forcats,ceb91550bd2857d6d547f8de7e8df537,"`fct_other()` makes it easier to convert selected levels to ""other"" (#40)",1,53,FALSE,NA
forcats,cdec57a0e3dfb55737536487370af161,"`fct_relabel()` allows programmatic relabeling of levels (#50, @​krlmlr).",1,54,FALSE,NA
forcats,b51e48761d8120e4b064fabafb80d151,`fct_c()` can take either a list of factors or individual factors (#42).,1,55,FALSE,NA
forcats,79f39102f5f94d03cff1294f22aff188,`fct_drop()` gains `only` argument to restrict which levels are dropped (#69) and no longer adds `NA` level if not present (#52).,1,56,FALSE,NA
forcats,212645f7fef6b10b7c15c3bd2b35cc2e,`fct_recode()` is now checks that each new value is of length 1 (#56).,1,57,FALSE,NA
forcats,b708dbae875e8a3fb2f965412811be51,`fct_relevel()` gains `after` argument so you can also move levels to the end (or any other position you like) (#29).,1,58,FALSE,NA
forcats,a33aaa9810e511c5f12f1a6b7ac51c1c,"`lvls_reorder()`, `fct_inorder()`, and `fct_infreq()` gain an `ordered` argument, allowing you to override the existing ""ordered"" status (#54).",1,59,FALSE,NA
forcats,f5c56e0a1156a0a0790fe7018644f8fa,Minor fixes for R CMD check,1,60,FALSE,NA
forcats,00dd5bcf45c68fe83babf76202766982,Add package docs,1,61,FALSE,NA
ggplot2,25da8c89363df90140d72e4476f97a11,`coord_radial()` is a successor to `coord_polar()` with more customisation options. `coord_radial()` can:,1,2,FALSE,NA
ggplot2,25da8c89363df90140d72e4476f97a11,• integrate with the new guide system via a dedicated `guide_axis_theta()` to display the angle coordinate.,2,3,FALSE,`coord_radial()` is a successor to `coord_polar()` with more customisation options. `coord_radial()` can:
ggplot2,25da8c89363df90140d72e4476f97a11,"• in addition to drawing full circles, also draw circle sectors by using the `end` argument.",2,4,FALSE,`coord_radial()` is a successor to `coord_polar()` with more customisation options. `coord_radial()` can:
ggplot2,25da8c89363df90140d72e4476f97a11,• avoid data vanishing in the center of the plot by setting the `donut` argument.,2,5,FALSE,`coord_radial()` is a successor to `coord_polar()` with more customisation options. `coord_radial()` can:
ggplot2,25da8c89363df90140d72e4476f97a11,"• adjust the `angle` aesthetic of layers, such as `geom_text()`, to align with the coordinate system using the `rotate_angle` argument.",2,6,FALSE,`coord_radial()` is a successor to `coord_polar()` with more customisation options. `coord_radial()` can:
ggplot2,7a7d3dbed485ad96cd97d6758d68e8a4,"By default, `guide_legend()` now only draws a key glyph for a layer when the value is is the layer's data. To revert to the old behaviour, you can still set `show.legend = c({aesthetic} = TRUE)` (@​teunbrand, #3648).",1,7,FALSE,NA
ggplot2,4d5877a03613c53b75b16d6085c3e059,"The spacing between legend keys and their labels, in addition to legends and their titles, is now controlled by the text's `margin` setting. Not specifying margins will automatically add appropriate text margins. To control the spacing within a legend between keys, the new `key.spacing.{x/y}` argument can be used. This leaves the `legend.spacing` dedicated to controlling the spacing between different guides (#5455).",1,8,FALSE,NA
ggplot2,d737cd21fe9131fc380b806e9793273a,"In the theme element hierarchy, parent elements that are a strict subclass of child elements now confer their subclass upon the children (#5457).",1,9,FALSE,NA
ggplot2,010e6fef20921022ab5cfd6c4971498a,"`ggsave()` no longer sometimes creates new directories, which is now controlled by the new `create.dir` argument (#5489).",1,10,FALSE,NA
ggplot2,07a25c21d08c511b2ae4197ca584a284,`guide_coloursteps(even.steps = FALSE)` now draws one rectangle per interval instead of many small ones (#5481).,1,11,FALSE,NA
ggplot2,456d70429e27e9f1f7b48c8816e7d781,(internal) guide building is now part of `ggplot_build()` instead of `ggplot_gtable()` to allow guides to observe unmapped data (#5483).,1,12,FALSE,NA
ggplot2,c172221df92bbd807de6f17812d0eba3,"`geom_violin()` gains a `bounds` argument analogous to `geom_density()`s (@​eliocamp, #5493).",1,13,FALSE,NA
ggplot2,6c488dc94c50dfad0ba5317b0db0050c,"Legend titles no longer take up space if they've been removed by setting `legend.title = element_blank()` (@​teunbrand, #3587).",1,14,FALSE,NA
ggplot2,4070734bfab77f5e1ff23563d1165528,"New function `check_device()` for testing the availability of advanced graphics features introduced in R 4.1.0 onwards (@​teunbrand, #5332).",1,15,FALSE,NA
ggplot2,0be4c983d3d4a7029c4c9ce2fbf8f505,"Failing to fit or predict in `stat_smooth()` now gives a warning and omits the failed group, instead of throwing an error (@​teunbrand, #5352).",1,16,FALSE,NA
ggplot2,5ef31ec645a5cdd4a42cdf9cf6d1b4d5,"`resolution()` has a small tolerance, preventing spuriously small resolutions due to rounding errors (@​teunbrand, #2516).",1,17,FALSE,NA
ggplot2,bb63961b59f483f96671a87c17afade0,"`stage()` now works correctly, even with aesthetics that do not have scales (#5408)",1,18,FALSE,NA
ggplot2,e6e1f18781f1edb2c41dbe25b6a4b243,"`labeller()` now handles unspecified entries from lookup tables (@​92amartins, #4599).",1,19,FALSE,NA
ggplot2,806e544499a728d7e7245b3e801aff5e,"`fortify.default()` now accepts a data-frame-like object granted the object exhibits healthy `dim()`, `colnames()`, and `as.data.frame()` behaviors (@​hpages, #5390).",1,20,FALSE,NA
ggplot2,56e9537d77318e294b99692bbb860090,"`ScaleContinuous$get_breaks()` now only calls `scales::zero_range()` on limits in transformed space, rather than in data space (#5304).",1,21,FALSE,NA
ggplot2,308a0f96824fd7ec1aaa321d20264028,"Scales throw more informative messages (@​teunbrand, #4185, #4258)",1,22,FALSE,NA
ggplot2,5f446aca78b690b1156dccfea68b8ab8,"The `scale_name` argument in `continuous_scale()`, `discrete_scale()` and `binned_scale()` is soft-deprecated (@​teunbrand, #1312).",1,23,FALSE,NA
ggplot2,e41ea6eccf861f9253b7816f1d2dd299,"In `theme()`, some elements can be specified with `rel()` to inherit from `unit`-class objects in a relative fashion (@​teunbrand, #3951).",1,24,FALSE,NA
ggplot2,e941d9a6ebe62a4ffb34c847c5498630,"`stat_ydensity()` with incomplete groups calculates the default `width` parameter more stably (@​teunbrand, #5396)",1,25,FALSE,NA
ggplot2,1b9f59d7de61324e614b8aff219a3d37,"`geom_boxplot()` gains a new argument, `staplewidth` that can draw staples at the ends of whiskers (@​teunbrand, #5126)",1,26,FALSE,NA
ggplot2,c2e93acf32b2d9a7fe3548481368ca97,The `size` argument in `annotation_logticks()` has been deprecated in favour of the `linewidth` argument (#5292).,1,27,FALSE,NA
ggplot2,714b3f6cd17d33be340b135dcc29288f,"`geom_boxplot()` gains an `outliers` argument to switch outliers on or off, in a manner that does affects the scale range. For hiding outliers that does not affect the scale range, you can continue to use `outlier.shape = NA` (@​teunbrand, #4892).",1,28,FALSE,NA
ggplot2,a4a7bdd3fd0da1f1b0e0134946f0a7d1,Binned scales now treat `NA`s in limits the same way continuous scales do (#5355).,1,29,FALSE,NA
ggplot2,7778f65495e6e4e351ee4d43b3df229a,"Binned scales work better with `trans = ""reverse""` (#5355).",1,30,FALSE,NA
ggplot2,a0911dfb01d6b08e7684f9cb9a674ce4,"The `legend.text.align` and `legend.title.align` arguments in `theme()` are deprecated. The `hjust` setting of the `legend.text` and `legend.title` elements continues to fulfil the role of text alignment (@​teunbrand, #5347).",1,31,FALSE,NA
ggplot2,6785d34ff16e7f19ad1fee82885b020e,"Integers are once again valid input to theme arguments that expect numeric input (@​teunbrand, #5369)",1,32,FALSE,NA
ggplot2,42c58585c3b807a825305d2d5d1e4389,"Nicer error messages for xlim/ylim arguments in coord-\* functions (@​92amartins, #4601, #5297).",1,33,FALSE,NA
ggplot2,95bbd687d6a5d8cf42b43f21364715c2,`coord_sf()` now uses customisable guides provided in the scales or `guides()` function (@​teunbrand).,1,34,FALSE,NA
ggplot2,177fa91c4244a22572c4df7cae918e0a,"Legends in `scale_*_manual()` can show `NA` values again when the `values` is a named vector (@​teunbrand, #5214, #5286).",1,35,FALSE,NA
ggplot2,382159cb5310d63306941e012daf6ec3,"`scale_*_manual()` with a named `values` argument now emits a warning when none of those names match the values found in the data (@​teunbrand, #5298).",1,36,FALSE,NA
ggplot2,df2d4304cf708f5b39c94a7220382532,"`coord_munch()` can now close polygon shapes (@​teunbrand, #3271)",1,37,FALSE,NA
ggplot2,873d3eb9b4182936c29074b1f4077d9b,"You can now omit either `xend` or `yend` from `geom_segment()` as only one of these is now required. If one is missing, it will be filled from the `x` and `y` aesthetics respectively. This makes drawing horizontal or vertical segments a little bit more convenient (@​teunbrand, #5140).",1,38,FALSE,NA
ggplot2,afaba32420b4e3b00de7fa8bc423f54a,"New `plot.tag.location` in `theme()` can control placement of the plot tag in the `""margin""`, `""plot""` or the new `""panel""` option (#4297).",1,39,FALSE,NA
ggplot2,efb5b35e06ff9d6e6a89a2fb4fcafd8f,"`geom_text()` and `geom_label()` gained a `size.unit` parameter that set the text size to millimetres, points, centimetres, inches or picas (@​teunbrand, #3799).",1,40,FALSE,NA
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:",1,41,FALSE,NA
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• A fallback for old S3 guides is encapsulated in the `GuideOld` ggproto class, which mostly just calls the old S3 generics.",2,42,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• While the S3 guide generics are still in place, the S3 methods for `guide_train()`, `guide_merge()`, `guide_geom()`, `guide_transform()`, `guide_gengrob()` have been superseded by the respective ggproto methods. In practise, this will mean that `NextMethod()` or sub-classing ggplot2's guides with the S3 system will no longer work.",2,43,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• Styling theme parts of the guide now inherit from the plot's theme (#2728).,2,44,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• Styling non-theme parts of the guides accept `<element>`{=html} objects, so that the following is possible: `guide_colourbar(frame = element_rect(...))`.",2,45,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• Primary axis titles are now placed at the primary guide, so that `guides(x = guide_axis(position = ""top""))` will display the title at the top by default (#4650).",2,46,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• Unknown secondary axis guide positions are now inferred as the opposite of the primary axis guide when the latter has a known `position` (#4650).,2,47,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• `guide_colourbar()`, `guide_coloursteps()` and `guide_bins()` gain a `ticks.length` argument.",2,48,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• In `guide_bins()`, the title no longer arbitrarily becomes offset from the guide when it has long labels.",2,49,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• The `order` argument of guides now strictly needs to be a length-1 integer (#4958).,2,50,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,"• More informative error for mismatched `direction`/`theme(legend.direction = ...)` arguments (#4364, #4930).",2,51,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• `guide_coloursteps()` and `guide_bins()` sort breaks (#5152).,2,52,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• `guide_axis()` gains a `minor.ticks` argument to draw minor ticks (#4387).,2,53,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• `guide_axis()` gains a `cap` argument that can be used to trim the axis line to extreme breaks (#4907).,2,54,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• `guide_colourbar()` and `guide_coloursteps()` merge properly when one of aesthetics is dropped (#5324).,2,55,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,d6bc61bbf150ca51395d0c65245645d5,• Fixed regression in `guide_legend()` where the `linewidth` key size wasn't adapted to the width of the lines (#5160).,2,56,FALSE,"The guide system, as the last remaining chunk of ggplot2, has been rewritten in ggproto. The axes and legends now inherit from a `<Guide>`{=html} class, which makes them extensible in the same manner as geoms, stats, facets and coords (#3329, @​teunbrand). In addition, the following changes were made:"
ggplot2,2b3cf89155165f5b60350cda506f93b0,"`geom_label()` now uses the `angle` aesthetic (@​teunbrand, #2785)",1,57,FALSE,NA
ggplot2,af73a18efc13097ef0d4c982c82bc629,"'lines' units in `geom_label()`, often used in the `label.padding` argument, are now are relative to the text size. This causes a visual change, but fixes a misalignment issue between the textbox and text (@​teunbrand, #4753)",1,58,FALSE,NA
ggplot2,b5765ed054395c14a29dbba355f5c5fe,The `label.padding` argument in `geom_label()` now supports inputs created with the `margin()` function (#5030).,1,59,FALSE,NA
ggplot2,942389f92ab02b74323c9a4063c6f398,"As an internal change, the `titleGrob()` has been refactored to be faster.",1,60,FALSE,NA
ggplot2,63f08d8afa4cf7946f498f4a801e8d42,"The `translate_shape_string()` internal function is now exported for use in extensions of point layers (@​teunbrand, #5191).",1,61,FALSE,NA
ggplot2,4f1e1661143190345debaadd007ebbcc,"Fixed bug in `coord_sf()` where graticule lines didn't obey `panel.grid.major`'s linewidth setting (@​teunbrand, #5179)",1,62,FALSE,NA
ggplot2,cc89d1f9ccc632d73dc119e5b3765fba,"Fixed bug in `annotation_logticks()` when no suitable tick positions could be found (@​teunbrand, #5248).",1,63,FALSE,NA
ggplot2,edadcf59a7bd5047c771a4573bb51dd2,"To improve `width` calculation in bar plots with empty factor levels, `resolution()` considers `mapped_discrete` values as having resolution 1 (@​teunbrand, #5211)",1,64,FALSE,NA
ggplot2,5add99e6fb43881076f186cd72a3757c,"When `geom_path()` has aesthetics varying within groups, the `arrow()` is applied to groups instead of individual segments (@​teunbrand, #4935).",1,65,FALSE,NA
ggplot2,91d826c22acdf73910c0036f3f7d2b4a,"The default width of `geom_bar()` is now based on panel-wise resolution of the data, rather than global resolution (@​teunbrand, #4336).",1,66,FALSE,NA
ggplot2,691814f53bbafc9cee536bbed05aa22a,"To apply dodging more consistently in violin plots, `stat_ydensity()` now has a `drop` argument to keep or discard groups with 1 observation.",1,67,FALSE,NA
ggplot2,014a3fc114f2f626afab4eeb187795fe,"Aesthetics listed in `geom_*()` and `stat_*()` layers now point to relevant documentation (@​teunbrand, #5123).",1,68,FALSE,NA
ggplot2,528249dd5ed8c5fa782ab043e8857d5f,"`coord_flip()` has been marked as superseded. The recommended alternative is to swap the `x` and `y` aesthetic and/or using the `orientation` argument in a layer (@​teunbrand, #5130).",1,69,FALSE,NA
ggplot2,643f010dee3876bd6933bde47911ebec,"`stat_align()` is now applied per panel instead of globally, preventing issues when facets have different ranges (@​teunbrand, #5227).",1,70,FALSE,NA
ggplot2,661754ae033edc4c88c3af04f7db7145,"A stacking bug in `stat_align()` was fixed (@​teunbrand, #5176).",1,71,FALSE,NA
ggplot2,6edae9ef883663464580392748d04e06,"`stat_contour()` and `stat_contour_filled()` now warn about and remove duplicated coordinates (@​teunbrand, #5215).",1,72,FALSE,NA
ggplot2,2ce50898b588006b425d180a4cca98a9,"Improve performance of layers without positional scales (@​zeehio, #4990)",1,73,FALSE,NA
ggplot2,76f485c0310777998dd7c6d7bf51dab6,"`fortify()` for sp objects (e.g., `SpatialPolygonsDataFrame`) is now deprecated and will be removed soon in support of the upcoming retirement of rgdal, rgeos, and maptools. In advance of the whole removal, `fortify(<SpatialPolygonsDataFrame>, region = ...)` no longer works as of this version (@​yutannihilation, #5244).",1,74,FALSE,NA
ggplot2,5a4107a98a6997658dd8fdbda79cbfd5,"Various type checks and their messages have been standardised (@​teunbrand, #4834).",1,75,FALSE,NA
ggplot2,68b27ac70ab66ec2e5226f6293d92d80,"ggplot2 now uses `scales::DiscreteRange` and `scales::ContinuousRange`, which are available to write scale extensions from scratch (@​teunbrand, #2710).",1,76,FALSE,NA
ggplot2,4216fca1620d544e78963471ffba4741,"The `layer_data()`, `layer_scales()` and `layer_grob()` now have the default `plot = last_plot()` (@​teunbrand, #5166).",1,77,FALSE,NA
ggplot2,a826dfcf0b8f3b25039c111774eb7421,"The `datetime_scale()` scale constructor is now exported for use in extension packages (@​teunbrand, #4701).",1,78,FALSE,NA
ggplot2,447c6761d9f2a521680b4b0d7624ee57,"`update_geom_defaults()` and `update_stat_defaults()` now return properly classed objects and have updated docs (@​dkahle, #5146).",1,79,FALSE,NA
ggplot2,f67baeebf8595aa237591f1557bf2066,"For the purposes of checking required or non-missing aesthetics, character vectors are no longer considered non-finite (@​teunbrand, @​4284).",1,80,FALSE,NA
ggplot2,57b6bea7e0231b304d57a3c68bfb1ea9,"`annotation_logticks()` skips drawing ticks when the scale range is non-finite instead of throwing an error (@​teunbrand, #5229).",1,81,FALSE,NA
ggplot2,0c45312cdced3d97d068a5e6bf0120a7,"Fixed spurious warnings when the `weight` was used in `stat_bin_2d()`, `stat_boxplot()`, `stat_contour()`, `stat_bin_hex()` and `stat_quantile()` (@​teunbrand, #5216).",1,82,FALSE,NA
ggplot2,355c6a93c7941ff6e33b456e71c17dd5,"To prevent changing the plotting order, `stat_sf()` is now computed per panel instead of per group (@​teunbrand, #4340).",1,83,FALSE,NA
ggplot2,191f67d788cfc4234ca538d8dcd1b43a,"Fixed bug in `coord_sf()` where graticule lines didn't obey `panel.grid.major`'s linewidth setting (@​teunbrand, #5179).",1,84,FALSE,NA
ggplot2,9d889c097e3340e0666f99539c483be8,"`geom_text()` drops observations where `angle = NA` instead of throwing an error (@​teunbrand, #2757).",1,85,FALSE,NA
ggplot2,7bec33875e4851b52416d1379caddebd,"The computed variable `y` in `stat_ecdf()` has been superseded by `ecdf` to prevent incorrect scale transformations (@​teunbrand, #5113 and #5112).",1,86,FALSE,NA
ggplot2,ce3087f59aa73ae56c48b28ba0491682,"Added `scale_linewidth_manual()` and `scale_linewidth_identity()` to support the `linewidth` aesthetic (@​teunbrand, #5050).",1,87,FALSE,NA
ggplot2,6608ef8a8b2044a850936227c49238e3,"`ggsave()` warns when multiple `filename`s are given, and only writes to the first file (@​teunbrand, #5114).",1,88,FALSE,NA
ggplot2,cfbc0b21c3a88dfc071bc788acba66f0,"Fixed a regression in `geom_hex()` where aesthetics were replicated across bins (@​thomasp85, #5037 and #5044).",1,89,FALSE,NA
ggplot2,de3724d2131364a2285d2a5981b42565,"Using two ordered factors as facetting variables in `facet_grid(..., as.table = FALSE)` now throws a warning instead of an error (@​teunbrand, #5109).",1,90,FALSE,NA
ggplot2,2f03af508ba39378aacd2069a7cc68ad,"Fixed misbehaviour of `draw_key_boxplot()` and `draw_key_crossbar()` with skewed key aspect ratio (@​teunbrand, #5082).",1,91,FALSE,NA
ggplot2,c8757e2aac4c082d69b3b12874f05ade,"Fixed spurious warning when `weight` aesthetic was used in `stat_smooth()` (@​teunbrand based on @​clauswilke's suggestion, #5053).",1,92,FALSE,NA
ggplot2,6cde7e40f00078b056f1a378e0f65d23,The `lwd` alias is now correctly replaced by `linewidth` instead of `size` (@​teunbrand based on @​clauswilke's suggestion #5051).,1,93,FALSE,NA
ggplot2,8f6524c64f575661e31d11cf6073d9ca,"Fixed a regression in `Coord$train_panel_guides()` where names of guides were dropped (@​maxsutton, #5063).",1,94,FALSE,NA
ggplot2,d50c2ead9ac1571333d7a0c556d1eeb6,"Automatic breaks should no longer be out-of-bounds, and automatic limits are adjusted to include breaks (@​teunbrand, #5082).",1,95,FALSE,NA
ggplot2,1f529aee692d6e714828c03f4f1debfa,"Zero-range limits no longer throw an error and are treated akin to continuous scales with zero-range limits (@​teunbrand, #5066).",1,96,FALSE,NA
ggplot2,cafe21f0a76b8668e85f86f1136fa14b,"The `trans = ""date""` and `trans = ""time""` transformations were made compatible (@​teunbrand, #4217).",1,97,FALSE,NA
ggplot2,f831940f94a0e9216b8119e9b614f8c5,"A `linewidth` aesthetic has been introduced and supersedes the `size` aesthetic for scaling the width of lines in line based geoms. `size` will remain functioning but deprecated for these geoms and it is recommended to update all code to reflect the new aesthetic. For geoms that have *both* point sizing and linewidth sizing (`geom_pointrange()` and `geom_sf`) `size` now **only** refers to sizing of points which can leads to a visual change in old code (@​thomasp85, #3672)",1,98,FALSE,NA
ggplot2,6322ca89d6eaceba9247a3e42a0ff9ba,The default line width for polygons in `geom_sf()` have been decreased to 0.2 to reflect that this is usually used for demarking borders where a thinner line is better suited. This change was made since we already induced a visual change in `geom_sf()` with the introduction of the `linewidth` aesthetic.,1,99,FALSE,NA
ggplot2,f18300ba5e677f7dc0024d17de645c81,"The dot-dot notation (`..var..`) and `stat()`, which have been superseded by `after_stat()`, are now formally deprecated (@​yutannihilation, #3693).",1,100,FALSE,NA
ggplot2,04f420bf047baf317198a029ffd3451e,"`qplot()` is now formally deprecated (@​yutannihilation, #3956).",1,101,FALSE,NA
ggplot2,dcfa6ba17d8357dde600acfb034af765,"`stage()` now properly refers to the values without scale transformations for the stage of `after_stat`. If your code requires the scaled version of the values for some reason, you have to apply the same transformation by yourself, e.g. `sqrt()` for `scale_{x,y}_sqrt()` (@​yutannihilation and @​teunbrand, #4155).",1,102,FALSE,NA
ggplot2,9a5ff5a7c4753011452f9cc2b29a41a2,"Use `rlang::hash()` instead of `digest::digest()`. This update may lead to changes in the automatic sorting of legends. In order to enforce a specific legend order use the `order` argument in the guide. (@​thomasp85, #4458)",1,103,FALSE,NA
ggplot2,ae19938d2023596ed352da72e8ec99ec,referring to `x` in backquoted expressions with `label_bquote()` is no longer possible.,1,104,FALSE,NA
ggplot2,b394981afe5ed6017ed340b9ad57f0a8,The `ticks.linewidth` and `frame.linewidth` parameters of `guide_colourbar()` are now multiplied with `.pt` like elsewhere in ggplot2. It can cause visual changes when these arguments are not the defaults and these changes can be restored to their previous behaviour by adding `/ .pt` (@​teunbrand #4314).,1,105,FALSE,NA
ggplot2,6efd50d1969c453580562643b85970e0,"`scale_*_viridis_b()` now uses the full range of the viridis scales (@​gregleleu, #4737)",1,106,FALSE,NA
ggplot2,a61467a71815395a844a3c59166f5be7,"`geom_col()` and `geom_bar()` gain a new `just` argument. This is set to `0.5` by default; use `just = 0`/`just = 1` to place columns on the left/right of the axis breaks. (@​wurli, #4899)",1,107,FALSE,NA
ggplot2,f74468e79876e4ed32e1e7213be54ac1,"`geom_density()` and `stat_density()` now support `bounds` argument to estimate density with boundary correction (@​echasnovski, #4013).",1,108,FALSE,NA
ggplot2,6e6a5e91d96413bea40dfab124bea2e7,"ggplot now checks during statistical transformations whether any data columns were dropped and warns about this. If stats intend to drop data columns they can declare them in the new field `dropped_aes`. (@​clauswilke, #3250)",1,109,FALSE,NA
ggplot2,792fe5ee9270ac92e131992ef59731b0,"`...` supports `rlang::list2` dynamic dots in all public functions. (@​mone27, #4764)",1,110,FALSE,NA
ggplot2,9507a270cb97de73d5495b821773cf13,"`theme()` now has a `strip.clip` argument, that can be set to `""off""` to prevent the clipping of strip text and background borders (@​teunbrand, #4118)",1,111,FALSE,NA
ggplot2,e57025d47d4bbfb5f8bd2a6e7f6fffe5,"`geom_contour()` now accepts a function in the `breaks` argument (@​eliocamp, #4652).",1,112,FALSE,NA
ggplot2,18a26502c0dbe7dffbe7e7e809d1c20b,"Fix a bug in `position_jitter()` where infinity values were dropped (@​javlon, #4790).",1,113,FALSE,NA
ggplot2,c099701d8eadf5ea06347ead333a55da,"`geom_linerange()` now respects the `na.rm` argument (#4927, @​thomasp85)",1,114,FALSE,NA
ggplot2,f701c7c038d1c9edec267e4e66471057,"Improve the support for `guide_axis()` on `coord_trans()` (@​yutannihilation, #3959)",1,115,FALSE,NA
ggplot2,2501398e9b418ab4ad56c22ae34ea04a,"Added `stat_align()` to align data without common x-coordinates prior to stacking. This is now the default stat for `geom_area()` (@​thomasp85, #4850)",1,116,FALSE,NA
ggplot2,b0dbb765cf52d5ac1ffd619cb23347af,"Fix a bug in `stat_contour_filled()` where break value differences below a certain number of digits would cause the computations to fail (@​thomasp85, #4874)",1,117,FALSE,NA
ggplot2,18aa797948539915523997abef20e4fd,"Secondary axis ticks are now positioned more precisely, removing small visual artefacts with alignment between grid and ticks (@​thomasp85, #3576)",1,118,FALSE,NA
ggplot2,63533913d9a51cf47fa9aae48c32b464,"Improve `stat_function` documentation regarding `xlim` argument. (@​92amartins, #4474)",1,119,FALSE,NA
ggplot2,f9a044a056995fccfa88232b8e3da8d6,"Fix various issues with how `labels`, `breaks`, `limits`, and `show.limits` interact in the different binning guides (@​thomasp85, #4831)",1,120,FALSE,NA
ggplot2,07926552786db3ba8a9b5ef60f1156ba,"Automatic break calculation now squishes the scale limits to the domain of the transformation. This allows `scale_{x/y}_sqrt()` to find breaks at 0\ when appropriate (@​teunbrand, #980).",1,121,FALSE,NA
ggplot2,da85ffdae19fd8af65dc4837c533d8f5,"Using multiple modified aesthetics correctly will no longer trigger warnings. If used incorrectly, the warning will now report the duplicated aesthetic instead of `NA` (@​teunbrand, #4707).",1,122,FALSE,NA
ggplot2,c191b56345b8e3917e1e9b95518afa59,`aes()` now supports the `!!!` operator in its first two arguments (#2675). Thanks to @​yutannihilation and @​teunbrand for draft implementations.,1,123,FALSE,NA
ggplot2,666cab9184abab7b2c64734c2fd25373,"Require rlang \>= 1.0.0 (@​billybarc, #4797)",1,124,FALSE,NA
ggplot2,4cca7675e59c66f1bc0a676300a395ed,"`geom_violin()` no longer issues ""collapsing to unique 'x' values"" warning (@​bersbersbers, #4455)",1,125,FALSE,NA
ggplot2,6e87dd0499c80fd5236d1b51dfd83f4e,"`annotate()` now documents unsupported geoms (`geom_abline()`, `geom_hline()` and `geom_vline()`), and warns when they are requested (@​mikmart, #4719)",1,126,FALSE,NA
ggplot2,8fecbff57af8ed8bdab5697510cbda1f,"`presidential` dataset now includes Trump's presidency (@​bkmgit, #4703).",1,127,FALSE,NA
ggplot2,1276be666b446d9265c054c26b3cd795,"`position_stack()` now works fully with `geom_text()` (@​thomasp85, #4367)",1,128,FALSE,NA
ggplot2,8e794bf9529bdcf0bede92a54069e643,"`geom_tile()` now correctly recognises missing data in `xmin`, `xmax`, `ymin`, and `ymax` (@​thomasp85 and @​sigmapi, #4495)",1,129,FALSE,NA
ggplot2,8486131154d12af235ecea5276976fab,"`geom_hex()` will now use the binwidth from `stat_bin_hex()` if present, instead of deriving it (@​thomasp85, #4580)",1,130,FALSE,NA
ggplot2,34c284efc8cef601667da7adc3ddc770,`geom_hex()` now works on non-linear coordinate systems (@​thomasp85),1,131,FALSE,NA
ggplot2,d7bfd1364a5d4280b6391845a451713d,"Fixed a bug throwing errors when trying to render an empty plot with secondary axes (@​thomasp85, #4509)",1,132,FALSE,NA
ggplot2,9aae11c597e03904c98f2d5ff35cfb94,"Axes are now added correctly in `facet_wrap()` when `as.table = FALSE` (@​thomasp85, #4553)",1,133,FALSE,NA
ggplot2,db8a6de61694d1188129e01cd87b4de0,"Better compatibility of custom device functions in `ggsave()` (@​thomasp85, #4539)",1,134,FALSE,NA
ggplot2,84831e052681ed22c07711be81002f77,"Binning scales are now more resilient to calculated limits that ends up being `NaN` after transformations (@​thomasp85, #4510)",1,135,FALSE,NA
ggplot2,f1f9214c0e2e00c28f9530e724989921,"Strip padding in `facet_grid()` is now only in effect if `strip.placement = ""outside""` *and* an axis is present between the strip and the panel (@​thomasp85, #4610)",1,136,FALSE,NA
ggplot2,7cedc736c39e7b4af16f2b3edab9a78e,"Aesthetics of length 1 are now recycled to 0 if the length of the data is 0 (@​thomasp85, #4588)",1,137,FALSE,NA
ggplot2,510f8bb8421ea5d673d2f3807137b52d,"Setting `size = NA` will no longer cause `guide_legend()` to error (@​thomasp85, #4559)",1,138,FALSE,NA
ggplot2,354cde7ab2a4874b717244cbac2a0037,"Setting `stroke` to `NA` in `geom_point()` will no longer impair the sizing of the points (@​thomasp85, #4624)",1,139,FALSE,NA
ggplot2,237f5d7666d3b763d88fa9e17958fb74,"`stat_bin_2d()` now correctly recognises the `weight` aesthetic (@​thomasp85, #4646)",1,140,FALSE,NA
ggplot2,c5c79dafc1109216273bd6d1f5ba34ec,"All geoms now have consistent exposure of linejoin and lineend parameters, and the guide keys will now respect these settings (@​thomasp85, #4653)",1,141,FALSE,NA
ggplot2,9e68c436f945615a876709728c9ea54d,"`geom_sf()` now respects `arrow` parameter for lines (@​jakeruss, #4659)",1,142,FALSE,NA
ggplot2,badae2935c362fbfe49b94728b985822,"Updated documentation for `print.ggplot` to reflect that it returns the original plot, not the result of `ggplot_build()`. (@​r2evans, #4390)",1,143,FALSE,NA
ggplot2,db1342699f4350e7abf1bc7e89de7d3f,"`scale_*_manual()` no longer displays extra legend keys, or changes their order, when a named `values` argument has more items than the data. To display all `values` on the legend instead, use `scale_*_manual(values = vals, limits = names(vals))`. (@​teunbrand, @​banfai, #4511, #4534)",1,144,FALSE,NA
ggplot2,432346f2d1d87ca82afcdf5d3e6ffd49,"Updated documentation for `geom_contour()` to correctly reflect argument precedence between `bins` and `binwidth`. (@​eliocamp, #4651)",1,145,FALSE,NA
ggplot2,0dfbc8893950e2aa66b9482882ae3e6c,"Dots in `geom_dotplot()` are now correctly aligned to the baseline when `stackratio != 1` and `stackdir != ""up""` (@​mjskay, #4614)",1,146,FALSE,NA
ggplot2,ea0f252f399ac4f73b7fbbef19bfc6d5,"Key glyphs for `geom_boxplot()`, `geom_crossbar()`, `geom_pointrange()`, and `geom_linerange()` are now orientation-aware (@​mjskay, #4732)",1,147,FALSE,NA
ggplot2,b2cb15e01a604b6cbf12bdd7fc9d38cd,"Updated documentation for `geom_smooth()` to more clearly describe effects of the `fullrange` parameter (@​thoolihan, #4399).",1,148,FALSE,NA
ggplot2,672c93246f7d47d1435323045bf08fdc,"Revert changes made in #4434 (apply transform to intercept in `geom_abline()`) as it introduced undesirable issues far worse than the bug it fixed (@​thomasp85, #4514)",1,149,FALSE,NA
ggplot2,d79ea1013f63907ed4dc79c298a9a232,"Fixes an issue in `ggsave()` when producing emf/wmf files (@​yutannihilation, #4521)",1,150,FALSE,NA
ggplot2,1ad204c3c106202587bd4e36601c1655,"Warn when grDevices specific arguments are passed to ragg devices (@​thomasp85, #4524)",1,151,FALSE,NA
ggplot2,dfdec80b9a18d9a61983e686d02a4ff8,"Fix an issue where `coord_sf()` was reporting that it is non-linear even when data is provided in projected coordinates (@​clauswilke, #4527)",1,152,FALSE,NA
ggplot2,4f75b26d989561fd5dd74598731561de,"Alt-text can now be added to a plot using the `alt` label, i.e `+ labs(alt = ...)`. Currently this alt text is not automatically propagated, but we plan to integrate into Shiny, RMarkdown, and other tools in the future. (@​thomasp85, #4477)",1,153,FALSE,NA
ggplot2,fc50afd67579be2deaeae7c1008862fb,"Add support for the BrailleR package for creating descriptions of the plot when rendered (@​thomasp85, #4459)",1,154,FALSE,NA
ggplot2,9bbdd6da3c60a869c4f0472959f19c6f,"`coord_sf()` now has an argument `default_crs` that specifies the coordinate reference system (CRS) for non-sf layers and scale/coord limits. This argument defaults to `NULL`, which means non-sf layers are assumed to be in projected coordinates, as in prior ggplot2 versions. Setting `default_crs = sf::st_crs(4326)` provides a simple way to interpret x and y positions as longitude and latitude, regardless of the CRS used by `coord_sf()`. Authors of extension packages implementing `stat_sf()`-like functionality are encouraged to look at the source code of `stat_sf()`'s `compute_group()` function to see how to provide scale-limit hints to `coord_sf()` (@​clauswilke, #3659).",1,155,FALSE,NA
ggplot2,20a10e28d65a6bbba5929d910e8cd744,"`ggsave()` now uses ragg to render raster output if ragg is available. It also handles custom devices that sets a default unit (e.g. `ragg::agg_png`) correctly (@​thomasp85, #4388)",1,156,FALSE,NA
ggplot2,20b9afe29265a053330833b8152424e1,"`ggsave()` now returns the saved file location invisibly (#3379, @​eliocamp). Note that, as a side effect, an unofficial hack `<ggplot object> + ggsave()` no longer works (#4513).",1,157,FALSE,NA
ggplot2,7970ad41f481eb124a9f10c656f7d87e,"The scale arguments `limits`, `breaks`, `minor_breaks`, `labels`, `rescaler` and `oob` now accept purrr style lambda notation (@​teunbrand, #4427). The same is true for `as_labeller()` (and therefore also `labeller()`) (@​netique, #4188).",1,158,FALSE,NA
ggplot2,8e5311e2829492c54a4e13a98cc48580,"Manual scales now allow named vectors passed to `values` to contain fewer elements than existing in the data. Elements not present in values will be set to `NA` (@​thomasp85, #3451)",1,159,FALSE,NA
ggplot2,d5a95a080b3fbe43087f4e68c98efbc3,"Date and datetime position scales support out-of-bounds (oob) arguments to control how limits affect data outside those limits (@​teunbrand, #4199).",1,160,FALSE,NA
ggplot2,d4e141d8a82cc38f765ec80ecf84df52,"Fix a bug that `after_stat()` and `after_scale()` cannot refer to aesthetics if it's specified in the plot-global mapping (@​yutannihilation, #4260).",1,161,FALSE,NA
ggplot2,8d2aac803bef57ba6ed04a455d136b01,"Fix bug in `annotate_logticks()` that would cause an error when used together with `coord_flip()` (@​thomasp85, #3954)",1,162,FALSE,NA
ggplot2,1e9c2806b135f4ca377929e40cb307bb,"Fix a bug in `geom_abline()` that resulted in `intercept` not being subjected to the transformation of the y scale (@​thomasp85, #3741)",1,163,FALSE,NA
ggplot2,ff40856bda5d571e93310703ad39044b,"Extent the range of the line created by `geom_abline()` so that line ending is not visible for large linewidths (@​thomasp85, #4024)",1,164,FALSE,NA
ggplot2,8bfc80e7ddbc9bedee06505736bc9796,"Fix bug in `geom_dotplot()` where dots would be positioned wrong with `stackgroups = TRUE` (@​thomasp85, #1745)",1,165,FALSE,NA
ggplot2,49acb657f749a85286d6b64126f291ac,"Fix calculation of confidence interval for locfit smoothing in `geom_smooth()` (@​topepo, #3806)",1,166,FALSE,NA
ggplot2,823e552b580973f424435f214c2aba3f,"Fix bug in `geom_text()` where `""outward""` and `""inward""` justification for some `angle` values was reversed (@​aphalo, #4169, #4447)",1,167,FALSE,NA
ggplot2,06904a593b5e070901649ae3365f47c3,"`ggsave()` now sets the default background to match the fill value of the `plot.background` theme element (@​karawoo, #4057)",1,168,FALSE,NA
ggplot2,d29f51bba8afa88449996adaf63e5be2,"It is now deprecated to specify `guides(<scale> = FALSE)` or `scale_*(guide = FALSE)` to remove a guide. Please use `guides(<scale> = ""none"")` or `scale_*(guide = ""none"")` instead (@​yutannihilation, #4097)",1,169,FALSE,NA
ggplot2,dd8d1a47ead5258edeed44fec28cf740,"Fix a bug in `guide_bins()` where keys would disappear if the guide was reversed (@​thomasp85, #4210)",1,170,FALSE,NA
ggplot2,4d62c8f0bdc01228b485e826c8033a5a,"Fix bug in `guide_coloursteps()` that would repeat the terminal bins if the breaks coincided with the limits of the scale (@​thomasp85, #4019)",1,171,FALSE,NA
ggplot2,a97e07f60ac3453a94aec5a0cf3803f2,"Make sure that default labels from default mappings doesn't overwrite default labels from explicit mappings (@​thomasp85, #2406)",1,172,FALSE,NA
ggplot2,80e1d2218882f6b37c03efe591ab6e1e,"Fix bug in `labeller()` where parsing was turned off if `.multiline = FALSE` (@​thomasp85, #4084)",1,173,FALSE,NA
ggplot2,52af2142fe7b233c56435a0816b3846c,"Make sure `label_bquote()` has access to the calling environment when evaluating the labels (@​thomasp85, #4141)",1,174,FALSE,NA
ggplot2,178d3251ab42ca014ceff54ce776683d,"Fix a bug in the layer implementation that introduced a new state after the first render which could lead to a different look when rendered the second time (@​thomasp85, #4204)",1,175,FALSE,NA
ggplot2,5dc956ffdc2168e2abff850bc4c5c3b4,"Fix a bug in legend justification where justification was lost of the legend dimensions exceeded the available size (@​thomasp85, #3635)",1,176,FALSE,NA
ggplot2,bc9ed73f5f2630765b862c8419780248,"Fix a bug in `position_dodge2()` where `NA` values in thee data would cause an error (@​thomasp85, #2905)",1,177,FALSE,NA
ggplot2,1e8eb9c0a0e1e7f97643a6f26c53f797,"Make sure `position_jitter()` creates the same jittering independent of whether it is called by name or with constructor (@​thomasp85, #2507)",1,178,FALSE,NA
ggplot2,a23c841a93d06b7528658c0eda64ce16,"Fix a bug in `position_jitter()` where different jitters would be applied to different position aesthetics of the same axis (@​thomasp85, #2941)",1,179,FALSE,NA
ggplot2,d567b991d9cb6d0166cf80539de7b1bb,"Fix a bug in `qplot()` when supplying `c(NA, NA)` as axis limits (@​thomasp85, #4027)",1,180,FALSE,NA
ggplot2,f1d896d4d80ef9e397dbc8ce8e26dea3,"Remove cross-inheritance of default discrete colour/fill scales and check the type and aesthetic of function output if `type` is a function (@​thomasp85, #4149)",1,181,FALSE,NA
ggplot2,df9e59d2e37a7995b5035af83070e924,"Fix bug in `scale_[x|y]_date()` where custom breaks functions that resulted in fractional dates would get misaligned (@​thomasp85, #3965)",1,182,FALSE,NA
ggplot2,73296439cdae1663115ed04a5c8414d1,"Fix bug in `scale_[x|y]_datetime()` where a specified timezone would be ignored by the scale (@​thomasp85, #4007)",1,183,FALSE,NA
ggplot2,674b090f5cbeb43025c582254acef04b,"Fix issue in `sec_axis()` that would throw warnings in the absence of any secondary breaks (@​thomasp85, #4368)",1,184,FALSE,NA
ggplot2,d5e44ed7a4751c1327b9e74225a4dae1,`stat_bin()`'s computed variable `width` is now documented (#3522).,1,185,FALSE,NA
ggplot2,5d01e1ea8f25d29f55ee65f871d43dc7,"`stat_count()` now computes width based on the full dataset instead of per group (@​thomasp85, #2047)",1,186,FALSE,NA
ggplot2,39f6666aa63d762c5f89e1eeb8bef472,"Extended `stat_ecdf()` to calculate the cdf from either x or y instead from y only (@​jgjl, #4005)",1,187,FALSE,NA
ggplot2,d4aa64f1ad00cb953bc8396cda95a409,"Fix a bug in `stat_summary_bin()` where one more than the requested number of bins would be created (@​thomasp85, #3824)",1,188,FALSE,NA
ggplot2,8849de86558d537692b509ea914102c8,"Only drop groups in `stat_ydensity()` when there are fewer than two data points and throw a warning (@​andrewwbutler, #4111).",1,189,FALSE,NA
ggplot2,3d8cdaefe3e1e5a8fc052e883019ed3d,"Fixed a bug in strip assembly when theme has `strip.text = element_blank()` and plots are faceted with multi-layered strips (@​teunbrand, #4384).",1,190,FALSE,NA
ggplot2,b676bf1c0b6c3113fa5a57e38381a129,"Using `theme(aspect.ratio = ...)` together with free space in `facet_grid()` now correctly throws an error (@​thomasp85, #3834)",1,191,FALSE,NA
ggplot2,ec4586d3a87c3296e5f13f0616e9b85f,"Fixed a bug in `labeller()` so that `.default` is passed to `as_labeller()` when labellers are specified by naming faceting variables. (@​waltersom, #4031)",1,192,FALSE,NA
ggplot2,440f9d2c8bc9a4ed6db494d48546e05c,"Updated style for example code (@​rjake, #4092)",1,193,FALSE,NA
ggplot2,5e71c04f2fc96746d68350761fed98bf,ggplot2 now requires R \>= 3.3 (#4247).,1,194,FALSE,NA
ggplot2,415f6d0ef0aca371892c36251615e44d,"ggplot2 now uses `rlang::check_installed()` to check if a suggested package is installed, which will offer to install the package before continuing (#4375, 1)",1,195,FALSE,NA
ggplot2,660fea17fb808832f2f022d779020d28,"Improved error with hint when piping a `ggplot` object into a facet function (#4379, @​mitchelloharawild).",1,196,FALSE,NA
ggplot2,72305a9a926d9e030a47f9c558526469,"Update the ggplot2 licence to an MIT license (#4231, #4232, #4233, and #4281)",1,197,FALSE,NA
ggplot2,4e50e819833824238fb17fdfdd8656fb,Use vdiffr conditionally so ggplot2 can be tested on systems without vdiffr,1,198,FALSE,NA
ggplot2,04889a81753f594707b4aba3decf116f,Update tests to work with the new `all.equal()` defaults in R \>4.0.3,1,199,FALSE,NA
ggplot2,d7a7c48e993a24e5096a9759673a27a3,"Fixed a bug that `guide_bins()` mistakenly ignore `override.aes` argument (@​yutannihilation, #4085).",1,200,FALSE,NA
ggplot2,dfd66fc944420942b74d396a5c5bf166,"Added an `outside` option to `annotation_logticks()` that places tick marks outside of the plot bounds. (#3783, @​kbodwin)",1,201,FALSE,NA
ggplot2,19341595f3b8c237c36afa09710b2923,"`annotation_raster()` adds support for native rasters. For large rasters, native rasters render significantly faster than arrays (@​kent37, #3388)",1,202,FALSE,NA
ggplot2,1a2dda057c0020396b880b809ef3db7e,"Facet strips now have dedicated position-dependent theme elements (`strip.text.x.top`, `strip.text.x.bottom`, `strip.text.y.left`, `strip.text.y.right`) that inherit from `strip.text.x` and `strip.text.y`, respectively. As a consequence, some theme stylings now need to be applied to the position-dependent elements rather than to the parent elements. This change was already introduced in ggplot2 3.3.0 but not listed in the changelog. (@​thomasp85, #3683)",1,203,FALSE,NA
ggplot2,7b9ff374e46a21cb3a10959a4a39ac01,"Facets now handle layers containing no data (@​yutannihilation, #3853).",1,204,FALSE,NA
ggplot2,aa6a0e209faf041a74805d32fc61b223,"A newly added geom `geom_density_2d_filled()` and associated stat `stat_density_2d_filled()` can draw filled density contours (@​clauswilke, #3846).",1,205,FALSE,NA
ggplot2,8f354262be5cd1ed2a8c24fbdf276aea,"A newly added `geom_function()` is now recommended to use in conjunction with/instead of `stat_function()`. In addition, `stat_function()` now works with transformed y axes, e.g. `scale_y_log10()`, and in plots containing no other data or layers (@​clauswilke, #3611, #3905, #3983).",1,206,FALSE,NA
ggplot2,18e520d8dc7a28a3a614dfca60fa0bc9,"Fixed a bug in `geom_sf()` that caused problems with legend-type autodetection (@​clauswilke, #3963).",1,207,FALSE,NA
ggplot2,226edc9a2f3391ada8b975e917aa4645,"Support graphics devices that use the `file` argument instead of `fileneame` in `ggsave()` (@​bwiernik, #3810)",1,208,FALSE,NA
ggplot2,410f4544ac80652e72887ae302af7d67,"Default discrete color scales are now configurable through the `options()` of `ggplot2.discrete.colour` and `ggplot2.discrete.fill`. When set to a character vector of colour codes (or list of character vectors) with sufficient length, these colours are used for the default scale. See `help(scale_colour_discrete)` for more details and examples (@​cpsievert, #3833).",1,209,FALSE,NA
ggplot2,f319a31c1f6627ed72634887fa0cc7a2,"Default continuous colour scales (i.e., the `options()` `ggplot2.continuous.colour` and `ggplot2.continuous.fill`, which inform the `type` argument of `scale_fill_continuous()` and `scale_colour_continuous()`) now accept a function, which allows more control over these default `continuous_scale()`s (@​cpsievert, #3827).",1,210,FALSE,NA
ggplot2,05ce9220be569b337354be2640c446aa,"A bug was fixed in `stat_contour()` when calculating breaks based on the `bins` argument (@​clauswilke, #3879, #4004).",1,211,FALSE,NA
ggplot2,8bdb9f2fbec79664050f405ef695bb4d,"Data columns can now contain `Vector` S4 objects, which are widely used in the Bioconductor project. (@​teunbrand, #3837)",1,212,FALSE,NA
ggplot2,86159a77f177014d5d6e0fcc440f0ba8,"The `panel_params` field in the `Layout` now contains a list of list of `ViewScale` objects, describing the trained coordinate system scales, instead of the list object used before. Any extensions that use this field will likely break, as will unit tests that checks aspects of this.",1,213,FALSE,NA
ggplot2,2da80cc9308114bf674836416fa65afb,"`element_text()` now issues a warning when vectorized arguments are provided, as in `colour = c(""red"", ""green"", ""blue"")`. Such use is discouraged and not officially supported (@​clauswilke, #3492).",1,214,FALSE,NA
ggplot2,21cc912082712c1420a3f9be5a1b68df,"Changed `theme_grey()` setting for legend key so that it creates no border (`NA`) rather than drawing a white one. (@​annennenne, #3180)",1,215,FALSE,NA
ggplot2,75e3d96e2c2d3bbf6b0b13567f0b0b33,"`geom_ribbon()` now draws separate lines for the upper and lower intervals if `colour` is mapped. Similarly, `geom_area()` and `geom_density()` now draw the upper lines only in the same case by default. If you want old-style full stroking, use `outline.type = ""full""` (@​yutannihilation, #3503 / @​thomasp85, #3708).",1,216,FALSE,NA
ggplot2,f14af4766b126583f308c8c357bfcc10,"The evaluation time of aesthetics can now be controlled to a finer degree. `after_stat()` supersedes the use of `stat()` and `..var..`-notation, and is joined by `after_scale()` to allow for mapping to scaled aesthetic values. Remapping of the same aesthetic is now supported with `stage()`, so you can map a data variable to a stat aesthetic, and remap the same aesthetic to something else after statistical transformation (@​thomasp85, #3534)",1,217,FALSE,NA
ggplot2,4f47836ce9487f10e038d7c68fe6e552,"All `coord_*()` functions with `xlim` and `ylim` arguments now accept vectors with `NA` as a placeholder for the minimum or maximum value (e.g., `ylim = c(0, NA)` would zoom the y-axis from 0 to the maximum value observed in the data). This mimics the behaviour of the `limits` argument in continuous scale functions (@​paleolimbot, #2907).",1,218,FALSE,NA
ggplot2,54d7c2bb9f9753c4f6a345465dca97a5,"Allowed reversing of discrete scales by re-writing `get_limits()` (@​AnneLyng, #3115)",1,219,FALSE,NA
ggplot2,e88c07d218da0329f1ac0126c8037eff,"All geoms and stats that had a direction (i.e. where the x and y axes had different interpretation), can now freely choose their direction, instead of relying on `coord_flip()`. The direction is deduced from the aesthetic mapping, but can also be specified directly with the new `orientation` argument (@​thomasp85, #3506).",1,220,FALSE,NA
ggplot2,246ce82ac3830a78b1f62600f7d7dc5d,"Position guides can now be customized using the new `guide_axis()`, which can be passed to position `scale_*()` functions or via `guides()`. The new axis guide (`guide_axis()`) comes with arguments `check.overlap` (automatic removal of overlapping labels), `angle` (easy rotation of axis labels), and `n.dodge` (dodge labels into multiple rows/columns) (@​paleolimbot, #3322).",1,221,FALSE,NA
ggplot2,f5bd4cf1744a05b11d7f0693367ce450,"A new scale type has been added, that allows binning of aesthetics at the scale level. It has versions for both position and non-position aesthetics and comes with two new guides (`guide_bins` and `guide_coloursteps`) (@​thomasp85, #3096)",1,222,FALSE,NA
ggplot2,f2f99efc1ea9a70b6acf4cead5afb482,"`scale_x_continuous()` and `scale_y_continuous()` gains an `n.breaks` argument guiding the number of automatic generated breaks (@​thomasp85, #3102)",1,223,FALSE,NA
ggplot2,9e0458651e4426fb5030caf865c5ada2,"Added `stat_contour_filled()` and `geom_contour_filled()`, which compute and draw filled contours of gridded data (@​paleolimbot, #3044). `geom_contour()` and `stat_contour()` now use the isoband package to compute contour lines. The `complete` parameter (which was undocumented and has been unused for at least four years) was removed (@​paleolimbot, #3044).",1,224,FALSE,NA
ggplot2,7ec3d72ab215a6263b44b23e64a4c264,"Themes have gained two new parameters, `plot.title.position` and `plot.caption.position`, that can be used to customize how plot title/subtitle and plot caption are positioned relative to the overall plot (@​clauswilke, #3252).",1,225,FALSE,NA
ggplot2,fdc3bc82170d5c57763c105c507ec1ac,"`Geom` now gains a `setup_params()` method in line with the other ggproto classes (@​thomasp85, #3509)",1,226,FALSE,NA
ggplot2,c3daaf393677b84b8abc9da9c2bc95fe,"The newly added function `register_theme_elements()` now allows developers of extension packages to define their own new theme elements and place them into the ggplot2 element tree (@​clauswilke, #2540).",1,227,FALSE,NA
ggplot2,e363701be71b9294b5f8ff7d6abe9362,"`coord_trans()` now draws second axes and accepts `xlim`, `ylim`, and `expand` arguments to bring it up to feature parity with `coord_cartesian()`. The `xtrans` and `ytrans` arguments that were deprecated in version 1.0.1 in favour of `x` and `y` were removed (@​paleolimbot, #2990).",1,228,FALSE,NA
ggplot2,c65c1da72043a48f705676b7361e9fa3,"`coord_trans()` now calculates breaks using the expanded range (previously these were calculated using the unexpanded range, which resulted in differences between plots made with `coord_trans()` and those made with `coord_cartesian()`). The expansion for discrete axes in `coord_trans()` was also updated such that it behaves identically to that in `coord_cartesian()` (@​paleolimbot, #3338).",1,229,FALSE,NA
ggplot2,40b394239d6928c269c1bce6eb134d6b,`expand_scale()` was deprecated in favour of `expansion()` for setting the `expand` argument of `x` and `y` scales (@​paleolimbot).,1,230,FALSE,NA
ggplot2,1e1fe1c5df7f60eb641a9720a53a38d8,"`geom_abline()`, `geom_hline()`, and `geom_vline()` now issue more informative warnings when supplied with set aesthetics (i.e., `slope`, `intercept`, `yintercept`, and/or `xintercept`) and mapped aesthetics (i.e., `data` and/or `mapping`).",1,231,FALSE,NA
ggplot2,ae648a8fad35892b949a77cb2e2fb29e,"Fix a bug in `geom_raster()` that squeezed the image when it went outside scale limits (#3539, @​thomasp85)",1,232,FALSE,NA
ggplot2,022fa2b1d2c398836df72dd08505ce51,"`geom_sf()` now determines the legend type automatically (@​microly, #3646).",1,233,FALSE,NA
ggplot2,566ea1472f8edf720229ff7b4c5fb600,"`geom_sf()` now removes rows that can't be plotted due to `NA` aesthetics (#3546, @​thomasp85)",1,234,FALSE,NA
ggplot2,1fb0b758a6bf2286407134f0996f2a4e,"`geom_sf()` now applies alpha to linestring geometries (#3589, @​yutannihilation).",1,235,FALSE,NA
ggplot2,db0a2f619d007165ae5d3cf1e4ea7c32,"`gg_dep()` was deprecated (@​perezp44, #3382).",1,236,FALSE,NA
ggplot2,eddcd45cbe6daf9c8799554b4fbf9b14,"Added function `ggplot_add.by()` for lists created with `by()`, allowing such lists to be added to ggplot objects (#2734, @​Maschette)",1,237,FALSE,NA
ggplot2,cbd628caa2c6b2418ed3f9e3b057245c,"ggplot2 no longer depends on reshape2, which means that it no longer (recursively) needs plyr, stringr, or stringi packages.",1,238,FALSE,NA
ggplot2,56805ce33ea0ae8828239b51b64d7ea9,"Increase the default `nbin` of `guide_colourbar()` to place the ticks more precisely (#3508, @​yutannihilation).",1,239,FALSE,NA
ggplot2,e13e2b96f21f257d139d922f8cd9cb95,"`manual_scale()` now matches `values` with the order of `breaks` whenever `values` is an unnamed vector. Previously, unnamed `values` would match with the limits of the scale and ignore the order of any `breaks` provided. Note that this may change the appearance of plots that previously relied on the unordered behaviour (#2429, @​idno0001).",1,240,FALSE,NA
ggplot2,82e753e047c523f2984f6e57d48b091b,"`scale_manual_*(limits = ...)` now actually limits the scale (#3262, @​yutannihilation).",1,241,FALSE,NA
ggplot2,443a8271319074716f934163c185e509,"Fix a bug when `show.legend` is a named logical vector (#3461, @​yutannihilation).",1,242,FALSE,NA
ggplot2,9551b98356f9b5d30feb1d7f54f8d971,"Added weight aesthetic option to `stat_density()` and made scaling of weights the default (@​annennenne, #2902)",1,243,FALSE,NA
ggplot2,2abae127d41776010224c30b16cc5920,"`stat_density2d()` can now take an `adjust` parameter to scale the default bandwidth. (#2860, @​haleyjeppson)",1,244,FALSE,NA
ggplot2,783637204b773767dd32aa4078f3a0bc,"`stat_smooth()` uses `REML` by default, if `method = ""gam""` and `gam`'s method is not specified (@​ikosmidis, #2630).",1,245,FALSE,NA
ggplot2,1d76241717f0d9af7b1d02234377a0d0,"stacking text when calculating the labels and the y axis with `stat_summary()` now works (@​ikosmidis, #2709)",1,246,FALSE,NA
ggplot2,39e80c2461c2efc6dfdd54f771bcf8b6,"`stat_summary()` and related functions now support rlang-style lambda functions (#3568, @​dkahle).",1,247,FALSE,NA
ggplot2,d237e0b3dae73b8f53e7b153d564fe20,"The data mask pronoun, `.data`, is now stripped from default labels.",1,248,FALSE,NA
ggplot2,6439053f342203b6d0986e92ac95a4ad,"Addition of partial themes to plots has been made more predictable; stepwise addition of individual partial themes is now equivalent to addition of multple theme elements at once (@​clauswilke, #3039).",1,249,FALSE,NA
ggplot2,e29013e23be8310dd7cae0e16c8b5c37,"Facets now don't fail even when some variable in the spec are not available in all layers (@​yutannihilation, #2963).",1,250,FALSE,NA
ggplot2,80845903f4df63b3d8b666430d146c76,`position_stack()` no longer changes the order of the input data. Changes to the internal behaviour of `geom_ribbon()` made this reordering problematic with ribbons that spanned `y = 0` (#3471),1,251,FALSE,NA
ggplot2,46b2b9544206a4d5284104db62b8ff59,"Using `qplot()` with a single positional aesthetic will no longer title the non-specified scale as `""NULL""` (#3473)",1,252,FALSE,NA
ggplot2,a603f6fb401fa42571fdeb35624be87f,Fixes unit tests for sf graticule labels caused by changes to sf,1,253,FALSE,NA
ggplot2,e8cbbd0c63de85a0abee752f2efbd5bf,"Two patches (#2996 and #3050) fixed minor rendering problems. In most cases, the visual changes are so subtle that they are difficult to see with the naked eye. However, these changes are detected by the vdiffr package, and therefore any package developers who use vdiffr to test for visual correctness of ggplot2 plots will have to regenerate all reference images.",1,254,FALSE,NA
ggplot2,e0705b5af2d6f333977ade7eb657dcdb,"In some cases, ggplot2 now produces a warning or an error for code that previously produced plot output. In all these cases, the previous plot output was accidental, and the plotting code uses the ggplot2 API in a way that would lead to undefined behavior. Examples include a missing `group` aesthetic in `geom_boxplot()` (#3316), annotations across multiple facets (#3305), and not using aesthetic mappings when drawing ribbons with `geom_ribbon()` (#3318).",1,255,FALSE,NA
ggplot2,ecce6edc4138df94b2b988d7b986006c,"This release includes a range of internal changes that speeds up plot generation. None of the changes are user facing and will not break any code, but in general ggplot2 should feel much faster. The changes includes, but are not limited to:",1,256,FALSE,NA
ggplot2,ecce6edc4138df94b2b988d7b986006c,• Caching ascent and descent dimensions of text to avoid recalculating it for every title.,2,257,FALSE,"This release includes a range of internal changes that speeds up plot generation. None of the changes are user facing and will not break any code, but in general ggplot2 should feel much faster. The changes includes, but are not limited to:"
ggplot2,ecce6edc4138df94b2b988d7b986006c,• Using a faster data.frame constructor as well as faster indexing into data.frames,2,258,FALSE,"This release includes a range of internal changes that speeds up plot generation. None of the changes are user facing and will not break any code, but in general ggplot2 should feel much faster. The changes includes, but are not limited to:"
ggplot2,ecce6edc4138df94b2b988d7b986006c,"• Removing the plyr dependency, replacing plyr functions with faster equivalents.",2,259,FALSE,"This release includes a range of internal changes that speeds up plot generation. None of the changes are user facing and will not break any code, but in general ggplot2 should feel much faster. The changes includes, but are not limited to:"
ggplot2,69869612f13125d961858f624f141235,"`geom_polygon()` can now draw polygons with holes using the new `subgroup` aesthetic. This functionality requires R 3.6.0 (@​thomasp85, #3128)",1,260,FALSE,NA
ggplot2,4ac83b33d39be414c2b8dd42567d91b6,"Aesthetic mappings now accept functions that return `NULL` (@​yutannihilation, #2997).",1,261,FALSE,NA
ggplot2,81300238d7a589fab2cc32fd979bc6de,"`stat_function()` now accepts rlang/purrr style anonymous functions for the `fun` parameter (@​dkahle, #3159).",1,262,FALSE,NA
ggplot2,9f3df778982a9633178a49b5a6e5164c,"`geom_rug()` gains an ""outside"" option to allow for moving the rug tassels to outside the plot area (@​njtierney, #3085) and a `length` option to allow for changing the length of the rug lines (@​daniel-wells, #3109).",1,263,FALSE,NA
ggplot2,759c50ef4658418f67e006a5ddc0cf0c,"All geoms now take a `key_glyph` paramter that allows users to customize how legend keys are drawn (@​clauswilke, #3145). In addition, a new key glyph `timeseries` is provided to draw nice legends for time series (@​mitchelloharawild, #3145).",1,264,FALSE,NA
ggplot2,281ae3b113fab57514ca0e3ed537e7c8,"Layers now have a new member function `setup_layer()` which is called at the very beginning of the plot building process and which has access to the original input data and the plot object being built. This function allows the creation of custom layers that autogenerate aesthetic mappings based on the input data or that filter the input data in some form. For the time being, this feature is not exported, but it has enabled the development of a new layer type, `layer_sf()` (see next item). Other special-purpose layer types may be added in the future (@​clauswilke, #2872).",1,265,FALSE,NA
ggplot2,87c37c86a2fbd2c0f677484519410b38,"A new layer type `layer_sf()` can auto-detect and auto-map sf geometry columns in the data. It should be used by extension developers who are writing new sf-based geoms or stats (@​clauswilke, #3232).",1,266,FALSE,NA
ggplot2,030c3a225ed5bc25d6716d4a155cca3e,"`x0` and `y0` are now recognized positional aesthetics so they will get scaled if used in extension geoms and stats (@​thomasp85, #3168)",1,267,FALSE,NA
ggplot2,eac5fb08023b665d516fa4ab18087f5a,"Continuous scale limits now accept functions which accept the default limits and return adjusted limits. This makes it possible to write a function that e.g. ensures the limits are always a multiple of 100, regardless of the data (@​econandrew, #2307).",1,268,FALSE,NA
ggplot2,3fcf716b78faa8450598dfabb2506b19,"`cut_width()` now accepts `...` to pass further arguments to `base::cut.default()` like `cut_number()` and `cut_interval()` already did (@​cderv, #3055)",1,269,FALSE,NA
ggplot2,44dbbf60861f442403be7a559f9c51b6,"`coord_map()` now can have axes on the top and right (@​karawoo, #3042).",1,270,FALSE,NA
ggplot2,67e8a0e735d316c494de35b0dd9b2666,"`coord_polar()` now correctly rescales the secondary axis (@​linzi-sg, #3278)",1,271,FALSE,NA
ggplot2,95d172e8a4748372cbeb16847c9edf6e,"`coord_sf()`, `coord_map()`, and `coord_polar()` now squash `-Inf` and `Inf` into the min and max of the plot (@​yutannihilation, #2972).",1,272,FALSE,NA
ggplot2,57528a95ed1e4280237b701475bfe910,"`coord_sf()` graticule lines are now drawn in the same thickness as panel grid lines in `coord_cartesian()`, and seting panel grid lines to `element_blank()` now also works in `coord_sf()` (@​clauswilke, #2991, #2525).",1,273,FALSE,NA
ggplot2,47013cb0d8580418a4e732251d13741d,"`economics` data has been regenerated. This leads to some changes in the values of all columns (especially in `psavert`), but more importantly, strips the grouping attributes from `economics_long`.",1,274,FALSE,NA
ggplot2,412cfeb85dc65bab6dd38508845c69c1,"`element_line()` now fills closed arrows (@​yutannihilation, #2924).",1,275,FALSE,NA
ggplot2,4b9ec3a8993bd52311532a6ac8301b63,"Facet strips on the left side of plots now have clipping turned on, preventing text from running out of the strip and borders from looking thicker than for other strips (@​karawoo, #2772 and #3061).",1,276,FALSE,NA
ggplot2,938c1e5d64a7fc14cdc20cea86378833,"ggplot2 now works in Turkish locale (@​yutannihilation, #3011).",1,277,FALSE,NA
ggplot2,a63fa3a4bca8c8094b3da34654427613,"Clearer error messages for inappropriate aesthetics (@​clairemcwhite, #3060).",1,278,FALSE,NA
ggplot2,3a7a284ee718bc37790296284dcb38b1,"ggplot2 no longer attaches any external packages when using functions that depend on packages that are suggested but not imported by ggplot2. The affected functions include `geom_hex()`, `stat_binhex()`, `stat_summary_hex()`, `geom_quantile()`, `stat_quantile()`, and `map_data()` (@​clauswilke, #3126).",1,279,FALSE,NA
ggplot2,d0e7d18679a9cb968414e35ecf43739d,"`geom_area()` and `geom_ribbon()` now sort the data along the x-axis in the `setup_data()` method rather than as part of `draw_group()` (@​thomasp85, #3023)",1,280,FALSE,NA
ggplot2,367444c7b85c105ef6655ad4f37c58dc,"`geom_hline()`, `geom_vline()`, and `geom_abline()` now throw a warning if the user supplies both an `xintercept`, `yintercept`, or `slope` value and a mapping (@​RichardJActon, #2950).",1,281,FALSE,NA
ggplot2,53af50fbb0e8381e2dfeff31e6020351,"`geom_rug()` now works with `coord_flip()` (@​has2k1, #2987).",1,282,FALSE,NA
ggplot2,cddab0942a0419e0dd47be49b2dc2202,"`geom_violin()` no longer throws an error when quantile lines fall outside the violin polygon (@​thomasp85, #3254).",1,283,FALSE,NA
ggplot2,aac0540f48e4de6c87b9466d4b10a0f0,"`guide_legend()` and `guide_colorbar()` now use appropriate spacing between legend key glyphs and legend text even if the legend title is missing (@​clauswilke, #2943).",1,284,FALSE,NA
ggplot2,d073d8dd59e18a8e3d19f47eb92c6534,"Default labels are now generated more consistently; e.g., symbols no longer get backticks, and long expressions are abbreviated with `...` (@​yutannihilation, #2981).",1,285,FALSE,NA
ggplot2,d63154bd89aa7cbe9324b13535034217,"All-`Inf` layers are now ignored for picking the scale (@​yutannihilation, #3184).",1,286,FALSE,NA
ggplot2,e9bf0e981879384a8dce5e37b334f93a,"Diverging Brewer colour palette now use the correct mid-point colour (@​dariyasydykova, #3072).",1,287,FALSE,NA
ggplot2,42825e879924353ddf875765667a6daf,"`scale_color_continuous()` now points to `scale_colour_continuous()` so that it will handle `type = ""viridis""` as the documentation states (@​hlendway, #3079).",1,288,FALSE,NA
ggplot2,4262a1a1c257d63352665822e827e6fc,"`scale_shape_identity()` now works correctly with `guide = ""legend""` (1, #3029)",1,289,FALSE,NA
ggplot2,9f27666ad7534f8dd342e84181656dd1,"`scale_continuous` will now draw axis line even if the length of breaks is 0 (@​thomasp85, #3257)",1,290,FALSE,NA
ggplot2,e05ba0d31a5a1c237e9996f334610c5d,`stat_bin()` will now error when the number of bins exceeds 1e6 to avoid accidentally freezing the user session (@​thomasp85).,1,291,FALSE,NA
ggplot2,91f81883a734fa25fe8534a61f2f6725,"`sec_axis()` now places ticks accurately when using nonlinear transformations (@​dpseidel, #2978).",1,292,FALSE,NA
ggplot2,450810bcfba10c9d8f3caed4865277cc,"`facet_wrap()` and `facet_grid()` now automatically remove NULL from facet specs, and accept empty specs (@​yutannihilation, #3070, #2986).",1,293,FALSE,NA
ggplot2,390de757f7396521a02c73abac2d6ef3,`stat_bin()` now handles data with only one unique value (@​yutannihilation #3047).,1,294,FALSE,NA
ggplot2,4be17bfe0a5076e1edbb7b6e64c92a0b,"`sec_axis()` now accepts functions as well as formulas (@​yutannihilation, #3031).",1,295,FALSE,NA
ggplot2,7d7919e4ae05ca445344f9ee5b5fbeda,"New theme elements allowing different ticks lengths for each axis. For instance, this can be used to have inwards ticks on the x-axis (`axis.ticks.length.x`) and outwards ticks on the y-axis (`axis.ticks.length.y`) (@​pank, #2935).",1,296,FALSE,NA
ggplot2,ef408c8f44ee93aae6677dd4e22567fc,"The arguments of `Stat*$compute_layer()` and `Position*$compute_layer()` are now renamed to always match the ones of `Stat$compute_layer()` and `Position$compute_layer()` (@​yutannihilation, #3202).",1,297,FALSE,NA
ggplot2,2f5778d296b8170bec04041ea23b2b27,"`geom_*()` and `stat_*()` now accepts purrr-style lambda notation (@​yutannihilation, #3138).",1,298,FALSE,NA
ggplot2,18da2e19b54dae3e9d6fcb29b434023d,"`geom_tile()` and `geom_rect()` now draw rectangles without notches at the corners. The style of the corner can be controlled by `linejoin` parameters (@​yutannihilation, #3050).",1,299,FALSE,NA
ggplot2,6de29291f9e1aaf0e89fe3fee851495f,"In non-user-facing internal code (specifically in the `aes()` function and in the `aesthetics` argument of scale functions), ggplot2 now always uses the British spelling for aesthetics containing the word ""colour"". When users specify a ""color"" aesthetic it is automatically renamed to ""colour"". This renaming is also applied to non-standard aesthetics that contain the word ""color"". For example, ""point_color"" is renamed to ""point_colour"". This convention makes it easier to support both British and American spelling for novel, non-standard aesthetics, but it may require some adjustment for packages that have previously introduced non-standard color aesthetics using American spelling. A new function `standardise_aes_names()` is provided in case extension writers need to perform this renaming in their own code (@​clauswilke, #2649).",1,300,FALSE,NA
ggplot2,358d05aeebf1b4c8ce96e2aca69cd7ee,"Functions that generate other functions (closures) now force the arguments that are used from the generated functions, to avoid hard-to-catch errors. This may affect some users of manual scales (such as `scale_colour_manual()`, `scale_fill_manual()`, etc.) who depend on incorrect behavior (@​krlmlr, #2807).",1,301,FALSE,NA
ggplot2,699e718977d25f8cb974d68300fbc297,"`Coord` objects now have a function `backtransform_range()` that returns the panel range in data coordinates. This change may affect developers of custom coords, who now should implement this function. It may also affect developers of custom geoms that use the `range()` function. In some applications, `backtransform_range()` may be more appropriate (@​clauswilke, #2821).",1,302,FALSE,NA
ggplot2,0adef4844a269134ff994d8e2770656c,"`coord_sf()` has much improved customization of axis tick labels. Labels can now be set manually, and there are two new parameters, `label_graticule` and `label_axes`, that can be used to specify which graticules to label on which side of the plot (@​clauswilke, #2846, #2857, #2881).",1,303,FALSE,NA
ggplot2,bcb98cf76b7b48ac1fa72018f0fc8e8b,"Two new geoms `geom_sf_label()` and `geom_sf_text()` can draw labels and text on sf objects. Under the hood, a new `stat_sf_coordinates()` calculates the x and y coordinates from the coordinates of the sf geometries. You can customize the calculation method via `fun.geometry` argument (@​yutannihilation, #2761).",1,304,FALSE,NA
ggplot2,76c825240d3b8b2ad978b328cc5b5502,"`benchplot()` now uses tidy evaluation (@​dpseidel, #2699).",1,305,FALSE,NA
ggplot2,b18fae57d165b4961a081f31cc3cb6af,"The error message in `compute_aesthetics()` now only provides the names of aesthetics with mismatched lengths, rather than all aesthetics (@​karawoo, #2853).",1,306,FALSE,NA
ggplot2,9a4b7df5d8f594086542aac2497cd7d6,"For faceted plots, data is no longer internally reordered. This makes it safer to feed data columns into `aes()` or into parameters of geoms or stats. However, doing so remains discouraged (@​clauswilke, #2694).",1,307,FALSE,NA
ggplot2,ad19ac9ac2ac8cf423e5954b572ba15f,"`coord_sf()` now also understands the `clip` argument, just like the other coords (@​clauswilke, #2938).",1,308,FALSE,NA
ggplot2,3024da6dcefa71ad05835dd8aad9c9f3,"`fortify()` now displays a more informative error message for `grouped_df()` objects when dplyr is not installed (@​jimhester, #2822).",1,309,FALSE,NA
ggplot2,dc6b9f6f87bdbf2f44b4a9a68316ad9f,"All `geom_*()` now display an informative error message when required aesthetics are missing (@​dpseidel, #2637 and #2706).",1,310,FALSE,NA
ggplot2,793e10be874d72c9b15798de97f21a60,"`geom_boxplot()` now understands the `width` parameter even when used with a non-standard stat, such as `stat_identity()` (@​clauswilke, #2893).",1,311,FALSE,NA
ggplot2,e8030ba33c25489494c4fb9bae1f4c17,"`geom_hex()` now understands the `size` and `linetype` aesthetics (@​mikmart, #2488).",1,312,FALSE,NA
ggplot2,5e161aa9b2e6bcd6297e841f53f97643,"`geom_hline()`, `geom_vline()`, and `geom_abline()` now work properly with `coord_trans()` (@​clauswilke, #2149, #2812).",1,313,FALSE,NA
ggplot2,d1474966d293bf7ebc8d20ede4a36db5,"`geom_text(..., parse = TRUE)` now correctly renders the expected number of items instead of silently dropping items that are empty expressions, e.g. the empty string """". If an expression spans multiple lines, we take just the first line and drop the rest. This same issue is also fixed for `geom_label()` and the axis labels for `geom_sf()` (@​slowkow, #2867).",1,314,FALSE,NA
ggplot2,affe03e290a88ce62a1b699b8b1a1dce,"`geom_sf()` now respects `lineend`, `linejoin`, and `linemitre` parameters for lines and polygons (@​alistaire47, #2826).",1,315,FALSE,NA
ggplot2,b1c25471da5e3e54874bd51a22c44be9,"`ggsave()` now exits without creating a new graphics device if previously none was open (@​clauswilke, #2363).",1,316,FALSE,NA
ggplot2,7dfbcfb220db01e0cb74f7e1f8a78c9d,"`labs()` now has named arguments `title`, `subtitle`, `caption`, and `tag`. Also, `labs()` now accepts tidyeval (@​yutannihilation, #2669).",1,317,FALSE,NA
ggplot2,a482d03a37bd8a64b26d47a279744b57,"`position_nudge()` is now more robust and nudges only in the direction requested. This enables, for example, the horizontal nudging of boxplots (@​clauswilke, #2733).",1,318,FALSE,NA
ggplot2,802f325f35a1a851d4ac3f9758faaf02,"`sec_axis()` and `dup_axis()` now return appropriate breaks for the secondary axis when applied to log transformed scales (@​dpseidel, #2729).",1,319,FALSE,NA
ggplot2,00b438dfa59626cd70c5e265e3b8eb42,"`sec_axis()` now works as expected when used in combination with tidy eval (@​dpseidel, #2788).",1,320,FALSE,NA
ggplot2,70475133315e9f17c7a63435b3baeab3,"`scale_*_date()`, `scale_*_time()` and `scale_*_datetime()` can now display a secondary axis that is a **one-to-one** transformation of the primary axis, implemented using the `sec.axis` argument to the scale constructor (@​dpseidel, #2244).",1,321,FALSE,NA
ggplot2,39a1c422ad67c5075108f860e65ca500,"`stat_contour()`, `stat_density2d()`, `stat_bin2d()`, `stat_binhex()` now calculate normalized statistics including `nlevel`, `ndensity`, and `ncount`. Also, `stat_density()` now includes the calculated statistic `nlevel`, an alias for `scaled`, to better match the syntax of `stat_bin()` (@​bjreisman, #2679).",1,322,FALSE,NA
ggplot2,eec5607ca1a2d1acc9dfd1a7ecdf15ad,"ggplot2 now supports/uses tidy evaluation (as described below). This is a major change and breaks a number of packages; we made this breaking change because it is important to make ggplot2 more programmable, and to be more consistent with the rest of the tidyverse. The best general (and detailed) introduction to tidy evaluation can be found in the meta programming chapters in Advanced R. The primary developer facing change is that `aes()` now contains quosures (expression + environment pairs) rather than symbols, and you'll need to take a different approach to extracting the information you need. A common symptom of this change are errors ""undefined columns selected"" or ""invalid 'type' (list) of argument"" (#2610). As in the previous version, constants (like `aes(x = 1)` or `aes(colour = ""smoothed"")`) are stored as is. In this version of ggplot2, if you need to describe a mapping in a string, use `quo_name()` (to generate single-line strings; longer expressions may be abbreviated) or `quo_text()` (to generate non-abbreviated strings that may span multiple lines). If you do need to extract the value of a variable instead use `rlang::eval_tidy()`. You may want to condition on `(packageVersion(""ggplot2"") <= ""2.2.1"")` so that your code can work with both released and development versions of ggplot2. We recognise that this is a big change and if you're not already familiar with rlang, there's a lot to learn. If you are stuck, or need any help, please reach out on https://community.rstudio.com.",1,323,FALSE,NA
ggplot2,a81ae764daf2ec59d626423086eb6ffc,"Error: Column `y` must be a 1d atomic vector or a list Internally, ggplot2 now uses `as.data.frame(tibble::as_tibble(x))` to convert a list into a data frame. This improves ggplot2's support for list-columns (needed for sf support), at a small cost: you can no longer use matrix-columns. Note that unlike tibble we still allow column vectors such as returned by `base::scale()` because of their widespread use.",1,324,FALSE,NA
ggplot2,573ecf24e84d9b7993e021dca3817b51,"Error: More than one expression parsed Previously `aes_string(x = c(""a"", ""b"", ""c""))` silently returned `aes(x = a)`. Now this is a clear error.",1,325,FALSE,NA
ggplot2,f915819803b3075dec4f6e801cee87e6,"Error: `data` must be uniquely named but has duplicate columns If layer data contains columns with identical names an error will be thrown. In earlier versions the first occurring column was chosen silently, potentially masking that the wrong data was chosen.",1,326,FALSE,NA
ggplot2,8165c53f401efa153748ca12906c5e38,Error: Aesthetics must be either length 1 or the same as the data Layers are stricter about the columns they will combine into a single data frame. Each aesthetic now must be either the same length as the data frame or a single value. This makes silent recycling errors much less likely.,1,327,FALSE,NA
ggplot2,12b4787867e162792d3bb38c777bf690,Error: `coord_*` doesn't support free scales Free scales only work with selected coordinate systems; previously you'd get an incorrect plot.,1,328,FALSE,NA
ggplot2,f0539f6298178b8e4a22cef40d0dcb95,"Error in f(...) : unused argument (range = c(0, 1)) This is because the `oob` argument to scale has been set to a function that only takes a single argument; it needs to take two arguments (`x`, and `range`).",1,329,FALSE,NA
ggplot2,4a5517ae4265f9b5251270a32e6393bf,"Error: unused argument (output) The function `guide_train()` now has an optional parameter `aesthetic` that allows you to override the `aesthetic` setting in the scale. To make your code work with the both released and development versions of ggplot2 appropriate, add `aesthetic = NULL` to the `guide_train()` method signature.",1,330,FALSE,NA
ggplot2,4a5517ae4265f9b5251270a32e6393bf,"```
# old
guide_train.legend <- function(guide, scale) {...}

# new 
guide_train.legend <- function(guide, scale, aesthetic = NULL) {...}
```",1,331,TRUE,NA
ggplot2,4a5517ae4265f9b5251270a32e6393bf,"Then, inside the function, replace `scale$aesthetics[1]`, `aesthetic %||% scale$aesthetics[1]`. (The %\|\|% operator is defined in the rlang package).",1,331,FALSE,NA
ggplot2,4a5517ae4265f9b5251270a32e6393bf,"```
# old
setNames(list(scale$map(breaks)), scale$aesthetics[1])

# new
setNames(list(scale$map(breaks)), aesthetic %||% scale$aesthetics[1])
```",1,332,TRUE,NA
ggplot2,78f4a2662f65af76697af0245ab4a71a,The long-deprecated `subset` argument to `layer()` has been removed.,1,333,FALSE,NA
ggplot2,ea9be6983e56964f0daf1b336acc0b2b,"`aes()` now supports quasiquotation so that you can use `!!`, `!!!`, and `:=`. This replaces `aes_()` and `aes_string()` which are now soft-deprecated (but will remain around for a long time).",1,334,FALSE,NA
ggplot2,d9491a83c557e597c6c741e3fd9b5b6e,"`facet_wrap()` and `facet_grid()` now support `vars()` inputs. Like `dplyr::vars()`, this helper quotes its inputs and supports quasiquotation. For instance, you can now supply faceting variables like this: `facet_wrap(vars(am, cyl))` instead of `facet_wrap(~am + cyl)`. Note that the formula interface is not going away and will not be deprecated. `vars()` is simply meant to make it easier to create functions around `facet_wrap()` and `facet_grid()`. The first two arguments of `facet_grid()` become `rows` and `cols` and now support `vars()` inputs. Note however that we took special care to ensure complete backward compatibility. With this change `facet_grid(vars(cyl), vars(am, vs))` is equivalent to `facet_grid(cyl ~ am + vs)`, and `facet_grid(cols = vars(am, vs))` is equivalent to `facet_grid(. ~ am + vs)`. One nice aspect of the new interface is that you can now easily supply names: `facet_grid(vars(Cylinder = cyl), labeller = label_both)` will give nice label titles to the facets. Of course, those names can be unquoted with the usual tidy eval syntax.",1,335,FALSE,NA
ggplot2,80fcaa013d70f3c6eea786912b7d2e84,ggplot2 now has full support for sf with `geom_sf()` and `coord_sf()`:,1,336,FALSE,NA
ggplot2,80fcaa013d70f3c6eea786912b7d2e84,"```
nc <- sf::st_read(system.file(""shape/nc.shp"", package = ""sf""), quiet = TRUE)
ggplot(nc) +
  geom_sf(aes(fill = AREA))
```",1,337,TRUE,NA
ggplot2,80fcaa013d70f3c6eea786912b7d2e84,"It supports all simple features, automatically aligns CRS across layers, sets up the correct aspect ratio, and draws a graticule.",1,337,FALSE,NA
ggplot2,85048bf9038256fccfcb1930894611b8,"ggplot2 now works on R 3.1 onwards, and uses the vdiffr package for visual testing.",1,338,FALSE,NA
ggplot2,07706ce0d1452cba43da570871a957cd,"In most cases, accidentally using `%>%` instead of `+` will generate an informative error (#2400).",1,339,FALSE,NA
ggplot2,1c99c55908e5366ec8f31b9d90dbce6e,"New syntax for calculated aesthetics. Instead of using `aes(y = ..count..)` you can (and should!) use `aes(y = stat(count))`. `stat()` is a real function with documentation which hopefully will make this part of ggplot2 less confusing (#2059). `stat()` is particularly nice for more complex calculations because you only need to specify it once: `aes(y = stat(count / max(count)))`, rather than `aes(y = ..count.. / max(..count..))`",1,340,FALSE,NA
ggplot2,79168ab7c46232cdc65d08788c4f02f9,"New `tag` label for adding identification tags to plots, typically used for labelling a subplot with a letter. Add a tag with `labs(tag = ""A"")`, style it with the `plot.tag` theme element, and control position with the `plot.tag.position` theme setting (@​thomasp85).",1,341,FALSE,NA
ggplot2,3dad4c177137a41ff6d681bd30e95c7d,"`geom_segment()` and `geom_curve()` have a new `arrow.fill` parameter which allows you to specify a separate fill colour for closed arrowheads (@​hrbrmstr and @​clauswilke, #2375).",1,342,FALSE,NA
ggplot2,4fb5f4b3e25f7e93f4b068ab70d260e1,"`geom_point()` and friends can now take shapes as strings instead of integers, e.g. `geom_point(shape = ""diamond"")` (@​daniel-barnett, #2075).",1,343,FALSE,NA
ggplot2,9ea8cb1261b0e2dc6f2a86b2c233d3ad,"`position_dodge()` gains a `preserve` argument that allows you to control whether the `total` width at each `x` value is preserved (the current default), or ensure that the width of a `single` element is preserved (what many people want) (#1935).",1,344,FALSE,NA
ggplot2,7ddeefc5680f31fba9b4fc6568a26126,"New `position_dodge2()` provides enhanced dodging for boxplots. Compared to `position_dodge()`, `position_dodge2()` compares `xmin` and `xmax` values\ to determine which elements overlap, and spreads overlapping elements evenly within the region of overlap. `position_dodge2()` is now the default position adjustment for `geom_boxplot()`, because it handles `varwidth = TRUE`, and will be considered for other geoms in the future. The `padding` parameter adds a small amount of padding between elements (@​karawoo, #2143) and a `reverse` parameter allows you to reverse the order of placement (@​karawoo, #2171).",1,345,FALSE,NA
ggplot2,45a2df3f79515b9c999cae27da6d4ced,"New `stat_qq_line()` makes it easy to add a simple line to a Q-Q plot, which makes it easier to judge the fit of the theoretical distribution (@​nicksolomon).",1,346,FALSE,NA
ggplot2,0764e205734a89f777a53ebe171f47cc,"Improved support for mapping date/time variables to `alpha`, `size`, `colour`, and `fill` aesthetics, including `date_breaks` and `date_labels` arguments (@​karawoo, #1526), and new `scale_alpha()` variants (@​karawoo, #1526).",1,347,FALSE,NA
ggplot2,05d59f1924d36848cfaaab5374c47e3b,"Improved support for ordered factors. Ordered factors throw a warning when mapped to shape (unordered factors do not), and do not throw warnings when mapped to size or alpha (unordered factors do). Viridis is used as the default colour and fill scale for ordered factors (@​karawoo, #1526).",1,348,FALSE,NA
ggplot2,747688b37aff25c171a4ac8897169df2,"The `expand` argument of `scale_*_continuous()` and `scale_*_discrete()` now accepts separate expansion values for the lower and upper range limits. The expansion limits can be specified using the convenience function `expand_scale()`. Separate expansion limits may be useful for bar charts, e.g. if one wants the bottom of the bars to be flush with the x axis but still leave some (automatically calculated amount of) space above them:",1,349,FALSE,NA
ggplot2,747688b37aff25c171a4ac8897169df2,"```
ggplot(mtcars) +
    geom_bar(aes(x = factor(cyl))) +
    scale_y_continuous(expand = expand_scale(mult = c(0, .1)))
```",1,350,TRUE,NA
ggplot2,747688b37aff25c171a4ac8897169df2,"It can also be useful for line charts, e.g. for counts over time, where one wants to have a 'hard' lower limit of y = 0 but leave the upper limit unspecified (and perhaps differing between panels), with some extra space above the highest point on the line (with symmetrical limits, the extra space above the highest point could in some cases cause the lower limit to be negative). The old syntax for the `expand` argument will, of course, continue to work (@​huftis, #1669).",1,350,FALSE,NA
ggplot2,e9052e91d5a08f21ed18cc678a002afd,"`scale_colour_continuous()` and `scale_colour_gradient()` are now controlled by global options `ggplot2.continuous.colour` and `ggplot2.continuous.fill`. These can be set to `""gradient""` (the default) or `""viridis""` (@​karawoo).",1,351,FALSE,NA
ggplot2,40ad2babc70f45d3061df6ddcf0713ed,"New `scale_colour_viridis_c()`/`scale_fill_viridis_c()` (continuous) and `scale_colour_viridis_d()`/`scale_fill_viridis_d()` (discrete) make it easy to use Viridis colour scales (@​karawoo, #1526).",1,352,FALSE,NA
ggplot2,87e7cca56c963406cbad964ba2cb0aa7,"Guides for `geom_text()` now accept custom labels with `guide_legend(override.aes = list(label = ""foo""))` (@​brianwdavis, #2458).",1,353,FALSE,NA
ggplot2,c2c997f3337a70eca4f2dc34ca42fabb,"Strips gain margins on all sides by default. This means that to fully justify text to the edge of a strip, you will need to also set the margins to 0 (@​karawoo).",1,354,FALSE,NA
ggplot2,7b8077c713f24c1d88fcc3ac2d50c62b,Rotated strip labels now correctly understand `hjust` and `vjust` parameters at all angles (@​karawoo).,1,355,FALSE,NA
ggplot2,6b9c1d05236d7ba7e3728c0f760eaaab,"Strip labels now understand justification relative to the direction of the text, meaning that in y facets, the strip text can be placed at either end of the strip using `hjust` (@​karawoo).",1,356,FALSE,NA
ggplot2,9c89a4ceea78846423624925bc45a72f,"Legend titles and labels get a little extra space around them, which prevents legend titles from overlapping the legend at large font sizes (@​karawoo, #1881).",1,357,FALSE,NA
ggplot2,cbcf372681c183b0a2eb4c03f6d97a6b,"New `autolayer()` S3 generic (@​mitchelloharawild, #1974). This is similar to `autoplot()` but produces layers rather than complete plots.",1,358,FALSE,NA
ggplot2,c3258d95c5c23694b6538abbcd986403,Custom objects can now be added using `+` if a `ggplot_add` method has been defined for the class of the object (@​thomasp85).,1,359,FALSE,NA
ggplot2,f6f59c832c00a084fb459b7db5f6fc2e,"Theme elements can now be subclassed. Add a `merge_element` method to control how properties are inherited from the parent element. Add an `element_grob` method to define how elements are rendered into grobs (@​thomasp85, #1981).",1,360,FALSE,NA
ggplot2,173e6517e724aab01e19a6d262790300,"Coords have gained new extension mechanisms. If you have an existing coord extension, you will need to revise the specification of the `train()` method. It is now called `setup_panel_params()` (better reflecting what it actually does) and now has arguments `scale_x`, and `scale_y` (the x and y scales respectively) and `param`, a list of plot specific parameters generated by `setup_params()`. What was formerly called `scale_details` (in coords), `panel_ranges` (in layout) and `panel_scales` (in geoms) are now consistently called `panel_params` (#1311). These are parameters of the coord that vary from panel to panel.",1,361,FALSE,NA
ggplot2,cfdcca7b708ddefe161eb65a2916315c,"`ggplot_build()` and `ggplot_gtable()` are now generics, so ggplot-subclasses can define additional behavior during the build stage.",1,362,FALSE,NA
ggplot2,f27682d4b1189b87d0da74a752e68e23,"`guide_train()`, `guide_merge()`, `guide_geom()`, and `guide_gengrob()` are now exported as they are needed if you want to design your own guide. They are not currently documented; use at your own risk (#2528).",1,363,FALSE,NA
ggplot2,375b3116926d4d74fa9236e3c3c401fa,`scale_type()` generic is now exported and documented. Use this if you want to extend ggplot2 to work with a new type of vector.,1,364,FALSE,NA
ggplot2,28d1f5a8b72e7a9d96165549613ea8d4,`facet_grid()` gives a more informative error message if you try to use a variable in both rows and cols (#1928).,1,365,FALSE,NA
ggplot2,0e61c872b40ecd47e2b966566565bc69,`facet_grid()` and `facet_wrap()` both give better error messages if you attempt to use an unsupported coord with free scales (#2049).,1,366,FALSE,NA
ggplot2,45e6223655d59f79f42e863ce184e3ef,`label_parsed()` works once again (#2279).,1,367,FALSE,NA
ggplot2,7c873e8a6cdfb01a8572f6ccc77ebc4d,You can now style the background of horizontal and vertical strips independently with `strip.background.x` and `strip.background.y` theme settings (#2249).,1,368,FALSE,NA
ggplot2,de19c8463e3fcf7b287a3a72315917ae,"`discrete_scale()` documentation now inherits shared definitions from `continuous_scale()` (@​alistaire47, #2052).",1,369,FALSE,NA
ggplot2,2c00221a917e904fc66084cdf9e697e5,"`guide_colorbar()` shows all colours of the scale (@​has2k1, #2343).",1,370,FALSE,NA
ggplot2,80c28b11eb1241e03034e441a00eb0e4,`scale_identity()` once again produces legends by default (#2112).,1,371,FALSE,NA
ggplot2,906ce50e9555d56102e40fd48838590c,"Tick marks for secondary axes with strong transformations are more accurately placed (@​thomasp85, #1992).",1,372,FALSE,NA
ggplot2,5117cf11ccf2a938ef91afa81279b00b,Missing line types now reliably generate missing lines (with standard warning) (#2206).,1,373,FALSE,NA
ggplot2,a56688574cfaee33e53c5705ff5f8ecf,Legends now ignore set aesthetics that are not length one (#1932).,1,374,FALSE,NA
ggplot2,42c72e77c433343f3d3aaf45ffda5b7a,"All colour and fill scales now have an `aesthetics` argument that can be used to set the aesthetic(s) the scale works with. This makes it possible to apply a colour scale to both colour and fill aesthetics at the same time, via `aesthetics = c(""colour"", ""fill"")` (@​clauswilke).",1,375,FALSE,NA
ggplot2,99c74fa32272c350a2c0fa42d4a75f34,"Three new generic scales work with any aesthetic or set of aesthetics: `scale_continuous_identity()`, `scale_discrete_identity()`, and `scale_discrete_manual()` (@​clauswilke).",1,376,FALSE,NA
ggplot2,1b75e155c389f69f9dee31a83fc50a88,"`scale_*_gradient2()` now consistently omits points outside limits by rescaling after the limits are enforced (@​foo-bar-baz-qux, #2230).",1,377,FALSE,NA
ggplot2,d14d898d91ffca33ecbb98d8b25e2ae9,"`geom_label()` now correctly produces unbordered labels when `label.size` is 0, even when saving to PDF (@​bfgray3, #2407).",1,378,FALSE,NA
ggplot2,148989856f72b9b0802e4caf53c2ddbb,"`layer()` gives considerably better error messages for incorrectly specified `geom`, `stat`, or `position` (#2401).",1,379,FALSE,NA
ggplot2,a07b22cba94d0e5b6cfb008782f7a109,"In all layers that use it, `linemitre` now defaults to 10 (instead of 1) to better match base R.",1,380,FALSE,NA
ggplot2,9a8f177855777db3e950fc7932f5107e,"`geom_boxplot()` now supplies a default value if no `x` aesthetic is present (@​foo-bar-baz-qux, #2110).",1,381,FALSE,NA
ggplot2,5621f0ce1e5f4941f33ff091a22f860c,"`geom_density()` drops groups with fewer than two data points and throws a warning. For groups with two data points, density values are now calculated with `stats::density` (@​karawoo, #2127).",1,382,FALSE,NA
ggplot2,11fbfa4b9cfb8f1f66f66676ac08fa5b,"`geom_segment()` now also takes a `linejoin` parameter. This allows more control over the appearance of the segments, which is especially useful for plotting thick arrows (@​Ax3man, #774).",1,383,FALSE,NA
ggplot2,018cbc183fed6e5a1ec37502a9a29d81,"`geom_smooth()` now reports the formula used when `method = ""auto""` (@​davharris #1951). `geom_smooth()` now orders by the `x` aesthetic, making it easier to pass pre-computed values without manual ordering (@​izahn, #2028). It also now knows it has `ymin` and `ymax` aesthetics (#1939). The legend correctly reflects the status of the `se` argument when used with stats other than the default (@​clauswilke, #1546).",1,384,FALSE,NA
ggplot2,54af9d8d70aec2c9745f5fa9182640c9,"`geom_tile()` now once again interprets `width` and `height` correctly (1, #2510).",1,385,FALSE,NA
ggplot2,f7068e25fce4bc3487591f4a1db7e47e,"`position_jitter()` and `position_jitterdodge()` gain a `seed` argument that allows the specification of a random seed for reproducible jittering (@​krlmlr, #1996 and @​slowkow, #2445).",1,386,FALSE,NA
ggplot2,a253756c349659d135d92401442fed8c,`stat_density()` has better behaviour if all groups are dropped because they are too small (#2282).,1,387,FALSE,NA
ggplot2,6cf4bf0dcd300e35905951c3049d3108,"`stat_summary_bin()` now understands the `breaks` parameter (@​karawoo, #2214).",1,388,FALSE,NA
ggplot2,59572e7ed16e62094d3dcfbc66fb8302,`stat_bin()` now accepts functions for `binwidth`. This allows better binning when faceting along variables with different ranges (@​botanize).,1,389,FALSE,NA
ggplot2,9d2bc05e875a4407588bd09e6e273fca,"`stat_bin()` and `geom_histogram()` now sum correctly when using the `weight` aesthetic (@​jiho, #1921).",1,390,FALSE,NA
ggplot2,7689077fa6d48b938fa3c3fc40c826d1,"`stat_bin()` again uses correct scaling for the computed variable `ndensity` (@​timgoodman, #2324).",1,391,FALSE,NA
ggplot2,2253a3c729b68d4e64620eb5c9f1b142,"`stat_bin()` and `stat_bin_2d()` now properly handle the `breaks` parameter when the scales are transformed (@​has2k1, #2366).",1,392,FALSE,NA
ggplot2,fbbbe6610f693b50fbd00adf33ae77e8,"`update_geom_defaults()` and `update_stat_defaults()` allow American spelling of aesthetic parameters (@​foo-bar-baz-qux, #2299).",1,393,FALSE,NA
ggplot2,86b584e8e46f9502947fe0d6fd7e4953,"The `show.legend` parameter now accepts a named logical vector to hide/show only some aesthetics in the legend (@​tutuchan, #1798).",1,394,FALSE,NA
ggplot2,fd37edc4a1ae5b2e84c43e005791cde7,Layers now silently ignore unknown aesthetics with value `NULL` (#1909).,1,395,FALSE,NA
ggplot2,3d58528fa8a3232d27af3d3e65cf0313,"Clipping to the plot panel is now configurable, through a `clip` argument to coordinate systems, e.g. `coord_cartesian(clip = ""off"")` (@​clauswilke, #2536).",1,396,FALSE,NA
ggplot2,b3422802d390cc69b4082ccdc5103f8f,"Like scales, coordinate systems now give you a message when you're replacing an existing coordinate system (#2264).",1,397,FALSE,NA
ggplot2,b7222c259a9de2fb7ec3905393d5d2f1,"`coord_polar()` now draws secondary axis ticks and labels (@​dylan-stark, #2072), and can draw the radius axis on the right (@​thomasp85, #2005).",1,398,FALSE,NA
ggplot2,648ad88e9624b164c7efd68f4a55d04f,"`coord_trans()` now generates a warning when a transformation generates non-finite values (@​foo-bar-baz-qux, #2147).",1,399,FALSE,NA
ggplot2,ae986a483d7dabec096a818b802e5289,"Complete themes now always override all elements of the default theme (@​has2k1, #2058, #2079).",1,400,FALSE,NA
ggplot2,c8aa3a70b4a330e13e94cc1498ab9de8,Themes now set default grid colour in `panel.grid` rather than individually in `panel.grid.major` and `panel.grid.minor` individually. This makes it slightly easier to customise the theme (#2352).,1,401,FALSE,NA
ggplot2,63ca768c164ab4e8caae4a674dd19b62,Fixed bug when setting strips to `element_blank()` (@​thomasp85).,1,402,FALSE,NA
ggplot2,09664f6dff54093aca6c1fb01edee751,"Axes positioned on the top and to the right can now customize their ticks and lines separately (@​thomasp85, #1899).",1,403,FALSE,NA
ggplot2,496c0b6b04bcdeda125c7ce0884b6a2e,"Built-in themes gain parameters `base_line_size` and `base_rect_size` which control the default sizes of line and rectangle elements (@​karawoo, #2176).",1,404,FALSE,NA
ggplot2,9a1d65086a9d2c8f719d2c29c3726db6,Default themes use `rel()` to set line widths (@​baptiste).,1,405,FALSE,NA
ggplot2,0129ac554dbe1fb856c5b1e445bfee9c,Themes were tweaked for visual consistency and more graceful behavior when changing the base font size. All absolute heights or widths were replaced with heights or widths that are proportional to the base font size. One relative font size was eliminated (@​clauswilke).,1,406,FALSE,NA
ggplot2,70ec43bbdfb6216aee20e4f55e77ade5,"The height of descenders is now calculated solely on font metrics and doesn't change with the specific letters in the string. This fixes minor alignment issues with plot titles, subtitles, and legend titles (#2288, @​clauswilke).",1,407,FALSE,NA
ggplot2,45b10c566ad0b8999240bcc776e92147,"`guide_colorbar()` is more configurable: tick marks and color bar frame can now by styled with arguments `ticks.colour`, `ticks.linewidth`, `frame.colour`, `frame.linewidth`, and `frame.linetype` (@​clauswilke).",1,408,FALSE,NA
ggplot2,8e5e84bfad67d15c482a68f46697e958,"`guide_colorbar()` now uses `legend.spacing.x` and `legend.spacing.y` correctly, and it can handle multi-line titles. Minor tweaks were made to `guide_legend()` to make sure the two legend functions behave as similarly as possible (@​clauswilke, #2397 and #2398).",1,409,FALSE,NA
ggplot2,cd22d28508266e6b943a474e2b5c72c5,"The theme elements `legend.title` and `legend.text` now respect the settings of `margin`, `hjust`, and `vjust` (@​clauswilke, #2465, #1502).",1,410,FALSE,NA
ggplot2,5e3e7c4e209bc566d05aa2258ed693ec,"Non-angle parameters of `label.theme` or `title.theme` can now be set in `guide_legend()` and `guide_colorbar()` (@​clauswilke, #2544).",1,411,FALSE,NA
ggplot2,fd6927e1a1aa0b25a3f0633899a2158c,"`fortify()` gains a method for tbls (@​karawoo, #2218).",1,412,FALSE,NA
ggplot2,31a831d92e85defa9770abb2bc046a1c,"`ggplot` gains a method for `grouped_df`s that adds a `.group` variable, which computes a unique value for each group. Use it with `aes(group = .group)` (#2351).",1,413,FALSE,NA
ggplot2,ac13fe030f68a28161a6725242e57521,"`ggproto()` produces objects with class `c(""ggproto"", ""gg"")`, allowing for a more informative error message when adding layers, scales, or other ggproto objects (@​jrnold, #2056).",1,414,FALSE,NA
ggplot2,7c29463b648290d468e07dd953dea06d,"`ggsave()`'s DPI argument now supports 3 string options: ""retina"" (320 DPI), ""print"" (300 DPI), and ""screen"" (72 DPI) (@​foo-bar-baz-qux, #2156). `ggsave()` now uses full argument names to avoid partial match warnings (#2355), and correctly restores the previous graphics device when several graphics devices are open (#2363).",1,415,FALSE,NA
ggplot2,d9a36d4aa6a351b77e71f4a0f093b270,"`print.ggplot()` now returns the original ggplot object, instead of the output from `ggplot_build()`. Also, the object returned from `ggplot_build()` now has the class `""ggplot_built""` (#2034).",1,416,FALSE,NA
ggplot2,774516f42c08fae577c5120c4136bc72,`map_data()` now works even when purrr is loaded (tidyverse#66).,1,417,FALSE,NA
ggplot2,88ad83a96574426b18cdc64fa646a94c,"New functions `summarise_layout()`, `summarise_coord()`, and `summarise_layers()` summarise the layout, coordinate systems, and layers of a built ggplot object (#2034, @​wch). This provides a tested API that (e.g.) shiny can depend on.",1,418,FALSE,NA
ggplot2,f37e3285aecf750fe16270ca26d610c2,"Updated startup messages reflect new resources (#2410, @​mine-cetinkaya-rundel).",1,419,FALSE,NA
ggplot2,bf4d3444dbba3852e7a46f3059ab9a00,Fix usage of `structure(NULL)` for R-devel compatibility (#1968).,1,420,FALSE,NA
ggplot2,0bd20d0eb8ebbe4a9986faf8cfc5559e,"`facet_grid()` and `facet_wrap()` now allow expressions in their faceting formulas (@​DanRuderman, #1596).",1,421,FALSE,NA
ggplot2,46e317fd949ea8361a8fadcf2b755728,"When `facet_wrap()` results in an uneven number of panels, axes will now be drawn underneath the hanging panels (fixes #1607)",1,422,FALSE,NA
ggplot2,6aabfbb80ab894616251677451bf84b7,Strips can now be freely positioned in `facet_wrap()` using the `strip.position` argument (deprecates `switch`).,1,423,FALSE,NA
ggplot2,680827769bb5d3467ba75f74ea448c8c,"The relative order of panel, strip, and axis can now be controlled with the theme setting `strip.placement` that takes either `inside` (strip between panel and axis) or `outside` (strip after axis).",1,424,FALSE,NA
ggplot2,53cb273e3689d9dd85e7309e44b7d5a6,The theme option `panel.margin` has been deprecated in favour of `panel.spacing` to more clearly communicate intent.,1,425,FALSE,NA
ggplot2,7d1ba14428f9fe6f72cda09da1ce5688,"The position of x and y axes can now be changed using the `position` argument in `scale_x_*`and `scale_y_*` which can take `top` and `bottom`, and `left` and `right` respectively. The themes of top and right axes can be modified using the `.top` and `.right` modifiers to `axis.text.*` and `axis.title.*`.",1,426,FALSE,NA
ggplot2,ffdb0aec39bddc52193f3f38b6557cfa,`scale_x_continuous()` and `scale_y_continuous()` can now display a secondary axis that is a **one-to-one** transformation of the primary axis (e.g. degrees Celcius to degrees Fahrenheit). The secondary axis will be positioned opposite to the primary axis and can be controlled with the `sec.axis` argument to the scale constructor.,1,427,FALSE,NA
ggplot2,81f368270c0ede10310138d539e2ceb6,"Scales worry less about having breaks. If no breaks can be computed, the plot will work instead of throwing an uninformative error (#791). This is particularly helpful when you have facets with free scales, and not all panels contain data.",1,428,FALSE,NA
ggplot2,6f354793248e7d10035459cbcdb46c93,Scales now warn when transformation introduces infinite values (#1696).,1,429,FALSE,NA
ggplot2,4339edc01443457ad2ee057da7c682c8,"`scale_*_datetime()` now supports time zones. It will use the timezone attached to the variable by default, but can be overridden with the `timezone` argument.",1,430,FALSE,NA
ggplot2,d3f3d2ae96ea3fb5746f11891f59a03c,New `scale_x_time()` and `scale_y_time()` generate reasonable default breaks and labels for hms vectors (#1752).,1,431,FALSE,NA
ggplot2,d78741ea3ca0121c024a88584ec303c3,character vectors,1,432,FALSE,NA
ggplot2,5bb4703d5cd30d0d81d51bd805ff59c3,factors with implicit NA,1,433,FALSE,NA
ggplot2,557dfe7edbe3d7e16a8219b102582463,factors with explicit NA,1,434,FALSE,NA
ggplot2,8ae1df4bf37debb4cedeab02a79f6004,Correctly use scale expansion factors.,1,435,FALSE,NA
ggplot2,214a25e2784374de73de1a42cbd6b867,Don't preserve space for dropped levels (#1638).,1,436,FALSE,NA
ggplot2,4e68b0334c739b89b2adb10f4fd4459a,Only issue one warning when when asking for too many levels (#1674).,1,437,FALSE,NA
ggplot2,07ce48afd43beb4445466deb0cc8c938,Unicode labels work better on Windows (#1827).,1,438,FALSE,NA
ggplot2,5cf0b13bd4f5c6231358d6b906017f4a,Warn when used with only continuous data (#1589),1,439,FALSE,NA
ggplot2,fc5e443dac8aea68f292362d03e6c00a,The `theme()` constructor now has named arguments rather than ellipses. This should make autocomplete substantially more useful. The documentation (including examples) has been considerably improved.,1,440,FALSE,NA
ggplot2,50e570c345069d34bce2b8e85e9e4f5b,"Built-in themes are more visually homogeneous, and match `theme_grey` better. (@​jiho, #1679)",1,441,FALSE,NA
ggplot2,b6b6d99bb72f15b0e723e74d2fb758af,"When computing the height of titles, ggplot2 now includes the height of the descenders (i.e. the bits of `g` and `y` that hang beneath the baseline). This improves the margins around titles, particularly the y axis label (#1712). I have also very slightly increased the inner margins of axis titles, and removed the outer margins.",1,442,FALSE,NA
ggplot2,d05732edfa544f8e2f46de4ddb49e699,"Theme element inheritance is now easier to work with as modification now overrides default `element_blank` elements (#1555, #1557, #1565, #1567)",1,443,FALSE,NA
ggplot2,3ef10fc0118bffb320a09f9ff7060135,"Horizontal legends (i.e. legends on the top or bottom) are horizontally aligned by default (#1842). Use `legend.box = ""vertical""` to switch back to the previous behaviour.",1,444,FALSE,NA
ggplot2,6b0b6b6dc444f611a1d47a08c6127cf2,`element_line()` now takes an `arrow` argument to specify arrows at the end of lines (#1740),1,445,FALSE,NA
ggplot2,6476458708173385db61c61e091491b2,"`legend.justification` now controls appearance will plotting the legend outside of the plot area. For example, you can use `theme(legend.justification = ""top"")` to make the legend align with the top of the plot.",1,446,FALSE,NA
ggplot2,1992e2f1af9d9d9c86ba9fd7285e3bc5,"`panel.margin` and `legend.margin` have been renamed to `panel.spacing` and `legend.spacing` respectively, to better communicate intent (they only affect spacing between legends and panels, not the margins around them)",1,447,FALSE,NA
ggplot2,c33da091caa3252efae0961dd8fc57bb,`legend.margin` now controls margin around individual legends.,1,448,FALSE,NA
ggplot2,5ba236a440ac9c0f239108a8993da678,"New `legend.box.background`, `legend.box.spacing`, and `legend.box.margin` control the background, spacing, and margin of the legend box (the region that contains all legends).",1,449,FALSE,NA
ggplot2,9f91762084fc413195daa343d417ff47,ggplot2 now imports tibble. This ensures that all built-in datasets print compactly even if you haven't explicitly loaded tibble or dplyr (#1677).,1,450,FALSE,NA
ggplot2,7b4c6238201291ef791fb185c9d5cd7f,Class of aesthetic mapping is preserved when adding `aes()` objects (#1624).,1,451,FALSE,NA
ggplot2,cd1ff43f0a37b59e7eb3838d321ac294,`+.gg` now works for lists that include data frames.,1,452,FALSE,NA
ggplot2,578ac72edec65a0f83434da2ae685f2b,`annotation_x()` now works in the absense of global data (#1655),1,453,FALSE,NA
ggplot2,9437bbb342327c05952df0a1b1dc9c8e,`geom_*(show.legend = FALSE)` now works for `guide_colorbar`.,1,454,FALSE,NA
ggplot2,642b2da244d7f5dac82d13daa44282e1,"`geom_boxplot()` gains new `outlier.alpha` (@​jonathan-g) and `outlier.fill` (@​schloerke, #1787) parameters to control the alpha/fill of outlier points independently of the alpha of the boxes.",1,455,FALSE,NA
ggplot2,0909985c430c29e479cc8a4cd70a4f22,"`position_jitter()` (and hence `geom_jitter()`) now correctly computes the jitter width/jitter when supplied by the user (#1775, @​has2k1).",1,456,FALSE,NA
ggplot2,5dde25bf00fa7292962991b93bf8143f,`geom_contour()` more clearly describes what inputs it needs (#1577).,1,457,FALSE,NA
ggplot2,8f667a988e3f04f5abaafe2e38087813,`geom_curve()` respects the `lineend` parameter (#1852).,1,458,FALSE,NA
ggplot2,980874fc94fb017e759caedeec236c53,`geom_histogram()` and `stat_bin()` understand the `breaks` parameter once more. (#1665). The floating point adjustment for histogram bins is now actually used - it was previously inadvertently ignored (#1651).,1,459,FALSE,NA
ggplot2,9bde8785c3f5bbb131b8d528df9ccb3a,"`geom_violin()` no longer transforms quantile lines with the alpha aesthetic (@​mnbram, #1714). It no longer errors when quantiles are requested but data have zero range (#1687). When `trim = FALSE` it once again has a nice range that allows the density to reach zero (by extending the range 3 bandwidths to either side of the data) (#1700).",1,460,FALSE,NA
ggplot2,4fda54795cfa448fddcaf1c9bd6bb6b7,"`geom_dotplot()` works better when faceting and binning on the y-axis. (#1618, @​has2k1).",1,461,FALSE,NA
ggplot2,07bf3ee3ca45c491d690cefffdcf44e8,"`geom_hexbin()` once again supports `..density..` (@​mikebirdgeneau, #1688).",1,462,FALSE,NA
ggplot2,f88457ff247420280a7abb85fa046180,`geom_step()` gives useful warning if only one data point in layer (#1645).,1,463,FALSE,NA
ggplot2,669d466535cb993db429b9c60c98de2c,`layer()` gains new `check.aes` and `check.param` arguments. These allow geom/stat authors to optional suppress checks for known aesthetics/parameters. Currently this is used only in `geom_blank()` which powers `expand_limits()` (#1795).,1,464,FALSE,NA
ggplot2,f921fd6e0a77be57a04b9e1d5481ce58,All `stat_*()` display a better error message when required aesthetics are missing.,1,465,FALSE,NA
ggplot2,0c47549c87880bbc32ea0176cb176464,`stat_bin()` and `stat_summary_hex()` now accept length 1 `binwidth` (#1610),1,466,FALSE,NA
ggplot2,2160459909d77b561fbbf600c2d17876,"`stat_density()` gains new argument `n`, which is passed to underlying function `stats::density` (""number of equally spaced points at which the density is to be estimated""). (@​hbuschme)",1,467,FALSE,NA
ggplot2,d5ca6a671a3cb3a3516eff641e0fe00e,`stat_binhex()` now again returns `count` rather than `value` (#1747),1,468,FALSE,NA
ggplot2,4d508cf9cb6d1e1000873fa283a1149e,`stat_ecdf()` respects `pad` argument (#1646).,1,469,FALSE,NA
ggplot2,3d3b4ed36d320f7753d907f435e328d9,`stat_smooth()` once again informs you about the method it has chosen. It also correctly calculates the size of the largest group within facets.,1,470,FALSE,NA
ggplot2,6b28fc723840a76004cfa0d2f536d49f,"`x` and `y` scales are now symmetric regarding the list of aesthetics they accept: `xmin_final`, `xmax_final`, `xlower`, `xmiddle` and `xupper` are now valid `x` aesthetics.",1,471,FALSE,NA
ggplot2,8deb3b546fd22dc0c01f429b1690c53f,`Scale` extensions can now override the `make_title` and `make_sec_title` methods to let the scale modify the axis/legend titles.,1,472,FALSE,NA
ggplot2,c68533b78fcef6766c0dc423c884b934,The random stream is now reset after calling `.onAttach()` (#2409).,1,473,FALSE,NA
ggplot2,db29414591f4ec63c29a1da464cced46,"When mapping an aesthetic to a constant (e.g. `geom_smooth(aes(colour = ""loess"")))`), the default guide title is the name of the aesthetic (i.e. ""colour""), not the value (i.e. ""loess"") (#1431).",1,474,FALSE,NA
ggplot2,edcf4ec4eef07e725ed326412df2395f,"`layer()` now accepts a function as the data argument. The function will be applied to the data passed to the `ggplot()` function and must return a data.frame (#1527, @​thomasp85). This is a more general version of the deprecated `subset` argument.",1,475,FALSE,NA
ggplot2,111abe26896acaf81c254c7eb11a140f,"`theme_update()` now uses the `+` operator instead of `%+replace%`, so that unspecified values will no longer be `NULL`ed out. `theme_replace()` preserves the old behaviour if desired (@​oneillkza, #1519).",1,476,FALSE,NA
ggplot2,dbf7111d914ce898e768160dde42353e,"`stat_bin()` has been overhauled to use the same algorithm as ggvis, which has been considerably improved thanks to the advice of Randy Prium (@​rpruim). This includes:",1,477,FALSE,NA
ggplot2,dbf7111d914ce898e768160dde42353e,• Better arguments and a better algorithm for determining the origin. You can now specify either `boundary` or the `center` of a bin. `origin` has been deprecated in favour of these arguments.,2,478,FALSE,"`stat_bin()` has been overhauled to use the same algorithm as ggvis, which has been considerably improved thanks to the advice of Randy Prium (@​rpruim). This includes:"
ggplot2,dbf7111d914ce898e768160dde42353e,"• `drop` is deprecated in favour of `pad`, which adds extra 0-count bins at either end (needed for frequency polygons). `geom_histogram()` defaults to `pad = FALSE` which considerably improves the default limits for the histogram, especially when the bins are big (#1477).",2,479,FALSE,"`stat_bin()` has been overhauled to use the same algorithm as ggvis, which has been considerably improved thanks to the advice of Randy Prium (@​rpruim). This includes:"
ggplot2,dbf7111d914ce898e768160dde42353e,• The default algorithm does a (somewhat) better job at picking nice widths and origins across a wider range of input data.,2,480,FALSE,"`stat_bin()` has been overhauled to use the same algorithm as ggvis, which has been considerably improved thanks to the advice of Randy Prium (@​rpruim). This includes:"
ggplot2,dbf7111d914ce898e768160dde42353e,"• `bins = n` now gives a histogram with `n` bins, not `n + 1` (#1487).",2,481,FALSE,"`stat_bin()` has been overhauled to use the same algorithm as ggvis, which has been considerably improved thanks to the advice of Randy Prium (@​rpruim). This includes:"
ggplot2,087eb8a0deea7f76e1cc0c3c38a839bc,All `\donttest{}` examples run.,1,482,FALSE,NA
ggplot2,b662d114f46843dc838c0f44419fdf9e,"All `geom_()` and `stat_()` functions now have consistent argument order: data + mapping, then geom/stat/position, then `...`, then specific arguments, then arguments common to all layers (#1305). This may break code if you were previously relying on partial name matching, but in the long-term should make ggplot2 easier to use. In particular, you can now set the `n` parameter in `geom_density2d()` without it partially matching `na.rm` (#1485).",1,483,FALSE,NA
ggplot2,a35620a10bf4c1bf1874513b5f09cb26,"For geoms with both `colour` and `fill`, `alpha` once again only affects fill (Reverts #1371, #1523). This was causing problems for people.",1,484,FALSE,NA
ggplot2,a2a77275f4360b695195e1dc74613858,`facet_wrap()`/`facet_grid()` works with multiple empty panels of data (#1445).,1,485,FALSE,NA
ggplot2,5b7d78e7a0c5f88d7a8a1814dc58260d,`facet_wrap()` correctly swaps `nrow` and `ncol` when faceting vertically (#1417).,1,486,FALSE,NA
ggplot2,b7b6c8ceab7ac561e11e0a8d6ca37547,"`ggsave(""x.svg"")` now uses svglite to produce the svg (#1432).",1,487,FALSE,NA
ggplot2,f6dbe1b03cb92dffe480bae685c6753b,`geom_boxplot()` now understands `outlier.color` (#1455).,1,488,FALSE,NA
ggplot2,bc8040a8d6294a9ea4ff6d3a826a2a43,"`geom_path()` knows that ""solid"" (not just 1) represents a solid line (#1534).",1,489,FALSE,NA
ggplot2,673e67a88291bb8ce52613dd455488ec,`geom_ribbon()` preserves missing values so they correctly generate a gap in the ribbon (#1549).,1,490,FALSE,NA
ggplot2,b5d7fe40aafa750daac551db2d1e149f,"`geom_tile()` once again accepts `width` and `height` parameters (#1513). It uses `draw_key_polygon()` for better a legend, including a coloured outline (#1484).",1,491,FALSE,NA
ggplot2,f5c56a874edef66bee6bca4f910f388f,`layer()` now automatically adds a `na.rm` parameter if none is explicitly supplied.,1,492,FALSE,NA
ggplot2,9417cfaf3831088c8a03c91ffab766f9,"`position_jitterdodge()` now works on all possible dodge aesthetics, e.g. `color`, `linetype` etc. instead of only based on `fill` (@​bleutner)",1,493,FALSE,NA
ggplot2,351454476349f72efba8078559d181ce,"`position = ""nudge""` now works (although it doesn't do anything useful) (#1428).",1,494,FALSE,NA
ggplot2,00112c15bff9089f1a816db0faf2b5ae,"The default scale for columns of class ""AsIs"" is now ""identity"" (#1518).",1,495,FALSE,NA
ggplot2,fb2b7b4469b66dd8a78bb24102e05b6b,`scale_*_discrete()` has better defaults when used with purely continuous data (#1542).,1,496,FALSE,NA
ggplot2,150bcfb568dec91129fd05f430a383cd,`scale_size()` warns when used with categorical data.,1,497,FALSE,NA
ggplot2,d9a3d6918382703b8f9fd94dd47dd8bb,"`scale_size()`, `scale_colour()`, and `scale_fill()` gain date and date-time variants (#1526).",1,498,FALSE,NA
ggplot2,01c319a1146a0a0398a9416d195f8372,"`stat_bin_hex()` and `stat_bin_summary()` now use the same underlying algorithm so results are consistent (#1383). `stat_bin_hex()` now accepts a `weight` aesthetic. To be consistent with related stats, the output variable from `stat_bin_hex()` is now value instead of count.",1,499,FALSE,NA
ggplot2,19885b737af0f9a87957530ffdf51ac9,`stat_density()` gains a `bw` parameter which makes it easy to get consistent smoothing between facets (@​jiho),1,500,FALSE,NA
ggplot2,85f9b4ed321e737368a962f0e076ea35,"`stat-density-2d()` no longer ignores the `h` parameter, and now accepts `bins` and `binwidth` parameters to control the number of contours (#1448, @​has2k1).",1,501,FALSE,NA
ggplot2,88ad531d36430084cba9343ff70ec9a9,"`stat_ecdf()` does a better job of adding padding to -Inf/Inf, and gains an argument `pad` to suppress the padding if not needed (#1467).",1,502,FALSE,NA
ggplot2,fcb8fc31a1f2cb382ed0c24608b100ab,`stat_function()` gains an `xlim` parameter (#1528). It once again works with discrete x values (#1509).,1,503,FALSE,NA
ggplot2,02c4545614cf1a91fbf7dbabf7542005,`stat_summary()` preserves sorted x order which avoids artefacts when display results with `geom_smooth()` (#1520).,1,504,FALSE,NA
ggplot2,fe421186d91f06cf77a0e46536354ff3,"All elements should now inherit correctly for all themes except `theme_void()`. (@​Katiedaisey, #1555)",1,505,FALSE,NA
ggplot2,202dd14186d2d850ec631cf1a55740c8,`theme_void()` was completely void of text but facets and legends still need labels. They are now visible (@​jiho).,1,506,FALSE,NA
ggplot2,7f9b6eb710eeb815f6dfc6023a373a7f,"You can once again set legend key and height width to unit arithmetic objects (like `2 * unit(1, ""cm"")`) (#1437).",1,507,FALSE,NA
ggplot2,48af0b701cb39956fbdad97c219344c9,Eliminate spurious warning if you have a layer with no data and no aesthetics (#1451).,1,508,FALSE,NA
ggplot2,7515d1842e6ee6d8ef4865813cbff897,Removed a superfluous comma in `theme-defaults.r` code (@​jschoeley),1,509,FALSE,NA
ggplot2,5b12548fd397b016f977d21084d03920,Fixed a compatibility issue with `ggproto` and R versions prior to 3.1.2. (#1444),1,510,FALSE,NA
ggplot2,1a665b27e3a347c0ba3f0184ff02f5e5,"Fixed issue where `coord_map()` fails when given an explicit `parameters` argument (@​tdmcarthur, #1729)",1,511,FALSE,NA
ggplot2,daba2e274eac18f987d33741c1f1251f,Fixed issue where `geom_errorbarh()` had a required `x` aesthetic (#1933),1,512,FALSE,NA
ggplot2,e39fee8d92254f82fd9186f8d3da4cfa,ggplot no longer throws an error if your plot has no layers. Instead it automatically adds `geom_blank()` (#1246).,1,513,FALSE,NA
ggplot2,fc10a32d6ac68b1cf1d9415d5efde555,"New `cut_width()` is a convenient replacement for the verbose `plyr::round_any()`, with the additional benefit of offering finer control.",1,514,FALSE,NA
ggplot2,cb7260449385d9db1a2cbc7a12f30066,New `geom_count()` is a convenient alias to `stat_sum()`. Use it when you have overlapping points on a scatterplot. `stat_sum()` now defaults to using counts instead of proportions.,1,515,FALSE,NA
ggplot2,0827525bfca61674f4c4c7c9d449d3b5,"New `geom_curve()` adds curved lines, with a similar specification to `geom_segment()` (@​veraanadi, #1088).",1,516,FALSE,NA
ggplot2,c69a799d6b4c8e02a5f4d843d0c4ed26,"Date and datetime scales now have `date_breaks`, `date_minor_breaks` and `date_labels` arguments so that you never need to use the long `scales::date_breaks()` or `scales::date_format()`.",1,517,FALSE,NA
ggplot2,a3e9bffae34491bbed862889910b0c54,"`geom_bar()` now has it's own stat, distinct from `stat_bin()` which was also used by `geom_histogram()`. `geom_bar()` now uses `stat_count()` which counts values at each distinct value of x (i.e. it does not bin the data first). This can be useful when you want to show exactly which values are used in a continuous variable.",1,518,FALSE,NA
ggplot2,c2a5052a799e989da938a2209ff27502,"`geom_point()` gains a `stroke` aesthetic which controls the border width of shapes 21-25 (#1133, @​SeySayux). `size` and `stroke` are additive so a point with `size = 5` and `stroke = 5` will have a diameter of 10mm. (#1142)",1,519,FALSE,NA
ggplot2,4e295f235e45f4ab8fde052a25369f74,New `position_nudge()` allows you to slightly offset labels (or other geoms) from their corresponding points (#1109).,1,520,FALSE,NA
ggplot2,dc671ce14c00dcb5ef8b6bab37923f3d,"`scale_size()` now maps values to *area*, not radius. Use `scale_radius()` if you want the old behaviour (not recommended, except perhaps for lines).",1,521,FALSE,NA
ggplot2,01ecbf4bc165ea2630ca48b5ffa41eda,"New `stat_summary_bin()` works like `stat_summary()` but on binned data. It's a generalisation of `stat_bin()` that can compute any aggregate, not just counts (#1274). Both default to `mean_se()` if no aggregation functions are supplied (#1386).",1,522,FALSE,NA
ggplot2,bbfe4c7ffbd99801ff7280663f3edc59,"Layers are now much stricter about their arguments - you will get an error if you've supplied an argument that isn't an aesthetic or a parameter. This is likely to cause some short-term pain but in the long-term it will make it much easier to spot spelling mistakes and other errors (#1293). This change does break a handful of geoms/stats that used `...` to pass additional arguments on to the underlying computation. Now `geom_smooth()`/`stat_smooth()` and `geom_quantile()`/`stat_quantile()` use `method.args` instead (#1245, #1289); and `stat_summary()` (#1242), `stat_summary_hex()`, and `stat_summary2d()` use `fun.args`.",1,523,FALSE,NA
ggplot2,24400cf6086fec5ceba2d6e832cd3029,"All Geoms, Stats and Positions are now exported, so you can inherit from them when making your own objects (#989).",1,524,FALSE,NA
ggplot2,819740b7968d0c012e4b5c458a47b15e,"ggplot2 no longer uses proto or reference classes. Instead, we now use ggproto, a new OO system designed specifically for ggplot2. Unlike proto and RC, ggproto supports clean cross-package inheritance. Creating a new OO system isn't usually the right way to solve a problem, but I'm pretty sure it was necessary here. Read more about it in the vignette.",1,525,FALSE,NA
ggplot2,79e07ee9f25ca1125d014e8e8980834b,"`aes_()` replaces `aes_q()`. It also supports formulas, so the most concise SE version of `aes(carat, price)` is now `aes_(~carat, ~price)`. You may want to use this form in packages, as it will avoid spurious `R CMD check` warnings about undefined global variables.",1,526,FALSE,NA
ggplot2,519e3ed25d9e6b665501710332251403,`geom_text()` has been overhauled to make labelling your data a little easier. It:,1,527,FALSE,NA
ggplot2,519e3ed25d9e6b665501710332251403,• `nudge_x` and `nudge_y` arguments let you offset labels from their corresponding points (#1120).,2,528,FALSE,`geom_text()` has been overhauled to make labelling your data a little easier. It:
ggplot2,519e3ed25d9e6b665501710332251403,• `check_overlap = TRUE` provides a simple way to avoid overplotting of labels: labels that would otherwise overlap are omitted (#1039).,2,529,FALSE,`geom_text()` has been overhauled to make labelling your data a little easier. It:
ggplot2,519e3ed25d9e6b665501710332251403,"• `hjust` and `vjust` can now be character vectors: ""left"", ""center"", ""right"", ""bottom"", ""middle"", ""top"". New options include ""inward"" and ""outward"" which align text towards and away from the center of the plot respectively.",2,530,FALSE,`geom_text()` has been overhauled to make labelling your data a little easier. It:
ggplot2,6a0bed988563ff93d8fb7694e656b494,`geom_label()` works like `geom_text()` but draws a rounded rectangle underneath each label (#1039). This is useful when you want to label plots that are dense with data.,1,531,FALSE,NA
ggplot2,ddb7f73dd763c53505fdf92b2666cb4b,The little used `aes_auto()` has been deprecated.,1,532,FALSE,NA
ggplot2,d1ed8765535847f6b050fec50c5a977f,`aes_q()` has been replaced with `aes_()` to be consistent with SE versions of NSE functions in other packages.,1,533,FALSE,NA
ggplot2,e413f37e27a40f0e42834328aa2fec68,"The `order` aesthetic is officially deprecated. It never really worked, and was poorly documented.",1,534,FALSE,NA
ggplot2,520451e64dd8f7a78918d2c306b3420c,"The `stat` and `position` arguments to `qplot()` have been deprecated. `qplot()` is designed for quick plots - if you need to specify position or stat, use `ggplot()` instead.",1,535,FALSE,NA
ggplot2,dcadffa0c779abeca7cde1e9d01b3844,The theme setting `axis.ticks.margin` has been deprecated: now use the margin property of `axis.text`.,1,536,FALSE,NA
ggplot2,1714bea889c6b9b8cfdbf9e9c63cbb23,"`stat_abline()`, `stat_hline()` and `stat_vline()` have been removed: these were never suitable for use other than with `geom_abline()` etc and were not documented.",1,537,FALSE,NA
ggplot2,f9832084f94b30a0c42c808cd53c1533,"`show_guide` has been renamed to `show.legend`: this more accurately reflects what it does (controls appearance of layer in legend), and uses the same convention as other ggplot2 arguments (i.e. a `.` between names). (Yes, I know that's inconsistent with function names with use `_`, but it's too late to change now.)",1,538,FALSE,NA
ggplot2,4be310793b09240fc75a68bcb660f887,"`stat_binhex()` and `stat_bin2d()` have been renamed to `stat_bin_hex()` and `stat_bin_2d()` (#1274). `stat_summary2d()` has been renamed to `stat_summary_2d()`, `geom_density2d()`/`stat_density2d()` has been renamed to `geom_density_2d()`/`stat_density_2d()`.",1,539,FALSE,NA
ggplot2,82d5f632beb0180c18a7b7eaf96323d8,`stat_spoke()` is now `geom_spoke()` since I realised it's a reparameterisation of `geom_segment()`.,1,540,FALSE,NA
ggplot2,231a59998e81c26868ef42eeefb4e697,"`stat_bindot()` has been removed because it's so tightly coupled to `geom_dotplot()`. If you happened to use `stat_bindot()`, just change to `geom_dotplot()` (#1194).",1,541,FALSE,NA
ggplot2,f5affe0204cd88be0b332196061435bd,"The default `theme_grey()` background colour has been changed from ""grey90"" to ""grey92"": this makes the background a little less visually prominent.",1,542,FALSE,NA
ggplot2,96e357d31069cdac5a620f021ed3360d,Labels and titles have been tweaked for readability:,1,543,FALSE,NA
ggplot2,96e357d31069cdac5a620f021ed3360d,• Axes labels are darker.,2,544,FALSE,Labels and titles have been tweaked for readability:
ggplot2,96e357d31069cdac5a620f021ed3360d,• Legend and axis titles are given the same visual treatment.,2,545,FALSE,Labels and titles have been tweaked for readability:
ggplot2,96e357d31069cdac5a620f021ed3360d,"• The default font size dropped from 12 to 11. You might be surprised that I've made the default text size smaller as it was already hard for many people to read. It turns out there was a bug in RStudio (fixed in 0.99.724), that shrunk the text of all grid based graphics. Once that was resolved the defaults seemed too big to my eyes.",2,546,FALSE,Labels and titles have been tweaked for readability:
ggplot2,96e357d31069cdac5a620f021ed3360d,• More spacing between titles and borders.,2,547,FALSE,Labels and titles have been tweaked for readability:
ggplot2,96e357d31069cdac5a620f021ed3360d,"• Default margins scale with the theme font size, so the appearance at larger font sizes should be considerably improved (#1228).",2,548,FALSE,Labels and titles have been tweaked for readability:
ggplot2,85581adaf1598d05686eadb392b7fac7,`alpha` now affects both fill and colour aesthetics (#1371).,1,549,FALSE,NA
ggplot2,004bdb637f63df11948560748a009e73,`element_text()` gains a margins argument which allows you to add additional padding around text elements. To help see what's going on use `debug = TRUE` to display the text region and anchors.,1,550,FALSE,NA
ggplot2,425640084308e0273cfe5942421c79ac,The default font size in `geom_text()` has been decreased from 5mm (14 pts) to 3.8 mm (11 pts) to match the new default theme sizes.,1,551,FALSE,NA
ggplot2,9e77bb163758c75510ec637b184a1af8,"A diagonal line is no longer drawn on bar and rectangle legends. Instead, the border has been tweaked to be more visible, and more closely match the size of line drawn on the plot.",1,552,FALSE,NA
ggplot2,1a4cdeb891e94d8f8ca1bd404f7eb389,`geom_pointrange()` and `geom_linerange()` get vertical (not horizontal) lines in the legend (#1389).,1,553,FALSE,NA
ggplot2,4e133f0bc6b2111c9a6819f850f38ae8,The default line `size` for `geom_smooth()` has been increased from 0.5 to 1 to make it easier to see when overlaid on data.,1,554,FALSE,NA
ggplot2,cf7cd33363a480f02473814419f9bb87,`geom_bar()` and `geom_rect()` use a slightly paler shade of grey so they aren't so visually heavy.,1,555,FALSE,NA
ggplot2,9d5311aa4608c2221895c88a82ddfc84,`geom_boxplot()` now colours outliers the same way as the boxes.,1,556,FALSE,NA
ggplot2,d42594c34012f8500b8b61ad15c5a5cf,"`geom_point()` now uses shape 19 instead of 16. This looks much better on the default Linux graphics device. (It's very slightly smaller than the old point, but it shouldn't affect any graphics significantly)",1,557,FALSE,NA
ggplot2,cf226bc8c7240f73cbd73652efeaa97b,"Sizes in ggplot2 are measured in mm. Previously they were converted to pts (for use in grid) by multiplying by 72 / 25.4. However, grid uses printer's points, not Adobe (big pts), so sizes are now correctly multiplied by 72.27 / 25.4. This is unlikely to noticeably affect display, but it's technically correct (https://youtu.be/hou0lU8WMgo).",1,558,FALSE,NA
ggplot2,86f2357567650354dc2b997a34e3d9fb,The default legend will now allocate multiple rows (if vertical) or columns (if horizontal) in order to make a legend that is more likely to fit on the screen. You can override with the `nrow`/`ncol` arguments to `guide_legend()`,1,559,FALSE,NA
ggplot2,86f2357567650354dc2b997a34e3d9fb,"```
p <- ggplot(mpg, aes(displ,hwy, colour = model)) + geom_point()
p
p + theme(legend.position = ""bottom"")
# Previous behaviour
p + guides(colour = guide_legend(ncol = 1))
```",1,560,TRUE,NA
ggplot2,4f62d52df92c06b1e0397d99f00c3783,"New `theme_void()` is completely empty. It's useful for plots with non- standard coordinates or for drawings (@​jiho, #976).",1,561,FALSE,NA
ggplot2,7f7618a7f56f51584dd55fcf6397cf37,"New `theme_dark()` has a dark background designed to make colours pop out (@​jiho, #1018)",1,562,FALSE,NA
ggplot2,16e0a964842d54e6c746bb2c906ff08d,"`theme_minimal()` became slightly more minimal by removing the axis ticks: labels now line up directly beneath grid lines (@​tomschloss, #1084)",1,563,FALSE,NA
ggplot2,200cfccd4f521be89bb42b66c41b7ce6,"New theme setting `panel.ontop` (logical) make it possible to place background elements (i.e., gridlines) on top of data. Best used with transparent `panel.background` (@​noamross. #551).",1,564,FALSE,NA
ggplot2,b5564833440dd33df7073a6109d513aa,`facet_wrap()` gains a `labeller` option (#25).,1,565,FALSE,NA
ggplot2,b024d03824c0df0cb314349857375d69,"`facet_grid()` and `facet_wrap()` gain a `switch` argument to display the facet titles near the axes. When switched, the labels become axes subtitles. `switch` can be set to ""x"", ""y"" or ""both"" (the latter only for grids) to control which margin is switched.",1,566,FALSE,NA
ggplot2,c6bef59419a479b6d81ec8db9b931083,They now offer the `multi_line` argument to control whether to display composite facets (those specified as `~var1 + var2`) on one or multiple lines.,1,567,FALSE,NA
ggplot2,6bb1398d61922a956cc813a50a41b7eb,"In `label_bquote()` you now refer directly to the names of variables. With this change, you can create math expressions that depend on more than one variable. This math expression can be specified either for the rows or the columns and you can also provide different expressions to each margin. As a consequence of these changes, referring to `x` in backquoted expressions is deprecated.",1,568,FALSE,NA
ggplot2,29d7615a154c9e71f6498d7ee9fdae11,"Similarly to `label_bquote()`, `labeller()` now take `.rows` and `.cols` arguments. In addition, it also takes `.default`. `labeller()` is useful to customise how particular variables are labelled. The three additional arguments specify how to label the variables are not specifically mentioned, respectively for rows, columns or both. This makes it especially easy to set up a project-wide labeller dispatcher that can be reused across all your plots. See the documentation for an example.",1,569,FALSE,NA
ggplot2,9455e47e6d8fd616ecfc03e29fdef06d,"The new labeller `label_context()` adapts to the number of factors facetted over. With a single factor, it displays only the values, just as before. But with multiple factors in a composite margin (e.g. with `~cyl + am`), the labels are passed over to `label_both()`. This way the variables names are displayed with the values to help identifying them.",1,570,FALSE,NA
ggplot2,8ae620ca4cf2f2eef6a7e0cc632bc427,"Previously, a labeller function would take `variable` and `value` arguments and return a character vector. Now, they take a data frame of character vectors and return a list. The input data frame has one column per factor facetted over and each column in the returned list becomes one line in the strip label. See documentation for more details.",1,571,FALSE,NA
ggplot2,ceda3441c8a1ff4b8c12890cac9ba1f0,"The labels received by a labeller now contain metadata: their margin (in the ""type"" attribute) and whether they come from a wrap or a grid facet (in the ""facet"" attribute).",1,572,FALSE,NA
ggplot2,48f96e7de401137114fd8ed02a0c9e78,Note that the new `as_labeller()` function operator provides an easy way to transform an existing function to a labeller function. The existing function just needs to take and return a character vector.,1,573,FALSE,NA
ggplot2,7bbb56eecb56a13c7ec6064967f95b91,"Improved documentation for `aes()`, `layer()` and much much more.",1,574,FALSE,NA
ggplot2,e9401c1914aa082bf5fa073abb19b97d,I've tried to reduce the use of `...` so that you can see all the documentation in one place rather than having to integrate multiple pages. In some cases this has involved adding additional arguments to geoms to make it more clear what you can do:,1,575,FALSE,NA
ggplot2,e9401c1914aa082bf5fa073abb19b97d,"• `geom_smooth()` gains explicit `method`, `se` and `formula` arguments.",2,576,FALSE,I've tried to reduce the use of `...` so that you can see all the documentation in one place rather than having to integrate multiple pages. In some cases this has involved adding additional arguments to geoms to make it more clear what you can do:
ggplot2,e9401c1914aa082bf5fa073abb19b97d,"• `geom_histogram()` gains `binwidth`, `bins`, `origin` and `right` arguments.",2,577,FALSE,I've tried to reduce the use of `...` so that you can see all the documentation in one place rather than having to integrate multiple pages. In some cases this has involved adding additional arguments to geoms to make it more clear what you can do:
ggplot2,e9401c1914aa082bf5fa073abb19b97d,• `geom_jitter()` gains `width` and `height` arguments to make it easier to control the amount of jittering without using the lengthy `position_jitter()` function (#1116),2,578,FALSE,I've tried to reduce the use of `...` so that you can see all the documentation in one place rather than having to integrate multiple pages. In some cases this has involved adding additional arguments to geoms to make it more clear what you can do:
ggplot2,2014e7ed9c52cb7a6973b171d4a99658,"Use of `qplot()` in examples has been minimised (#1123, @​hrbrmstr). This is inline with the 2nd edition of the ggplot2 box, which minimises the use of `qplot()` in favour of `ggplot()`.",1,579,FALSE,NA
ggplot2,ea2cd9d5ce1264d0cd37c8405af69522,"Tightly linked geoms and stats (e.g. `geom_boxplot()` and `stat_boxplot()`) are now documented in the same file so you can see all the arguments in one place. Variations of the same idea (e.g. `geom_path()`, `geom_line()`, and `geom_step()`) are also documented together.",1,580,FALSE,NA
ggplot2,90f00af60292878ece8a9489900f8af4,"It's now obvious that you can set the `binwidth` parameter for `stat_bin_hex()`, `stat_summary_hex()`, `stat_bin_2d()`, and `stat_summary_2d()`.",1,581,FALSE,NA
ggplot2,44e9b7789648e09811b29d4ab41d1c88,"The internals of positions have been cleaned up considerably. You're unlikely to notice any external changes, although the documentation should be a little less confusing since positions now don't list parameters they never use.",1,582,FALSE,NA
ggplot2,eddd51edf6383594669c2670d8e0e9b0,"All datasets have class `tbl_df` so if you also use dplyr, you get a better print method.",1,583,FALSE,NA
ggplot2,0ed07388ccfb729c628ae3040e3ea744,`economics` has been brought up to date to 2015-04-01.,1,584,FALSE,NA
ggplot2,7f3d6dde74d6609b036209913dd6a6ef,New `economics_long` is the economics data in long form.,1,585,FALSE,NA
ggplot2,9a283ac47fdb19f02ba2977adf23333b,"New `txhousing` dataset containing information about the Texas housing market. Useful for examples that need multiple time series, and for demonstrating model+vis methods.",1,586,FALSE,NA
ggplot2,c06ad896b837ec4eb23573e1aac0730a,New `luv_colours` dataset which contains the locations of all built-in `colors()` in Luv space.,1,587,FALSE,NA
ggplot2,4f943bb91494598e9f7a6ce49aa29dab,"`movies` has been moved into its own package, ggplot2movies, because it was large and not terribly useful. If you've used the movies dataset, you'll now need to explicitly load the package with `library(ggplot2movies)`.",1,588,FALSE,NA
ggplot2,abb08b6f86a58b663a5d80a3beee4ced,"All partially matched arguments and `$` have been been replaced with full matches (@​jimhester, #1134).",1,589,FALSE,NA
ggplot2,8c891a5f98dd43eb403a4c5818ced9d3,"ggplot2 now exports `alpha()` from the scales package (#1107), and `arrow()` and `unit()` from grid (#1225). This means you don't need attach scales/grid or do `scales::`/`grid::` for these commonly used functions.",1,590,FALSE,NA
ggplot2,c185462379e55dcb2949dbc056d493f2,`aes_string()` now only parses character inputs. This fixes bugs when using it with numbers and non default `OutDec` settings (#1045).,1,591,FALSE,NA
ggplot2,9600059980c7c997b17ec41f175a9520,"`annotation_custom()` automatically adds a unique id to each grob name, making it easier to plot multiple grobs with the same name (e.g. grobs of ggplot2 graphics) in the same plot (#1256).",1,592,FALSE,NA
ggplot2,4f32428bf755d96acd5656ecb01e3f22,"`borders()` now accepts xlim and ylim arguments for specifying the geographical region of interest (@​markpayneatwork, #1392).",1,593,FALSE,NA
ggplot2,9eb57f87eac98402f57ba40a68e94b6b,`coord_cartesian()` applies the same expansion factor to limits as for scales. You can suppress with `expand = FALSE` (#1207).,1,594,FALSE,NA
ggplot2,a24d49bd140969ca1160e59df6ab2ed9,`coord_trans()` now works when breaks are suppressed (#1422).,1,595,FALSE,NA
ggplot2,8332bc1deff8e1add6b8a42541e336e8,`cut_number()` gives error message if the number of requested bins can be created because there are two few unique values (#1046).,1,596,FALSE,NA
ggplot2,48edb91cd6b3f7f407ee52d3161a7ec7,Character labels in `facet_grid()` are no longer (incorrectly) coerced into factors. This caused problems with custom label functions (#1070).,1,597,FALSE,NA
ggplot2,3a7afaca59b31db6ba93ee7628b6ef6a,`facet_wrap()` and `facet_grid()` now allow you to use non-standard variable names by surrounding them with backticks (#1067).,1,598,FALSE,NA
ggplot2,ce7de36a0781b5a9e8d5e195f49e9ce0,"`facet_wrap()` more carefully checks its `nrow` and `ncol` arguments to ensure that they're specified correctly (@​richierocks, #962)",1,599,FALSE,NA
ggplot2,533faa5fc71a74ade7efe87f4d11b4fe,"`facet_wrap()` gains a `dir` argument to control the direction the panels are wrapped in. The default is ""h"" for horizontal. Use ""v"" for vertical layout (#1260).",1,600,FALSE,NA
ggplot2,828bf92ab3bccf2d69866ad49fa6d0d2,"`geom_abline()`, `geom_hline()` and `geom_vline()` have been rewritten to have simpler behaviour and be more consistent:",1,601,FALSE,NA
ggplot2,828bf92ab3bccf2d69866ad49fa6d0d2,"• `stat_abline()`, `stat_hline()` and `stat_vline()` have been removed: these were never suitable for use other than with `geom_abline()` etc and were not documented.",2,602,FALSE,"`geom_abline()`, `geom_hline()` and `geom_vline()` have been rewritten to have simpler behaviour and be more consistent:"
ggplot2,828bf92ab3bccf2d69866ad49fa6d0d2,"• `geom_abline()`, `geom_vline()` and `geom_hline()` are bound to `stat_identity()` and `position_identity()`",2,603,FALSE,"`geom_abline()`, `geom_hline()` and `geom_vline()` have been rewritten to have simpler behaviour and be more consistent:"
ggplot2,828bf92ab3bccf2d69866ad49fa6d0d2,• Intercept parameters can no longer be set to a function.,2,604,FALSE,"`geom_abline()`, `geom_hline()` and `geom_vline()` have been rewritten to have simpler behaviour and be more consistent:"
ggplot2,828bf92ab3bccf2d69866ad49fa6d0d2,"• They are all documented in one file, since they are so closely related.",2,605,FALSE,"`geom_abline()`, `geom_hline()` and `geom_vline()` have been rewritten to have simpler behaviour and be more consistent:"
ggplot2,876088106eae518f70e7ae7841e812db,"`geom_bin2d()` will now let you specify one dimension's breaks exactly, without touching the other dimension's default breaks at all (#1126).",1,606,FALSE,NA
ggplot2,a2db7c2a5cecdbd4d94b8985dc9e06c4,`geom_crossbar()` sets grouping correctly so you can display multiple crossbars on one plot. It also makes the default `fatten` argument a little bigger to make the middle line more obvious (#1125).,1,607,FALSE,NA
ggplot2,7d2cee9f7a880d71b258f77ada4599ed,"`geom_histogram()` and `geom_smooth()` now only inform you about the default values once per layer, rather than once per panel (#1220).",1,608,FALSE,NA
ggplot2,875f5d8a122705dca1574e44a9b8bf92,`geom_pointrange()` gains `fatten` argument so you can control the size of the point relative to the size of the line.,1,609,FALSE,NA
ggplot2,2ea744459f0d4dbc5d57c3ca496afe7c,"`geom_segment()` annotations were not transforming with scales (@​BrianDiggs, #859).",1,610,FALSE,NA
ggplot2,0ab745ddf3bcd2d3e69a2daa3f23459f,"`geom_smooth()` is no longer so chatty. If you want to know what the default smoothing method is, look it up in the documentation! (#1247)",1,611,FALSE,NA
ggplot2,eb3034870858ddd5e6c898068e6dec8d,`geom_violin()` now has the ability to draw quantile lines (@​DanRuderman).,1,612,FALSE,NA
ggplot2,f852fcf164731abbff003313662d8c3b,"`ggplot()` now captures the parent frame to use for evaluation, rather than always defaulting to the global environment. This should make ggplot more suitable to use in more situations (e.g. with knitr)",1,613,FALSE,NA
ggplot2,c4c40d3bf4ec2b88aee68aea58daedb5,"`ggsave()` has been simplified a little to make it easier to maintain. It no longer checks that you're printing a ggplot2 object (so now also works with any grid grob) (#970), and always requires a filename. Parameter `device` now supports character argument to specify which supported device to use ('pdf', 'png', 'jpeg', etc.), for when it cannot be correctly inferred from the file extension (for example when a temporary filename is supplied server side in shiny apps) (@​sebkopf, #939). It no longer opens a graphics device if one isn't already open - this is annoying when you're running from a script (#1326).",1,614,FALSE,NA
ggplot2,1ae9f4f8a1e10c9095bcb97251fcecc6,"`guide_colorbar()` creates correct legend if only one color (@​krlmlr, #943).",1,615,FALSE,NA
ggplot2,616164b8a0447afe85956d831c9574e8,`guide_colorbar()` no longer fails when the legend is empty - previously this often masked misspecifications elsewhere in the plot (#967).,1,616,FALSE,NA
ggplot2,8ef4902a7eb526693c14b3e50a1551bf,New `layer_data()` function extracts the data used for plotting for a given layer. It's mostly useful for testing.,1,617,FALSE,NA
ggplot2,d830d26fec27e873b175c0fe9f16c8f1,"User supplied `minor_breaks` can now be supplied on the same scale as the data, and will be automatically transformed with by scale (#1385).",1,618,FALSE,NA
ggplot2,5e64349354c8dba99c6b7fff44cb26b1,"You can now suppress the appearance of an axis/legend title (and the space that would allocated for it) with `NULL` in the `scale_` function. To use the default label, use `waiver()` (#1145).",1,619,FALSE,NA
ggplot2,d48ea9da930daf5a40e98ebeb5c0c524,Position adjustments no longer warn about potentially varying ranges because the problem rarely occurs in practice and there are currently a lot of false positives since I don't understand exactly what FP criteria I should be testing.,1,620,FALSE,NA
ggplot2,4ce759a87ac861ba838e7873c905cbbd,`scale_fill_grey()` now uses red for missing values. This matches `scale_colour_grey()` and makes it obvious where missing values lie. Override with `na.value`.,1,621,FALSE,NA
ggplot2,6eb84d1ee79d6a7433e5ba12d2346ca1,`scale_*_gradient2()` defaults to using Lab colour space.,1,622,FALSE,NA
ggplot2,1067a5ba969c38824b6d455a37f8705c,`scale_*_gradientn()` now allows `colours` or `colors` (#1290),1,623,FALSE,NA
ggplot2,e00f076208e10b0abc955f85898aeda3,"`scale_y_continuous()` now also transforms the `lower`, `middle` and `upper` aesthetics used by `geom_boxplot()`: this only affects `geom_boxplot(stat = ""identity"")` (#1020).",1,624,FALSE,NA
ggplot2,c1bdab94b04f706f768a172b61357270,Legends no longer inherit aesthetics if `inherit.aes` is FALSE (#1267).,1,625,FALSE,NA
ggplot2,7a074a455968b56e51f76956f5597f17,`lims()` makes it easy to set the limits of any axis (#1138).,1,626,FALSE,NA
ggplot2,ce1ee58b700f031ed6f4e0e5f28bec74,"`labels = NULL` now works with `guide_legend()` and `guide_colorbar()`. (#1175, #1183).",1,627,FALSE,NA
ggplot2,a8931453d7a8b0ab91036ed4cfbd7dc3,"`override.aes` now works with American aesthetic spelling, e.g. color",1,628,FALSE,NA
ggplot2,84a60119e53322d9b6d34354de4a24aa,Scales no longer round data points to improve performance of colour palettes. Instead the scales package now uses a much faster colour interpolation algorithm (#1022).,1,629,FALSE,NA
ggplot2,faab9a0d71c1acbd5d2d953d06f49cb7,"`scale_*_brewer()` and `scale_*_distiller()` add new `direction` argument of `scales::brewer_pal`, making it easier to change the order of colours (@​jiho, #1139).",1,630,FALSE,NA
ggplot2,347ed7bc05b85a1c1500aafc8c40149a,`scale_x_date()` now clips dates outside the limits in the same way as `scale_x_continuous()` (#1090).,1,631,FALSE,NA
ggplot2,2001199789574d4935edfff38b2c933a,"`stat_bin()` gains `bins` arguments, which denotes the number of bins. Now you can set `bins=100` instead of `binwidth=0.5`. Note that `breaks` or `binwidth` will override it (@​tmshn, #1158, #102).",1,632,FALSE,NA
ggplot2,63b0d05480169398ff8bad9b92ef9928,"`stat_boxplot()` warns if a continuous variable is used for the `x` aesthetic without also supplying a `group` aesthetic (#992, @​krlmlr).",1,633,FALSE,NA
ggplot2,5f403d013a6a7c4f98b0224d4d81e5b0,"`stat_summary_2d()` and `stat_bin_2d()` now share exactly the same code for determining breaks from `bins`, `binwidth`, and `origin`.",1,634,FALSE,NA
ggplot2,26e3b9a917b71ecc3d8bb6a7cf6f795f,`stat_summary_2d()` and `stat_bin_2d()` now output in tile/raster compatible form instead of rect compatible form.,1,635,FALSE,NA
ggplot2,70d572973cdd1af6ea46eae01ef8ea1f,"Automatically computed breaks do not lead to an error for transformations like ""probit"" where the inverse can map to infinity (#871, @​krlmlr)",1,636,FALSE,NA
ggplot2,841cafaa288934ba60e64956e098c195,"`stat_function()` now always evaluates the function on the original scale. Previously it computed the function on transformed scales, giving incorrect values (@​BrianDiggs, #1011).",1,637,FALSE,NA
ggplot2,19bbfaa83ef5a533ad623abf1ca487bc,"`strip_dots` works with anonymous functions within calculated aesthetics (e.g. `aes(sapply(..density.., function(x) mean(x))))` (#1154, @​NikNakk)",1,638,FALSE,NA
ggplot2,81b07826dac41d6d0729b896c619f0a5,"`theme()` gains `validate = FALSE` parameter to turn off validation, and hence store arbitrary additional data in the themes. (@​tdhock, #1121)",1,639,FALSE,NA
ggplot2,b186bd9ae0ff748c0d1423540b269f79,"Improved the calculation of segments needed to draw the curve representing a line when plotted in polar coordinates. In some cases, the last segment of a multi-segment line was not drawn (@​BrianDiggs, #952)",1,640,FALSE,NA
googledrive,ed225d7e5a458c447c1d5b23155854af,"`drive_auth(subject =)` is a new argument that can be used with `drive_auth(path =)`, i.e. when using a service account. The `path` and `subject` arguments are ultimately processed by `gargle::credentials_service_account()` and support the use of a service account to impersonate a normal user (#413).",1,1,FALSE,NA
googledrive,120ae8de21a0693b4dec6053a1428709,All requests now route through `gargle::request_retry()` (#380).,1,2,FALSE,NA
googledrive,b0935a50df0a80c539e09a64e049f6e0,"`drive_scopes()` is a new function to access scopes relevant to the Drive API. When called without arguments, `drive_scopes()` returns a named vector of scopes, where the names are the associated short aliases. `drive_scopes()` can also be called with a character vector; any element that's recognized as a short alias is replaced with the associated full scope (#430).",1,3,FALSE,NA
googledrive,606cf9ae3782a6e78b991ab76951c3b9,Various internal changes to sync up with gargle v1.5.0.,1,4,FALSE,NA
googledrive,edf44ab4d84b7d899b3dcd37148987e1,`drive_oauth_client()` is a new function to replace the now-deprecated `drive_oauth_app()`.,1,5,FALSE,NA
googledrive,12023330779e763e5c0d614af0602a77,The new `client` argument of `drive_auth_configure()` replaces the now-deprecated `app` argument.,1,6,FALSE,NA
googledrive,02d42449ccf2f538e0756ec1304488d9,"The documentation of `drive_auth_configure()` emphasizes that the preferred way to ""bring your own OAuth client"" is by providing the JSON downloaded from Google Developers Console.",1,7,FALSE,NA
googledrive,44935494b00204fe122079e34a47157f,Team Drives is being renamed to shared drives from Google Workspace blog,1,8,FALSE,NA
googledrive,36bc50d23e5b286a1d3560cb2418ad39,Upcoming changes to the Google Drive API and Google Picker API from the Google Cloud blog,1,9,FALSE,NA
googledrive,3cc382d1173c4abecfdd11dc297b643b,`shortcut_create()`: creates a shortcut to a specific Drive file (or folder).,1,10,FALSE,NA
googledrive,6224fef43dd5dbc664dceafffbe5ef5b,"`shortcut_resolve()`: resolves a shortcut to its target, i.e. the file it refers to. Works for multiple files at once, i.e. the input can be a mix of shortcuts and non-shortcuts. The non-shortcuts are passed through and the shortcuts are replaced by their targets.",1,11,FALSE,NA
googledrive,29a604a3e1c4bcbf43e9c87b5f31cc11,"Main principle: shortcuts are first-class Drive files that we assume users will need to manipulate with googledrive. In general, there is no automatic resolution to the target file.",1,12,FALSE,NA
googledrive,496cf29936a0384bfd3a46355514080b,"`drive_reveal(what = ""path"")` returns the canonical path, i.e. there will be no shortcuts among the non-terminal ""folder"" parts of the returned path.",1,13,FALSE,NA
googledrive,ba4ffa77f65cd6a9bd787f3731d946e1,"`drive_get(path = ""foo/"")` can retrieve a folder named ""foo"" or a shortcut named ""foo"", whose target is a folder.",1,14,FALSE,NA
googledrive,0aca007d9de36fc440a9c58f1181d065,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:",1,15,FALSE,NA
googledrive,0aca007d9de36fc440a9c58f1181d065,"• `drive_ls(path, ...)`",2,16,FALSE,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:"
googledrive,0aca007d9de36fc440a9c58f1181d065,"• `drive_create(name, path, ...)` and its convenience wrappers `drive_mkdir()` and `shortcut_create()`",2,17,FALSE,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:"
googledrive,0aca007d9de36fc440a9c58f1181d065,"• `drive_cp(file, path, ...)`",2,18,FALSE,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:"
googledrive,0aca007d9de36fc440a9c58f1181d065,"• `drive_mv(file, path, ...)`",2,19,FALSE,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:"
googledrive,0aca007d9de36fc440a9c58f1181d065,"• `drive_upload(media, path, ...)` and its close friend `drive_put()`",2,20,FALSE,"When a shortcut-to-a-folder is specified as the `path`, in a context where it unambiguously specifies a parent folder, the `path` **is** auto-resolved to its target folder. This is the exception to the ""no automatic resolution"" rule. Functions affected:"
googledrive,472d83a0d7b2b7d0c7def9a21509cfa4,Simplifying Google Drive's folder structure and sharing models,1,21,FALSE,NA
googledrive,f612b4b7c9249b843dd813e0598f7ace,Single-parenting behavior changes,1,22,FALSE,NA
googledrive,b7656760c36cb05e83cdbb27b08d4a3c,Create a shortcut to a Drive file,1,23,FALSE,NA
googledrive,0a055ed835e6ce6a2a4d7ae0f720727b,Find files & folders with Google Drive shortcuts: `https://support.google.com/drive/answer/9700156`,1,24,FALSE,NA
googledrive,daac6713a3f4a6b5ceea9829d2a1a19d,"We now share a variety of world-readable, persistent example files on Drive, for use in examples and documentation. These remote example files complement the local example files that were already included in googledrive. `drive_example()` is deprecated in favor of these accessors for example files:",1,25,FALSE,NA
googledrive,daac6713a3f4a6b5ceea9829d2a1a19d,"• Plural forms:`drive_examples_remote()`, `drive_examples_local()`",2,26,FALSE,"We now share a variety of world-readable, persistent example files on Drive, for use in examples and documentation. These remote example files complement the local example files that were already included in googledrive. `drive_example()` is deprecated in favor of these accessors for example files:"
googledrive,daac6713a3f4a6b5ceea9829d2a1a19d,"• Singular forms: `drive_example_remote()`, `drive_example_local()`",2,27,FALSE,"We now share a variety of world-readable, persistent example files on Drive, for use in examples and documentation. These remote example files complement the local example files that were already included in googledrive. `drive_example()` is deprecated in favor of these accessors for example files:"
googledrive,c0a62f1af4af58d71ab95048a16dcc62,"`drive_read_string()` and `drive_read_raw()` are new functions that read the content of a Drive file directly into R, skipping the step of downloading to a local file (#81).",1,28,FALSE,NA
googledrive,c4a73f89ef8b5f2ddea7fb7c75282906,"`drive_reveal(what = ""property_name"")` now works for any property found in the file metadata stored in the `drive_resource` column. The new column is also simplified in more cases now, e.g. to `character` or `logical`. If the `property_name` suggests it's a date-time, we return `POSIXct`.",1,29,FALSE,NA
googledrive,e47cd660e74df45aeba0948ad46c0b23,"We've modernized the mechanisms by which the `dribble` class is (or is not) retained by various data frame operations. This boils down to updating or adding methods used by the base, dplyr, pillar/tibble, and vctrs packages. We focus on compatibility with dplyr \>= 1.0.0, which was released a year ago. googledrive only Suggests dplyr, so all this really means is that `dribble` manipulation via dplyr now works best with dplyr \>= 1.0.0.",1,30,FALSE,NA
googledrive,e7cc1c76f617add2a01555d0ae408682,"The `drive_id` S3 class is now implemented more fully, using the vctrs package (#93, #364):",1,31,FALSE,NA
googledrive,e7cc1c76f617add2a01555d0ae408682,"• The `drive_id` class will persist after mundane operations, like subsetting.",2,32,FALSE,"The `drive_id` S3 class is now implemented more fully, using the vctrs package (#93, #364):"
googledrive,e7cc1c76f617add2a01555d0ae408682,• You can no longer put strings that are obviously invalid into a `drive_id` object.,2,33,FALSE,"The `drive_id` S3 class is now implemented more fully, using the vctrs package (#93, #364):"
googledrive,e7cc1c76f617add2a01555d0ae408682,• The `id` column of a `dribble` is now an instance of `drive_id`.,2,34,FALSE,"The `drive_id` S3 class is now implemented more fully, using the vctrs package (#93, #364):"
googledrive,69c7a533738b178a9c79a490017dc89f,"The overall design of googledrive has survived \~2 years on CRAN, with very little need for change. The API and feature set is fairly stable.",1,35,FALSE,NA
googledrive,f877d88969354cb12669af4edbe5734d,There are changes in the auth interface that are not backwards compatible.,1,36,FALSE,NA
googledrive,2cecdadbc76c7e606187c168d28c7adc,Application Default Credentials,1,37,FALSE,NA
googledrive,d618000e93c07b9d1323115825a718a1,Service account tokens from the metadata server available to VMs running on GCE,1,38,FALSE,NA
googledrive,dc7e8ec77c034736e75b0cc25f33b039,Help for `drive_auth()` *all that most users need*,1,39,FALSE,NA
googledrive,a01761512489e1ed3e27968e3392af26,*details for more advanced users*,1,40,FALSE,NA
googledrive,a01761512489e1ed3e27968e3392af26,• Bring your own OAuth app or API key,2,41,FALSE,*details for more advanced users*
googledrive,a01761512489e1ed3e27968e3392af26,• How to get your own API credentials,2,42,FALSE,*details for more advanced users*
googledrive,a01761512489e1ed3e27968e3392af26,• Non-interactive auth,2,43,FALSE,*details for more advanced users*
googledrive,a01761512489e1ed3e27968e3392af26,• Auth when using R in the browser,2,44,FALSE,*details for more advanced users*
googledrive,a01761512489e1ed3e27968e3392af26,• How gargle gets tokens,2,45,FALSE,*details for more advanced users*
googledrive,a01761512489e1ed3e27968e3392af26,• Managing tokens securely,2,46,FALSE,*details for more advanced users*
googledrive,3c06b96887451c38d7f423b97139e556,Previous signature (v0.1.3 and earlier),1,47,FALSE,NA
googledrive,3c06b96887451c38d7f423b97139e556,"```
drive_auth(
  oauth_token = NULL,                       # use `token` now
  service_token = NULL,                     # use `path` now
  reset = FALSE,                            
  cache = getOption(""httr_oauth_cache""),
  use_oob = getOption(""httr_oob_default""),
  verbose = TRUE
)
```",1,48,TRUE,NA
googledrive,0c071dc4d7b89d38e39d341e58bad554,Current signature (\>= v1.0.0),1,49,FALSE,NA
googledrive,0c071dc4d7b89d38e39d341e58bad554,"```
drive_auth(
  email = gargle::gargle_oauth_email(),             # NEW!
  path = NULL,                                      # was `service_token`
  scopes = ""https://www.googleapis.com/auth/drive"", # NEW!
  cache = gargle::gargle_oauth_cache(),
  use_oob = gargle::gargle_oob_default(),
  token = NULL                                      # was `oauth_token`
)
```",1,50,TRUE,NA
googledrive,56666dac7bb455d9d47583a7a4d3cd7e,"`drive_auth_configure()` is a variant of the now-deprecated `drive_auth_config()` whose explicit and only job is to *set* aspects of the configuration, i.e. the OAuth app or API key.",1,51,FALSE,NA
googledrive,56666dac7bb455d9d47583a7a4d3cd7e,"• Use `drive_oauth_app()` (new) and `drive_api_key()` to *retrieve* a user-configured app or API key, if such exist.",2,52,FALSE,"`drive_auth_configure()` is a variant of the now-deprecated `drive_auth_config()` whose explicit and only job is to *set* aspects of the configuration, i.e. the OAuth app or API key."
googledrive,56666dac7bb455d9d47583a7a4d3cd7e,"• These functions no longer return built-in auth assets, although built-in assets still exist and are used in the absence of user configuration.",2,53,FALSE,"`drive_auth_configure()` is a variant of the now-deprecated `drive_auth_config()` whose explicit and only job is to *set* aspects of the configuration, i.e. the OAuth app or API key."
googledrive,b8b9712476c739b6cfc3ffc80a8ef6d6,"`drive_deauth()` is how you go into a de-authorized state, i.e. send an API key in lieu of a token.",1,54,FALSE,NA
googledrive,2a166a178ae069509f8ae801e1404143,`generate_request()` has been renamed to `request_generate()`.,1,55,FALSE,NA
googledrive,8dca744ba82ba70632bdcdc2a57ad109,`make_request()` had been renamed to `request_make()` and is a very thin wrapper around `gargle::request_make()` that only adds googledrive's user agent.,1,56,FALSE,NA
googledrive,d360394fb28a2dbe932e528863795fbb,"`build_request()` has been removed. If you can't do what you need with `request_generate()`, use `gargle::request_develop()` or `gargle::request_build()` directly.",1,57,FALSE,NA
googledrive,741fe93b1f8cd48e3e5fcfb8dbba7baf,"`process_response()` has been removed. Instead, use `gargle::response_process(response)`, as we do inside googledrive.",1,58,FALSE,NA
googledrive,3f9568460399f78d824b15e0463fffed,All functions that create a new item or rename/move an existing item have gained an `overwrite` argument.,1,59,FALSE,NA
googledrive,91b1ffbb8c433bc2765040fede53af7d,`drive_put()` is a new convenience wrapper that figures out whether to call `drive_upload()` or `drive_update()`.,1,60,FALSE,NA
googledrive,395be17f9e2ab1b387ae78830d0f25e9,`drive_create()` *this whole function is new*,1,61,FALSE,NA
googledrive,151e91c2ded169414ddc1a7dad1c670e,`drive_cp()`,1,62,FALSE,NA
googledrive,9d6d1d45319d7f5904279e7e430c8e0d,`drive_mkdir()`,1,63,FALSE,NA
googledrive,bc86201dbc296fdcab41d124b70fe701,`drive_mv()`,1,64,FALSE,NA
googledrive,4b6ad5c2f6babd1e24f0604b3743929b,`drive_rename()`,1,65,FALSE,NA
googledrive,3ed06b704daa3dba8f193ad944a5cccd,`drive_upload()`,1,66,FALSE,NA
googledrive,8b871466e994c1c6b59d99694cf182e0,Internal usage of `glue::collapse()` modified to call `glue::glue_collapse()` if glue v1.3.0 or later is installed and `glue::collapse()` otherwise. Eliminates a deprecation warning emanating from glue. (#222 @​jimhester),1,68,FALSE,NA
googledrive,66937b3bebf3b4c9ae441d06f04e63a4,initial CRAN release,1,69,FALSE,NA
googlesheets4,97eb5dc46f87274c9cf2ee4538e67c20,"`gs4_auth(subject =)` is a new argument that can be used with `gs4_auth(path =)`, i.e. when using a service account. The `path` and `subject` arguments are ultimately processed by `gargle::credentials_service_account()` and support the use of a service account to impersonate a normal user.",1,1,FALSE,NA
googlesheets4,27d80381081019c7b30c163652519fd9,"`gs4_scopes()` is a new function to access scopes relevant to the Sheets and Drive APIs. When called without arguments, `gs4_scopes()` returns a named vector of scopes, where the names are the associated short aliases. `gs4_scopes()` can also be called with a character vector; any element that's recognized as a short alias is replaced with the associated full scope (#291).",1,2,FALSE,NA
googlesheets4,c33ade5099573f4fc8e1e8f9024a6e2a,Various internal changes to sync up with gargle v1.5.0.,1,3,FALSE,NA
googlesheets4,cb4b40b6dd05b5dc49ef1aca68138c6e,`gs4_oauth_client()` is a new function to replace the now-deprecated `gs4_oauth_app()`.,1,4,FALSE,NA
googlesheets4,82dbd542798a4a070fff53ad9e7f84b7,The new `client` argument of `gs4_auth_configure()` replaces the now-deprecated `app` argument.,1,5,FALSE,NA
googlesheets4,8220d03a20fe8b6b972831ca534c39f6,"The documentation of `gs4_auth_configure()` emphasizes that the preferred way to ""bring your own OAuth client"" is by providing the JSON downloaded from Google Developers Console.",1,6,FALSE,NA
googlesheets4,21a82a952b8e8371bbfa78ea3170dda3,cli is new in Imports.,1,7,FALSE,NA
googlesheets4,98ff54070436a41f427c5902d5220286,"googlesheets4 Suggests testthat \>= 3.0.0 and, specifically, uses third edition features.",1,8,FALSE,NA
googlesheets4,45b4152620d34e21618bd6a46ca28a6e,"`gs4_`: refers variously to the googlesheets4 package, v4 of the Google Sheets API, or to operations on one or more (spread)Sheets",1,9,FALSE,NA
googlesheets4,7f514614281bf45b29cde6b6c0def005,`sheet_`: operations on one or more (work)sheets,1,10,FALSE,NA
googlesheets4,d5dc9c4c9e77af967ae199bbc3f4e049,`range_`: operations on a range of cells,1,11,FALSE,NA
googlesheets4,286114c06231fb7a8e63f0f667e5aa59,"`gs4_create()` creates a new Google Sheet and, optionally, writes one or more data frames into it (#61).",1,12,FALSE,NA
googlesheets4,353fa0a65bca08a25a4662ed0ac7b349,"`sheet_write()` (also available as `write_sheet()`) writes a data frame into a new or existing (work)sheet, inside an existing (or new) (spread)Sheet.",1,13,FALSE,NA
googlesheets4,e3c04b91fc544b0cee203b7a788835cf,`sheet_append()` adds rows to an existing data table.,1,14,FALSE,NA
googlesheets4,64aa754b89b3029d8b22e5b1407ef0ce,`range_write()` writes to a cell range.,1,15,FALSE,NA
googlesheets4,dd0c210b02231e73d72f53e83e07aa20,"`range_flood()` ""floods"" all cells in a range with the same content. `range_clear()` is a wrapper around `range_flood()` for the special case of clearing cell values.",1,16,FALSE,NA
googlesheets4,de2f8895b069b4c36eb218783c066fb8,`range_delete()` deletes a range of cells.,1,17,FALSE,NA
googlesheets4,9c1c158166b59f835b70c9ccb93f7d1b,(`sheet_write()` and `sheet_append()` are described above.),1,18,FALSE,NA
googlesheets4,b326e04f75959104b7126f66558602d3,`sheet_properties()` returns a tibble of metadata with one row per sheet.,1,19,FALSE,NA
googlesheets4,3fa02f5d984662e64519b3180617ba72,`sheet_names()` returns sheet names.,1,20,FALSE,NA
googlesheets4,d364fd72b5343560d8752ac715563462,`sheet_add()` adds one or more sheets.,1,21,FALSE,NA
googlesheets4,c615955471b2552fb933521222596c0f,`sheet_copy()` copies a sheet.,1,22,FALSE,NA
googlesheets4,3b89733649664015ae4f0fc19b2759b9,`sheet_delete()` deletes one or more sheets.,1,23,FALSE,NA
googlesheets4,58d81465e5e9161620a54404a5a2a46c,`sheet_relocate()` moves sheets around.\,1,24,FALSE,NA
googlesheets4,2ddecb91c7c5540ed7d4ece85587fa27,`sheet_rename()` renames one sheet.,1,25,FALSE,NA
googlesheets4,32a6b26709fe1ffe5964d1ad5367df83,`sheet_resize()` changes the number of rows or columns in a sheet.,1,26,FALSE,NA
googlesheets4,d077ca6eb4bee89b2bd26570a14209de,"`read_sheet()` passes its `na` argument down to the helpers that parse cells, so that `na` actually has the documented effect (#73).",1,27,FALSE,NA
googlesheets4,085505ca819dab3b767b3e26ebcec25f,"Patch release to modify a test fixture, to be compatible with tibble v3.0. Related to tibble's increased type strictness.",1,28,FALSE,NA
googlesheets4,5f0624bf489c347f71b0ee6d3927e79d,Added a `NEWS.md` file to track changes to the package.,1,29,FALSE,NA
haven,65925f1ffca91d7de03260b0c1d205e6,Fix for upcoming R-devel change.,1,1,FALSE,NA
haven,4e72021a579af1ff5d701a638b2fea1f,Updated to ReadStat 1.1.9.,1,2,FALSE,NA
haven,4e72021a579af1ff5d701a638b2fea1f,"• Fix various SAS catalog file reading bugs (#529, #653, #680, #696, #705).",2,3,FALSE,Updated to ReadStat 1.1.9.
haven,4e72021a579af1ff5d701a638b2fea1f,• Increase maximum SAS page file size to 16MiB (#697).,2,4,FALSE,Updated to ReadStat 1.1.9.
haven,4e72021a579af1ff5d701a638b2fea1f,• Ignore invalid SAV timestamp strings (#683).,2,5,FALSE,Updated to ReadStat 1.1.9.
haven,4e72021a579af1ff5d701a638b2fea1f,• Fix compiler warnings (#707).,2,6,FALSE,Updated to ReadStat 1.1.9.
haven,bfa2fadc4418c799090a89fd99aa76f7,"The experimental `write_sas()` function has been deprecated (#224). The sas7bdat file format is complex and undocumented, and as such writing SAS files is not officially supported by ReadStat. `write_xpt()` should be used instead - it produces files in the SAS transport format, which has limitations but will be reliably read by SAS.",1,7,FALSE,NA
haven,f4c45471d035fdba5aa9486a653b025e,"`write_*()` functions gain a new `adjust_tz` argument to allow more control over time zone conversion for date-time variables (#702). Thanks to @​jmobrien for the detailed issue and feedback. Stata, SPSS and SAS do not have a concept of time zone. Since haven 2.4.0 date-time values in non-UTC time zones are implicitly converted when writing to ensure the time displayed in Stata/SPSS/SAS will match the time displayed to the user in R (see #555). This is the behaviour when `adjust_tz = TRUE` (the default). Although this is in line with general user expectations it can cause issues when the time zone is important, for e.g. when looking at differences between time points, since the underlying numeric data is changed to preserve the displayed time. Use `adjust_tz = FALSE` to write the time as the corresponding UTC value, which will appear different to the user but preserves the underlying numeric data.",1,8,FALSE,NA
haven,47aa7ab4c28b706c8983721a9d20e0ca,"`write_*()` functions previously returned the data frame with minor alterations made to date-time variables. These functions now invisibly return the original input data frame unchanged (@​jmobrien, #702).",1,9,FALSE,NA
haven,bba7855b4da2632a801d8fa665e59ef3,Fix bug in string variable width calculation that treated `NA` values as width 2. `NA` values are now treated as blanks for width calculations (#699).,1,10,FALSE,NA
haven,4356f9b928545022ea1222038fbc51c2,All `labelled()` vectors now have left-aligned column headers when printing in tibbles for better alignment with labels (#676).,1,11,FALSE,NA
haven,7b78741965d036f048f051422a2fe7d1,`write_*()` now accept functions as well as strings in the `.name_repair` argument in line with the documentation. Previously they only supported string values (#684).,1,12,FALSE,NA
haven,a3cc02879986bc481d8831cc49e503ce,`write_sav()` variable name validation no longer treats all non-ASCII characters as invalid (#689).,1,13,FALSE,NA
haven,eaaa76ec0c15056d6920dfefc0463505,@​gorcha is now a haven author in recognition of his significant and sustained contributions.,1,14,FALSE,NA
haven,918ba9f006621bbf1f65f0e9014a182e,All `write_` functions can now write custom variable widths by setting the `width` attribute (#650).,1,15,FALSE,NA
haven,3ab5151d7322dafcaebda5ff95c707ed,"When writing files, the minimum width for character variables is now 1. This fixes issues with statistical software reading blank character variables with width 0 (#650).",1,16,FALSE,NA
haven,972f292bedf501cd18879f10eee32870,"`write_dta()` now uses strL when strings are too long to be stored in an str# variable (#437). strL is used when strings are longer than 2045 characters by default, which matches Stata's behaviour, but this can be reduced with the `strl_threshold` argument.",1,17,FALSE,NA
haven,e74034ca0041726a5591e20823653704,"`write_xpt()` can now write dataset labels with the `label` argument, which defaults to the `label` attribute of the input data frame, if present (#562).",1,18,FALSE,NA
haven,b8df485d796390830b3f29deb4913fe5,"`write_sav()` now checks for case-insensitive duplicate variable names (@​juansebastianl, #641) and verifies that variable names are valid SPSS variables.",1,19,FALSE,NA
haven,4fac1da5b9aa6a09d9bd7c7cfde99fcc,"The `compress` argument for `write_sav()` now supports all 3 SPSS compression modes specified as a character string - ""byte"", ""none"" and ""zsav"" (#614). `TRUE` and `FALSE` can be used for backwards compatibility, and correspond to the ""zsav"" and ""none"" options respectively.",1,20,FALSE,NA
haven,355d007495566d7741e4d100a226bff5,`write_sav()` successfully writes user missing values and ranges for `labelled()` integer vectors (#596).,1,21,FALSE,NA
haven,1852eca2b8187cb2da10174bbd01859d,"POSIXct and POSIXlt values with no time component (e.g. ""2010-01-01"") were being converted to `NA` when attempting to convert the output timezone to UTC. These now output successfully (#634).",1,22,FALSE,NA
haven,b6e026f1bc0e0b5cc0286fda1479490b,Fix bug in output timezone conversion that was causing variable labels and other variable attributes to disappear (#624).,1,23,FALSE,NA
haven,c2aa2fb6987bda01d4c6ac64c2bcdd03,Updated to ReadStat 1.1.8 RC.,1,24,FALSE,NA
haven,c2aa2fb6987bda01d4c6ac64c2bcdd03,• Fix bug when writing formats to XPT files (#650).,2,25,FALSE,Updated to ReadStat 1.1.8 RC.
haven,c2aa2fb6987bda01d4c6ac64c2bcdd03,• Fix off by one error in indexing for strL variables (#437).,2,26,FALSE,Updated to ReadStat 1.1.8 RC.
haven,f39ef4a50dd4f103d80e9ead46060aa9,`labelled()` vectors now throw a warning when combining two vectors with conflicting labels (#667).,1,27,FALSE,NA
haven,7b77d3a3d0089379fe11356b23cee57a,`zap_labels()` gains a `user_na` argument to control whether user-defined missing values are converted to `NA` or left as is (#638).,1,28,FALSE,NA
haven,9b01d90f220e359298ac21e1a2230b90,vctrs casting and coercion generics now do less work when working with two identical `labelled()` vectors. This significantly improves performance when working with `labelled()` vectors in grouped data frames (#658).,1,29,FALSE,NA
haven,e50dc58a193ca9843867f362040be04c,Errors and warnings now use `cli_abort()` and `cli_warning()` (#661).,1,30,FALSE,NA
haven,64bf6cfe89773a787c8ff179a6893c1a,"R 3.4 is now the minimum supported version, in line with tidyverse policy.",1,31,FALSE,NA
haven,79ad3abc337cdda772e9623274f2aca1,cli \>= 3.0.0 has been added to Imports to support new error messaging.,1,32,FALSE,NA
haven,e9e96a483c790b8ea2f3e07de6bf6ce2,"lifecycle has been added to Imports, and is now used to manage deprecations.",1,33,FALSE,NA
haven,105d9c3303bf5e8e5f3e0977298eba9d,Fix build failure on Solaris.,1,34,FALSE,NA
haven,bb919b9a7d14185cc56100884e848c57,Updated to ReadStat 1.1.7 RC (#620).,1,35,FALSE,NA
haven,47f59ff645eff914eb38cd7dc639c42f,"`read_dta()` no longer crashes if it sees StrL variables with missing values (@​gorcha, #594, #600, #608).",1,36,FALSE,NA
haven,e3053e388a724b4ce9a2506f17fee963,"`write_dta()` now correctly handles ""labelled""-class numeric (double) variables that don't have value labels (@​jmobrien, #606, #609).",1,37,FALSE,NA
haven,a86a76124c010e702b52ab442a7cee11,"`write_dta()` now allows variable names up to 32 characters (@​sbae, #605).",1,38,FALSE,NA
haven,03b3bf8f89465b8f100dbc1a5d568569,"Can now correctly combine `labelled_spss()` with identical labels (@​gorcha, #599).",1,39,FALSE,NA
haven,c7f364388a114dcd4907bb5b3d396967,Fix buglet when combining `labelled()` with identical labels.,1,40,FALSE,NA
haven,4452b835862e5f0bc6368ec996a54b91,"`labelled_spss()` gains full vctrs support thanks to the hard work of @​gorcha (#527, #534, #538, #557). This means that they should now work seamlessly in dplyr 1.0.0, tidyr 1.0.0 and other packages that use vctrs.",1,41,FALSE,NA
haven,ee9a66badc93891559cff8748894f107,"`labelled()` vectors are more permissive when concatenating; output labels will be a combination of the left-hand and the right-hand side, preferring values assigned to the left-hand side (#543).",1,42,FALSE,NA
haven,8788593487dcfe872a2d364242a59d98,"Date-times are no longer forced to UTC, but instead converted to the equivalent UTC (#555). This should ensure that you see the same date-time in R and in Stata/SPSS/SAS.",1,43,FALSE,NA
haven,cb653022156549555f8c1c9cb70bfe74,Updated to ReadStat 1.1.5. Most importantly this includes support for SAS binary compression.,1,44,FALSE,NA
haven,7e6d8734b3e25fea11e79d8a29a21e0c,"`as_factor(levels = ""values"")` preserves values of unlabelled elements (#570).",1,45,FALSE,NA
haven,33c3332eee16d26641f70576d22b9c2d,"`labelled_spss()` is a little stricter: it prevents `na_range` and `na_value` from containing missing values, and ensures that `na_range` is in the correct order (#574).",1,46,FALSE,NA
haven,e1e291bf022b95db7ad54a68ed524125,`read_spss()` now reads NA values and ranges of character variables (#409).,1,47,FALSE,NA
haven,de203e3a1661ad96e613e3e170b0dc97,`write_dta()` now correctly writes tagged NAs (including tagged NAs in labels) (#583) and once again validates length of variables names (#485).,1,48,FALSE,NA
haven,017c10f76b10d52b5885fb9f3759c1ff,"`write_*()` now validate file and variable metadata with ReadStat. This should prevent many invalid files from being written (#408). Additionally, validation failures now provide more details about the source of the problem (e.g. the column name of the problem) (#463).",1,49,FALSE,NA
haven,69b0311e1c37c4bf7de99d9186fa6f7b,"`write_sav(compress = FALSE)` now uses SPSS bytecode compression instead of the rarely-used uncompressed mode. `compress = TRUE` continues to use the newer (and not universally supported, but more compact) zlib format (@​oliverbock, #544).",1,50,FALSE,NA
haven,5e90ab3ad42ce05c9e992771bd57f9fd,"Add missing methods so `median()`, `quantile()` and `summary()` work once more (#520).",1,51,FALSE,NA
haven,2786bbb3f9f1c6af3efe5bfa75279429,Add missing cast methods (#522).,1,52,FALSE,NA
haven,1d7f6ba40bcc912b63b6d68692e770d2,"`labelled()` gains the necessary support to work seemlessly in dplyr 1.0.0, tidyr 1.0.0, and other packages that use vctrs (@​mikmart, #496).",1,53,FALSE,NA
haven,fd5df10c02bce65591c09260aa9bbbe4,"`labelled()` vectors now explicitly inherit from the corresponding base types (e.g. integer, double, or character) (#509).",1,54,FALSE,NA
haven,0cdeeade5ba42ab6d13c18137aa0e56d,"ReadStat update, including `read_sas()` supports for ""any"" encoding (#482), and fixes for compiler warnings.",1,55,FALSE,NA
haven,f73a3e3bcd170415f483be205196f7cd,`col_select`: selects columns to read with a tidyselect interface (#248).,1,56,FALSE,NA
haven,412f7af8f97929b47ee60a6e614f1635,`skip`: skips rows before reading data (#370).,1,57,FALSE,NA
haven,37f2ad7d2553b67d06794b6a120b410e,`n_max`: limits the number of rows to read.,1,58,FALSE,NA
haven,7f690f6c541a5fc95408843629212734,"`as_factor()` allows non-unique labels when `levels = ""label""`. This fixes a particularly annoying printing bug (#424, @​gergness)",1,59,FALSE,NA
haven,4c2e1d4d873016cc05a62c3a6c9568b5,`read_sas()` now supports (IS\|E\|B)8601(DT\|DA\|TM) date/time formats (@​mikmart).,1,60,FALSE,NA
haven,8ab9ad6239afc128c47917bc9a4c4ba7,All `write_` functions gain a `.name_repair` argument that controls what happens when the input dataset has repeated column names (#436).,1,61,FALSE,NA
haven,69124717deaf19b61ec3ef26a3526049,All `write_` functions can now write labelled vectors with `NULL` labels (#442).,1,62,FALSE,NA
haven,75e412fc48823b1a04d81a6ebd3e8058,"`write_dta()` can now write dataset labels with the `label` argument, which defaults to the `label` attribute of the input data frame, if present (@​gorcha, #449).",1,63,FALSE,NA
haven,87f4c3ebab0e1f9c394446d27a925c91,"`write_dta()` works better with Stata 15, thanks to updated ReadStat (#461)",1,64,FALSE,NA
haven,a21a24ddf34c375ceac84d4bb251cc0b,Fixes for R CMD check,1,65,FALSE,NA
haven,594b83ef09b8553e4eb79f5998d4da10,`as_factor()`:,1,66,FALSE,NA
haven,594b83ef09b8553e4eb79f5998d4da10,• Is faster when input doesn't contain any missing values (@​hughparsonage).,2,67,FALSE,`as_factor()`:
haven,594b83ef09b8553e4eb79f5998d4da10,• Added `labelled` method for backward compatbility (#414).,2,68,FALSE,`as_factor()`:
haven,594b83ef09b8553e4eb79f5998d4da10,"• `data.frame` method now correctly passes `...` along (#407, @​zkamvar).",2,69,FALSE,`as_factor()`:
haven,3e11e2649764ffbac84d364651e73b90,"`write_dta()` now checks that the labelled values are integers, not the values themselves (#401).",1,70,FALSE,NA
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,Updated to latest ReadStat from @​evanmiller:,1,71,FALSE,NA
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_por()` can now read files from SPSS 25 (#412),2,72,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_por()` now uses base-30 instead of base-10 for the exponent (#413),2,73,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_sas()` can read zero column file (#420),2,74,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_sav()` reads long strings (#381),2,75,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_sav()` has greater memory limit allowing it to read more labels (#418),2,76,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `read_spss()` reads long variable labels (#422),2,77,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `write_sav()` no longer creates incorrect column names when \>10k columns (#410),2,78,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,c4e6d224ebdf2df83277f41ddf1d1ab5,• `write_sav()` no longer crashes when writing long label names (#395),2,79,FALSE,Updated to latest ReadStat from @​evanmiller:
haven,2155163a34ed7b014987bc318feb0401,"`labelled()` and `labelled_spss()` now produce objects with class ""haven_labelled"" and ""haven_labelled_spss"". Previously, the ""labelled"" class name clashed with the labelled class defined by Hmisc (#329). Unfortunately I couldn't come up with a way to fix this problem except to change the class name; it seems reasonable that haven should be the one to change names given that Hmisc has been around much longer. This will require some changes to packages that use haven, but shouldn't affect user code.",1,80,FALSE,NA
haven,b3e52a8d6b737e4a629db3546d10936a,"`labelled()` and `labelled_spss()` now support adding the `label` attribute to the resulting object. The `label` is a short, human-readable description of the object, and is now also used when printing, and can be easily removed using the new `zap_label()` function. (#362, @​huftis) Previously, the `label` attribute was supported both when reading and writing SPSS files, but it was not possible to actually create objects in R having the `label` attribute using the constructors `labelled()` or `labelled_spss()`.",1,81,FALSE,NA
haven,e399f462186b1f98c8293516fe384c7a,haven can read and write non-ASCII paths in R 3.5 (#371).,1,82,FALSE,NA
haven,85b0c5d6910d5a4495b32663d9033091,"`labelled_spss` objects preserve their attributes when subsetted (#360, @​gergness).",1,83,FALSE,NA
haven,e21ce7c2804dd293d7a8e14fd5ac75cd,`read_sav()` gains an `encoding` argument to override the encoding stored in the file (#305). `read_sav()` can now read `.zsav` files (#338).,1,84,FALSE,NA
haven,6c4ee39a97e79e6adc5421b466bfe1f5,"`write_*()` functions now invisibly return the input data frame (as documented) (#349, @​austensen).",1,85,FALSE,NA
haven,8c4696ffb6c9e2c11fa99be9a4280a2b,`write_dta()` allows non-ASCII variable labels for version 14 and above (#383). It also uses a less strict check for integers so that a labelled double containing only integer values can written (#343).,1,86,FALSE,NA
haven,6c495823b5cc6ca5b923b8fba7c73966,`write_sav()` produces `.zsav` files when `compress = TRUE` (#338).,1,87,FALSE,NA
haven,3a503016c47d6786afd91dfb3a8e56ad,"`write_xpt()` can now set the ""member"" name, which defaults to the file name san extension (#328).",1,88,FALSE,NA
haven,0a8d61a57fab7349f2406bb5535032f2,Update to latest readstat.,1,89,FALSE,NA
haven,0a8d61a57fab7349f2406bb5535032f2,• Fixes out of memory error (#342),2,90,FALSE,Update to latest readstat.
haven,0a8d61a57fab7349f2406bb5535032f2,• Now supports reading and writing stata 15 files (#339),2,91,FALSE,Update to latest readstat.
haven,0a8d61a57fab7349f2406bb5535032f2,• Negative integer labelled values were tagged as missing (#367),2,92,FALSE,Update to latest readstat.
haven,3c072f9ed69e25aa0793179e0752fa11,"Fix for when `as_factor()` with option `levels=""labels""` is used on tagged NAs (#340, @​gergness)",1,93,FALSE,NA
haven,60523d35b86435aea2e78e9e187a8441,Update to latest readstat. Includes:,1,94,FALSE,NA
haven,60523d35b86435aea2e78e9e187a8441,• SPSS: empty charater columns now read as character (#311),2,95,FALSE,Update to latest readstat. Includes:
haven,60523d35b86435aea2e78e9e187a8441,• SPSS: now write long strings (#266),2,96,FALSE,Update to latest readstat. Includes:
haven,60523d35b86435aea2e78e9e187a8441,• Stata: reorder labelled vectors on write (#327),2,97,FALSE,Update to latest readstat. Includes:
haven,60523d35b86435aea2e78e9e187a8441,• State: `encoding` now affects value labels (#325),2,98,FALSE,Update to latest readstat. Includes:
haven,60523d35b86435aea2e78e9e187a8441,"• SAS: can now write wide/long rows (#272, #335).",2,99,FALSE,Update to latest readstat. Includes:
haven,60523d35b86435aea2e78e9e187a8441,• SAS: can now handle Windows Vietnamese character set (#336),2,100,FALSE,Update to latest readstat. Includes:
haven,ce09f8214b7a65708772f2559dab3432,`read_por()` and `read_xpt()` now correctly preserve attributes if output needs to be reallocated (which is typical behaviour) (#313),1,101,FALSE,NA
haven,cf74e63302f9a40557bf63fee11c5c55,`read_sas()` recognises date/times format with trailing separator and width specifications (#324),1,102,FALSE,NA
haven,28208e0d985dc0e1a5ffed0278b1cf99,`read_sas()` gains a `catalog_encoding` argument so you can independently specify encoding of data and catalog (#312),1,103,FALSE,NA
haven,80dc7c29728130bbf16cd7ffbcf408c6,"`write_*()` correctly measures lengths of non-ASCII labels (#258): this fixes the cryptic error ""A provided string value was longer than the available storage size of the specified column.""",1,104,FALSE,NA
haven,b04932ff0375d2c9b4f787f6f4f8b528,"`write_dta()` now checks for bad labels in all columns, not just the first (#326).",1,105,FALSE,NA
haven,8e829924b38e38b65965217d1b92e26f,`write_sav()` no longer fails on empty factors or factors with an `NA` level (#301) and writes out more metadata for `labelled_spss` vectors (#334).,1,106,FALSE,NA
haven,5fb3d2aac2b6f243e8c42b0f476a789d,Update to latest readstat. Includes:,1,107,FALSE,NA
haven,5fb3d2aac2b6f243e8c42b0f476a789d,• SAS: support Win baltic code page (#231),2,108,FALSE,Update to latest readstat. Includes:
haven,5fb3d2aac2b6f243e8c42b0f476a789d,"• SAS: better error messages instead of crashes (#234, #270)",2,109,FALSE,Update to latest readstat. Includes:
haven,5fb3d2aac2b6f243e8c42b0f476a789d,"• SAS: fix ""unable to read error"" (#271)",2,110,FALSE,Update to latest readstat. Includes:
haven,5fb3d2aac2b6f243e8c42b0f476a789d,• SPSS: support uppercase time stamps (#230),2,111,FALSE,Update to latest readstat. Includes:
haven,5fb3d2aac2b6f243e8c42b0f476a789d,• SPSS: fixes for 252-255 byte strings (#226),2,112,FALSE,Update to latest readstat. Includes:
haven,5fb3d2aac2b6f243e8c42b0f476a789d,• SPSS: fixes for 0 byte strings (#245),2,113,FALSE,Update to latest readstat. Includes:
haven,bf9b940fbbf4dd29e2bbb1d45a87ae9c,Share `as_factor()` with forcats package (#256),1,114,FALSE,NA
haven,d05f3c76ecdfe0b2a18e613e144a827e,`read_sav()` once again correctly returns system defined missings as `NA` (rather than `NaN`) (#223). `read_sav()` and `write_sav()` preserve SPSS's display widths (@​ecortens).,1,115,FALSE,NA
haven,9af9496c5dfe2fec847c8a572ee6f09c,`read_sas()` gains experimental `cols_only` argument to only read in specified columns (#248).,1,116,FALSE,NA
haven,f8988551310ad6308bb5a8b56b6022bf,"tibbles are created with `tibble::as_tibble()`, rather than by ""hand"" (#229).",1,117,FALSE,NA
haven,45b7f376b89232d469a1f8a7ba769173,`write_sav()` checks that factors don't have levels with \>120 characters (#262),1,118,FALSE,NA
haven,6039329b0e562e76403bc0f44bb2bc62,`write_dta()` no longer checks that all value labels are at most 32 characters (since this is not a restriction of dta files) (#239).,1,119,FALSE,NA
haven,23af2eaa5c1202fff9060b79592720cb,All write methds now check that you're trying to write a data frame (#287).,1,120,FALSE,NA
haven,838d50c5164d046883cb494f5eb34e26,Add support for reading (`read_xpt()`) and writing (`write_xpt()`) SAS transport files.,1,121,FALSE,NA
haven,1ead48578a6ab030f92d3f849914ef8b,`write_*` functions turn ordered factors into labelled vectors (#285),1,122,FALSE,NA
haven,5e91b36a782c8d5d2dd0363cd531ea7b,"The ReadStat library is stored in a subdirectory of `src` (#209, @​krlmlr).",1,123,FALSE,NA
haven,e25741bb82f9e45e2426475ef4d00442,"Import tibble so that tibbles are printed consistently (#154, @​krlmlr).",1,124,FALSE,NA
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,Update to latest ReadStat (#65). Includes:,1,125,FALSE,NA
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,• Support for binary (aka Ross) compression for SAS (#31).,2,126,FALSE,Update to latest ReadStat (#65). Includes:
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,• Support extended ASCII encoding for Stata (#71).,2,127,FALSE,Update to latest ReadStat (#65). Includes:
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,"• Support for Stata 14 files (#75, #212).",2,128,FALSE,Update to latest ReadStat (#65). Includes:
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,• Support for SPSS value labels with more than 8 characters (#157).,2,129,FALSE,Update to latest ReadStat (#65). Includes:
haven,9b2d0b7b4c662aaf43d7a1f7d2db9437,• More likely to get an error when attempting to create an invalid output file (#171).,2,130,FALSE,Update to latest ReadStat (#65). Includes:
haven,8eea02ea63c71a417428f5a9ced21653,"Added support for reading and writing variable formats. Similarly to to variable labels, formats are stored as an attribute on the vector. Use `zap_formats()` if you want to remove these attributes. (@​gorcha, #119, #123).",1,131,FALSE,NA
haven,c012f30d78ea2db498483c1459f8bb1a,"Added support for reading file ""label"" and ""notes"". These are not currently printed, but are stored in the attributes if you need to access them (#186).",1,132,FALSE,NA
haven,46911a4ce723f0d4f5e6963a11868d61,"Added support for ""tagged"" missing values (in Stata these are called ""extended"" and in SAS these are called ""special"") which carry an extra byte of information: a character label from ""a"" to ""z"". The downside of this change is that all integer columns are now converted to doubles, to support the encoding of the tag in the payload of a NaN.",1,133,FALSE,NA
haven,4b7f2c815764b5d36926c43f5625389f,"New `labelled_spss()` is a subclass of `labelled()` that can model user missing values from SPSS. These can either be a set of distinct values, or for numeric vectors, a range. `zap_labels()` strips labels, and replaces user-defined missing values with `NA`. New `zap_missing()` just replaces user-defined missing values with `NA`. `labelled_spss()` is potentially dangerous to work with in R because base functions don't know about `labelled_spss()` functions so will return the wrong result in the presence of user-defined missing values. For this reason, they will only be created by `read_spss()` when `user_na = TRUE` (normally user-defined missings are converted to NA).",1,134,FALSE,NA
haven,4f03054573e6c48e1462e81f24bcb02f,"`as_factor()` no longer drops the `label` attribute (variable label) when used (#177, @​itsdalmo).",1,135,FALSE,NA
haven,d9c4934a3aaeb5055c0af7c01fe21e26,"Using `as_factor()` with `levels = ""default` or `levels = ""both""` preserves unused labels (implicit missing) when converting (#172, @​itsdalmo). Labels (and the resulting factor levels) are always sorted by values.",1,136,FALSE,NA
haven,7c956e1c3b488c5ea02048859c1fe62f,"`as_factor()` gains a new `levels = ""default""` mechanism. This uses the labels where present, and otherwise uses the labels. This is now the default, as it seems to map better to the semantics of labelled values in other statistical packages (#81). You can also use `levels = ""both""` to combine the value and the label into a single string (#82). It also gains a method for data frames, so you can easily convert every labelled column to a factor in one function call.",1,137,FALSE,NA
haven,3058f313a2d2533439a91c5769fde172,"New `vignette(""semantics"", package = ""haven"")` discusses the semantics of missing values and labelling in SAS, SPSS, and Stata, and how they are translated into R.",1,138,FALSE,NA
haven,8a06e6a819f44753aa2127b2feff03bf,"Support for `hms()` has been moved into the hms package (#162). Time varibles now have class `c(""hms"", ""difftime"")` and a `units` attribute with value ""secs"" (#162).",1,139,FALSE,NA
haven,7a1187442de0db272f6d99d7220327c8,"`labelled()` is less strict with its checks: you can mix double and integer value and labels (#86, #110, @​lionel-), and `is.labelled()` is now exported (#124). Putting a labelled vector in a data frame now generates the correct column name (#193).",1,140,FALSE,NA
haven,0e46aa986c475737c554e8265b6f899a,"`read_dta()` now recognises ""%d"" and custom date types (#80, #130). It also gains an encoding parameter which you can use to override the default encoding. This is particularly useful for Stata 13 and below which did not store the encoding used in the file (#163).",1,141,FALSE,NA
haven,89969c8826dba9744308b66c1030af35,`read_por()` now actually works (#35).,1,142,FALSE,NA
haven,ff85582130efa010014bd1a5ad87a15e,"`read_sav()` now correctly recognises EDATE and JDATE formats as dates (#72). Variables with format DATE, ADATE, EDATE, JDATE or SDATE are imported as `Date` variables instead of `POSIXct`. You can now set `user_na = TRUE` to preserve user defined missing values: they will be given class `labelled_spss`.",1,143,FALSE,NA
haven,5045fd8581a436c3dbd32d4a62711677,"`read_dta()`, `read_sas()`, and `read_sav()` have a better test for missing string values (#79). They can all read from connections and compressed files (@​lionel-, #109)",1,144,FALSE,NA
haven,4a17454ff61c919854756fbbc3386bcc,`read_sas()` gains an encoding parameter to overide the encoding stored in the file if it is incorrect (#176). It gets better argument names (#214).,1,145,FALSE,NA
haven,135ac25b7547c9fc2b76c548d6d0d3b4,Added `type_sum()` method for labelled objects so they print nicely in tibbles.,1,146,FALSE,NA
haven,0a3a25f17aafac4aff8b8a5594b47281,"`write_dta()` now verifies that variable names are valid Stata variables (#132), and throws an error if you attempt to save a labelled vector that is not an integer (#144). You can choose which `version` of Stata's file format to output (#217).",1,147,FALSE,NA
haven,ec11d0fb39c8446bacad28a39d61b213,New `write_sas()` allows you to write data frames out to `sas7bdat` files. This is still somewhat experimental.,1,148,FALSE,NA
haven,701ca62bf02e1a7d9aa3860929ef0062,"`write_sav()` writes hms variables to SPSS time variables, and the ""measure"" type is set for each variable (#133).",1,149,FALSE,NA
haven,a641eced3c9f73c644c4b2b406608672,"`write_dta()` and `write_sav()` support writing date and date/times (#25, #139, #145). Labelled values are always converted to UTF-8 before being written out (#87). Infinite values are now converted to missing values since SPSS and Stata don't support them (#149). Both use a better test for missing values (#70).",1,150,FALSE,NA
haven,d92baeb2fe2dc2fc5989cc4813a1379e,"`zap_labels()` has been completely overhauled. It now works (@​markriseley, #69), and only drops label attributes; it no longer replaces labelled values with `NA`s. It also gains a data frame method that zaps the labels from every column.",1,151,FALSE,NA
haven,56a53884c38cc93d4a11b4271cfd48de,`print.labelled()` and `print.labelled_spss()` now display the type.,1,152,FALSE,NA
haven,4f49352631f507106ac68f3ca9e84f17,"fixed a bug in `as_factor.labelled`, which generated `<NA>`{=html}'s and wrong labels for integer labels.",1,153,FALSE,NA
haven,d186252bbf9a30612fda28b345d3c81a,"`zap_labels()` now leaves unlabelled vectors unchanged, making it easier to apply to all columns.",1,154,FALSE,NA
haven,5be5a5186020c0369a1bc71e382bfb72,`write_dta()` and `write_sav()` take more care to always write output as UTF-8 (#36),1,155,FALSE,NA
haven,f4b9ad7d6b1a2bd3955826298771bf69,"`write_dta()` and `write_sav()` won't crash if you give them invalid paths, and you can now use `~` to refer to your home directory (#37).",1,156,FALSE,NA
haven,87fba3d18c704170ce3c1b6bb3dbebca,"Byte variables are now correctly read into integers (not strings, #45), and missing values are captured correctly (#43).",1,157,FALSE,NA
haven,7a681f3a513b77b579281ca9b2a702f7,Added `read_stata()` as alias to `read_dta()` (#52).,1,158,FALSE,NA
haven,5b94cec07eeb78f95bc4b9cc4a332f25,`read_spss()` uses extension to automatically choose between `read_sav()` and `read_por()` (#53),1,159,FALSE,NA
haven,0866f58069c502cb8750497aa27c7be6,"Updates from ReadStat. Including fixes for various parsing bugs, more encodings, and better support for large files.",1,160,FALSE,NA
haven,d72b5cf493ef62023c4b11c42d35eca3,hms objects deal better with missings when printing.,1,161,FALSE,NA
haven,2b29f2404bd8ac4bdaf4deb60fc6442c,Fixed bug causing labels for numeric variables to be read in as integers and associated error: `` Error: `x` and `labels` must be same type ``,1,162,FALSE,NA
haven,fce61a98bf301c3c94ec229e31ab7674,Fixed memory initialisation problems found by valgrind.,1,163,FALSE,NA
hms,e37c65ccbf2c313e6687f09df495cd65,Internal changes only.,1,1,FALSE,NA
hms,0c658ff9126da85d9cf9a6ccdfc958e9,Merged cran-1.1.3 into main.,1,2,FALSE,NA
hms,01c9da0d2a88f8e490f99256ec99997c,Internal changes only.,1,3,FALSE,NA
hms,ff63c4a1d87ed5cb63aaa02bd04cf62d,"Fix method consistency, checked by R-devel.",1,4,FALSE,NA
hms,cb096d0180d0084068923efb2da5f030,Use rlang instead of ellipsis (#106).,1,5,FALSE,NA
hms,6c924faab55c54bb20e22087782b69e3,"Fix method consistency, checked by R-devel.",1,6,FALSE,NA
hms,97d9e802b279d29886530ebbf63ea3be,Use rlang instead of ellipsis (#106).,1,7,FALSE,NA
hms,956e99715071624b0676040995dbdb57,Re-rendered documentation for compatibility with R-devel.,1,8,FALSE,NA
hms,d67a43d62e8550179711872da75455b4,Avoid blanket import for lifecycle package for compatibility with upcoming rlang.,1,9,FALSE,NA
hms,d6504bd79a4b43c7cb9a8385172ce9b9,"Establish compatibility with development version of testthat (#101, @​lionel-).",1,10,FALSE,NA
hms,d1574d899d83818e617bfdc71a82d660,"`""hms""` objects no longer have a common type with `character` and `numeric`. Combining such values previously threw a warning, now throws an error (#94).",1,11,FALSE,NA
hms,344f877133d95a9ea82aa515b83b10ab,`vec_cast()` and `as_hms()` throw error instead of a warning if input can't be parsed (#68).,1,12,FALSE,NA
hms,07c2771f745be95bebe307a0639fde9b,"New `unique.hms()` method (#98, @​joethorley).",1,13,FALSE,NA
hms,372140f892ee6126267e765e1a03879a,`as_hms()` is a generic again (#81).,1,14,FALSE,NA
hms,1aa4d1198e085f4f6d095437bb07253c,Avoid `LazyData` in `DESCRIPTION`.,1,15,FALSE,NA
hms,d8c5ed9db400cadb3eb88b9849669c0d,Bump required versions of ellipsis and vctrs to avoid warning during package load.,1,16,FALSE,NA
hms,aa5ed86e8f74923b62c1d384b374ad97,Using lifecycle package (#94).,1,17,FALSE,NA
hms,fc238f0710a54a1f698cec08a909e34c,"hms is now marked as ""stable"".",1,18,FALSE,NA
hms,069c10344e5ba2c880a6def992794f2d,"`""hms""` objects no longer have a common type with `character` and `numeric`. Combining such values previously threw a warning, now throws an error (#94).",1,19,FALSE,NA
hms,12c63f545f7fac4180f4a5e78a581dd0,`vec_cast()` and `as_hms()` now throw error instead of a warning if input can't be parsed (#68).,1,20,FALSE,NA
hms,ce19e853d01b3f8e6a1959695fb03f2d,`as_hms()` is a generic again (#81).,1,21,FALSE,NA
hms,007a5e3a55d3527a1c4ddcd0665e1f34,"`round_hms()` and `trunc_hms()` gain `digits` argument (#78, @​hglanz).",1,22,FALSE,NA
hms,ecb3fee661faa8e6bf499accfc3b7eaa,"`as_hms()` and `vec_cast()` now correctly treat objects of class `""difftime""` with `integer` mode (#84).",1,23,FALSE,NA
hms,a9a173a963c6efdf2b1d5fc445a3f63d,Using lifecycle package (#94).,1,24,FALSE,NA
hms,74d2003e769acb721c198ff61fe82454,hms has been re-licensed as MIT (#86).,1,25,FALSE,NA
hms,6ecaf26cd9764e731191208befc0f841,"Use `vec_default_ptype2()`, remove `vec_ptype2.hms.unspecified()` (#80, @​romainfrancois).",1,26,FALSE,NA
hms,e3f01bcf9a155e94241392e0cc5fe7a7,`vec_ptype2.hms.default()` forwards to `vec_default_ptype2()` for compatibility with vctrs 0.2.1.,1,27,FALSE,NA
hms,b6408cdc998aeff688e5e12e24bf875b,"Remove `as.data.frame.hms()`, handeld by vctrs.",1,28,FALSE,NA
hms,380f833e3c62028c75dd334b623d5fdf,Internal changes only.,1,29,FALSE,NA
hms,403e96416152cd928e02b3aec7282d91,Work around parsing error that occurs on DST changeover dates (https://bugs.r-project.org/bugzilla/show_bug.cgi?id=16764).,1,30,FALSE,NA
hms,217ead31117bc905d4acbbd00a771425,Lossy casts from `character` vectors to `hms` now also trigger a warning if the cast succeeds in the first element of the vector but fails for other elements.,1,31,FALSE,NA
hms,9528e5f428a6a8b1f0b9efa967fb373f,Now based on vctrs \>= 0.2.0 (#61). This adds support for `vec_cast()` and `vec_ptype2()`. Some operations (such as subset assignment) are now stricter. The `new_hms()` constructor permits safe construction of `hms` objects from a numeric vector.,1,32,FALSE,NA
hms,b0c221b3e91b6f826c2cd92dee885c2c,The new `is_hms()` deprecates the existing `is.hms()`. `as.hms()` is deprecated in favor of `vec_cast()` or the new `as_hms()` (which is just a thin wrapper around `vec_cast()`).,1,33,FALSE,NA
hms,a4da0b39ffc6755dc919335983494c8f,Always show seconds in a pillar if they are different from zero (#54).,1,34,FALSE,NA
hms,584100a5c43752c660233b4e13c0147a,"Values with nonzero hours, seconds and split-seconds are now displayed correctly in tibbles (#56), even with a very small distance to the full second (#64).",1,35,FALSE,NA
hms,0b218e264eb5e2288ad1738563b92b17,Don't test colored output on CRAN.,1,36,FALSE,NA
hms,04cd38fb149ae4b20d030184f3b57964,"Correct reference link on r4ds (#58, @​evanhaldane).",1,37,FALSE,NA
hms,78898dc985b16f392f7d5d3414f4b64b,Adapted tests to pillar 1.2.1.,1,38,FALSE,NA
hms,258c7e29c529a5b230ff1080ada82999,"Preserve `NA` when converting to `character` (#51, @​jeroen).",1,39,FALSE,NA
hms,8e2978a4555e419c15ba9898cfd9054c,Adapted tests to pillar 1.1.0.,1,40,FALSE,NA
hms,5d6d3ce04c968eedb8562259356a446e,"`as.hms.POSIXt()` now defaults to the current time zone, the previous default was `""UTC""` and can be restored by calling `pkgconfig::set_config(""hms::default_tz"", ""UTC"")`.",1,41,FALSE,NA
hms,f2390ebd18ed28696ee1993e48f109e2,"Pillar support, will display `hms` columns in tibbles in color on terminals that support it (#43).",1,42,FALSE,NA
hms,cd11b6729c604f58942c54ef6b1c63d9,New `round_hms()` and `trunc_hms()` for rounding or truncating to a given multiple of seconds (#31).,1,43,FALSE,NA
hms,c4474f0f55b269ce2c5e481fe701d7e3,"New `parse_hms()` and `parse_hm()` to parse strings in ""HH:MM:SS"" and ""HH:MM"" formats (#30).",1,44,FALSE,NA
hms,3ee5d08232962120c7db7beda9356394,"`as.hms.POSIXt()` gains `tz` argument, default `""UTC""` (#28).",1,45,FALSE,NA
hms,503b7a08e936743866498a67210fe062,`as.hms.character()` and `parse_hms()` accept fractional seconds (#33).,1,46,FALSE,NA
hms,875156b47ad3bb549ac3e1c43f47c42d,"`hms()` now works correctly if all four components (days, hours, minutes, seconds) are passed (#49).",1,47,FALSE,NA
hms,fc8a2fd4ee07328271ba6472d844cc24,"`hms()` creates a zero-length object of class `hms` that prints as `""hms()""`.",1,48,FALSE,NA
hms,8a096dc4d8638cbc93425142857851be,`hms(integer())` and `as.hms(integer())` both work and are identical to `hms()`.,1,49,FALSE,NA
hms,1726d6480ffd3b819048d24846d8d36c,Values with durations of over 10000 hours are now printed correctly (#48).,1,50,FALSE,NA
hms,0976dbef52c3375ed696eb8c1f218372,"`c()` now returns a hms (#41, @​qgeissmann).",1,51,FALSE,NA
hms,96a76e0e79e37f410f7ef6a0a5de0b6e,Fix and enhance examples in `?hms`.,1,52,FALSE,NA
hms,34c29cd75b42d5e934c0efcc17064eb2,Documentation is in Markdown format now.,1,53,FALSE,NA
hms,a71f796a7c1268ed29b77763e3c5c9e1,Improved error message if calling `hms()` with a character argument (#29).,1,54,FALSE,NA
hms,a899aad3f190053d54d7cef3edb5af8a,"Fix `lubridate` test for compatibility with 1.6.0 (#23, @​vspinu).",1,55,FALSE,NA
hms,397b7b63635616924b471ccf3650bba7,NA values are formatted as `NA` (#22).,1,56,FALSE,NA
hms,073a8668c2af70cbcf1ab1e486566a52,Subsetting keeps `hms` class (#16).,1,57,FALSE,NA
hms,513f3a9a88428e3c1a72035adc1480a8,"`format.hms()` right-justifies the output by padding with spaces from the left, `as.character.hms()` remains unchanged.",1,58,FALSE,NA
hms,af1fbd1978fae17b5a0888f989c07a26,"Times larger than 24 hours or with split seconds are now formatted correctly (#12, #13).",1,59,FALSE,NA
hms,4fba5d60c10783b51dc80641602105ea,"Sub-second part is printed with up to six digits, for even smaller values trailing zeros are shown (#17).",1,60,FALSE,NA
hms,ef88a4096844e84b5747889c986e76a3,Values are stored as a numeric vector that contains the number of seconds since midnight.,1,61,FALSE,NA
hms,ef88a4096844e84b5747889c986e76a3,• Inherits from `difftime` class.,2,62,FALSE,Values are stored as a numeric vector that contains the number of seconds since midnight.
hms,ef88a4096844e84b5747889c986e76a3,"• Updating units is a no-op, anything different from `""secs""` issues a warning.",2,63,FALSE,Values are stored as a numeric vector that contains the number of seconds since midnight.
hms,0d1b62e9fdb40ec7b81c0fdbcc2e85ef,"Supports construction from time values, coercion to and from various data types, and formatting.",1,64,FALSE,NA
hms,0d1b62e9fdb40ec7b81c0fdbcc2e85ef,• Conversion from numeric treats input as seconds.,2,65,FALSE,"Supports construction from time values, coercion to and from various data types, and formatting."
hms,0d1b62e9fdb40ec7b81c0fdbcc2e85ef,• Negative times are formatted with a leading `-`.,2,66,FALSE,"Supports construction from time values, coercion to and from various data types, and formatting."
hms,d95271d6f04ff53cf516b13e6436c54c,Can be used as a regular column in a data frame.,1,67,FALSE,NA
hms,a0fbc6494c67b63aa2700962aaebf159,Full test coverage.,1,68,FALSE,NA
hms,a0fbc6494c67b63aa2700962aaebf159,"• Test for arithmetic with `Date`, `POSIXt` and `hms` classes.",2,69,FALSE,Full test coverage.
hms,a0fbc6494c67b63aa2700962aaebf159,• Test basic compatibility with `lubridate` package (#5).,2,70,FALSE,Full test coverage.
hms,c1812608f275931ec3dbb8afcd06011b,Interface:,1,71,FALSE,NA
hms,c1812608f275931ec3dbb8afcd06011b,• `hms()` (with rigorous argument checks),2,72,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,"• `as.hms()` for `character`, `numeric`, `POSIXct` and `POSIXlt`",2,73,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,"• `as.xxx.hms()` for `character`, `numeric` (implicitly), `POSIXct` and `POSIXlt`",2,74,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,• `is.hms()`,2,75,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,• `as.data.frame.hms()` (forwards to `as.data.frame.difftime()`),2,76,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,• `format.hms()`,2,77,FALSE,Interface:
hms,c1812608f275931ec3dbb8afcd06011b,• `print.hms()` (returns unchanged input invisibly),2,78,FALSE,Interface:
httr,4b8b57fa1db35a69f1a871e67d09fb59,Add support for seeking in uploads (#741).,1,1,FALSE,NA
httr,0422a84682d9819ecb9eda9aaeaadf27,Suppress another use of httpbin.,1,2,FALSE,NA
httr,0bbf93fe4430dc17be89ae4cc07e9459,More aggressively skip httpbin using tests.,1,3,FALSE,NA
httr,f8dfc4f76406d076cdb64eab4770457c,Remove vignette contents and point to httr2.,1,4,FALSE,NA
httr,2e992a19fbd97c2761697d8e493e08c6,Suppress use of httpbin in examples and tests because it has become unreliable.,1,5,FALSE,NA
httr,7656c854b89a5aded24583ed269bd1f6,"An internal helper that checks for an interactive session in the OOB flow now honors the `""rlang_interactive""` global option, in case it's necessary to declare the session to be interactive (enough) for OOB (@​jennybc, #734).",1,6,FALSE,NA
httr,da94fe76c1c77af8cbe73486873de54b,Fix intermittent failing test.,1,7,FALSE,NA
httr,b3bb309b3583d360ebaa5d20d06f6bde,Fix failing test.,1,8,FALSE,NA
httr,f06e73c8cc3cd23a4078a6a3bece97fe,Fix failing test.,1,9,FALSE,NA
httr,aa5fff3342785c918d2c2be48570e801,"`parse_url()` now refers to RFC3986 for the parsing of the URL's scheme, with a bit more permissive syntax (@​ymarcon, #615).",1,10,FALSE,NA
httr,de8a34a3e7aebc77b611e6c8790d71f7,"Remove the default `cainfo` option on Windows. Providing a CA bundle is not needed anymore because `curl` now uses the native schannel SSL backend. For recent versions of libcurl, overriding the CA bundle actually breaks custom trust certificates on corporate networks. (@​jeroen, #603)",1,11,FALSE,NA
httr,63709d380479896bf700724c98dc70a6,"`http_status()` now throws the correct error message if http status code is not in the list of known codes (@​Javdat, #567).",1,12,FALSE,NA
httr,b17d26ce47af1e4f8aaeaed953182e4e,"`POST()` gains an example on how to use `encode = ""raw""` for specific json string body (@​cderv, #563)",1,13,FALSE,NA
httr,e8c48434a5c88b6d6bb57a1c0f5722c2,"`RETRY()` now throws the correct error message if an error occurs during the request (@​austin3dickey, #581).",1,14,FALSE,NA
httr,122e2458e87da6f32980a6d9f6b42b8f,"`VERB()` and `RETRY()` now automatically uppercase methods (@​patr1ckm, #571).",1,15,FALSE,NA
httr,8d6bfc6ef3733f8c65c8a33b599c6c02,"`init_oauth2.0()` passes `use_basic_auth` onwards, enabling basic authentication for OAuth 2.0 (@​peterhartman, #484).",1,16,FALSE,NA
httr,8d7559405c21b947ab82c13e49c19d99,"`oauth2.0_token()` (and `init_oauth2.0()`) gains a `oob_value` argument that allows arbitrary values to be sent for the `request_uri` parameter during OOB flows (@​ctrombley, #493).",1,17,FALSE,NA
httr,1549c1838ee47400149fa7c7a0e8c8e4,"`oauth2.0_token()` (and `init_oauth2.0()`) gain a new `query_authorize_extra` parameter make it possible to add extra query parameters to the authorization URL. This is needed some APIs (e.g. fitbit) (@​cosmomeese, #503).",1,18,FALSE,NA
httr,7448cb1395b9f2972110567a30d007e5,"`oauth_endpoints()` contains updated urls for Yahoo (@​ctrombley, #493) and Vimeo (#491).",1,19,FALSE,NA
httr,ab3b3f66ed20dfcc113d1d7a53ebd385,OAuth 2.0 token refresh gives a more informative error if it fails (#516).,1,20,FALSE,NA
httr,2e702becc1b894f9389af2f7dab69885,"Prior to token retrieval from on-disk cache, scopes are de-duplicated, sorted, and stripped of names before being hashed. This eliminates a source of hash mismatch that causes new tokens to be requested, even when existing tokens had the necessary scope. (@​jennybc, #495)",1,21,FALSE,NA
httr,7ea3b386774e20b307e15101626f55db,The Facebook OAuth demo now uses device flow (#510). This allows you to continue using the FB api from R under their new security policy.,1,22,FALSE,NA
httr,068e4ad32ff8a40f0c07bb8f6c4728d2,"A new Noun Project demo shows how to use one-legged OAuth1 (@​cderv, #548).",1,23,FALSE,NA
httr,0f625f2002e687e9d9f399b9e611db14,The Vimeo demo has been updated from OAuth 1.0 to 2.0 (#491).,1,24,FALSE,NA
httr,fe88de5b90543092c730e3910b2a77f5,"`cache_info()` now handles un-named flags, as illustrated by ""private"" when the server returns ""private, max-age = 0"".",1,25,FALSE,NA
httr,fed0f1dd06dac7bd9088caf01de9b507,"`parse_http_date()` gets a better default value for the `failure` argument so that reponses with unparseable dates can be printed without error (@​shrektan, #544).",1,26,FALSE,NA
httr,cc709f83c907136ba931d990d01b5673,"`POST()` now uses 22 digits of precision for `body` list elements by default (@​jmwerner, #490)",1,27,FALSE,NA
httr,f092fd28ff5e192ebebc0c82792888cb,"`RETRY()` now terminates on any successful request, regardless of the value of `terminate_on`. To return to the previous behaviour, set `terminate_on_success = FALSE` (#522).",1,28,FALSE,NA
httr,048b7795f34dd7472e5f7bf1c82ddaca,"In `RETRY()` and `VERB()`, `HEAD` requests now succeed (#478, #499).",1,29,FALSE,NA
httr,c620632c586d039fabf8adc1f7a8b943,Encoding falls back to UTF-8 if not supplied and content-type parsing fails (#500).,1,30,FALSE,NA
httr,96708a0fa8f27ec647a497ca272bb756,"Non-http(s) headers are no longer parsed (@​billdenney, #537). This makes it possible to use httr with protocols other than http, although this is not advised, and you're own your own.",1,31,FALSE,NA
httr,6721ef5d36c91528afd6669406722236,Re-enable on-disk caching (accidentally disabled in #457) (#475),1,32,FALSE,NA
httr,d71be921db485a1f14c9146e141280fc,Deprecated `safe_callback()` has been removed.,1,33,FALSE,NA
httr,bf237b99f73974a2347cd01c6f1394b3,"`is_interactive` argument to `init_oauth1.0()`, `init_oauth2.0()` and `oauth_listener()` has been deprecated, as the R session does not actually need to be interactive.",1,34,FALSE,NA
httr,522dd58f223da4a4386bed61d28da041,"New `set_callback()` and `get_callback()` set and query callback functions that are called right before and after performing an HTTP request (@​gaborcsardi, #409)",1,35,FALSE,NA
httr,72e1ddee9940a788dfba0ffcd873a6d7,"`RETRY()` now retries if an error occurs during the request (@​asieira, #404), and gains two new arguments:",1,36,FALSE,NA
httr,72e1ddee9940a788dfba0ffcd873a6d7,"• `terminate_on` gives you greater control over which status codes should it stop retrying. (@​asieira, #404)",2,37,FALSE,"`RETRY()` now retries if an error occurs during the request (@​asieira, #404), and gains two new arguments:"
httr,72e1ddee9940a788dfba0ffcd873a6d7,• `pause_min` allows for sub-second delays. (Use with caution! Generally the default is preferred.) (@​r2evans),2,38,FALSE,"`RETRY()` now retries if an error occurs during the request (@​asieira, #404), and gains two new arguments:"
httr,72e1ddee9940a788dfba0ffcd873a6d7,"• If the server returns HTTP status code 429 and specifies a `retry-after` value, that value will now be used instead of exponential backoff with jitter, unless it's smaller than `pause_min`. (@​nielsoledam, #472)",2,39,FALSE,"`RETRY()` now retries if an error occurs during the request (@​asieira, #404), and gains two new arguments:"
httr,ca169f748de94f92f13481122bf5e6ea,"New oauth cache files are always added to `.gitignore` and, if it exists, `.Rbuildignore`. Specifically, this now happens when option `httr_oauth_cache = TRUE` or user specifies cache file name explicitly. (@​jennybc, #436)",1,40,FALSE,NA
httr,bb8db9175758df1a227f782c1c111b00,"`oauth_encode()` now handles UTF-8 characters correctly. (@​yutannihilation, #424)",1,41,FALSE,NA
httr,1f6809d0326c05f74a83149270f4a756,`oauth_app()` allows you to specify the `redirect_url` if you need to customise it.,1,42,FALSE,NA
httr,774744aead48ceb29eb6e0363386e745,"`oauth_service_token()` gains a `sub` parameter so you can request access on behalf of another user (#410), and accepts a character vector of `scopes` as was described in the documentation (#389).",1,43,FALSE,NA
httr,4c39647eb9d7ac2e060486cfa9062f06,"`oauth_signature()` now normalises the URL as described in the OAuth1.0a spec (@​leeper, #435)",1,44,FALSE,NA
httr,00ed4e19b534eb947415a4ada089b698,New `oauth2.0_authorize_url()` and `oauth2.0_access_token()` functions pull out parts of the OAuth process for reuse elsewhere (#457).,1,45,FALSE,NA
httr,f22c55759673ff08a352f8d6d5fb3085,`oauth2.0_token()` gains three new arguments:,1,46,FALSE,NA
httr,f22c55759673ff08a352f8d6d5fb3085,"• `config_init` allows you to supply additional config for the initial request. This is needed for some APIs (e.g. reddit) which rate limit based on `user_agent` (@​muschellij2, #363).",2,47,FALSE,`oauth2.0_token()` gains three new arguments:
httr,f22c55759673ff08a352f8d6d5fb3085,"• `client_credentials`, allows you to use the OAauth2 *Client Credential Grant*. See RFC 6749 for details. (@​cderv, #384)",2,48,FALSE,`oauth2.0_token()` gains three new arguments:
httr,f22c55759673ff08a352f8d6d5fb3085,• A `credentials` argument that allows you to customise the auth flow. For advanced used only (#457),2,49,FALSE,`oauth2.0_token()` gains three new arguments:
httr,c877042ccad052cbabc9d7666600546a,"`is_interactive` argument to `init_oauth1.0()`, `init_oauth2.0()` and `oauth_listener()` has been deprecated, as the R session does not need to be interactive.",1,50,FALSE,NA
httr,06ef30dd64b1db03bb7c631a7e406922,`BROWSER()` prints a message telling you to browse to the URL if called in a non-interactive session.,1,51,FALSE,NA
httr,26cf35fdb65e0e6e9708e02cd1dd90e8,"`find_cert_bundle()` will now correctly find cert bundle in ""R_HOME/etc"" (@​jiwalker-usgs, #386).",1,52,FALSE,NA
httr,f34a7765c2b867629b1abe7bac35c47a,"You can now send lists containing `curl::form_data()` in the `body` of requests with \`encoding = ""multipart"". This makes it possible to specify the mime-type of individual components (#430).",1,53,FALSE,NA
httr,51701355ff31cbfeb5dbaf56db9f6819,"`modify_url()` recognises more forms of empty queries. This eliminates a source of spurious trailing `?` and `?=` (@​jennybc, #452).",1,54,FALSE,NA
httr,d5b3d1a2f012c59d58ba057096d307d6,The `length()` method of the internal `path` class is no longer exported (#395).,1,55,FALSE,NA
httr,131d63e755a735b97f5b5cb72d2cfd27,Fix bug with new cache creation code: need to check that cache isn't an empty file.,1,56,FALSE,NA
httr,16477a6dce0cfada5e75d7328683b577,"`oauth_signature()` no longer prepends 'oauth\_' to additional parameters. (@​jimhester, #373)",1,57,FALSE,NA
httr,182e29097216cbbf1c61d7a2dd22cb71,All `print()` methods now invisibly return `x` (#355).,1,58,FALSE,NA
httr,1ae1a3a40b853ee7ba1159e79fb5508b,`DELETE()` gains a body parameter (#326).,1,59,FALSE,NA
httr,83e0e10314b8898fd8d1c579f3413daa,"New `encode = ""raw""` allows you to do your own encoding for requests with bodies.",1,60,FALSE,NA
httr,1a4a1cd56d5abc2595d321a78c63403a,"New `http_type()` returns the content/mime type of a request, sans parameters.",1,61,FALSE,NA
httr,01a18eb09fcd61b3d1d099805765b675,"No longer uses use custom requests for standard `POST` requests (#356, #357). This has the side-effect of properly following redirects after `POST`, fixing some login issues (eg hadley/rvest#133).",1,62,FALSE,NA
httr,57ac29a9582b9b5d87b208a6b980211e,"Long deprecated `multipart` argument to `POST()`, `PUT()` and `PATCH()` has been removed.",1,63,FALSE,NA
httr,1c7828069856cb701a4479470b708f70,"The cross-session OAuth cache is now created with permission 0600, and should give a better error if it can't be created (#365).",1,64,FALSE,NA
httr,d9dea3a9055c30648f18995e49bd09b6,New `RETRY()` function allows you to retry a request multiple times until it succeeds (#353).,1,65,FALSE,NA
httr,b161c3287686b6b21d2ba57ec3e857f2,"The default user agent string is now computed once and cached. This is a small performance improvement, but important for local connections (#322, @​richfitz).",1,66,FALSE,NA
httr,cedd8b747157820d079be64b835f4c81,`oauth_callback()` gains trailing slash for facebook compatibility (#324).,1,67,FALSE,NA
httr,5f39c470d67317e71b3d265d9bde0449,`progress()` gains `con` argument to control where progress bar is rendered (#359).,1,68,FALSE,NA
httr,6d10374357b58f6e41a7a68eb580c94c,"When `use_basic_auth` option is used to obtain a token, token refreshes will now use basic authentication too.",1,69,FALSE,NA
httr,67e9f1711365ecbc3f5603ed713b0a4b,"Suppress unhelpful ""No encoding supplied: defaulting to UTF-8."" when printing a response (#327).",1,70,FALSE,NA
httr,a337ab2c4570a9917592417d72e38ff4,All auto parser functions now have consistent arguments. This fixes problem where `...` is pass on to another function (#330).,1,71,FALSE,NA
httr,1333faf06c4f28daed620e16f537c6d2,"`parse_media()` can once again parse multiple parameters (#362, #366).",1,72,FALSE,NA
httr,7f70b22fddd929004ab1787bd66ce49d,Correctly cast `config` in `POST()`.,1,73,FALSE,NA
httr,42ddebd3db09e53a91cba89dffe98b78,Fix in readfunction to close connection when done.,1,74,FALSE,NA
httr,e52f5ebe0285b07dfe426694e2bd16bc,"`stop_for_status()`, `warn_for_status()` and (new) `message_for_status()` replace `message` argument with new `task` argument that optionally describes the current task. This allows API wrappers to provide more informative error messages on failure (#277, #302). `stop_for_status()` and `warn_for_status()` return the response if there were no errors. This makes them easier to use in pipelines (#278).",1,75,FALSE,NA
httr,cf9ee935e2aa663b62e65e3e24bd99ec,"`url_ok()` and `url_successful()` have been deprecated in favour of the more flexible `http_error()`, which works with urls, responses and integer status codes (#299).",1,76,FALSE,NA
httr,164538dad67cf58a310d9abbed9785e1,"`oauth1.0_token()` gains RSA-SHA1 signature support with the `private_key` argument (@​nathangoulding, #316).",1,77,FALSE,NA
httr,d5cfab3dcb7e802ae1dc4278f4ccae0f,`oauth2.0_token()` throws an error if it fails to get an access token (#250) and gains two new arguments:,1,78,FALSE,NA
httr,d5cfab3dcb7e802ae1dc4278f4ccae0f,"• `user_params` allows you to pass arbitrary additional parameters to the token access endpoint when acquiring or refreshing a token (@​cornf4ke, #312)",2,79,FALSE,`oauth2.0_token()` throws an error if it fails to get an access token (#250) and gains two new arguments:
httr,d5cfab3dcb7e802ae1dc4278f4ccae0f,"• `use_basic_auth` allows you to pick use http authentication when getting a token (#310, @​grahamrp).",2,80,FALSE,`oauth2.0_token()` throws an error if it fails to get an access token (#250) and gains two new arguments:
httr,e4c347085e4717e09c7c5a2c876de12f,"`oauth_service_token()` checks that its arguments are the correct types (#282) and anways returns a `request` object (#313, @​nathangoulding).",1,81,FALSE,NA
httr,e75eff544a323e376eb2442a596124e6,"`refresh_oauth2.0()` checks for known OAuth2.0 errors and clears the locally cached token in the presense of any (@​nathangoulding, #315).",1,82,FALSE,NA
httr,74877da780900311453ca8645b46df9d,"httr no longer bundles `cacert.pem`, and instead it relies on the bundle in openssl. This bundle is only used a last-resort on windows with R \<3.2.0.",1,83,FALSE,NA
httr,b7c084044fc3b687052424add0e2d306,"Switch to 'openssl' package for hashing, hmac, signatures, and base64.",1,84,FALSE,NA
httr,544e2fc97efdbccaec2ef48e656a2ea7,"httr no longer depends on stringr (#285, @​jimhester).",1,85,FALSE,NA
httr,f1632e6f0edf67a4fd7aa2bb20ed3515,"`build_url()` collapses vector `path` with `/` (#280, @​artemklevtsov).",1,86,FALSE,NA
httr,01577ee8c958b1184afcac398c6e1570,`content(x)` uses xml2 for XML documents and readr for csv and tsv.,1,87,FALSE,NA
httr,45d8955b08f90471c824b58408c13546,"`content(, type = ""text"")` defaults to UTF-8 encoding if not otherwise specified.",1,88,FALSE,NA
httr,4a80cc75854a4bbf4807a5478f873930,`has_content()` correctly tests for the presence/absence of body content (#91).,1,89,FALSE,NA
httr,ae8f8cdfcd0468a56d92c6cad5d96696,`parse_url()` correctly parses urls like `file:///a/b/c` work (#309).,1,90,FALSE,NA
httr,01d9d79d66d1dfd737b78f3acc4e1bd7,"`progress()` returns `TRUE` to fix for 'progress callback must return boolean' warning (@​jeroenooms, #252).",1,91,FALSE,NA
httr,6f6246d36a55e214e13e960c6297568b,"`upload_file()` supports very large files (\> 2.5 Gb) (@​jeroenooms, #257).",1,92,FALSE,NA
httr,ecd5762f6715fdb20a6279fb60aa1741,"httr no longer uses the RCurl package. Instead it uses the curl package, a modern binding to libcurl written by Jeroen Ooms (#172). This should make httr more reliable and prevent the ""easy handle already used in multi handle"" error. This change shouldn't affect any code that uses httr - all the changes have happened behind the scenes.",1,93,FALSE,NA
httr,a3705df25658598e8bb660ecb16e45ce,"The `oauth_listener` can now listen on a custom IP address and port (the previously hardwired ip:port of `127.0.0.1:1410` is now just the default). This permits authentication to work under other settings, such as inside docker containers (which require localhost uses `0.0.0.0` instead). To configure, set the system environmental variables `HTTR_LOCALHOST` and `HTTR_PORT` respectively (@​cboettig, #211).",1,94,FALSE,NA
httr,29dfb4a5e558b08ef9300211e5c72a20,"`POST(encode = 'json')` now automatically turns length-1 vectors into json scalars. To prevent this automatic ""unboxing"", wrap the vector in `I()` (#187).",1,95,FALSE,NA
httr,48b43345e173aab64c3141b6b9624562,"`POST()`, `PUT()` and `PATCH()` now drop `NULL` body elements. This is convenient and consistent with the behaviour for url query params.",1,96,FALSE,NA
httr,cb3a0a6846b5cc821a0dd714b58c8d3c,`cookies` argument to `handle()` is deprecated - cookies are always turned on by default.,1,97,FALSE,NA
httr,e7ec215dd0cb94fb032d57ab46c1bb62,`brew_dr()` has been renamed to `httr_dr()` - that's what it should've been in the first place!,1,98,FALSE,NA
httr,79503b9cedd6806bd0a3f33c399695c3,"`content(type = ""text"")` compares encodings in a case-insensitive manner (#209).",1,99,FALSE,NA
httr,a9cd6c0cb8e3854ee76cf692586e0d98,"`context(type = ""auto"")` uses a better strategy for text based formats (#209). This should allow the `encoding` argument to work more reliably.",1,100,FALSE,NA
httr,2e12e86e9aa81e8c21781ac229b75f9a,`config()` now cleans up duplicated options (#213).,1,101,FALSE,NA
httr,3524fefc99f18e3a1a7b40770bc5d968,Uses `CURL_CA_BUNDLE` environment variable to look for cert bundle on Windows (#223).,1,102,FALSE,NA
httr,c1c04e9fb6bf10f63f21829c0e539bcb,`safe_callback()` is deprecated - it's no longer needed with curl.,1,103,FALSE,NA
httr,4b2e5fc7d90db0b759bdcb159f294440,`POST()` and `PUT()` now clean up after themselves when uploading a single file (@​mtmorgan).,1,104,FALSE,NA
httr,dfd9fa0a52006408b9cbcebcdee9d141,`proxy()` gains an `auth` argument which allows you to pick the type of http authentication used by the proxy (#216).,1,105,FALSE,NA
httr,75f2669d3fa5d210bd94a321795f7d1c,`VERB()` gains `body` and `encode` arguments so you can generate arbitrary requests with a body.,1,106,FALSE,NA
httr,8dcbaffea63667d1d301c8939fb08f13,tumblr added as an `oauth_endpoint`.,1,107,FALSE,NA
httr,c87d5c28ec612e1103259726099b579b,"Correctly parse headers with multiple `:`, thanks to @​mmorgan (#180).",1,108,FALSE,NA
httr,c1eaa8d0942ed9e2eb1f41b12523f1a0,"In `content()`, if no type is provided to function or specified in headers, and we can't guess the type from the extension, we now assume that it's `application/octet-stream` (#181).",1,109,FALSE,NA
httr,946b443a0c1cd7c703e985efe3132497,Throw error if `timeout()` is less than 1 ms (#175).,1,110,FALSE,NA
httr,666b99abdcea194415439c0366be392a,Improved LinkedIn OAuth demo (#173).,1,111,FALSE,NA
httr,f6743b8ae50527d280e0b32b33806e0b,New `write_stream()` allows you to process the response from a server as a stream of raw vectors (#143).,1,112,FALSE,NA
httr,cde831db434e564c29ff2b761122ca30,"Suport for Google OAuth2 service accounts. (#119, thanks to help from @​siddharthab).",1,113,FALSE,NA
httr,ce59d19c51ee55ba7464aa7416d3f0d2,`VERB()` allows to you use custom http verbs (#169).,1,114,FALSE,NA
httr,3a714dd9605bd5940c83d1cfae565aa6,"New `handle_reset()` to allow you to reset the handle if you get the error ""easy handle already used in multi handle"" (#112).",1,115,FALSE,NA
httr,cbf33373c2bb47592649fe7fe76bc7a5,Uses R6 instead of RC. This makes it possible to extend the OAuth classes from outside of httr (#113).,1,116,FALSE,NA
httr,db0ad19a7e31ba037c1307c1dbe157d5,Now only set `capath` on Windows - system defaults on linux and mac ox seem to be adequate (and in some cases better). I've added a couple of tests to ensure that this continues to work in the future.,1,117,FALSE,NA
httr,9f1cefd4484aa8154639a8f3c29b24eb,"`vignette(""api-packages"")` gains more detailed instructions on setting environment variables, thanks to @​jennybc.",1,118,FALSE,NA
httr,b292787610c39b964ec81290d46a8656,Add `revoke_all()` to revoke all stored tokens (if possible) (#77).,1,119,FALSE,NA
httr,cf25b836ac9191b241d88491e9791176,"Fix for OAuth 2 process when using `options(httr_oob_default = TRUE)` (#126, @​WillemPaling).",1,120,FALSE,NA
httr,41c9d7916de2307eb0aa0fa5c8d2d9f9,New `brew_dr()` checks for common problems. Currently checks if your libCurl uses NSS. This is unlikely to work so it gives you some advice on how to fix the problem (thanks to @​eddelbuettel for debugging this problem).,1,121,FALSE,NA
httr,65f5584f5e7374d98c1c8575a288b235,"`Content-Type` set to title case to avoid errors in servers which do not correctly implement case insensitivity in header names. (#142, #146) thanks to Håkon Malmedal (@​hmalmedal) and Jim Hester (@​jimhester).",1,122,FALSE,NA
httr,ab914a912ddc17fbb8ef1e7716fca435,Correctly parse http status when it only contains two components (#162).,1,123,FALSE,NA
httr,52e576b73011ce54a751d43354f94c22,Correctly parse http headers when field name is followed by any amount (including none) of white space.,1,124,FALSE,NA
httr,61dfe765c797f43f6a5e0fbe7e146e0b,"Default ""Accepts"" header set to `application/json, text/xml, application/xml, */*`: this should slightly increase the likelihood of getting xml back. `application/xml` is correctly converted to text before being parsed to `XML::xmlParse()` (#160).",1,125,FALSE,NA
httr,a603d9605273a1e1304499a82af8c209,Make it again possible to override the content type set up by `POST()` when sending data (#140).,1,126,FALSE,NA
httr,5fced19611623a1cf54bfc7a835fce2a,New `safe_callback()` function operator that makes R functions safe for use as RCurl callbacks (#144).,1,127,FALSE,NA
httr,ea8bf48ef95273bacc2d4eaca3d3cea2,"Added support for passing oauth1 tokens in URL instead of the headers (#145, @​bogstag).",1,128,FALSE,NA
httr,95cca328b03c3d046ca90b4f4bacf478,Default to out-of-band credential exchange when `httpuv` isn't installed. (#168),1,129,FALSE,NA
httr,7d273285e9e58a7ed0194166dc6948ff,"`new_token()` has been removed - this was always an internal function so you should never have been using it. If you were, switch to creating the tokens directly.",1,130,FALSE,NA
httr,8c02611e4fd0a02db157d672df7c2e23,"Deprecate `guess_media()`, and instead use `mime::guess_type()` (#148).",1,131,FALSE,NA
httr,4024cd2bb47145baa46c4311b905234c,You can now save response bodies directly to disk by using the `write_disk()` config. This is useful if you want to capture large files that don't fit in memory (#44).,1,132,FALSE,NA
httr,f70d25f88be3a2d155bee4de0c159913,"Default accept header is now ""application/json, text/xml, */*"" - this should encourage servers to send json or xml if they know how.",1,133,FALSE,NA
httr,bc8c20265461bbe9eb31b4f247d77372,"`httr_options()` allows you to easily filter the options, e.g. `httr_options(""post"")`",1,134,FALSE,NA
httr,bb3101f725efc843368a682447ffeebd,`POST()` now specifies Curl options more precisely so that Curl know's that you're doing a POST and can respond appropriately to redirects.,1,135,FALSE,NA
httr,4ef53a451ff97e55f022ea72449e4b4e,Preliminary and experimental support for caching with `cache_info()` and `rerequest()` (#129). Be aware that this API is likely to change in the future.,1,136,FALSE,NA
httr,558d165b1c4e7d7b0a07d6883f3601e2,`parse_http_date()` parses http dates according RFC2616 spec.,1,137,FALSE,NA
httr,352198978f6ec4745ee06d685c6ac913,Requests now print the time they were made.,1,138,FALSE,NA
httr,9e6431e93a8275c0ce4c7e401b67e420,Mime type `application/xml` is automatically parsed with \``XML::xmlParse()`. (#128),1,139,FALSE,NA
httr,aea66e154da9baf3c0bd6454812a3b3d,Now possible to specify both handle and url when making a request.,1,140,FALSE,NA
httr,f72bc5a5d8bf7da2ca4f26c4916df0eb,"`content(type = ""text"")` uses `readBin()` instead of `rawToChar()` so that strings with embedded NULLs (e.g. WINDOWS-1252) can be re-encoded to UTF-8.",1,141,FALSE,NA
httr,7a7a922ad19465def0257da19805e5cc,`DELETE()` now returns body of request (#138).,1,142,FALSE,NA
httr,0d0608c26820a6e9f092abaf0b46e8b5,`headers()` is now a generic with a method for response objects.,1,143,FALSE,NA
httr,662f0711747045e4e99404791621e06a,"`parse_media()` failed to take into account that media types are case-insenstive - this lead to bad re-encoding for content-types like ""text/html; Charset=UTF-8""",1,144,FALSE,NA
httr,760c541464e0973b0ec672950925a88f,Typo which broke `set_cookies()` fixed by @​hrbrmstr.,1,145,FALSE,NA
httr,f92a8444e181e8ee498e6403a886d62a,"`url_ok()` works correctly now, instead of always returning `FALSE`, a bug since version 0.4 (#133).",1,146,FALSE,NA
httr,ebe9d2c066af9cd62c3b6fc7420377f5,Remove redundant arguments `simplifyDataFrame` and `simplifyMatrix` for json parser.,1,147,FALSE,NA
httr,15c598bce360c981df500cee1c205a8e,New `headers()` and `cookies()` functions to extract headers and cookies from responses. Previoulsy internal `status_code()` function now exported to extract `status_code()` from responses.,1,148,FALSE,NA
httr,5951f32f9489b9501649816247db31ff,"`POST()`, `PUT()`, and `PATCH()` now use `encode` argument to determine how list inputs are encoded. Valid values are ""multiple"", ""form"" or ""json"". The `multipart` argument is now deprecated (#103). You can stream a single file from disk with `upload_file(""path/"")`. The mime type will be guessed from the extension, or can be supplied explicitly as the second argument to `upload_file()`.",1,149,FALSE,NA
httr,088657653460624b03461f2abe6555e3,"`progress()` will display a progress bar, useful if you're doing large uploads or downloads (#17).",1,150,FALSE,NA
httr,a4aa68d5fddc8cd7eff6d4ca747cb4b3,"`verbose()` now uses a custom debug function so that you can see exactly what data is sent to the server. Arguments control exactly what is included, and the defaults have been selected to be more helpful for the most common cases (#102).",1,151,FALSE,NA
httr,c5fb851989b9e9d6e3b0052977ecd5ae,`with_verbose()` makes it easier to see verbose information when http requests are made within other functions (#87).,1,152,FALSE,NA
httr,6abb51f9ed9d990de676f5af88359222,New `quickstart` vignette to help you get up and running with httr.,1,153,FALSE,NA
httr,57d7b91406da35259a58e89149742885,New `api-packages` vignette describes how best practices to follow when writing R packages that wrap web APIs.,1,154,FALSE,NA
httr,c8346104c915eb4837d4b16cef9346d7,"`httr_options()` lists all known config options, translating between their short R names and the full libcurl names. The `curl_doc()` helper function allows you to jump directly to the online documentation for an option.",1,155,FALSE,NA
httr,80f50a5a0be71ff4f7fe24fa1e07f529,"`authenticate()` now defaults to `type = ""basic""` which is pretty much the only type of authentication anyone uses.",1,156,FALSE,NA
httr,4eae119a026a7d8f797b5b1059da521b,Updated `cacert.pem` to version at 2014-04-22 (#114).,1,157,FALSE,NA
httr,29fcb715d6bafb788137b17132d96a5f,"`content_type()`, `content_type_xml()` and `content_type_json()` make it easier to set the content type for `POST` requests (and other requests with a body).",1,158,FALSE,NA
httr,32d32648abe68e1f3d4da20c295cdc37,`has_content()` tells you if request has any content associated with it (#91).,1,159,FALSE,NA
httr,627cd617fc3894ed9299959a71ad236b,"Add `is_interactive()` parameter to `oauth_listener()`, `init_oauth1.0()` and `init_oauth2.0()` (#90).",1,160,FALSE,NA
httr,6e261fbaa40b3e8e4a023f5cd404833b,`oauth_signature()` and `oauth_header()` now exported to make it easier to construct custom authentication for APIs that use only some components of the full OAuth process (e.g. 2 legged OAuth).,1,161,FALSE,NA
httr,f0494997aa851e03195300457e99a9e1,NULL `query` parameters are now dropped automatically.,1,162,FALSE,NA
httr,ff46deef2f3a9baca88d208cdb05e94d,"When `print()`ing a response, httr will only attempt to print the first few lines if it's a text format (i.e. either the main type is text or is application/json). It will also truncate each line so that it fits on screen - this should hopefully make it easier to see a little bit of the content, without filling the screen with gibberish.",1,163,FALSE,NA
httr,c4ee085ccfb1c5b59e6ab5294c17b30a,`new_bin()` has been removed: it's easier to see what's going on in examples with `httpbin.org`.,1,164,FALSE,NA
httr,8fe951428b6fbd26222e2b48627ad710,`user_agent()` once again overrides default (closes #97),1,165,FALSE,NA
httr,a1d7bc4684766e663e2b50039b11a6aa,"`parse(type = ""auto"")` returns NULL if no content associated with request (#91).",1,166,FALSE,NA
httr,8ac33c7690b015d36ad0d850936e0a9c,Better strategy for resetting Curl handles prevents carry-over of error status and other problems (#112).,1,167,FALSE,NA
httr,ea793ea74b09b164b0fc35b7036182fd,`set_config()` and `with_config()` now work with `token`s (#111).,1,168,FALSE,NA
httr,1671c72d0db241fc1782c143197dcaa4,"The OAuth token objects are now reference classes, which mean they can be updated in place, such as when an access token expires and needs to be refreshed. You can manually refresh by calling `$refresh()` on the object. You can force reinitialisation (to do the complete dance from scratch) by calling `$reinit(force = TRUE)`.",1,169,FALSE,NA
httr,488d50f763209e571baba05d63f44e30,"If a signed OAuth2 request fails with a 401 and the credentials have a `refresh_token`, then the OAuth token will be automatically refreshed (#74).",1,170,FALSE,NA
httr,71ddacb4dc443561fe3c6dc5e07fa698,"OAuth tokens are cached locally in a file called `.httr-oauth` (unless you opt out). This file should not be included in source code control, and httr will automatically add to `.gitignore` and `.Rbuildignore`. The caching policy is described in more detail in the help for the `Token` class.",1,171,FALSE,NA
httr,1ac10d7f756ed19ddfdd7babd7745260,"The OAuth2 dance can now be performed without running a local webserver (#33, thanks to @​craigcitro). To make that the default, set `options(httr_oob_default = TRUE)`. This is useful when running R remotely.",1,172,FALSE,NA
httr,f685edea2b8b6e6d92a393f7ffa47e05,"Add support for passing oauth2 tokens in headers instead of the URL, and make this the default (#34, thanks to @​craigcitro).",1,173,FALSE,NA
httr,e61a25f4e4869973666b12f6c7d15e45,OAuth endpoints can store arbitrary extra urls.,1,174,FALSE,NA
httr,e89397053900384f702c4c9dcb19d842,"Use the httpuv webserver for the OAuth dance instead of the built-in httpd server (#32, thanks to @​jdeboer). This makes the dance work in Rstudio, and also seems a little faster. Rook is no longer required.",1,175,FALSE,NA
httr,a0109f146979f57e46f4e781cf7236ed,`oauth_endpoints()` includes some popular OAuth endpoints.,1,176,FALSE,NA
httr,1e0832a5dc1b1312f591bddc819fa91c,"HTTP verbs (`GET()`, `POST()` etc) now pass unnamed arguments to `config()` and named arguments to `modify_url()` (#81).",1,177,FALSE,NA
httr,a2094cdf03e0e3352a6611609bfcdf6d,"The placement of `...` in `POST()`, `PATCH()` and `PUT()` has been tweaked so that you must always specify `body` and `multipart` arguments with their full name. This has always been recommended practice; now it is enforced.",1,178,FALSE,NA
httr,e99dafdec58693cdcc33c9d1d92e89c1,"`httr` includes its own copy of `cacert.pem`, which is more recent than the version included in RCurl (#67).",1,179,FALSE,NA
httr,ab66d0321849c1a47c2fef1e61000041,"Added default user agent which includes versions of Curl, RCurl and httr.",1,180,FALSE,NA
httr,9000ca4acda28d55de6152faed308995,Switched to jsonlite from rjson.,1,181,FALSE,NA
httr,dc39bd44b3cd5a7a0293f217440dfe51,Content parsers no longer load packages on to search path.,1,182,FALSE,NA
httr,cabcddf1a5df5bd32e34f531fe43ac95,`stop_for_status()` now raises errors with useful classes so that you can use `tryCatch()` to take different actions depending on the type of error. See `http_condition()` for more details.,1,183,FALSE,NA
httr,eab3c0f800352e744caf60c818ed471d,httr now imports the methods package so that it works when called with Rscript.,1,184,FALSE,NA
httr,4d7d14878353a8bf41f038b276f0864d,New automatic parsers for mime types `text/tab-separated-values` and `text/csv` (#49),1,185,FALSE,NA
httr,67872874d0fd66a69b4736320dbee1cd,"Add support for `fragment` in url building/parsing (#70, thanks to @​craigcitro).",1,186,FALSE,NA
httr,a544f22e365a57fff3f5a982c13676b5,"You can suppress the body entirely in `POST()`, `PATCH()` and `PUT()` with `body = FALSE`.",1,187,FALSE,NA
httr,ebcc396f9dce595fb65d2bbeb58cc77a,"If you supply multiple headers of the same name, the value of the most recently set header will always be used.",1,188,FALSE,NA
httr,aaad2a047d306793dc8e73cef218771e,Urls with missing query param values (e.g. `http://x.com/?q=`) are now parsed correctly (#27). The names of query params are now also escaped and unescaped correctly when parsing and building urls.,1,189,FALSE,NA
httr,1ada21819152a0baac6e90663e348c89,Default html parser is now `XML::htmlParse()` which is easier to use with xpath (#66).,1,190,FALSE,NA
httr,18b8e3c45ebf64babadf78712fd66cb2,OAuth now uses custom escaping function which is guaranteed to work on all platforms (Fixes #21),1,191,FALSE,NA
httr,c1650afe16c1f76babdd113e9cba1eb7,"When concatenating configs, concatenate all the headers. (Fixes #19)",1,192,FALSE,NA
httr,65d30ed4ff286b19f3b6809505c75864,export `hmac_sha1` since so many authentication protocols need this,1,193,FALSE,NA
httr,056bdd06f4165b2179b35965880521f3,"`content` will automatically guess what type of output (parsed, text or raw) based on the content-type header. It also automatically converts text content to UTF-8 (using the charset in the media type) and can guess at mime type from extension if server doesn't supply one. Media type and encoding can be overridden with the `type` and `encoding` arguments respectively.",1,194,FALSE,NA
httr,c043f7b07a32764705aeacd1864413d0,response objects automatically print content type to aid debugging.,1,195,FALSE,NA
httr,964ae7a4c3ef33dba8e03b00292a50fa,"`text_content` has become `context(, ""text"")` and `parsed_content` `content(, ""parsed"")`. The previous calls are deprecated and will be removed in a future version.",1,196,FALSE,NA
httr,bbdfb47377966f9763bf2a2051a1ba73,"In `oauth_listener`, use existing httpd port if help server has already been started. This allows the ouath authentication dance to work if you're in RStudio. (Fixes #15).",1,197,FALSE,NA
httr,0057479a03d275c21d0d198c253551e3,"add several functions related to checking the status of an http request. Those are : `status`, `url_ok` and `url_success` as well as `stop_for_status` and `warn_for_status`.",1,198,FALSE,NA
httr,42972952acceb2dd8d1425d932c05298,`build_url`: correctly add params back into full url.,1,199,FALSE,NA
httr,23133c62f8e967a85add05db75adc122,Add new default config: use the standard SSL certificate,1,200,FALSE,NA
httr,235aa6a0c8756e054c7f80429fab8e25,Add recommendation to use custom handles with `authenticate`,1,201,FALSE,NA
httr2,2e702becc1b894f9389af2f7dab69885,`req_timeout()` now resets the value of `connecttimeout` set by curl. This ensures that you can use `req_timeout()` to increase the connection timeout past 10s (#395).,1,1,FALSE,NA
httr2,7ea3b386774e20b307e15101626f55db,`req_retry()` gives a clearer error if `after` returns the wrong type of value (#385).,1,2,FALSE,NA
httr2,068e4ad32ff8a40f0c07bb8f6c4728d2,"`req_template()` now works when you have a bare `:` in a template that uses ""uri"" style (#389).",1,3,FALSE,NA
httr2,0f625f2002e687e9d9f399b9e611db14,`local_mock()` and `with_mock()` have been deprecated in favour of `local_mocked_responses()` and `with_mocked_responses()` (#301).,1,4,FALSE,NA
httr2,fe88de5b90543092c730e3910b2a77f5,`multi_req_perform()` is deprecated in favour of `req_perform_parallel()`. `req_stream()` is deprecated in favour of `req_perform_stream()` (#314).,1,5,FALSE,NA
httr2,fed0f1dd06dac7bd9088caf01de9b507,`oauth_flow_auth_code()` deprecates `host_name` and `port` arguments in favour of using `redirect_uri`. It also deprecates `host_ip` since it seems unlikely that changing this is ever useful.,1,6,FALSE,NA
httr2,cc709f83c907136ba931d990d01b5673,`oauth_flow_auth_code_listen()` now takes a single `redirect_uri` argument instead of separate `host_ip` and `port` arguments. This is a breaking change but I don't expect anyone to call this function directly (which was confirmed by a GitHub search) so I made the change without deprecation.,1,7,FALSE,NA
httr2,f092fd28ff5e192ebebc0c82792888cb,`req_body_form()` and `req_body_multipart()` now require data `...`; they no longer accept a single list for compatibility with the 0.1.0 API.,1,8,FALSE,NA
httr2,048b7795f34dd7472e5f7bf1c82ddaca,"New `req_perform_sequential()` performs a known set of requests sequentially. It has an interface similar to `req_perform_parallel()` but with no limitations, and the cost of being slower (#361).",1,9,FALSE,NA
httr2,1ce00611c94a89663b623cea720baab3,"New `req_perform_iterative()` performs multiple requests, where each request is derived from the previous response (@​mgirlich, #8).",1,10,FALSE,NA
httr2,4ff3cd6dd2a8f1f3dca89da4013a07d3,`req_perform_parallel()` replaces `multi_req_perform()` to match the new naming scheme (#314). It gains a `progress` argument.,1,11,FALSE,NA
httr2,441fa0034e863ae2822951ad364d19b6,"`req_perform_iterative()`, `req_perform_parallel()`, and `req_perform_sequential()` share a new error handling strategy. By default, errors will be bubbled up, but you can choose an alternative strategy with the `on_error` argument (#372).",1,12,FALSE,NA
httr2,01caad52c54c3ab940cdce6a153f4ef6,"A new family of functions `resps_successes()`, `resps_failures()`, `resps_requests()` and `resps_data()` make it easier to work with lists of responses (#357). Behind the scenes, these work because the request is now stored in the response (or error) object (#357).",1,13,FALSE,NA
httr2,db962974af1a1c75a628d7c60cad3f52,`resp_body_json()` and `resp_body_xml()` now cache the parsed values so that you can use them repeatedly without worrying about the performance cost. This supports the design `req_perform_iterative()` by avoiding the need to carefully pass around a parsed object.,1,14,FALSE,NA
httr2,751f3cf9afdbff800543716036d3262d,"A new `vignette(""oauth"")` gives many more details about how OAuth works and how to use it with httr2 (#234), and the OAuth docs have been overhauled to make it more clear that you should use `req_oauth_*()`, not `oauth_*()` (#330).",1,15,FALSE,NA
httr2,cd304cd6b69088e508bd197cb4ad6336,"If you are using an OAuth token with a refresh token, and that refresh token has expired, then httr2 will now re-run the entire flow to get you a new token (#349).",1,16,FALSE,NA
httr2,0c3a34c485d6f15915105c62190b6bcb,"New `oauth_cache_path()` returns the path that httr2 uses for caching OAuth tokens. Additionally, you can now change the cache location by setting the `HTTR2_OAUTH_CACHE` env var. This is now more obvious to the user, because httr2 now informs the user whenever a token is cached.",1,17,FALSE,NA
httr2,a878a3000129e812a73d14e484fd7a3f,"`oauth_flow_auth_code()` gains a `redirect_uri` argument rather than deriving this URL automatically from the `host_name` and `port` (#248). It uses this argument to automatically choose which strategy to use to get the\ auth code, either launching a temporary web server or, new, allowing you to manually enter the details with the help of a custom JS/HTML page hosted elsewhere, or by copying and pasting the URL you're redirected to (@​fh-mthomson, #326). The temporary web server now also respects the path component of `redirect_uri`, if the API needs a specific path (#149).",1,18,FALSE,NA
httr2,b424a6af0372087f753bb54b06f57610,New `oauth_token_cached()` allows you to get an OAuth token while still taking advantage of httr2's caching and auto-renewal features. For expert use only (#328).,1,19,FALSE,NA
httr2,dc417ed11aa3d7be792b1d749ad34e8a,@​mgirlich is now a httr2 contributor in recognition of his many contributions.,1,20,FALSE,NA
httr2,c7864ba850e855e139b1496d446ac508,"`req_cache()` gains `max_n`, `max_size`, and `max_age` arguments to automatically prune the cache. By default, the cache will stay under 1 GB (#207).",1,21,FALSE,NA
httr2,b38860ea2c90eb4eb05b1516528a1c21,New `req_body_json_modify()` allows you to iteratively modify a JSON body of a request.,1,22,FALSE,NA
httr2,b23eae6432eb48b4433ed2fca2a1240b,New `req_cookie_preserve()` lets you use a file to share cookies across requests (#223).,1,23,FALSE,NA
httr2,f92be6cc3c9a4e8e66514c3b117bcf5d,New `req_progress()` adds a progress bar to long downloads or uploads (#20).,1,24,FALSE,NA
httr2,3a17fdefb36446b3613802b8bc5e4c52,New `resp_check_content_type()` to check response content types (#190). `resp_body_json()` and friends give better errors if no `Content-Type` header is present in the response (#284).,1,25,FALSE,NA
httr2,0fe47f60d757ca09f2254dd1c966053f,New `resp_has_body()` returns a `TRUE` or `FALSE` depending on whether or not the response has a body (#205).,1,26,FALSE,NA
httr2,415cad23b25bcff7e2ed5f05a8da2b7f,"New `resp_url()`, `resp_url_path()`, `resp_url_queries()` and `resp_url_query()` to extract various part of the response url (#57).",1,27,FALSE,NA
httr2,f406c392bdfa7f64165512d5ba9a9e95,"`req_url_query()` gains a `.multi` parameter that controls what happens when you supply multiple values in a vector. The default will continue to error but you can use `.multi = ""comma""` to separate with commas, `""pipe""` to separate with `|`, and `""explode""` to generate one parameter for each value (e.g. `?a=1&a=2`) (#350).",1,28,FALSE,NA
httr2,31ad787338dc7ab074f750c863deb274,New `secret_encrypt_file()` and `secret_decrypt_file()` for encrypting and decrypting files (#237).,1,29,FALSE,NA
httr2,3b0b2a35d77b9f74eb9c489e2654ac72,The httr2 examples now only run on R 4.2 and later so that we can use the base pipe and lambda syntax (#345).,1,30,FALSE,NA
httr2,3c274883b3bf1e982541e9553b52cd7b,"OAuth errors containing a url now correctly display that URL (instead of the string ""uri"").",1,31,FALSE,NA
httr2,1a125ee4c746ef1592ac6b8c79bd621a,"`curl_translate()` now uses the base pipe, and produces escapes with single quotes or raw strings in case double quotes can't be used (@​mgirlich, #264). It gains the argument `simplify_headers` that removes some common but unimportant headers, like `Sec-Fetch-Dest` or `sec-ch-ua-mobile` (@​mgirlich, #256). It also parses the query components of the url (@​mgirlich, #259) and works with multiline commands from the clipboard (@​mgirlich, #254).",1,32,FALSE,NA
httr2,99a3a3bdb39b89ec4f923dbb83ff702c,`local_mocked_responses()` and `with_mocked_responses()` now accept a list of responses which will be returned in sequence. They also now correctly trigger errors when the mocked response represents an HTTP failure (#252).,1,33,FALSE,NA
httr2,c0aecf9a4e94237e585a5b1e68c7c2d8,"`oauth_flow_refresh()` now only warns, not errors, if the `refresh_token` changes, making it a little easier to use in manual workflows (#186).",1,34,FALSE,NA
httr2,30cfd5e83ad94deac74877dce4c4c9be,`obfuscated()` values now display their original call when printed.,1,35,FALSE,NA
httr2,e7fa656aa4caa5de1587df233b6d88fb,"`req_body_json()` gains custom content `type` argument and respects custom content-type set in header (@​mgirlich, #189).",1,36,FALSE,NA
httr2,ab2b969510380f52c0237d4766c9d798,"`req_cache()` now combine the headers of the new response with the headers of the cached response. In particular, this fixes `resp_body_json/xml/html()` on cached responses (@​mgirlich, #277).",1,37,FALSE,NA
httr2,70c94680d98d244d201cc8d0a11fdd3c,"`req_perform()` now throws error with class `httr2_failure/httr2_error` if the request fails, and that error now captures the curl error as the parent. If the request succeeds, but the response is an HTTP error, that error now also has super class `httr2_error`. This means that all errors thrown by httr2 now inherit from the `httr2_error` class. See new docs in `?req_error()` for more details.",1,38,FALSE,NA
httr2,85f397e78a993b85cb7df868b283d554,`req_perform()`'s progress bar can be suppressed by setting `options(httr2_progress = FALSE)` (#251). Progress bars displayed while waiting for some time to pass now tell you why they're waiting (#206).,1,39,FALSE,NA
httr2,107019c09f3e8f51819ac9f59c21dd76,`req_oauth_bearer_jwt()` now includes the claim in the cache key (#192).,1,40,FALSE,NA
httr2,4f199dcf0eb1ece52b4daaade629ca28,"`req_oauth_device()` now takes a `auth_url` parameter making it usable (#331, @​taerwin).",1,41,FALSE,NA
httr2,c7c3ddfc336c84c0590da6b8b261264a,"`req_url_query()` gains a `.multi` parameter that controls what happens when you supply multiple values in a vector. The default will continue to error but you can use `.multi = ""comma""` to separate with commas, `""pipe""` to separate with `|`, and `""explode""` to generate one parameter for each value (e.g. `?a=1&a=2`) (#350).",1,42,FALSE,NA
httr2,471a83e1f207428b77deae4b6181ec7f,"New `example_url()` to launch a local server, making tests and examples more robust.",1,43,FALSE,NA
httr2,8bf7e3feaada33dce09b10d3cd67f922,New `throttle_status()` to make it a little easier to verify what's happening with throttling.,1,44,FALSE,NA
httr2,7955ffa6ec635b13f1289e013e34f69b,"`req_oauth_refresh()` now respects the `refresh_token` for caching (@​mgirlich, #178).",1,45,FALSE,NA
httr2,9defbc813e20401d3cbea1e710a0dca3,"`req_perform()` now always sleeps before a request, rather than after it. It also gains an `error_call` argument and communicates more clearly where the error occurred (@​mgirlich, #187).",1,46,FALSE,NA
httr2,6769369b0ae438ba9b0e24e05973429b,"`req_url_path()` and `req_url_path_append()` can now handle `NULL` or empty `...` and the elements of `...` can also have length \> 1 (@​mgirlich, #177).",1,47,FALSE,NA
httr2,4f15652d9e3acaca95aac87e29153705,`sys_sleep()` (used by `req_retry()` and `req_throttle()`) gains a progress bar (#202).,1,48,FALSE,NA
httr2,5a6b677565f621a0441a826e20564d75,"`curl_translate()` can now handle curl copied from Chrome developer tools (@​mgirlich, #161).",1,49,FALSE,NA
httr2,b72490152066a36e7ef4bdce7e0e5d88,"`req_oauth_*()` can now refresh OAuth tokens. One, two, or even more times! (@​jennybc, #166)",1,50,FALSE,NA
httr2,afbe9dda48a03901dd32fd7236d4bada,"`req_oauth_device()` can now work in non-interactive environments, as intendend (@​flahn, #170)",1,51,FALSE,NA
httr2,07b2134f5e69f8fe6047fbbc29315321,"`req_oauth_refresh()` and `oauth_flow_refresh()` now use the envvar `HTTR2_REFRESH_TOKEN`, not `HTTR_REFRESH_TOKEN` (@​jennybc, #169).",1,52,FALSE,NA
httr2,6371fd12840fe42d979fe83b1187f898,`req_proxy()` now uses the appropriate authentication option (@​jl5000).,1,53,FALSE,NA
httr2,12dfa11a518c894be67310abcaccaa23,"`req_url_query()` can now opt out of escaping with `I()` (@​boshek, #152).",1,54,FALSE,NA
httr2,4f765e81d9dc00cd2199371293bfcf66,"Can now print responses where content type is the empty string (@​mgirlich, #163).",1,55,FALSE,NA
httr2,3f1d2818fb6b0341c6993ce910676d1d,"""Wrapping APIs"" is now an article, not a vignette.",1,56,FALSE,NA
httr2,2bcfa3b386d1a5a13f82ddfbf4a20276,"`req_template()` now appends the path instead of replacing it (@​jchrom, #133)",1,57,FALSE,NA
httr2,0b636a096b4cf7252754d510b5646bcf,"`req_body_form()`, `req_body_multipart()`, and `req_url_query()` now support multiple arguments with the same name (#97, #107).",1,58,FALSE,NA
httr2,ee11cf35c83cbb96f30dd4ad2cd438c7,"`req_body_form()`, `req_body_multipart()`, now match the interface of `req_url_query()`, taking name-value pairs in `...`. Supplying a single `list()` is now deprecated and will be removed in a future version.",1,59,FALSE,NA
httr2,573ca6a472d11fee0e170582ec48bd10,"`req_body_json()` now overrides the existing JSON body, rather than attempting to merge with the previous value (#95, #115).",1,60,FALSE,NA
httr2,6a76f84b8b9674245b250210cdb3d6d7,"Implement `req_proxy()` (owenjonesuob, #77).",1,61,FALSE,NA
httr2,bf286f75aff6ad8c1c4e05425c18efa2,`httr_path` class renamed to `httr2_path` to correctly match package name (#99).,1,62,FALSE,NA
httr2,f791a5f13a7cda6d3271e5af3378d705,"`oauth_flow_device()` gains PKCE support (@​flahn, #92), and the interactive flow is a little more user friendly.",1,63,FALSE,NA
httr2,a07d431c2075f7c6ad3b3356d51b7ea4,`req_error()` can now correct force successful HTTP statuses to fail (#98).,1,64,FALSE,NA
httr2,0dd8cfc00996128aa17378220c71953a,`req_headers()` will now override `Content-Type` set by `req_body_*()` (#116).,1,65,FALSE,NA
httr2,514ce420b49b257acaefc8accc6bcef4,"`req_throttle()` correctly sets throttle rate (@​jchrom, #101).",1,66,FALSE,NA
httr2,a9350326f3a8499cc84c013cce76c128,`req_url_query()` never uses scientific notation for queries (#93).,1,67,FALSE,NA
httr2,d6e3538b9cb0352af7a4ffe150ea8f85,`req_perform()` now respects `httr::with_verbose()` (#85).,1,68,FALSE,NA
httr2,5ca7dead673823624c5f8905a2f64463,`response()` now defaults `body` to `raw(0)` for consistency with real responses (#100).,1,69,FALSE,NA
httr2,be2f9cae1ca2a466845cd874c9ace137,"`req_stream()` no longer throws an error for non 200 http status codes (@​DMerch, #137)",1,70,FALSE,NA
httr2,41ba665364021e10ead3d5d05c701794,Fix R CMD check failures on CRAN,1,71,FALSE,NA
httr2,be285edba345a49606c7e09a0dbf5515,Added a `NEWS.md` file to track changes to the package.,1,72,FALSE,NA
lubridate,2ca4d3c28df0114bec8f78398050df40,"#682 Add type=""year_start/end"" argument to `quarter()` which produces a complete description of the quarter.",1,1,FALSE,NA
lubridate,094ad470aeff3f7301cd699f8ab56c3b,"#1109 Fix recycling of the year slot in `as.period(unit = ""month"")` with Periods and Intervals.",1,2,FALSE,NA
lubridate,bafd959bc7713a12a9fe3c772b950cd9,#1104 Fix incorrect parsing of months when %a format is present.,1,3,FALSE,NA
lubridate,43d20cefdbc4f888207458e26a3dcde6,Adapt to internal name changes in R-devel,1,4,FALSE,NA
lubridate,f48031d666ebe9fb8657cfebe4152b36,"`as_datetime()` accepts multiple formats in format argument, just like `as_date()` does.",1,5,FALSE,NA
lubridate,43d5a0fbca2f5ad29e92faeda02b684a,#1091 Fix formatting of numeric inputs to parse_date_time.,1,6,FALSE,NA
lubridate,76b443151f40563aeac44e4a9ab1ba27,#1092 Fix regression in `ymd_hm` on locales where `p` format is not defined.,1,7,FALSE,NA
lubridate,dca8d58b13cb5bb33c06d296c7abc929,"#1097 Fix `as_date(""character"")` to work correctly with formats that include extra characters.",1,8,FALSE,NA
lubridate,2ef0f468607d36c461daff2838671817,#1098 Roll over the month boundary in `make_dateime()` when units exceed their maximal values.,1,9,FALSE,NA
lubridate,50f1d45778567690632b34979bad4be9,#1090 timechange has been moved from Depends to Imports.,1,10,FALSE,NA
lubridate,79df736dca38164ced774a3fae1b1dab,`roll` argument to updating and time-zone manipulation functions is deprecated in favor of a new `roll_dst` parameter.,1,11,FALSE,NA
lubridate,86a26dde52850c61e3f75db2b7fc8e7e,"#1042 `as_date` with character inputs accepts multiple formats in `format` argument. When `format` is supplied, the input string is parsed with `parse_date_time` instead of the old `strptime`.",1,12,FALSE,NA
lubridate,30dbbad5d30b936380f5fcdb21c037e4,"#1055 Implement `as.integer` method for Duration, Period and Interval classes.",1,13,FALSE,NA
lubridate,9c34324d05bed1d3b0a1611f14669acf,"#1061 Make `year<-`, `month<-` etc. accessors truly generic. In order to make them work with arbitrary class XYZ, it's enough to define a `reclass_date.XYZ` method.",1,14,FALSE,NA
lubridate,3ac2bf3fb5ad791621e3347162b66855,"#1061 Add support for `year<-`, `month<-` etc. accessors for `data.table`'s IDate and ITime objects.",1,15,FALSE,NA
lubridate,c1f51d39b6e67c6f620ef44b1d820295,#1017 `week_start` argument in all lubridate functions now accepts full and abbreviated names of the days of the week.,1,16,FALSE,NA
lubridate,000aa15d9c3e171784445cd5df1580a6,The assignment value `wday<-` can be a string either in English or as provided by the current locale.,1,17,FALSE,NA
lubridate,7e5da4a3c4813fcf906bfeb13130b3d7,Date rounding functions accept a date-time `unit` argument for rounding to a vector of date-times.,1,18,FALSE,NA
lubridate,595d9323daa933eeae3e0c8914d7408a,#1005 `as.duration` now allows for full roundtrip `duration -> as.character -> as.duration`,1,19,FALSE,NA
lubridate,28949e2bdb0262c564b55b7b84b5874b,#911 C parsers treat multiple spaces as one (just like strptime does),1,20,FALSE,NA
lubridate,198a477c1a61f0aa5b5847535e44a769,`stamp` gained new argument `exact=FALSE` to indicate whether `orders` argument is an exact strptime formats string or not.,1,21,FALSE,NA
lubridate,a2180b6760e61e59ff3eb86caed22244,"#1001 Add `%within` method with signature (Interval, list), which was documented but not implemented.",1,22,FALSE,NA
lubridate,4fac3f7641f6d52385c3b133a5211527,"#941 `format_ISO8601()` gained a new option `usetz=""Z""` to format time zones with a ""Z"" and convert the time to the UTC time zone.",1,23,FALSE,NA
lubridate,35dbdd4f8d14eaa938fbfae9fb295633,#931 Usage of `Period` objects in rounding functions is explicitly documented.,1,24,FALSE,NA
lubridate,b8405a576a78ac6cc076a011a5630d7d,#1036 `%within%` now correctly works with flipped intervals,1,25,FALSE,NA
lubridate,2420473ed63057f54003bff7e714c757,#1085 `as_datetime()` now preserves the time zone of the POSIXt input.,1,26,FALSE,NA
lubridate,e452bb9153cbacdabbfd9dddbd171e07,#1072 Names are now handled correctly when combining multiple Period or Interval objects.,1,27,FALSE,NA
lubridate,d164f0a1dc1c9e9e7714389f06523917,#1003 Correctly handle r and R formats in locales which have no p format,1,28,FALSE,NA
lubridate,8634f85fcf382fe47a0be6322a30df00,"#1074 Fix concatination of named Period, Interval and Duration vectors.",1,29,FALSE,NA
lubridate,cd4b3ae69c49af5459b3e3d35ec08b83,#1044 POSIXlt results returned by `fast_strptime()` and `parse_date_time2()` now have a recycled `isdst` field.,1,30,FALSE,NA
lubridate,74fc31b4754e4cdc40f5083b46d491c0,#1069 Internal code handling the addition of period months and years no longer generates partially recycled POSIXlt objects.,1,31,FALSE,NA
lubridate,091a0547e01a06d4e2a9231493ced28d,Fix rounding of POSIXlt objects,1,32,FALSE,NA
lubridate,fb1ebf9057ac9fe65de286f69d0a0bdd,#1007 Internal lubridate formats are no longer propagated to stamp formater.,1,33,FALSE,NA
lubridate,fc55d8a57999330c3592bd040d141cee,`train` argument in `parse_date_time` now takes effect. It was previously ignored.,1,34,FALSE,NA
lubridate,ca480bfd0104c9bbf135b1fb28652b87,#1004 Fix `c.POSIXct` and `c.Date` on empty single POSIXct and Date vectors.,1,35,FALSE,NA
lubridate,ccb92dcc9bc0a53ab2e76c074cce4ee7,"#1013 Fix c(`POSIXct`,`POSIXlt`) heterogeneous concatenation.",1,36,FALSE,NA
lubridate,484985db961d01ce605e0b7cae4e0b36,#1002 Parsing only with format `j` now works on numeric inputs.,1,37,FALSE,NA
lubridate,0539a884120e8bf28dafda469dbae75b,`stamp()` now correctly errors when no formats could be guessed.,1,38,FALSE,NA
lubridate,ac6378dd2fba4b36f2acc49aa9f51b6d,"Updating a date with timezone (e.g. `tzs = ""UTC""`) now returns a POSIXct.",1,39,FALSE,NA
lubridate,a19a23e86552246628b841ee00381fe2,`lubridate` is now relying on `timechange` package for update and time-zone computation. Google's CCTZ code is no longer part of the package.,1,40,FALSE,NA
lubridate,c0e9098fda72c6fad23bb6a0ae019ac4,`lubridate`'s updating logic is now built on top of `timechange` package.,1,41,FALSE,NA
lubridate,371f6abfa32b50258cff39778806760b,"Change implementation of `c.Period`, `c.Duration` and `c.Interval` from S4 to S3.",1,42,FALSE,NA
lubridate,6e12120a56971266d2339ac84a7bc5d7,"#960 `c.POSIXct` and `c.Date` can deal with heterogeneous object types (e.g `c(date, datetime)` works as expected)",1,43,FALSE,NA
lubridate,4454630be29592d5ae51f0afe1ae6fe2,#994 Subtracting two duration or two period objects no longer results in an ambiguous dispatch note.,1,44,FALSE,NA
lubridate,bf458a8e67c46a02fe6da21fc26a51f8,`c.Date` and `c.POSIXct` correctly deal with empty vectors.,1,45,FALSE,NA
lubridate,4264080fbff4f5a9e261f1693b941e1a,"`as_datetime(date, tz=XYZ)` returns the date-time object with HMS set to 00:00:00 in the corresponding `tz`",1,46,FALSE,NA
lubridate,b49aaee2ec48d44da0c0f7a5d9822651,#966 Lubridate is now built with cpp11 (contribution of @​DavisVaughan),1,47,FALSE,NA
lubridate,01d05621a15c2c0c3403ea15fdbf0429,#955 Add `type` argument to `quarter()` for more control over the returned class,1,48,FALSE,NA
lubridate,3d52126f45b8045d5bd3cbaddb5682f9,`fast_strptime()` and `parse_date_time2()` now accept multiple formats and apply them in turn,1,49,FALSE,NA
lubridate,09b7a6d763189f18bc163511146261dc,#926 Fix incorrect division of intervals by months involving leap years,1,50,FALSE,NA
lubridate,96706a89b460cadc8e4a862839d28d45,Fix incorrect skipping of digits during parsing of the `%z` format,1,51,FALSE,NA
lubridate,1239c8765d9a4b119e6aef20904b2af4,#914 New `rollforward()` function,1,52,FALSE,NA
lubridate,3dbf88ba087ca51dcf6d34bde8f8314f,"#928 On startup lubridate now resets TZDIR to a proper directory when it is set to non-dir values like ""internal"" or ""macOS"" (a change introduced in R4.0.2)",1,53,FALSE,NA
lubridate,220192af4706f0bea5e5f7f3c5547199,#630 New parsing functions `ym()` and `my()`,1,54,FALSE,NA
lubridate,3f47af01fcfa3fce8b28ccae3b4a9dce,#930 `as.period()` on intervals now returns valid Periods with double fields (not integers),1,55,FALSE,NA
lubridate,e3f39f9495189d33c2555c9cdca9949d,#871 Add `vctrs` support,1,56,FALSE,NA
lubridate,c747f22a1f436001b0fb116e8dcda456,"#890 Correctly compute year in `quarter(..., with_year = TRUE)`",1,57,FALSE,NA
lubridate,9682207e7d48cdac16447d76ec86d8fc,#893 Fix incorrect parsing of abbreviated months in locales with trailing dot (regression in v1.7.8),1,58,FALSE,NA
lubridate,97bbc72a053c07760286946722f71240,#886 Fix `with_tz()` for POSIXlt objects,1,59,FALSE,NA
lubridate,d3574acecadc21e2aa66793becce4c00,#887 Error on invalid numeric input to `month()`,1,60,FALSE,NA
lubridate,5730a2a4bd9a5013ea7d72a8767075ae,#889 Export new dmonth function,1,61,FALSE,NA
lubridate,696a29ec4ed99a73d82a7ecec022a4fd,(breaking) Year and month durations now assume 365.25 days in a year consistently in conversion and constructors. Particularly `dyears(1) == years(1)` is now `TRUE`.,1,62,FALSE,NA
lubridate,5100168995fd1caa67f7f26beef67ebb,Format and print methods for 0-length objects are more consistent.,1,63,FALSE,NA
lubridate,e133a2f61a0fa9f87958667c510c1ef1,New duration constructor `dmonths()` to complement other duration constructors.,1,64,FALSE,NA
lubridate,93414b67758a755f21069b2680ec7c23,`duration()` constructor now accepts `months` and `years` arguments.,1,66,FALSE,NA
lubridate,00b7ba3ec2fec636a0c907d1aeb307a4,#629 Added `format_ISO8601()` methods.,1,67,FALSE,NA
lubridate,ef1794a80ac60713bae684383709cd77,#672 Eliminate all partial argument matches,1,68,FALSE,NA
lubridate,74cd193811ac3cb3de8ec7d231bb7d6f,#674 `as_date()` now ignores the `tz` argument,1,69,FALSE,NA
lubridate,7868a81dec447060c6cefca5710683bb,"#675 `force_tz()`, `with_tz()`, `tz<-` convert dates to date-times",1,70,FALSE,NA
lubridate,9386f51e24d72ce20ddc3fc830cad066,#681 New constants `NA_Date_` and `NA_POSIXct_` which parallel built-in primitive constants.,1,71,FALSE,NA
lubridate,8e8074b0da2e0eca4aba5629f2e75812,#681 New constructors `Date()` and `POSIXct()` which parallel built-in primitive constructors.,1,72,FALSE,NA
lubridate,0816d2e82ed0a375db8469239230722f,#695 Durations can now be compared with numeric vectors.,1,73,FALSE,NA
lubridate,754096a50805851b1abcfd6691a9669c,#707 Constructors return 0-length inputs when called with no arguments,1,74,FALSE,NA
lubridate,e1ce408028e2ff2fdb2cb364214932e3,#713 (breaking) `as_datetime()` always returns a `POSIXct()`,1,75,FALSE,NA
lubridate,570cc6c7e4b014e61c389ccf39993296,#717 Common generics are now defined in `generics` dependency package.,1,76,FALSE,NA
lubridate,fab1a4abb8db2bbbb02bbc134ed4aa24,#719 Negative Durations are now displayed with leading `-`.,1,77,FALSE,NA
lubridate,fcfa668350417a296622d6d5143d0470,#829 `%within%` throws more meaningful messages when applied on unsupported classes,1,78,FALSE,NA
lubridate,a7f11bf5cd28085b6d37e892f0b63807,"#831 Changing hour, minute or second of Date object now yields POSIXct.",1,79,FALSE,NA
lubridate,ac76b6c064ac9a681308ce3e1cb0043f,#869 Propagate NAs to all internal components of a Period object,1,80,FALSE,NA
lubridate,1b7ab90c8a27eb0d4447aeadb2b6b173,#682 Fix quarter extraction with small `fiscal_start`s.,1,81,FALSE,NA
lubridate,30024cdca64906541514c02565c52943,#703 `leap_year()` works with objects supported by `year()`.,1,82,FALSE,NA
lubridate,422b53d101b7bc513b6fb18cf1345fd4,#778 `duration()/period()/make_difftime()` work with repeated units,1,83,FALSE,NA
lubridate,6195e497595547392dcc060517847b79,`c.Period` concatenation doesn't fail with empty components.,1,84,FALSE,NA
lubridate,33b1e5bc06af6413e994a9d9c613937d,"Honor `exact = TRUE` argument in `parse_date_time2`, which was so far ignored.",1,85,FALSE,NA
lubridate,f0ccef777fc7924b4d13e7afce6c01fc,"#658 `%within%` now accepts a list of intervals, in which case an instant is checked if it occurs within any of the supplied intervals.",1,86,FALSE,NA
lubridate,60adaecf54f1799126bb23722aa00a8a,#661 Throw error on invalid multi-unit rounding.,1,87,FALSE,NA
lubridate,7484ec09b519b1e253de5bfbbbdec48a,#633 `%%` on intervals relies on `%m+` arithmetic and doesn't produce NAs when intermediate computations result in non-existent dates.,1,88,FALSE,NA
lubridate,bf4a0561c84c52f1d0693d8bc1aa2b16,"`tz()` always returns ""UTC"" when `tzone` attribute cannot be inferred.",1,89,FALSE,NA
lubridate,1bbad765f5f1e74079092ad3083a0615,#664 Fix lookup of period functions in `as.period`,1,90,FALSE,NA
lubridate,b8cf9e6c0f7fe2432b609e24e8b0295a,#649 Fix system timezone memoization,1,91,FALSE,NA
lubridate,d93c8d833a8e083a8a3a246cbe76a73f,"#643, #640, #645 Fix faulty caching of system timezone.",1,92,FALSE,NA
lubridate,1f6142e9b0f64099ce279513fc0c3dbb,"Durations, Periods and difftimes are now comparable with each other.",1,93,FALSE,NA
lubridate,2c3deafe0428304459956c1e3216c80f,`interval` constructor accepts start and end character vectors in ISO 8601 format,1,94,FALSE,NA
lubridate,2278dfeace95f0fd71f945d2794630bf,#362 Add support for ISO 8601 formats in interval constructor,1,95,FALSE,NA
lubridate,88df1b084fa2f962dace90396e10ee8c,#622 Add support for ISO 8601 formats in periods and durations constructor,1,96,FALSE,NA
lubridate,5ae1d340b12dc0568fbfc2f003cccfdf,Correct license to the originally intended GPL (\>= 2),1,97,FALSE,NA
lubridate,02a544dfaff5639d814c30e460156356,#605 Fix wrong ceiling of days during DST transition.,1,98,FALSE,NA
lubridate,0196e39f690cd7aa2f685131ee65656e,#607 Re-instate `format` argument to `as_date` and `as_datetime` (regression in v1.7.1),1,99,FALSE,NA
lubridate,050d5779ece8373c00800122c616ddc0,Fix intersection of intervals with missing values.,1,100,FALSE,NA
lubridate,e3e9bcad5899951f98ff95081df04745,Fix UBSAN errors in update.cpp,1,101,FALSE,NA
lubridate,6ef316fd05c5f401397a1343299a583f,"#575, #600, #602 Fix zoneinfo lookup on windows and solaris.",1,102,FALSE,NA
lubridate,6e7a9fcf7bb924f13496ef1d55afb824,#598 Fix broken parsing of `ymd_hms` strings by `as_date`.,1,103,FALSE,NA
lubridate,bc383e9b0efc263fd6132c4603802842,#597 Fix broken parsing of `ymd` strings by `as_datetime`.,1,104,FALSE,NA
lubridate,2316957b6e06eee20804cf08c5e6a3bc,Reduced memory footprint on `trunc_multi_unit` so that it overwrites the vector argument `x` versus making a new vector `y`.,1,105,FALSE,NA
lubridate,134d3aea4e1e0de4911063f5d1918ed1,"#438 New function `force_tzs` for ""enforcement"" of heterogeneous time zones.",1,106,FALSE,NA
lubridate,771c8ac84e880d94507f81bc363eff46,#438 New function `local_time` for the retrieval of local day time in different time zones.,1,107,FALSE,NA
lubridate,4e1603033186c5c43eda67546edcfbea,#560 New argument `cutoff_2000` for parsing functions to indicate 20th century cutoff for `y` format.,1,108,FALSE,NA
lubridate,dead298211bf7eedd1a00dade1e5cfe0,#257 New `week_start` parameter in `wday` and `wday<-` to set week start.,1,109,FALSE,NA
lubridate,baf94385dcf1b59481e277cb160cf328,#401 New parameter `locale` in `wday`. Labels of the returned factors (when `label=TRUE`) now respect current locale.,1,110,FALSE,NA
lubridate,f43c9af4b1b4318d962a00620d3f27d1,#485 `quarter` gained a new argument `fiscal_start` to address the issue of different fiscal conventions.,1,111,FALSE,NA
lubridate,00b5c4497a8e5e191102f22d6597da97,#492 New functions `epiweek` and `epiyear`.,1,112,FALSE,NA
lubridate,fc152f40f22bfa3bf5d506d8de882447,#508 New parameter `locale` in `month`. Labels of the returned factors (when `label=TRUE`) now respect current locale.,1,113,FALSE,NA
lubridate,5dad4c57e017047ebd5dbe0b880e6bd0,"#509 New parameter `week_start` to `floor_date`, `ceiling_date` and `round_date`.",1,114,FALSE,NA
lubridate,ae840b623a76c080049e1c26299051c5,#519 Support fractional units in duration and period string constructors.,1,115,FALSE,NA
lubridate,6fb8b5adb2694fd73b2e5bd3872ec5a7,#502 Support rounding to fractions of a seconds.,1,116,FALSE,NA
lubridate,73f529aa02bc029c0407fa4acde166f6,#529 Internal parser now ignores the case of alpha months (B format),1,117,FALSE,NA
lubridate,0a847e9c2946275b398310d1f73a55a0,#535 Rounding to `season` is now supported.,1,118,FALSE,NA
lubridate,cd4f3c4979e29e64db7ad6ab6747498f,#536 `as_date` and `as_datetime` now understand character vectors.,1,119,FALSE,NA
lubridate,34783061238ff48a4b982a7f1bda36f3,"New parsing parameters to `parse_date_time` - `train=TRUE` and `drop=FALSE` which allow more refined control of the format guessing. Formats are no longer dropped in the process by default, process which resulted in surprising behavior on several occasions (#516,#308,#307).",1,120,FALSE,NA
lubridate,80f646e1153266dd5f8f3a4d86ddb5b8,"#401 **\[Breaking Change\]** Labels returned by `wday` and `month` are now in current locale. The abbreviated labels in English locales have been changed to standard abbreviations (Tues -\> Tue, Thurs -\> Thu etc.).",1,121,FALSE,NA
lubridate,9db5eb248209d582ea42498f1dd78be3,#469 Throw warning in `with_tz` on invalid timezone.,1,122,FALSE,NA
lubridate,9414cab1fd2fa4275773ebf5d71f69be,"#572 `B` and `b` formats no longer match numeric months. This corresponds to the original intent, and was always documented as such.",1,123,FALSE,NA
lubridate,ad2a6dc78fbeedd6e069347728d93a37,"#314, #407, #499 Make `days`, `dhours`, `round_date` work when the methods package is not loaded.",1,124,FALSE,NA
lubridate,a5327e0dc362abfa53fee2dc7b06aa65,#543 Make `wday` work on character inputs as it is the case with all other day accessors.,1,125,FALSE,NA
lubridate,a90d9b004f86e1d52bd4cc6814bf2f92,#566 Comparing durations and periods no-longer infloops.,1,126,FALSE,NA
lubridate,94738847276e4e1c6969d381db007385,#556 Fix incorrect scoring of `y` format when it's the last in format order (as in `mdy`).,1,127,FALSE,NA
lubridate,d627de1fe9aff14c85b4e4d84a5c671f,#584 Fix interval by period division.,1,128,FALSE,NA
lubridate,eb79a6ebf54bc97ec7c844d5538914fe,"#559 Parsing of alpha-months in English locales now drops correctly to low level C parsing. Thus, parsing with multiple orders containing `m` and `b` formats now works correctly.",1,129,FALSE,NA
lubridate,d04fd0bafa14bae27c6324db24990612,"#570, #574 Fix broken `date()` when called with missing argument.",1,130,FALSE,NA
lubridate,6c9aff623f9298ac83d966cea5ba9185,#567 Fix year update and rounding for leap years.,1,131,FALSE,NA
lubridate,0d9541cc7e7734835313435afff123ce,#545 Fix wrong locale selection in stamp.,1,132,FALSE,NA
lubridate,eca74a0aa36cadf8a7d7272963517b83,#466 Fix wrong formats within ymd_h family of functions.,1,133,FALSE,NA
lubridate,a55be3df128d4adc7e7107aacde67c77,#472 Printing method for duration doesn't throw format error on fractional seconds.,1,134,FALSE,NA
lubridate,5389f466f110e59ac7bdc2c9795e21e7,#475 character\<\> comparisons is no longer slow.,1,135,FALSE,NA
lubridate,eedd33be25f062de412f858f2695693f,#483 Fix add_duration_to_date error when duration first element is NA.,1,136,FALSE,NA
lubridate,d6c82b69c4e9f7a7f78ed1b660c875bc,#486 ceiling_date handles `NA` properly.,1,137,FALSE,NA
lubridate,c39a817864f225e55930a3de34f91bee,#491 `make_datetime` respects `tz` argument and is much faster now.,1,138,FALSE,NA
lubridate,a17c5aca91d2d5a145a3c3d6a1b632c7,#507 Period and duration parsers now understand 0 units.,1,139,FALSE,NA
lubridate,1a6d4eb7336f8d76c0288b309a9f65a3,#524 Correctly compute length of period in months (issue #490),1,140,FALSE,NA
lubridate,542906865a3119f1225a273c9f975263,"#525 Fix to prevent `day<-`, `minute<-`, etc. from producing an error when length(x) is 0 (issue #517)",1,141,FALSE,NA
lubridate,a9576acfedd7ccd071272409569f8501,#530 `parse_date_time` now throw warnings only for actual parsing errors (input with all NAs are silent),1,142,FALSE,NA
lubridate,d7bccc97d787974f3c2db7e13664e0b6,#534 Fix arithmetics with large numbers,1,143,FALSE,NA
lubridate,f6fecf3f020e07201cca4d834862a3df,#554 Fix tests when running in non-English locales,1,144,FALSE,NA
lubridate,99d9c1c06addb649061b04b9b20d7354,#464 New function `semester` to extract semesters form date-time objects.,1,145,FALSE,NA
lubridate,ac2800fd6ddd23ed7bb8f0fa223b2803,#459 Flexible C-level parsing for periods and durations has been implemented; `period` and `duration` constructors now accept string as first argument. Same parsing rules apply to the 'unit' parameter in rounding functions.,1,146,FALSE,NA
lubridate,b698d9138c6fab744cd6adb2bee1899d,#459 Comparison between character vectors and periods/durations is now possible.,1,147,FALSE,NA
lubridate,872044b3eca0799e2c7cb864ba2531f7,#287 C-level and derivative parsers now handle English months (%b and %B formats) irrespective of the current locale.,1,148,FALSE,NA
lubridate,75d16ab3224c144cd6e5bd147eaf378a,#327 C-level and derivative parsers now handles English AM/PM indicator irrespective of the current locale.,1,149,FALSE,NA
lubridate,54e7f51e432addee0d6d2d2f92e63efa,"#417 `hms`, `hm`, `ms` gained new argument `roll=TRUE` which rolls minutes and seconds bigger than 59 towards higher units.",1,150,FALSE,NA
lubridate,a17bcbb8fdd5824b07a20212ff13bcf6,#445 Division of intervals by periods is now accurate.,1,151,FALSE,NA
lubridate,25992baf297c94108687bcdc79466f36,"#442 `round_date`, `floor_date` and `ceiling_date` now support rounding to multiple of units.",1,152,FALSE,NA
lubridate,70bc2d213dc70bcd337711592f00e93d,#422 New parsing function `yq` for parsing most common version of quarter strings.,1,153,FALSE,NA
lubridate,c25177ad5718266591cef3b7ceb00bda,#422 New format `q` for parsing quarters in all lubridate parsing functions.,1,154,FALSE,NA
lubridate,db17d821d5aaf09f40b6c06c69a9701a,#441 Comparison between POSIXt and Date objects is now possible.,1,155,FALSE,NA
lubridate,a1db3c14ad5f7c58b14069b88e119cff,#437 New function `as_datetime` to coerce to POSIXct object. A counterpart of `as_date`.,1,156,FALSE,NA
lubridate,3a412d73a946775bb095c54bd3ce6457,#412 New function `make_date` to produce Date objects. A counterpart of `make_datetime`.,1,157,FALSE,NA
lubridate,2b77dd155a092f52b4b3dacafd1c254b,#443 Behavior of `ceiling_date` for `Date` objects was changed to what most of the users expect. Rounding up by months now produces first day of the next months even for first day of the month.,1,158,FALSE,NA
lubridate,4b4bf75e98bd1c84fd0026b4ed17021b,"#268 `round_date`, `ceiling_date`, and `floor_date` now accept ""quarter"", ""bimonth"", and ""halfyear"" as `unit` options.",1,159,FALSE,NA
lubridate,73d29c04b6112879e9def1ac425c25ad,#418 C level parsing functions understand 24:00:00 in datetime strings.,1,160,FALSE,NA
lubridate,d8493b5b86fb28f2b230a30a626921e9,"Low letter specs for HMS (hms,hm,ms) in `parse_date_time` and related functions are now deprecated.",1,161,FALSE,NA
lubridate,9ecb6e13f80f8048c185aea51636798e,#445 No more warning on occasional imprecise period length conversions. Imprecise arithmetics with periods is extensively documented.,1,162,FALSE,NA
lubridate,29f7dd5002a220df91851490ae091fbe,"`pretty.*` family of functions were renamed and are no longer exported. If you need to use them, use `lubridate:::pretty_*` versions.",1,163,FALSE,NA
lubridate,cf5aa3a19db6504ff6c82cea66c60b18,`change_on_boundary` argument in `ceiling_date` does not allow for global option anymore.,1,164,FALSE,NA
lubridate,03c04d4573633b34b4f83c4c2db0e7da,"`as.duration`, `as.numeric` don't show ""only estimate"" messages on conversion from periods. The occasional approximate conversion is documented and deemed common knowledge.",1,165,FALSE,NA
lubridate,d685c0747f92d5b3526d90e2267692f8,"`as.numeric` with `unit=""month""` now works on duration objects.",1,166,FALSE,NA
lubridate,4b0abadb96d5fe4d92090f315a17cab5,#403 Update on `Date` objects now return `POSIXct` instead of `POSIXlt`.,1,167,FALSE,NA
lubridate,54fdaeef0bb6955619133d5dec20330b,"#411 format `mdy` or `myd` beginning with `""January""` or `""Jan""` now parsing correctly",1,168,FALSE,NA
lubridate,67b1145422c2b6135c4f7cff850a0134,`here` and `olson_time_zones` were deprecated in favor of `new` and base `OlsonNames` respectively.,1,169,FALSE,NA
lubridate,ee4111b80c96ecde886e4213e59873c5,"Internally, S4 Compare and Ops generics were cleaned and simplified.",1,170,FALSE,NA
lubridate,afc58c067397137c23d605306abd06bb,#456 Evaluation output in documentation examples was removed.,1,171,FALSE,NA
lubridate,38fd0c51090a4ff77c96a24a30706127,"#479 Fix the inconsistent behavior in `ceiling_date` when `unit = ""week""`",1,172,FALSE,NA
lubridate,84fa365f6a500d14a1cbdeaeb67baf31,#463 Fix NA subscripting error in %m+% when rollback is involved.,1,173,FALSE,NA
lubridate,d932d7c466d44c298ade22b6ce862b07,#462 Non-numeric or non-character arguments are disallowed as arguments to `period` and `duration` constructors.,1,174,FALSE,NA
lubridate,55c817fa6c266ea92d387da31d686230,"#458 When year is missing in parsing, return consistently year 0.",1,175,FALSE,NA
lubridate,6f60c36c61e89737886d603d4fbba25d,#448 Correctly handle missing months and days in C parser.,1,176,FALSE,NA
lubridate,e27879c88a3c3fc6f8287a133a945991,#450 Fix incorrect handling of DST gaps in `date_decimal` and `decimal_date`.,1,177,FALSE,NA
lubridate,ed15837c76596a063cdb7be92d231c09,#420 `as.numeric` correctly converts periods to (aproximate) numeric time lengths.,1,178,FALSE,NA
lubridate,3a2284aaf27896f44da77365b57aff14,#390 `ceiling_date` gains new argument `change_on_boundary` to allow ceiling on boundary of date-time objects.,1,179,FALSE,NA
lubridate,4a27c688ba182c1b52150b3a2bab3ae0,C parser can now produce a list of date-time components suitable for POSIXlt constructors.,1,180,FALSE,NA
lubridate,4872f36bb02f3ec7feda3449f8becb17,`parse_date_time2` and `fast_strptime` gain new `lt` argument to control type of output.,1,181,FALSE,NA
lubridate,ec57f75feab6feded2c7889722837501,"#373 New `date` and `date<-` additions to the `year`, `month` etc family of accessors.",1,182,FALSE,NA
lubridate,1f5331e1f8cdbf4b65ed37a5699d58f2,#365 New very fast datetime constructor `make_datetime` (dropin replacement of `ISOdatetime`).,1,183,FALSE,NA
lubridate,bee9dac8635f6d0870c10cacab59bba5,#344 `force_tz` and `with_tz` can handle data.frames component-wise.,1,184,FALSE,NA
lubridate,3b1bc9512b74f8c52535fbdb95e2a6d9,#355 New `as_date` replacement of `as.Date` with more intuitive behavior with non-UTC timezones.,1,185,FALSE,NA
lubridate,4e574ad9fef5b2206c8ad32b73813d14,#333 `hms` parsers now handle negative components.,1,186,FALSE,NA
lubridate,e309aaeb2a7cda3c0a563962377a0b1a,#391 `ymd` family of functions return `Date` object when `tz` argument is NULL (new default) and POSIXct otherwise.,1,187,FALSE,NA
lubridate,327e08d790fe20df41d6c01e7347bd61,#364 Remove epoch functions.,1,188,FALSE,NA
lubridate,15b840c3016474d8a99c17b1d269f4a5,"For consistency with `base:strptime` `fast_strptime` now returns `POSIXlt` object. That is, its `lt` argument defaults to `TRUE`.",1,189,FALSE,NA
lubridate,d5ce6003dfce0aff85c69ae2d3931cf5,`interval` constructor treats timezones correctly and works with UTC whenever meaningful.,1,190,FALSE,NA
lubridate,c9b990966cd8d1bf40888dc7a268ce3a,#371 `as.period` correctly computes months with intervals spanning multiple years.,1,191,FALSE,NA
lubridate,ffcf449bc91f446ea9a39dd1f4149da6,#388 `time_length` and `add_with_rollback` now work correctly with missing intervals.,1,192,FALSE,NA
lubridate,89a63dc346df8afd8b7a6a467fdbcaee,#394 `fast_strptime` and `parse_date_time2` correctly treat non-UTC time zones.,1,193,FALSE,NA
lubridate,bcf3cc61ec90132636cb33e3ba02d9c1,#399 `floor_date` and `round_date` are not preserving tz component for larger than day units,1,194,FALSE,NA
lubridate,ef6dea2b39d68c2fc30465f084cd8f0c,New `time_length` method.,1,195,FALSE,NA
lubridate,c7a56e0822d3f0fa41996c21e4ea53dc,Added `isoyear` function to line up with `isoweek`.,1,196,FALSE,NA
lubridate,761ded7d010d32960d9f6119f24cbd9f,#326 Added `exact = TRUE` option to `parse_date_time` for faster and much more flexible specification of formats.,1,197,FALSE,NA
lubridate,682b1260dbcc303aef6b0f56eac988ca,New `simple` argument to `fit_to_timeline` and `update` methods mostly intended for internal use.,1,198,FALSE,NA
lubridate,be1b5c6764d47f2de12577eac3c7d799,#315 Implement `unique` method for `interval` class.,1,199,FALSE,NA
lubridate,cdb777aabe32b06eedbf88363f583d9a,#295 New args `preserve_hms` and `roll_to_first` in `rollback` function.,1,200,FALSE,NA
lubridate,fa9881c1938bbd099ba21c39d41e3cd7,#303 New `quarter` option in `floor_date` and friends.,1,201,FALSE,NA
lubridate,1368f5d17fb49731ba6bff8c87964a49,#348 New `as.list.Interval` S3 method.,1,202,FALSE,NA
lubridate,a178d252df6e12b33b63bbe99a2d76ce,#278 Added settors and accessors for `qday` (quarter day).,1,203,FALSE,NA
lubridate,c0867f162e87a9bbd1eeb8a9279d717b,New maintainer Vitalie Spinu (@​vspinu),1,204,FALSE,NA
lubridate,8fd46392ec0097fb1e1e9759e1d4fc28,"Time span constructors were re-factored; `new_interval`, `new_period`, `new_duration`, `new_difftime` were deprecated in favour of the more powerful `interval`, `period`, `duration` and `make_difftime` functions.",1,205,FALSE,NA
lubridate,74edb91f45d46e19378d573ea9da55b1,"`eseconds`, `eminutes` etc. were deprecated in favour of `dsecons`, `dminutes` etc.",1,206,FALSE,NA
lubridate,0e1e1c385f7d843337403ea45e23fa9d,Many documentation improvements.,1,207,FALSE,NA
lubridate,f914136b37c292482f1a84211982b7dc,New testthat conventions are adopted. Tests are now in `test/testthat`.,1,208,FALSE,NA
lubridate,fa5082771432b03fd1018fd8e5e5ea00,Internally `isodate` was replaced with a much faster `parse_date_time2(paste(...))` alternative,1,209,FALSE,NA
lubridate,2dbc13ea0359dbd1fdd7615077ee6761,"#325 `Lubridate`'s `trunc`, `ceiling` and `floor` functions have been optimised and now are relying on R's `trunc.POSIXct` whenever possible.",1,210,FALSE,NA
lubridate,96433071f62556ef2e4df7fbb14464ea,#285 Algebraic computations with negative periods are behaving asymmetrically with respect to their positive counterparts.,1,211,FALSE,NA
lubridate,66b4d6e7c5bf0f43d409a52a0fc4d323,Made necessary changes to accommodate new zoo-based `fst` objects.,1,212,FALSE,NA
lubridate,3680fbd38477f7e7272bb200c3b370a9,#360 Fix c parser for Z (zulu) indicator.,1,213,FALSE,NA
lubridate,69407f7879b78136163dc3849d559db9,#322 Explicitly encode formatted string with `enc2utf8`.,1,214,FALSE,NA
lubridate,c59128447c4aca0f86a70f3bf0467455,#302 Allow parsing long numbers such as 20140911000000 as date+time.,1,215,FALSE,NA
lubridate,4c06ae0c1ae484da9303266ba6e4a566,#349 Fix broken interval -\> period conversion.,1,216,FALSE,NA
lubridate,87dfa1f6e59a3091afadc7e5f165fb17,#336 Fix broken interval-\> period conversion with negative diffs.,1,217,FALSE,NA
lubridate,781915df996ee2545e72abc2efd8d99c,"#227 Treat ""days"" and ""years"" units specially for pretty.point.",1,218,FALSE,NA
lubridate,afb98f77a541c32a4447a68e3e99e46c,#286 %m+-% correctly handles dHMS period components.,1,219,FALSE,NA
lubridate,401b25baf3f0b840bbc6e6dd5aaf27fe,#323 Implement coercion methods for Duration class.,1,220,FALSE,NA
lubridate,4491781ebe68c7bf2ea76aecc8bb2756,#226 Propagate NAs in `int_standardize`,1,221,FALSE,NA
lubridate,5aa1a1de4265d060cd31bc689c8c2d38,#235 Fix integer division with months and years.,1,222,FALSE,NA
lubridate,82b63f1328de6a33f51201cadb03a6e9,#240 Make `ceiling_date` skip day light gap.,1,223,FALSE,NA
lubridate,8741c4e9646ee20a910615522797f709,#254 Don't preprocess a/A formats if expressly specified by the user.,1,224,FALSE,NA
lubridate,c113f2ff40818bd8669853374a9fc171,#289 Check for valid day-months combinations in C parser.,1,225,FALSE,NA
lubridate,dd1dbe47cb37f3083c11e829bdb9805e,#306 When needed double guess with `preproc_wday=T`.,1,226,FALSE,NA
lubridate,ae6e6820247f4097c3479ad6dd5b22be,#308 Document sparce format guessing in `parse_date_time`.,1,227,FALSE,NA
lubridate,8e84685a3b19dddbbab79ae33de6cd3c,#313 Fixed and optimized `fit_to_timeline` function.,1,228,FALSE,NA
lubridate,14438f236c7008202df736e07bd1653d,#311 Always use UTC in `isoweek` computation,1,229,FALSE,NA
lubridate,c2431202a277fc1d58e60d2d3f094cbb,#294 Don't use years in `seconds_to_period`.,1,230,FALSE,NA
lubridate,98ee7152cba04e5b968258987cdd83db,Values on `$<-` assignment for periods are now properly recycled.,1,231,FALSE,NA
lubridate,8bf0b4cd163831e0a2f64873601a7fd2,Correctly handle NA subscripting in `round_date`.,1,232,FALSE,NA
lubridate,fcce380de30317f3b000096fcf37a0b6,#219 In `interval` use UTC when tzone is missing.,1,233,FALSE,NA
lubridate,b0f9b36777b5299ed725e6675b30ebb1,#255 Parse yy \> 68 as 19yy to comply with `strptime`.,1,234,FALSE,NA
lubridate,747f5d796ae231f86620003ad63edba0,#266 Include `time-zones.R` in `coercion.R`.,1,235,FALSE,NA
lubridate,d39c0f700aaede13b061cf499542b98a,#251 Correct computation of weeks.,1,236,FALSE,NA
lubridate,705cd651027a300701c288284d70886d,#262 Document that month boundary is the first second of the month.,1,237,FALSE,NA
lubridate,22348f92172ff9c5cf539f0d7fb3991b,#270 Add check for empty unit names in `standardise_lt_names`.,1,238,FALSE,NA
lubridate,716eb240a54bb2441207655b0f87db80,#276 Perform conversion in `as.period.period` if `unit != NULL`.,1,239,FALSE,NA
lubridate,59052a03ff328f071f2581a954bb6c7b,#284 Compute periods in `as.period.interval` without recurring to modulo arithmetic.,1,240,FALSE,NA
lubridate,3fa784e36f73ef623533fbc5018ac9f0,"#272 Update examples for `hms`, `hm` and `ms` for new printing style.",1,241,FALSE,NA
lubridate,0bd045fe52f126f1e1a246fb8f029982,#236 Don't allow zeros in month and day during parsing.,1,242,FALSE,NA
lubridate,d13b2b820c682ceaf42217050c1aae37,#247 Uninitialized index was mistakenly used in subseting.,1,243,FALSE,NA
lubridate,b056cfdd47aadba699f4b477b5f582d4,#229 `guess_formats` now matches flex regexp first.,1,244,FALSE,NA
lubridate,282d30b92f7b6895439e096eb1f1dbd1,`dmilliseconds` now correctly returns a `Duration` object.,1,245,FALSE,NA
lubridate,197d9f9bc51b6032433d252f5e0f9f56,Fixed setdiff for discontinuous intervals.,1,246,FALSE,NA
lubridate,bd4ce45e1c750e3ef8906a11bdd01e44,New low level C parser for numeric formats and two new front-end R functions parse_date_time2 and fast_strptime. The achieved speed up is 50-100x as compared to standard as.POSIXct and strptime functions. The user level parser functions of ymd_hms family drop to these C routines whenever plain numeric formats are detected.,1,247,FALSE,NA
lubridate,dcf8118b4b30d6e3a7cd97cbc65f6b7b,olson_time_zones now supports Solaris OS,1,248,FALSE,NA
lubridate,02e4612142ef00bf9092d6f7f80abd87,infinite recursion on parsing non-existing leap times was fixed,1,249,FALSE,NA
lubridate,c666ec697b6175e8361979a337833aa1,"Lubridate's s4 methods no longer use the representation argument, which has been deprecated in R 3.0.0 (see ?setClass). As a result, lubridate is no longer backwards compatible with R \<3.0.0.",1,250,FALSE,NA
lubridate,49a34837dfab13c56e15cb4c3cb88b1d,"v1.3.0. treats math with month and year Periods more consistently. If adding or subtracting n months would result in a non-existent date, lubridate will return an NA instead of a day in the following month or year. For example, `ymd(""2013-01-31"") + months(1)` will return `NA` instead of `2013-03-04` as in v1.2.0. `ymd(""2012-02-29"") + years(1)` will also return an `NA`. This rule change helps ensure that date + timespan - timespan = date (or NA). If you'd prefer that such arithmetic just returns the last day of the resulting month, see `%m+%` and `%m-%`.",1,251,FALSE,NA
lubridate,bc8edf10b10832a549e364a06250c8a5,"update.POSIXct and update.POSIXlt have been rewritten to be 7x faster than their versions in v1.2.0. The speed gain is felt in `force_tz`, `with_tz`, `floor_date`, `ceiling_date`, `second<-`, `minute<-`, `hour<-`, `day<-`, `month<-`, `year<-`, and other functions that rely on update (such as math with Periods).",1,252,FALSE,NA
lubridate,6245eecdd171b190a3a8bbaf8e83b98c,lubridate includes a Korean translation provided by http://korea.gnu.org/gnustats/,1,253,FALSE,NA
lubridate,53485d31f219c5ad4702e50b830987b4,"lubridate parser and stamp functions now handle ISO8601 date format (e.g., 2013-01-24 19:39:07.880-06:00, 2013-01-24 19:39:07.880Z)",1,254,FALSE,NA
lubridate,0b38a8daea84df3223211b1cf20efd2d,"lubridate v1.3.0 comes with a new R vignette. see `browseVignettes(""lubridate"")` to view it.",1,255,FALSE,NA
lubridate,4c16d8fac9290f0a7b16f405b128f8c5,"The accessors `second`, `minute`, `hour`, `day`, `month`, `year` and the settors `second<-`, `minute<-`, `hour<-`, `day<-`, `month<-`, `year<-` now work on Period class objects",1,256,FALSE,NA
lubridate,76de6a6c7fe5cdbf56c3ce99766f8ea8,users can control which messages lubridate returns when parsing and estimating with the global option lubridate.verbose. Run `options(lubridate.verbose = TRUE)` to turn parsing messages on. Run `options(lubridate.verbose = FALSE)` to turn estimation and coercion messages off.,1,257,FALSE,NA
lubridate,8688653becd959e9fbc3bf3920eafa79,"lubridate parser functions now propagate NA's just as as.POSIXct, strptime and other functions do. Previously lubridate's parse functions would only return an error.",1,258,FALSE,NA
lubridate,2c2d7c48efac5d2f5e1b9e5559346eff,"added \[\[ and \[\[\<- methods for INterval, Period and Duration class objects",1,259,FALSE,NA
lubridate,015dc25f26c3dd99f8a8739df25a5f64,added `%m+%` and `%m-%` methods for Interval and Duration class objects that throw useful errors.,1,260,FALSE,NA
lubridate,f6fcb5cb0af4e46afe92bccc22c4f95d,`olson_time_zones` retreives a character vector is Olson-style time zone names to use in lubridate,1,261,FALSE,NA
lubridate,4751bfca31e1b31a5e179be9595e8b6e,"summary methods for Interval, Period, and Duration classes",1,262,FALSE,NA
lubridate,f3ddbf45008a326501f37d729adbec85,date_decimal converts a date written as a decimal of a year into a POSIXct date-time,1,263,FALSE,NA
lubridate,4ae8ac4873681c165c0e20dc2a55d6b1,fixed bug in way update.POSIXct and update.POSIXlt handle dates that occur in the fall daylight savings overlap. update will choose the date-time closest to the original date time (on the timeline) when two identical clock times exist due to the DST overlap.,1,264,FALSE,NA
lubridate,a2afab1b7e241f95d2bc829c01bdc29c,"fixed bugs that created unintuitive results for `as.interval`, `int_overlaps`, `%within%` and the interval methods of `c`, `intersect`, `union`, `setdiff`, and `summary`.",1,265,FALSE,NA
lubridate,65aafe2ec7797aa6d8c96f40917f8d99,"parse functions, `as.interval`, `as.period` and `as.duration` now handlevectors of NA's without returning errors.",1,266,FALSE,NA
lubridate,86d000824bd02b73a9efacc389b32ada,parsers better handle vectors of input that have more than 100 elements and many NAs,1,267,FALSE,NA
lubridate,9862f6f17a00d94721de25d467cc01d9,data frames that contain timespan objects with NAs in thme no longer fail toprint,1,268,FALSE,NA
lubridate,33cdc01c15994b1255edbd82035c51a0,"`round_date`, `ceiling_date` and `update` now correctly handle input of length zero",1,269,FALSE,NA
lubridate,894ec41a187d183326918a4824f5d738,`decimal_date` no longer returns NaN for first second of the year,1,270,FALSE,NA
lubridate,6ac9c8630afad4e17232a668b82986fd,"lubridate 1.2.0 is significantly faster than lubridate 1.1.0. This is largely thanks to a parser rewrite submitted by Vitalie Spinu. Thank you, Vitalie. Some metrics:",1,271,FALSE,NA
lubridate,6ac9c8630afad4e17232a668b82986fd,• parser speed up - 60x faster,2,272,FALSE,"lubridate 1.2.0 is significantly faster than lubridate 1.1.0. This is largely thanks to a parser rewrite submitted by Vitalie Spinu. Thank you, Vitalie. Some metrics:"
lubridate,6ac9c8630afad4e17232a668b82986fd,• `with_tz` speed up - 15x faster,2,273,FALSE,"lubridate 1.2.0 is significantly faster than lubridate 1.1.0. This is largely thanks to a parser rewrite submitted by Vitalie Spinu. Thank you, Vitalie. Some metrics:"
lubridate,6ac9c8630afad4e17232a668b82986fd,• `force_tz` speed up - 3x faster,2,274,FALSE,"lubridate 1.2.0 is significantly faster than lubridate 1.1.0. This is largely thanks to a parser rewrite submitted by Vitalie Spinu. Thank you, Vitalie. Some metrics:"
lubridate,d976ece053c33d9f323e9faf21cd2e16,"Development for 1.2.0 has also focused on improving the way we work with months. `rollback` rolls dates back to the last day of the previous month. provides more options for working with months. `days_in_month` finds the number of days in a date's month. And, `%m+%` and `%m-%` provide a new way to \### handle unequal month lengths while doing arithmetic. See NEW FEATURES for more details",1,275,FALSE,NA
lubridate,cc5411ee7d34820d7ce09fc38f003dd1,"date parsing can now parse multiple date formats within the same vector of date-times. Parsing can also recognize a greater variety of date-time formats as well as incomplete (truncated) date-times. Contributed by Vitalie Spinu. Thank you, Vitalie.",1,276,FALSE,NA
lubridate,f55e1489563b2690a6b9ca03a5cb089e,1.2.0 introduces a new display format for periods. The display is more math and international friendly.,1,277,FALSE,NA
lubridate,3de3af9be8231b806c5d44a0dc2b7b82,"1.2.0 transforms negative intervals into periods much more gracefully (e.g, - 3 days instead of -1 years, 11 months, and 27 days)",1,278,FALSE,NA
lubridate,e7e43d480859c83a39bbb5aad3990cb5,S3 update methods are now exported,1,279,FALSE,NA
lubridate,ad95083a3d0635b5a76c9f01858ff13d,"`stamp` allows users to print dates in whatever form they like. Contributed by Vitalie Spinu. Thank you, Vitalie.",1,280,FALSE,NA
lubridate,f4b7ddfb4804ca8db94887dcce0ea0ad,"periods now handle fractional seconds. Contributed by Vitalie Spinu. Thank you, Vitalie.",1,281,FALSE,NA
lubridate,f511c0e666263fc7e1b75846f0f12cb5,"date parsing can now parse multiple date formats within the same vector of date-times. Parsing can also recognize a greater variety of date-time formats as well as incomplete (truncated) date-times. Contributed by Vitalie Spinu. Thank you, Vitalie.",1,282,FALSE,NA
lubridate,ee3fc36eaf92c8afea4c47778872169d,"`sort`, `order`, `rank` and `xtfrm` now work with periods",1,283,FALSE,NA
lubridate,2acf199a23fd767e327b981d25ef5650,`as.period.Interval` accepts a unit argument. `as.period` will convert intervals into periods no larger than the supplied unit.,1,284,FALSE,NA
lubridate,c4538556846f0bfa4c0f3e6bcf6f6780,"`days_in_month` takes a date, returns the number of days in the date's month. Contributed by Richard Cotton. Thank you, Richard.",1,285,FALSE,NA
lubridate,dfa61909882e6984b614134c4797c480,"`%m+%` and `%m-%` perform addition and subtraction with months (and years) without rollover at the end of a month. These can be used in place of + and -. These can't be used with periods smaller than a month, which should be handled separately. An example of the new behavior: ymd(""2010-01-31"") %m+% months(1) \# ""2010-02-28 UTC"" ymd(""2010-01-31"") + months(1) \# ""2010-03-03 UTC"" ymd(""2010-03-31"") %m-% months(1) \# ""2010-02-28 UTC"" ymd(""2010-01-31"") - months(1) \# ""2010-03-03 UTC""",1,286,FALSE,NA
lubridate,07371a637b691fe25fefefd980f888dd,`rollback` rolls a date back to the last day of the previous month.,1,287,FALSE,NA
lubridate,05e8d75eed019325fa2b5e3b853a4d03,"`quarter` returns the fiscal quarter that a date occurs in. Like `quartes` in base R, but returns a numeric instead of a character string.",1,288,FALSE,NA
lubridate,6495036c3b5b3924f5ad27ca2fc563a4,date parsers now handle NAs,1,289,FALSE,NA
lubridate,6b28cda3327b37322cdedefc21482ee0,periods now handle NAs,1,290,FALSE,NA
lubridate,91b9f924e06849caf1528511e3d36596,"`[<-` now correctly updates all elements of a period inside a vector, list, or data.frame",1,291,FALSE,NA
lubridate,9e00e2d36328c5a2e6d0b440b05d0c94,"`period()` now works with unit = ""weeks""",1,292,FALSE,NA
lubridate,9b91efe810cea7de62080e9ee2a84d22,`ceiling_date` no longer rounds up if a date is already at a ceiling,1,293,FALSE,NA
lubridate,51206f93d1c1b3a89f06760c0d3eaa6a,"the redundant (i.e, repeated) hour of fall daylight savings time now displays with the correct time zone",1,294,FALSE,NA
lubridate,81abffbdd2b5dab5476f3953a959503b,`update.POSIXct` and `update.POSIXlt` handle vectors that sum to zero in the days argument,1,295,FALSE,NA
lubridate,44b4f714b905409ff239f8a961fa72ef,"the format method for periods, intervals and duration now accurately displays objects of length 0.",1,296,FALSE,NA
lubridate,9fd71f6fd74e0dc5405768181ced9610,"lubridate no longer overwrites base R methods for +, - , \*, /, %%, and %/%. To recreate the previous experience of subtracting two date times to create an interval, we've added the interval creation function %--%.",1,297,FALSE,NA
lubridate,3177ad9a275efeb6fe856b3f13148567,"lubridate has moved to an S4 object system. Timespans, Intervals, Durations, and Periods have each been redefined as an S4 class with its own methods.",1,298,FALSE,NA
lubridate,5a29a2f2837a24271183472347bb1d6f,"arithmetic operations will no longer perform implicit class changes between timespans. Users must explicitly state how and when they wish class changes to occur with as.period(), as.duration(), and as.interval(). This makes code written with lubridate more robust, as such implicit changes often did not produce consistent behavior across a variety of operations. It also allows lubridate to be less chatty with fewer console messages. lubridate does not need to explain what it is doing, because it no longer attempts to do things whose outcome would not be clear. On the other hand, arithmetic between multiple time classes will produce informative error messages.",1,299,FALSE,NA
lubridate,72fc454e0aede825ad4e558e9c088349,the internal structure of lubridate R code has been reorganized at https://github.com/tidyverse/lubridate to make lubridate more development friendly.,1,300,FALSE,NA
lubridate,a712f1788b9d597588524141aa5f6d00,"intervals are now more useful and lubridate has more ways to manipulate them. Intervals can be created with %--%; modified with int_shift(), int_flip(), and int_standardize(); manipulated with intersect(), union(), and setdiff(); and used in logical tests with int_aligns(), int_overlaps(), and %within%. lubridate will no longer perform arithmetic between two intervals because the correct results of such operations is no more obvious than the correct result of adding two dates. Instead users are encouraged to use the new set operations or to directly modify intervals with int_start() and int_end(), which can also be used as settors. lubridate now supports negative intervals as well as positive intervals. Intervals also now display with a time zone.",1,301,FALSE,NA
lubridate,21fbde317b5e5b768db5fa58731f774b,"Modulo methods for timespans have been changed to return a timespan. this allows modulo methods to be used with integer division in an intuitive manner, e.g. `a = a %/% b * b + a %% b`",1,302,FALSE,NA
lubridate,a4dd7d956cbd824d57dce64763718699,"Periods, durations, and intervals can now all be put into a data frame.",1,303,FALSE,NA
lubridate,424d1cb114565e1a8400864bc3246048,"Periods, durations, and intervals can be intuitively subset with \$ and \[\]. These operations also can be used as settors with \<-.",1,304,FALSE,NA
lubridate,d64c182e4c722105d952174154b482aa,The parsing functions and the as.period method for intervals are now slightly faster.,1,305,FALSE,NA
lubridate,c2bb5c37f025997d9b3fcd3ce4b15b40,month\<- and wday\<- settors accept names as well as numbers,1,306,FALSE,NA
lubridate,bfe9eefde72163b0c31f7252dd989dc8,parsing functions now have a quiet argument to parse without messages and a tz argument to directly parse times into the desired time zone.,1,307,FALSE,NA
lubridate,7a97d12a3f0b95db25b366592db4ddd6,logical comparison methods now work for period objects.,1,308,FALSE,NA
lubridate,47fc045fefc48de92220554e2fa940f2,use `test_package` to avoid incompatibility with current version of `testthat`,1,309,FALSE,NA
lubridate,2b725ae7cf1a5a8c62206fb7cdbaa9fc,other minor fixes to pass `R CMD check`,1,310,FALSE,NA
lubridate,9a35cfe88f9fad67bf3336bd8decf770,added ymdThms() for parsing ISO 8061 formatted combned dates and times,1,311,FALSE,NA
lubridate,336bdda7f681d529d1b4880f763870ac,"removed bug in parsing dates with ""T"" in them",1,312,FALSE,NA
lubridate,2dafc61de921f089207e42db2d6d9b83,modified as.period.interval() to display periods in positive units,1,313,FALSE,NA
lubridate,c5783a25ba583cd41d7ea1c3d181be8c,Add citations to JSS article,1,314,FALSE,NA
lubridate,58bd39138919f129c64e05d3f4f9d3f4,"ymd_hms(), hms(), and ms() functions can now parse dates that include decimal values in the seconds element.",1,315,FALSE,NA
lubridate,327e53a4ea3987ea51e4af4f9c5f0f39,"milliseconds(), microseconds(), nanoseconds(), and picoseconds() create period objects of the specified lengths. dmilliseconds(), dmicroseconds(), dnanoseconds(), and dpicoseconds() make duration objects of the specified lengths.",1,316,FALSE,NA
lubridate,e861b18033290789a1747bf71cd48e08,"lubridate no longer overwrites months(), start(), and end() from base R. Start and end have been replaced with int_start() and int_end().",1,317,FALSE,NA
lubridate,a1ca2479ba0787d5af7a084d5edac16e,"lubridate imports plyr and stringr packages, instead of depending on them.",1,318,FALSE,NA
lubridate,72d54f8329e0332407644fa30e237e7a,"made division, modulo, and integer division operations compatible with difftimes",1,319,FALSE,NA
lubridate,10d77c420be645213439ed6a6d660f4c,created c() methods for periods and durations,1,320,FALSE,NA
lubridate,7ea577f357e023411dc5f2ddc1a46620,"fixed bug in division, modulo, and integer operations with timespans",1,321,FALSE,NA
lubridate,a9db3f579a422ea1a65d39f7447a8d84,"created parsing functions ymd_hm ymd_h dmy_hms dmy_hm dmy_h mdy_hms mdy_hm mdy_h ydm_hms ydm_hm ydm_h, which operate in the same way as ymd_hms().",1,322,FALSE,NA
lubridate,a35a96a4d4ec887ba96b26afe4dc7b21,fixed bug in add_dates(). duration objects can now be successfully added to numeric objects.,1,323,FALSE,NA
lubridate,a26f5ac87504ef06f143772ac2cdbe6f,"division between timespans: each timespan class (durations, periods, intervals) can be divided by other timespans. For example, how many weeks are there between Halloween and Christmas?: (christmas - halloween) / weeks(1)",1,324,FALSE,NA
lubridate,2c8ad25ab78623c778c4626bbda44c46,modulo operations between timespans,1,325,FALSE,NA
lubridate,9ae5f0d6049c57fc4ac9ed9af0ac10cf,duration objects now have their own class and display format separate from difftimes,1,326,FALSE,NA
lubridate,1a8dac656efd36512b2fd00e6e569c61,interval objects now use an improved data structure and have a cleaner display format,1,327,FALSE,NA
lubridate,e6b31678ef660f35e5f31a85669d9e1f,lubridate now loads its own namespace,1,328,FALSE,NA
lubridate,3848298260a413946b6a534d1333555a,"math operations now automatically coerce interval objects to duration objects. Allows intervals to be used ""right out of the box"" without error messages.",1,329,FALSE,NA
lubridate,8a7e7325a9589a7535431a2963812a32,created start() and end() functions for accessing and changing the boundary date-times of an interval,1,330,FALSE,NA
lubridate,67f8f949a1fc7e9aa5e10793c7fa70e5,"rep() methods for periods, intervals, and durations",1,331,FALSE,NA
lubridate,a59c9917c81dbad6c3df189c8d0af603,added a package help page with functions listed by purpose,1,332,FALSE,NA
lubridate,c73c76942802d1094ca8dc03f06e2c6f,"eseconds(), eminutes(), etc. are aliased to dseconds(), dminutes(), etc. to make it easier to remember they are duration objects.",1,333,FALSE,NA
lubridate,5b55bd16c2c0beadceb4d09ee903fff8,changed leap.years() to leap_years() to maintain consistent naming scheme,1,334,FALSE,NA
lubridate,13bbcc1675be98bd4dc59d768b53ec2d,rewrote as.period() to create only positive periods.,1,335,FALSE,NA
lubridate,8f456aba59caaaf09b4ddaa83b9d214e,fixed rollover bug in update.POSIXct(),1,336,FALSE,NA
lubridate,d7f3dd875c1f9a6b52aec658b0e868bb,"edited make_diff() to display in days when approporiate, not weeks",1,337,FALSE,NA
magrittr,d3f8df603cfc6e4c62d7d7e871fce404,Fixed a C level protection issue in `%>%` (#256).,1,1,FALSE,NA
magrittr,629f53001aa79b7be13c5635f918f399,"New eager pipe `%!>%` for sequential evaluation (#247). Consider using `force()` in your functions instead to make them strict, if sequentiality is required. See the examples in `?""pipe-eager""`.",1,2,FALSE,NA
magrittr,e2b0386d592b7b6ebb13c6a60e39ec2b,"Fixed an issue that could cause pipe invocations to fail in versions of R built with `--enable-strict-barrier`. (#239, @​kevinushey)",1,3,FALSE,NA
magrittr,e7df2c1c6cc900da1b9be0742f9aeb66,Fixed issue caused by objects with certain names being present in the calling environment (#233).,1,4,FALSE,NA
magrittr,068300dca116a25e9cc851362675de14,Fixed regression in `freduce()` with long lists (kcf-jackson/sketch#5).,1,5,FALSE,NA
magrittr,e87902a9d6c7cb492c12cbda7f953fc5,Minimal performance cost.,1,6,FALSE,NA
magrittr,a287d9ace9d789538a857fa616ad14ba,Minimal impact on backtraces.,1,7,FALSE,NA
magrittr,3edf3572fc8d1adea81ddbe13c1a4c6c,No impact on reference counts.,1,8,FALSE,NA
magrittr,e7f1187d297205c8abbbe2ccc62f6cd4,Can now use the placeholder `.` with the splicing operator `!!!` from rlang (#191).,1,19,FALSE,NA
magrittr,d64f61cabd9a86bfdbb66b6c4a300974,"Piped arguments are now persistent. They can be evaluated after the pipeline has returned, which fixes subtle issues with function factories (#159, #195).",1,20,FALSE,NA
magrittr,aab80bf432571e17f53aabaa86ebe061,Assignment pipe: `%<>%`,1,21,FALSE,NA
magrittr,40a249d1711015658bf87374f0ff54c4,Tee pipe: `%T>%`,1,22,FALSE,NA
magrittr,78a6ed72cfaacc7932e4171c1b499511,Exposition pipe: `%$%`,1,23,FALSE,NA
modelr,0372feff97b1872518310b4a344a3f2a,Fixes for R CMD check,1,1,FALSE,NA
modelr,d10300c7c901f8c68209487da8439923,Relax test for R-devel,1,2,FALSE,NA
modelr,1c80ec752db9507c59848b91ce50faa6,Redocument to fix HTML issues in .Rd,1,3,FALSE,NA
modelr,48d257574ca15dae770b284a2a3a85ab,Eliminate direct dplyr dependency in favour of vctrs.,1,4,FALSE,NA
modelr,300a5bbad355146c8ed3ab35f2a1d5d3,Reimplement `typical.ordered()` for R-devel compatibility.,1,5,FALSE,NA
modelr,2246c7f801205b622e7c8d631a1fc109,Minor documentation fixes and updates for deprecated functions.,1,6,FALSE,NA
modelr,ac7672a9594c5e7f1fef0d7912ab9e4d,R CMD check documentation fix,1,7,FALSE,NA
modelr,14131913f3fa2447c6847e21b0782b3b,Fix to `data_grid()` to work with dev tidyr.,1,8,FALSE,NA
modelr,e471f5c06c7ce2c068cb60310ce4ab99,"`add_predictions()`, `gather_predictions()`, and `spread_predictions()` more carefully pass along `type` parameter in order to avoid problems with predict methods that don't deal with `type = NULL` (#92).",1,9,FALSE,NA
modelr,cc26b94afb8bd3bba2178072f70f4ac5,"`add_predictions()`, `gather_predictions()`, and `spread_predictions()` gain a `type` parameter which is passed through to `stats::predict()` (#34, @​pmenzel)",1,10,FALSE,NA
modelr,e96554e9c3f5c1f72b31662075b16f00,New `crossv_loo()` which implements leave-one-out cross validation (@​pmenzel),1,11,FALSE,NA
modelr,b5a7f2a854b69688eec93dc23864025d,`typical()` no longer ignores missing values in character and factor vectors (#80).,1,12,FALSE,NA
modelr,d92ccfb5c4892856a4f6e94bd9bccf20,`data_grid()` no longer fails with modern tidyr (#58).,1,13,FALSE,NA
modelr,a46b0a341393fc2b50416759e6979dd9,"New `mape()` and `rsae()` model quality statistics (@​paulponcet, #33).",1,14,FALSE,NA
modelr,a157b8dd806cab0f42a6a9cc20b08ccf,`rsquare()` use more robust calculation 1 - SS_res / SS_tot rather than SS_reg / SS_tot (#37).,1,15,FALSE,NA
modelr,e60fed6f4744539f966d5b178c080679,"`typical()` gains `ordered` and `integer` methods (@​jrnold, #44), and `...` argument (@​jrnold, #42).",1,16,FALSE,NA
modelr,556c612d8ba923401d49cb01d173463e,Added a `NEWS.md` file to track changes to the package.,1,17,FALSE,NA
modelr,41a829307745fa84d211f53fbe16db32,Fixed R CMD CHECK note,1,18,FALSE,NA
modelr,8787f6180632ff49b2daa2d1f904c340,Updated usage of `reduce()` for upcoming purrr release,1,19,FALSE,NA
modelr,cbd9ed655e2982edadcd33f087b67cfe,More general `permute()` function,1,20,FALSE,NA
modelr,03204b842b4b9e0dc2061e75236aabe0,"Add `mse()` function to calculate mean squared error. Written by @​bensoltoff, pull request #57",1,21,FALSE,NA
pillar,ab43989dc33ba861e4ed7185318329da,Internal changes only.,1,1,FALSE,NA
pillar,8e15e4f4a3a425f01d570914600229fb,Merged cran-1.9.0 into main.,1,2,FALSE,NA
pillar,1b20da234abd85f4291eee01797112bc,Internal changes only.,1,3,FALSE,NA
pillar,2131db936b2ef693ed4531b64d6de466,Internal changes only.,1,4,FALSE,NA
pillar,8d8a10c0b5cf043d26243572b9380eff,"Math operations on `num()` objects no longer perform type checks. This allows, e.g., multiplying a `num()` with a logical (#630, #632).",1,5,FALSE,NA
pillar,8e2d28765fe54a0b81eb7a8dc4d6bbb5,"The default for the `pillar.min_title_chars` option has been bumped up to 20 characters so that title truncuation only affects very long variables. Use `options(pillar.min_title_chars = 5)` to reset to the previous default (#582, #620).",1,6,FALSE,NA
pillar,069e9577804b0da655e25ab6fbebe462,"Use info bullets to format details (#582, #617, #627, #635).",1,7,FALSE,NA
pillar,ccdd312e0da1b5df0507e31496f2da2f,"`colonnade()`, `extra_cols()` and `squeeze()` are now hard-deprecated (#272, #374, #631).",1,8,FALSE,NA
pillar,08eb0d63b93efe9fc1b4888b4ce22016,"Show `colnames()` hint only when needed (tidyverse/tibble#1488, #622).",1,9,FALSE,NA
pillar,0e9d56e4f34fc459351c6a9f25bbe08e,"Fix printing of very small numbers (#615, #619).",1,10,FALSE,NA
pillar,9351a22706be6b48b5161944bbee1fb7,"Shortened list columns are also shown with a subtle style (#628, #634).",1,11,FALSE,NA
pillar,abcc210710a2828be7d2267f49984c32,"Avoid warning with S4 character classes (tidyverse/tibble#1367, #625).",1,12,FALSE,NA
pillar,bdc17aebffe25034333e04744422ee5b,"Fix method consistency, checked by R-devel (#633).",1,13,FALSE,NA
pillar,9895f468ffd354603c0a069814eb4822,Polish `?pillar_options` (#583).,1,14,FALSE,NA
pillar,348455ec1e2a65ed845521846ca4774c,"Fix typo & missing quote in digits vignette stub (@​gavinsimpson, #629).",1,15,FALSE,NA
pillar,a4816fc0f5b841ba66611999ce55c04c,Require vctrs \>= 0.5.0,1,16,FALSE,NA
pillar,22ed19c4c389e3f7ce118fe362d143cf,"New `pillar.advice` option to turn off advice in the footer, see `?pillar_options`. Now off by default in non-interactive mode (#577).",1,17,FALSE,NA
pillar,8c963610826cad45e6ac8904ad5ea335,"Column names that are abbreviated in the header gain a footnote and are printed in full in the footer (#483), after the extra columns (#548). If a column name in the header is abbreviated, all backticks are removed (#525). The new `""pillar.superdigit_sep""` option that determines the string used to separate footnote from column name in the footer (#553).",1,18,FALSE,NA
pillar,360a03bf8033dac80147ad48efbc70f4,"The default value of the `pillar.min_title_width` option is changed to 5. This means that effectively the width of a pillar is decided only by the data. Use `options(pillar.min_title_width = 15)` to restore the previous default, see also `?pillar_options` for details (#531).",1,19,FALSE,NA
pillar,ec77d2e81e1515106548b713a0aeed1d,Offer advice in the footer on how to print all columns or rows (#567).,1,20,FALSE,NA
pillar,54d93921602566db5ca0f354e5a1d4d9,Avoid aligning `NA` inside quotes for very short character vectors (#562).,1,21,FALSE,NA
pillar,b3e7951e3c3d29912cf94e3c1b1f959b,"Pick up `""pillar_focus""` attribute on printing to define focus columns (#549).",1,22,FALSE,NA
pillar,8e8102b24f44874410ebd616c00157cc,"New `ctl_new_rowid_pillar()` generic and default method for customizing the appearance of row IDs (#260, #550, @​nbenn).",1,23,FALSE,NA
pillar,e28201c00f95f85c92aeea0023bfaf70,Fix printing of `Surv` and `Surv2` objects (#561).,1,24,FALSE,NA
pillar,747edf145f6685ebff0f00798e6e29f7,Fix wording for corner case `max_extra_cols = 1` (#535).,1,25,FALSE,NA
pillar,ca8d32e379e85dfc425998d613cbb85e,"Remove excess underlines for `bit64::integer64()` data of different magnitude (#517, #529).",1,26,FALSE,NA
pillar,638fd48e98f453ad71a2126821f845e6,`ctl_new_pillar_list()` is documented on a separate help page (#516).,1,27,FALSE,NA
pillar,63b0ab0098b6510b885ffb32e0ede59b,"Remove outdated detail in `?tbl_sum` (@​IndrajeetPatil, #565).",1,28,FALSE,NA
pillar,cd138af43fdb3598a8f0cdb975d764ef,Drop crayon dependency (#559).,1,29,FALSE,NA
pillar,aababdda672ff3764371adc48c04bcee,Import ellipsis from rlang (#554).,1,30,FALSE,NA
pillar,f9140db3347179e2ca369b7a15c7315c,"Skip test that requires lubridate if it's not installed (#505, @​MichaelChirico).",1,31,FALSE,NA
pillar,ba4d209fa4b762af6834064c201facfd,"Soft-deprecate `colonnade()`, `squeeze()` and `extra_cols()` (#496).",1,32,FALSE,NA
pillar,a16caf1baf8cd950f1116ac049220c5d,Require rlang 1.0.1 (#512).,1,33,FALSE,NA
pillar,bd520a479a16af0ef6f77ff734bb724a,`colonnade()` is now soft-deprecated (#485).,1,34,FALSE,NA
pillar,c4068e101a40ab2762266514e4f59cc5,"`expect_known_display()` and `is_vector_s3()` are now deprecated (#460, #501).",1,35,FALSE,NA
pillar,76ee08406ebfe0a3dfe5a364effe1c55,`new_pillar()` deprecates `extra` argument (#497).,1,36,FALSE,NA
pillar,c5951eb985e51ae4eb93264664ef4f0d,"Focus columns specified via the `focus` argument to `tbl_format_setup()` are kept in their original place and shown with the maximum width and with the ""type"" component underlined (#465).",1,37,FALSE,NA
pillar,fb460112d75581805ee6d55772f62731,"Update `s3_register()` to use new implementation from rlang, this fixes CRAN checks related to `scale_type()` (#462).",1,38,FALSE,NA
pillar,0be6675f11a8f96c7be5b50f74b75d62,Single pillars constructed with `pillar()` use only as much width as required when printing (#484).,1,39,FALSE,NA
pillar,7b96b76e29ddaea2abb336480955dc9a,"New `ctl_new_pillar_list()`, supersedes `ctl_new_compound_pillar()` (#433).",1,40,FALSE,NA
pillar,3b0dc8d2b726ccb309d1e248a354dd9c,"If some but not all sub-columns of a data frame or matrix column are shown, the names and types of the remaining columns are displayed in the footer (#365, #444).",1,41,FALSE,NA
pillar,ec89e57504bc7ca1309ad5fcd277a429,"`num(fixed_exponent = ...)` is now represented with the fixed exponent in the pillar header, and in the title in ggplot2 (#307).",1,42,FALSE,NA
pillar,054cdbd2e26f29f0c32da21d2d234d23,`tbl_format_setup()` gains `focus` argument that expects a character vector of column names. Focus columns are moved to the front and separated from the main columns by a subtle vertical line (#384).,1,43,FALSE,NA
pillar,e93e0effa73e00a98a8199bc40085554,"New `scale_x_num()` and `scale_y_num()`. If a column created with `num()` is used in a ggplot, the x and y scale will be formatted automatically according to to the specification (#400, #404).",1,44,FALSE,NA
pillar,bad93f56342b59d587925aff74af5252,List columns omit size information if horizontal space is insufficient (#392).,1,45,FALSE,NA
pillar,8d56aa908946a6af1d0a83ec52e6713c,"If the column title of a backticked column is abbreviated, the trailing backtick is still printed (#391).",1,46,FALSE,NA
pillar,3a23e372acd26be894bceb409dbcfbca,`new_pillar_shaft_simple()` gains `short_formatted` argument that contains the data to be used if horizontal space is insufficient (#389).,1,47,FALSE,NA
pillar,51660f0e1da3e576cddfff36b9d5b724,Default `obj_sum()` method returns abbreviation in attribute of return value (#390).,1,48,FALSE,NA
pillar,4aee9255cff958e38625a9f912a11396,Extra columns in footer show backticks again if they are non-syntactic (#393).,1,49,FALSE,NA
pillar,bd82845343fbf8fc445ff621956bae14,"Fixed some cases for combinations of printed width and `getOption(""width"")` (#432).",1,50,FALSE,NA
pillar,5290064f812a47fd81843d1912d0bec5,"Fix support for `nanotime::nanotime()` classes (#378, #380).",1,51,FALSE,NA
pillar,9503bc474641692009869da12eaa9b86,`?num` and `?char` now point to tibble (#382).,1,52,FALSE,NA
pillar,4d2aae90f81731e6bb774c71dbfb67cc,Use eager registration via `NAMESPACE` for own methods for classes from other packages.,1,53,FALSE,NA
pillar,a68fab385accd2fd500ca00264581601,"Reworked formatting routine, now using a visitor-based approach with in-order iteration over all pillars. The only visible changes are that usage of free space (in the case of limited space) has slightly improved (#435).",1,54,FALSE,NA
pillar,4b0f6ccbc707db288706979e6b0e0261,"Prepared removal of dependency on the crayon package (#233, #406).",1,55,FALSE,NA
pillar,7cf503de7e1a6ee77b73e4770e97903d,"Use snapshot variants, requires testthat \>= 3.1.1 (#387).",1,56,FALSE,NA
pillar,14104c3325bd183e2cf732a79a2aefc6,"Replace internal `""pillar_vertical""` class with `glue::as_glue()` (#279).",1,57,FALSE,NA
pillar,98e9d5a4f8fe84fd8b33d1f0701d9ddc,Fix printing for some tibbles where a fixed-width column is followed by a column with variable width (#366).,1,58,FALSE,NA
pillar,3babb1cee1cbd1fd995e331c4cb661fa,Avoid nested backtick blocks in vignette.,1,59,FALSE,NA
pillar,82134c603d92c32b4ceb05a01c2a8e9e,`num()` requires an integerish `digits` argument (#362).,1,60,FALSE,NA
pillar,5bc88dda32f538ace98214561d6bbb4d,Link to tibble vignettes and documentation pages.,1,61,FALSE,NA
pillar,7430d65292de3b9c4d2b0476578e922f,"Avoid blanket import for lifecycle package for compatibility with upcoming rlang (#368, @​romainfrancois).",1,62,FALSE,NA
pillar,fae9fc762c267639cb739d0bfdd88ebd,"Options `pillar.print_max`, `pillar.print_min`, `pillar.width` and `pillar.max_extra_cols` are now queried before the corresponding `tibble.` or `dplyr.` options are consulted, the latter will be soft-deprecated in pillar v2.0.0 (#353).",1,63,FALSE,NA
pillar,4eccaa7ed4dff5f2743b0490a60f63b4,"New `pillar.bidi` option. When active, control characters are inserted to improve display of data with right-to-left text (#333).",1,64,FALSE,NA
pillar,bee0a8f481571e661a9b7c2172ec127b,The new `pillar.max_footer_lines` option (default: 7) allows controlling the maximum number of footer lines shown. It is applied in addition to the existing `tibble.max_extra_cols` option (#263).,1,65,FALSE,NA
pillar,10744498627d44033a7cfdd4d88b7442,"If a column doesn't make use of all horizontal width offered to it, the excess width is distributed over other columns (#331).",1,66,FALSE,NA
pillar,090e264132d9efd8826c0d4556ca17f7,"Improved allocation of free space in multi-tier tables with `getOption(""tibble.width"") > getOption(""width"")` (#344).",1,67,FALSE,NA
pillar,776db938912d2ac6158bf1a4ed5eb748,"All pillars are shown with their true horizontal extent, irrespective of the indicated `width`. This simplifies the implementation of custom `pillar_shaft()` methods (#347).",1,68,FALSE,NA
pillar,22c7475a1d9b4e6f6ad0934443dbc850,`num()` gains `extra_sigfig` argument to automatically show more significant figures for numbers of the same magnitude with subtle differences (#97).,1,69,FALSE,NA
pillar,fd8ec87a0578f61454a90eb28459c9a6,`print.tbl()` and `format.tbl()` support the `max_extra_cols` and `max_footer_lines` arguments that override the corresponding options (#360).,1,70,FALSE,NA
pillar,ad1021ccbd75d879204b864d021ccb4b,`print.tbl()` and `format.tbl()` maps the now deprecated `n_extra` argument to `max_extra_cols` for consistency (#360).,1,71,FALSE,NA
pillar,ba8262c3a64a74ef422b97602651804b,Avoid mangling of duplicate column names in footer (#332).,1,72,FALSE,NA
pillar,ff4e6c058fb682818f5c199d74bcafb0,Fix warning with zero of type `bit64::integer64()` (#319).,1,73,FALSE,NA
pillar,a9b0463efc2c27e0db6e89dfdf55dcb8,All package options are now documented in `?pillar_options` (#339).,1,74,FALSE,NA
pillar,7b4b28b84b14b8f5cb9cc31f65b095ba,"`obj_sum()` no longer calls `type_sum()` for vectors since pillar v1.6.1, this is now documented (#321).",1,75,FALSE,NA
pillar,3e46e58123b8baaf4fc7e35105cb02dc,Fix documentation on usage of `vctrs::vec_proxy()` and `vctrs::vec_restore()` (#322).,1,76,FALSE,NA
pillar,305bcd84ef7e31e436b6608ad1da0fed,Using `attr(exact = TRUE)` everywhere.,1,77,FALSE,NA
pillar,e8af980ca6630700cbcf6df19b62b02d,`is_vector_s3()` is no longer generic (#181).,1,78,FALSE,NA
pillar,4591b518c80ef2d9ed438b15d254045f,Fix internal logic around `vec_proxy()` and `vec_restore()` (#316).,1,79,FALSE,NA
pillar,c72ca517af8dae7f64ac7e65106f7e54,Bump required versions of ellipsis and vctrs to avoid warning during package load.,1,80,FALSE,NA
pillar,bcc2cc34164baf15e50f2fab7debb5d9,`obj_sum()` no longer includes shape twice (#315).,1,81,FALSE,NA
pillar,f1bd299a10cd1f4d71de89e80b8dfc46,"New `num()` and `char()` offer a flexible way to customize the display of numeric and character columns (#191, #84).",1,82,FALSE,NA
pillar,50fab1581a00c3b868e4f1af6c4e199a,"New `""pillar.max_dec_width""` option (#308).",1,83,FALSE,NA
pillar,99233f56552aead2f2dbf3ee3b0e775b,New `format_type_sum.AsIs()` avoids the need to implement your own `format_type_sum()` method (#286).,1,84,FALSE,NA
pillar,aee142817f4d474216b589cf3c5a8c71,`align()` gains `space` argument to control the character used for filling (#285).,1,85,FALSE,NA
pillar,b8b6e36d90a5b26d410585bd753d04a4,Numbers in scientific and decimal notation are formatted with the same rules regarding significant or decimal digits (#297).,1,86,FALSE,NA
pillar,5e5bf70178330056577ed01df538e2b3,Load the debugme package only if the `DEBUGME` environment variable is set.,1,87,FALSE,NA
pillar,650e4bfb843fe0d53d440c74e4465347,"More accurate detection if the decimal dot is necessary, and how many digits to show after the decimal dot (#298).",1,88,FALSE,NA
pillar,726f613e0c566c9aa495ab1f67e90d43,Use display width instead of number of characters when truncating character columns.,1,89,FALSE,NA
pillar,652d33aa5f939de077ed487f1da6e0a2,"New `vignette(""numbers"")` and `vignette(""digits"")` (#308).",1,90,FALSE,NA
pillar,1e827883f0b4b6945fb91d22d724cd7d,Compatibility with vctrs 0.3.7 (#291).,1,91,FALSE,NA
pillar,67587260901ee311cb0769dcd6018726,"`format.pillar_shaft_simple()` requires `""na""` attribute and no longer defaults to `pillar_na()` (#273).",1,92,FALSE,NA
pillar,6947a07365646226e757aa0457d84af5,New `format_glimpse()` (#177).,1,93,FALSE,NA
pillar,85c71b049d896c2c43e006e4f337a9a6,"Color and formatting can now be reliably turned off by setting the `""cli.num_colors""` option to 1 (#269).",1,94,FALSE,NA
pillar,4b087cc2e4f459d6f0fe78c8ddc2b483,Add examples for new functions (#264).,1,95,FALSE,NA
pillar,844ae7a787b518027790a5234bcabd43,Fix lifecycle badges everywhere.,1,96,FALSE,NA
pillar,a46b328c970478cda39f7b7eaa42149d,`obj_sum()` now always returns a string. `pillar_shaft.list()` iterates over its elements and calls `obj_sum()` for each (#137).,1,97,FALSE,NA
pillar,149d2f8d19fcb00a49738a220bbb23bc,"Breaking: `print.pillar()` and `print.pillar_ornament()` now show `<pillar>` `<pillar_ornament>` in the first line (#227, #228).",1,98,FALSE,NA
pillar,fdee08f7b7d6374101f32d485b31f376,pillar has been re-licensed as MIT (#215).,1,99,FALSE,NA
pillar,d340a656fd6b5541f4269089797992f0,New `size_sum()` generic (#239).,1,100,FALSE,NA
pillar,725251185a41364ef9eca5e4d49ad412,"New `ctl_new_pillar()` and `ctl_new_compound_pillar()` used via `print.tbl()`, `format.tbl()` and `tbl_format_setup.tbl()` (#230).",1,101,FALSE,NA
pillar,b30a659751cfaeb308156079d372c55a,New `new_pillar()` low-level constructor (#230).,1,102,FALSE,NA
pillar,8818dba1102eda4f5cdfd0e3efe3f4db,New `new_pillar_component()` and `pillar_component()` (#230).,1,103,FALSE,NA
pillar,03ce0887f8c3514bace0c870b006e034,"New articles `vignette(""extending"")` and `vignette(""printing"")` (#251).",1,104,FALSE,NA
pillar,c7da81749eecd1271740bf4de996e7d3,"All printing code has been moved from tibble to pillar (#179), including `glimpse()` (#234). This concentrates the printing code in one package and allows for better extensibility.",1,105,FALSE,NA
pillar,1fe290a77057d738eb83df05abdc48b9,"New experimental generics `tbl_format_setup()`, `tbl_format_header()`, `tbl_format_body()` and `tbl_format_footer()` (#179).",1,106,FALSE,NA
pillar,49379ada6a465ddea439e6b6d08eb232,Move definition of `tbl_sum()` to this package (#179).,1,107,FALSE,NA
pillar,af7f5a30266a38acfb34bd9d2f8c719e,"Improve formatting for `""Surv""` and `""Surv2""` classes from the survival package (#199).",1,108,FALSE,NA
pillar,3316d2c4f1f172e28e3c41f45764c3f3,Vectors of the `vctrs_unspecified()` class are formatted better (#256).,1,109,FALSE,NA
pillar,72fab0d5a3f635b58e6f4214c8746a5d,Arrays are now formatted by showing only their first slice (#142).,1,110,FALSE,NA
pillar,40e53538262dc3ee9d020ed1d579cd87,Avoid wrapping extra column names with spaces (#254).,1,111,FALSE,NA
pillar,faa5910032e44bf912b28791a1cb648b,"Now using debugme to simplify understand the complex control flow, see `vignette(""debugme"")` (#248).",1,112,FALSE,NA
pillar,db34d1e4a1a864e040256f4e49aa89b9,New `format.pillar_ornament()` (#228).,1,113,FALSE,NA
pillar,68dcef09abbae8eb5f89659069eaf673,Using testthat 3e (#218).,1,114,FALSE,NA
pillar,6b736faf567b154144c92f2e4b609e96,Avoid pillar.bold option in most tests (#216).,1,115,FALSE,NA
pillar,5be9754f0535cbc1042b468b304ed409,Change internal storage format for `colonnade()` and `extra_cols()` (#204).,1,116,FALSE,NA
pillar,88d48c4d1a890c0791d83fce45a6af7a,Adapt to changed environment on CRAN's Solaris machine.,1,117,FALSE,NA
pillar,788aacfcfb60f302cccb473b18dba02f,Restore compatibility with R 3.2.,1,118,FALSE,NA
pillar,4ef191dde23ce76de8a7f9303068bb6d,"New `pillar.min_chars` option allows controlling the minimum number of characters shown for a character column (#178, @​statsmaths).",1,119,FALSE,NA
pillar,eaff291793248e9de2d93b4e8b6b9944,`bit64::integer64()` columns are now formatted the same way as numeric columns (#175).,1,120,FALSE,NA
pillar,8062714be0e0a90949574ca09b3e2df7,"New `align()` to support easy alignment of strings within a character vector (existing function exported by @​davidchall, #185).",1,121,FALSE,NA
pillar,14de2a2f4a71dedea2668e8fb1f3d740,"`pillar_shaft()`, `format_type_sum()` and `extra_cols()` issue a warning if dots are unused.",1,122,FALSE,NA
pillar,61a1a21f816d806492d6c427437d631d,`new_pillar_title()` and `new_pillar_type()` warn if `...` is not empty.,1,123,FALSE,NA
pillar,feb1c7058e8d7bf1bbaa86fe2e532cc1,Use lifecycle package.,1,124,FALSE,NA
pillar,401fd878cacef2fd59d938aad9a0e40e,Remove compatibility code for R \< 3.3.,1,125,FALSE,NA
pillar,b48b08a812c9f11b787f7c82b0b83fa8,`obj_sum()` uses `vctrs::vec_size()` internally.,1,126,FALSE,NA
pillar,cf3286c6910faa423f7612f62b3f6479,`is_vector_s3.default()` is soft-deprecated and no longer used. Please ensure that `vctrs::vec_is()` is `TRUE` for your class.,1,127,FALSE,NA
pillar,c964b8373661a09909a8081bd900ff29,Rely on vctrs for type abbreviations.,1,128,FALSE,NA
pillar,bd5acb00c7b0b6b956dd63b107816a53,`new_pillar_shaft_simple()` gains `na` argument to control appearance of `NA` values.,1,129,FALSE,NA
pillar,151f2cadf71b4a5f15fae9cc8e808fca,String columns are quoted if at least one value needs quotes (#171).,1,130,FALSE,NA
pillar,29fef465f6f431d3d86613dfc745eb59,Apply subtle style to `list_of` columns (#172).,1,131,FALSE,NA
pillar,a16b47160ef402e1d0993d904e54259c,Fix formatting if mantissa is very close to 1 (#174).,1,132,FALSE,NA
pillar,4515d14ef90986500813aa6adc022025,Use `as.character()` instead of `as_character()`.,1,133,FALSE,NA
pillar,726d43f02c63dc961d0194726114666e,Remove compatibility with testthat \< 2.0.0.,1,134,FALSE,NA
pillar,67e778d2a57e896f1179f4851ecd49cf,"List columns are shown with their perceived dimensions, which may be different from those stored in the `""dim""` attribute. Regression introduced in 1.4.0 (#167).",1,135,FALSE,NA
pillar,953b7a28cea06ed27fa2ec343a354c7d,Add ellipsis to `vec_ptype_abbr()` method.,1,136,FALSE,NA
pillar,68dc14d9eb05903e2be0cfbe2fa1e2a1,More careful specification of minimum package versions for the dependencies (#165).,1,137,FALSE,NA
pillar,6fb9b001533498cc181c59e17b61229f,Fix `type_sum.vctrs_vctr()` that also led to a NOTE in `R CMD check`.,1,138,FALSE,NA
pillar,689d234d6ef58d70a6290819dd89ebf9,"Resolve `vec_is()` at runtime instead of during `.onLoad()` (#163, @​lionel-).",1,139,FALSE,NA
pillar,1ad8045e2faf582440a0a9d06c2d2db0,Implement methods for vctrs objects.,1,140,FALSE,NA
pillar,7feb77a9712b5047dbcf5e758008d8dd,"`type_sum()` forwards to `vctrs::vec_ptype_abbr()` (#134). This makes sure that `list_of` columns (for values of the same type) are properly displayed. The value returned for `factor` and `complex` remains unchanged, because this will change in vctrs.",1,141,FALSE,NA
pillar,9ad6c3a28cee635bac739dd7c2e64bee,The `class` argument to `new_pillar_shaft()` deprecates the existing `subclass` argument. Passing a `subclass` argument leads to a warning once per session (#157).,1,142,FALSE,NA
pillar,dec9b84d56ad599f16f706eee28b593c,Removed extra space for pillars with a negative value of lower magnitude than the largest positive value (example: -1 and 23).,1,143,FALSE,NA
pillar,b4d82d9eb328db0242904381a4bb373c,"0-col tibble and matrix columns are now formatted with a capital containing `[,0]` and an empty shaft (#149).",1,144,FALSE,NA
pillar,3724a0d98586af5ad2a88bd72829fff9,`squeeze()` is now faster (because the width computation in `pillar_shaft.numeric()` now uses more arithmetics instead of string concatenation). Further speedups may require implementation of crucial parts in C (#147).,1,145,FALSE,NA
pillar,a9e9731353fbf73dc8df801ef55b9005,"Styling output is faster: an expensive check for availability of colored output is carried out only once per call to `colonnade()`, and styling is implemented manually (#133, @​jimhester).",1,146,FALSE,NA
pillar,de2dc01b233863d6708c31b6760ee0d3,All internal S3 classes have the `pillar_` prefix (#156).,1,147,FALSE,NA
pillar,487d4125f6805811c2158ab4efbfa2a5,"Only check native output on Windows, due to subtle differences when running on Linux in a latin1 locale.",1,148,FALSE,NA
pillar,612ce1ff60857024321833c8de96c26c,Fix off-by-one error in distribution of empty space (#141).,1,149,FALSE,NA
pillar,766c3143b228f9596c8848f3defea798,`NA` in names is no longer escaped with backticks.,1,150,FALSE,NA
pillar,e3a02cd60e69e7d0da796cd32abff65d,Don't add quotes for pillars formatted with their `format()` method (tidyverse/tibble#448).,1,151,FALSE,NA
pillar,fbde42d54a2e39e9017382da8b1cae36,"Update base type abbrevs to rlang 0.3.0 (#140, @​lionel-).",1,152,FALSE,NA
pillar,c8850e1f6028f95dde25ad0f95114327,Tests work again in a 256-color terminal (#129).,1,153,FALSE,NA
pillar,1cc8f7395f383c6b75cfaa06fdc4d819,"Unknown data types are formatted using `format()`, not `as.character()` (#120).",1,154,FALSE,NA
pillar,4a1fd0c360cc607cf5926357b838a3a7,"Multi-tier colonnades can always fill the last tier, even if the width isn't a proper multiple of `getOption(""width"")`. (Example: `options(width = 80, tibble.width = 200)` will print a wide tibble in three tiers, each 80 characters wide, with a total width of 240 characters.)",1,155,FALSE,NA
pillar,61d2fa526e0522ee12ec761e37876e4c,"Fixed mixed formatting (showing some pillars with maximum, and some with minimum width). If a pillar's minimum width is smaller than `getOption(""width"")`, it is shown nevertheless, abbreviated with dots if necessary.",1,156,FALSE,NA
pillar,44fca9cd22e14b720d90c70cdd2590b2,`format_type_sum()` gains `width` argument (#73).,1,157,FALSE,NA
pillar,80a5454896c506b90ed26b24cc19caac,"Printing large multi-tier colonnades is much faster, the code that distributes pillars over tiers uses a much simpler and much faster algorithm (tidyverse/tibble#422).",1,158,FALSE,NA
pillar,eee597c0cd28a5a443b024eb14ce5d09,"Printing is now faster overall, because less work is done for formatting in ""subtle"" style (gray of a fixed level), and because `fansi::strip_sgr()` is used instead of `crayon::strip_style()`.",1,159,FALSE,NA
pillar,a43fff7f9bbb565938d77d5b977a8e02,Slightly faster printing of colonnades by reusing an intermediate result.,1,160,FALSE,NA
pillar,c66cc9b09617b31fcfbc797ccccddc73,`pillar()` no longer adds backticks if `title` is non-syntactic.,1,161,FALSE,NA
pillar,5096c3a0b1efcea870bb1e9c7ec5f38f,"`colonnade()` supports data frames and matrices. When printing, each sub-column is shown individually, using a title that resembles the syntax used to access it. Also supports recursively nested data frames (with data frame or matrix columns).",1,162,FALSE,NA
pillar,6082a2d4a9ed003fac34622ca27b8f83,Added fuzz tests for character colonnades of varying widths.,1,163,FALSE,NA
pillar,1ea6d1cb990edaf587e35985dac11797,Use `fansi::substr_ctl()` in favor of `crayon::col_substr()`.,1,164,FALSE,NA
pillar,7732618e9a45bbdcd77e281ab576ccf6,Eliminate CRAN check warning about undeclared withr dependency.,1,165,FALSE,NA
pillar,011d0afb2f13d75de6d26af15ae39372,More defensive test to address CRAN check failures on Solaris.,1,166,FALSE,NA
pillar,2da6f1beccd1562052faf3016fdc9d7c,"`colonnade()` now handles pillars named `""sep""` (#115).",1,167,FALSE,NA
pillar,d278d6f552792693cdfebaf496e8f855,`pillar_shaft.character()` gains `min_width` argument.,1,168,FALSE,NA
pillar,f9093a434987737267ff3b73231bf504,"Whole numbers are printed without a decimal dot again. Numbers that are the result of a whole number divided by a power of 10 (subject to a tolerance to account for floating-point imprecision) are shown without trailing decimal zeros, even if these zeros are significant according to the `pillar.sigfig` option (#105).",1,169,FALSE,NA
pillar,bba21e60a1bee260a7f603e71821cc39,New `new_pillar_title()` and `new_pillar_type()` to support consistent output in `glimpse()` (#31).,1,170,FALSE,NA
pillar,fbc17e90b1a54178b47d9f736708f0cd,New `format_type_sum()` generic that allows overriding the formatting of the type summary in the capital (#73).,1,171,FALSE,NA
pillar,0754ec35629b35e4d8a600d8a127e2f3,The `digits.secs` option is respected when computing the width for date-time values (#102).,1,172,FALSE,NA
pillar,8c9828d27e568d355f394e85e25ee812,Turned off using subtle style for digits that are considered insignificant. Negative numbers are shown all red. Set the new option `pillar.subtle_num` to `TRUE` to turn it on again (default: `FALSE`).,1,173,FALSE,NA
pillar,4e3d8b0ca76d9f728cb29f5b684f18ee,The negation sign is printed next to the number again (#91).,1,174,FALSE,NA
pillar,7ba8b34a083dc67e444f3adcd1528129,Scientific notation uses regular digits again for exponents (#90).,1,175,FALSE,NA
pillar,35be536cb3201ac082bbcf845f3c2138,"Groups of three digits are now underlined, starting with the fourth before/after the decimal point. This gives a better idea of the order of magnitude of the numbers (#78).",1,176,FALSE,NA
pillar,a67fdd01a7c12ed3d10a5f0ba8bd92bf,Logical columns are displayed as `TRUE` and `FALSE` again (#95).,1,177,FALSE,NA
pillar,ae10697f9edadb43a9681010c096a7aa,The decimal dot is now always printed for numbers of type `numeric`. Trailing zeros are not shown anymore if all displayed numbers are whole numbers (#62).,1,178,FALSE,NA
pillar,02b43c32de3fef153eadc1ee8ae18011,Decimal values longer than 13 characters always print in scientific notation.,1,179,FALSE,NA
pillar,8cb4f995e36c8eccaa077715c6a30ef3,"Numeric values with a `""class""` attribute (e.g., `Duration` from lubridate) are now formatted using `format()` if the `pillar_shaft()` method is not implemented for that class (#88).",1,180,FALSE,NA
pillar,c6658224aca569d3bb0497bd5ca0f18b,Very small numbers (like `1e-310`) are now printed correctly (tidyverse/tibble#377).,1,181,FALSE,NA
pillar,427ad824040125793c85eaf843f42627,"Fix representation of right-hand side for `getOption(""pillar.sigfig"") >= 6` (tidyverse/tibble#380).",1,182,FALSE,NA
pillar,bad9946c63e5de6f0bbd0edab29b8bd1,Fix computation of significant figures for numbers with absolute value \>= 1 (#98).,1,183,FALSE,NA
pillar,8373308d579910ef1200b86f856bf6a9,"New styling helper `style_subtle_num()`, formatting depends on the `pillar.subtle_num` option.",1,184,FALSE,NA
pillar,6a7327aa53eef6062a5f872bbc9cfeb8,"`NA` values are now shown in plain red, without changing the background color (#70).",1,185,FALSE,NA
pillar,16af42f482eb7e80d97095e5e62e91a5,"New options to control the output, with defaults that match the current behavior unless stated otherwise:",1,186,FALSE,NA
pillar,16af42f482eb7e80d97095e5e62e91a5,"• `pillar.sigfig` to control the number of significant digits, for highlighting and truncation (#72),",2,187,FALSE,"New options to control the output, with defaults that match the current behavior unless stated otherwise:"
pillar,16af42f482eb7e80d97095e5e62e91a5,"• `pillar.subtle` to specify if insignificant digits should be printed in gray (#72),",2,188,FALSE,"New options to control the output, with defaults that match the current behavior unless stated otherwise:"
pillar,16af42f482eb7e80d97095e5e62e91a5,"• `pillar.neg` to specify if negative digits should be printed in red,",2,189,FALSE,"New options to control the output, with defaults that match the current behavior unless stated otherwise:"
pillar,16af42f482eb7e80d97095e5e62e91a5,"• `pillar.bold` to specify if column headers should be printed in bold (default: `FALSE`, #76),",2,190,FALSE,"New options to control the output, with defaults that match the current behavior unless stated otherwise:"
pillar,16af42f482eb7e80d97095e5e62e91a5,"• `pillar.min_title_chars` to specify the minimum number of characters to display for each column name (default: 15 characters, #75).",2,191,FALSE,"New options to control the output, with defaults that match the current behavior unless stated otherwise:"
pillar,53163868bc41c4ab1ba02e8ff9db0ba3,"Shortened abbreviations for types: complex: cplx -\> cpl, function: fun -\> fn, factor: fctr -\> fct (#71).",1,192,FALSE,NA
pillar,8896f59340bde16256f991b44cff2349,Date columns now show sub-seconds if the `digits.secs` option is set (#74).,1,193,FALSE,NA
pillar,849655c02d57e2de6413f391c9b89b8f,Very wide tibbles now print faster (#85).,1,194,FALSE,NA
pillar,8274144e4d31c710b778c3b7c41db8ba,Work around failing CRAN tests on Windows.,1,195,FALSE,NA
purrr,0fe37942063c56f06f5388e2caf457f4,Fixed valgrind issue.,1,1,FALSE,NA
purrr,cae0039a90a1f1c8c0fdd61ae90fdaad,Deprecation infrastructure in `map_chr()` now has much less overhead leading to improved performance (#1089).,1,2,FALSE,NA
purrr,55a7e0b2fda74a90f175744406d177c7,purrr now requires R 3.5.0.,1,3,FALSE,NA
purrr,370a25c8893a8d243b388f4642d757cd,"As of purrr 1.0.0, the `map()` family of functions wraps all errors generated by `.f` inside an wrapper error that tracks the iteration index. As of purrr 1.0.1, this error now has a custom class (`purrr_error_indexed`), `location` and `name` fields, and is documented in `?purrr_error_indexed` (#1027).",1,4,FALSE,NA
purrr,ab439bbe03e7075b067bdb4ecc0bec3b,`map()` errors with named inputs also report the name of the element that errored.,1,5,FALSE,NA
purrr,ec0960e3007a50327187feffcbb36285,Fixed an issue where progress bars weren't being closed when user interrupts or errors were encountered during a `map()` call (#1024).,1,6,FALSE,NA
purrr,c5a73bbbbc59be5cc838df32c5dc5d7d,Fixed an invalid C signature for `pluck()` (#1018).,1,7,FALSE,NA
purrr,6207044ac7ac6cf8ba18271cf7a3bf10,Set `Biarch: true` to build purrr on 32-bit Windows on R \< 4.2.0 (#1017).,1,8,FALSE,NA
purrr,fb3f98394a8f987c179cc2dcb176e10b,`cross()` and all its variants have been deprecated in favour of `tidyr::expand_grid()`. These functions were slow and buggy and we no longer think they are the right approach to solving this problem. See #768 for more information.,1,9,FALSE,NA
purrr,5fc6f02721862101624e1e315b0b7711,"`update_list()` (#858) and `rerun()` (#877), and the use of tidyselect with `map_at()` and friends (#874) have been deprecated. These functions use some form of non-standard evaluation which we now believe is a poor fit for purrr.",1,10,FALSE,NA
purrr,030dd49f69f0be875702044c40e893b2,The `lift_*` family of functions has been deprecated. We no longer believe these to be a good fit for purrr because they rely on a style of function manipulation that is very uncommon in R code (#871).,1,11,FALSE,NA
purrr,6763bc35b0edb7e53196eaedfd97d6b1,"`prepend()`, `rdunif()`, `rbernoulli()`, `when()`, and `list_along()` have all been deprecated (#925). It's now clear that they don't align with the core purpose of purrr.",1,12,FALSE,NA
purrr,83e4e66b69f9a76fea6eea68f09a5cb6,`splice()` is deprecated because we no longer believe that automatic splicing makes for good UI. Instead use `list2()` + `!!!` or `list_flatten()` (#869).,1,13,FALSE,NA
purrr,c734361b65c0bfc973d885e88e0901dd,"Use of map functions with expressions, calls, and pairlists has been deprecated (#961).",1,14,FALSE,NA
purrr,abe75515369704728a3c965067920172,All map `_raw()` variants have been deprecated because they are of limited use and you can now use `map_vec()` instead (#903).,1,15,FALSE,NA
purrr,29e6fac745b3593c4855fc52fce80355,"In `map_chr()`, automatic conversion from logical, integer, and double to character is now deprecated. Use an explicit `as.character()` if needed (#904).",1,16,FALSE,NA
purrr,24321bbae051e0a2068d6c34c3d404c2,Errors from `.f` are now wrapped in an additional class that gives information about where the error occurred (#945).,1,17,FALSE,NA
purrr,19f4cbd53412f44fcbb13f88fbde9100,`as_function()` and the `...f` argument to `partial()` are no longer supported. They have been defunct for quite some time.,1,18,FALSE,NA
purrr,970e6243d03e0ad1af7ed4b7fa7dcb6e,"Soft deprecated functions: `%@​%`, `reduce_right()`, `reduce2_right()`, `accumulate_right()` are now fully deprecated. Similarly, the `.lazy`, `.env`, and `.first` arguments to `partial()`, and the `.right` argument to `detect()` and `detect_index()` are fully deprecated. Removing elements with `NULL` in `list_modify()` and `list_merge()` is now fully deprecated.",1,19,FALSE,NA
purrr,29292f04bde4bf62e0f626153c052545,`is_numeric()` and `is_scalar_numeric()` have been removed. They have been deprecated since purrr 0.2.3 (Sep 2017).,1,20,FALSE,NA
purrr,6ff525e4ff821a5a8a5d45b6710bd71c,"`invoke_*()` is now deprecated. It was superseded in 0.3.0 (Jan 2019) and 3.5 years later, we have decided to deprecate it as part of the API refinement in the 1.0.0 release.",1,21,FALSE,NA
purrr,daa0c6db6f698582649276fad28a7d32,`map_call()` has been removed. It was made defunct in 0.3.0 (Jan 2019).,1,22,FALSE,NA
purrr,0669f2ff91500d8f3efddbe09ed0d1bc,`*_at()` can now take a function (or formula) that's passed the vector of element names and returns the elements to select.,1,23,FALSE,NA
purrr,b63c95f13ecd373d4032751eca86047c,"New `map_vec()`, `map2_vec()`, and `pmap_vec()` work on all types of vectors, extending `map_lgl()`, `map_int()`, and friends so that you can easily work with dates, factors, date-times and more (#435).",1,24,FALSE,NA
purrr,23f17600d928661e9ed3d7c50d1a4d17,New `keep_at()` and `discard_at()` that work like `keep()` and `discard()` but operation on element names rather than element contents (#817).,1,25,FALSE,NA
purrr,3dd742f2e60d2a90252d82b615ddf1ac,Some mapping functions have now a `.progress` argument to create a progress bar. See `?progress_bars` (#149).,1,26,FALSE,NA
purrr,da0f1db0893a6bf7da13a62ebc04c464,purrr is now licensed as MIT (#805).,1,27,FALSE,NA
purrr,19d9d651c7a53cc7eded81f14628ec41,"`modify()`, `modify_if()`, `modify_at()`, and `modify2()` are no longer generics. We have discovered a simple implementation that no longer requires genericity and methods were only provided by a very small number of packages (#894).",1,28,FALSE,NA
purrr,2ba21d37880bee9197eaf5102dd26c0b,"purrr now uses the base pipe (`|>`) and anonymous function short hand (`\(x)`), in all examples. This means that examples will no longer work in R 4.0 and earlier so in those versions of R, the examples are automatically converted to a regular section with a note that they might not work (#936).",1,29,FALSE,NA
purrr,f5c34b5523feaf7b01f8eccbae9aba4a,"When map functions fail, they now report the element they failed at (#945).",1,30,FALSE,NA
purrr,9f4f870acbe1242007a13fe515799c5d,New `modify_tree()` for recursively modifying nested data structures (#720).,1,31,FALSE,NA
purrr,ae5bad640292eab56cb056457619e6ab,"New `list_c()`, `list_rbind()`, and `list_cbind()` make it easy to `c()`, `rbind()`, or `cbind()` all of the elements in a list.",1,32,FALSE,NA
purrr,778d2c8fefbbf939fde21c236f3d0ebf,New `list_simplify()` reduces a list of length-1 vectors to a simpler atomic or S3 vector (#900).,1,33,FALSE,NA
purrr,7ec8015c36382632a37aef1875331153,New `list_transpose()` which automatically simplifies if possible (#875).,1,34,FALSE,NA
purrr,f7ea096244d95dd152ef6c41b851bbb8,"`accumulate()` and `accumulate2()` now both simplify the output if possible using vctrs. New arguments `simplify` and `ptype` allow you to control the details of simplification (#774, #809).",1,35,FALSE,NA
purrr,e4f6c7f7514e1fe17a6b6917253b7fab,"`flatten()` and friends are superseded in favour of `list_flatten()`, `list_c()`, `list_cbind()`, and `list_rbind()`.",1,36,FALSE,NA
purrr,87d81bf83b7f4a651bab8a83b8e9538c,`*_dfc()` and `*_dfr()` have been superseded in favour of using the appropriate map function along with `list_rbind()` or `list_cbind()` (#912).,1,37,FALSE,NA
purrr,c5366151373f74240a41d30bfd9757a9,"`simplify()`, `simplify_all()`, and `as_vector()` have been superseded in favour of `list_simplify()`. It provides a more consistent definition of simplification (#900).",1,38,FALSE,NA
purrr,4053632c5f10b80f7942433785548e8a,`transpose()` has been superseded in favour of `list_transpose()` (#875). It has built-in simplification.,1,39,FALSE,NA
purrr,ef36b89bdef416c283de262e82ff7597,"`_lgl()`, `_int()`, `_int()`, and `_dbl()` now use the same (strict) coercion methods as vctrs (#904). This means that:",1,40,FALSE,NA
purrr,ef36b89bdef416c283de262e82ff7597,"• `map_chr(TRUE, identity)`, `map_chr(0L, identity)`, and `map_chr(1L, identity)` are deprecated because we now believe that converting a logical/integer/double to a character vector should require an explicit coercion.",2,41,FALSE,"`_lgl()`, `_int()`, `_int()`, and `_dbl()` now use the same (strict) coercion methods as vctrs (#904). This means that:"
purrr,ef36b89bdef416c283de262e82ff7597,"• `map_int(1.5, identity)` now fails because we believe that silently truncating doubles to integers is dangerous. But note that `map_int(1, identity)` still works since no numeric precision is lost.",2,42,FALSE,"`_lgl()`, `_int()`, `_int()`, and `_dbl()` now use the same (strict) coercion methods as vctrs (#904). This means that:"
purrr,ef36b89bdef416c283de262e82ff7597,"• `map_int(c(TRUE, FALSE), identity)`, `map_dbl(c(TRUE, FALSE), identity)`, `map_lgl(c(1L, 0L), identity)` and `map_lgl(c(1, 0), identity)` now succeed because 1/TRUE and 0/FALSE should be interchangeable.",2,43,FALSE,"`_lgl()`, `_int()`, `_int()`, and `_dbl()` now use the same (strict) coercion methods as vctrs (#904). This means that:"
purrr,b732ce9555dba8b8e02831d23b350cc0,"`map2()`, `modify2()`, and `pmap()` now use tidyverse recycling rules where vectors of length 1 are recycled to any size but all others must have the same length (#878).",1,44,FALSE,NA
purrr,c070f9dfe5fb8b3969ad31d65ba710fb,`map2()` and `pmap()` now recycle names of their first input if needed (#783).,1,45,FALSE,NA
purrr,951259c8169b10bc9a6a7e731a7157de,"`modify()`, `modify_if()`, and `modify_at()` have been reimplemented using vctrs principles. This shouldn't have an user facing impact, but it does make the implementation much simpler.",1,46,FALSE,NA
purrr,435e777a846d2f2e5376d5897abde5b4,`vec_depth()` is now `pluck_depth()` and works with more types of input (#818).,1,47,FALSE,NA
purrr,f8224cb4d9ddf78e2fd124893bfd399c,`pluck()` now requires indices to be length 1 (#813). It also now reports the correct type if you supply an unexpected index.,1,48,FALSE,NA
purrr,a67bfc7e1736f9392be9cea06815e482,"`pluck()` now accepts negative integers, indexing from the right (#603).",1,49,FALSE,NA
purrr,d89aaa73b2318dd6c76f1eb8c2fafcf6,`pluck()` and `chuck()` now fail if you provide named inputs to ... (#788).,1,50,FALSE,NA
purrr,84c41c87d42ba416b580a785866cb51a,`pluck()` no longer replaces 0-length vectors with `default`; it now only applies absent and `NULL` components (#480).,1,51,FALSE,NA
purrr,96a63f4dc76f099b796443d06d2ea07a,`pluck<-`/`assign_in()` can now modify non-existing locations (#704).,1,52,FALSE,NA
purrr,4788e901c2f56957c978d08a53147bd6,`pluck<-`/`assign_in()` now sets elements to `NULL` rather than removing them (#636). Now use the explicit `zap()` if you want to remove elements.,1,53,FALSE,NA
purrr,241ed367d4815754007468ab9ddac09e,"`modify()`, `modify2()`, and `modify_if()` now correctly handle `NULL`s in replacement values (#655, #746, #753).",1,54,FALSE,NA
purrr,21ae156d0ad625b5010fd4debc903434,`list_modify()`'s interface has been standardised. Modifying with `NULL` now always creates a `NULL` in the output (#810),1,55,FALSE,NA
purrr,475b0ac9f92bc39924723f309406a039,New `list_assign()` which is similar to `list_modify()` but doesn't work recursively (#822).,1,56,FALSE,NA
purrr,eb8ec23419ff0f70530e167c2753ecfe,`list_modify()` no longer recurses into data frames (and other objects built on top of lists that are fundamentally non-list like) (#810). You can revert to the previous behaviour by setting `.is_node = is.list`.,1,57,FALSE,NA
purrr,fc62aa588d06d92a71486db77ebd7dcf,`capture_output()` correctly uses `conditionMessage()` instead of directly interrogating the `message` field (#1010).,1,58,FALSE,NA
purrr,9568753a6420430b2964050ad7b8f517,`modify()` no longer works with calls or pairlists.,1,59,FALSE,NA
purrr,7384c2616a96675d13f1bbf304016283,`modify_depth()` is no longer a generic. This makes it more consistent with `map_depth()`.,1,60,FALSE,NA
purrr,eb4238142d978bad0ad27f9e5b64ced6,"`map_depth()` and `modify_depth()` have a new `is_node` argument that allows you to control what counts as a level. The default uses `vec_is_list()` to avoid recursing into rich S3 objects like linear models or data.frames (#958, #920).",1,61,FALSE,NA
purrr,d623606e0b8cd0eec477f22ab39aad74,`map_depth()` and `modify_depth()` now correctly recurse at depth 1.,1,62,FALSE,NA
purrr,d8dae55456c55c4a681b49ddf84f6e3c,"`as_mapper()` is now around twice as fast when used with character, integer, or list (#820).",1,63,FALSE,NA
purrr,c7d517dcd37ef8c2c70601c599685981,`possibly()` now defaults `otherwise` to NULL.,1,64,FALSE,NA
purrr,29bd0010788238d2e7f4cfeed560ffa9,"`modify_if(.else)` is now actually evaluated for atomic vectors (@​mgirlich, #701).",1,65,FALSE,NA
purrr,12bf0ae3c89c3e6b12df66f3425e8cce,`lmap_if()` correctly handles `.else` functions (#847).,1,66,FALSE,NA
purrr,d01b35631b8ea3c689058d27f42d387a,"`every()` now correctly propagates missing values using the same rules as `&&` (#751). Internally, it has become a wrapper around `&&`. This makes it consistent with `&&` and also with `some()` which has always been a wrapper around `||` with the same propagation rules.",1,67,FALSE,NA
purrr,c6b72e8ffecb04eb10f4a14b992c75b0,"`every()` and `some()` now properly check the return value of their predicate function. It must now return a `TRUE`, `FALSE`, or `NA`.",1,68,FALSE,NA
purrr,5a57b566b75faf45ac3a10307f8b95fe,Greatly improved performance of functions created with `partial()` (#715). Their invocation is now as fast as for functions creating manually.,1,69,FALSE,NA
purrr,560798381c7b6e5801b7c87ad42a9507,`partial()` no longer inlines the function in the call stack. This fixes issues when `partial()` is used with `lm()` for instance (#707).,1,70,FALSE,NA
purrr,fb28aa67051e045753ee4ef02d94cc18,Fixes for CRAN checks.,1,71,FALSE,NA
purrr,a30e568745be84db798a22de576c682c,"Fixed issue in `list_modify()` that prevented lists from being removed with `zap()` (@​adamroyjones, #777).",1,72,FALSE,NA
purrr,c77242afaa105f78c5b5683799ba1931,"Added documentation for exporting functions created with purrr adverb (@​njtierney, #668). See `?faq-adverbs-export`.",1,73,FALSE,NA
purrr,e54781b66d3f978295ab66d83b669c03,"Added `none()`, which tests that a predicate is false for all elements (the opposite of `every()`) (@​AliciaSchep, #735).",1,74,FALSE,NA
purrr,509c916d8090143b2b50ee00c4dc9c4a,Maintenance release.,1,75,FALSE,NA
purrr,fd96be4cc13dbf6d6de84d67bcc2e970,"The documentation of `map()` and its variants has been improved by @​surdina as part of the Tidyverse Developer Day (@​surdina, #671).",1,76,FALSE,NA
purrr,22d8071fcf5530afa7cb1d882de4c998,purrr now depends on R 3.2 or greater.,1,77,FALSE,NA
purrr,54f62932cc64290c1d84c424136693e6,Fix protection issues reported by rchk.,1,78,FALSE,NA
purrr,5a1ebb4485e99d4707ac58a17a16d99f,`reduce()` now forces arguments (#643).,1,79,FALSE,NA
purrr,ac604e19a32e62ea42d7fcb6eff20bd3,Fixed an issue in `partial()` with generic functions (#647).,1,80,FALSE,NA
purrr,81155689129ccf84af1577808d98f4cb,`negate()` now works with generic functions and functions with early returns.,1,81,FALSE,NA
purrr,d3c9e8bb721af63eccf2a02d3aad1a60,"`compose()` now works with generic functions again (#629, #639). Its set of unit tests was expanded to cover many edge cases.",1,82,FALSE,NA
purrr,17263f8370cb45f21fda492228ee7dfe,"`prepend()` now works with empty lists (@​czeildi, #637)",1,83,FALSE,NA
purrr,d31adf60f8b8a53b56c7a0d7751a76ba,"`modify()` and variants are now wrapping `[[<-` instead of `[<-`. This change increases the genericity of these functions but might cause different behaviour in some cases. For instance, the `[[<-` for data frames is stricter than the `[<-` method and might throw errors instead of warnings. This is the case when assigning a longer vector than the number of rows. `[<-` truncates the vector with a warning, `[[<-` fails with an error (as is appropriate).",1,84,FALSE,NA
purrr,06259f9af12ff003d7abbe095ad3c5f3,`modify()` and variants now return the same type as the input when the input is an atomic vector.,1,85,FALSE,NA
purrr,57819771a318605fe0382859fd992a57,"All functionals taking predicate functions (like `keep()`, `detect()`, `some()`) got stricter. Predicate functions must now return a single `TRUE` or `FALSE`. This change is meant to detect problems early with a more meaningful error message.",1,86,FALSE,NA
purrr,816f5049b9e30bd137680097bbd31fe9,"New `chuck()` function. This is a strict variant of `pluck()` that throws errors when an element does not exist instead of returning `NULL` (@​daniel-barnett, #482).",1,87,FALSE,NA
purrr,fe8622f9524d77c8a897e930286a8550,New `assign_in()` and `pluck<-` functions. They modify a data structure at an existing pluck location.,1,88,FALSE,NA
purrr,cfef33555ab7a9b13c5ad20ae608ce35,New `modify_in()` function to map a function at a pluck location.,1,89,FALSE,NA
purrr,34a37ace9bfdc54992b123779f059ab7,`pluck()` now dispatches properly with S3 vectors. The vector class must implement a `length()` method for numeric indexing and a `names()` method for string indexing.,1,90,FALSE,NA
purrr,49bbd8e1f71064c252fdb8cbfc458217,`pluck()` now supports primitive functions (#404).,1,91,FALSE,NA
purrr,ade39d13786c7e2fba86ed62e2808b36,New `.else` argument for `map_if()` and `modify_if()`. They take an alternative function that is mapped over elements of the input for which the predicate function returns `FALSE` (#324).,1,92,FALSE,NA
purrr,4d24088d2168c7c50af44eb84fb1d900,"`reduce()`, `reduce2()`, `accumulate()`, and `accumulate2()` now terminate early when the function returns a value wrapped with `done()` (#253). When an empty `done()` is returned, the value at the last iteration is returned instead.",1,93,FALSE,NA
purrr,ec0e1975da21e2a8d52d8fac68a39b53,"Functions taking predicates (`map_if()`, `keep()`, `some()`, `every()`, `keep()`, etc) now fail with an informative message when the return value is not `TRUE` or `FALSE` (#470). This is a breaking change for `every()` and `some()` which were documented to be more liberal in the values they accepted as logical (any vector was considered `TRUE` if not a single `FALSE` value, no matter its length). These functions signal soft-deprecation warnings instead of a hard failure. Edit (purr 0.4.0): `every()` and `some()` never issued deprecation warnings because of a technical issue. We didn't fix the warnings in the end, and using predicates returning `NA` is no longer considered deprecated. If you need to use `every()` and `some()` in contexts where `NA` propagation is unsafe, e.g. in `if ()` conditions, make sure to use safe predicate functions like `is_true()`.",1,94,FALSE,NA
purrr,107566236609f56353a7c4629ff2e64b,"`modify()` and variants are now implemented using `length()`, `[[`, and `[[<-` methods. This implementation should be compatible with most vector classes.",1,95,FALSE,NA
purrr,030c10e11ad601a043467511a8e554de,New `modify2()` and `imodify()` functions. These work like `map()` and `imap()` but preserve the type of `.x` in the return value.,1,96,FALSE,NA
purrr,28dafa08c7883c0aa54c03a04cd99892,"`pmap()` and `pwalk()` now preserve class for inputs of `factor`, `Date`, `POSIXct` and other atomic S3 classes with an appropriate `[[` method (#358, @​mikmart).",1,97,FALSE,NA
purrr,19073e0e5f9b0b5f535e2ded32e5ff87,"`modify()`, `modify_if()` and `modify_at()` now preserve the class of atomic vectors instead of promoting them to lists. New S3 methods are provided for character, logical, double, and integer classes (@​t-kalinowski, #417).",1,98,FALSE,NA
purrr,d6fab6577dbd6b7e421360cbba6cef7e,"By popular request, `at_depth()` has been brought back as `map_depth()`. Like `modify_depth()`, it applies a function at a specified level of a data structure. However, it transforms all traversed vectors up to `.depth` to bare lists (#381).",1,99,FALSE,NA
purrr,dfee0711b2f5a7c1dbab0819c631daee,"`map_at()`, `modify_at()` and `lmap_at()` accept negative values for `.at`, ignoring elements at those positions.",1,100,FALSE,NA
purrr,f8507e4db55aecf641808fd8cc6bc6eb,`map()` and `modify()` now work with calls and pairlists (#412).,1,101,FALSE,NA
purrr,9928270759c0713daa0c7a7c2d8d189d,"`modify_depth()` now modifies atomic leaves as well. This makes `modify_depth(x, 1, fn)` equivalent to `modify(x, fn)` (#359).",1,102,FALSE,NA
purrr,b63ad77fd229a30a861580028f12e6ce,New `accumulate2()` function which is to `accumulate()` what `reduce2()` is to `reduce()`.,1,103,FALSE,NA
purrr,719a70332650d83fb481ecc979e18404,"New `rate_backoff()` and `rate_delay()` functions to create rate objects. You can pass rates to `insistently()`, `slowly()`, or the lower level function `rate_sleep()`. This will cause a function to wait for a given amount of time with exponential backoff (increasingly larger waiting times) or for a constant delay.",1,104,FALSE,NA
purrr,4990f4e05e235b6ea11174b89f49991e,"`insistently(f)` modifies a function, `f`, so that it is repeatedly called until it succeeds (@​richierocks, @​ijlyttle). `slowly()` modifies a function so that it waits for a given amount of time between calls.",1,105,FALSE,NA
purrr,9b5d60b2c9dd377e05f1a592035fbf0b,"`partial()` now supports empty `... =` argument to specify the position of future arguments, relative to partialised ones. This syntax is borrowed from (and implemented with) `rlang::call_modify()`. To prevent partial matching of `...` on `...f`, the latter has been renamed to `.f`, which is more consistent with other purrr function signatures.",1,106,FALSE,NA
purrr,e0f30f1b9bd258f5a633ef096f9dcece,"`partial()` now supports quasiquotation. When you unquote an argument, it is evaluated only once at function creation time. This is more flexible than the `.lazy` argument since you can control the timing of evaluation for each argument. Consequently, `.lazy` is soft-deprecated (#457).",1,107,FALSE,NA
purrr,d2fed4d4ca7a233dea9416a4e676c048,Fixed an infinite loop when partialised function is given the same name as the original function (#387).,1,108,FALSE,NA
purrr,462e1aa0bd620f8c40e12036c6107e6d,`partial()` now calls `as_closure()` on primitive functions to ensure argument matching (#360).,1,109,FALSE,NA
purrr,97b1f377cf5acda16f1e0eefd8114656,The `.lazy` argument of `partial()` is soft-deprecated in favour of quasiquotation:,1,110,FALSE,NA
purrr,97b1f377cf5acda16f1e0eefd8114656,"```
# Before
partial(fn, u = runif(1), n = rnorm(1), .lazy = FALSE)

# After
partial(fn, u = !!runif(1), n = !!rnorm(1))  # All constant
partial(fn, u = !!runif(1), n = rnorm(1))    # First constant
```",1,111,TRUE,NA
purrr,debb14dfb9c1a8422a8c57a93fc9cb34,The tibble package is now in Suggests rather than Imports. This brings the hard dependency of purrr to just rlang and magrittr.,1,112,FALSE,NA
purrr,ea4df494c1d23a6f5da0c8d0a56e288a,`compose()` now returns an identity function when called without inputs.,1,113,FALSE,NA
purrr,e8dd6723dac14606148887ab96761e8f,"Functions created with `compose()` now have the same formal parameters as the first function to be called. They also feature a more informative print method that prints all composed functions in turn (@​egnha, #366).",1,114,FALSE,NA
purrr,0d78d5eb25742f88891730fd13ffee69,"New `.dir` argument in `compose()`. When set to `""forward""`, the functions are composed from left to right rather than right to left.",1,115,FALSE,NA
purrr,d12ab2c4f6b0ff46af67d8b969ff9910,"`list_modify()` now supports the `zap()` sentinel (reexported from rlang) to remove elements from lists. Consequently, removing elements with the ambiguous sentinel `NULL` is soft-deprecated.",1,116,FALSE,NA
purrr,3d3274e8f1f143165a753e5444f7444a,"The requirements of `list_modify()` and `list_merge()` have been relaxed. Previously it required both the modified lists and the inputs to be either named or unnamed. This restriction now only applies to inputs in `...`. When inputs are all named, they are matched to the list by name. When they are all unnamed, they are matched positionally. Otherwise, this is an error.",1,117,FALSE,NA
purrr,0da29a9e1b9732fde2da7c1724680bd4,Fixed ordering of names returned by `accumulate_right()` output. They now correspond to the order of inputs.,1,118,FALSE,NA
purrr,88544f9fe94e5b678bf88c8c6d728258,Fixed names of `accumulate()` output when `.init` is supplied.,1,119,FALSE,NA
purrr,cf24a1a9fb4eae8c4a2f41dd4d44f258,"`compose()` now supports composition with lambdas (@​ColinFay, #556)",1,120,FALSE,NA
purrr,8684d9c59e0443a9aecc85c18f6282c2,Fixed a `pmap()` crash with empty lists on the Win32 platform (#565).,1,121,FALSE,NA
purrr,cd1f4164c859cf6d28fa8534334e3533,"`modify_depth` now has `.ragged` argument evaluates correctly to `TRUE` by default when `.depth < 0` (@​cderv, #530).",1,122,FALSE,NA
purrr,50add84aeba12ac98afd881e71487b21,"`accumulate()` now inherits names from their first input (@​AshesITR, #446).",1,123,FALSE,NA
purrr,a1bdd79b91bf435c89dafc8296bcb2ec,"`attr_getter()` no longer uses partial matching. For example, if an `x` object has a `labels` attribute but no `label` attribute, `attr_getter(""label"")(x)` will no longer extract the `labels` attribute (#460, @​huftis).",1,124,FALSE,NA
purrr,a549624f3c951a7b7164732e02168f6e,`flatten_dfr()` and `flatten_dfc()` now aborts if dplyr is not installed. (#454),1,125,FALSE,NA
purrr,bfebd725841e296cd5caf6564e1cfe8f,`imap_dfr()` now works with `.id` argument is provided (#429),1,126,FALSE,NA
purrr,4c2dc94e8c7b5b80d67ef90e3e7f812b,"`list_modify()`, `update_list()` and `list_merge()` now handle duplicate duplicate argument names correctly (#441, @​mgirlich).",1,127,FALSE,NA
purrr,6b076fe33b7eb70ab3f994739005f214,"`map_raw`, `imap_raw`, `flatten_raw`, `invoke_map_raw`, `map2_raw` and `pmap_raw` added to support raw vectors. (#455, @​romainfrancois)",1,128,FALSE,NA
purrr,5b4e319c4f0a16c14f08db47cd35538a,`flatten()` now supports raw and complex elements.,1,129,FALSE,NA
purrr,321447a0d1b257dbccaa347ff28f916e,"`array_branch()` and `array_tree()` now retain the `dimnames()` of the input array (#584, @​flying-sheep)",1,130,FALSE,NA
purrr,90ae93bf6d185b0fae7a35a30d403e13,`pluck()` no longer flattens lists of arguments. You can still do it manually with `!!!`. This change is for consistency with other dots-collecting functions of the tidyverse.,1,131,FALSE,NA
purrr,2fe61d8858565b025658d74d8ebc65b4,"`map_at()`, `lmap_at()` and `modify_at()` now supports selection using `vars()` and `tidyselect` (@​ColinFay, #608). Note that for now you need to import `vars()` from dplyr or call it qualified like `dplyr::vars()`. It will be reexported from rlang in a future release.",1,132,FALSE,NA
purrr,3a2b1cf660c6e490228c0c4412980171,"`detect()` now has a .default argument to specify the value returned when nothing is detected (#622, @​ColinFay).",1,133,FALSE,NA
purrr,67579f61fff11fa6945fdfe4fb564919,`reduce_right()` is soft-deprecated and replaced by a new `.dir` argument of `reduce()`:,1,134,FALSE,NA
purrr,67579f61fff11fa6945fdfe4fb564919,"```
# Before:
reduce_right(1:3, f)

# After:
reduce(1:3, f, .dir = ""backward"")
```",1,135,TRUE,NA
purrr,67579f61fff11fa6945fdfe4fb564919,"Note that the details of the computation have changed. Whereas `reduce_right()` computed `f(f(3, 2), 1)`, it now computes `f(1, f(2, 3))`. This is the standard way of reducing from the right. To produce the exact same reduction as `reduce_right()`, simply reverse your vector and use a left reduction:",1,135,FALSE,NA
purrr,67579f61fff11fa6945fdfe4fb564919,"```
# Before:
reduce_right(1:3, f)

# After:
reduce(rev(1:3), f)
```",1,136,TRUE,NA
purrr,365a8578edba89c63de31116746b9b74,`reduce2_right()` is soft-deprecated without replacement. It is not clear what algorithmic properties should a right reduction have in this case. Please reach out if you know about a use case for a right reduction with a ternary function.,1,137,FALSE,NA
purrr,d81d7f26d0e605339e0858bec36da1e1,"`accumulate_right()` is soft-deprecated and replaced by the new `.dir` argument of `accumulate()`. Note that the algorithm has slightly changed: the accumulated value is passed to the right rather than the left, which is consistent with a right reduction.",1,138,FALSE,NA
purrr,d81d7f26d0e605339e0858bec36da1e1,"```
# Before:
accumulate_right(1:3, f)

# After:
accumulate(1:3, f, .dir = ""backward"")
```",1,139,TRUE,NA
purrr,b062db12b6430cd4fdbfd2e7191e728b,The `.right` argument of `detect()` and `detect_index()` is soft-deprecated and renamed to `.dir` for consistency with other functions and clarity of the interface.,1,140,FALSE,NA
purrr,b062db12b6430cd4fdbfd2e7191e728b,"```
# Before
detect(x, f, .right = TRUE)

# After
detect(x, f, .dir = ""backward"")
```",1,141,TRUE,NA
purrr,99c70750896342f109f7e55fd6e3a0a0,The `.lazy` argument of `partial()` is soft-deprecated in favour of quasiquotation.,1,142,FALSE,NA
purrr,14925ef054cd864d2f3a7e8b6f43103e,We had to rename `...f` to `.f` in `partial()` in order to support `... =` argument (which would otherwise partial-match on `...f`). This also makes `partial()` more consistent with other purrr function signatures.,1,143,FALSE,NA
purrr,56821af8fb413fc9967572427a4adec4,"`invoke()` is retired in favour of the `exec()` function, reexported from rlang. `exec()` evaluates a function call built from its inputs and supports tidy dots:",1,144,FALSE,NA
purrr,56821af8fb413fc9967572427a4adec4,"```
# Before:
invoke(mean, list(na.rm = TRUE), x = 1:10)

# After
exec(mean, 1:10, !!!list(na.rm = TRUE))
```",1,145,TRUE,NA
purrr,56821af8fb413fc9967572427a4adec4,Note that retired functions are not removed from the package and will be maintained undefinitely.,1,145,FALSE,NA
purrr,5752b83a54a99e8d76b44a1cda1b1da2,"`invoke_map()` is retired without replacement because it is more complex to understand than the corresponding code using `map()`, `map2()` and `exec()`:",1,146,FALSE,NA
purrr,5752b83a54a99e8d76b44a1cda1b1da2,"```
# Before:
invoke_map(fns, list(args))
invoke_map(fns, list(args1, args2))

# After:
map(fns, exec, !!!args)
map2(fns, list(args1, args2), function(fn, args) exec(fn, !!!args))
```",1,147,TRUE,NA
purrr,8a1d20f52f339d59c015fab4bc0dfd2b,"`%@​%` is soft-deprecated, please use the operator exported in rlang instead. The latter features an interface more consistent with `@​` as it uses NSE, supports S4 fields, and has an assignment variant.",1,148,FALSE,NA
purrr,e3502a7f7e6e8344a8e237cb8d732ef4,Removing elements from lists using `NULL` in `list_modify()` is soft-deprecated. Please use the new `zap()` sentinel reexported from rlang instead:,1,149,FALSE,NA
purrr,e3502a7f7e6e8344a8e237cb8d732ef4,"```
# Before:
list_modify(x, foo = NULL)

# After:
list_modify(x, foo = zap())
```",1,150,TRUE,NA
purrr,e3502a7f7e6e8344a8e237cb8d732ef4,"This change is motivated by the ambiguity of `NULL` as a deletion sentinel because `NULL` is also a valid value in lists. In the future, `NULL` will set an element to `NULL` rather than removing the element.",1,150,FALSE,NA
purrr,a17f5312b65e5d0e7f7afc5f028fd2c8,"`rerun()` is now in the questioning stage because we are no longer convinced NSE functions are a good fit for purrr. Also, `rerun(n, x)` can just as easily be expressed as `map(1:n, ~ x)` (with the added benefit of being passed the current index as argument to the lambda).",1,151,FALSE,NA
purrr,b245cd16c21d52c2e17e6d2383d5ab4e,`map_call()` is defunct.,1,152,FALSE,NA
purrr,65ed9a99b3934ba85d3364f4e33b465a,This is a maintenance release following the release of dplyr 0.7.5.,1,153,FALSE,NA
purrr,3e3b632ae1a22bd424462b427eb2ce6a,Fixes for R 3.1.,1,154,FALSE,NA
purrr,1869c0414695bfc8c2bc32bbf8aecbc6,"If `reduce()` fails with this message: `` Error: `.x` is empty, and no `.init` supplied ``, this is because `reduce()` now returns `.init` when `.x` is empty. Fix the problem by supplying an appropriate argument to `.init`, or by providing special behaviour when `.x` has length 0.",1,155,FALSE,NA
purrr,c269d209ec0f71a66252f0b2a79c3695,"The type predicates have been migrated to rlang. Consequently the `bare-type-predicates` documentation topic is no longer in purrr, which might cause a warning if you cross-reference it.",1,156,FALSE,NA
purrr,86111485431580e0880ec3c1a75b00a8,"`order_by()`, `sort_by()` and `split_by()` have been removed. `order_by()` conflicted with `dplyr::order_by()` and the complete family doesn't feel that useful. Use tibbles instead (#217).",1,157,FALSE,NA
purrr,0d8d17206e520f8c57ec86ce4e919e3c,`contains()` has been renamed to `has_element()` to avoid conflicts with dplyr (#217).,1,158,FALSE,NA
purrr,287e0d7c12e1bdee299a32256f195e6d,"`as_function()` is now `as_mapper()` because it is a tranformation that makes sense primarily for mapping functions, not in general (#298). `.null` has been renamed to `.default` to better reflect its intent (#298). `.default` is returned whenever an element is absent or empty (#231, #254). `as_mapper()` sanitises primitive functions by transforming them to closures with standardised argument names (using `rlang::as_closure()`). For instance `+` is transformed to `function(.x, .y) .x + .y`. This results in proper argument matching so that `map(1:10, partial(`-`, .x = 5))` produces `list(5 - 1, 5 - 2, ...)`.",1,161,FALSE,NA
purrr,929ab53619e7c3354807e5b0584245df,"Recursive indexing can now extract objects out of environments (#213) and S4 objects (#200), as well as lists.",1,162,FALSE,NA
purrr,b8adb169933206959aea2a8c3c45a321,"`attr_getter()` makes it possible to extract from attributes like `map(list(iris, mtcars), attr_getter(""row.names""))`.",1,163,FALSE,NA
purrr,13b1f0b9aab0185388abc96e6bcc980a,"The argument list for formula-functions has been tweaked so that you can refer to arguments by position with `..1`, `..2`, and so on. This makes it possible to use the formula shorthand for functions with more than two arguments (#289).",1,164,FALSE,NA
purrr,9fe6f401d27ec8c1d165b5a23a05bfcc,"`possibly()`, `safely()` and friends no longer capture interrupts: this means that you can now terminate a mapper using one of these with Escape or Ctrl + C (#314)",1,165,FALSE,NA
purrr,009e9e6d91b98d7ce03b60d07539b091,"All map functions now treat `NULL` the same way as an empty vector (#199), and return an empty vector if any input is an empty vector.",1,166,FALSE,NA
purrr,7ca4b1c71dfab06d5818784cb9ea091b,All `map()` functions now force their arguments in the same way that base R does for `lapply()` (#191). This makes `map()` etc easier to use when generating functions.,1,167,FALSE,NA
purrr,07bbac394b6211fc1d1d1a6d5160abba,"A new family of ""indexed"" map functions, `imap()`, `imap_lgl()` etc, provide a short-hand for `map2(x, names(x))` or `map2(x, seq_along(x))` (#240).",1,168,FALSE,NA
purrr,d6cc9a436b96cc0d51f160f0122c3100,The data frame suffix `_df` has been (soft) deprecated in favour of `_dfr` to more clearly indicate that it's a row-bind. All variants now also have a `_dfc` for column binding (#167). (These will not be terribly useful until `dplyr::bind_rows()`/`dplyr::bind_cols()` have better semantics for vectors.),1,169,FALSE,NA
purrr,ec1875ae205991c7ecd29c52221a3184,`at_depth()` has been renamed to `modify_depth()`.,1,170,FALSE,NA
purrr,a81dff29e67c63a53503cbf9a08a8290,"`modify_depth()` gains new `.ragged` argument, and negative depths are now computed relative to the deepest component of the list (#236).",1,171,FALSE,NA
purrr,f1629846cc86ecec9e1e86269e407a53,`auto_browse(f)` returns a new function that automatically calls `browser()` if `f` throws an error (#281).,1,172,FALSE,NA
purrr,22ef88aebe61927d7676735fad104988,`vec_depth()` computes the depth (i.e. the number of levels of indexing) or a vector (#243).,1,173,FALSE,NA
purrr,2a1822b1a66ea0df96a2a5795e861007,"`reduce2()` and `reduce2_right()` make it possible to reduce with a 3 argument function where the first argument is the accumulated value, the second argument is `.x`, and the third argument is `.y` (#163).",1,174,FALSE,NA
purrr,ed4ee0b5fc73f34e46020a24948b96e0,`list_modify()` extends `stats::modifyList()` to replace by position if the list is not named.(#201). `list_merge()` operates similarly to `list_modify()` but combines instead of replacing (#322).,1,175,FALSE,NA
purrr,e7bf41a5605d5690432580eb042fd04e,The legacy function `update_list()` is basically a version of `list_modify` that evaluates formulas within the list. It is likely to be deprecated in the future in favour of a tidyeval interface such as a list method for `dplyr::mutate()`.,1,176,FALSE,NA
purrr,24ecb6b413ffa103c001787b3bc23c4b,"Thanks to @​dchiu911, the unit test coverage of purrr is now much greater.",1,177,FALSE,NA
purrr,5e3a3b375b3ec7caab5610e7d834e83d,All predicate functions are re-exported from rlang (#124).,1,178,FALSE,NA
purrr,0908ab27f5178ea9eeccf06caabc86c2,`compact()` now works with standard mapper conventions (#282).,1,179,FALSE,NA
purrr,ca1653e25667d56eea35c48634d3f642,"`cross_n()` has been renamed to `cross()`. The `_n` suffix was removed for consistency with `pmap()` (originally called `map_n()` at the start of the project) and `transpose()` (originally called `zip_n()`). Similarly, `cross_d()` has been renamed to `cross_df()` for consistency with `map_df()`.",1,180,FALSE,NA
purrr,0f633fb821b0d17ccfc2bf155793fc9c,`every()` and `some()` now return `NA` if present in the input (#174).,1,181,FALSE,NA
purrr,c534aee41339d4526e446b62b8c21dfe,`invoke()` uses a more robust approach to generate the argument list (#249) It no longer uses lazyeval to figure out which enviroment a character `f` comes from.,1,182,FALSE,NA
purrr,d621fc2401342f22a1cdc2aaeb17e7c8,`is_numeric()` and `is_scalar_numeric()` are deprecated because they don't test for what you might expect at first sight.,1,183,FALSE,NA
purrr,061f7a9070c2b7553d6bbc85dac6d46b,`reduce()` now throws an error if `.x` is empty and `.init` is not supplied.,1,184,FALSE,NA
purrr,50dcb99a956f662af70e0ab397d0e857,"Deprecated functions `flatmap()`, `map3()`, `map_n()`, `walk3()`, `walk_n()`, `zip2()`, `zip3()`, `zip_n()` have been removed.",1,185,FALSE,NA
purrr,207ab7fa5ec40eb171780eb800203c5b,`pmap()` coerces data frames to lists to avoid the expensive `[.data.frame` which provides security that is unneeded here (#220).,1,186,FALSE,NA
purrr,82e3d20fed10e4d6bf324a1de4cd8c75,`rdunif()` checks its inputs for validity (#211).,1,187,FALSE,NA
purrr,1375db7e0ba41ea635c729e4d948d6d0,"`set_names()` can now take a function to tranform the names programmatically (#276), and you can supply names in `...` to reduce typing even more more (#316). `set_names()` is now powered by `rlang::set_names()`.",1,188,FALSE,NA
purrr,283952a0a3dc14f011b71b66a3ffdb81,`safely()` now actually uses the `quiet` argument (#296).,1,189,FALSE,NA
purrr,86ba379eca61cfadcc961a24db05130c,`transpose()` now matches by name if available (#164). You can override the default choice with the new `.names` argument.,1,190,FALSE,NA
purrr,de529f4626e58f630b3faf6f012cd9ff,The function argument of `detect()` and `detect_index()` have been renamed from `.p` to `.f`. This is because they have mapper semantics rather than predicate semantics.,1,191,FALSE,NA
purrr,714e337e994f1f1a1f0f3f5e5be5bc73,"All data-frame based mappers have been removed in favour of new functions and idioms in the tidyverse. `dmap()`, `dmap_at()`, `dmap_if()`, `invoke_rows()`, `slice_rows()`, `map_rows()`, `by_slice()`, `by_row()`, and `unslice()` have been moved to purrrlyr. This is a bit of an aggresive change but it allows us to make the dependencies much lighter.",1,192,FALSE,NA
purrr,8403c0968e3fd7b292104bcd4433696d,Fix for dev tibble support.,1,193,FALSE,NA
purrr,655ac2d050ca97b08acc8eb61642f8ca,`as_function()` now supports list arguments which allow recursive indexing using either names or positions. They now always stop when encountering the first NULL (#173).,1,194,FALSE,NA
purrr,fe97179d63408f564e5fc762b412b299,`accumulate` and `reduce` correctly pass extra arguments to the worker function.,1,195,FALSE,NA
purrr,bde217903d94556385e8ab7dd5c8223f,"`as_function()` gains a `.null` argument that for character and numeric values allows you to specify what to return for null/absent elements (#110). This can be used with any map function, e.g. `map_int(x, 1, .null = NA)`",1,196,FALSE,NA
purrr,368be1eeec03a99ddbc82372fd6afa8d,`as_function()` is now generic.,1,197,FALSE,NA
purrr,37b2b59ccf62440d2d2afc6499e1e86b,New `is_function()` that returns `TRUE` only for regular functions.,1,198,FALSE,NA
purrr,d442b7c1ad972a4b2ea2f290db23e7b9,Fix crash on GCC triggered by `invoke_rows()`.,1,199,FALSE,NA
purrr,a348cdb08d552c64cf401871206c3877,There are two handy infix functions:,1,200,FALSE,NA
purrr,a348cdb08d552c64cf401871206c3877,• `x %||% y` is shorthand for `if (is.null(x)) y else x` (#109).,2,201,FALSE,There are two handy infix functions:
purrr,a348cdb08d552c64cf401871206c3877,"• `x %@​% ""a""` is shorthand for `attr(x, ""a"", exact = TRUE)` (#69).",2,202,FALSE,There are two handy infix functions:
purrr,747b98f8b938b7a2fab3e72e1cd3c4dc,"`accumulate()` has been added to handle recursive folding. It is shortand for `Reduce(f, .x, accumulate = TRUE)` and follows a similar syntax to `reduce()` (#145). A right-hand version `accumulate_right()` was also added.",1,203,FALSE,NA
purrr,691d7e42c5095272de0b99aa6c839666,`map_df()` row-binds output together. It's the equivalent of `plyr::ldply()` (#127),1,204,FALSE,NA
purrr,087e4a0a5dcd4898d54b518d91e6a720,"`flatten()` is now type-stable and always returns a list. To return a simpler vector, use `flatten_lgl()`, `flatten_int()`, `flatten_dbl()`, `flatten_chr()`, or `flatten_df()`.",1,205,FALSE,NA
purrr,5ec3bc02270fb5438150df0bf2f356ad,"`invoke()` has been overhauled to be more useful: it now works similarly to `map_call()` when `.x` is NULL, and hence `map_call()` has been deprecated. `invoke_map()` is a vectorised complement to `invoke()` (#125), and comes with typed variants `invoke_map_lgl()`, `invoke_map_int()`, `invoke_map_dbl()`, `invoke_map_chr()`, and `invoke_map_df()`.",1,206,FALSE,NA
purrr,b7565cea805bd0efb8b8311431d101ae,"`transpose()` replaces `zip2()`, `zip3()`, and `zip_n()` (#128). The name more clearly reflects the intent (transposing the first and second levels of list). It no longer has fields argument or the `.simplify` argument; instead use the new `simplify_all()` function.",1,207,FALSE,NA
purrr,9c0f424a5338a34620c9f5a84b51e160,"`safely()`, `quietly()`, and `possibly()` are experimental functions for working with functions with side-effects (e.g. printed output, messages, warnings, and errors) (#120). `safely()` is a version of `try()` that modifies a function (rather than an expression), and always returns a list with two components, `result` and `error`.",1,208,FALSE,NA
purrr,6dbfbf49ee51d6bb17802d9a66a6c9b7,`list_along()` and `rep_along()` generalise the idea of `seq_along()`. (#122).,1,209,FALSE,NA
purrr,8afc9f8046d0543c37c1f8394141f167,`is_null()` is the snake-case version of `is.null()`.,1,210,FALSE,NA
purrr,052542ccd1a79c3c125221388e0a08f1,"`pmap()` (parallel map) replaces `map_n()` (#132), and has typed-variants suffixed `pmap_lgl()`, `pmap_int()`, `pmap_dbl()`, `pmap_chr()`, and `pmap_df()`.",1,211,FALSE,NA
purrr,04297ad5261702163e4b8c621883a912,"`set_names()` is a snake-case alternative to `setNames()` with stricter equality checking, and more convenient defaults for pipes: `x %>% set_names()` is equivalent to `setNames(x, x)` (#119).",1,212,FALSE,NA
purrr,c4eb2c1ef4bef741992f33a5b907dcea,"`map()` now always returns a list. Data frame support has been moved to `map_df()` and `dmap()`. The latter supports sliced data frames as a shortcut for the combination of `by_slice()` and `dmap()`: `x %>% by_slice(dmap, fun, .collate = ""rows"")`. The conditional variants `dmap_at()` and `dmap_if()` also support sliced data frames and will recycle scalar results to the slice size.",1,213,FALSE,NA
purrr,a012bf932e6fe5ce5c1ed9cef297f7b1,"`map_rows()` has been renamed to `invoke_rows()`. As other rows-based functionals, it collates results inside lists by default, but with column collation this function is equivalent to `plyr::mdply()`.",1,214,FALSE,NA
purrr,449861c5006c861aa1856c8cd4f19f7d,"The rows-based functionals gain a `.to` option to name the output column as well as a `.collate` argument. The latter allows to collate the output in lists (by default), on columns or on rows. This makes these functions more flexible and more predictable.",1,215,FALSE,NA
purrr,4764cf347e84623bcf20db15a527a959,"`as_function()`, which converts formulas etc to functions, is now exported (#123).",1,216,FALSE,NA
purrr,87e3369778f5ac50e39de121ad1e679b,`rerun()` is correctly scoped (#95),1,217,FALSE,NA
purrr,250887fe2b530111d92d2ebb4b8eb79b,`update_list()` can now modify an element called `x` (#98).,1,218,FALSE,NA
purrr,cb64b75e904ca7e3b80c6e181080d0c8,"`map*()` now use custom C code, rather than relying on `lapply()`, `mapply()` etc. The performance characteristcs are very similar, but it allows us greater control over the output (#118).",1,219,FALSE,NA
purrr,9e9ecfa0ba57ea087b0bcbf96558e728,"`map_lgl()` now has second argument `.f`, not `.p` (#134).",1,220,FALSE,NA
purrr,9dfd88bdfba4cb95b0357d043e86b9b1,`flatmap()` -\> use `map()` followed by the appropriate `flatten()`.,1,221,FALSE,NA
purrr,67991420fe24cf9498ad7178a5156490,`map_call()` -\> `invoke()`.,1,222,FALSE,NA
purrr,fd563d56264e2328b6a1bca5028c0b94,`map_n()` -\> `pmap()`; `walk_n()` -\> `pwalk()`.,1,223,FALSE,NA
purrr,6d8bf5181c6d5b50ef6714d47452b93b,"`map3(x, y, z)` -\> `map_n(list(x, y, z))`; `walk3(x, y, z) ->`pwalk(list(x, y, z))\`",1,224,FALSE,NA
readr,fbc3ab4232eb32d9a72dde0cb9b4a231,No user-facing changes. Patch release with internal changes requested by CRAN.,1,1,FALSE,NA
readr,f66882a63327fd708339f89ce80ffa0d,"Help files below `man/` have been re-generated, so that they give rise to valid HTML5. (This is the impetus for this release, to keep the package safely on CRAN.)",1,2,FALSE,NA
readr,cc56c53f5b08acc82a6fc14dc829b163,"`mini-gapminder-africa.csv` and friends are new example datasets accessible via `readr_example()`, which have been added to illustrate reading multiple files at once, into a single data frame.",1,3,FALSE,NA
readr,e1995a41b0892d0fa8437987b38a9974,"`read_table()`, `read_log()`, and `read_delim_chunked()` (and friends) gain the `show_col_types` argument found elsewhere. All `read_*()` functions now respect the `show_col_types` argument or option, even when using the first edition parsing engine (#1331).",1,4,FALSE,NA
readr,f62722fbc5fd48fd7de70c52f6b5919e,`show_progress()` uses `rlang::is_interactive()` instead of `base::interactive()` (#1356).,1,5,FALSE,NA
readr,d33e7cb68ce59f865b59f901dff6c6e0,"`read_builtin()` does more argument checking, so that we catch obviously malformed input before passing along to `utils::data()` (#1361).",1,6,FALSE,NA
readr,a34f2ca24ef6ec3ce2a0997e02c9f17f,`chickens.csv` and `whitespace-sample.txt` are new example datasets accessible via `readr_example()` (#1354).,1,7,FALSE,NA
readr,a30574c5eed74a0f532d58795eb5c79f,Jenny Bryan is now the maintainer.,1,8,FALSE,NA
readr,6f29f018a0b6ac5b4c69384dc1023f15,Fix buffer overflow when trying to parse an integer from a field that is over 64 characters long (#1326),1,9,FALSE,NA
readr,01cbc75ec4dd7a7c0af4ea349bfaa038,"All readr functions again read eagerly by default. Unfortunately many users experienced frustration from the drawbacks of lazy reading, in particular locking files on Windows, so it was decided to disable lazy reading default. However `options(readr.read_lazy = TRUE)` can be used to set the default to by lazy if desired.",1,10,FALSE,NA
readr,04a0460c574a1959b26e18f3d1c174ef,New `readr.read_lazy` global option to control if readr reads files lazily or not (#1266),1,11,FALSE,NA
readr,0c7c90263b8df81d051e89dcfab41080,"minor test tweak for compatibility with testthat 3.1.0 (#@​lionel-, #1304)",1,12,FALSE,NA
readr,45baea3f14b69ffeaeebe44905676a32,"`write_rds()` gains a `text=` argument, to control using a text based object representation, like the `ascii=` argument in `saveRDS()` (#1270)",1,13,FALSE,NA
readr,e61d600d77ad9edf7ef30f3de27c8868,`options(readr.show_col_types = FALSE)` now works as intended (#1250),1,14,FALSE,NA
readr,6e1ab27d86731737119b92a4566ba102,`read_delim_chunked()` now again correctly respects the `chunk_size` parameter (#1248),1,15,FALSE,NA
readr,cca91eb0b26b9d05bc51d894d1e41304,"`type_convert()` gains a `guess_integer` argument, passed to `guess_parser()` (@​jmbarbone, #1264)",1,16,FALSE,NA
readr,a7efe0a9a61881553f68469762698fc6,"`read_tsv()` now correctly passes the `quote` and `na` arguments to `vroom::vroom()` (#1254, #1255)",1,17,FALSE,NA
readr,68dfe6371dcc5e1a9431231ed0f2ec0c,Avoid spurious byte compilation errors due to the programmatically generated `spec_*()` functions.,1,18,FALSE,NA
readr,50ee5b276f86a1faade2b3ad71b338ca,"`with_edition(1, read_csv(""my_file.csv""))` will read `my_file.csv` with the first edition of readr.",1,19,FALSE,NA
readr,9e17bad896c0add3b6d6a1b9a46dfc05,`readr::local_edition(1)` placed at the top of your function or script will use the first edition for the rest of the function or script.,1,20,FALSE,NA
readr,d4c40423b4996f58ffb7e157d3f2c4f6,"`melt_csv()`, `melt_delim()`, `melt_tsv()` and `melt_fwf()` have been superseded by functions in the same name in the meltr package. The versions in readr have been deprecated. These functions rely on the first edition parsing code and would be challenging to update to the new parser. When the first edition parsing code is eventually removed from readr they will be removed.",1,25,FALSE,NA
readr,8b38fbe85c1d0b264ad617b39582faae,"`read_table2()` has been renamed to `read_table()`, as most users expect `read_table()` to work like `utils::read.table()`. If you want the previous strict behavior of the `read_table()` you can use `read_fwf()` with `fwf_empty()` directly (#717).",1,26,FALSE,NA
readr,4f1f0ad92e537d60729716f0ecf4003b,"Normalizing newlines in files with just carriage returns `\r` is no longer supported. The last major OS to use only CR as the newline was 'classic' Mac OS, which had its final release in 2001.",1,27,FALSE,NA
readr,379cef909a5dcbea629d903835e7eb18,`read_*_chunked()` functions now include their specification as an attribute (#1143),1,28,FALSE,NA
readr,e95aa1270ac440f2f20b5c92ba9ea889,All `read_*()` functions gain a `col_select` argument to more easily choose which columns to select.,1,29,FALSE,NA
readr,1a288e68cd902d8339541950ca1ba73f,All `read_*()` functions gain a `id` argument to optionally store the file paths when reading multiple files.,1,30,FALSE,NA
readr,f4af69722b6f71d669ef029079f9155e,All `read_*()` functions gain a `name_repair` argument to control how column names are repaired.,1,31,FALSE,NA
readr,39a168f13a76154a18e56c51f9a4981c,All `read_*()` and `write_*()` functions gain a `num_threads` argument to control the number of processing threads they use (#1201),1,32,FALSE,NA
readr,181311a6c273cb3da107d847c8701fbe,"All `write_*()` and `format_*()` functions gain `quote` and `escape` arguments, to explicitly control how fields are quoted and how double quotes are escaped. (#653, #759, #844, #993, #1018, #1083)",1,33,FALSE,NA
readr,158790e7a754ee69402da286557c4924,All `write_*()` functions gain a `progress` argument and display a progress bar when writing (#791).,1,34,FALSE,NA
readr,b77d84dbaab002306ab3c144bd52557a,"write_excel_csv() now defaults to `quote = ""all""` (#759)",1,35,FALSE,NA
readr,a116928b3f1fca75a2d0ba5475683410,"write_tsv() now defaults to `quote = ""none""` (#993)",1,36,FALSE,NA
readr,84824481ebdcd2226704d58f37c27b07,`read_table()` now handles skipped lines with unpaired quotes properly (#1180),1,37,FALSE,NA
readr,3d8f851406f28407f1006c2f28df2ab0,"The BH package is no longer a dependency. The boost C++ headers in BH have thousands of files, so can take a long time to extract and compiling them takes a great deal of memory, which made readr difficult to compile on systems with limited memory (#1147).",1,38,FALSE,NA
readr,1738031194bdca298d3c79deaec6b754,"readr now uses the tzdb package when parsing date-times (@​DavisVaughan, r-lib/vroom#273)",1,39,FALSE,NA
readr,0c1f5f6af51a627ba199ca281bb3659f,Chunked readers now support files with more than `INT_MAX` (\~ 2 Billion) number of lines (#1177),1,40,FALSE,NA
readr,acd9b0f54393409c74bc0180df22814f,Memory no longer inadvertently leaks when reading memory from R connections (#1161),1,41,FALSE,NA
readr,ee14bb8876656ce614d261ecf8b92e0c,Invalid date formats no longer can potentially crash R (#1151),1,42,FALSE,NA
readr,85153b2498a2ebab48c01c1d8a370561,`col_factor()` now throws a more informative error message if given non-character levels (#1140),1,43,FALSE,NA
readr,140f8cb72cddc3814ab024b4ffa86a53,`problems()` now takes `.Last.value` as its default argument. This lets you run `problems()` without an argument to see the problems in the previously read dataset.,1,44,FALSE,NA
readr,6e14ffe554b7e46f52f95bcd140ea99d,"`read_delim()` fails when sample of parsing problems contains non-ASCII characters (@​hidekoji, #1136)",1,45,FALSE,NA
readr,08eb9a0a3ab3cb19e297d074b6479055,`read_log()` gains a `trim_ws` argument (#738),1,46,FALSE,NA
readr,963eeac73292219709cc40180ad639b2,"`read_rds()` and `write_rds()` gain a `refhook` argument, to pass functions that handle references objects (#1206)",1,47,FALSE,NA
readr,c669b766b6e562e4b2eac9e09fde9f81,`read_rds()` can now read .Rds files from URLs (#1186),1,48,FALSE,NA
readr,6395862628422902cc6c6bb29d50d155,"`read_*()` functions gain a `show_col_types` argument, if set to `FALSE` this turns off showing the column types unconditionally.",1,49,FALSE,NA
readr,c08465869d5be2c8f70da9598a88cead,`type_convert()` now throws a warning if the input has no character columns (#1020),1,50,FALSE,NA
readr,964952655f27b2ec3312a5348996f511,`write_csv()` now errors if given a matrix column (#1171),1,51,FALSE,NA
readr,b56a9f57bb2f10234b774956df65c6d1,`write_csv()` now again is able to write data with duplicated column names (#1169),1,52,FALSE,NA
readr,681869bf9d55b0e8a6c26f02e99729d9,`write_file()` now forces its argument before opening the output file (#1158),1,53,FALSE,NA
readr,eec5ad2b65c51d479c3ff268bdab5c56,"`write_*()` functions first argument is now `file` instead of `path`, for consistency with the `read_*()` functions. `path` has been deprecated and will be removed in a future version of readr (#1110, @​brianrice2)",1,54,FALSE,NA
readr,0408a4f386ef342020477707f3b779dd,"`write_*()` functions now output any NaN values in the same way as NA values, controlled by the `na=` argument. (#1082).",1,55,FALSE,NA
readr,cce01be6c6e1642aedf5a23e61cf6400,It is now possible to generate a column specification from any tibble (or data.frame) with `as.col_spec()` and convert any column specification to a short representation with `as.character()`,1,56,FALSE,NA
readr,cce01be6c6e1642aedf5a23e61cf6400,"```
s <- as.col_spec(iris)
s
#> cols(
#>   Sepal.Length = col_double(),
#>   Sepal.Width = col_double(),
#>   Petal.Length = col_double(),
#>   Petal.Width = col_double(),
#>   Species = col_factor(levels = c(""setosa"", ""versicolor"", ""virginica""), ordered = FALSE, include_na = FALSE)
#> )
as.character(s)
#> [1] ""ddddf""
```",1,57,TRUE,NA
readr,71fdee01cf4f2601241c273f83d39ec2,The cli package is now used for all messages.,1,58,FALSE,NA
readr,5069aaaf0a5d786e1543f14f6f8d45aa,The runtime performance for tables with an extreme number of columns is greatly improved (#825),1,59,FALSE,NA
readr,33223bd833686b1e5cb8575bc6b1844f,Compressed files are now detected by magic numbers rather than by the file extension (#1125),1,60,FALSE,NA
readr,ada5954fc0b5640318df633de1b9c9cf,A memory leak when reading files is now fixed (#1092),1,61,FALSE,NA
readr,e300764a464f054a559bf2b974d59c5c,`write_*()` functions gain a `eol =` argument to control the end of line character used (#857). This allows writing of CSV files with Windows newlines (CRLF) if desired.,1,62,FALSE,NA
readr,762e7c21d0eafc77a12eea7e64338987,The Rcpp dependency has been removed in favor of cpp11.,1,63,FALSE,NA
readr,c8dd7d3c36ef8b64f32d361a1841a64d,The build system has been greatly simplified so should work on more systems.,1,64,FALSE,NA
readr,c6f2be305846a80d3490580d2eaacc35,"The full problem field is now displayed in the problems tibble, as intended (#444).",1,65,FALSE,NA
readr,d87d83486e7cfa8e6d7ba1af2ca07f4b,"New `%h` placeholder for parsing unrestricted hours (\<0 and \>23) to support parsing durations (#549, @​krlmlr).",1,66,FALSE,NA
readr,3ac1dd75c9da36d10afc36a0450109a6,`as.character.col_spec()` now handles logical columns as well (#1127),1,67,FALSE,NA
readr,d12dc47f8c2fe50cdbf12b33e11d6ff5,`fwf_positions(end)` no longer has a default argument and must be specified (#996),1,68,FALSE,NA
readr,f3b2360418e6a1b82467ae958efe1f81,`guess_parser()` gains a `na` argument and removes NA values before guessing (#1041).,1,69,FALSE,NA
readr,42fea6e89ea5d007326f5fbc31d02b1d,`parse_guess()` now passes the `na` argument to `guess_parser()`,1,70,FALSE,NA
readr,26b6688d226684064f202bad50cced56,"`read_*` functions now close properly all connections, including on errors like HTTP errors when reading from a url (@​cderv, #1050).",1,71,FALSE,NA
readr,79c1772a610a1a6369f5452b0906dbf6,`read_delimited()` no longer mistakenly stats literal filenames (#1063),1,72,FALSE,NA
readr,b9c5dc7cf7735d371e5cc4aff973dbd1,`read_lines()` now ignores quotations when skipping lines (#991).,1,73,FALSE,NA
readr,17dbaf0d26665d545517464026e3768a,`read_lines(skip_empty_rows = TRUE)` no longer crashes if a file ends with an empty line (#968),1,74,FALSE,NA
readr,0cea92e65ad84acfd59fd03f90a1999f,"`write_*()` functions now invisibly return the input data frame unchanged, rather than a version with factors and dates converted to strings. (@​jesse-ross, #975).",1,75,FALSE,NA
readr,d3a399fc2a01e9efda1956a32f1bb250,`write_csv2()` now formats decimal numbers more consistently with `utils::write.csv2()` (#1087),1,76,FALSE,NA
readr,b7fa4cc47f42e908746183b92b02f00b,"`write_csv2()` and `format_csv2()` no longer pad number columns with whitespaces (@​keesdeschepper, #1046).",1,77,FALSE,NA
readr,153b75fff35c694eb6240acd03715dd0,`write_excel_csv()` no longer outputs a byte order mark when appending to a file (#1075).,1,78,FALSE,NA
readr,150dd48dbb6c99eb9b0b673e6edc8454,"Uses of `tibble::data_frame` updated to `tibble::tibble` (tidyverse/dplyr#4069, @​thays42, #1124, @​brianrice2)",1,79,FALSE,NA
readr,68b2a4e3ff19042fd11fd0f07f624db6,"`read_delimited()` now returns an empty `tibble::data_frame()` rather than signaling an error when given a connection with an empty file (@​pralitp, #963).",1,80,FALSE,NA
readr,498dccb7bfbaa929bb23ad4eb5e13bf1,"More helpful error when trying to write out data frames with list columns (@​ellessenne, #938)",1,81,FALSE,NA
readr,26b8189ad0043ea1b6569299f1b55b2b,"`type_convert()` removes a 'spec' attribute, because the current columns likely have modified data types. The 'spec' attribute is set by functions like `read_delim()` (@​jimhester, @​wibeasley, #1032).",1,82,FALSE,NA
readr,09f43d52a0d5b12f1dfa8cc6c890744a,"`write_rds()` now can specify the Rds version to use. The default value is 2 as it's compatible to R versions prior to 3.5.0 (@​shrektan, #1001).",1,83,FALSE,NA
readr,2591989d6f18d0e0cb4700770b51edb3,"Fixes for issues related to variable initialization in C++ code (@​michaelquinn32, ##1133).",1,84,FALSE,NA
readr,fe14fe8927d81a1e3b2a1c0f72a5b00c,Column specifications are now coloured when printed. This makes it easy to see at a glance when a column is input as a different type then the rest. Colouring can be disabled by setting `options(crayon.enabled = FALSE)`.,1,85,FALSE,NA
readr,e8975c816fc7dcc7217a103be7ca565b,"`as.col_spec()` can now use named character vectors, which makes `read_csv(""file.csv"", col_types = c(xyz = ""c""))` equivalent to `read_csv(""file.csv"", col_types = cols(xyz = col_character())`",1,86,FALSE,NA
readr,0e177fedec757c21c22635b50a6906bb,"Fix skipping when single quotes are embedded in double quoted strings, and single quotes in skipped or commented lines (#944, #945).",1,87,FALSE,NA
readr,3eeb55ba3f6421a10503bf8a4ba5760e,Fix for compilation using custom architectures on macOS (#919),1,88,FALSE,NA
readr,aa4976ab11ec135f8797a216e2a97760,Fix for valgrind errors (#941),1,89,FALSE,NA
readr,43859dbda6154cec954ab8d9f6c68945,`hms` objects with NA values are now written without whitespace padding (#930).,1,90,FALSE,NA
readr,83c4326aa16d9075fca2fdd04dba34bd,"`read_*()` functions now return `spec_tbl_df` objects, which differ from regular `tbl_df` objects only in that the `spec` attribute is removed (and they are demoted to regular `tbl_df` objects) as soon as they are subset (#934).",1,91,FALSE,NA
readr,398d1650fd5414f47a1db76043a44828,`write_csv2()` now properly respects the `na` argument (#928),1,92,FALSE,NA
readr,1886eaf625eef275b39a5fcba81f8af1,Fixes compilation with multiple architectures on linux (#922).,1,93,FALSE,NA
readr,1d506a18f9e273e6da82cbb95e4b6621,Fixes compilation with R \< 3.3.0,1,94,FALSE,NA
readr,65a77c2151ddc07528ad755893fbc754,"`melt_*()` functions added for reading ragged data (#760, @​nacnudus).",1,96,FALSE,NA
readr,24ec8ef0ef7aef48ead44baa345ac6c7,"`AccumulateCallback` R6 class added to provide an example of accumulating values in a single result (#689, @​blakeboswell).",1,97,FALSE,NA
readr,fab8c5c02257a2ec558178356ea5c3da,"`read_fwf()` can now accept overlapping field specifications (#692, @​gergness)",1,98,FALSE,NA
readr,fdac11f49a608cb5b6a4341aafb9368a,"`type_convert()` now allows character column specifications and also silently skips non-character columns (#369, #699)",1,99,FALSE,NA
readr,2c24da78673e8767f0fc9a0dd436c6ec,"The `parse_*()` functions and `read_fwf()` gain a `trim_ws` argument to control whether the fields should be trimmed before parsing (#636, #735).",1,100,FALSE,NA
readr,f2f8fc31c512b99a4a1c2c0a0d9d845b,"`parse_number()` now parses numbers in scientific notation using `e` and `E` (#684, @​sambrady3).",1,101,FALSE,NA
readr,a89ad380e1989eb51e2229813e7a9c04,"Add `write_excel_csv2()` function to allow writing csv files with comma as a decimal separator and semicolon as a column separator (#753, @​olgamie).",1,102,FALSE,NA
readr,473b262a241ef68a300331268f8e5c3b,`read_*()` files now support reading from the clipboard by using `clipboard()` (#656).,1,103,FALSE,NA
readr,8df473591e0290469242a01e77d30f96,"`write_file()` gains a `sep` argument, to specify the line separator (#665).",1,104,FALSE,NA
readr,e81f810fc82ccb5adc1c065199d0d707,"Allow files to be read via FTP over SSH by recognising `sftp` as a URL protocol (#707, @​jdeboer).",1,105,FALSE,NA
readr,a24451981343008d35f0701f62baf467,"`parse_date*() accepts`%a\` for local day of week (#763, @​tigertoes).",1,106,FALSE,NA
readr,ac12f402033f4c8b89190a7a95aed2d4,"Added function `read_lines_raw_chunked()` (#710, @​gergness)",1,107,FALSE,NA
readr,5a9735b9c0c4aa238dfd9912e649e4a4,"`write_csv2()` added to complement `write_excel_csv2()` and allow writing csv file readable by `read_csv2()` (#870, @​cderv).",1,108,FALSE,NA
readr,5b1ca9beef6c7dde7011b527bdde74ae,`as.col_spec()` is now exported (#517).,1,109,FALSE,NA
readr,3e434607bcc2f09f5989f1c4e00c8757,`write*()` functions gain a `quote_escape` argument to control how quotes are escaped in the output (#854).,1,110,FALSE,NA
readr,b829d9a6139b4623beb7f6696ea0e44a,`read*()` functions now have a more informative error when trying to read a remote bz2 file (#891).,1,111,FALSE,NA
readr,6d4d2263135fbb417b2699cfaa0aafcb,"`spec_table2()` function added to correspond to `read_table2()` (#778, @​mawds).",1,112,FALSE,NA
readr,0c50a02e4e9cee56085f649d9c83e724,"`parse_factor()` now has `levels = NULL` by default (#862, @​mikmart).",1,113,FALSE,NA
readr,de3fcafd5f628b135c4f5f1cf3500957,"`""f""` can now be used as a shortcode for `col_factor()` in `cols()` and the `col_types` argument to `read_delim()` and friends (#810, @​mikmart).",1,114,FALSE,NA
readr,0b7e5a048bc64e8f9227e52603d80c0c,"Functions now read connections to a temporary file rather than to an in-memory object (#610, #76).",1,115,FALSE,NA
readr,7ca96dad2ddad34464500647731ef937,`standardise_path()` now uses a case-insensitive comparison for the file extensions (#794).,1,116,FALSE,NA
readr,cff1c2b8a6038cca02a6a7d7354dafb1,`parse_guess()` now guesses logical types when given (lowercase) 'true' and 'false' inputs (#818).,1,117,FALSE,NA
readr,da49a3a5eb1afe27663176ceaadb4c93,`read_*()` now do not print a progress bar when running inside a RStudio notebook chunk (#793),1,118,FALSE,NA
readr,bc3b23bcd203dd0db1f2e6a12c813afd,`read_table2()` now skips comments anywhere in the file (#908).,1,119,FALSE,NA
readr,9070270959d15fae3dba4db96fdfc4ea,"`parse_factor()` now handles the case of empty strings separately, so you can have a factor level that is an empty string (#864).",1,120,FALSE,NA
readr,b41747a84260c51716e20da9445a6fe2,`read_delim()` now correctly reads quoted headers with embedded newlines (#784).,1,121,FALSE,NA
readr,ea09690d9ab2848e7407c671066106e1,`fwf_positions()` now always returns `col_names` as a character (#797).,1,122,FALSE,NA
readr,7ab794a836c7dce09b067adc06720d1a,`format_*()` now explicitly marks it's output encoding as UTF-8 (#697).,1,123,FALSE,NA
readr,e1ec54762090eaecb28ce8e1fd5d5492,`read_delim()` now ignores whitespace between the delimiter and quoted fields (#668).,1,124,FALSE,NA
readr,8f768502ca91c653290bb3176ceabd3c,`read_table2()` now properly ignores blank lines at the end of a file like `read_table()` and `read_delim()` (#657).,1,125,FALSE,NA
readr,fc0f905fb380c804b206692c056fcfe6,"`read_delim()`, `read_table()` and `read_table()` now skip blank lines at the start of a file (#680, #747).",1,126,FALSE,NA
readr,b445bb7e9d31cf2713dc1af485e43410,`guess_parser()` now guesses a logical type for columns which are all missing. This is useful when binding multiple files together where some files have missing columns. (#662).,1,127,FALSE,NA
readr,ebaecd98c0e82165601c9e10639bcafb,"Column guessing will now never guess an integer type. This avoids issues where double columns are incorrectly guessed as integers if they have only integer values in the first 1000 (#645, #652).",1,128,FALSE,NA
readr,00f32d8707596a919e74ba3e39710709,"`read_*()` now converts string `file`s to UTF-8 before parsing, which is convenient for non-UTF-8 platforms in most cases (#730, @​yutannihilation).",1,129,FALSE,NA
readr,223acaf67737bcb029d21ed886093ddc,"`write_csv()` writes integers up to 10\^15 without scientific notation (#765, @​zeehio)",1,130,FALSE,NA
readr,5ec5c713b6a88046653ce2f57e964e8c,"`read_*()` no longer throws a ""length of NULL cannot be changed"" warning when trying to resize a skipped column (#750, #833).",1,131,FALSE,NA
readr,358cb73717630ecd6f4a118c32303f6b,"`read_*()` now handles non-ASCII paths properly with R \>=3.5.0 on Windows (#838, @​yutannihilation).",1,132,FALSE,NA
readr,74bb6972284402a49d18b44ce5f50d47,`read*()`'s `trim_ws` parameter now trims both spaces and tabs (#767),1,133,FALSE,NA
readr,8ee84b23cf8cc37b4a52392951a2c525,Point release for test compatibility with tibble v1.3.1.,1,134,FALSE,NA
readr,1727028627b79ca053a971a624389524,"Fixed undefined behavior in localtime.c when using `locale(tz = """")` after loading a timezone due to incomplete reinitialization of the global locale.",1,135,FALSE,NA
readr,75b6f9c1cb2488a0e6441e4f42dad76f,"`parse_factor()` gains a `include_na` argument, to include `NA` in the factor levels (#541).",1,136,FALSE,NA
readr,60f4ca1aa1ad56bb57fc97fb0d9952cc,"`parse_factor()` will now can accept `levels = NULL`, which allows one to generate factor levels based on the data (like stringsAsFactors = TRUE) (#497).",1,137,FALSE,NA
readr,36576c23ec9b2014eb8496710c660e74,`parse_numeric()` now returns the full string if it contains no numbers (#548).,1,138,FALSE,NA
readr,412e2cde8e03022f75424d9b614cdba0,`parse_time()` now correctly handles 12 AM/PM (#579).,1,139,FALSE,NA
readr,6863e328193a8ede6c7867637672331e,`problems()` now returns the file path in additional to the location of the error in the file (#581).,1,140,FALSE,NA
readr,e0e2c1087b9f6eed86db91abcc1a3d14,"`read_csv2()` gives a message if it updates the default locale (#443, @​krlmlr).",1,141,FALSE,NA
readr,b5a5b804cfdbfaaf5b07652fc0673ba5,`read_delim()` now signals an error if given an empty delimiter (#557).,1,142,FALSE,NA
readr,c5da1b09275d5edd482786308380bfba,`write_*()` functions witting whole number doubles are no longer written with a trailing `.0` (#526).,1,143,FALSE,NA
readr,81a0089c88d5cb56680fdb3928e839d8,"`fwf_cols()` allows for specifying the `col_positions` argument of `read_fwf()` with named arguments of either column positions or widths (#616, @​jrnold).",1,144,FALSE,NA
readr,95df5f322359d2c4b8c758510c4a6137,"`fwf_empty()` gains an `n` argument to control how many lines are read for whitespace to determine column structure (#518, @​Yeedle).",1,145,FALSE,NA
readr,18f5324d0cca411314430bf4ba264053,"`read_fwf()` gives error message if specifications have overlapping columns (#534, @​gergness)",1,146,FALSE,NA
readr,dbffea8ad0627638a36122ae9858bc7e,`read_table()` can now handle `pipe()` connections (#552).,1,147,FALSE,NA
readr,6f3b1697ed3529783906ce5ce4e26b14,`read_table()` can now handle files with many lines of leading comments (#563).,1,148,FALSE,NA
readr,43efa8f892ea7f6ff8eded65bb5727d7,"`read_table2()` which allows any number of whitespace characters as delimiters, a more exact replacement for `utils::read.table()` (#608).",1,149,FALSE,NA
readr,dd3f6740062154b9e4c4ea4e2005118f,"`write_*()` functions now support writing to binary connections. In addition output filenames with `.gz`, `.bz2` or `.xz` will automatically open the appropriate connection and to write the compressed file. (#348)",1,150,FALSE,NA
readr,3e3736f0aead969728e849ea206770fa,`write_lines()` now accepts a list of raw vectors (#542).,1,151,FALSE,NA
readr,1dea8e84988320e267de0bc129fd1ba2,"`col_euro_double()`, `parse_euro_double()`, `col_numeric()`, and `parse_numeric()` have been removed.",1,152,FALSE,NA
readr,25a63c1471fee04253eeeec41a1fc75c,"`guess_encoding()` returns a tibble, and works better with lists of raw vectors (as returned by `read_lines_raw()`).",1,153,FALSE,NA
readr,bc7f9a24355c5134960bf1635726b8d2,"`ListCallback` R6 Class to provide a more flexible return type for callback functions (#568, @​mmuurr)",1,154,FALSE,NA
readr,7e28c0fd32c3cbba907d2824e984d911,`tibble::as.tibble()` now used to construct tibbles (#538).,1,155,FALSE,NA
readr,8ed2b2281256ab1aeb4e47e029bd0382,"`read_csv`, `read_csv2`, and `read_tsv` gain a `quote` argument, (#631, @​noamross)",1,156,FALSE,NA
readr,2ab1465dcafa7f7c88566ce46d1343a9,`parse_factor()` now converts data to UTF-8 based on the supplied locale (#615).,1,157,FALSE,NA
readr,d7e01e29ec3ff4b1b2a7c4aeef127788,`read_*()` functions with the `guess_max` argument now throw errors on inappropriate inputs (#588).,1,158,FALSE,NA
readr,c506b053a2fb4b0c9ffa442f472e30c2,`read_*_chunked()` functions now properly end the stream if `FALSE` is returned from the callback.,1,159,FALSE,NA
readr,0e5dd81b65923352bfc00aadba8e38c8,"`read_delim()` and `read_fwf()` when columns are skipped using `col_types` now report the correct column name (#573, @​cb4ds).",1,160,FALSE,NA
readr,4a32510d8a9f128b1f3fbb7f4ce3029e,`spec()` declarations that are long now print properly (#597).,1,161,FALSE,NA
readr,83431811b3c27b42cafe79018ca8f1b8,"`read_table()` does not print `spec` when `col_types` is not `NULL` (#630, @​jrnold).",1,162,FALSE,NA
readr,adc5425565b1fdf4b5b6901a2374ba4a,`guess_encoding()` now returns a tibble for all ASCII input as well (#641).,1,163,FALSE,NA
readr,f0c4cd5b5ca68535db023b0877c316ba,New example `extdata/challenge.csv` which is carefully created to cause problems with the default column type guessing heuristics.,1,167,FALSE,NA
readr,827d50728c212bf36da2f8fe3886091c,"Blank lines and lines with only comments are now skipped automatically without warning (#381, #321).",1,168,FALSE,NA
readr,ce7a7993d80e349ea7bfd7c4ff8cec6a,"Single '-' or '.' are now parsed as characters, not numbers (#297).",1,169,FALSE,NA
readr,f3046e2155476e5c88801e083ff8978b,"Numbers followed by a single trailing character are parsed as character, not numbers (#316).",1,170,FALSE,NA
readr,6f4e4d2ef07a456647a68570e6203bb4,We now guess at times using the `time_format` specified in the `locale()`.,1,171,FALSE,NA
readr,c34560c5d119d9db2aed783140e733a9,"If `col_types` is too long, it is subsetted correctly (#372, @​jennybc).",1,172,FALSE,NA
readr,2adeb37a299c7177c0caa82908a88c43,"If `col_names` is too short, the added names are numbered correctly (#374, @​jennybc).",1,173,FALSE,NA
readr,b659e07bc40ea87651431123a4eb1052,"Missing column name names are now given a default name (`X2`, `X7` etc) (#318). Duplicated column names are now deduplicated. Both changes generate a warning; to suppress it supply an explicit `col_names` (setting `skip = 1` if there's an existing ill-formed header).",1,174,FALSE,NA
readr,23b37bb7c9851488ea643f1b150666dd,`col_types()` accepts a named list as input (#401).,1,175,FALSE,NA
readr,885874573aa3f6c7eb0ef493508b2253,`%I` for 12 hour time format (#340).,1,176,FALSE,NA
readr,2928b90a4837a6c433b122bec34e2adc,"`%AD` and `%AT` are ""automatic"" date and time parsers. They are both slightly less flexible than previous defaults. The automatic date parser requires a four digit year, and only accepts `-` and `/` as separators (#442). The flexible time parser now requires colons between hours and minutes and optional seconds (#424).",1,177,FALSE,NA
readr,7d3c917b43e45ab551724bcdd8afcb5c,`parse_time()` returns `hms` objects rather than a custom `time` class (#409). It now correctly parses missing values (#398).,1,178,FALSE,NA
readr,be8cb2649a7ee16ef50492c7ece34639,`parse_date()` returns a numeric vector (instead of an integer vector) (#357).,1,179,FALSE,NA
readr,73d6eca73717e6c0d77eab9f2e84cf21,"`parse_date()`, `parse_time()` and `parse_datetime()` gain an `na` argument to match all other parsers (#413).",1,180,FALSE,NA
readr,21678927917bd32b229c6c0df206bb7f,"If the format argument is omitted `parse_date()` or `parse_time()`, date and time formats specified in the locale will be used. These now default to `%AD` and `%AT` respectively.",1,181,FALSE,NA
readr,1890230e1c2d4ded4cede87adeceed54,"You can now parse partial dates with `parse_date()` and `parse_datetime()`, e.g. `parse_date(""2001"", ""%Y"")` returns `2001-01-01`.",1,182,FALSE,NA
readr,1295869ab998dd202e7b59045ce237a6,`read_file_raw()` reads a complete file into a single raw vector (#451).,1,183,FALSE,NA
readr,0f42a43baf17389568e8110109967447,`read_*()` functions gain a `quoted_na` argument to control whether missing values within quotes are treated as missing values or as strings (#295).,1,184,FALSE,NA
readr,0549f1d8cce6701e9b627a934682fb5d,"`write_excel_csv()` can be used to write a csv file with a UTF-8 BOM at the start, which forces Excel to read it as UTF-8 encoded (#375).",1,185,FALSE,NA
readr,eff98e915ea25033c7d8cbfe9caf3bac,`write_lines()` writes a character vector to a file (#302).,1,186,FALSE,NA
readr,0acf03308ce0d86b5acc27ec6f8ea0be,`write_file()` to write a single character or raw vector to a file (#474).,1,187,FALSE,NA
readr,cd1701fcd85a5c7c6e0f2bb281d8e426,Experimental support for chunked reading a writing (`read_*_chunked()`) functions. The API is unstable and subject to change in the future (#427).,1,188,FALSE,NA
readr,be974201615b268e1b9e1252a03dfcf3,"Printing double values now uses an implementation of the grisu3 algorithm which speeds up writing of large numeric data frames by \~10X. (#432) '.0' is appended to whole number doubles, to ensure they will be read as doubles as well. (#483)",1,189,FALSE,NA
readr,72829918e4d1a9435987577341f54026,"readr imports tibble so that you get consistent `tbl_df` behaviour (#317, #385).",1,190,FALSE,NA
readr,3c016d40c067e69b975958e10a485e65,New example `extdata/challenge.csv` which is carefully created to cause problems with the default column type guessing heuristics.,1,191,FALSE,NA
readr,861f5629ac97a5bea203af680ebd4614,`default_locale()` now sets the default locale in `readr.default_locale` rather than regenerating it for each call. (#416).,1,192,FALSE,NA
readr,de02e05163840147690ab8b9c67fb922,`locale()` now automatically sets decimal mark if you set the grouping mark. It throws an error if you accidentally set decimal and grouping marks to the same character (#450).,1,193,FALSE,NA
readr,2682da01c28fed3355d37597fa426260,"All `read_*()` can read into long vectors, substantially increasing the number of rows you can read (#309).",1,194,FALSE,NA
readr,1ff45030fd6f317f9a57fef1aaba2a64,"All `read_*()` functions return empty objects rather than signaling an error when run on an empty file (#356, #441).",1,195,FALSE,NA
readr,d87c937936fa7070051a1765ed8105ac,"`read_delim()` gains a `trim_ws` argument (#312, noamross)",1,196,FALSE,NA
readr,2a1be251d4f00ebce880549f37ac0b68,`read_fwf()` received a number of improvements:,1,197,FALSE,NA
readr,2a1be251d4f00ebce880549f37ac0b68,"• `read_fwf()` now can now reliably read only a partial set of columns (#322, #353, #469)",2,198,FALSE,`read_fwf()` received a number of improvements:
readr,2a1be251d4f00ebce880549f37ac0b68,"• `fwf_widths()` accepts negative column widths for compatibility with the `widths` argument in `read.fwf()` (#380, @​leeper).",2,199,FALSE,`read_fwf()` received a number of improvements:
readr,2a1be251d4f00ebce880549f37ac0b68,"• You can now read fixed width files with ragged final columns, by setting the final end position in `fwf_positions()` or final width in `fwf_widths()` to `NA` (#353, @​ghaarsma). `fwf_empty()` does this automatically.",2,200,FALSE,`read_fwf()` received a number of improvements:
readr,2a1be251d4f00ebce880549f37ac0b68,• `read_fwf()` and `fwf_empty()` can now skip commented lines by setting a `comment` argument (#334).,2,201,FALSE,`read_fwf()` received a number of improvements:
readr,8437d810d0b03fa0dbef8d7cfb598635,`read_lines()` ignores embedded null's in strings (#338) and gains a `na` argument (#479).,1,202,FALSE,NA
readr,19c700674f7da55ac83239b1a9060121,`readr_example()` makes it easy to access example files bundled with readr.,1,203,FALSE,NA
readr,6f290cc956a99336e702472e37de4895,`type_convert()` now accepts only `NULL` or a `cols` specification for `col_types` (#369).,1,204,FALSE,NA
readr,55ea139cfabf0e8f570863a0b83c3eaf,"`write_delim()` and `write_csv()` now invisibly return the input data frame (as documented, #363).",1,205,FALSE,NA
readr,b7a4ebbf9bb9a72828727e829bdd2b1c,Doubles are parsed with `boost::spirit::qi::long_double` to work around a bug in the spirit library when parsing large numbers (#412).,1,206,FALSE,NA
readr,b0f2d591f0132e7ad4e46bb5b8b092d8,Fix bug when detecting column types for single row files without headers (#333).,1,207,FALSE,NA
readr,7a0db6d3ff1080d3e1ed7593154ec610,Fix bug when checking empty values for missingness (caused valgrind issue and random crashes).,1,208,FALSE,NA
readr,68ed109ac7bd6ca6b6d4a25d2329a4ae,Fixes so that readr works on Solaris.,1,209,FALSE,NA
readr,9865e6d3444c5974d5294a852c818411,"`read_csv()`, `read_tsv()`, `read_fwf()`, `read_table()`, `read_lines()`, `read_file()`, `type_convert()`, `parse_vector()` all gain a `locale` argument.",1,210,FALSE,NA
readr,8e2c191187fb30147c7610ab58be9814,`locale()` controls all the input settings that vary from place-to-place.,1,211,FALSE,NA
readr,578138ada169b8f9a486be0e858c5c7c,`col_euro_double()` and `parse_euro_double()` have been deprecated. Use the `decimal_mark` parameter to `locale()` instead.,1,212,FALSE,NA
readr,08715da9e500696768393f58993e4285,"The default encoding is now UTF-8. To load files that are not in UTF-8, set the `encoding` parameter of the `locale()` (#40). New `guess_encoding()` function uses stringi to help you figure out the encoding of a file.",1,213,FALSE,NA
readr,b6f969918648f4dacc2f6cec1c6d1eca,"`parse_datetime()` and `parse_date()` with `%B` and `%b` use the month names (full and abbreviate) defined in the locale (#242). They also inherit the tz from the locale, rather than using an explicit `tz` parameter.",1,214,FALSE,NA
readr,63afa42acffb1e164e9f5d30261ccb48,`cols()` lets you pick the default column type for columns not otherwise explicitly named (#148). You can refer to parsers either with their full name (e.g. `col_character()`) or their one letter abbreviation (e.g. `c`).,1,215,FALSE,NA
readr,4196f323a15a1ff30aaea7cd89fd004f,`cols_only()` allows you to load only named columns. You can also choose to override the default column type in `cols()` (#72).,1,216,FALSE,NA
readr,66294c020b20ad18d8c53bee776ad889,"`read_fwf()` is now much more careful with new lines. If a line is too short, you'll get a warning instead of a silent mistake (#166, #254). Additionally, the last column can now be ragged: the width of the last field is silently extended until it hits the next line break (#146). This appears to be a common feature of ""fixed"" width files in the wild.",1,217,FALSE,NA
readr,7d27f93f4dfdcd0ace33fa27d3362ffa,"In `read_csv()`, `read_tsv()`, `read_delim()` etc:",1,218,FALSE,NA
readr,7d27f93f4dfdcd0ace33fa27d3362ffa,• `comment` argument allows you to ignore comments (#68).,2,219,FALSE,"In `read_csv()`, `read_tsv()`, `read_delim()` etc:"
readr,7d27f93f4dfdcd0ace33fa27d3362ffa,• `trim_ws` argument controls whether leading and trailing whitespace is removed. It defaults to `TRUE` (#137).,2,220,FALSE,"In `read_csv()`, `read_tsv()`, `read_delim()` etc:"
readr,7d27f93f4dfdcd0ace33fa27d3362ffa,"• Specifying the wrong number of column names, or having rows with an unexpected number of columns, generates a warning, rather than an error (#189).",2,221,FALSE,"In `read_csv()`, `read_tsv()`, `read_delim()` etc:"
readr,7d27f93f4dfdcd0ace33fa27d3362ffa,"• Multiple NA values can be specified by passing a character vector to `na` (#125). The default has been changed to `na = c("""", ""NA"")`. Specifying `na = """"` now works as expected with character columns (#114).",2,222,FALSE,"In `read_csv()`, `read_tsv()`, `read_delim()` etc:"
readr,0c5744252759ac106bf5821671960a9f,`parse_character()` gains better support for embedded nulls: any characters after the first null are dropped with a warning (#202).,1,223,FALSE,NA
readr,c432c7d20aec1eba0786e2d64916f971,`parse_integer()` and `parse_double()` no longer silently ignore trailing letters after the number (#221).,1,224,FALSE,NA
readr,ff943ac43813fdff9c5dac2aa7ecde9d,"New `parse_time()` and `col_time()` allows you to parse times (hours, minutes, seconds) into number of seconds since midnight. If the format is omitted, it uses a flexible parser that looks for hours, then optional colon, then minutes, then optional colon, then optional seconds, then optional am/pm (#249).",1,225,FALSE,NA
readr,7ecbba3c5421c91d5336807a505ce3b9,`parse_date()` and `parse_datetime()`:,1,226,FALSE,NA
readr,7ecbba3c5421c91d5336807a505ce3b9,"• `parse_datetime()` no longer incorrectly reads partial dates (e.g. 19, 1900, 1900-01) (#136). These triggered common false positives and after re-reading the ISO8601 spec, I believe they actually refer to periods of time, and should not be translated in to a specific instant (#228).",2,227,FALSE,`parse_date()` and `parse_datetime()`:
readr,7ecbba3c5421c91d5336807a505ce3b9,"• Compound formats ""%D"", ""%F"", ""%R"", ""%X"", ""%T"", ""%x"" are now parsed correctly, instead of using the ISO8601 parser (#178, @​kmillar).",2,228,FALSE,`parse_date()` and `parse_datetime()`:
readr,7ecbba3c5421c91d5336807a505ce3b9,"• ""%."" now requires a non-digit. New ""%+"" skips one or more non-digits.",2,229,FALSE,`parse_date()` and `parse_datetime()`:
readr,7ecbba3c5421c91d5336807a505ce3b9,• You can now use `%p` to refer to AM/PM (and am/pm) (#126).,2,230,FALSE,`parse_date()` and `parse_datetime()`:
readr,7ecbba3c5421c91d5336807a505ce3b9,• `%b` and `%B` formats (month and abbreviated month name) ignore case when matching (#219).,2,231,FALSE,`parse_date()` and `parse_datetime()`:
readr,7ecbba3c5421c91d5336807a505ce3b9,"• Local (non-UTC) times with and without daylight savings are now parsed correctly (#120, @​andres-s).",2,232,FALSE,`parse_date()` and `parse_datetime()`:
readr,116213fa0cdc0d730d4b52960ac36eb0,`parse_number()` is a somewhat flexible numeric parser designed to read currencies and percentages. It only reads the first number from a string (using the grouping mark defined by the locale).,1,233,FALSE,NA
readr,a8f2fda47041064146e9eb92ad40ed6e,"`parse_numeric()` has been deprecated because the name is confusing - it's a flexible number parser, not a parser of ""numerics"", as R collectively calls doubles and integers. Use `parse_number()` instead.",1,234,FALSE,NA
readr,9d504ba2421e917d4991b7a5a30e9c39,New `parse_guess()` and `col_guess()` to explicitly guess column type.,1,235,FALSE,NA
readr,db016ba38fbabb27e09e39171e5d78da,Bumped up row inspection for column typing guessing from 100 to 1000.,1,236,FALSE,NA
readr,260c1861d8e9ef034b2077ab7d3bb206,"The heuristics for guessing `col_integer()` and `col_double()` are stricter. Numbers with leading zeros now default to being parsed as text, rather than as integers/doubles (#266).",1,237,FALSE,NA
readr,8862bf83d95b23ca84dc5090daf87232,A column is guessed as `col_number()` only if it parses as a regular number when you ignoring the grouping marks.,1,238,FALSE,NA
readr,bc49efa747231da9beb18d92d7572820,"Now use R's platform independent `iconv` wrapper, thanks to BDR (#149).",1,239,FALSE,NA
readr,e1088269b0503a80b3a4b43332041052,"Pathological zero row inputs (due to empty input, `skip` or `n_max`) now return zero row data frames (#119).",1,240,FALSE,NA
readr,9d0655adfcf6cf5921e244958d259b11,"When guessing field types, and there's no information to go on, use character instead of logical (#124, #128).",1,241,FALSE,NA
readr,849a6258a31d42a7fbce6052a395d229,Concise `col_types` specification now understands `?` (guess) and `-` (skip) (#188).,1,242,FALSE,NA
readr,72bedfaddfab25e9cf0c8c6b798d053b,"`count_fields()` starts counting from 1, not 0 (#200).",1,243,FALSE,NA
readr,441b6e6540125c3e6827a2c9af882b6e,`format_csv()` and `format_delim()` make it easy to render a csv or delimited file into a string.,1,244,FALSE,NA
readr,13da0e2fec620673b0c47296e94ff9d0,"`fwf_empty()` now works correctly when `col_names` supplied (#186, #222).",1,245,FALSE,NA
readr,09581bf5f53e7a591c19e22d81d2f2fd,`parse_*()` gains a `na` argument that allows you to specify which values should be converted to missing.,1,246,FALSE,NA
readr,039024366089b5fb861678f4a39d1fb8,"`problems()` now reports column names rather than column numbers (#143). Whenever there is a problem, the first five problems are printing out in a warning message, so you can more easily see what's wrong.",1,247,FALSE,NA
readr,36daf0c3c20665a0a3e19725842293d5,"`read_*()` throws a warning instead of an error is `col_types` specifies a non-existent column (#145, @​alyst).",1,248,FALSE,NA
readr,7adb3307ab49a729ad70940b57e50739,`read_*()` can read from a remote gz compressed file (#163).,1,249,FALSE,NA
readr,523a96490afdf51904998bacb378ad82,`read_delim()` defaults to `escape_backslash = FALSE` and `escape_double = TRUE` for consistency. `n_max` also affects the number of rows read to guess the column types (#224).,1,250,FALSE,NA
readr,f8fa3dfa9fa5a4d8bc5410763c0ed87d,"`read_lines()` gains a progress bar. It now also correctly checks for interrupts every 500,000 lines so you can interrupt long running jobs. It also correctly estimates the number of lines in the file, considerably speeding up the reading of large files (60s -\> 15s for a 1.5 Gb file).",1,251,FALSE,NA
readr,6bd7dc6f17ca2dfa9a48d45eb6ca69d4,"`read_lines_raw()` allows you to read a file into a list of raw vectors, one element for each line.",1,252,FALSE,NA
readr,8a12992f74651bc015a777b31f9e398f,"`type_convert()` gains `NA` and `trim_ws` arguments, and removes missing values before determining column types.",1,253,FALSE,NA
readr,97d97a40ed21aa51f8f3af808ebfbcf1,"`write_csv()`, `write_delim()`, and `write_rds()` all invisibly return their input so you can use them in a pipe (#290).",1,254,FALSE,NA
readr,df94991ff56bc163a0fb7c9490ea1a8f,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.,1,255,FALSE,NA
readr,df94991ff56bc163a0fb7c9490ea1a8f,"• Quotes are only used when they're needed (#116): when the string contains a quote, the delimiter, a new line or NA.",2,256,FALSE,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.
readr,df94991ff56bc163a0fb7c9490ea1a8f,• Double vectors are saved using same amount of precision as `as.character()` (#117).,2,257,FALSE,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.
readr,df94991ff56bc163a0fb7c9490ea1a8f,• New `na` argument that specifies how missing values should be written (#187),2,258,FALSE,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.
readr,df94991ff56bc163a0fb7c9490ea1a8f,• POSIXt vectors are saved in a ISO8601 compatible format (#134).,2,259,FALSE,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.
readr,df94991ff56bc163a0fb7c9490ea1a8f,"• No longer fails silently if it can't open the target for writing (#193, #172).",2,260,FALSE,`write_delim()` generalises `write_csv()` to write any delimited format (#135). `write_tsv()` is a helpful wrapper for tab separated files.
readr,afcf3b7c53baec545a2a021e4a900d7a,"`write_rds()` and `read_rds()` wrap around `readRDS()` and `saveRDS()`, defaulting to no compression (#140, @​nicolasCoutin).",1,261,FALSE,NA
readxl,604c9871d01005653fd45aa1b05c06ae,"We embed a development version of libxls (https://github.com/libxls/libxls), which is based on the most recent released version, v1.6.2. The reason for embedding a development version is to ship a version of libxls that incorporates the fix for this CVE (#679):",1,1,FALSE,NA
readxl,604c9871d01005653fd45aa1b05c06ae,• CVE-2021-27836,2,2,FALSE,"We embed a development version of libxls (https://github.com/libxls/libxls), which is based on the most recent released version, v1.6.2. The reason for embedding a development version is to ship a version of libxls that incorporates the fix for this CVE (#679):"
readxl,ad66e3eef550811e5505945e9215ada5,readxl no longer declares the use of C++11.,1,3,FALSE,NA
readxl,1d8489752d7251a895c702cd34f8005a,readxl should once again compile on Alpine Linux.,1,4,FALSE,NA
readxl,bcc721bb523fa0de651ec78410978544,"Other small readxl-specific patches have been made to the embedded libxls code to comply with CRAN requests, such as avoiding the use of `sprintf()`.",1,5,FALSE,NA
readxl,fcddc046a891a144028622c7480f1c48,Updating the embedded version of libxls (more below),1,6,FALSE,NA
readxl,cf9fc6d8ce811c92c54d4987bb0b1ed0,Switching from Rcpp to cpp11 (more below),1,7,FALSE,NA
readxl,52670c60f7eb4d95f9a5b5599dab248d,Refactoring to reduce duplication between the `.xls` and `.xlsx` branches,1,8,FALSE,NA
readxl,fbd0e7abace6213b36e91b9340758604,"""Date or Not Date"": The classification of number formats as being datetime-ish is more sophisticated and should no longer be so easily fooled by, e.g., colours or currencies. This affects cell and column type guessing, hopefully for the better (#388, #559, @​nacnudus, @​reviewher).",1,9,FALSE,NA
readxl,35851d3ef00c886adcfca058ee4efe51,"Cell location is determined more robustly in `.xlsx` files, guarding against the idiosyncratic way in which certain 3rd party tools include (or, rather, do not include) cell location in individual cell nodes (#648, #671).",1,10,FALSE,NA
readxl,d3c8597927b0382fdd196f8f324ab39d,"Warning messages for impossible dates are more specific. Unsupported dates prior to 1900 have their own message now, instead of being lumped in with dates on the non-existent day of February 29, 1900 (#551, #554, @​cderv).",1,11,FALSE,NA
readxl,caca5ca6123c951fdaae40777abb997f,readxl is now licensed as MIT (#632).,1,12,FALSE,NA
readxl,37f4b81ee92cd2aa128c83c1e3e65ae7,"readxl now states its support for R \>= 3.4 explicitly. Why 3.4? Because the tidyverse policy is to support the current version, the devel version, and four previous versions of R. It was necessary to introduce a minimum R version, in order to state a minimum version for a package listed in `LinkingTo`.",1,13,FALSE,NA
readxl,632c38176ac29f8b3328dfc201d41361,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:,1,14,FALSE,NA
readxl,632c38176ac29f8b3328dfc201d41361,• v1.6.2,2,15,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,632c38176ac29f8b3328dfc201d41361,• v1.6.1,2,16,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,632c38176ac29f8b3328dfc201d41361,• v1.6.0,2,17,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,632c38176ac29f8b3328dfc201d41361,• v1.5.3,2,18,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,632c38176ac29f8b3328dfc201d41361,• v1.5.2,2,19,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,632c38176ac29f8b3328dfc201d41361,• v1.5.1,2,20,FALSE,readxl embeds libxls v1.6.2 (the previous release embedded v1.5.0). The libxls project is hosted at https://github.com/libxls/libxls and you can learn more about the cumulative changes in its release notes:
readxl,f33ac57b1ee7e688fae63ac28d70dbe4,"readxl has switched from Rcpp to cpp11 and now requires C++11 (#659, @​sbearrows).",1,21,FALSE,NA
readxl,362a7fade346448a7c4b046a012c15cf,"The minimum version of tibble has been bumped to 2.0.1 (released 2019-01-12), completing the transition to an approach to column name repair used across the tidyverse.",1,22,FALSE,NA
readxl,bcb94e395327433f05b29b16daf5d5d6,CVE-2018-20452,1,23,FALSE,NA
readxl,5cff92727bfb98ff6d91f0b5ee9dbe6c,CVE-2018-20450,1,24,FALSE,NA
readxl,df9a8cb04e01f1f4dc14b290a9e12303,Column Names is a new article about this feature.,1,25,FALSE,NA
readxl,20d38ac3d2989f455a1a2150f86c558a,"readxl delegates name repair to tibble, therefore the installed tibble version determines how names are repaired.",1,26,FALSE,NA
readxl,32c900b2b90151fcb2de168f1b1bb058,"If tibble \>= v2.0.0, the full power of `.name_repair` is available, defaulting to `.name_repair = ""unique""`. Otherwise, the legacy function `tibble::repair_names(prefix = ""X"", sep = ""__"")` is used, replicating the behaviour of readxl v1.1.0.",1,27,FALSE,NA
readxl,32c900b2b90151fcb2de168f1b1bb058,• Consider a spreadsheet with three columns: one unnamed and two named `x`.,2,28,FALSE,"If tibble \>= v2.0.0, the full power of `.name_repair` is available, defaulting to `.name_repair = ""unique""`. Otherwise, the legacy function `tibble::repair_names(prefix = ""X"", sep = ""__"")` is used, replicating the behaviour of readxl v1.1.0."
readxl,32c900b2b90151fcb2de168f1b1bb058,"• Content of cells in Excel: `""""`, `x`, `x`",2,29,FALSE,"If tibble \>= v2.0.0, the full power of `.name_repair` is available, defaulting to `.name_repair = ""unique""`. Otherwise, the legacy function `tibble::repair_names(prefix = ""X"", sep = ""__"")` is used, replicating the behaviour of readxl v1.1.0."
readxl,32c900b2b90151fcb2de168f1b1bb058,"• New style column names: `..1`, `x..2`, `x..3`",2,30,FALSE,"If tibble \>= v2.0.0, the full power of `.name_repair` is available, defaulting to `.name_repair = ""unique""`. Otherwise, the legacy function `tibble::repair_names(prefix = ""X"", sep = ""__"")` is used, replicating the behaviour of readxl v1.1.0."
readxl,32c900b2b90151fcb2de168f1b1bb058,"• Legacy column names: `X__1`, `x`, `x__1`",2,31,FALSE,"If tibble \>= v2.0.0, the full power of `.name_repair` is available, defaulting to `.name_repair = ""unique""`. Otherwise, the legacy function `tibble::repair_names(prefix = ""X"", sep = ""__"")` is used, replicating the behaviour of readxl v1.1.0."
readxl,c3cb6ba148abdfa68c6cfe021d48f531,"Once per session, readxl emits a message stating that it works best with tibble \>= v2.0.0. It is anticipated that this will become a hard minimum version requirement in a future version of readxl.",1,32,FALSE,NA
readxl,9f604e30bfb3c7f5983f3751dd08bd5d,"`read_excel()` and friends gain a `progress` argument that controls a progress spinner (#243, #538).",1,33,FALSE,NA
readxl,071b79c174da824e1a335e58f0ba03d3,`read_xls()` and `read_xlsx()` pass the `trim_ws` argument along (#514).,1,34,FALSE,NA
readxl,2318ac4ef0e4acdfa9f534160dd682dc,"readxl has a new article on reading Excel files with multiple header rows (#486, #492 @​apreshill).",1,35,FALSE,NA
readxl,c77863169119e0ebc5ad71a844a4ef76,"xlsx files that do not have a ""styles"" part can now be read (#505, #506 @​jt6)",1,36,FALSE,NA
readxl,78c8a2b6c6a07c6554148f841f46ab7f,"All paths are passed through `normalizePath()` (#498, #499, new behaviour for xlsx but not xls) and `enc2native()` (#370).",1,37,FALSE,NA
readxl,ad8c49cc18bf2df1bc2c8e73d931a49d,"`read_excel()` and `excel_sheets()` associate a larger set of file extensions with xlsx and are better able to guess the format of a file with a nonstandard or missing extension. This is about deciding whether to treat a file as xls or xlsx. (#342, #411, #457)",1,38,FALSE,NA
readxl,ad8c49cc18bf2df1bc2c8e73d931a49d,• `excel_format()` is the newly-exported format-guessing function.,2,39,FALSE,"`read_excel()` and `excel_sheets()` associate a larger set of file extensions with xlsx and are better able to guess the format of a file with a nonstandard or missing extension. This is about deciding whether to treat a file as xls or xlsx. (#342, #411, #457)"
readxl,ad8c49cc18bf2df1bc2c8e73d931a49d,"• `format_from_ext()` is a low-level helper, also exported, that only consults file extension. In addition to the obvious interpretation of `.xls` and `.xlsx`, the extensions `.xlsm`, `.xltx`, and `.xltm` are now associated with xlsx.",2,40,FALSE,"`read_excel()` and `excel_sheets()` associate a larger set of file extensions with xlsx and are better able to guess the format of a file with a nonstandard or missing extension. This is about deciding whether to treat a file as xls or xlsx. (#342, #411, #457)"
readxl,ad8c49cc18bf2df1bc2c8e73d931a49d,"• `format_from_signature()` is a low-level helper, also exported, that consults the file's signature (a.k.a. magic number). It's handy for files that lack an extension.",2,41,FALSE,"`read_excel()` and `excel_sheets()` associate a larger set of file extensions with xlsx and are better able to guess the format of a file with a nonstandard or missing extension. This is about deciding whether to treat a file as xls or xlsx. (#342, #411, #457)"
readxl,562d666d21ddf9c09e5dd0425d9e81b2,"Embedded libxls has been updated to address security vulnerabilitities identified in late 2017 (#441, #442).",1,42,FALSE,NA
readxl,562d666d21ddf9c09e5dd0425d9e81b2,"• CVE-2017-12110, CVE-2017-2896, and CVE-2017-2897 were demonstrated to affect readxl v1.0.0. These have been addressed in libxls and the embedded version of libxls incorporates those fixes.",2,43,FALSE,"Embedded libxls has been updated to address security vulnerabilitities identified in late 2017 (#441, #442)."
readxl,562d666d21ddf9c09e5dd0425d9e81b2,"• Although CVE-2017-12111 and CVE-2017-2919 mention readxl, the notices clarify that these CVEs do not actually affect readxl. Both have been fixed in libxls for quite a while: CVE-2017-12111 since 2014 and CVE-2017-2919 since 2012.",2,44,FALSE,"Embedded libxls has been updated to address security vulnerabilitities identified in late 2017 (#441, #442)."
readxl,6f9343ec36faf21ebcd9a0582f5e12a9,"xlsx structured as a ""minimal conformant SpreadsheetML package"" can be read. Most obvious feature of such sheets is the lack of an `xl/` directory in the unzipped form. (xlsx, #435, #437)",1,45,FALSE,NA
readxl,92266d86cd19b96aa65a3191886534db,"Reading xls sheet with exactly 65,536 rows no longer enters an infinite loop. (xls, #373, #416, #432 @​vkapartzianis)",1,46,FALSE,NA
readxl,dc1222ed83ac857c258b47dc9e6471d9,"Doubles, including datetimes, coerced to character from xls now have much higher precision, comparable to the xlsx behaviour. (xls, #430, #431)",1,47,FALSE,NA
readxl,cbfcc8fac774f533ea23a87e4c15082f,"Integer-y numbers larger than 2\^31 are coerced properly to string (xls, #346)",1,48,FALSE,NA
readxl,0f4f867d8094ce28454fd7061b5ac77e,"Shared strings are only compared to NA strings after lookup, never on the basis of their index. (xlsx, #401)",1,49,FALSE,NA
readxl,3fac1a8feda9b57efbf4fd2f24c7f60d,Better checks and messaging around nonexistent files. (#392),1,50,FALSE,NA
readxl,1eb1b398bdf954b79a19cffbd96e39fd,Add `$(C_VISIBILITY)` to compiler flags to hide internal symbols from the dll. (#385 @​jeroen),1,51,FALSE,NA
readxl,8270e41788009fe38417021dd7a13abd,"Numeric data in a logical column now coerces properly to logical. (xlsx, #385 @​nacnudus)",1,52,FALSE,NA
readxl,a95ba9261789bb331c5fc318f69af5f7,"`range` is a new argument for reading a rectangular range, possibly open. (#314, #8)",1,53,FALSE,NA
readxl,338f840dada1c61151bc7d7b0b135688,"`n_max` is a new argument that limits the number of data rows read. (#306, #281)",1,54,FALSE,NA
readxl,eb05c89b14bec5c39d17255a3bbfd864,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry.",1,55,FALSE,NA
readxl,eb05c89b14bec5c39d17255a3bbfd864,"• Eliminates a source of trailing rows (#203) and columns (#236, #162, #146) consisting entirely of `NA`.",2,56,FALSE,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry."
readxl,eb05c89b14bec5c39d17255a3bbfd864,"• Eliminates a subtle source of disagreement between user-provided column names and guessed column types (#169, #81).",2,57,FALSE,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry."
readxl,eb05c89b14bec5c39d17255a3bbfd864,"• Embedded empty columns are no longer automatically dropped, regardless of whether there is a column name. (#157, #261)",2,58,FALSE,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry."
readxl,eb05c89b14bec5c39d17255a3bbfd864,"• Worksheets that are completely empty or that contain only column names no longer error, but return a tibble with zero rows. (#222, #144, #65)",2,59,FALSE,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry."
readxl,eb05c89b14bec5c39d17255a3bbfd864,"• Improved handling of leading and embedded blank rows and explicit row skipping. (#224, #194, #178, #156, #101)",2,60,FALSE,"Empty cells, rows, columns (xlsx #248 and #240, xls #271): Cells with no content are no longer loaded, even if they appear in the file. Affects cells that have no data but that carry explicit formatting, detectable in Excel as seemingly empty cells with a format other than ""General"". Such cells may still exist in the returned tibble, with value `NA`, depending on the sheet geometry."
readxl,6bda17ea06aef11320c165f7b3ab8f65,"User-supplied `col_names` are processed relative to user-supplied `col_types`, if given. Specifically, `col_names` is considered valid if it has the same length as `col_types`, before *or after* removing skipped columns. (#81, #261)",1,61,FALSE,NA
readxl,b2bcc27bceaf5e4836a81c9d15f54768,"`""list""` is a new accepted value for `col_types`. Loads data as a list of length-1 vectors, that are typed using the logic from `col_types = NULL`, but on a cell-by-cell basis (#262 @​gergness).",1,62,FALSE,NA
readxl,72b3771bf2ee6f3ba79b2fa6cdd5157a,"`""logical""` is a new accepted value for `col_types`. When `col_types = NULL`, it is the guessed type for cells Excel advertises as Boolean. When a column has no data, it is now filled with logical `NA`. (#277, #270)",1,63,FALSE,NA
readxl,741ed2a6c5c3ddbd1e0178b807a3ba38,"`""guess""` is a new accepted value for `col_types`. Allows the user to specify some column types, while allowing others to be guessed (#286)",1,64,FALSE,NA
readxl,74574bd71b6e2f651f62cb0db697cf60,"A user-specified `col_types` of length one will be replicated to have length equal to the number of columns. (#127, #114, #261)",1,65,FALSE,NA
readxl,e8f55cbbfeaba5cc382b51fd1cbf9d9b,"`""blank""` has been deprecated in favor of the more descriptive and readr-compatible `""skip""`, which is now the preferred way to request that a column be skipped. (#260, #193, #261)",1,66,FALSE,NA
readxl,4dadb02ba380355fa4569b8a229bf8f6,"`guess_max` is a new argument that lets user adjust the number of rows used to guess column types. (#223, #257 @​tklebel and @​jennybc)",1,67,FALSE,NA
readxl,c51d213760de89ce4213a72bbd4a0417,"`trim_ws` is a new argument to remove leading and trailing whitespace. It defaults to `TRUE`. (#326, #211)",1,68,FALSE,NA
readxl,5af6b7ecc52f210fa9c9c74d427d501c,"`na` can now hold multiple NA values, e.g., `read_excel(""missing-values.xls"", na = c(""NA"", ""1""))`. (#13, #56, @​jmarshallnz)",1,69,FALSE,NA
readxl,568bcc72d700455958c85153491a652f,Coercions and cell data:,1,70,FALSE,NA
readxl,568bcc72d700455958c85153491a652f,"• Numeric data that appears in a date column is coerced to a date. Throws a warning. (#277, #266)",2,71,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,"• Dates that appear in a numeric column are converted to `NA` instead of their integer representation. Throws warning. (#277, #263)",2,72,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,"• ""Number stored as text"": when a text cell is found in a numeric column, `read_excel()` attempts to coerce the string to numeric and falls back to `NA` if unsuccessful. Throws warning. (#277, #217, #106)",2,73,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,"• Cells in error are treated as blank and are imported as `NA` (instead of the string `""error""`). (#277, #62)",2,74,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,"• BoolErr cells are now handled in xls. Suppresses message `""Unknown type: 517""`. (#274, #259)",2,75,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,• Dates that arise from a formula are treated as dates (vs. numeric) in xls. (#277),2,76,FALSE,Coercions and cell data:
readxl,568bcc72d700455958c85153491a652f,"• Dates in .xlsx files saved with LibreOffice are now recognized as such. (#134, @​zeehio)",2,77,FALSE,Coercions and cell data:
readxl,629861c68c66d4ca74c57ecdd07aab24,"Namespace prefixes are now stripped from element names and attributes when parsing XML from xlsx. Workaround for the creative approach taken in some other s/w, coupled with rapidxml's lack of namespace support. (#295, #268, #202, #80)",1,78,FALSE,NA
readxl,30cb23970ac0ba2fae245ed874512c50,"Excel mixes 0- and 1-indexing in reported row and column dimensions for xls and libxls expects that. Other s/w may index from 0 for both, preventing libxls from reading the last column. Patched to restore access to those cells. (#273, #180, #152, #99)",1,79,FALSE,NA
readxl,ee3071ecbd03fcdbb43edff67efea387,"More robust logic for sheet lookup in xlsx. Improves compatibility with xlsx written by a variety of tools and/or xlsx containing chartsheets. (#233, #104, #200, #168, #116, @​jimhester and @​jennybc)",1,80,FALSE,NA
readxl,3567b33ba7c892882d2a7c0ac6a283a6,"The `numFmtId` attribute is no longer accessed when it does not exist (xlsx written by https://www.epplussoftware.com). (#191, #229)",1,81,FALSE,NA
readxl,10584b4ec7072607e7f635772a0618bd,"Location is inferred for cells that do not declare their location (xlsx written by JMP). (#240, #163, #102)",1,82,FALSE,NA
readxl,9e8f47c2bb42e2a53403c5bd66f8fa8b,"`read_xls()` and `read_xlsx()` are now exposed, such that files without an `.xls` or `.xlsx` extension can be read. (#85, @​jirkalewandowski)",1,83,FALSE,NA
readxl,c7872111b2b4572bdfbefb6da2af2606,"The Lotus 1-2-3 leap year bug is now accounted for, i.e. date-times prior to March 1, 1900 import correctly. Date-times on the non-existent leap day February 29, 1900 import as NA and throw a warning. (#264, #148, #292)",1,84,FALSE,NA
readxl,54dbac97d30f9c78ec16119d3a856161,"The tibble package is now imported (#175, @​krlmlr) and `tibble::repair_names()` is used to prevent empty, `NA`, or duplicated column names. (#216, #208, #199 #182, #53, #247).",1,85,FALSE,NA
readxl,7dae9a641e723ce9a5402a525f48d478,"Default column names for xlsx now start with X\_\_1 instead of X\_\_0. (#98, @​zeehio, @​krlmlr)",1,86,FALSE,NA
readxl,20a4d407ab36dde6bb6a6de46e172539,"Fix compilation warnings/failures (FreeBSD 10.3 #221, gcc 4.9.3 #124) and/or problems reading xls (CentOS 6.6 #189). (#244, #245, #246 @​jeroen)",1,87,FALSE,NA
readxl,bda2c45743e87880fcb95be24b771be8,"Unwanted printed output (e.g., `DEFINEDNAME: 21 00 00 ...`) is suppressed when reading xls that contains a defined range. (#82, #188, @​PedramNavid)",1,88,FALSE,NA
readxl,1b958f781e6589abed651643dd7fc3b7,"Add support for correctly reading strings in .xlsx files containing escaped unicode characters (e.g. `_x005F_`). (#51, @​jmarshallnz)",1,89,FALSE,NA
reprex,ab88b331c109780a51f6e2f0d33a71d6,"`reprex()` no longer includes the full traceback by default, as this is only useful in relatively rare situations, and otherwise adds a bunch of clutter (#448).",1,1,FALSE,NA
reprex,4c080382092c712142536e8b0e4f18a0,"The ad placed by `reprex(advertise = TRUE)` has been tweaked for `venue = ""gh""` (and, therefore, for its aliases `""so""` and `""ds""`) and `venue = ""slack""` (#395).",1,2,FALSE,NA
reprex,e02ad358959e1027f255097dd5ca6748,"reprex takes advantage of rlang 1.0.0's improved support for backtraces in knitted documents and sets the option `rlang_backtrace_on_error_report = ""full""` (#377).",1,3,FALSE,NA
reprex,0958850bca466c0ea549caab1856b0ae,"`reprex_rtf()` (a shortcut for `reprex(venue = ""rtf"")`) now works on Windows, even if one of the (possibly temporary) filepaths contains a space, e.g. because the username contains a space (#409, @​cderv).",1,4,FALSE,NA
reprex,2a257820f1daccd609b3777af5ad4b99,"The RStudio addin no longer displays a warning about condition length when selecting 'current file' as the reprex source (#391, @​bisaloo).",1,5,FALSE,NA
reprex,262d77f1b2a309132d2b694f1965e240,Internal matters:,1,6,FALSE,NA
reprex,262d77f1b2a309132d2b694f1965e240,"• Help files below `man/` have been re-generated, so that they give rise to valid HTML5. (This is the impetus for this release, to keep the package safely on CRAN.)",2,7,FALSE,Internal matters:
reprex,262d77f1b2a309132d2b694f1965e240,"• reprex's condition signalling has been updated to use the current approaches provided by the cli, rlang, and lifecycle packages.",2,8,FALSE,Internal matters:
reprex,855cb5a22a902eafbd020b120e07a89d,"When `reprex()` is called without `expr` or `input`, in a context where the user's clipboard can't be reached from R, the default is now to consult the current selection for reprex source. Previously this was only available via the `reprex_selection()` addin. Note that this ""current selection"" default behaviour propagates to convenience wrappers around `reprex()`, such as `reprex_locale()` and venue-specific functions like `reprex_r()`, and to the un-`reprex()` functions, such as `reprex_clean()`.",1,9,FALSE,NA
reprex,6f7c39ae08dca189cc6c5a8c701efba0,"In this context, the file containing the (un)rendered reprex is opened so the user can manually copy its contents.",1,10,FALSE,NA
reprex,1f5e662a07cbdb94d29a26e6efc20993,"To reprex in the current working directory,\ Previously: `reprex(outfile = NA)`\ Now: `reprex(wd = ""."")`\ More generally, usage looks like `reprex(wd = ""path/to/desired/wd"")`.",1,11,FALSE,NA
reprex,b2804db1b6872855a76257c763c05629,"If you really care about reprex filename (and location), write your source to `path/to/stuff.R` and call `reprex(input = ""path/to/stuff.R"")`. When `input` is a filepath, that filepath determines the working directory and how reprex files are named and `wd` is never even consulted.",1,12,FALSE,NA
reprex,9c1627c40fd142f5df3778f82d8e55aa,We explicitly make sure that the working directory of the `callr::r()` call is the same as the effective working directory of the reprex.,1,13,FALSE,NA
reprex,fcacb0dedf81817ecf330bf9505a511d,We alert the user that a local `.Rprofile` has been found.,1,14,FALSE,NA
reprex,318ded109ff5233b9a58943ca1d3176f,We indicate the usage of a local `.Rprofile` in the rendered reprex.,1,15,FALSE,NA
reprex,6ff00e9ab740556ec9aff00f2d5e50c0,rstudioapi moves from Suggests to Imports. Related to improving the experience when reprex cannot access the user's clipboard.,1,16,FALSE,NA
reprex,d3013ea5d1d23740ece29f5389c533bf,mockr is new in Suggests; it's used in the tests.,1,17,FALSE,NA
reprex,4d75e4676b785166b13ea6dc4cafec17,"We bumped the documented minimum version of Pandoc, because we use the `gfm` markdown variant to get GitHub-Flavored Markdown. The `gfm` variant was introduced in Pandoc 2.0 (released 2017-10-29).",1,18,FALSE,NA
reprex,eeeee6c2da7c78dba2e930922fe51fa0,"`reprex_VENUE(...)` is a new way to call `reprex(..., venue = ""VENUE"")`. For example, `reprex_r()` is equivalent to `reprex(venue = ""r"")`. This makes non-default venues easier to access via auto-completion (#256).",1,19,FALSE,NA
reprex,1f1faa18ed291e02071967fc4c6be43c,"`""slack""` is a new venue that tweaks the default Markdown output for pasting into Slack messages. It removes the `r` language identifier from the opening code fence, simplifies image links and, by default, suppresses the ad. Note that `venue = ""slack""` or `reprex_slack()` work best for people who opt-out of the WYSIWYG message editor: in *Preferences \> Advanced*, select ""Format messages with markup"".",1,20,FALSE,NA
reprex,43046aef36750786ebd67816862be2e8,"`venue = ""so""` (SO = Stack Overflow) has converged with default `venue = ""gh""` (GitHub). As of January 2019, SO supports CommonMark fenced code blocks. The only remaining difference is that Stack Overflow does not support the collapsible details tag that we use on GitHub to reduce the clutter from, e.g., session info (#231).",1,21,FALSE,NA
reprex,58c57c1558c4ca76c3ac257530923813,"`""rtf""` (Rich Text Format) is a new experimental `venue` for pasting into applications like PowerPoint and Keynote. It is experimental because it requires a working installation of the highlight command line tool, which is left as a somewhat fiddly exercise for the user (#331). `venue = ""rtf""` is documented in its own article.",1,22,FALSE,NA
reprex,8a1c1008ada7f27c6a2b8b6e00060e41,"`reprex.current_venue` is a new read-only option that is set during `reprex_render()`. Other packages can use it to generate `reprex()`-compatible, `venue`-aware output, such as an renv lockfile.",1,23,FALSE,NA
reprex,2b18b29d33515ecaccc875ebb75c5d4e,`reprex()` has been internally refactored to make better use of the official machinery for extending rmarkdown:,1,24,FALSE,NA
reprex,2b18b29d33515ecaccc875ebb75c5d4e,• `reprex_document()` is a new R Markdown output format.,2,25,FALSE,`reprex()` has been internally refactored to make better use of the official machinery for extending rmarkdown:
reprex,2b18b29d33515ecaccc875ebb75c5d4e,• `reprex_render()` is a newly exported function.,2,26,FALSE,`reprex()` has been internally refactored to make better use of the official machinery for extending rmarkdown:
reprex,2b18b29d33515ecaccc875ebb75c5d4e,"• A `reprex_document()` is designed to be rendered with `reprex_render()`. `reprex_render()` is designed to act on a `reprex_document()`. This is (still) the heart of what the `reprex()` function does, in addition to various interface and workflow niceties.",2,27,FALSE,`reprex()` has been internally refactored to make better use of the official machinery for extending rmarkdown:
reprex,2b18b29d33515ecaccc875ebb75c5d4e,"• Two R Markdown templates ship with the package, which an RStudio user can access via *File \> New File \> R Markdown ... \> From Template*. One is minimal; the other uses lots of reprex features. Both include `knit: reprex::reprex_render` in the YAML, which causes the RStudio ""Knit"" button to use `reprex_render()`.",2,28,FALSE,`reprex()` has been internally refactored to make better use of the official machinery for extending rmarkdown:
reprex,2f36800e13e14c5406aeba36ed28d9f8,"`prex()`, `prex_VENUE()`, and `prex_render()` are new **unexported** functions that, like `reprex()`, render a small bit of code, but with much less **re**producibility! The code is evaluated in the global workspace of the current process, with the current working directory. This pragmatic hack is useful when preparing a series of related snippets, e.g., for a Keynote or PowerPoint presentation, and there's not enough space to make each one self-contained.",1,29,FALSE,NA
reprex,70588e6c586ec2c49a436428e6d126d8,"UTF-8 encoding: Following the lead of knitr, reprex makes explicit use of UTF-8 internally (#237 @​krlmlr, #261).",1,30,FALSE,NA
reprex,dd4e06ce87c104e63460c945391374df,"When the reprex causes R to crash, `reprex(std_out_err = TRUE)` is able to provide more information about the crash, in some cases (#312).",1,31,FALSE,NA
reprex,15040597a84b5d1baedb84d6876b2ff3,"The `tidyverse_quiet` argument and `reprex.tidyverse_quiet` option also control startup messages from the tidymodels meta-package (#326, @​juliasilge).",1,32,FALSE,NA
reprex,c4512ffa14f2bb6aa72fc3a783d4f592,`reprex_locale()` is a new thin wrapper around `reprex()` that renders in a temporarily-altered locale (#250).,1,33,FALSE,NA
reprex,bb2010ee8be45f8aa5ea2287ed876430,"The `si` argument of `reprex()` is now `session_info`. Being explicit seems more important than saving characters, given auto-completion.",1,34,FALSE,NA
reprex,c87ba6b9a930e45c31d95ba996b302df,"The `show` argument of `reprex()` is now `html_preview`, for the sake of consistency with other R Markdown output formats.",1,35,FALSE,NA
reprex,468cf1ffa0c320359f6040177b9995ee,"New article on techniques for making package startup quieter (#187, @​marionlouveaux).",1,36,FALSE,NA
reprex,2698c5119e8da6f705deb2a8bde3610f,"sessioninfo is new in Suggests, replacing devtools.",1,37,FALSE,NA
reprex,277c44bf7e2bc54459da54f494eaaeda,"glue is new in Imports, replacing whisker.",1,38,FALSE,NA
reprex,3b9560b1aa85d23123c210fa2cc7f6e9,"knitr moves from Suggests to Imports (although it was already a hard dependency via rmarkdown), so we can require v1.23 or higher, which represents a major switch to UTF-8.",1,39,FALSE,NA
reprex,f0701ea31c41f3332ee34efab6ed1b64,cli is new in Imports.,1,40,FALSE,NA
reprex,67f4ebadcc162ec4ffec218d253ba7eb,"reprex now relies on testthat \>= 3.0.0 and, specifically, uses third edition features.",1,41,FALSE,NA
reprex,518ce1334bb51d99de3369fa1d22ee73,"The `crayon.enabled` option is explicitly set to `FALSE` when rendering the reprex (#238, #239).",1,42,FALSE,NA
reprex,4002e720d22b3e8d0efbe42c7f0cc1e6,"Expression input is once again captured via `substitute()` (as opposed to `rlang::enexpr()`), which is more favorable for reprexes involving tidy eval (#241).",1,43,FALSE,NA
reprex,b3ee4e1665485cf2a7cc0cf54f320b15,"New venue ""html"" to render HTML fragments, useful for pasting in sites without markdown but that allow HTML (#236 @​cwickham).",1,44,FALSE,NA
reprex,0d64e81f114f3a1b410410d41b60ed4f,The YAML of reprex's template has been updated in light of the stricter YAML parser used in Pandoc \>= 2.2.2.,1,45,FALSE,NA
reprex,9e7a20a7c9b14508fbedaf5f954163b0,`rlang::set_attrs()` has been soft-deprecated and is no longer used internally.,1,46,FALSE,NA
reprex,c1599bc75056cf874a97537fb7e63e8d,"The reprex ad is formatted as superscript for `venue = ""gh""` and `venue = ""so""`, i.e. it is more subtle (#201).",1,47,FALSE,NA
reprex,3f82712bb5a4e9988fccea2a006a4c0d,"New experimental venue ""rtf"" produces syntax highlighted snippets suitable for pasting into presentation software such as Keynote or PowerPoint. This venue is discussed in an article (#26).",1,48,FALSE,NA
reprex,43fa2ef79bc31ae77caa0e0e218ff58e,Arguments `opts_chunk` and `opts_knit` have been removed from `reprex()`. The same effect has always been achievable via roxygen comments in the reprex code and the examples have always demonstrated this. Overriding knitr options doesn't seem to come up often enough in real-world `reprex()` usage to justify these arguments.,1,49,FALSE,NA
reprex,e9c51d8fab40d740e3de8b05c7972577,Internal file system operations use the fs package. This should not make any user-facing changes in reprex and we definitely want to know if it does.,1,50,FALSE,NA
reprex,ff291d5b1f28f0cc4fe9d2e9ac573e39,"`advertise`: toggles inclusion of a footer that describes when and how the reprex was created, e.g., ""Created on 2017-11-16 by the reprex package (v0.1.1.9000)"". Defaults to `TRUE` (#121, #69).",1,51,FALSE,NA
reprex,29e38ba46c971ffea2bc884ae48f0d3c,"`style`: requests code restyling via the newly-Suggested styler package. styler can cope with tidyeval syntactical sugar, e.g. `df %>% group_by(!! group_var)`. Defaults to `FALSE` (#108, #94).",1,52,FALSE,NA
reprex,99bb14ba52901f261dc36063222e8125,"`tidyverse_quiet`: affords control of the startup message of the tidyverse meta-package. Defaults to `TRUE`, i.e. suppresses the message (important special case of #70, #100).",1,53,FALSE,NA
reprex,70cf1055153ccf51c41c160c12f534b9,"`std_out_err`: appends output sent to stdout and stderr by the reprex rendering process. This can be necessary to reveal output if the reprex spawns child processes or has `system()` calls. Defaults to `FALSE` (#90, #110).",1,54,FALSE,NA
reprex,ea0baa1b2147498e941c06c6340ff045,`render`: determines if the reprex is actually rendered or just returns after producing the templated `.R` file. For internal testing.,1,55,FALSE,NA
reprex,a4233fa4b0b00a9a96615532cdaa203c,"Line wrapping is preserved from source via a Pandoc option (#145 @​jimhester, #175).",1,56,FALSE,NA
reprex,ee114d66cb79309984a604dee3040129,"`venue = ""gh""` now targets CommonMark as the standard for GitHub Flavored Markdown (#77).",1,57,FALSE,NA
reprex,b3d0eddfdbd05a68e91b8897cc23d8c2,"`venue = ""so""` has appropriate whitespace at the start.",1,58,FALSE,NA
reprex,5116de9193b6aefe26b8475d18b60b62,"`venue = ""ds""` is a new value, corresponding to https://www.discourse.org, which is the platform behind community.rstudio.com. This is currently just an alias for the default `""gh""` GitHub venue, because the formatting appears to be compatible. Adding the `""ds""` value so Discourse can be documented and to guard against the possibility that some formatting is actually unique.",1,59,FALSE,NA
reprex,aa1933cd9377636f4dbc4e11652d4371,"The `keep.source` option is set to `TRUE` when rendering the reprex, so reprexes involving srcrefs should work (#152).",1,60,FALSE,NA
reprex,ee89a85d077e409f2b98c7a4fed73f2c,"The ""undo"" functions (`reprex_invert()`, `reprex_clean()`, `reprex_rescue()`) handle `input` and `outfile` like `reprex()` does. The `outfile` argument is new (#129, #68).",1,61,FALSE,NA
reprex,3896e0f3a0c952e49aa2392a259367ff,"The default value for knitr's `upload.fun` is now set according to the venue. It is `knitr::imgur_upload()` for all venues except `""r""`, where it is `identity` (#125).",1,62,FALSE,NA
reprex,80bed43b9f38990889fe50566223baf2,"The HTML preview should appear in the RStudio Viewer more consistently, especially on Windows (#75 @​yutannihilation).",1,63,FALSE,NA
reprex,ed1c8e2303d1624c7c7e4280500b46f4,More rigorous use of UTF-8 encoding (#76 @​yutannihilation).,1,64,FALSE,NA
reprex,e6060cd67c93c4d21c38246526712adb,"Expression input handling has been refactored. As a result, formatR is no longer Suggested. Trailing comments -- inline and on their own line -- are also now retained (#89, #91, #114, @​jennybc and @​jimhester).",1,65,FALSE,NA
reprex,d5e8acd0338a5fedd64212374b9332f2,"Custom prompts are now escaped when used in regexes (#98, #99 @​jimhester). Embedded newlines are now escaped.",1,66,FALSE,NA
reprex,c67ed049282e0df38840a9b98feadb96,Pandoc added to SystemRequirements.,1,67,FALSE,NA
reprex,c2a27634512e5c66db0938fdcd1fdccb,"`outfile = NA` causes outfiles to be left in working directory. Filenames will be based on the `input` file, if there was one.",1,68,FALSE,NA
reprex,0b385eb27af0607e81cdaba852fa70d2,`reprex()` strips any leading prompts from input code.,1,69,FALSE,NA
reprex,a16bd604b23d94955b2b6e4e89320bc7,"Added functions `reprex_clean()`, `reprex_invert()`, and `reprex_rescue()` in order to go backwards, i.e. recover source from a wild-caught reprex.",1,70,FALSE,NA
reprex,d9af46224362ede15bff303737f48714,"`venue = ""R""` (or `""r""`) can be used to get an R script back, augmented with commented output.",1,71,FALSE,NA
reprex,f0a3f0c3ede2690d79bf8b99e9f1ad30,`comment` argument added to specify prefix for commented output.,1,72,FALSE,NA
reprex,144f6266ba637dd77c4d6867da4b77d9,"Added an RStudio addin, accessed via ""Render reprex"".",1,73,FALSE,NA
reprex,85a56a2eb1c938339bee2d4603883a39,"`input` argument to `reprex()` and friends handles code as string, character vector, or file path.",1,74,FALSE,NA
reprex,e438f31996eb57ba7fd0df1bd22faef4,"The reprex is rendered via `callr::r_safe()` and is thus run in a clean, separate R process, eliminating any leakage of objects or loaded packages to/from the calling session.",1,75,FALSE,NA
reprex,9c1770a0f95c780e8728dbabdad2b27b,"`reprex()` gains optional arguments `opts_chunk` and `opts_knit`, taking named list as input, in order to supplement or override default knitr chunk and package options, respectively. (#33)",1,76,FALSE,NA
reprex,9c1770a0f95c780e8728dbabdad2b27b,"• This made the explicit `upload.fun` argument unnecessary, so it's gone. The `upload.fun` option defaults to `knitr::imgur_upload`, which means figures produced by the reprex will be uploaded to imgur.com and the associated image syntax will be put into the Markdown, e.g. `![](https://i.imgur.com/QPU5Cg9.png)`. (#15 @​paternogbc)",2,77,FALSE,"`reprex()` gains optional arguments `opts_chunk` and `opts_knit`, taking named list as input, in order to supplement or override default knitr chunk and package options, respectively. (#33)"
reprex,118e1772c23cb55b0d97f77b1201e913,Order of `reprex()` arguments has changed.,1,78,FALSE,NA
reprex,69909022d55dfeb20cfac566f828d03a,"`reprex()` gains the `si` argument to request that `devtools::session_info()` or `sessionInfo()` be appended to reprex code (#6 @​dgrtwo). When `si = TRUE` and `venue = ""gh""` (the default), session info is wrapped in a collapsible details tag. See an example (#55).",1,79,FALSE,NA
reprex,f0ba35bba33ba54e4efc7dc195011e78,"Reprex code can be provided as an R expression. (#6 @​dgrtwo, #35)",1,80,FALSE,NA
reprex,c67aab9d0dd32fbb4f4226132ef67081,"`reprex()` uses clipboard functionality from `clipr` and thus should work on Windows and suitably prepared Unix-like systems, in addition to Mac OS. (#16 @​mdlincoln)",1,81,FALSE,NA
reprex,f963c481a6929a27a27ebf16a3dd49a2,I tweeted about this and some people actually used it!,1,82,FALSE,NA
rlang,8a3c5ea3232a7d667f104ae6509d8448,Fixed an off-by-one typo in the traceback source column location (#1633).,1,1,FALSE,NA
rlang,4244a9c0ab4399d5e7982bf262b6e050,"`abort()` now respects the base R global option, `options(show.error.messages = FALSE)` (#1630).",1,2,FALSE,NA
rlang,8ae8322253fc781c9de112ce5703e3fd,`obj_type_friendly()` now only displays the first class of S3 objects (#1622).,1,3,FALSE,NA
rlang,a4948ce59b3c64464a1170ebbbbc9c7f,`expr_label()` now has back-compatility with respect to changes made by R version 4.4 and `is.atomic(NULL)` (#1655),1,4,FALSE,NA
rlang,4dabb0d0c38b20f72c36b1875b991a43,Performance improvement in `.rlang_cli_compat()` (#1657).,1,5,FALSE,NA
rlang,78edd1107265249087d4ef1b84b236ec,`englue()` now allows omitting `{{`. This is to make it easier to embed in external functions that need to support either `{` and `{{` (#1601).,1,6,FALSE,NA
rlang,2bd3e7c3acb39f663b4f564ee132a0ca,Fix for CRAN checks.,1,7,FALSE,NA
rlang,9bf88a876fe1159d6368cfb58126c41a,"`stop_input_type()` now handles `I()` input literally in `arg` (#1607, @​simonpcouch).",1,8,FALSE,NA
rlang,ced98d2dcd80a1229d96067ade78e6e2,"`parse_expr()` and `parse_exprs()` are now faster when `getOption(""keep.source"")` is `TRUE` (#1603).",1,9,FALSE,NA
rlang,a496dd8fbaa60aef736ae996c78dd1aa,`dots_splice()` is deprecated. This function was previously in the questioning lifecycle stage as we were moving towards the explicit `!!!` splicing style.,1,10,FALSE,NA
rlang,dcdcc114d53051031a860dfdb2f11b6e,"`flatten()`, `squash()`, and their variants are deprecated in favour of `purrr::list_flatten()` and `purrr::list_c()`.",1,11,FALSE,NA
rlang,58b521c670557dc41ac41c64854d6336,`child_env()` is deprecated in favour of `env()` which has supported creating child environments for several years now.,1,12,FALSE,NA
rlang,465da80cef6ca4db5b456c728b4da5ac,"`last_error()` and `options(rlang_backtrace_on_error = ""full"")` now print the full backtrace tree by default (except for some hidden frames). The simplified backtraces tended to hide important context too often. Now we show intervening frames in a lighter colour so that they don't distract from the important parts of the backtraces but are still easily inspectable.",1,13,FALSE,NA
rlang,3e461eac9263f590622b2eee86318a1c,"`global_entrace()`, `last_warnings()`, and `last_messages()` now support knitr documents.",1,14,FALSE,NA
rlang,9a432c16487e78ef2ed2520a338c5cd2,New `rlang_backtrace_on_warning_report` global option. This is useful in conjunction with `global_entrace()` to get backtraces on warnings inside RMarkdown documents.,1,15,FALSE,NA
rlang,c27f111d9540e006c7e3006cfa5b670b,`global_entrace()` and `entrace()` now stop entracing warnings and messages after 20 times. This is to avoid a large overhead when 100s or 1000s of warnings are signalled in a loop (#1473).,1,16,FALSE,NA
rlang,6a1b1fa7aee4fe4256bb5192f5556fea,"`abort()`, `warn()`, and `inform()` gain an `.inherit` parameter. This controls whether `parent` is inherited. If `FALSE`, `cnd_inherits()` and `try_fetch()` do not match chained conditions across parents. It's normally `TRUE` by default, but if a warning is chained to an error or a message is chained to a warning or error (downgraded chaining), `.inherit` defaults to `FALSE` (#1573).",1,17,FALSE,NA
rlang,e03d515f6f8670a2272b61c1de69c8ae,`try_fetch()` now looks up condition classes across chained errors (#1534). This makes `try_fetch()` insensitive to changes of implementation or context of evaluation that cause a classed error to suddenly get chained to a contextual error.,1,18,FALSE,NA
rlang,e863d957499aafe8cb908f05967923f6,"`englue()` gained `env`, `error_arg`, and `error_call` arguments to support being wrapped in another function (#1565).",1,19,FALSE,NA
rlang,433c22dd8f0744d2982c7c9f00ff6206,The data-masking documentation for arguments has been imported from dplyr. You can link to it by starting an argument documentation with this button:,1,20,FALSE,NA
rlang,433c22dd8f0744d2982c7c9f00ff6206,"```
<[`data-masking`][rlang::args_data_masking]>
```",1,21,TRUE,NA
rlang,e74c6ba110988beb0a6dddec3b059d6d,`enquos()` and friends gain a `.ignore_null` argument (#1450).,1,22,FALSE,NA
rlang,0f417bccc9602a9435d733b6e89c4a5e,"New `env_is_user_facing()` function to determine if an evaluation frame corresponds to a direct usage by the end user (from the global environment or a package being tested) or indirect usage by a third party function. The return value can be overridden by setting the `""rlang_user_facing""` global option.",1,23,FALSE,NA
rlang,a5ac40429cdcbb719cfbf08d9502e14f,"New `check_data_frame()` and `check_logical()` functions in `standalone-types-check.R` (#1587, @​mgirlich).",1,24,FALSE,NA
rlang,80ccda2114849261b7087ef6aa6b41bb,"Added `allow_infinite` argument to `check_number_whole()` (#1588, @​mgirlich).",1,25,FALSE,NA
rlang,bdbe4e6188c62c261da65f755b353aaf,The lifecycle standalone file has been updated to match the modern lifecycle tools.,1,26,FALSE,NA
rlang,09a45ba614b31cdea8a16e2b09107bf2,`parse_expr()` now supports vectors of lines (#1540).,1,27,FALSE,NA
rlang,921e36aa9a3857db0c997866a64fd90c,Quosures can now be consistently concatenated to lists of quosures (#1446).,1,28,FALSE,NA
rlang,172cf6498c92945eb37be5ecf658391e,Fixed a memory issue that caused excessive duplication in `list2()` and friends (#1491).,1,29,FALSE,NA
rlang,7e3d964fab7a82ffbff91ccc80f94325,Embraced empty arguments are now properly detected and trimmed by `quos()` (#1421).,1,30,FALSE,NA
rlang,49ba965f33f72cd6923ad2832ce8191e,Fixed an edge case that caused `enquos(.named = NULL)` to return a named list (#1505).,1,31,FALSE,NA
rlang,c9bbf49403b7153271af725a10eef0d3,`expr_deparse()` now deparses the embrace operator `{{` on a single line (#1511).,1,32,FALSE,NA
rlang,12ce14043e68750f3f87f7e7e08ee185,`zap_srcref()` has been rewritten in C for efficiency (#1513).,1,33,FALSE,NA
rlang,fd25d9cfd3d2340e736a026dbafcea06,`zap_srcref()` now supports expression vectors.,1,34,FALSE,NA
rlang,5f5630ce02db28678da31d61230b99d8,The non-error path of `check_dots_unnamed()` has been rewritten in C for efficiency (#1528).,1,35,FALSE,NA
rlang,541e81a57a019cb65b99ddef19537e4f,Improved error messages in `englue()` (#1531) and in glue strings in the LHS of `:=` (#1526).,1,36,FALSE,NA
rlang,ed6df5463cd4a2ed2edee2009c8ba07b,`englue()` now requires size 1 outputs (#1492). This prevents surprising errors or inconsistencies when an interpolated input of size != 1 makes its way into the glue string.,1,37,FALSE,NA
rlang,4ae934cbe500f927d092caf5b4d6a8aa,`arg_match()` now throws correct error when supplied a missing value or an empty vector (#1519).,1,38,FALSE,NA
rlang,f659ad59c7200846a4cefcbeab7c0105,"`is_integerish()` now handles negative doubles more consistently with positive ones (@​sorhawell, #1530).",1,39,FALSE,NA
rlang,cfa806277c9b9f757d48b6fb197ed9c5,New `check_logical()` in `standalone-types-check.R` (#1560).,1,40,FALSE,NA
rlang,d218abac8f5c3e8cb9a5ae30052914e9,`quo_squash()` now squashes quosures in function position (#1509).,1,41,FALSE,NA
rlang,d894198214dec4196e0295e593eda25c,`is_expression()` now recognises quoted functions (#1499). It now also recognises non-parsable attributes (#1475).,1,42,FALSE,NA
rlang,4eafb8bbc35d2bb5129b98cd88286f6c,`obj_address()` now supports the missing argument (#1521).,1,43,FALSE,NA
rlang,87a0bfa712d9366983f5147e12b517b2,Fixed a `check_installed()` issue with packages removed during the current R session (#1561).,1,44,FALSE,NA
rlang,d4fb0dcd60d003f767d52dab15b8e590,`new_data_mask()` is now slightly faster due to a smaller initial mask size and usage of the C level function `R_NewEnv()` on R \>=4.1.0 (#1553).,1,45,FALSE,NA
rlang,f8b8322ec61f6bf97660c6170ae4e34c,The C level `r_dyn_*_push_back()` utilities are now faster (#1542).,1,46,FALSE,NA
rlang,86c05708fc5af1c870b214a03f106004,"The C level `r_lgl_sum()` and `r_lgl_which()` helpers are now faster (#1577, with contributions from @​mgirlich).",1,47,FALSE,NA
rlang,421491ca92a6a139ef211fcae747fd74,rlang is now compliant with `-Wstrict-prototypes` as requested by CRAN (#1508).,1,48,FALSE,NA
rlang,a52212a348e230065968dbfafc6abf45,`as_closure(seq.int)` now works (#1468).,1,49,FALSE,NA
rlang,7810dc6e723564386b34d2100863d87b,rlang no longer stores errors and backtraces in a `org:r-lib` environment on the search path.,1,50,FALSE,NA
rlang,3d644ca8141eb5e60a2ddb3c9befce0e,The low-level function `error_call()` is now exported (#1474).,1,51,FALSE,NA
rlang,113969b9c3a6d7cccac1d43b9ac4703c,Fixed an issue that caused a failure about a missing `is_character` function when rlang is installed alongside an old version of vctrs (#1482).,1,52,FALSE,NA
rlang,8079f31cee23a0e09584a189de1251d7,Fixed an issue that caused multiline calls in backtraces.,1,53,FALSE,NA
rlang,61dacc5c648408296feae44ef0c31ae1,The C API function `r_lgl_which()` now propagates the names of the input (#1471).,1,54,FALSE,NA
rlang,e5866c31cb8cc28100987db23b1eeb98,"The `pkg_version_info()` function now allows `==` for package version comparison (#1469, @​kryekuzhinieri).",1,55,FALSE,NA
rlang,5efb24e058922ada065d5f16df7337a2,Fixed backtrace display with calls containing long lists of arguments (#1456).,1,56,FALSE,NA
rlang,aefa0a2473630ddabbf3d5c6719689e0,New `r_obj_type_friendly()` function in the C library (#1463). It interfaces with `obj_type_friendly()` from `compat-obj-type.R` via a C callable.,1,57,FALSE,NA
rlang,6f89e18a7583a1054ce7894eb3d44576,`is_installed()` no longer throws an error with irregular package names.,1,58,FALSE,NA
rlang,dcecc15c3662dbb04652faa40170a3d0,`is_installed()` and `check_installed()` now properly detect that the base package is installed on older versions of R (#1434).,1,59,FALSE,NA
rlang,38096ac6b4831809b54a0e9f01b9fead,Child errors may now have empty messages to enable this pattern:,1,60,FALSE,NA
rlang,38096ac6b4831809b54a0e9f01b9fead,"```
Error in `my_function()`:
Caused by error in `their_function()`:
! Message.
```",1,61,TRUE,NA
rlang,6852e872d437a1118d27f0d0d57a7e2b,The `rlib_bytes` class now uses prettyunits to format bytes. The bytes are now represented with decimal prefixes instead of binary prefixes.,1,62,FALSE,NA
rlang,a972fbe954eb359c8edbdcb7a595137e,"Supplying a frame environment to the `call` argument of `abort()` now causes the corresponding function call in the backtrace to be highlighted. In addition, if you store the argument name of a failing input in the `arg` error field, the argument is also highlighted in the backtrace. Instead of:",1,63,FALSE,NA
rlang,a972fbe954eb359c8edbdcb7a595137e,"```
cli::cli_abort(""{.arg {arg}} must be a foobar."", call = call)
```",1,64,TRUE,NA
rlang,a972fbe954eb359c8edbdcb7a595137e,You can now write this to benefit from arg highlighting:,1,64,FALSE,NA
rlang,a972fbe954eb359c8edbdcb7a595137e,"```
cli::cli_abort(""{.arg {arg}} must be a foobar."", arg = arg, call = call)
```",1,65,TRUE,NA
rlang,2fe3d41a13897479b1db87193619cbd3,"`abort(message = )` can now be a function. In this case, it is stored in the `header` field and acts as a `cnd_header()` method invoked when the message is displayed.",1,66,FALSE,NA
rlang,ffcf216164c9d88d734eeb920da6e8ba,New `obj_type_oo()` function in `compat-obj-type.R` (#1426).,1,67,FALSE,NA
rlang,68262238117d4d9c6e8644e6ff41368a,`friendly_type_of()` from `compat-obj-type.R` (formerly `compat-friendly-type.R`) is now `obj_type_friendly()`.,1,68,FALSE,NA
rlang,f5f9ea63a92c1aa28c3c31396a76f7e4,"`options(backtrace_on_error = ""collapse"")` and `print(trace, simplify = ""collapse"")` are deprecated. They fall back to `""none""` with a warning.",1,69,FALSE,NA
rlang,c53b925a867e909bd5f654f3a3f8f4a7,`call_match()` now better handles `...` when `dots_expand = FALSE`.,1,70,FALSE,NA
rlang,6f8d99b1ef59b45b5c16fc6d67dd1d2d,`list2(!!!x)` is now faster when `x` is a list. It is now returned as is instead of being duplicated into a new list.,1,71,FALSE,NA
rlang,e95c444bb7fea2519aa6751e2a790b05,`abort()` gains a `.trace_bottom` argument to disambiguate from other `.frame`. This allows `cli::cli_abort()` to wrap `abort()` in such a way that `.internal` mentions the correct package to report the error in (#1386).,1,72,FALSE,NA
rlang,e8704a47483702f56099e071e9893a4c,The `transpose()` compat is now more consistent with purrr when inner names are not congruent (#1346).,1,73,FALSE,NA
rlang,da1d4ca6e4a7420de3fd0786be7fe963,New `reset_warning_verbosity()` and `reset_message_verbosity()` functions. These reset the verbosity of messages signalled with `warn()` and `inform()` with the `.frequency` argument. This is useful for testing verbosity in your package (#1414).,1,74,FALSE,NA
rlang,76fc2ae5e5906a8246428afd2410400f,`check_dots_empty()` now allows trailing missing arguments (#1390).,1,75,FALSE,NA
rlang,52759b5e249de85704e100cb8a09d9a8,Calls to local functions that are not accessible through `::` or `:::` are now marked with `(local)` in backtraces (#1399).,1,76,FALSE,NA
rlang,9ec8bdd5fb3256135d0ebd68883d7d7c,Error messages now mention indexed calls like `foo$bar()`.,1,77,FALSE,NA
rlang,84b9e7fba2b12d7c88177dc60436af26,"New `env_coalesce()` function to copy bindings from one environment to another. Unlike approaches based on looping with `[[<-`, `env_coalesce()` preserves active and lazy bindings.",1,78,FALSE,NA
rlang,b5cf4f2019bd46a64fda91edd51713cb,Chaining errors at top-level (directly in the console instead of in a function) no longer fails (#1405).,1,79,FALSE,NA
rlang,bb51686857f0ceabe3c53e212761f327,Warning style is propagated across parent errors in chained error messages (#1387).,1,80,FALSE,NA
rlang,80dd2603d620d1c0136caab85e4ce268,"`check_installed()` now works within catch-all `tryCatch(error = )` expressions (#1402, tidyverse/ggplot2#4845).",1,81,FALSE,NA
rlang,000f2367d60a48dbaf9fed1bf7b39f43,`arg_match()` and `arg_match0()` now mention the correct call in case of type error (#1388).,1,82,FALSE,NA
rlang,7e12423f5be5adb876821a8d984ae422,`abort()` and `inform()` now print messages to `stdout` in RStudio panes (#1393).,1,83,FALSE,NA
rlang,6d966cb3998df557f3fce1d61a02ab89,`is_installed()` now detects unsealed namespaces (#1378). This fixes inconsistent behaviour when run within user onLoad hooks.,1,84,FALSE,NA
rlang,a0590cca30a91ea23c6b3068f67d3277,Source references in backtraces and `last_error()`/`last_trace()` instructions are now clickable in IDEs that support links (#1396).,1,85,FALSE,NA
rlang,a1fa59e6eadefac2618f5314c5b4c17b,`compat-cli.R` now supports `style_hyperlink()`.,1,86,FALSE,NA
rlang,9bdf4eb791c06f231eaf624970f10077,"`abort(.homonyms = ""error"")` now throws the expected error (#1394).",1,87,FALSE,NA
rlang,508d6427ecf3fbe9d3f7c93e96847a18,`env_binding_are_active()` no longer accidentally triggers active bindings (#1376).,1,88,FALSE,NA
rlang,b5710fb052ee359e60e7a64384fb6b7d,Fixed bug in `quo_squash()` with nested quosures containing the missing argument.,1,89,FALSE,NA
rlang,d169a86937bb71044024886ee83c50e4,Backtraces of parent errors are now reused on rethrow. This avoids capturing the same backtrace twice and solves consistency problems by making sure both errors in a chain have the same backtrace.,1,90,FALSE,NA
rlang,b56e0ad5626bf1a75c42a6e6208d84e0,Fixed backtrace oversimplification when `cnd` is a base error in `abort(parent = cnd)`.,1,91,FALSE,NA
rlang,3e61da6f3760daac228bb996c1d68a93,Internal errors thrown with `abort(.internal = TRUE)` now mention the name of the package the error should be reported to.,1,92,FALSE,NA
rlang,d135971f17e851a47dbbdced46b9996e,Backtraces are now separated from error messages with a `---` ruler line (#1368).,1,93,FALSE,NA
rlang,945d5e6205b6f3ed5f4098f6674f959f,"The internal bullet formatting routine now ignores unknown names (#1364). This makes it consistent with the cli package, increases resilience against hard-to-detect errors, and increases forward compatibility.",1,94,FALSE,NA
rlang,66ed8c7ac2d576c4eca2a79c3c698736,"`abort()` and friends no longer calls non-existent functions (e.g. `cli::format_error()` or `cli::format_warning`) when the installed version of cli is too old (#1367, tidyverse/dplyr#6189).",1,95,FALSE,NA
rlang,320ec3f6306ef2eca021c08ff888e156,Fixed an OOB subsetting error in `abort()`.,1,96,FALSE,NA
rlang,3c90192e394c91620d4b7e2ae31e6903,"New `rlang_call_format_srcrefs` global option (#1349). Similar to `rlang_trace_format_srcrefs`, this option allows turning off the display of srcrefs in error calls. This can be useful for reproducibility but note that srcrefs are already disabled within testthat by default.",1,97,FALSE,NA
rlang,c0d5b10bc3d5fda9488c4c832bc36e2c,`abort(parent = NA)` is now supported to indicate an unchained rethrow. This helps `abort()` detect the condition handling context to create simpler backtraces where this context is hidden by default.,1,98,FALSE,NA
rlang,e449332f20c46d88f39ed2c9704f60b8,"When `parent` is supplied, `abort()` now loops over callers to detect the condition handler frame. This makes it easier to wrap or extract condition handlers in functions without supplying `.frame`.",1,99,FALSE,NA
rlang,bc10e63312f083a0325d4af26cbf35ca,"When `parent` is supplied and `call` points to the condition setup frame (e.g. `withCallingHandlers()` or `try_fetch()`), `call` is replaced with the caller of that setup frame. This provides a more helpful default call.",1,100,FALSE,NA
rlang,df78ecaa2d757c7b0dfa693b5971e12b,`is_call()` is now implemented in C for performance.,1,101,FALSE,NA
rlang,eadff1950b353286f1885d5e9b1c5cef,Fixed performance regression in `trace_back()`.,1,102,FALSE,NA
rlang,9d188a9c7bf23fbcd9cbe249a0be2966,"Fixed a partial matching issue with `header`, `body`, and `footer` condition fields.",1,103,FALSE,NA
rlang,2e9edbe873e7aabb7734ef5b60c3ee75,`eval_tidy()` calls are no longer mentioned in error messages.,1,104,FALSE,NA
rlang,e5ef473d269818d158182f4625aef79e,`abort()` now displays errors as fully bulleted lists. Error headers are displayed with a `!` prefix. See https://rlang.r-lib.org/reference/topic-condition-customisation.html to customise the display of error messages.,1,105,FALSE,NA
rlang,a24c3ef6d8bf15ae28d82a8ea801bff0,"`abort()` now displays a full chain of messages when errors are chained with the `parent` argument. Following this change, you should update dplyr to version 1.0.8 to get proper error messages.",1,106,FALSE,NA
rlang,2f054ce7a0de2fe2e29ac90be8532707,"`abort()` now displays function calls in which a message originated by default. We have refrained from showing these calls until now to avoid confusing messages when an error is thrown from a helper function that isn't relevant to users. To help with these cases, `abort()` now takes a `call` argument that you can set to `caller_env()` or `parent.frame()` when used in a helper function. The function call corresponding to this environment is retrieved and stored in the condition.",1,107,FALSE,NA
rlang,551aa10b9568538f6b5dce1d44d428b8,"cli formatting is now supported. Use `cli::cli_abort()` to get advanced formatting of error messages, including indented bulleted lists. See https://rlang.r-lib.org/reference/topic-condition-formatting.html.",1,108,FALSE,NA
rlang,f29383fbe16174ab0607d293347b795b,New `try_fetch()` function for error handling. We recommend to use it for chaining errors. It mostly works like `tryCatch()` with a few important differences.,1,109,FALSE,NA
rlang,f29383fbe16174ab0607d293347b795b,"• Compared to `tryCatch()`, `try_fetch()` preserves the call stack. This allows full backtrace capture and allows `recover()` to reach the error site.",2,110,FALSE,New `try_fetch()` function for error handling. We recommend to use it for chaining errors. It mostly works like `tryCatch()` with a few important differences.
rlang,f29383fbe16174ab0607d293347b795b,"• Compared to `withCallingHandler()`, `try_fetch()` is able to handle stack overflow errors (this requires R 4.2, unreleased at the time of writing).",2,111,FALSE,New `try_fetch()` function for error handling. We recommend to use it for chaining errors. It mostly works like `tryCatch()` with a few important differences.
rlang,6a2b45ef52394f675b532d8b95a8a19a,"The tidy eval documentation has been fully rewritten to reflect current practices. Access it through the ""Tidy evaluation"" and ""Metaprogramming"" menus on https://rlang.r-lib.org.",1,112,FALSE,NA
rlang,ed2169db3512f69d1512c41a29a181c2,The `.data` object exported by rlang now fails when subsetted instead of returning `NULL`. This new error helps you detect when `.data` is used in the wrong context. We've noticed several packages failing after this change because they were using `.data` outside of a data-masking context. For instance the `by` argument of `dplyr::join()` is not data-masked. Previously `dplyr::join(by = .data$foo)` would silently be interpreted as `dplyr::join(by = NULL)`. This is now an error. Another issue is using `.data` inside `ggplot2::labs(...)`. This is not allowed since `labs()` isn't data-masked.,1,113,FALSE,NA
rlang,668c898e8f93cd92e4e33d718a53cbe4,"`call_name()` now returns `NULL` instead of `""::""` for calls of the form `foo::bar`. We've noticed some packages do not check for `NULL` results from `call_name()`. Note that many complex calls such as `foo()()`, `foo$bar()` don't have a ""name"" and cause a `NULL` result. This is why you should always check for `NULL` results when using `call_name()`. We've added the function `is_call_simple()` to make it easier to work safely with `call_name()`. The invariant is that `call_name()` always returns a string when `is_call_simple()` returns `TRUE`. Conversely it always returns `NULL` when `is_call_simple()` retuns `FALSE`.",1,114,FALSE,NA
rlang,1e474d6b701e9b60ba1882cbeb574de8,"`is_expression()` now returns `FALSE` for manually constructed expressions that can't be created by the parser. It used to return `TRUE` for any calls, including those that contain injected objects. Consider using `is_call()` or just remove the expression check. In many cases it is fine letting all objects go through when an expression is expected. For instance you can inject objects directly inside dplyr arguments:",1,115,FALSE,NA
rlang,1e474d6b701e9b60ba1882cbeb574de8,"```
x <- seq_len(nrow(data))
dplyr::mutate(data, col = !!x)
```",1,116,TRUE,NA
rlang,ab5c73dc7d1f34dfbedafbc2c05ffcd2,"If a string is supplied to `as_function()` instead of an object (function or formula), the function is looked up in the global environment instead of the calling environment. In general, passing a function name as a string is brittle. It is easy to forget to pass the user environment to `as_function()` and sometimes there is no obvious user environment. The support for strings should be considered a convenience for end users only, not for programmers. Since environment forwarding is easy to mess up, and since the feature is aimed towards end users, `as_function()` now defaults to the global environment. Supply an environment explicitly if that is not correct in your case.",1,117,FALSE,NA
rlang,00f8f8005d487b7bc7e5b60185cb3c32,"`with_handlers()`, `call_fn()`, and `friendly_type()` are deprecated.",1,118,FALSE,NA
rlang,e1aaf5704f5498545017c538f802882c,"The `action` argument of `check_dots_used()`, `check_dots_unnamed()`, and `check_dots_empty()` is deprecated in favour of the new `error` argument which takes an error handler.",1,119,FALSE,NA
rlang,e2247a261c43d15f8199237e4c8a044c,Many functions deprecated in rlang 0.2.0 and 0.3.0 have been removed from the package.,1,120,FALSE,NA
rlang,8384ccefb008e564329af338c048edf0,New `englue()` operator to allow string-embracing outside of dynamic dots (#1172).,1,121,FALSE,NA
rlang,dec89cd7f3dfa59a352ee6bd4ce4e354,New `data_sym()` and `data_syms()` functions to create calls of the form `.data$foo`.,1,122,FALSE,NA
rlang,52c17fd5a0b50e7754b29ee08288a98c,"`.data` now fails early when it is subsetted outside of a data mask context. This provides a more informative error message (#804, #1133).",1,123,FALSE,NA
rlang,53a4b90838106f037b148c9d6061ed9e,"`as_label()` now better handles calls to infix operators (#956, r-lib/testthat#1432). This change improves auto-labelled expressions in data-masking functions like `tibble()`, `mutate()`, etc.",1,124,FALSE,NA
rlang,9688cf8efb2b6c1a0050ba5bc7686360,"The `{{` operator is now detected more strictly (#1087). If additional arguments are supplied through `{`, it is no longer interpreted as an injection operator.",1,125,FALSE,NA
rlang,68b181e711c539ddb571b3a91e77a390,"The `.ignore_empty` argument of `enexprs()` and `enquos()` no longer treats named arguments supplied through `...` as empty, consistently with `exprs()` and `quos()` (#1229).",1,126,FALSE,NA
rlang,933e5a60a21eeb910ee2f8a95dbd27d8,Fixed a hang when a quosure inheriting from a data mask is evaluated in the mask again.,1,127,FALSE,NA
rlang,9752779f278ba496161fe1bbeb9ea04d,"Fixed performance issue when splicing classes that explicitly inherit from list with `!!!` (#1140, r-lib/vctrs#1170).",1,128,FALSE,NA
rlang,fb428abcc00bf8d414961af7a86961ac,Attributes of quosure lists are no longer modified by side effect (#1142).,1,129,FALSE,NA
rlang,989b8b17cd0c79bd12a78939f4e0a616,"`enquo()`, `enquos()` and variants now support numbered dots like `..1` (#1137).",1,130,FALSE,NA
rlang,0b902b9587a99f8d6a688c1bf0e1805e,Fixed a bug in the AST rotation algorithm that caused the `!!` operator to unexpectedly mutate injected objects (#1103).,1,131,FALSE,NA
rlang,7bf3c25a105403f6df3385c851d5004a,Fixed AST rotation issue with `!!` involving binary operators (#1125).,1,132,FALSE,NA
rlang,cc91edfcf552b5832171ae6180835d7f,`try_fetch()` is a flexible alternative to both `tryCatch()` and `withCallingHandlers()` (#503). It is also more efficient than `tryCatch()` and creates leaner backtraces.,1,133,FALSE,NA
rlang,12bec9ca26ab77773f7c8730e458456c,New `cnd_inherits()` function to detect a class in a chain of errors (#1293).,1,134,FALSE,NA
rlang,2484090126d946b82a61a4eff2afa799,"New `global_entrace()` function, a user-friendly helper for configuring errors in your RProfile. Call it to enrich all base errors and warnings with an rlang backtrace. This enables `last_error()`, `last_warnings()`, `last_messages()`, and `backtrace_on_error` support for all conditions.",1,135,FALSE,NA
rlang,66779687bdc806a021ea64ce6a5d252f,New `global_handle()` function to install a default configuration of error handlers. This currently calls `global_entrace()` and `global_prompt_install()`. Expect more to come.,1,136,FALSE,NA
rlang,ce482f77ab061efa8ae4cc8b90dc91e2,"The ""Error:"" part of error messages is now printed by rlang instead of R. This introduces several cosmetic and informative changes in errors thrown by `abort()`:",1,137,FALSE,NA
rlang,ce482f77ab061efa8ae4cc8b90dc91e2,"• The `call` field of error messages is now displayed, as is the default in `base::stop()`. The call is only displayed if it is a simple expression (e.g. no inlined function) and the arguments are not displayed to avoid distracting from the error message. The message is formatted with the tidyverse style (`code` formatting by the cli package if available).",2,138,FALSE,"The ""Error:"" part of error messages is now printed by rlang instead of R. This introduces several cosmetic and informative changes in errors thrown by `abort()`:"
rlang,ce482f77ab061efa8ae4cc8b90dc91e2,• The source location is displayed (as in `base::stop()`) if `call` carries a source reference. Source locations are not displayed when testthat is running to avoid brittle snapshots.,2,139,FALSE,"The ""Error:"" part of error messages is now printed by rlang instead of R. This introduces several cosmetic and informative changes in errors thrown by `abort()`:"
rlang,ce482f77ab061efa8ae4cc8b90dc91e2,"• Error headers are always displayed on their own line, with a `""!""` bullet prefix.",2,140,FALSE,"The ""Error:"" part of error messages is now printed by rlang instead of R. This introduces several cosmetic and informative changes in errors thrown by `abort()`:"
rlang,d96a7221b0d8b7581c5659475b077f24,See https://rlang.r-lib.org/reference/topic-condition-customisation.html to customise this new display.,1,140,FALSE,NA
rlang,082330fa5e6ae2a7cd79aefdcabd008d,"The display of chained errors created with the `parent` argument of `abort()` has been improved. Chains of errors are now displayed at throw time with the error prefix ""Caused by error:"".",1,141,FALSE,NA
rlang,2880c64b6fdd47ba9993fc346cf1b7f9,The `print()` method of rlang errors (commonly invoked with `last_error()`) has been improved:,1,142,FALSE,NA
rlang,2880c64b6fdd47ba9993fc346cf1b7f9,• Display calls if present.,2,143,FALSE,The `print()` method of rlang errors (commonly invoked with `last_error()`) has been improved:
rlang,2880c64b6fdd47ba9993fc346cf1b7f9,• Chained errors are displayed more clearly.,2,144,FALSE,The `print()` method of rlang errors (commonly invoked with `last_error()`) has been improved:
rlang,cc2a43bb9032660aee1f7761406636f5,`inform()` and `warn()` messages can now be silenced with the global options `rlib_message_verbosity` and `rlib_warning_verbosity`.,1,145,FALSE,NA
rlang,f125d6be675ee08d368952bc2310c026,"`abort()` now outputs error messages to `stdout` in interactive sessions, following the same approach as `inform()`.",1,146,FALSE,NA
rlang,e1c5dafbe8c3f9cfd4b1800ee4476947,"Errors, warnings, and messages generated from rlang are now formatted with cli. This means in practice that long lines are width-wrapped to the terminal size and user themes are applied. This is currently only the case for rlang messages. This special formatting is not applied when `abort()`, `warn()`, and `inform()` are called from another namespace than rlang. See https://rlang.r-lib.org/reference/topic-condition-formatting.html if you'd like to use cli to format condition messages in your package.",1,147,FALSE,NA
rlang,9e91120405d5872afc00ed4bcc16f73d,`format_error_bullets()` (used as a fallback instead of cli) now treats:,1,148,FALSE,NA
rlang,9e91120405d5872afc00ed4bcc16f73d,• Unnamed elements as unindented line breaks (#1130),2,149,FALSE,`format_error_bullets()` (used as a fallback instead of cli) now treats:
rlang,9e91120405d5872afc00ed4bcc16f73d,"• Elements named `""v""` as green ticks (@​rossellhayes)",2,150,FALSE,`format_error_bullets()` (used as a fallback instead of cli) now treats:
rlang,9e91120405d5872afc00ed4bcc16f73d,"• Elements named `"" ""` as indented line breaks",2,151,FALSE,`format_error_bullets()` (used as a fallback instead of cli) now treats:
rlang,9e91120405d5872afc00ed4bcc16f73d,"• Elements named `""*""` as normal bullets",2,152,FALSE,`format_error_bullets()` (used as a fallback instead of cli) now treats:
rlang,9e91120405d5872afc00ed4bcc16f73d,"• Elements named `""!""` as warning bullets",2,153,FALSE,`format_error_bullets()` (used as a fallback instead of cli) now treats:
rlang,7bc5c016d89315de40dcaf294085881e,"For convenience, a fully unnamed vector is interpreted as a vector of `""*""` bullets.",1,153,FALSE,NA
rlang,0ce02f159301d66d6ec584c69a41fb9f,"`abort()` gains a `.internal` argument. When set to `TRUE`, a footer bullet is added to `message` to let the user know that the error is internal and that they should report it to the package authors.",1,154,FALSE,NA
rlang,04c5d10f70cbbe64164227b43d0fa5f8,"`abort()`, `warn()`, and `inform()` gain a `body` argument to supply additional bullets in the error message.",1,155,FALSE,NA
rlang,dfc4cea4dbfc8f51904bc7201fa6b54e,"rlang conditions now have `as.character()` methods. Use this generic on conditions to generate a whole error message, including the `Error:` prefix. These methods are implemented as wrappers around `cnd_message()`.",1,156,FALSE,NA
rlang,d2ec9af61852d28c522c264e4b8d71f9,`header` and `footer` methods can now be stored as closures in condition fields of the same name.,1,157,FALSE,NA
rlang,7e6881bb33fe777c54fb7563ded1d559,"`cnd_message()` gains a `prefix` argument to print the message with a full prefix, including `call` field if present and parent messages if the condition is chained.",1,158,FALSE,NA
rlang,00c8511aaae010e5221a6420f7e72077,`cnd_message()` gains an `inherit` argument to control whether to print the messages of parent errors.,1,159,FALSE,NA
rlang,d720af81af6a5350fe1f3b25437455e4,Condition constructors now check for duplicate field names (#1268).,1,160,FALSE,NA
rlang,e93f665af482590b2bf25be598910a28,"`cnd_footer()` now returns the `footer` field by default, if any.",1,161,FALSE,NA
rlang,ec7f5554e96b54f1c15db1e69630de0a,"`warn()` and `inform()` now signal conditions of classes `""rlang_warning""` and `""rlang_message""` respectively.",1,162,FALSE,NA
rlang,033247bcaf14434b01c92330b7cc6be4,The `body` field of error conditions can now be a character vector.,1,163,FALSE,NA
rlang,a1dae7cfc1fc438c5ef7c8d7a0abfb15,"The error returned by `last_error()` is now stored on the search path as the `.Last.error` binding of the `""org:r-lib""` environment. This is consistent with how the processx package records error conditions. Printing the `.Last.error` object is now equivalent to running `last_error()`.",1,164,FALSE,NA
rlang,14553e6d7c48243f2d78446102a91688,"Added `is_error()`, `is_warning()`, and `is_message()` predicates (#1220).",1,165,FALSE,NA
rlang,4949c0458f05f56d9358e70ab436f245,`interrupt()` no longer fails when interrupts are suspended (#1224).,1,166,FALSE,NA
rlang,3111970f6215cb1372448c1b87602cba,"`warn()` now temporarily sets the `warning.length` global option to the maximum value (8170). The default limit (1000 characters) is especially easy to hit when the message contains a lot of ANSI escapes, as created by the crayon or cli packages (#1211).",1,167,FALSE,NA
rlang,a2f32bc3883e449a761e2f8df52f8118,`entrace()` and `global_entrace()` now log warnings and messages with backtraces attached. Run `last_warnings()` or `last_messages()` to inspect the warnings or messages emitted during the last command.,1,168,FALSE,NA
rlang,f927f079e4a912d64e4ca196437fb1c8,Internal errors now include a winch backtrace if installed. The user is invited to install it if not installed.,1,169,FALSE,NA
rlang,0131795a8713e848da740e19bb43a3cd,"Display of rlang backtraces for expected errors in dynamic reports (chunks where `error = TRUE` in knitted documents and RStudio notebooks) is now controlled by the `rlang_backtrace_on_error_report` option. By default, this is set to `""none""`. The display of backtraces for *unexpected* errors (in chunks where `error` is unset or set to `FALSE`) is still controlled by `rlang_backtrace_on_error`.",1,170,FALSE,NA
rlang,45f2d6e20b60f3d414e0e006cd8cf7b6,The `last_error()` reminder is no longer displayed in RStudio notebooks.,1,171,FALSE,NA
rlang,c4ab95d44d81f949a5b5a97b41e4270a,"A `knitr::sew()` method is registered for `rlang_error`. This makes it possible to consult `last_error()` (the call must occur in a different chunk than the error) and to set `rlang_backtrace_on_error_report` global options in knitr to display a backtrace for expected errors. If you show rlang backtraces in a knitted document, also set this in a hidden chunk to trim the knitr context from the backtraces:",1,172,FALSE,NA
rlang,c4ab95d44d81f949a5b5a97b41e4270a,"```
options(
  rlang_trace_top_env = environment()
)
```",1,173,TRUE,NA
rlang,c4ab95d44d81f949a5b5a97b41e4270a,This change replaces an ad hoc mechanism that caused bugs in corner cases (#1205).,1,173,FALSE,NA
rlang,bab5f8bdc89b4c9114926adbe6ae712a,"The `rlang_trace_top_env` global option for `trace_back()` now detects when backtraces are created within knitr. If the option is not set, its default value becomes `knitr::knit_global()` when knitr is in progress (as determined from `knitr.in.progress` global option). This prevents the knitr evaluation context from appearing in the backtraces (#932).",1,174,FALSE,NA
rlang,547e53c9a846777c8a170081c8ca756b,Namespace changes are now emboldened in backtraces (#946).,1,175,FALSE,NA
rlang,98408c69b4de9de814cdb991d6c533a8,Functions defined in the global environments or in local execution environments are now displayed with a space separator in backtraces instead of `::` and `:::`. This avoids making it seem like these frame calls are valid R code ready to be typed in (#902).,1,176,FALSE,NA
rlang,0f0eeb9e092fae09dba0262aafb9ea22,"Backtraces no longer contain inlined objects to avoid performance issues in edge cases (#1069, r-lib/testthat#1223).",1,177,FALSE,NA
rlang,17e930a7122660b5e1a3494631e57d3e,External backtraces in error chains are now separately displayed (#1098).,1,178,FALSE,NA
rlang,02e308247d1b9e25ac497665bc0d6fc0,Trace capture now better handles wrappers of calling handler in case of rethrown chained errors.,1,179,FALSE,NA
rlang,f5e7f9cf41e8d05fc58ee7013447482e,Backtraces now print dangling srcrefs (#1206). Paths are shortened to show only three components (two levels of folder and the file).,1,180,FALSE,NA
rlang,e050038f44cc5cd647caee843461534f,The root symbol in backtraces is now slightly different so that it can't be confused with a prompt character (#1207).,1,181,FALSE,NA
rlang,9fe7f85906b6be95823a3881e9157b8e,`arg_match()` gains a `multiple` argument for cases where zero or several matches are allowed (#1281).,1,182,FALSE,NA
rlang,6455a212198ce2e2b2f463a70c112fa9,New function `check_required()` to check that an argument is supplied. It produces a more friendly error message than `force()` (#1118).,1,183,FALSE,NA
rlang,bb6c1f78d3f8569e82622186d12edbd2,"`check_dots_empty()`, `check_dots_used()`, and `check_dots_unnamed()` have been moved from ellipsis to rlang. The ellipsis package is deprecated and will eventually be archived. We have added `check_dots_empty0()`. It has a different UI but is almost as efficient as checking for `missing(...)`. Use this in very low level functions where a couple microseconds make a difference.",1,184,FALSE,NA
rlang,5184b8630c68b1c44b4aa0c7f1899a22,The `arg_nm` argument of `arg_match0()` must now be a string or symbol.,1,185,FALSE,NA
rlang,a683616bd87bfde8cfb7e88bad592bff,`arg_match()` now mentions the supplied argument (#1113).,1,186,FALSE,NA
rlang,defbae8a358f80517beae886afc14cf3,`is_installed()` and `check_installed()` gain a `version` argument (#1165).,1,187,FALSE,NA
rlang,966c9def0fd3357555b3350bffc57aba,`check_installed()` now consults the `rlib_restart_package_not_found` global option to determine whether to prompt users to install packages. This also disables the restart mechanism (see below).,1,188,FALSE,NA
rlang,e4d6b4a271bf59ad9900814f77fe8804,`check_installed()` now signals errors of class `rlib_error_package_not_found` with a `rlib_restart_package_not_found` restart. This allows calling handlers to install the required packages and restart the check (#1150).,1,189,FALSE,NA
rlang,d4cb3f07ec53cabc1ee3617651da7700,"`is_installed()` and `check_installed()` now support DESCRIPTION-style version requirements like `""rlang (>= 1.0)""`. They also gain `version` and `compare` arguments to supply requirements programmatically.",1,190,FALSE,NA
rlang,9fd853ee483d9f5bb030def212ba7ea5,`check_installed()` gains an `action` argument that is called when the user chooses to install and update missing and outdated packages.,1,191,FALSE,NA
rlang,f75b01f2aa68ced7f60352d82fac5205,New `check_exclusive()` function to check that only one argument of a set is supplied (#1261).,1,192,FALSE,NA
rlang,34b0e4c8848c462cfde78dab5412f779,`on_load()` and `run_on_load()` lets you run `.onLoad()` expressions from any file of your package. `on_package_load()` runs expressions when another package is loaded. (#1284),1,193,FALSE,NA
rlang,8a0b819890b24c0e5efd33eb2e78f499,The new predicate `is_call_simple()` indicates whether a call has a name and/or a namespace. It provides two invariants:,1,194,FALSE,NA
rlang,8a0b819890b24c0e5efd33eb2e78f499,"• If `is_call_simple(x)` is `TRUE`, `call_name()` always returns a string.",2,195,FALSE,The new predicate `is_call_simple()` indicates whether a call has a name and/or a namespace. It provides two invariants:
rlang,8a0b819890b24c0e5efd33eb2e78f499,"• If `is_call_simple(x, ns = TRUE)` is `TRUE`, `call_ns()` always returns a string.",2,196,FALSE,The new predicate `is_call_simple()` indicates whether a call has a name and/or a namespace. It provides two invariants:
rlang,bee047200bace731b98ac08b1e8f9950,`call_name()` and `call_ns()` now return `NULL` with calls of the form `foo::bar` (#670).,1,197,FALSE,NA
rlang,7b9c6bd8b3ca327319ff3cb9b28dbc6b,"New `current_call()`, `caller_call()`, and `frame_call()` accessors. New `frame_fn()` accessor.",1,198,FALSE,NA
rlang,b4cddb881348307b2d3b48d601c9cf9c,`env_has()` and the corresponding C-level function no longer force active bindings (#1292).,1,199,FALSE,NA
rlang,c63fb0ec8ccddce4f9cedd8658fb1a61,New `names2<-` replacement function that never adds missing values when names don't have names (#1301).,1,200,FALSE,NA
rlang,70bf550c277a7d5858ead6e8018ff2e4,`zap_srcref()` now preserves attributes of closures.,1,201,FALSE,NA
rlang,9eb2a569018141562881aee157c32a2e,"Objects headers (as printed by `last_error()`, `env_print()`, ...) are now formatted using the `cls` class of the cli package.",1,202,FALSE,NA
rlang,799b946c81ba3cd5217580947306d695,`as_function()` gains `arg` and `call` arguments to provide contextual information about erroring inputs.,1,203,FALSE,NA
rlang,259fab5082112b7b2debd76a90298d40,`is_expression()` now returns `FALSE` for manually constructed expressions that cannot be created by the R parser.,1,204,FALSE,NA
rlang,a34ff282e4e8e19c6c9e050e8e99a21b,"New C callable `rlang_env_unbind()`. This is a wrapper around `R_removeVarFromFrame()` on R \>= 4.0.0. On older R this wraps the R function `base::rm()`. Unlike `rm()`, this function does not warn (nor throw) when a binding does not exist.",1,205,FALSE,NA
rlang,27b085a9d717c416dddfb1d4358d290e,`friendly_type_of()` now supports missing arguments.,1,206,FALSE,NA
rlang,90fe4efeab04031e675e83ee5aa177c6,"`env_clone()` now properly clones active bindings and avoids forcing promises (#1228). On R \< 4.0, promises are still forced.",1,207,FALSE,NA
rlang,925dda6a09709a639e6cc3f97fcbda62,Fixed an `s3_register()` issue when the registering package is a dependency of the package that exports the generic (#1225).,1,208,FALSE,NA
rlang,b2bb7f5db88985b4f5e873701b26f6cf,Added `compat-vctrs.R` file for robust manipulation of data frames in zero-deps packages.,1,209,FALSE,NA
rlang,bed542c47963331bd92251cf3de0c394,Added `compat-cli.R` file to format message elements consistently with cli in zero-deps packages.,1,210,FALSE,NA
rlang,9e79e3013b165c3c90bb3cd360097e5a,`compat-purrr.R` now longer includes `pluck*` helpers; these used a defintion of pluck that predated purrr (#1159). `*_cpl()` has also been removed. The `map*` wrappers now call `as_function()` so that you can pass short anonymous functions that use `~` (#1157).,1,211,FALSE,NA
rlang,9197ae1937cfa3aff583617cba66b0b1,`exprs_auto_name()` gains a `repair_auto` argument to make automatic names unique (#1116).,1,212,FALSE,NA
rlang,d83bc086bad14136c7d02a3f1499a56d,"The `.named` argument of `dots_list()` can now be set to `NULL` to give the result default names. With this option, fully unnamed inputs produce a fully unnamed result with `NULL` names instead of a character vector of minimal `""""` names (#390).",1,213,FALSE,NA
rlang,4c511f70c9618e5489f97e7a62fe3688,`is_named2()` is a variant of `is_named()` that always returns `TRUE` for empty vectors (#191). It tests for the property that each element of a vector is named rather than the presence of a `names` attribute.,1,214,FALSE,NA
rlang,1a3c2b2f8b9c0339dba14987e6fdb70f,New `rlib_bytes` class imported from the bench package (#1117). It prints and parses human-friendly sizes.,1,215,FALSE,NA
rlang,7efb7f8ea6dd4df69407a37dffd8d3fe,"The `env` argument of `as_function()` now defaults to the global environment. Its previous default was the caller of `as_function()`, which was rarely the correct environment to look in. Since it's hard to remember to pass the user environment and it's sometimes tricky to keep track of it, it's best to consider string lookup as a convenience for end users, not for developers (#1170).",1,216,FALSE,NA
rlang,89fc4f9781740077d3e3cbf69dbdee76,`s3_register()` no longer fails when generic does not exist. This prevents failures when users don't have all the last versions of packages (#1112).,1,217,FALSE,NA
rlang,6d2ac1d924e2e6068dd3bfbf6d37a7f3,Formulas are now deparsed according to the tidyverse style guide (`~symbol` without space and `~ expression()` with a space).,1,218,FALSE,NA
rlang,36a9feb8c5ee565f9d50a3a5df2e439d,"New `hash_file()`, complementing `hash()`, to generate 128-bit hashes for the data within a file without loading it into R (#1134).",1,219,FALSE,NA
rlang,a9014f4f6f584f39bf8617c2ae952d3b,New `env_cache()` function to retrieve a value or create it with a default if it doesn't exist yet (#1081).,1,220,FALSE,NA
rlang,08a10ecd6fcd156724ed2fd47513bb81,`env_get()` and `env_get_list()` gain a `last` argument. Lookup stops in that environment. This can be useful in conjunction with `base::topenv()`.,1,221,FALSE,NA
rlang,65979174f39101c7032aa2bc56632642,New `call_match()` function. It is like `match.call()` but also supports matching missing arguments to their defaults in the function definition (#875). `call_standardise()` is deprecated in favour of `call_match()`.,1,222,FALSE,NA
rlang,b25e47678907535a6a8ae0088fc08f24,"`expr_deparse()` now properly escapes `\` characters in symbols, argument names, and vector names (#1160).",1,223,FALSE,NA
rlang,55d6979ad525f3cfa9a534267506f8a5,`friendly_type_of()` (from `compat-friendly-type.R`) now supports matrices and arrays (#141).,1,224,FALSE,NA
rlang,be9e23f781d839d99b62713fd59188a7,Updated `env_print()` to use `format_error_bullets()` and consistent tidyverse style (#1154).,1,225,FALSE,NA
rlang,d724e2b65011cebdc45e90a5f1870ea4,"`set_names()` now recycles names of size 1 to the size of the input, following the tidyverse recycling rules.",1,226,FALSE,NA
rlang,e05df884ca8ee0d3e98d2f04f2813e6a,`is_bare_formula()` now handles the `scoped` argument consistently. The default has been changed to `TRUE` for compatibility with the historical default behaviour (#1115).,1,227,FALSE,NA
rlang,ebb999c61b1cc9a31a6052db345e4783,"The ""definition"" API (`dots_definitions()` etc.) has been archived.",1,228,FALSE,NA
rlang,9d153231bf842c29a8aea3ce1cb6c1ff,New `is_complex()` predicates to complete the family (#1127).,1,229,FALSE,NA
rlang,9e9f3634f01080e14ab56d6c374d9de7,The C function `r_obj_address()` now properly prefixes addresses with the hexadecimal prefix `0x` on Windows (#1135).,1,230,FALSE,NA
rlang,3ba82b0637d3bd26d5ef2e0c845cf22f,`obj_address()` is now exported.,1,231,FALSE,NA
rlang,ea4144d945f611b64bd1560071fc7b43,`%<~%` now actually works.,1,232,FALSE,NA
rlang,1d1b85825cba5d3bef06e3df12dc578f,`XXH3_64bits()` from the XXHash library is now exposed as C callable under the name `rlang_xxh3_64bits()`.,1,233,FALSE,NA
rlang,fc3488f15f8b8860b3008d771706a607,Fix for CRAN checks.,1,234,FALSE,NA
rlang,a587d9e24cb70cbd015214ef46dddd39,Fix for CRAN checks.,1,235,FALSE,NA
rlang,f8a57d93da22332792140d1fc81195a4,Fixed a gcc11 warning related to `hash()` (#1088).,1,236,FALSE,NA
rlang,0033ef718a9f18bd8c21b9be4dbe8d36,"New `hash()` function to generate 128-bit hashes for arbitrary R objects using the xxHash library. The implementation is modeled after xxhashlite, created by @​coolbutuseless.",1,237,FALSE,NA
rlang,998c7c4fdb5e17b91e9de13f6098b0da,"New `check_installed()` function. Unlike `is_installed()`, it asks the user whether to install missing packages. If the user accepts, the packages are installed with `pak::pkg_install()` if available, or `utils::install.packages()` otherwise. If the session is non interactive or if the user chooses not to install the packages, the current evaluation is aborted (#1075).",1,238,FALSE,NA
rlang,784c6bf780b6a79f187875e0420857dc,rlang is now licensed as MIT (#1063).,1,239,FALSE,NA
rlang,b7d0a02d0364bef7569d711d71fc4792,"Fixed an issue causing extra empty lines in `inform()` messages with `.frequency` (#1076, @​schloerke).",1,240,FALSE,NA
rlang,17e838731e275e8b28eee0bca03e52e9,"`expr_deparse()` now correctly wraps code using `::` and `:::` (#1072, @​krlmlr).",1,241,FALSE,NA
rlang,cbcb24bf5a6733eed336a67afbb74d9a,Dropped support for the R 3.2 series.,1,242,FALSE,NA
rlang,f864a989670d45255585fbfdfa7de704,"`inject()` evaluates its argument with `!!`, `!!!`, and `{{` support.",1,243,FALSE,NA
rlang,919d652a86326c86d1d05da44f2221ea,New `enquo0()` and `enquos0()` operators for defusing function arguments without automatic injection (unquotation).,1,244,FALSE,NA
rlang,e2c787776e655d23f8baa28150504948,"`format_error_bullets()` is no longer experimental. The `message` arguments of `abort()`, `warn()`, and `inform()` are automatically passed to that function to make it easy to create messages with regular, info, and error bullets. See `?format_error_bullets` for more information.",1,245,FALSE,NA
rlang,5bb8ea47c45fea7a5f19a2dd30917a98,New `zap_srcref()` function to recursively remove source references from functions and calls.,1,246,FALSE,NA
rlang,22f7b6a804c39963836ba6ba0e7799f1,A new compat file for the zeallot operator `%<-%` is now available in the rlang repository.,1,247,FALSE,NA
rlang,dc789a150386c3d22e3242e370599529,New `%<~%` operator to define a variable lazily.,1,248,FALSE,NA
rlang,c4a41b5cf26a1d3eec061f0c1b0f29bf,New `env_browse()` and `env_is_browsed()` functions. `env_browse()` is equivalent to evaluating `browser()` within an environment. It sets the environment to be persistently browsable (or unsets it if `value = FALSE` is supplied).,1,249,FALSE,NA
rlang,6cff0c1b66a85d1bb423e85e1cd4d4af,Functions created from quosures with `as_function()` now print in a more user friendly way.,1,250,FALSE,NA
rlang,c03bccc3359dd41a0be1cda1bd57264c,New `rlang_print_backtrace` C callable for debugging from C interpreters (#1059).,1,251,FALSE,NA
rlang,1c77303930f08aba5df9c350d7e5284e,The `.data` pronoun no longer skips functions (#1061). This solves a dplyr issue involving rowwise data frames and list-columns of functions (tidyverse/dplyr#5608).,1,252,FALSE,NA
rlang,f182a1ecfe1d63a32f133c06859d2315,`as_data_mask()` now intialises environments of the correct size to improve efficiency (#1048).,1,253,FALSE,NA
rlang,87c20af82c2043244d16b6f0b77225c7,"`eval_bare()`, `eval_tidy()` (#961), and `with_handlers()` (#518) now propagate visibility.",1,254,FALSE,NA
rlang,f55dfadf8c18ea404f133201df5a015f,`cnd_signal()` now ignores `NULL` inputs.,1,255,FALSE,NA
rlang,0ab655d264f2dbb09886afb3211c2eee,Fixed bug that prevented splicing a named empty vector with the `!!!` operator (#1045).,1,256,FALSE,NA
rlang,e19b41a34e3e3f0dc47832c4cd403f34,"The exit status of is now preserved in non-interactive sessions when `entrace()` is used as an `options(error = )` handler (#1052, rstudio/bookdown#920).",1,257,FALSE,NA
rlang,543011619f1f3d395fe8232ffb901f6c,`next` and `break` are now properly deparsed as nullary operators.,1,258,FALSE,NA
rlang,0eef187b692f2a89ed1a4559da54212b,Backtraces now include native stacks (e.g. from C code) when the winch package is installed and `rlang_trace_use_winch` is set to `TRUE` (@​krlmlr).,1,259,FALSE,NA
rlang,566c1081d5d310bc1110b5409a00f10f,Compatibility with upcoming testthat 3 and magrittr 2 releases.,1,260,FALSE,NA
rlang,415162edcddbecf3e0e8a2ac0b083994,"`get_env()` now returns the proper environment with primitive functions, i.e. the base namespace rather than the base environment (r-lib/downlit#32).",1,261,FALSE,NA
rlang,781e379ddd39e3d87038ad724eef6423,`entrace()` no longer handles non-rlang errors that carry a backtrace. This improves compatibility with packages like callr.,1,262,FALSE,NA
rlang,c6ac3ff3f324fb70dfbd51471df263aa,Backtraces of unhandled errors are now displayed without truncation in non-interactive sessions (#856).,1,263,FALSE,NA
rlang,2b2dd4c013b9a0400066b7bd3347d1e5,"`is_interactive()` no longer consults ""rstudio.notebook.executing"" option (#1031).",1,264,FALSE,NA
rlang,27f6a2b3864c1a13b5f51f0b8b14e1de,`cnd_muffle()` now returns `FALSE` instead of failing if the condition is not mufflable (#1022).,1,265,FALSE,NA
rlang,18e98667a0dcf0d69970b763cc4fe246,`warn()` and `inform()` gain a `.frequency` argument to control how frequently the warning or message should be displayed.,1,266,FALSE,NA
rlang,6725f33ce652908edf53b2523dd92902,"New `raw_deparse_str()` function for converting a raw vector into a string of hexadecimal characters (@​krlmlr, #978).",1,267,FALSE,NA
rlang,c6f2e52db7aa3bf18d1f5705147c4e7c,"The backtraces of chained errors are no longer decomposed by error context. Instead, the error messages are displayed as a tree to reflect the error ancestry, and the deepest backtrace in the ancestry is displayed. This change simplifies the display (#851) and makes it possible to rethow errors from a calling handler rather than an exiting handler, which we now think is more appropriate because it allows users to `recover()` into the error.",1,268,FALSE,NA
rlang,be773d5c8834ca8d487dc0e7b47dd9d6,"`env_bind()`, `env_bind_active()`, `env_bind_lazy()`, `env_get()`, and `env_get_list()` have been rewritten in C.",1,269,FALSE,NA
rlang,27d8c496ddc0802df28a9b7790e4bb24,`env_poke()` now supports `zap()` sentinels for removing bindings (#1012) and has better support for characters that are not representable in the local encoding.,1,270,FALSE,NA
rlang,b7f39e19a92bbb57df66d6e1641f1b0d,`env_poke()` has been rewritten in C for performance.,1,271,FALSE,NA
rlang,599c793b8f5cb946d65c696d69654186,The unicode translation warnings that appeared on Windows with R 4.0 are now fixed.,1,272,FALSE,NA
rlang,d85e41a1c26bc57a84d557ed0c685146,`env_unbind(inherit = TRUE)` now only removes a binding from the first parent environment that has a binding. It used to remove the bindings from the whole ancestry. The new behaviour doesn't guarantee that a scope doesn't have a binding but it is safer.,1,273,FALSE,NA
rlang,86899b3488bf264f6c1c38791b9c5583,`env_has()` is now rewritten in C for performance.,1,274,FALSE,NA
rlang,c2bbdc0c8e898dbb6606f8643d59b926,`dots_list()` gains a `.named` argument for auto-naming dots (#957).,1,275,FALSE,NA
rlang,bb1f342d10ac84f34bf7ac4f9ae9c9a4,It is now possible to subset the `.data` pronoun with quosured symbols or strings (#807).,1,276,FALSE,NA
rlang,d3edba9a62eed303c60682741fdf6b03,"Expressions like `quote(list(""a b"" = 1))` are now properly deparsed by `expr_deparse()` (#950).",1,277,FALSE,NA
rlang,c3e06bee27fa0455fac68c20d540002b,"`parse_exprs()` now preserves names (#808). When a single string produces multiple expressions, the names may be useful to figure out what input produced which expression.",1,278,FALSE,NA
rlang,c0c1eaf534bea1fade499a94c3807976,`parse_exprs()` now supports empty expressions (#954).,1,279,FALSE,NA
rlang,0cb2831d898a8e3e8cf1777b47610052,`list2(!!!x)` no longer evaluates `x` multiple times (#981).,1,280,FALSE,NA
rlang,97b3d59ebfe5df13ba6d595c42397185,"`is_installed()` now properly handles a `pkg` argument of length \> 1. Before this it silently tested the first element of `pkg` only and thus always returned `TRUE` if the first package was installed regardless of the actual length of `pkg`. (#991, @​salim-b)",1,281,FALSE,NA
rlang,9852efc77e0ced549d9053212f73cec1,"`arg_match0()` is a faster version of `arg_match()` for use when performance is at a premium (#997, @​krlmlr).",1,282,FALSE,NA
rlang,ab3e7e123d3a33421ba1a6d8d0322d6d,"`!!!` now uses a combination of `length()`, `names()`, and `[[` to splice S3 and S4 objects. This produces more consistent behaviour than `as.list()` on a wider variety of vector classes (#945, tidyverse/dplyr#4931).",1,283,FALSE,NA
rlang,27dcc19994e79a9e22c6998140bc3e2b,"`set_names()`, `is_formula()`, and `names2()` are now implemented in C for efficiency.",1,284,FALSE,NA
rlang,244bfb7e6cfccf3c9537dc203ba254e8,The `.data` pronoun now accepts symbol subscripts (#836).,1,285,FALSE,NA
rlang,7b0c0d8423f4cb642cb7095277beb578,"Quosure lists now explicitly inherit from `""list""`. This makes them compatible with the vctrs package (#928).",1,286,FALSE,NA
rlang,cd6d9090b15ae23703a8526cb59a1c00,"All rlang options are now documented in a centralised place, see `?rlang::faq-options` (#899, @​smingerson).",1,287,FALSE,NA
rlang,5c90a5b0b66de79ba32350a35e0de3e7,Fixed crash when `env_bindings_are_lazy()` gets improper arguments (#923).,1,288,FALSE,NA
rlang,54dd29722e35a02a78c0c3588642cfcf,"`arg_match()` now detects and suggests possible typos in provided arguments (@​jonkeane, #798).",1,289,FALSE,NA
rlang,748c537cd38773778fde8d3fa1508335,"`arg_match()` now gives an error if argument is of length greater than 1 and doesn't exactly match the values input, similar to base `match.arg` (#914, @​AliciaSchep)",1,290,FALSE,NA
rlang,cfbcb6955d745e69740fd9ed20b39731,Maintenance release for CRAN.,1,291,FALSE,NA
rlang,3838063969c55a1d1e78e4c58b271a32,"You can now use glue syntax to unquote on the LHS of `:=`. This syntax is automatically available in all functions taking dots with `list2()` and `enquos()`, and thus most of the tidyverse. Note that if you use the glue syntax in an R package, you need to import glue. A single pair of braces triggers normal glue interpolation:",1,292,FALSE,NA
rlang,3838063969c55a1d1e78e4c58b271a32,"```
df <- data.frame(x = 1:3)

suffix <- ""foo""
df %>% dplyr::mutate(""var_{suffix}"" := x * 2)
#>   x var_foo
#> 1 1       2
#> 2 2       4
#> 3 3       6
```",1,293,TRUE,NA
rlang,3838063969c55a1d1e78e4c58b271a32,"Using a pair of double braces is for labelling a function argument. Technically, this is shortcut for `""{as_label(enquo(arg))}""`. The syntax is similar to the curly-curly syntax for interpolating function arguments:",1,293,FALSE,NA
rlang,3838063969c55a1d1e78e4c58b271a32,"```
my_wrapper <- function(data, var, suffix = ""foo"") {
  data %>% dplyr::mutate(""{{ var }}_{suffix}"" := {{ var }} * 2)
}
df %>% my_wrapper(x)
#>   x x_foo
#> 1 1     2
#> 2 2     4
#> 3 3     6

df %>% my_wrapper(sqrt(x))
#>   x sqrt(x)_foo
#> 1 1    2.000000
#> 2 2    2.828427
#> 3 3    3.464102
```",1,294,TRUE,NA
rlang,a3ca557acfd31368e8e11302e6e1bb07,Fixed a bug in magrittr backtraces that caused duplicate calls to appear in the trace.,1,295,FALSE,NA
rlang,a8b314f4bee2a36313dcabeca641ae9b,Fixed a bug in magrittr backtraces that caused wrong call indices.,1,296,FALSE,NA
rlang,8537cb0083b7943308a6b63d4666f987,Empty backtraces are no longer shown when `rlang_backtrace_on_error` is set.,1,297,FALSE,NA
rlang,7f8ca7a3f26b2dff0e6397df22c2d75c,The tidy eval `.env` pronoun is now exported for documentation purposes.,1,298,FALSE,NA
rlang,a600ad74b7137828965a1558bb0a608e,`warn()` and `abort()` now check that either `class` or `message` was supplied. `inform()` allows sending empty message as it is occasionally useful for building user output incrementally.,1,299,FALSE,NA
rlang,8ef6b85ccfc5899186a2403ca8ac0d09,"`flatten()` fails with a proper error when input can't be flattened (#868, #885).",1,300,FALSE,NA
rlang,e847f726cb6f00a41ff3fabe2ccf6245,`inform()` now consistently appends a final newline to the message (#880).,1,301,FALSE,NA
rlang,b265d3fc330eb2a907a0cce661f0fa4c,`cnd_body.default()` is now properly registered.,1,302,FALSE,NA
rlang,df2ea092561fb9d4f6e3c53d05be9030,`cnd_signal()` now uses the same approach as `abort()` to save unhandled errors to `last_error()`.,1,303,FALSE,NA
rlang,98239881d4f2296814fd87cf16d8869f,Parsable constants like `NaN` and `NA_integer_` are now deparsed by `expr_deparse()` in their parsable form (#890).,1,304,FALSE,NA
rlang,7cb9cd57545959765a36db577fc966d4,Infix operators now stick to their LHS when deparsed by `expr_deparse()` (#890).,1,305,FALSE,NA
rlang,07c928b7fc7582634583834141e8e586,"New `cnd_header()`, `cnd_body()` and `cnd_footer()` generics. These are automatically called by `conditionMessage.rlang_error()`, the default method for all rlang errors. Concretely, this is a way of breaking up lazy generation of error messages with `conditionMessage()` into three independent parts. This provides a lot of flexibility for hierarchies of error classes, for instance you could inherit the body of an error message from a parent class while overriding the header and footer.",1,306,FALSE,NA
rlang,631b0f6ccefe11b73c1f4e1cda5708bb,The reminder to call `last_error()` is now less confusing thanks to a suggestion by @​markhwhiteii.,1,307,FALSE,NA
rlang,c8cb130893d8339b30ea8760c02e01f1,"The functions prefixed in `scoped_` have been renamed to use the more conventional `local_` prefix. For instance, `scoped_bindings()` is now `local_bindings()`. The `scoped_` functions will be deprecated in the next significant version of rlang (0.5.0).",1,308,FALSE,NA
rlang,7ea54d18fff3e14cb1a20736cb1ca634,"The `.subclass` argument of `abort()`, `warn()` and `inform()` has been renamed to `class`. This is for consistency with our conventions for class constructors documented in https://adv-r.hadley.nz/s3.html#s3-subclassing.",1,309,FALSE,NA
rlang,dfbc28bbb676536be89ca4cf3335fd15,"`inform()` now prints messages to the standard output by default in interactive sessions. This makes them appear more like normal output in IDEs such as RStudio. In non-interactive sessions, messages are still printed to standard error to make it easy to redirect messages when running R scripts (#852).",1,310,FALSE,NA
rlang,7ecb50f422a84a5e94598ba1d9c55619,Fixed an error in `trace_back()` when the call stack contains a quosured symbol.,1,311,FALSE,NA
rlang,11a0feed937ad3ae7b4c2a0cd4b32eb7,Backtrace is now displayed in full when an error occurs in non-interactive sessions. Previously the backtraces of parent errors were left out.,1,312,FALSE,NA
rlang,28aedd71eef3af25d7b30fe96dd8ae04,"New experimental framework for creating bulleted error messages. See `?cnd_message` for the motivation and an overwiew of the tools we have created to support this approach. In particular, `abort()` now takes character vectors to assemble a bullet list. Elements named `x` are prefixed with a red cross, elements named `i` are prefixed with a blue info symbol, and unnamed elements are prefixed with a bullet.",1,313,FALSE,NA
rlang,41f9e7ff7cbfed78d826987263e73f1e,Capture of backtrace in the context of rethrowing an error from an exiting handler has been improved. The `tryCatch()` context no longer leaks in the high-level backtrace.,1,314,FALSE,NA
rlang,a70f36084a23492340ee73d46e8f7211,"Printing an error no longer recommends calling `last_trace()`, unless called from `last_error()`.",1,315,FALSE,NA
rlang,3c91ddb90549048a2d00337a86c896a4,"`env_clone()` no longer recreates active bindings and is now just an alias for `env2list(as.list(env))`. Unlike `as.list()` which returns the active binding function on R \< 4.0, the value of active bindings is consistently used in all versions.",1,316,FALSE,NA
rlang,a4f2eb11839aa85bbd1a1e1d1c7f0a18,"The display of rlang errors derived from parent errors has been improved. The simplified backtrace (as printed by `rlang::last_error()`) no longer includes the parent errors. On the other hand, the full backtrace (as printed by `rlang::last_trace()`) now includes the backtraces of the parent errors.",1,317,FALSE,NA
rlang,346675d474dff56e6970305dc0bd9e18,"`cnd_signal()` has improved support for rlang errors created with `error_cnd()`. It now records a backtrace if there isn't one already, and saves the error so it can be inspected with `rlang::last_error()`.",1,318,FALSE,NA
rlang,368bcdd2013a2aca6a724fd55d265320,"rlang errors are no longer formatted and saved through `conditionMessage()`. This makes it easier to use a `conditionMessage()` method in subclasses created with `abort()`, which is useful to delay expensive generation of error messages until display time.",1,319,FALSE,NA
rlang,1466fc0037349d754f12a3a760a62adb,`abort()` can now be called without error message. This is useful when `conditionMessage()` is used to generate the message at print-time.,1,320,FALSE,NA
rlang,b2811c102b20e05b57b21d45488106a0,Fixed an infinite loop in `eval_tidy()`. It occurred when evaluating a quosure that inherits from the mask itself.,1,321,FALSE,NA
rlang,093297fc104b34f5be81d04d13d33d7a,`env_bind()`'s performance has been significantly improved by fixing a bug that caused values to be repeatedly looked up by name.,1,322,FALSE,NA
rlang,b390a912e6ae884bc95355b4c76960f7,`cnd_muffle()` now checks that a restart exists before invoking it. The restart might not exist if the condition is signalled with a different function (such as `stop(warning_cnd)`).,1,323,FALSE,NA
rlang,98f415aa7bd3c0b747c3fe6bdab1a557,`trace_length()` returns the number of frames in a backtrace.,1,324,FALSE,NA
rlang,44035bf9db12f34138b580ee4ba773d7,Added internal utility `cnd_entrace()` to add a backtrace to a condition.,1,325,FALSE,NA
rlang,b5c542c71141b3e28e3457af85872f94,`rlang::last_error()` backtraces are no longer displayed in red.,1,326,FALSE,NA
rlang,89a8cf33f89b98f1c3e8962d1b43d24b,"`x %|% y` now also works when `y` is of same length as `x` (@​rcannood, #806).",1,327,FALSE,NA
rlang,726b13b93772deb3a255e291763c4fc1,"Empty named lists are now deparsed more explicitly as `""<named list>""`.",1,328,FALSE,NA
rlang,d47ff773fb76331160671725fc894146,Fixed `chr()` bug causing it to return invisibly.,1,329,FALSE,NA
rlang,936bbb967cacf87abd59bfc19509e752,"New `pairlist2()` function with splicing support. It preserves missing arguments, which makes it useful for lists of formal parameters for functions.",1,334,FALSE,NA
rlang,eacdebe776e69ede049533a8bbe0012c,"`is_bool()` is a scalar type predicate that checks whether its input is a single `TRUE` or `FALSE`. Like `is_string()`, it returns `FALSE` when the input is missing. This is useful for type-checking function arguments (#695).",1,335,FALSE,NA
rlang,bf4099e790e0846fe127b7e5e6d8f6ac,"`is_string()` gains a `string` argument. `is_string(x, ""foo"")` is a shortcut for `is_character(x) && length(x) == 1 && identical(x, ""foo"")`.",1,336,FALSE,NA
rlang,d2c2cd0eb40be13bf3a4ad8867820015,Lists of quosures now have pillar methods for display in tibbles.,1,337,FALSE,NA
rlang,a162b02c69861deaeea0b6f3883eaee3,`set_names()` now names unnamed input vectors before applying a function. The following expressions are now equivalent:,1,338,FALSE,NA
rlang,a162b02c69861deaeea0b6f3883eaee3,"```
letters %>% set_names() %>% set_names(toupper)

letters %>% set_names(toupper)
```",1,339,TRUE,NA
rlang,d6739d29e206c44c5860836145f04fdc,"You can now pass a character vector as message argument for `abort()`, `warn()`, `inform()`, and `signal()`. The vector is collapsed to a single string with a `""\n""` newline separating each element of the input vector (#744).",1,340,FALSE,NA
rlang,600321f0f259df6f01bb00bd3e0606d9,`maybe_missing()` gains a `default` argument.,1,341,FALSE,NA
rlang,28254d610ba007bd28a4d08cd2c3207e,"New functions for weak references: `new_weakref()`, `weakref_key()`, `weakref_value()`, and `is_weakref()` (@​wch, #787).",1,342,FALSE,NA
rlang,1a4f05b400e780ee296fc88ee3549898,"The performance of `exec()` has been improved. It is now on the same order of performance as `do.call()`, though slightly slower.",1,343,FALSE,NA
rlang,daf6e9c2b2fab1af8cbcf45cbd5cfed0,`call2()` now uses the new `pairlist2()` function internally. This considerably improves its performance. This also means it now preserves empty arguments:,1,344,FALSE,NA
rlang,daf6e9c2b2fab1af8cbcf45cbd5cfed0,"```
call2(""fn"", 1, , foo = )
#> fn(1, , foo = )
```",1,345,TRUE,NA
rlang,146a91e56e1d4d32833a49dfba105fb0,"`with_handlers()` now installs calling handlers first on the stack, no matter their location in the argument list. This way they always take precedence over exiting handlers, which ensures their side effects (such as logging) take place (#718).",1,346,FALSE,NA
rlang,edb66d34146e3bfcaeef591daa565e85,"In rlang backtraces, the `global::` prefix is now only added when the function directly inherits from the global environment. Functions inheriting indirectly no longer have a namespace qualifier (#733).",1,347,FALSE,NA
rlang,c0f173484d9007ada94d4cf67dfa6fc3,`options(error = rlang::entrace)` now has better support for errors thrown from C (#779). It also saves structured errors in the `error` field of `rlang::last_error()`.,1,348,FALSE,NA
rlang,93bd98356319a0f20bdae9c04753d409,`ns_env()` and `ns_env_name()` (experimental functions) now support functions and environments consisently. They also require an argument from now on.,1,349,FALSE,NA
rlang,2ea56cd4c4c7ae963da1770cb07caaf0,"`is_interactive()` is aware of the `TESTTHAT` environment variable and returns `FALSE` when it is `""true""` (@​jennybc, #738).",1,350,FALSE,NA
rlang,41a7cb402fcb9ea60d2fa63201934fb5,"`fn_fmls()` and variants no longer coerce their input to a closure. Instead, they throw an error.",1,351,FALSE,NA
rlang,3153aafd4e8de03a2453092fdc495873,Fixed an issue in knitr that caused backtraces to print even when `error = TRUE`.,1,352,FALSE,NA
rlang,309f5da240ca7ccecaa58d37e09c01b7,"The return object from `as_function()` now inherits from `""function""` (@​richierocks, #735).",1,353,FALSE,NA
rlang,6ed2b5fba3aa7846119c5f1a31e28c07,`modify()` and `prepend()` (two experimental functions marked as in the questioning stage since rlang 0.3.0) are now deprecated. Vector functions are now out of scope for rlang. They might be revived in the vctrs or funs packages.,1,354,FALSE,NA
rlang,235a4d36127af135f5636aabe2fe9206,`exiting()` is soft-deprecated because `with_handlers()` treats handlers as exiting by default.,1,355,FALSE,NA
rlang,5bd4ed85d619faabd604734138a3ff8d,The vector constructors like `lgl()` or `new_logical()` are now in the questioning stage. They are likely to be moved to the vctrs package at some point. Same for the missing values shortcuts like `na_lgl`.,1,356,FALSE,NA
rlang,5c2762b16c3f454c8fd908e86d8a0276,"`as_logical()`, `as_integer()`, etc have been soft-deprecated in favour of `vctrs::vec_cast()`.",1,357,FALSE,NA
rlang,f57be8c5412187d252c030b048828a1c,"`type_of()`, `switch_type()`, `coerce_type()`, and friends are soft-deprecated.",1,358,FALSE,NA
rlang,043f110e74ede9ac1649f27b992cd903,The encoding and locale API was summarily archived. This API didn't bring any value and wasn't used on CRAN.,1,359,FALSE,NA
rlang,54031b8f5a44af496c0cb8c407bb26b0,"`lang_type_of()`, `switch_lang()`, and `coerce_lang()` were archived. These functions were not used on CRAN or internally.",1,360,FALSE,NA
rlang,5091fb7d6d2036cfc36247601ed18000,Subsetting quosures with `[` or `[[` is soft-deprecated.,1,361,FALSE,NA
rlang,b2ebf52bed32adc5a5f73be897883060,"All functions that were soft-deprecated, deprecated, or defunct in previous releases have been bumped to the next lifecycle stage.",1,362,FALSE,NA
rlang,d370df90cc5223b933c08d9f5996467e,Fixed protection issue reported by rchk.,1,363,FALSE,NA
rlang,42a65f8322672e4d94d4aa45b468f5a7,The experimental option `rlang__backtrace_on_error` is no longer experimental and has been renamed to `rlang_backtrace_on_error`.,1,364,FALSE,NA
rlang,b77b37fb0a3d35a4c2724ebcb24cff5f,"New ""none"" option for `rlang_backtrace_on_error`.",1,365,FALSE,NA
rlang,d31e8c3b76f26d464c97a4a701d05333,Unary operators applied to quosures now give better error messages.,1,366,FALSE,NA
rlang,3e52c669ce1be909f5ab4b8c3fbfd9f7,"Fixed issue with backtraces of warnings promoted to error, and entraced via `withCallingHandlers()`. The issue didn't affect entracing via top level `options(error = rlang::entrace)` handling.",1,367,FALSE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,"New `entrace()` condition handler. Add this to your RProfile to enable rlang backtraces for all errors, including warnings promoted to errors:",1,368,FALSE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,"```
if (requireNamespace(""rlang"", quietly = TRUE)) {
  options(error = rlang::entrace)
}
```",1,369,TRUE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,This handler also works as a calling handler:,1,369,FALSE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,"```
with_handlers(
  error = calling(entrace),
  foo(bar)
)
```",1,370,TRUE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,However it's often more practical to use `with_abort()` in that case:,1,370,FALSE,NA
rlang,73dfb07f5a735b7877419416b1d3f02f,"```
with_abort(foo(bar))
```",1,371,TRUE,NA
rlang,557eb073f99aa7c92d89bccd8b67d698,`with_abort()` gains a `classes` argument to promote any kind of condition to an rlang error.,1,372,FALSE,NA
rlang,de8337adbbb531ce23810890ca0f97d3,New `last_trace()` shortcut to print the backtrace stored in the `last_error()`.,1,373,FALSE,NA
rlang,b54bcbec198da9e5e440256a9be73421,Backtrace objects now print in full by default.,1,374,FALSE,NA
rlang,258be2c6205aa5fd8300f7d15d6b117a,Calls in backtraces are now numbered according to their position in the call tree. The numbering is non-contiguous for simplified backtraces because of omitted call frames.,1,375,FALSE,NA
rlang,19a6d1aacd438b387b0bda9bb792c85a,`catch_cnd()` gains a `classes` argument to specify which classes of condition to catch. It returns `NULL` if the expected condition could not be caught (#696).,1,376,FALSE,NA
rlang,ca73de4012a2af74407dfaf17e6a115b,"Display an object in a concise way, for example to labellise axes in a graphical plot.",1,377,FALSE,NA
rlang,ca9ce2f3ee49f0eca1f3e98823f19b4a,"Give default names to columns in a data frame. In this case, labelling is the first step before name repair.",1,378,FALSE,NA
rlang,dbb6c132bf9d54e6e1a095c6f6555b44,New `is_interactive()` function. It serves the same purpose as `base::interactive()` but also checks if knitr is in progress and provides an escape hatch. Use `with_interactive()` and `scoped_interactive()` to override the return value of `is_interactive()`. This is useful in unit tests or to manually turn on interactive features in RMarkdown outputs,1,379,FALSE,NA
rlang,e89ea01e28d9f7cde936575550c7ef1d,`calling()` now boxes its argument.,1,380,FALSE,NA
rlang,e916599f73d84d2ac77234c9fd998ed1,"New `done()` function to box a value. Done boxes are sentinels to indicate early termination of a loop or computation. For instance, it will be used in the purrr package to allow users to shortcircuit a reduction or accumulation.",1,381,FALSE,NA
rlang,679b5ed65aa9f35515a9a6999385d115,`new_box()` now accepts additional attributes passed to `structure()`.,1,382,FALSE,NA
rlang,051ef59681fc856dd4558fc52ef6cf64,Fixed a quotation bug with binary operators of zero or one argument such as `` `/`(1) `` (#652). They are now deparsed and printed properly as well.,1,383,FALSE,NA
rlang,2dd2e85a323f0fbc456430e94f78a271,New `call_ns()` function to retrieve the namespace of a call. Returns `NULL` if the call is not namespaced.,1,384,FALSE,NA
rlang,5ad8085c15c74b9fae2a1b15ff50127a,Top-level S3 objects are now deparsed properly.,1,385,FALSE,NA
rlang,31f5f2055e07098eff12c86e006c2542,Empty `{` blocks are now deparsed on the same line.,1,386,FALSE,NA
rlang,9fd750226a476482e29de13940b12064,Fixed a deparsing issue with symbols containing non-ASCII characters (#691).,1,387,FALSE,NA
rlang,58937b70b4d6c39220b877a1a133d55c,"`expr_print()` now handles `[` and `[[` operators correctly, and deparses non-syntactic symbols with backticks.",1,388,FALSE,NA
rlang,4dd0e7a792d937311f17f52a80e01677,"`call_modify()` now respects ordering of unnamed inputs. Before this fix, it would move all unnamed inputs after named ones.",1,389,FALSE,NA
rlang,c7152ca1ec8564a8dc28952825d33c03,`as_closure()` wrappers now call primitives with positional arguments to avoid edge case issues of argument matching.,1,390,FALSE,NA
rlang,649573e6ee3b3ad54a68dac1b9529fde,`as_closure()` wrappers now dispatch properly on methods defined in the global environment (tidyverse/purrr#459).,1,391,FALSE,NA
rlang,c81e5b653eb092f772e4c634c70e8695,`as_closure()` now supports both base-style (`e1` and `e2`) and purrr-style (`.x` and `.y`) arguments with binary primitives.,1,392,FALSE,NA
rlang,79caca0dd6bc3c22537d83e49c93dca7,"`exec()` takes `.fn` as first argument instead of `f`, for consistency with other rlang functions.",1,393,FALSE,NA
rlang,40e18129b9092ac3a783393898efb955,Fixed infinite loop with quosures created inside a data mask.,1,394,FALSE,NA
rlang,e90ca2085eedbbda2a32c7b5766c1ed7,Base errors set as `parent` of rlang errors are now printed correctly.,1,395,FALSE,NA
rlang,ed1b74ececd1a7d2251f380c77236f63,`quo_text()` now deparses non-syntactic symbols with backticks:,1,396,FALSE,NA
rlang,ed1b74ececd1a7d2251f380c77236f63,"```
quo_text(sym(""foo+""))
#> [1] ""`foo+`""
```",1,397,TRUE,NA
rlang,ed1b74ececd1a7d2251f380c77236f63,"This caused a number of issues in reverse dependencies as `quo_text()` tends to be used for converting symbols to strings. `quo_text()` and `quo_name()` should not be used for this purpose because they are general purpose deparsers. These functions should generally only be used for printing outputs or creating default labels. If you need to convert symbols to strings, please use `as_string()` rather than `quo_text()`. We have extended the documentation of `?quo_text` and `?quo_name` to make these points clearer.",1,397,FALSE,NA
rlang,80d792b815305a44963dfd31b02796d3,"`exprs()` no longer flattens quosures. `exprs(!!!quos(x, y))` is now equivalent to `quos(x, y)`.",1,398,FALSE,NA
rlang,71c0705e471b80520884ad5f22e45fec,The sentinel for removing arguments in `call_modify()` has been changed from `NULL` to `zap()`. This breaking change is motivated by the ambiguity of `NULL` with valid argument values.,1,399,FALSE,NA
rlang,71c0705e471b80520884ad5f22e45fec,"```
call_modify(call, arg = NULL)  # Add `arg = NULL` to the call
call_modify(call, arg = zap()) # Remove the `arg` argument from the call
```",1,400,TRUE,NA
rlang,a5e1a2d6b32dd35e414147d44891388f,The `%@​%` operator now quotes its input and supports S4 objects. This makes it directly equivalent to `@​` except that it extracts attributes for non-S4 objects (#207).,1,401,FALSE,NA
rlang,437348da4589301902ea3d2bc78b431e,Taking the `env_parent()` of the empty environment is now an error.,1,402,FALSE,NA
rlang,b42acb43edcb18e9499b43c7fd4c91cd,"`abort()` now records backtraces automatically in the error object. Errors thrown with `abort()` invite users to call `rlang::last_error()` to see a backtrace and help identifying where and why the error occurred. The backtraces created by rlang (you can create one manually with `trace_back()`) are printed in a simplified form by default that removes implementation details from the backtrace. To see the full backtrace, call `summary(rlang::last_error())`. `abort()` also gains a `parent` argument. This is meant for situations where you're calling a low level API (to download a file, parse a JSON file, etc) and would like to intercept errors with `base::tryCatch()` or `rlang::with_handlers()` and rethrow them with a high-level message. Call `abort()` with the intercepted error as the `parent` argument. When the user prints `rlang::last_error()`, the backtrace will be shown in two sections corresponding to the high-level and low-level contexts. In order to get segmented backtraces, the low-level error has to be thrown with `abort()`. When that's not the case, you can call the low-level function within `with_abort()` to automatically promote all errors to rlang errors.",1,403,FALSE,NA
rlang,28c65dd3f5d6d2a1aa7ed7159ad07174,The tidy eval changes are mostly for developers of data masking APIs. The main user-facing change is that `.data[[` is now an unquote operator so that `var` in `.data[[var]]` is never masked by data frame columns and always picked from the environment. This makes the pronoun safe for programming in functions.,1,404,FALSE,NA
rlang,e61f6169ab476bca4f29675835950c7f,"The `!!!` operator now supports all classed objects like factors. It calls `as.list()` on S3 objects and `as(x, ""list"")` on S4 objects.",1,405,FALSE,NA
rlang,087431460b68e8a18d39454ce6fed45e,"`dots_list()` gains several arguments to control how dots are collected. You can control the selection of arguments with the same name with `.homonyms` (keep first, last, all, or abort). You can also elect to preserve empty arguments with `.preserve_empty`.",1,406,FALSE,NA
rlang,94f1dd228c31826c3ccb2341619feb57,"New `trace_back()` captures a backtrace. Compared to the base R traceback, it contains additional structure about the relationship between frames. It comes with tools for automatically restricting to frames after a certain environment on the stack, and to simplify when printing. These backtraces are now recorded in errors thrown by `abort()` (see below).",1,407,FALSE,NA
rlang,7117573d790bc105f31b510993212ff6,`abort()` gains a `parent` argument to specify a parent error. This is meant for situations where a low-level error is expected (e.g. download or parsing failed) and you'd like to throw an error with higher level information. Specifying the low-level error as parent makes it possible to partition the backtraces based on ancestry.,1,408,FALSE,NA
rlang,5430447cf91d0f352fa1b71f84c1fd1d,Errors thrown with `abort()` now embed a backtrace in the condition object. It is no longer necessary to record a trace with a calling handler for such errors.,1,409,FALSE,NA
rlang,b639d000e106836112ee8eb276bcdef5,`with_abort()` runs expressions in a context where all errors are promoted to rlang errors and gain a backtrace.,1,410,FALSE,NA
rlang,eb85a8daf543a669082a19a233d49626,Unhandled errors thrown by `abort()` are now automatically saved and can be retrieved with `rlang::last_error()`. The error prints with a simplified backtrace. Call `summary(last_error())` to see the full backtrace.,1,411,FALSE,NA
rlang,20bf91906743ce470574c5f3bcccc28f,New experimental option `rlang__backtrace_on_error` to display backtraces alongside error messages. See `?rlang::abort` for supported options.,1,412,FALSE,NA
rlang,e2abb0814404a1ecf60b9805245fc4a6,"The new `signal()` function completes the `abort()`, `warn()` and `inform()` family. It creates and signals a bare condition.",1,413,FALSE,NA
rlang,f6c01235cf999c39957743bcd5f7d553,New `interrupt()` function to simulate an user interrupt from R code.,1,414,FALSE,NA
rlang,1308657f2b56ba08b2f2f5db96466b9f,"`cnd_signal()` now dispatches messages, warnings, errors and interrupts to the relevant signalling functions (`message()`, `warning()`, `stop()` and the C function `Rf_onintr()`). This makes it a good choice to resignal a captured condition.",1,415,FALSE,NA
rlang,315619d1315d5a5cb6a4c86b1724412b,"New `cnd_type()` helper to determine the type of a condition (`""condition""`, `""message""`, `""warning""`, `""error""` or `""interrupt""`).",1,416,FALSE,NA
rlang,738593326533e39197314fa11425a25b,"`abort()`, `warn()` and `inform()` now accepts metadata with `...`. The data are stored in the condition and can be examined by user handlers. Consequently all arguments have been renamed and prefixed with a dot (to limit naming conflicts between arguments and metadata names).",1,417,FALSE,NA
rlang,f6f6ce4a47e9d17f8f5c91cb5e3f56bb,`with_handlers()` treats bare functions as exiting handlers (equivalent to handlers supplied to `tryCatch()`). It also supports the formula shortcut for lambda functions (as in purrr).,1,418,FALSE,NA
rlang,2784f6fa377748bf25a7e3a15e2d5139,`with_handlers()` now produces a cleaner stack trace.,1,419,FALSE,NA
rlang,00ca069b8b6eeac2fe2a75eef7d32f13,"The input types of `!!!` have been standardised. `!!!` is generally defined on vectors: it takes a vector (typically, a list) and unquotes each element as a separate argument. The standardisation makes `!!!` behave the same in functions taking dots with `list2()` and in quoting functions. `!!!` accepts these types:",1,420,FALSE,NA
rlang,00ca069b8b6eeac2fe2a75eef7d32f13,"• Lists, pairlists, and atomic vectors. If they have a class, they are converted with `base::as.list()` to allow S3 dispatch. Following this change, objects like factors can now be spliced without data loss.",2,421,FALSE,"The input types of `!!!` have been standardised. `!!!` is generally defined on vectors: it takes a vector (typically, a list) and unquotes each element as a separate argument. The standardisation makes `!!!` behave the same in functions taking dots with `list2()` and in quoting functions. `!!!` accepts these types:"
rlang,00ca069b8b6eeac2fe2a75eef7d32f13,"• S4 objects. These are converted with `as(obj, ""list"")` before splicing.",2,422,FALSE,"The input types of `!!!` have been standardised. `!!!` is generally defined on vectors: it takes a vector (typically, a list) and unquotes each element as a separate argument. The standardisation makes `!!!` behave the same in functions taking dots with `list2()` and in quoting functions. `!!!` accepts these types:"
rlang,00ca069b8b6eeac2fe2a75eef7d32f13,"• Quoted blocks of expressions, i.e. `{ }` calls",2,423,FALSE,"The input types of `!!!` have been standardised. `!!!` is generally defined on vectors: it takes a vector (typically, a list) and unquotes each element as a separate argument. The standardisation makes `!!!` behave the same in functions taking dots with `list2()` and in quoting functions. `!!!` accepts these types:"
rlang,31cb3979b0832bbee94fdf11c2903b10,`!!!` disallows:,1,423,FALSE,NA
rlang,31cb3979b0832bbee94fdf11c2903b10,"• Any other objects like functions or environments, but also language objects like formula, symbols, or quosures.",2,424,FALSE,`!!!` disallows:
rlang,da0f8ff87c6424fa758ca46c72895086,Quoting functions used to automatically wrap language objects in lists to make them spliceable. This behaviour is now soft-deprecated and it is no longer valid to write `!!!enquo(x)`. Please unquote scalar objects with `!!` instead.,1,424,FALSE,NA
rlang,1022dce685301fee7280eeac3377e666,"`dots_list()`, `enexprs()` and `enquos()` gain a `.homonyms` argument to control how to treat arguments with the same name. The default is to keep them. Set it to `""first""` or `""last""` to keep only the first or last occurrences. Set it to `""error""` to raise an informative error about the arguments with duplicated names.",1,425,FALSE,NA
rlang,9495d631ae3195d4d2f9b65cdc710953,"`enexprs()` and `enquos()` now support `.ignore_empty = ""all""` with named arguments as well (#414).",1,426,FALSE,NA
rlang,c96a333a896ec5699ac40e3bf09f822c,"`dots_list()` gains a `.preserve_empty` argument. When `TRUE`, empty arguments are stored as missing arguments (see `?missing_arg`).",1,427,FALSE,NA
rlang,43aaaf9e05315a37c5bb951e807b8dcf,"`dots_list()`, `enexprs()` and `enquos()` gain a `.check_assign` argument. When `TRUE`, a warning is issued when a `<-` call is detected in `...`. No warning is issued if the assignment is wrapped in brackets like `{ a <- 1 }`. The warning lets users know about a possible typo in their code (assigning instead of matching a function parameter) and requires them to be explicit that they really want to assign to a variable by wrapping in parentheses.",1,428,FALSE,NA
rlang,5faf3f95cafd2102a55e53c5368bd6d9,"`lapply(list(quote(foo)), list2)` no longer evaluates `foo` (#580).",1,429,FALSE,NA
rlang,932c3bf367f6bb79ed3c44851fc9ccd6,You can now unquote quosured symbols as LHS of `:=`. The symbol is automatically unwrapped from the quosure.,1,430,FALSE,NA
rlang,1f7fcd676b623ad5fe2091c967c1cdf2,"Quosure methods have been defined for common operations like `==`. These methods fail with an informative error message suggesting to unquote the quosure (#478, #tidyverse/dplyr#3476).",1,431,FALSE,NA
rlang,e25f2034992d45a1bc6cfecc70483113,"`as_data_pronoun()` now accepts data masks. If the mask has multiple environments, all of these are looked up when subsetting the pronoun. Function objects stored in the mask are bypassed.",1,432,FALSE,NA
rlang,933cc6fa408233d2ca6a42322f05e882,"It is now possible to unquote strings in function position. This is consistent with how the R parser coerces strings to symbols. These two expressions are now equivalent: `expr(""foo""())` and `expr((!!""foo"")())`.",1,433,FALSE,NA
rlang,04aac53448f22f4dda03a3a113a57838,Quosures converted to functions with `as_function()` now support nested quosures.,1,434,FALSE,NA
rlang,76ad80beaf748d96618970f75448da95,"`expr_deparse()` (used to print quosures at the console) now escapes special characters. For instance, newlines now print as `""\n""` (#484). This ensures that the roundtrip `parse_expr(expr_deparse(x))` is not lossy.",1,435,FALSE,NA
rlang,6add878870b42378410492ee3ca5015c,`new_data_mask()` now throws an error when `bottom` is not a child of `top` (#551).,1,436,FALSE,NA
rlang,2177aeb5ecaab8c37ab22b380b4f302b,Formulas are now evaluated in the correct environment within `eval_tidy()`. This fixes issues in dplyr and other tidy-evaluation interfaces.,1,437,FALSE,NA
rlang,32c2c20fc3aa562b63eedda0a8aab4cb,New functions `new_quosures()` and `as_quosures()` to create or coerce to a list of quosures. This is a small S3 class that ensures two invariants on subsetting and concatenation: that each element is a quosure and that the list is always named even if only with a vector of empty strings.,1,438,FALSE,NA
rlang,fda6512e5c0ddac89a9949b105e92a88,"`env()` now treats a single unnamed argument as the parent of the new environment. Consequently, `child_env()` is now superfluous and is now in questioning life cycle.",1,439,FALSE,NA
rlang,f99148dc79ba56179393004173efce08,New `current_env()` and `current_fn()` functions to retrieve the current environment or the function being evaluated. They are equivalent to `base::environment()` and `base::sys.function()` called without argument.,1,440,FALSE,NA
rlang,efff37048ea1505c67bef39309e69fe9,`env_get()` and `env_get_list()` gain a `default` argument to provide a default value for non-existing bindings.,1,441,FALSE,NA
rlang,05fafc7c617f3994778cbcf2638582a4,`env_poke()` now returns the old value invisibly rather than the input environment.,1,442,FALSE,NA
rlang,2a2b6d01f132430e26ad2e35d833fe0e,"The new function `env_name()` returns the name of an environment. It always adds the ""namespace:"" prefix to namespace names. It returns ""global"" instead of "".GlobalEnv"" or ""R_GlobalEnv"", ""empty"" instead of ""R_EmptyEnv"". The companion `env_label()` is like `env_name()` but returns the memory address for anonymous environments.",1,443,FALSE,NA
rlang,8e4fbd6f4e4e0393ce5f93da7632f64d,`env_parents()` now returns a named list. The names are taken with `env_name()`.,1,444,FALSE,NA
rlang,8dcc6a3eba86795501b03f782ac5bc0f,`env_parents()` and `env_tail()` now stop at the global environment by default. This can be changed with the `last` argument. The empty environment is always a stopping condition so you can take the parents or the tail of an environment on the search path without changing the default.,1,445,FALSE,NA
rlang,a07d698ed7c95c176f4741f0426e1dc1,New predicates `env_binding_are_active()` and `env_binding_are_lazy()` detect the kind of bindings in an environment.,1,446,FALSE,NA
rlang,54c760fe444fda628b5a75bd681919c9,`env_binding_lock()` and `env_binding_unlock()` allows to lock and unlock multiple bindings. The predicate `env_binding_are_locked()` tests if bindings are locked.,1,447,FALSE,NA
rlang,64b528e4596a65b22dc784476e069cec,`env_lock()` and `env_is_locked()` lock an environment or test if an environment is locked.,1,448,FALSE,NA
rlang,39c08034a9edd7f47d0f31421bdda2bf,`env_print()` pretty-prints environments. It shows the contents (up to 20 elements) and the properties of the environment.,1,449,FALSE,NA
rlang,2c4cd5d90f836bce17d1321ba94f1f8e,`is_scoped()` has been soft-deprecated and renamed to `is_attached()`. It now supports environments in addition to search names.,1,450,FALSE,NA
rlang,42bd7a0aaf18a6f719904ec0ab6420a7,`env_bind_lazy()` and `env_bind_active()` now support quosures.,1,451,FALSE,NA
rlang,4860dcf884df92f8f77396a242826e67,`env_bind_exprs()` and `env_bind_fns()` are soft-deprecated and renamed to `env_bind_lazy()` and `env_bind_active()` for clarity and consistency.,1,452,FALSE,NA
rlang,a63659cbd89d63a8176aabe2858b6784,"`env_bind()`, `env_bind_exprs()`, and `env_bind_fns()` now return the list of old binding values (or missing arguments when there is no old value). This makes it easy to restore the original environment state:",1,453,FALSE,NA
rlang,a63659cbd89d63a8176aabe2858b6784,"```
old <- env_bind(env, foo = ""foo"", bar = ""bar"")
env_bind(env, !!!old)
```",1,454,TRUE,NA
rlang,2385473ec69fad9d1d51c59fb9017e36,"`env_bind()` now supports binding missing arguments and removing bindings with zap sentinels. `env_bind(env, foo = )` binds a missing argument and `env_bind(env, foo = zap())` removes the `foo` binding.",1,455,FALSE,NA
rlang,5843af141d4eafe110db52d0b8ef09ad,The `inherit` argument of `env_get()` and `env_get_list()` has changed position. It now comes after `default`.,1,456,FALSE,NA
rlang,e610930b578538efc6ac5591afd080eb,`scoped_bindings()` and `with_bindings()` can now be called without bindings.,1,457,FALSE,NA
rlang,6beef9f745b4217a28a0ea2a0d97285a,`env_clone()` now recreates active bindings correctly.,1,458,FALSE,NA
rlang,234c146a5db99f0d500d78aa511cda3b,`env_get()` now evaluates promises and active bindings since these are internal objects which should not be exposed at the R level (#554),1,459,FALSE,NA
rlang,13e00f32bbbce12e2e4d8e52e03c6b90,"`env_print()` calls `get_env()` on its argument, making it easier to see the environment of closures and quosures (#567).",1,460,FALSE,NA
rlang,1bfbce07f427fc6a3f3a8b8dc4e7fb20,`env_get()` now supports retrieving missing arguments when `inherit` is `FALSE`.,1,461,FALSE,NA
rlang,9720720d09e1590a04dd557e8973f523,"`is_call()` now accepts multiple namespaces. For instance `is_call(x, ""list"", ns = c("""", ""base""))` will match if `x` is `list()` or if it's `base::list()`:",1,462,FALSE,NA
rlang,682d6a298f3d5bb2b5376b6621357e8a,"`call_modify()` has better support for `...` and now treats it like a named argument. `call_modify(call, ... = )` adds `...` to the call and `call_modify(call, ... = NULL)` removes it.",1,463,FALSE,NA
rlang,47320cb6d21cb7f12556b8fed8e9719a,`call_modify()` now preserves empty arguments. It is no longer necessary to use `missing_arg()` to add a missing argument to a call. This is possible thanks to the new `.preserve_empty` option of `dots_list()`.,1,464,FALSE,NA
rlang,ac3d165a6ec5d13fc90e819f1c6d2e83,`call_modify()` now supports removing unexisting arguments (#393) and passing multiple arguments with the same name (#398). The new `.homonyms` argument controls how to treat these arguments.,1,465,FALSE,NA
rlang,9451818f70b471eb604637104109ef3a,`call_standardise()` now handles primitive functions like `~` properly (#473).,1,466,FALSE,NA
rlang,5ec9b6c4d3568319e6a977ef1fb674d9,"`call_print_type()` indicates how a call is deparsed and printed at the console by R: prefix, infix, and special form.",1,467,FALSE,NA
rlang,b19dfdb0918eb905e729790863dd6f7f,The `call_` functions such as `call_modify()` now correctly check that their input is the right type (#187).,1,468,FALSE,NA
rlang,c0ee430ac960116329e20186c8e83304,New function `zap()` returns a sentinel that instructs functions like `env_bind()` or `call_modify()` that objects are to be removed.,1,469,FALSE,NA
rlang,504eeadd96461de243fe13b5ff46f91b,New function `rep_named()` repeats value along a character vector of names.,1,470,FALSE,NA
rlang,57c5031a8fe8889e75d710f243f2ed40,New function `exec()` is a simpler replacement to `invoke()` (#536). `invoke()` has been soft-deprecated.,1,471,FALSE,NA
rlang,65d249af85054b0b8dd900d407712313,Lambda functions created from formulas with `as_function()` are now classed. Use `is_lambda()` to check a function was created with the formula shorthand.,1,472,FALSE,NA
rlang,195f4d856728215c1ede9498f58728c7,`is_integerish()` now supports large double values (#578).,1,473,FALSE,NA
rlang,8552ab2288dc9c145a203545e7862fe9,`are_na()` now requires atomic vectors (#558).,1,474,FALSE,NA
rlang,5a1568aad1cec1112c0f5789246b219e,The operator `%@​%` has now a replacement version to update attributes of an object (#207).,1,475,FALSE,NA
rlang,e9c94e77b038977dd4d58df4f8dbf7ba,"`fn_body()` always returns a `{` block, even if the function has a single expression. For instance `fn_body(function(x) do())` returns `quote({ do() })`.",1,476,FALSE,NA
rlang,58e3d8911ef796091047a2c1ca5fe433,`is_string()` now returns `FALSE` for `NA_character_`.,1,477,FALSE,NA
rlang,7435169acc63f82489b7a3bc95e7ecf6,The vector predicates have been rewritten in C for performance.,1,478,FALSE,NA
rlang,8f79a0bf38d673838b0b8987a9b9970f,The `finite` argument of `is_integerish()` is now `NULL` by default. Missing values are now considered as non-finite for consistency with `base::is.finite()`.,1,479,FALSE,NA
rlang,60b32b6110ff57e6975127812c13fb82,`is_bare_integerish()` and `is_scalar_integerish()` gain a `finite` argument for consistency with `is_integerish()`.,1,480,FALSE,NA
rlang,0fbd1392ce49f8f3c12285e1826ecfbc,`flatten_if()` and `squash_if()` now handle primitive functions like `base::is.list()` as predicates.,1,481,FALSE,NA
rlang,65cebcdb6e08f33adb35199901679568,`is_symbol()` now accepts a character vector of names to mach the symbol against.,1,482,FALSE,NA
rlang,ab9f71bd598790a7d19c541df4a72b1d,"`parse_exprs()` and `parse_quos()` now support character vectors. Note that the output may be longer than the input as each string may yield multiple expressions (such as `""foo; bar""`).",1,483,FALSE,NA
rlang,a3ced787922be26660ad6f905fa70226,`parse_quos()` now adds the `quosures` class to its output.,1,484,FALSE,NA
rlang,4e2ecc79a7db9c746f58252be1432be0,rlang has been attached with a `library()` call.,1,485,FALSE,NA
rlang,8c9a0be851256e05267d70e800935050,The deprecated function has been called from the global environment.,1,486,FALSE,NA
rlang,912432d2040d076c7794a232a6c8b2d3,"`.data[[foo]]` is now an unquote operator. This guarantees that `foo` is evaluated in the context rather than the data mask and makes it easier to treat `.data[[""bar""]]` the same way as a symbol. For instance, this will help ensuring that `group_by(df, .data[[""name""]])` and `group_by(df, name)` produce the same column name.",1,487,FALSE,NA
rlang,551c975a58afeafd48328d8d06d165c7,"Automatic naming of expressions now uses a new deparser (still unexported) instead of `quo_text()`. Following this change, automatic naming is now compatible with all object types (via `pillar::type_sum()` if available), prevents multi-line names, and ensures `name` and `.data[[""name""]]` are given the same default name.",1,488,FALSE,NA
rlang,4e7306931c6e76211d0e38d85610e6b5,Supplying a name with `!!!` calls is soft-deprecated. This name is ignored because only the names of the spliced vector are applied.,1,489,FALSE,NA
rlang,7a1d899d93cbd80429032e6b7988ef29,"Quosure lists returned by `quos()` and `enquos()` now have ""list-of"" behaviour: the types of new elements are checked when adding objects to the list. Consequently, assigning non-quosure objects to quosure lists is now soft-deprecated. Please coerce to a bare list with `as.list()` beforehand.",1,490,FALSE,NA
rlang,6fa47e66c4d684c4825f85376af3b6fe,`as_quosure()` now requires an explicit environment for symbols and calls. This should typically be the environment in which the expression was created.,1,491,FALSE,NA
rlang,61c25250524d51eb0a397ebc2ebecf54,`names()` and `length()` methods for data pronouns are deprecated. It is no longer valid to write `names(.data)` or `length(.data)`.,1,492,FALSE,NA
rlang,c95ca3a475733b50d857460b10884641,Using `as.character()` on quosures is soft-deprecated (#523).,1,493,FALSE,NA
rlang,4a2e12c5e3c446062d5128f529b9a830,Using `get_env()` without supplying an environment is now soft-deprecated. Please use `current_env()` to retrieve the current environment.,1,494,FALSE,NA
rlang,632688cb6cfcec8f342b34f03a4a0e87,The frame and stack API is soft-deprecated. Some of the functionality has been replaced by `trace_back()`.,1,495,FALSE,NA
rlang,ded8f8458c43d3a248b3ab4b11469c42,The `new_vector_along()` family is soft-deprecated because these functions are longer to type than the equivalent `rep_along()` or `rep_named()` calls without added clarity.,1,496,FALSE,NA
rlang,94f1225efee792b25decae3449a99085,"Passing environment wrappers like formulas or functions to `env_` functions is now soft-deprecated. This internal genericity was causing confusion (see issue #427). You should now extract the environment separately before calling these functions. This change concerns `env_depth()`, `env_poke_parent()`, `env_parent<-`, `env_tail()`, `set_env()`, `env_clone()`, `env_inherits()`, `env_bind()`, `scoped_bindings()`, `with_bindings()`, `env_poke()`, `env_has()`, `env_get()`, `env_names()`, `env_bind_exprs()` and `env_bind_fns()`.",1,497,FALSE,NA
rlang,e6642ef8238331f2d089103a8b37a7e5,`cnd_signal()` now always installs a muffling restart for non-critical conditions. Consequently the `.mufflable` argument has been soft-deprecated and no longer has any effect.,1,498,FALSE,NA
rlang,78cc6421aa46cdf3ead3651bab7ac45f,Calling `UQ()` and `UQS()` with the rlang namespace qualifier is deprecated as of rlang 0.3.0. Just use the unqualified forms instead:,1,499,FALSE,NA
rlang,78cc6421aa46cdf3ead3651bab7ac45f,"```
# Bad
rlang::expr(mean(rlang::UQ(var) * 100))

# Ok
rlang::expr(mean(UQ(var) * 100))

# Good
rlang::expr(mean(!!var * 100))
```",1,500,TRUE,NA
rlang,78cc6421aa46cdf3ead3651bab7ac45f,"Although soft-deprecated since rlang 0.2.0, `UQ()` and `UQS()` can still be used for now.",1,500,FALSE,NA
rlang,c5292bf64470668110d6ba0534c92181,The `call` argument of `abort()` and condition constructors is now deprecated in favour of storing full backtraces.,1,501,FALSE,NA
rlang,996376d9fc41122b80dcafab21705e22,The `.standardise` argument of `call_modify()` is deprecated. Please use `call_standardise()` beforehand.,1,502,FALSE,NA
rlang,2780e08629eee97fe2a4d1d319477a99,The `sentinel` argument of `env_tail()` has been deprecated and renamed to `last`.,1,503,FALSE,NA
rlang,55edd3cde085a6cc375bf7ae67f8b4e0,`as_dictionary()` is now defunct.,1,504,FALSE,NA
rlang,12f2f21774a56c80443ca4a948b0e6d1,"The experimental function `rst_muffle()` is now defunct. Please use `cnd_muffle()` instead. Unlike its predecessor, `cnd_muffle()` is not generic. It is marked as a calling handler and thus can be passed directly to `with_handlers()` to muffle specific conditions (such as specific subclasses of warnings).",1,505,FALSE,NA
rlang,fb8f5dd0691be5acdba2b796898dd40d,"`cnd_inform()`, `cnd_warn()` and `cnd_abort()` are retired and defunct. The old `cnd_message()`, `cnd_warning()`, `cnd_error()` and `new_cnd()` constructors deprecated in rlang 0.2.0 are now defunct.",1,506,FALSE,NA
rlang,d6b856200c0b1ae779cac0f6c2641cce,"Modifying a condition with `cnd_signal()` is defunct. In addition, creating a condition with `cnd_signal()` is soft-deprecated, please use the new function \[signal()\] instead.",1,507,FALSE,NA
rlang,22907a63b51373bc756c1991584d204e,`inplace()` has been renamed to `calling()` to follow base R terminology more closely.,1,508,FALSE,NA
rlang,ad526009fee569f08fc2fed050512ccc,The functions from the restart API are now in the questioning lifecycle stage. It is not clear yet whether we want to recommend restarts as a style of programming in R.,1,509,FALSE,NA
rlang,d1e0e94cb40dd028be1a2ce595a3de04,"`prepend()` and `modify()` are in the questioning stage, as well as `as_logical()`, `as_character()`, etc. We are still figuring out what vector tools belong in rlang.",1,510,FALSE,NA
rlang,9cd412e6c3fbdcbc655a67691bd0a8e7,"`flatten()`, `squash()` and their atomic variants are now in the questioning lifecycle stage. They have slightly different semantics than the flattening functions in purrr and we are currently rethinking our approach to flattening with the new typing facilities of the vctrs package.",1,511,FALSE,NA
rlang,ffec56ee2d97df1916cd6b06b7112f46,Functions with tidy dots support now allow splicing atomic vectors.,1,512,FALSE,NA
rlang,221e91821ee60065413da4b4f7ac51fa,Quosures no longer capture the current `srcref`.,1,513,FALSE,NA
rlang,bfedbc0d532bb866856c3aafb3a34643,Formulas are now evaluated in the correct environment by `eval_tidy()`. This fixes issues in dplyr and other tidy-evaluation interfaces.,1,514,FALSE,NA
rlang,f577979e734b694841a219ba86a375fe,The `!!` operator now has the precedence of unary `+` and `-` which allows a much more natural syntax: `!!a > b` only unquotes `a` rather than the whole `a > b` expression.,1,515,FALSE,NA
rlang,c56ab68eb3a704955b6baefd50680f23,`enquo()` works in magrittr pipes: `mtcars %>% select(!!enquo(var))`.,1,516,FALSE,NA
rlang,5d708e281af9792840ddaff3792b93ef,`enquos()` is a variant of `quos()` that has a more natural interface for capturing multiple arguments and `...`.,1,517,FALSE,NA
rlang,aa09238088add27132a2d3f268c36cb6,"The backend for `quos()`, `exprs()`, `list2()`, `dots_list()`, etc is now written in C. This greatly improve the performance of dots capture, especially with the splicing operator `!!!` which now scales much better (you'll see a 1000x performance gain in some cases). The unquoting algorithm has also been improved which makes `enexpr()` and `enquo()` more efficient as well.",1,518,FALSE,NA
rlang,35b399d3b3da7fbeb221d89afba6236e,"The tidy eval `!!` operator now binds tightly. You no longer have to wrap it in parentheses, i.e. `!!x > y` will only unquote `x`. Technically the `!!` operator has the same precedence as unary `-` and `+`. This means that `!!a:b` and `!!a + b` are equivalent to `(!!a):b` and `(!!a) + b`. On the other hand `!!a^b` and `!!a$b` are equivalent to`!!(a^b)` and `!!(a$b)`.",1,519,FALSE,NA
rlang,cfca0999f6d9548d6afa0c3ecb73b76f,"The print method for quosures has been greatly improved. Quosures no longer appear as formulas but as expressions prefixed with `^`; quosures are colourised according to their environment; unquoted objects are displayed between angular brackets instead of code (i.e. an unquoted integer vector is shown as `<int: 1, 2>` rather than `1:2`); unquoted S3 objects are displayed using `pillar::type_sum()` if available.",1,520,FALSE,NA
rlang,9637e18cb43c0df2932e96076b9eefc7,"New `enquos()` function to capture arguments. It treats `...` the same way as `quos()` but can also capture named arguments just like `enquo()`, i.e. one level up. By comparison `quos(arg)` only captures the name `arg` rather than the expression supplied to the `arg` argument. In addition, `enexprs()` is like `enquos()` but like `exprs()` it returns bare expressions. And `ensyms()` expects strings or symbols.",1,521,FALSE,NA
rlang,31e480a0c3afe906e58ab4f22ec131fe,It is now possible to use `enquo()` within a magrittr pipe:,1,522,FALSE,NA
rlang,31e480a0c3afe906e58ab4f22ec131fe,"```
select_one <- function(df, var) {
  df %>% dplyr::select(!!enquo(var))
}
```",1,523,TRUE,NA
rlang,31e480a0c3afe906e58ab4f22ec131fe,"Technically, this is because `enquo()` now also captures arguments in parents of the current environment rather than just in the current environment. The flip side of this increased flexibility is that if you made a typo in the name of the variable you want to capture, and if an object of that name exists anywhere in the parent contexts, you will capture that object rather than getting an error.",1,523,FALSE,NA
rlang,7de92bd2a9271237347bf929dc116aca,`quo_expr()` has been renamed to `quo_squash()` in order to better reflect that it is a lossy operation that flattens all nested quosures.,1,524,FALSE,NA
rlang,79c05c5c77214a428d683d44a826eb53,`!!!` now accepts any kind of objects for consistency. Scalar types are treated as vectors of length 1. Previously only symbolic objects like symbols and calls were treated as such.,1,525,FALSE,NA
rlang,9d7c97a9532234c03504b30ff45f4851,`ensym()` is a new variant of `enexpr()` that expects a symbol or a string and always returns a symbol. If a complex expression is supplied it fails with an error.,1,526,FALSE,NA
rlang,bf37e7076b36f767624cf98a0b8ee3f4,`exprs()` and `quos()` gain a `.unquote_names` arguments to switch off interpretation of `:=` as a name operator. This should be useful for programming on the language targetting APIs such as data.table.,1,527,FALSE,NA
rlang,5ade7d3c42ccb65ee6731c66856ceba3,`exprs()` gains a `.named` option to auto-label its arguments (#267).,1,528,FALSE,NA
rlang,a5e63c8a579c8251bb664ed6eedcd669,"Functions taking dots by value rather than by expression (e.g. regular functions, not quoting functions) have a more restricted set of unquoting operations. They only support `:=` and `!!!`, and only at top-level. I.e. `dots_list(!!! x)` is valid but not `dots_list(nested_call(!!! x))` (#217).",1,529,FALSE,NA
rlang,ac4ca8ef8cb36bd9b2b7248c6d699289,Functions taking dots with `list2()` or `dots_list()` now support splicing of `NULL` values. `!!! NULL` is equivalent to `!!! list()` (#242).,1,530,FALSE,NA
rlang,bb5caf026d7dd663d30839c70a31dbad,"Capture operators now support evaluated arguments. Capturing a forced or evaluated argument is exactly the same as unquoting that argument: the actual object (even if a vector) is inlined in the expression. Capturing a forced argument occurs when you use `enquo()`, `enexpr()`, etc too late. It also happens when your quoting function is supplied to `lapply()` or when you try to quote the first argument of an S3 method (which is necessarily evaluated in order to detect which class to dispatch to). (#295, #300).",1,531,FALSE,NA
rlang,de4f849bb076d1ed86908789e46b66d1,"Parentheses around `!!` are automatically removed. This makes the generated expression call cleaner: `(!! sym(""name""))(arg)`. Note that removing the parentheses will never affect the actual precedence within the expression as the parentheses are only useful when parsing code as text. The parentheses will also be added by R when printing code if needed (#296).",1,532,FALSE,NA
rlang,347e08c6e046edf56fa573bc6a853ed8,Quasiquotation now supports `!!` and `!!!` as functional forms:,1,533,FALSE,NA
rlang,347e08c6e046edf56fa573bc6a853ed8,"```
expr(`!!`(var))
quo(call(`!!!`(var)))
```",1,534,TRUE,NA
rlang,347e08c6e046edf56fa573bc6a853ed8,This is consistent with the way native R operators parses to function calls. These new functional forms are to be preferred to `UQ()` and `UQS()`. We are now questioning the latter and might deprecate them in a future release.,1,534,FALSE,NA
rlang,9717a9cea9e614d7ecc1cdbd12d437d0,The quasiquotation parser now gives meaningful errors in corner cases to help you figure out what is wrong.,1,535,FALSE,NA
rlang,440ff76f5fd492ae4bc531e79c3304c4,"New getters and setters for quosures: `quo_get_expr()`, `quo_get_env()`, `quo_set_expr()`, and `quo_set_env()`. Compared to `get_expr()` etc, these accessors only work on quosures and are slightly more efficient.",1,536,FALSE,NA
rlang,26c4fc4c65af3086dc543a953819c77f,`quo_is_symbol()` and `quo_is_call()` now take the same set of arguments as `is_symbol()` and `is_call()`.,1,537,FALSE,NA
rlang,bdb1e4560b9a13d4158b364fb348f19b,`enquo()` and `enexpr()` now deal with default values correctly (#201).,1,538,FALSE,NA
rlang,467002f8c2e07a3ba0936dad12f69112,Splicing a list no longer mutates it (#280).,1,539,FALSE,NA
rlang,0ec3fd4cbae0694caf481c4d0f7c48cd,The new functions `cnd_warn()` and `cnd_inform()` transform conditions to warnings or messages before signalling them.,1,540,FALSE,NA
rlang,dd4d22f2384a9c3fe6c5da8148de55d8,`cnd_signal()` now returns invisibly.,1,541,FALSE,NA
rlang,044cbd3ebeb300aaa6e431d582f7e221,`cnd_signal()` and `cnd_abort()` now accept character vectors to create typed conditions with several S3 subclasses.,1,542,FALSE,NA
rlang,fe8f983649c0f11a42ed4bf773553dcf,`is_condition()` is now properly exported.,1,543,FALSE,NA
rlang,3959bccee5c46b4cca1478f3284f1bc6,Condition signallers such as `cnd_signal()` and `abort()` now accept a call depth as `call` arguments. This allows plucking a call from further up the call stack (#30).,1,544,FALSE,NA
rlang,f50cfbafc46a2ea44c5519c7d66942c2,New helper `catch_cnd()`. This is a small wrapper around `tryCatch()` that captures and returns any signalled condition. It returns `NULL` if none was signalled.,1,545,FALSE,NA
rlang,e4956ac767b4ea16ea50603945dc3a79,"`cnd_abort()` now adds the correct S3 classes for error conditions. This fixes error catching, for instance by `testthat::expect_error()`.",1,546,FALSE,NA
rlang,c3310c2c896eafe1c596dec7463b6303,`env_get_list()` retrieves muliple bindings from an environment into a named list.,1,547,FALSE,NA
rlang,90707d93bacc24b7c6a2babfa86f982b,`with_bindings()` and `scoped_bindings()` establish temporary bindings in an environment.,1,548,FALSE,NA
rlang,1cb8d373b14ca969fa760b7fd7d3ad16,`is_namespace()` is a snake case wrapper around `isNamespace()`.,1,549,FALSE,NA
rlang,1a7fd5f48f20d7a235e7c754972f86c9,"New functions `inherits_any()`, `inherits_all()`, and `inherits_only()`. They allow testing for inheritance from multiple classes. The `_any` variant is equivalent to `base::inherits()` but is more explicit about its behaviour. `inherits_all()` checks that all classes are present in order and `inherits_only()` checks that the class vectors are identical.",1,550,FALSE,NA
rlang,f5b1d1eadc9cd2f22970e478577e526d,New `fn_fmls<-` and `fn_fmls_names<-` setters.,1,551,FALSE,NA
rlang,302cb18fa9f2f93be1dbf1b770682064,"New function experimental function `chr_unserialise_unicode()` for turning characters serialised to unicode point form (e.g. `<U+xxxx>`) to UTF-8. In addition, `as_utf8_character()` now translates those as well. (@​krlmlr)",1,552,FALSE,NA
rlang,06a147baaf1a2640f3bd1d4436c58716,`expr_label()` now supports quoted function definition calls (#275).,1,553,FALSE,NA
rlang,1f714524a82ed2a6e897073259ec581b,`call_modify()` and `call_standardise()` gain an argument to specify an environment. The call definition is looked up in that environment when the call to modify or standardise is not wrapped in a quosure.,1,554,FALSE,NA
rlang,7dbb59ea8b0214f121b9f93b08b3b262,`is_symbol()` gains a `name` argument to check that that the symbol name matches a string (#287).,1,555,FALSE,NA
rlang,5db08c34b88f1d908d7f876999ac60b3,"New `rlang_box` class. Its purpose is similar to the `AsIs` class from `base::I()`, i.e. it protects a value temporarily. However it does so by wrapping the value in a scalar list. Use `new_box()` to create a boxed value, `is_box()` to test for a boxed value, and `unbox()` to unbox it. `new_box()` and `is_box()` accept optional subclass.",1,556,FALSE,NA
rlang,18f4ec7fd91a200a68dadba6e4539d70,"The vector constructors such as `new_integer()`, `new_double_along()` etc gain a `names` argument. In the case of the `_along` family it defaults to the names of the input vector.",1,557,FALSE,NA
rlang,61ef0b92d953d8f062001b064571f76c,"When nested quosures are evaluated with `eval_tidy()`, the `.env` pronoun now correctly refers to the current quosure under evaluation (#174). Previously it would always refer to the environment of the outermost quosure.",1,558,FALSE,NA
rlang,17905af4cfcd131b1c310aa91c122331,`as_pairlist()` (part of the experimental API) now supports `NULL` and objects of type pairlist (#397).,1,559,FALSE,NA
rlang,d88ab0bfcab9f4ceebb0bc359561a202,"Fixed a performance bug in `set_names()` that caused a full copy of the vector names (@​jimhester, #366).",1,560,FALSE,NA
rlang,8b7b792a32ec45605d88eea8207d6ecb,"The particle ""lang"" has been renamed to ""call"":",1,561,FALSE,NA
rlang,8b7b792a32ec45605d88eea8207d6ecb,• `lang()` has been renamed to `call2()`.,2,562,FALSE,"The particle ""lang"" has been renamed to ""call"":"
rlang,8b7b792a32ec45605d88eea8207d6ecb,• `new_language()` has ben renamed to `new_call()`.,2,563,FALSE,"The particle ""lang"" has been renamed to ""call"":"
rlang,8b7b792a32ec45605d88eea8207d6ecb,• `is_lang()` has been renamed to `is_call()`. We haven't replaced the `is_unary_lang()` and `is_binary_lang()` because they are redundant with the `n` argument of `is_call()`.,2,564,FALSE,"The particle ""lang"" has been renamed to ""call"":"
rlang,8b7b792a32ec45605d88eea8207d6ecb,"• All call accessors such as `lang_fn()`, `lang_name()`, `lang_args()` etc are soft-deprecated and renamed with `call_` prefix.",2,565,FALSE,"The particle ""lang"" has been renamed to ""call"":"
rlang,cdd10f6c990bc6422d1dbabcf4a5d152,"In rlang 0.1 calls were called ""language"" objects in order to follow the R type nomenclature as returned by `base::typeof()`. We wanted to avoid adding to the confusion between S modes and R types. With hindsight we find it is better to use more meaningful type names.",1,565,FALSE,NA
rlang,bb50c5686396ee1cd8a64815cfa6acaa,"We now use the term ""data mask"" instead of ""overscope"". We think data mask is a more natural name in the context of R. We say that that objects from user data mask objects in the current environment. This makes reference to object masking in the search path which is due to the same mechanism (in technical terms, lexical scoping with hierarchically nested environments). Following this new terminology, the new functions `as_data_mask()` and `new_data_mask()` replace `as_overscope()` and `new_overscope()`. `as_data_mask()` has also a more consistent interface. These functions are only meant for developers of tidy evaluation interfaces.",1,566,FALSE,NA
rlang,bad83ef9d9f2b8a2a0f87b0860862de0,We no longer require a data mask (previously called overscope) to be cleaned up after evaluation. `overscope_clean()` is thus soft-deprecated without replacement.,1,567,FALSE,NA
rlang,b8e2e3cca66b32e49de90e9e7c18feb1,"`!!` now binds tightly in order to match intuitive parsing of tidy eval code, e.g. `!! x > y` is now equivalent to `(!! x) > y`. A corollary of this new syntax is that you now have to be explicit when you want to unquote the whole expression on the right of `!!`. For instance you have to explicitly write `!! (x > y)` to unquote `x > y` rather than just `x`.",1,568,FALSE,NA
rlang,d76cbb9394f03988f384ad2c63807115,"`UQ()`, `UQS()` and `:=` now issue an error when called directly. The previous definitions caused surprising results when the operators were invoked in wrong places (i.e. not in quasiquoted arguments).",1,569,FALSE,NA
rlang,1fac1491e38019b9b45262efbfefe50a,"The prefix form `` `!!`() `` is now an alias to `!!` rather than `UQE()`. This makes it more in line with regular R syntax where operators are parsed as regular calls, e.g. `a + b` is parsed as `` `+`(a, b) `` and both forms are completely equivalent. Also the prefix form `` `!!!`() `` is now equivalent to `!!!`.",1,570,FALSE,NA
rlang,3db6da8b972a3bb21f721e3b697b1885,`UQE()` is now deprecated in order to simplify the syntax of quasiquotation. Please use `!! get_expr(x)` instead.,1,571,FALSE,NA
rlang,225db64e1cadd3599510eadee5ab948e,`expr_interp()` now returns a formula instead of a quosure when supplied a formula.,1,572,FALSE,NA
rlang,c5f6d6cb1a623c199199a82eaefdae65,`is_quosureish()` and `as_quosureish()` are deprecated. These functions assumed that quosures are formulas but that is only an implementation detail.,1,573,FALSE,NA
rlang,a4421a6a6dd8e2e38e63a7d714e7760b,"`new_cnd()` is now `cnd()` for consistency with other constructors. Also, `cnd_error()`, `cnd_warning()` and `cnd_message()` are now `error_cnd()`, `warning_cnd()` and `message_cnd()` to follow our naming scheme according to which the type of output is a suffix rather than a prefix.",1,574,FALSE,NA
rlang,a967ab72c8fcca70071c84586487bf4a,`is_node()` now returns `TRUE` for calls as well and `is_pairlist()` does not return `TRUE` for `NULL` objects. Use `is_node_list()` to determine whether an object either of type `pairlist` or `NULL`. Note that all these functions are still experimental.,1,575,FALSE,NA
rlang,c55f3108549507347ca58dee9f15ac3a,`set_names()` no longer automatically splices lists of character vectors as we are moving away from automatic splicing semantics.,1,576,FALSE,NA
rlang,4844599f4c20658af0a8eba84e8fcb4c,Calling the functional forms of unquote operators with the rlang namespace qualifier is soft-deprecated. `UQ()` and `UQS()` are not function calls so it does not make sense to namespace them. Supporting namespace qualifiers complicates the implementation of unquotation and is misleading as to the nature of unquoting (which are syntactic operators at quotation-time rather than function calls at evaluation-time).,1,577,FALSE,NA
rlang,063671ddc4fabe1f4ba76e17038f11f5,"We are now questioning `UQ()` and `UQS()` as functional forms of `!!`. If `!!` and `!!!` were native R operators, they would parse to the functional calls `` `!!`() `` and `` `!!!`() ``. This is now the preferred way to unquote with a function call rather than with the operators. We haven't decided yet whether we will deprecate `UQ()` and `UQS()` in the future. In any case we recommend using the new functional forms.",1,578,FALSE,NA
rlang,d4d02a2ec8e6f5ca5382e21fdcaaa7a3,`parse_quosure()` and `parse_quosures()` are soft-deprecated in favour of `parse_quo()` and `parse_quos()`. These new names are consistent with the rule that abbreviated suffixes indicate the return type of a function. In addition the new functions require their callers to explicitly supply an environment for the quosures.,1,579,FALSE,NA
rlang,d22b3f1a0abd400b3bea3aba6bce0d37,Using `f_rhs()` and `f_env()` on quosures is soft-deprecated. The fact that quosures are formulas is an implementation detail that might change in the future. Please use `quo_get_expr()` and `quo_get_env()` instead.,1,580,FALSE,NA
rlang,d0cb03c24cb8d83212154c6a71ab6033,`quo_expr()` is soft-deprecated in favour of `quo_squash()`. `quo_expr()` was a misnomer because it implied that it was a mere expression acccessor for quosures whereas it was really a lossy operation that squashed all nested quosures.,1,581,FALSE,NA
rlang,3d3726d3b1be20c5f9117be32d3e1dbe,"With the renaming of the `lang` particle to `call`, all these functions are soft-deprecated: `lang()`, `is_lang()`, `lang_fn()`, `lang_name()`, `lang_args()`. In addition, `lang_head()` and `lang_tail()` are soft-deprecated without replacement because these are low level accessors that are rarely needed.",1,582,FALSE,NA
rlang,604f7850c2e70b66b7b5849e8d41d6b4,`as_overscope()` is soft-deprecated in favour of `as_data_mask()`.,1,583,FALSE,NA
rlang,4018818176cb04c555bbb106943527fa,"The node setters were renamed from `mut_node_` prefix to `node_poke_`. This change follows a new naming convention in rlang where mutation is referred to as ""poking"".",1,584,FALSE,NA
rlang,994f93f2f229daa57154f6a76858b4c1,`splice()` is now in questioning stage as it is not needed given the `!!!` operator works in functions taking dots with `dots_list()`.,1,585,FALSE,NA
rlang,3ba5a9fcbc43597aa2955b5623e6bf61,"`lgl_len()`, `int_len()` etc have been soft-deprecated and renamed with `new_` prefix, e.g. `new_logical()` and `new_integer()`. This is for consistency with other non-variadic object constructors.",1,586,FALSE,NA
rlang,4639f9da3e168d910e5d1e8e0380e164,`ll()` is now an alias to `list2()`. This is consistent with the new `call2()` constructor for calls. `list2()` and `call2()` are versions of `list()` and `call()` that support splicing of lists with `!!!`. `ll()` remains around as a shorthand for users who like its conciseness.,1,587,FALSE,NA
rlang,8e13c02460598cde84b06200e4416379,"Automatic splicing of lists in vector constructors (e.g. `lgl()`, `chr()`, etc) is now soft-deprecated. Please be explicit with the splicing operator `!!!`.",1,588,FALSE,NA
rlang,aee87a3fbf58f18c05d0e2805a9367f0,This is a maintenance release in anticipation of a forthcoming change to R's C API (use `MARK_NOT_MUTABLE()` instead of `SET_NAMED()`).,1,589,FALSE,NA
rlang,47434d2c562e47987a550fa7f5bfe3d6,New function `is_reference()` to check whether two objects are one and the same.,1,590,FALSE,NA
rlang,796c587d7e1a71bf058e1ba3b9b890fc,`eval_tidy()` no longer maps over lists but returns them literally. This behaviour is an overlook from past refactorings and was never documented.,1,591,FALSE,NA
rlang,6a056120c4482c4378e00c00e38e5a78,Bare formulas are now evaluated in the correct environment in tidyeval functions.,1,592,FALSE,NA
rlang,e1f06ccc12c92619af55b5b9f4ea4ed2,"`enquo()` now works properly within compiled functions. Before this release, constants optimised by the bytecode compiler couldn't be enquoted.",1,593,FALSE,NA
rlang,3f2de364ed4104a7e12030caf0584619,"The `new_environment()` constructor creates a child of the empty environment and takes an optional named list of data to populate it. Compared to `env()` and `child_env()`, it is meant to create environments as data structures rather than as part of a scope hierarchy.",1,594,FALSE,NA
rlang,24e37bfaf7d2f306c9164e05a48924d8,The `new_call()` constructor creates calls out of a callable object (a function or an expression) and a pairlist of arguments. It is useful to avoid costly internal coercions between lists and pairlists of arguments.,1,595,FALSE,NA
rlang,c437d68186ff2bb56905be2fa7e3da24,`env_child()`'s first argument is now `.parent` instead of `parent`.,1,596,FALSE,NA
rlang,a16fd7509282534c081c58d29d95a8c5,`mut_` setters like `mut_attrs()` and environment helpers like `env_bind()` and `env_unbind()` now return their (modified) input invisibly. This follows the tidyverse convention that functions called primarily for their side effects should return their input invisibly.,1,597,FALSE,NA
rlang,166b39b910fe5c9673b9e34baa1ff03b,"`is_pairlist()` now returns `TRUE` for `NULL`. We added `is_node()` to test for actual pairlist nodes. In other words, `is_pairlist()` tests for the data structure while `is_node()` tests for the type.",1,598,FALSE,NA
rlang,1f3c988d226f22f36d00646621a296d6,"`env()` and `env_child()` can now get arguments whose names start with `.`. Prior to this fix, these arguments were partial-matching on `env_bind()`'s `.env` argument.",1,599,FALSE,NA
rlang,55fea6f63343f5167bca646f61e738f9,The internal `replace_na()` symbol was renamed to avoid a collision with an exported function in tidyverse. This solves an issue occurring in old versions of R prior to 3.3.2 (#133).,1,600,FALSE,NA
rstudioapi,6ebfc525c6ce2dffe9a9b1a5d0810fce,Added `setGhostText()` for setting ghost text in the current editor.,1,1,FALSE,NA
rstudioapi,9c479fe28e9b8141c6900a130606d2a0,Added `getDelegatedAzureToken` for Posit Workbench users needing to expose OAuth2 tokens for Azure services that have already had permissions configured,1,2,FALSE,NA
rstudioapi,90bf7d97f85f46990e2541634d6e32fa,`documentPath()` now marks the encoding of file paths as UTF-8. (#257),1,3,FALSE,NA
rstudioapi,1402b8bac9ebc90b8869ab78e3d86a32,"`getSourceEditorContext()` gains the `id` argument, to be used to request the editor context for a document with an already-known ID. (#251)",1,4,FALSE,NA
rstudioapi,6c916eb1099259ab7ce1dab5aba062b5,"Added `documentOpen()`, for opening a document in RStudio and optionally navigating the cursor to a particular point in the file. The method is synchronous and returns the document ID upon completion.",1,5,FALSE,NA
rstudioapi,08d9395878f839043455efeab229df97,Fixed an issue where `rstudioapi::askForSecret()` would erroneously fall back to using `rstudioapi::askForPassword()` during Knit.,1,6,FALSE,NA
rstudioapi,679290747f3684c24ecf1f887af86624,"Added `registerCommandCallback`, `registerCommandStreamCallback`, and `unregisterCommandCallback`, used to execute a callback after an IDE command is executed.",1,7,FALSE,NA
rstudioapi,7656b84c7bc4eb4b3409588159d2db56,Fixed an issue where `rstudioapi::insertText()` would fail. (#208),1,8,FALSE,NA
rstudioapi,243dc8e0017fe8c30bf473bc3170c133,Fixed an issue where remote `rstudioapi` calls would erroneously use a previous response in some cases.,1,9,FALSE,NA
rstudioapi,ffd31ccf7ac9e43ddb9c448903859eb8,Allow `navigateToFile` to accept an empty file. This file will default to the file currently in view in the active column.,1,10,FALSE,NA
rstudioapi,ba19641be443209dfd3b6970c123f311,"Added `registerChunkExecCallback` and `unregisterChunkExecCallback`, used to execute a callback after a chunk is ran.",1,11,FALSE,NA
rstudioapi,24fb03b7a56b01b86c436a4714233b95,`rstudioapi::launcherResourceLimit()` now properly delegates the type and memory arguments. (#164),1,12,FALSE,NA
rstudioapi,dedfe3ab41d4a6d1ddb9420b006168aa,"`rstudioapi` gains the function `highlightUi()`, used to highlight UI elements in newer versions of RStudio.",1,13,FALSE,NA
rstudioapi,2ccb8532d7daaf0a9cfdbf4ff3fe9b8b,Paths returned from `selectFile()` are now properly marked with UTF-8 encoding.,1,14,FALSE,NA
rstudioapi,c2fbf70ace0c5b06edc6fe72ace5e979,"It is now possible for `rstudioapi` to communicate with a parent RStudio session, for R sessions launched as RStudio jobs. Use `rstudioapi::isAvailable(child_ok = TRUE)` to assert that it's okay to check that `rstudioapi` is available and is running within an RStudio job.",1,15,FALSE,NA
rstudioapi,9b0df0e21ef85c0238c80e76e46125eb,"Added `bugReport()`, a helper function for reporting RStudio bugs on the GitHub issue tracker with an issue template pre-populated with some helpful diagnostic information.",1,16,FALSE,NA
rstudioapi,8ef33665d2f97e8d5cca2b52d4a21680,"Added `userIdentity` and `systemUsername`, used to retrieve information about the current user.",1,17,FALSE,NA
rstudioapi,9a61792dd0df83e64a43f5dd1c503ec6,Added the parameters `echo` and `focus` to `sendToConsole()`.,1,18,FALSE,NA
rstudioapi,8abe442b5e8c8ea0ecd35644d6a399ad,"Added functions for displaying jobs in RStudio's Jobs pane: `jobAdd()`, `jobRemove()`, etc.",1,19,FALSE,NA
rstudioapi,9a35648d2397682ecb7f54ffc3636f36,"Added `translateLocalUrl()`, for translating localhost URLs to externally addressable ones on RStudio Server.",1,20,FALSE,NA
rstudioapi,d899a2ddcf107e7893631adf2c67c6d0,"Added functions for installing + using build tools: `buildToolsCheck()`, `buildToolsInstall()`, `buildToolsExec()`",1,21,FALSE,NA
rstudioapi,96be114a19f81f0f292dfae2d3ed03e5,"Added functions for installing + using themes: `addTheme()`, `applyTheme()`, `convertTheme()`, `getThemes()`, `getThemeInfo()`.",1,22,FALSE,NA
rstudioapi,1fcfe6547578f76f39d7c8696faab717,"Added `previewSql()`, for previewing output from executing a SQL query.",1,23,FALSE,NA
rstudioapi,159bf19538bdf98dc2335266fff9f0c8,"Added `askForSecret()`, for prompting the user to enter a password or otherwise privileged information.",1,24,FALSE,NA
rstudioapi,7e1234e6a9e587d8ab4b901ab9fde37e,Fixed an issue where `getActiveProject()` failed for non-ASCII paths. (#86),1,25,FALSE,NA
rstudioapi,f946e06a2d58f2fe863bef7a50809690,"Added methods for prompting the user for file paths: `selectFile()`, `selectDirectory()`.",1,26,FALSE,NA
rstudioapi,71e317b25ef312b220bca60317fdbb9f,`askForPassword()` gains a default prompt (#41),1,27,FALSE,NA
rstudioapi,b46575f7c8e3bccd2feb9ed8978f16ee,Add `createProjectTemplate()` function,1,28,FALSE,NA
rstudioapi,fc3b3a7d162a44f2c60eb1cab4bd0e2e,Add `setPersistentValue()` / `getPersistentValue()` functions,1,29,FALSE,NA
rstudioapi,993aa4b8db102b15ad8e245c30cc1d95,"Add methods for interacting with Terminal tab: `terminalActivate()`, `terminalClear()`, `terminalCreate()`, `terminalList()`, `terminalBuffer()`, `terminalContext()`, `terminalVisible()`, `terminalBusy()`, `terminalRunning()`, `terminalKill()`, `terminalSend()`, `terminalExecute()`, and `terminalExitCode()`.",1,30,FALSE,NA
rstudioapi,e41e69d6596b95c02f880e99e00f30e6,Add sendToConsole function,1,31,FALSE,NA
rstudioapi,ae8c970011441a8c5b726b0bfe4cc4e2,Add APIs for setting cursor position in document,1,32,FALSE,NA
rstudioapi,bb32dbb7338665bd404011b3999feda4,Add askForPassword function,1,33,FALSE,NA
rstudioapi,dda5e44af935dc7182d3f980a60304e4,Add getActiveProject function,1,34,FALSE,NA
rstudioapi,6fa86b23d33f1d128d7e109cc2bb89b5,"Add API methods for interacting with a document open in RStudio: 'insertText()', 'modifyRange()' and 'getActiveDocumentContext()'.",1,35,FALSE,NA
rstudioapi,5203825c6c85e43ef92db1cd94ba4d21,Add stub and documentation for sourceMarker function,1,36,FALSE,NA
rstudioapi,ae06384bc7714c866d271d2a1be44653,Compatibility with calling conventions for RStudio v0.99,1,37,FALSE,NA
rstudioapi,cd74f6c1132ae1876673d4645897a7ee,"Stubs and documentation for versionInfo, previewRd, and viewer functions",1,38,FALSE,NA
rstudioapi,5efe6e5f821a73453080115d2399f26f,Initial release to CRAN,1,39,FALSE,NA
rvest,dec593dbe9f1875ef05964f496e4f3aa,Re-document to fix HTML issues in `.Rd`.,1,1,FALSE,NA
rvest,4d6e68300966e4506820d8fef536e4d4,Fixes for CRAN,1,2,FALSE,NA
rvest,c21f3c1e6cb528f5d95dededa75af502,"`html_table()` converts empty tables to empty tibbles (@​epiben, #327).",1,3,FALSE,NA
rvest,36afb2da36b1f3081687ba90eb6bea5f,"`html_table()` correctly handles tables with cells that contain blank values for `rowspan` and/or `colspan`, so that e.g. `<td rowspan="""">` is parsed as `<td rowspan=1>` (@​epiben, #323).",1,4,FALSE,NA
rvest,d05cd10c09c3c99dcacd928e04bdde57,Fix broken example,1,5,FALSE,NA
rvest,12d7c3007c20f49eecab77ae7449b986,"New `html_text2()` provides a more natural rendering of HTML nodes into text, converting `<br>` into ""`\n`{=tex}"", and removing non-significant whitespace (#175). By default, it also converts `&nbsp;` into regular spaces, which you can suppress with `preserve_nbsp = TRUE` (#284).",1,6,FALSE,NA
rvest,aa158cff467070a8b6277910d615f565,"`html_table()` has been re-written from scratch to more closely mimic the algorithm that browsers use for parsing tables. This should mean that there are far fewer tables for which it fails to produce some output (#63, #204, #215). The `fill` argument has been deprecated since it is no longer needed. `html_table()` now returns a tibble rather than a data frame to be compatible with the rest of the tidyverse (#199). Its performance has been considerably improved (#237). It also gains a `na.strings` argument to control what values are converted to `NA` (#107), and a `convert` argument to control whether to run the conversion (#311).",1,7,FALSE,NA
rvest,0dd6923792222f867734c27705aa19f9,"New `html_form_submit()` allows you to submit a form directly, without needing to create a session (#300).",1,8,FALSE,NA
rvest,40c38a86b18f45c32ebd013af46fee9a,rvest is now licensed as MIT (#287).,1,9,FALSE,NA
rvest,c361095cfda96afc302c7d48d397b548,"rvest now imports xml2 rather than depending on it. This is cleaner because it avoids attaching all the xml2 functions that you're less likely to use. To reduce the change of breakages, rvest re-exports xml2 functions `read_html()` and `url_absolute()`, but your code may now need an explicit `library(xml2)`.",1,10,FALSE,NA
rvest,1b3f9b5e0673c30380e8b2d58ba48cf0,"`html_form()` now returns an object with class `rvest_form` (instead of form). Fields within a form now have class `rvest_field`, instead of a variety of classes that were lacking the `rvest_` prefix. All functions for working with forms have a common `html_form_` prefix: `set_values()` became `html_form_set()`. `submit_form()` was renamed to `session_submit()` because it returns a session.",1,11,FALSE,NA
rvest,f5d57466eaf0af03f016eea153211740,"`html_node()` and `html_nodes()` have been superseded in favor of `html_element()` and `html_elements()` since they (almost) always return elements, not nodes (#298).",1,12,FALSE,NA
rvest,73855b2292cfb546c2e77159cfcf9f32,`html_session()` is now `session()` and returns an object of class `rvest_session` (instead of `session`). All functions that work with session objects now have a common `session_` prefix.,1,13,FALSE,NA
rvest,d4e214256bdb59dd552ae89bfeaaa39b,"Long deprecated `html()`, `html_tag()`, `xml()` functions have been removed.",1,14,FALSE,NA
rvest,d39972e2bce22d84ab26622ee2435b41,`minimal_html()` (which doesn't appear to be used by any other package) has had its arguments flipped to make it more intuitive.,1,15,FALSE,NA
rvest,149a4856d2f6f1f4bb8f847d2a1b9312,`guess_encoding()` has been renamed to `html_encoding_guess()` to avoid a clash with `stringr::guess_encoding()` (#209). `repair_encoding()` has been deprecated because it doesn't appear to work.,1,16,FALSE,NA
rvest,9d0a5a994db392a46073ee5d6c8b23e8,`pluck()` is no longer exported to avoid a clash with `purrr::pluck()`; if you need it use `purrr::map_chr()` and friends instead (#209).,1,17,FALSE,NA
rvest,fc98236125abc967a80b9e1fd8d37eea,"`xml_tag()`, `xml_node()`, and `xml_nodes()` have been formally deprecated in favor of their `html_` equivalents.",1,18,FALSE,NA
rvest,6c4f8f6bfb114786646a2b517e19eea6,"The ""harvesting the web"" vignette has been rewritten to focus more on basics rvest, eliminating the screenshots to keep the installed package as svelte as possible. It's also been renamed to `vignette(""rvest"")` since it's the vignette that you should read first.",1,19,FALSE,NA
rvest,3ce18ed0dacfa7fca83622bed8783a3e,"The SelectorGadget vignette is now a web-only article, https://rvest.tidyverse.org/articles/articles/selectorgadget.html, so we can be more generous with screenshots since they're no longer bundled with every install of the package. Together with the rewrite of the other vignette, this means that rvest is now \~90 Kb instead of \~1.1 Mb.",1,20,FALSE,NA
rvest,64f7ef6b24f6b4111dee53b1631b33e1,All uses of IMDB have been eliminated since the site explicitly prohibits scraping (#195).,1,21,FALSE,NA
rvest,9ff6c3758725674bf45df316a82e23c2,`session_submit()` errors if `form` doesn't have a `url` (#288).,1,22,FALSE,NA
rvest,784087d525142216444d7c3a7281e144,New `session_forward()` function to complement `session_back()`. It now allows you to pick the submission button by position (#156). The `...` argument is deprecated; please use `config` instead.,1,23,FALSE,NA
rvest,e4a2a169603b38f72bab4c4f9459891d,"`html_form_set()` can now accept character vectors allowing you to select multiple checkboxes in a set or select multiple values from a multi-`<select>` (#127, with help from @​juba). It also uses dynamic dots so that you can use `!!!` if you have a list of values (#189).",1,24,FALSE,NA
rvest,13c671f8beba1825ef59e0e34c6ffe8e,Remove failing example,1,25,FALSE,NA
rvest,c28328fe7703671722454d76f21016e5,Use web archive to fix broken example.,1,26,FALSE,NA
rvest,7c08465641947d2db0dfbaec32f471f5,Remove unneeded `read_xml.response()` method (#242).,1,27,FALSE,NA
rvest,344600040b93c7467434ce7307690da1,Fix `R CMD check` failure,1,28,FALSE,NA
rvest,a87e586b24cbe144a641e603d43e61e5,"`submit_request()` now checks for empty form-field-types to select the correct submit fields (@​rentrop, #159)",1,29,FALSE,NA
rvest,8d0f109171bb12c9d4194d8e7bdd0aaf,Fixes to `follow_link()` and `back()` to correctly manage session history.,1,30,FALSE,NA
rvest,c2ecc4bbd57aec369ad8c576d8a4255c,"If you're using xml2 1.0.0, `html_node()` will now return a ""missing node"".",1,31,FALSE,NA
rvest,60ba6439f48676defa85889ffd4b6d3a,Parse rowspans and colspans effectively by filling using repetition from left to right (for colspan) and top to bottom (rowspan) (#111),1,32,FALSE,NA
rvest,7db9077efaf292fc157fb6c775f12b56,Updated a few examples and demos where the website structure has changed.,1,33,FALSE,NA
rvest,4d839174b38de1ddbe49516fe2d683c4,Made compatible with both xml2 0.1.2 and 1.0.0.,1,34,FALSE,NA
rvest,c6d8e20aea1f646069022c930f768164,Fix invalid link for SSA example.,1,35,FALSE,NA
rvest,f9166123a8f71db4e9c7c7bc1168f755,Parse `<options>` that don't have value attribute (#85).,1,36,FALSE,NA
rvest,668059e65fa86db10420b7600298c2ad,"Remove all remaining uses of `html()` in favor of `read_html()` (@​jimhester, #113).",1,37,FALSE,NA
rvest,814670cc4bb98e51564cf0438375b04e,"rvest has been rewritten to take advantage of the new xml2 package. xml2 provides a fresh binding to libxml2, avoiding many of the work-arounds previously needed for the XML package. Now rvest depends on the xml2 package, so all the xml functions are available, and rvest adds a thin wrapper for html.",1,38,FALSE,NA
rvest,37b1646a25d1be3047c722b373dc0f20,"A number of functions have change names. The old versions still work, but are deprecated and will be removed in rvest 0.4.0.",1,39,FALSE,NA
rvest,37b1646a25d1be3047c722b373dc0f20,• `html_tag()` -\> `html_name()`,2,40,FALSE,"A number of functions have change names. The old versions still work, but are deprecated and will be removed in rvest 0.4.0."
rvest,37b1646a25d1be3047c722b373dc0f20,• `html()` -\> `read_html()`,2,41,FALSE,"A number of functions have change names. The old versions still work, but are deprecated and will be removed in rvest 0.4.0."
rvest,9b6200eca81884b774fe94221c73ebaa,"`html_node()` now throws an error if there are no matches, and a warning if there's more than one match. I think this should make it more likely to fail clearly when the structure of the page changes.",1,42,FALSE,NA
rvest,c9d5a9d50357720774983d123826575a,`xml_structure()` has been moved to xml2. New `html_structure()` (also in xml2) highlights id and class attributes (#78).,1,43,FALSE,NA
rvest,16255b474fd1d62fa6cfe9bc3e57c6f6,`submit_form()` now works with forms that use GET (#66).,1,44,FALSE,NA
rvest,0f31ec7f8115f66d12793c0e1bdbb99f,"`submit_request()` (and hence `submit_form()`) is now case-insensitive, and so will find `<input type=SUBMIT>` as well as`<input type=""submit"">`.",1,45,FALSE,NA
rvest,3c9e30a82f4e1a33e25622c301ed0035,"`submit_request()` (and hence `submit_form()`) recognizes forms with `<input type=""image"">` as a valid form submission button.",1,46,FALSE,NA
rvest,2c492f6bbc3c527819246222f1cf44b5,`html()` and `xml()` pass `...` on to `httr::GET()` so you can more finely control the request (#48).,1,47,FALSE,NA
rvest,8c4032db2385b9e645f246e46e7b99f7,"Add xml support: parse with `xml()`, then work with using `xml_node()`, `xml_attr()`, `xml_attrs()`, `xml_text()` and `xml_tag()` (#24).",1,48,FALSE,NA
rvest,a115e2d78fa314cf0b286661c5f09eca,`xml_structure()`: new function that displays the structure (i.e. tag and attribute names) of a xml/html object (#10).,1,49,FALSE,NA
rvest,b0d9148094a781a8d2d771a3c606d722,"`follow_link()` now accepts css and xpath selectors. (#38, #41, #42)",1,50,FALSE,NA
rvest,827c808f2f4557af2a2477dc259e9d49,"`html()` does a better job of dealing with encodings (passing the problem on to `XML::parseHTML()`) instead of trying to do it itself (#25, #50).",1,51,FALSE,NA
rvest,b82cc862d5f643da1193d2c05753a874,`html_attr()` returns default value when input is NULL (#49),1,52,FALSE,NA
rvest,95f763208f290d49292bb2efe9e9a324,Add missing `html_node()` method for session.,1,53,FALSE,NA
rvest,bad06e8535bfd28befff70b9dd60580f,`html_nodes()` now returns an empty list if no elements are found (#31).,1,54,FALSE,NA
rvest,999a6dd093d0231899df9c97791380ab,`submit_form()` converts relative paths to absolute URLs (#52). It also deals better with 0-length inputs (#29).,1,55,FALSE,NA
stringr,38461c840634b4d13dd3418de4bca0c2,Some minor documentation improvements.,1,1,FALSE,NA
stringr,e74f00a756a016425f83cce639968551,"`str_trunc()` now correctly truncates strings when `side` is `""left""` or `""center""` (@​UchidaMizuki, #512).",1,2,FALSE,NA
stringr,c60a4c89ebdb174b61a1d17910b09d43,stringr functions now consistently implement the tidyverse recycling rules (#372). There are two main changes:,1,3,FALSE,NA
stringr,c60a4c89ebdb174b61a1d17910b09d43,"• Only vectors of length 1 are recycled. Previously, (e.g.) `str_detect(letters, c(""x"", ""y""))` worked, but it now errors.",2,4,FALSE,stringr functions now consistently implement the tidyverse recycling rules (#372). There are two main changes:
stringr,c60a4c89ebdb174b61a1d17910b09d43,"• `str_c()` ignores `NULLs`, rather than treating them as length 0 vectors.",2,5,FALSE,stringr functions now consistently implement the tidyverse recycling rules (#372). There are two main changes:
stringr,38888fe9cfa45dfa1dfe6f06ebb67860,"Additionally, many more arguments now throw errors, rather than warnings, if supplied the wrong type of input.",1,5,FALSE,NA
stringr,3a753aec7624f8b94a2744c2256c06fa,`regex()` and friends now generate class names with `stringr_` prefix (#384).,1,6,FALSE,NA
stringr,f6445e42b83f2f32807a6d4db52fb633,"`str_detect()`, `str_starts()`, `str_ends()` and `str_subset()` now error when used with either an empty string (`""""`) or a `boundary()`. These operations didn't really make sense (`str_detect(x, """")` returned `TRUE` for all non-empty strings) and made it easy to make mistakes when programming.",1,7,FALSE,NA
stringr,df6449a55b4e8275f36105be5dd44b58,Many tweaks to the documentation to make it more useful and consistent.,1,8,FALSE,NA
stringr,0981ab772fb5311538158ff5a17f30e9,"New `vignette(""from-base"")` by @​sastoudt provides a comprehensive comparison between base R functions and their stringr equivalents. It's designed to help you move to stringr if you're already familiar with base R string functions (#266).",1,9,FALSE,NA
stringr,5128a03dc6818a25b52f340715b64d5b,"New `str_escape()` escapes regular expression metacharacters, providing an alternative to `fixed()` if you want to compose a pattern from user supplied strings (#408).",1,10,FALSE,NA
stringr,601961373a8f79031abdd407bfad9d38,"New `str_equal()` compares two character vectors using unicode rules, optionally ignoring case (#381).",1,11,FALSE,NA
stringr,586ee08cd14498125b9d96599a66358c,`str_extract()` can now optionally extract a capturing group instead of the complete match (#420).,1,12,FALSE,NA
stringr,d09273b612cde2cb03e509e7cfd1e408,New `str_flatten_comma()` is a special case of `str_flatten()` designed for comma separated flattening and can correctly apply the Oxford commas when there are only two elements (#444).,1,13,FALSE,NA
stringr,e0410eb92963d59b23cb71b299032955,New `str_split_1()` is tailored for the special case of splitting up a single string (#409).,1,14,FALSE,NA
stringr,10a64a6ff0d48fd3701046f64da273b9,"New `str_split_i()` extract a single piece from a string (#278, @​bfgray3).",1,15,FALSE,NA
stringr,91e20928c40058e88af03d1594cd16ec,"New `str_like()` allows the use of SQL wildcards (#280, @​rjpat).",1,16,FALSE,NA
stringr,e95835fd984f2bae665dba55e35a4dfd,New `str_rank()` to complete the set of order/rank/sort functions (#353).,1,17,FALSE,NA
stringr,37682a2e0886ce2f5932a38a3a593eae,New `str_sub_all()` to extract multiple substrings from each string.,1,18,FALSE,NA
stringr,81ed77f3d2e22ec574a3947fd76af021,"New `str_unique()` is a wrapper around `stri_unique()` and returns unique string values in a character vector (#249, @​seasmith).",1,19,FALSE,NA
stringr,f6c2880d6ac38b448524e081a182d203,`str_view()` uses ANSI colouring rather than an HTML widget (#370). This works in more places and requires fewer dependencies. It includes a number of other small improvements:,1,20,FALSE,NA
stringr,f6c2880d6ac38b448524e081a182d203,• It no longer requires a pattern so you can use it to display strings with special characters.,2,21,FALSE,`str_view()` uses ANSI colouring rather than an HTML widget (#370). This works in more places and requires fewer dependencies. It includes a number of other small improvements:
stringr,f6c2880d6ac38b448524e081a182d203,• It highlights unusual whitespace characters.,2,22,FALSE,`str_view()` uses ANSI colouring rather than an HTML widget (#370). This works in more places and requires fewer dependencies. It includes a number of other small improvements:
stringr,f6c2880d6ac38b448524e081a182d203,• It's vectorised over both string`and`pattern\` (#407).,2,23,FALSE,`str_view()` uses ANSI colouring rather than an HTML widget (#370). This works in more places and requires fewer dependencies. It includes a number of other small improvements:
stringr,f6c2880d6ac38b448524e081a182d203,"• It defaults to displaying all matches, making `str_view_all()` redundant (and hence deprecated) (#455).",2,24,FALSE,`str_view()` uses ANSI colouring rather than an HTML widget (#370). This works in more places and requires fewer dependencies. It includes a number of other small improvements:
stringr,e9227181bfd0dd8ed97bffcec0d785ab,New `str_width()` returns the display width of a string (#380).,1,25,FALSE,NA
stringr,81a8df970d49990ab70c7059e4a5c17d,stringr is now licensed as MIT (#351).,1,26,FALSE,NA
stringr,46e375462e41a12a81b5e0b4a5539a7d,Better error message if you supply a non-string pattern (#378).,1,27,FALSE,NA
stringr,2c6f340aaaa0e015ecf87e09fb0fa23d,A new data source for `sentences` has fixed many small errors.,1,28,FALSE,NA
stringr,b77b5556a358756a945cb8612fceb45f,`str_extract()` and `str_exctract_all()` now work correctly when `pattern` is a `boundary()`.,1,29,FALSE,NA
stringr,64c5f32a7117a316f668fd6cc3605239,`str_flatten()` gains a `last` argument that optionally override the final separator (#377). It gains a `na.rm` argument to remove missing values (since it's a summary function) (#439).,1,30,FALSE,NA
stringr,4bb842ca55e9c78189235f20e09ae5f2,"`str_pad()` gains `use_width` argument to control whether to use the total code point width or the number of code points as ""width"" of a string (#190).",1,31,FALSE,NA
stringr,8bdc6c59854f4974d37323c1e37d9ef7,`str_replace()` and `str_replace_all()` can use standard tidyverse formula shorthand for `replacement` function (#331).,1,32,FALSE,NA
stringr,0539154ba568975699bb02426e5163d7,`str_starts()` and `str_ends()` now correctly respect regex operator precedence (@​carlganz).,1,33,FALSE,NA
stringr,a58ab714035e9fe892308be45186d960,"`str_wrap()` breaks only at whitespace by default; set `whitespace_only = FALSE` to return to the previous behaviour (#335, @​rjpat).",1,34,FALSE,NA
stringr,6964f35d158c6e8fadde019b9e088ee0,"`word()` now returns all the sentence when using a negative `start` parameter that is greater or equal than the number of words. (@​pdelboca, #245)",1,35,FALSE,NA
stringr,fdfb8cffcb9e0f7f0f6cf0d956f9860c,`str_interp()` now renders lists consistently independent on the presence of additional placeholders (@​amhrasmussen).,1,36,FALSE,NA
stringr,fb911675b0b6df960af14cba53e5eb86,"New `str_starts()` and `str_ends()` functions to detect patterns at the beginning or end of strings (@​jonthegeek, #258).",1,37,FALSE,NA
stringr,278e01df2b516b40c79f750206dce8f9,"`str_subset()`, `str_detect()`, and `str_which()` get `negate` argument, which is useful when you want the elements that do NOT match (#259, @​yutannihilation).",1,38,FALSE,NA
stringr,36f40ee1a5493b0dbb65548ffb68fad5,"New `str_to_sentence()` function to capitalize with sentence case (@​jonthegeek, #202).",1,39,FALSE,NA
stringr,031ff412f83ed17629586fa47d7b5d1f,`str_replace_all()` with a named vector now respects modifier functions (#207),1,40,FALSE,NA
stringr,12bf1d0800a544fa14eba20b12c83b9e,"`str_trunc()` is once again vectorised correctly (#203, @​austin3dickey).",1,41,FALSE,NA
stringr,cc341119de59aabfea4286c4ba548135,"`str_view()` handles `NA` values more gracefully (#217). I've also tweaked the sizing policy so hopefully it should work better in notebooks, while preserving the existing behaviour in knit documents (#232).",1,42,FALSE,NA
stringr,a8757636af3d1130d5da3135e2a026b8,"During package build, you may see `Error : object ‘ignore.case’ is not exported by 'namespace:stringr'`. This is because the long deprecated `str_join()`, `ignore.case()` and `perl()` have now been removed.",1,43,FALSE,NA
stringr,251b57e0db1a8a25dbfe729ba9052cdb,`str_glue()` and `str_glue_data()` provide convenient wrappers around `glue` and `glue_data()` from the glue package (#157).,1,44,FALSE,NA
stringr,f7dc89c95982ca8034667e69662f1853,`str_flatten()` is a wrapper around `stri_flatten()` and clearly conveys flattening a character vector into a single string (#186).,1,45,FALSE,NA
stringr,5f72c2b1bc061f09c52c5c61419a7ad2,"`str_remove()` and `str_remove_all()` functions. These wrap `str_replace()` and `str_replace_all()` to remove patterns from strings. (@​Shians, #178)",1,46,FALSE,NA
stringr,14f7df246d3355b938a276370625ea22,"`str_squish()` removes spaces from both the left and right side of strings, and also converts multiple space (or space-like characters) to a single space within strings (@​stephlocke, #197).",1,47,FALSE,NA
stringr,39c0c5a585b6fd329ba942ca161aa933,"`str_sub()` gains `omit_na` argument for ignoring `NA`. Accordingly, `str_replace()` now ignores `NA`s and keeps the original strings. (@​yutannihilation, #164)",1,48,FALSE,NA
stringr,32e4749cb1087805e72db1a25b984f4b,"`str_trunc()` now preserves NAs (@​ClaytonJY, #162)",1,49,FALSE,NA
stringr,a57d5ebf560d0f7e3148070a0ce26e4b,"`str_trunc()` now throws an error when `width` is shorter than `ellipsis` (@​ClaytonJY, #163).",1,50,FALSE,NA
stringr,08dc62207f15f882b9fa8684b5ac9a5d,"Long deprecated `str_join()`, `ignore.case()` and `perl()` have now been removed.",1,51,FALSE,NA
stringr,2731c907634092a9bbf74d1b87b0c2ea,"`str_match_all()` now returns NA if an optional group doesn't match (previously it returned """"). This is more consistent with `str_match()` and other match failures (#134).",1,52,FALSE,NA
stringr,b31ea861b969d0aa6dd6be891244c9ca,"In `str_replace()`, `replacement` can now be a function that is called once for each match and whose return value is used to replace the match.",1,53,FALSE,NA
stringr,21e46794d7d484910d21c961c5874fd1,New `str_which()` mimics `grep()` (#129).,1,54,FALSE,NA
stringr,4c9c5c97812039525b56c76e85d0a5c3,"A new vignette (`vignette(""regular-expressions"")`) describes the details of the regular expressions supported by stringr. The main vignette (`vignette(""stringr"")`) has been updated to give a high-level overview of the package.",1,55,FALSE,NA
stringr,716cfbe8b6b39ef5b608164af46a4556,`str_order()` and `str_sort()` gain explicit `numeric` argument for sorting mixed numbers and strings.,1,56,FALSE,NA
stringr,d82ff9e55f5eac6a3851ce15de3d1d89,`str_replace_all()` now throws an error if `replacement` is not a character vector. If `replacement` is `NA_character_` it replaces the complete string with replaces with `NA` (#124).,1,57,FALSE,NA
stringr,7666be7b0538f38a0141fe3ff176f7eb,"All functions that take a locale (e.g. `str_to_lower()` and `str_sort()`) default to ""en"" (English) to ensure that the default is consistent across platforms.",1,58,FALSE,NA
stringr,40c85d26b06e81f0a88d2f41ac246ec6,"Add sample datasets: `fruit`, `words` and `sentences`.",1,59,FALSE,NA
stringr,be94b4fb85940ea9e84a1d4a069e1d15,"`fixed()`, `regex()`, and `coll()` now throw an error if you use them with anything other than a plain string (#60). I've clarified that the replacement for `perl()` is `regex()` not `regexp()` (#61). `boundary()` has improved defaults when splitting on non-word boundaries (#58, @​lmullen).",1,60,FALSE,NA
stringr,d20e62bd04611313230a457c65a81768,`str_detect()` now can detect boundaries (by checking for a `str_count()` \> 0) (#120). `str_subset()` works similarly.,1,61,FALSE,NA
stringr,7d69522323be98b9bea83e4d44f7dfec,`str_extract()` and `str_extract_all()` now work with `boundary()`. This is particularly useful if you want to extract logical constructs like words or sentences. `str_extract_all()` respects the `simplify` argument when used with `fixed()` matches.,1,62,FALSE,NA
stringr,1f54c357be657c2b1ca8636c6201e899,"`str_subset()` now respects custom options for `fixed()` patterns (#79, @​gagolews).",1,63,FALSE,NA
stringr,bcda7155789503cda135ca5840ef84f9,"`str_replace()` and `str_replace_all()` now behave correctly when a replacement string contains `$`s, `\\\\1`, etc. (#83, #99).",1,64,FALSE,NA
stringr,c1bead1019361b05d05c99db98ee7c31,`str_split()` gains a `simplify` argument to match `str_extract_all()` etc.,1,65,FALSE,NA
stringr,6160a7689678ce6aa6e7db34c67f54ca,`str_view()` and `str_view_all()` create HTML widgets that display regular expression matches (#96).,1,66,FALSE,NA
stringr,c6136753dd6b110914035a9125111572,`word()` returns `NA` for indexes greater than number of words (#112).,1,67,FALSE,NA
stringr,35eedaa35cd59bf3efb3ad6ea13892d7,"stringr is now powered by stringi instead of base R regular expressions. This improves unicode and support, and makes most operations considerably faster. If you find stringr inadequate for your string processing needs, I highly recommend looking at stringi in more detail.",1,68,FALSE,NA
stringr,6b684e74d197df6b0cf8cb7a93e18e75,"stringr gains a vignette, currently a straight forward update of the article that appeared in the R Journal.",1,69,FALSE,NA
stringr,e2e3c98b2c2bd3e282d332dafe2e7bf1,"`str_c()` now returns a zero length vector if any of its inputs are zero length vectors. This is consistent with all other functions, and standard R recycling rules. Similarly, using `str_c(""x"", NA)` now yields `NA`. If you want `""xNA""`, use `str_replace_na()` on the inputs.",1,70,FALSE,NA
stringr,89d953c6d3352bae7aaea30dd0b5b07e,`str_replace_all()` gains a convenient syntax for applying multiple pairs of pattern and replacement to the same vector:,1,71,FALSE,NA
stringr,89d953c6d3352bae7aaea30dd0b5b07e,"```
input <- c(""abc"", ""def"")
str_replace_all(input, c(""[ad]"" = ""!"", ""[cf]"" = ""?""))
```",1,72,TRUE,NA
stringr,c45327eefa2daa96a46468504578d4b1,"`str_match()` now returns NA if an optional group doesn't match (previously it returned """"). This is more consistent with `str_extract()` and other match failures.",1,73,FALSE,NA
stringr,ba46b4dbf0c400a5b09e06ef66b7411d,"New `str_subset()` keeps values that match a pattern. It's a convenient wrapper for `x[str_detect(x)]` (#21, @​jiho).",1,74,FALSE,NA
stringr,1858eba9a9d5803f4036060ce1c62c24,New `str_order()` and `str_sort()` allow you to sort and order strings in a specified locale.,1,75,FALSE,NA
stringr,c8672a0a8c268d36851c2f04d9913820,New `str_conv()` to convert strings from specified encoding to UTF-8.,1,76,FALSE,NA
stringr,5bf6cb061343b2dd18624b6b55f5b7a0,"New modifier `boundary()` allows you to count, locate and split by character, word, line and sentence boundaries.",1,77,FALSE,NA
stringr,39ec5a283ea2951cbe1d92e631c057a6,"The documentation got a lot of love, and very similar functions (e.g. first and all variants) are now documented together. This should hopefully make it easier to locate the function you need.",1,78,FALSE,NA
stringr,545ebd3a68eacfdd6137bcad93ad9c03,"`ignore.case(x)` has been deprecated in favour of `fixed|regex|coll(x, ignore.case = TRUE)`, `perl(x)` has been deprecated in favour of `regex(x)`.",1,79,FALSE,NA
stringr,ebede981ca9bd7cf4729dbfe3621611b,"`str_join()` is deprecated, please use `str_c()` instead.",1,80,FALSE,NA
stringr,d30d9330a5816e65981d3a366bc1c0af,fixed path in `str_wrap` example so works for more R installations.,1,81,FALSE,NA
stringr,4279a4fc3451b76dfc0ded8ed9f72fec,remove dependency on plyr,1,82,FALSE,NA
stringr,de470a55b6ed2e993b74938c4a5aed53,Zero input to `str_split_fixed` returns 0 row matrix with `n` columns,1,83,FALSE,NA
stringr,f6a5630d2c6cb59deaaeb2d133d4f7f1,Export `str_join`,1,84,FALSE,NA
stringr,cc15d581b2e2eb415b5a438391ac9161,new modifier `perl` that switches to Perl regular expressions,1,85,FALSE,NA
stringr,cb1499ed6f62ff6cb4831b9b046fa448,`str_match` now uses new base function `regmatches` to extract matches - this should hopefully be faster than my previous pure R algorithm,1,86,FALSE,NA
stringr,b93df49f5993d44a8138846f2a726c7d,new `str_wrap` function which gives `strwrap` output in a more convenient format,1,87,FALSE,NA
stringr,123d47441780f6f7a01a549f0b5379fc,new `word` function extract words from a string given user defined separator (thanks to suggestion by David Cooper),1,88,FALSE,NA
stringr,c99b63bdc210195ed73589da37836b03,`str_locate` now returns consistent type when matching empty string (thanks to Stavros Macrakis),1,89,FALSE,NA
stringr,fa0488081d6e74eefefcacd1ed78c01f,new `str_count` counts number of matches in a string.,1,90,FALSE,NA
stringr,ec9c2fcf153704b686b88e9804fdbe3f,`str_pad` and `str_trim` receive performance tweaks - for large vectors this should give at least a two order of magnitude speed up,1,91,FALSE,NA
stringr,370fa4b9eed2b36febb09f7cf7a37ff3,str_length returns NA for invalid multibyte strings,1,92,FALSE,NA
stringr,40a652cbe0ce23b20e4096f9751faa80,fix small bug in internal `recyclable` function,1,93,FALSE,NA
stringr,4bf31823f00d12eec44099887014d522,"all functions now vectorised with respect to string, pattern (and where appropriate) replacement parameters",1,94,FALSE,NA
stringr,f4e073e54832acd36c5b1f1a5d8033c4,"fixed() function now tells stringr functions to use fixed matching, rather than escaping the regular expression. Should improve performance for large vectors.",1,95,FALSE,NA
stringr,fed9d8155bfee03185dff576fe759875,new ignore.case() modifier tells stringr functions to ignore case of pattern.,1,96,FALSE,NA
stringr,d82d64094b07c3ca2a26cfd15aa9b132,str_replace renamed to str_replace_all and new str_replace function added. This makes str_replace consistent with all functions.,1,97,FALSE,NA
stringr,e605ce4a33da1c42a9e31860faa145f7,new str_sub\<- function (analogous to substring\<-) for substring replacement,1,98,FALSE,NA
stringr,4e14490b11023d55728276dc0f69a474,str_sub now understands negative positions as a position from the end of the string. -1 replaces Inf as indicator for string end.,1,99,FALSE,NA
stringr,db60e7e35d665c67857510cbef33b3b2,"str_pad side argument can be left, right, or both (instead of center)",1,100,FALSE,NA
stringr,11c24f6e60766a9f3484bf689b4893a3,str_trim gains side argument to better match str_pad,1,101,FALSE,NA
stringr,fb6bfb6185740cc4820da56ebb3e8d22,stringr now has a namespace and imports plyr (rather than requiring it),1,102,FALSE,NA
stringr,b61479177fc20f5d8bc512267b882978,fixed() now also escapes \|,1,103,FALSE,NA
stringr,2d4b30831eccfadf1434c2b550a9d857,str_join() renamed to str_c(),1,104,FALSE,NA
stringr,b5d720a16bd1151d356164112db5601f,all functions more carefully check input and return informative error messages if not as expected.,1,105,FALSE,NA
stringr,0e73ce0367165813928963cecd4e45b4,add invert_match() function to convert a matrix of location of matches to locations of non-matches,1,106,FALSE,NA
stringr,194c9275ad5ab8821dd415ecb73fbf95,add fixed() function to allow matching of fixed strings.,1,107,FALSE,NA
stringr,6ce98ac611c3abbd2197b011443aba48,str_length now returns correct results when used with factors,1,108,FALSE,NA
stringr,0e887fc0d99db81cca02b34145a15d3d,str_sub now correctly replaces Inf in end argument with length of string,1,109,FALSE,NA
stringr,555141d30a741977c59d2fe2e0d40f3f,new function str_split_fixed returns fixed number of splits in a character matrix,1,110,FALSE,NA
stringr,cefdaafab0f98579ed9aecb825658665,str_split no longer uses strsplit to preserve trailing breaks,1,111,FALSE,NA
tibble,d12ff059535e4ec7f29274e54922e7bc,Skip tests if packages are missing.,1,1,FALSE,NA
tibble,4cb76a1ca08a2cf8662bd08db0add479,Skip tests if packages are missing.,1,2,FALSE,NA
tibble,9ecebd79330c30e5eeb2004b26656a01,Merge pull request #1565 from tidyverse/snapshot-main-rcc-smoke-null.,1,3,FALSE,NA
tibble,88a544a988d21b59e358d59e9ad7485e,Merge pull request #1562 from tidyverse/snapshot-main-rcc-smoke-null.,1,4,FALSE,NA
tibble,1814cbc82915233e42fb469208aeb961,Merge pull request #1561 from tidyverse/snapshot-main-rcc-full-config-os-macos-latest-r-release.,1,5,FALSE,NA
tibble,e6bcc43ba965325d8ba96afd8dd18fc5,Merge pull request #1560 from tidyverse/snapshot-main-R-CMD-check-base-null.,1,6,FALSE,NA
tibble,8f2adbd449a9ff59a6499b40dd165b01,Fix rendering if suggested packages are missing.,1,7,FALSE,NA
tibble,82da9e1ea918bad6a9e579ba7076d80e,Override :: to avoid failures in tests without suggested packages.,1,8,FALSE,NA
tibble,cf5ac4e0cc2deba04f6d22749af6e3f7,Merge branch 'docs'.,1,9,FALSE,NA
tibble,820db9fab6c9085647bb61a6dd21eff0,Snapshot updates for rcc-smoke (null) (#1548).,1,10,FALSE,NA
tibble,19024bd75846d248e0839c0ec4b795dc,"Alt text (@​maelle, #1528, #1539).",1,11,FALSE,NA
tibble,f3e29a0c53ec64f8aab3dfb4a7fcef7c,Merged cran-3.2.1 into main.,1,12,FALSE,NA
tibble,de0323151edc14f09ecac67d077ce91f,Internal changes only.,1,13,FALSE,NA
tibble,09843705f6882591fa4e92cd4f1f62b8,Merge pull request #1527 from tidyverse/snapshot-main-rcc-smoke-null.,1,14,FALSE,NA
tibble,147c95fc995f8c1546f14758cf1e89be,Internal changes only.,1,15,FALSE,NA
tibble,42e8f901fcbca4cb37607c5c2a227c83,Use symbol instead of string in `.Call()`.,1,16,FALSE,NA
tibble,fd58d9c5e0568095b8d5294fdd2485e1,"Accurate location of the source of an error in error messages (#1379, #1065, #1508).",1,17,FALSE,NA
tibble,b334929c997b24df11d347a87c971762,"`as_data_frame()` now also refers to `as.data.frame()` in its deprecation message (#1149, #1506).",1,18,FALSE,NA
tibble,24940e621146d9564cc50bbd54162ffe,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):,1,19,FALSE,NA
tibble,24940e621146d9564cc50bbd54162ffe,"• `data_frame_()`, `lst_()`, `frame_data()`",2,20,FALSE,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):
tibble,24940e621146d9564cc50bbd54162ffe,"• `as_tibble(validate = )`, `as_tibble(NULL)`, `new_tibble(subclass = )`",2,21,FALSE,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):
tibble,24940e621146d9564cc50bbd54162ffe,• `add_row()` and `add_column()` for non-data-frame input,2,22,FALSE,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):
tibble,24940e621146d9564cc50bbd54162ffe,• `add_column()` for input with non-unique names,2,23,FALSE,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):
tibble,24940e621146d9564cc50bbd54162ffe,• corner cases for `tbl[[x]]`,2,24,FALSE,Deprecated functions and arguments where we could not detect usage by other CRAN packages (#1515):
tibble,a6d4de5d30c1c15be01db900635c8679,Breaking change: Remove `knit_print.trunc_mat()` method (#1516).,1,25,FALSE,NA
tibble,907e8fae9617d465861e39b91730a1c1,Forward `trunc_mat()` to new-style pillar methods (#1517).,1,26,FALSE,NA
tibble,108f284ae9a112605737d46ad82582ab,"Allow `glue()` and other classed characters for subassignment (#1150, #1503).",1,27,FALSE,NA
tibble,9568a6fe14d2bbd575ac0f5744b3f151,Reduce overhead of single-column subset assignment (#1363).,1,28,FALSE,NA
tibble,31f044e9accba534ca6abc5d60f4730a,"New `vignette(""extending"")` (#275, #1512).",1,29,FALSE,NA
tibble,4cb6f0db33021e2d2938b9f7e6f2fdfd,"Minor updates (#1151, #1070, #1512, #1485).",1,30,FALSE,NA
tibble,025c3c75b85b93c518ef61f0ba54846f,"Update example for `nrow` argument to `new_tibble()` (@​heavywatal, #1394).",1,31,FALSE,NA
tibble,d3259c2ccf9149008352f9cf90d1ddcf,"Fix display of mermaid diagrams in `vignette(""formats"")` (@​maelle, #1497, #1498).",1,32,FALSE,NA
tibble,4eb186b79eccc85cf0eb97477aac4d5d,Remove ANSI escapes from invariants article on pkgdown (#1374).,1,33,FALSE,NA
tibble,79501d696545c9674659c90c4b6a667b,Require vctrs \>= 0.4.1 and pillar \>= 1.8.1,1,34,FALSE,NA
tibble,6cbd2189214f8aefad341e377cf0097e,Use cli for formatting conditions (#1387).,1,35,FALSE,NA
tibble,66e12efb3bb2cf19ed7b6711ff12133f,"Use `vec_as_location(missing = ""error"")` for better error messages (#741, #1511).",1,36,FALSE,NA
tibble,e63f84b241b0ab6ffc978df885042cb0,"Remove compatibility code for RSDA package which is broken anyway due to other changes (#923, #1509).",1,37,FALSE,NA
tibble,27e86b2eb533c2590a2b47983d128d34,"Skip tests if suggested packages not available (#1246, @​MichaelChirico).",1,38,FALSE,NA
tibble,6d04480911e1b044dfdeea821258d8c6,Remove obsolete tests (#1513).,1,39,FALSE,NA
tibble,04808629d95b8f9757cfc2cfafc9104c,Better reporting for error calls from `vec_as_location()` (#1237).,1,40,FALSE,NA
tibble,14a1651c459b46078a988808372fede4,"Mention `median()` in Recovery section of `vignette(""numbers"")` (#1197).",1,41,FALSE,NA
tibble,1867f268d98220f749cba75562449e15,"`trunc_mat()` now returns a value with a different structure. This is considered an implementation detail that can change in the future, do not rely on it. The only guarantee is that calling `print()` will display the input like a tibble (#1059).",1,42,FALSE,NA
tibble,2320eb532164ff1525b7e8762afce948,Avoid listing `dim_desc()` in reexports.,1,43,FALSE,NA
tibble,f1671ac792c00800d449551368077637,"Add more examples for data frame and matrix columns (#978, #1012).",1,44,FALSE,NA
tibble,ce8528c6b3b5c0ca1e9f625912f159ed,Require rlang 1.0.1 and pillar 1.7.0 (#1063).,1,45,FALSE,NA
tibble,0ce88ceb4c7abe1bdb9070cf1cdb5178,"Prefer `class` over `.subclass` in `rlang::error_cnd()` (#1015, #1060).",1,46,FALSE,NA
tibble,541d3bd0e5435e3de2f207735544f298,`set_num_opts()` and `set_char_opts()` are reexported from pillar (#959).,1,47,FALSE,NA
tibble,1170701ef10c6ede59b7b0bdd18870af,`view()` uses `rlang::expr_deparse(width = Inf)` to avoid errors with long `|>` pipes (#957).,1,48,FALSE,NA
tibble,cff1d4080e7e9de03ea14b43383469c4,`new_tibble()` checks that the `nrow` argument is nonnegative and less than 2\^31 (#916).,1,49,FALSE,NA
tibble,1e5a3fcff34e44020eda8b3b7e0b52a7,`tbl_sum.tbl_df()` has an ellipsis in its formals for extensibility.,1,50,FALSE,NA
tibble,2721b6e09279e75cc8078eb577d7f0de,"Avoid necessity to set `""tibble.view_max""` option for lazy tables (#954).",1,51,FALSE,NA
tibble,d537c05b6a57f4c539dd0c69584bb25d,"Avoid blanket import for lifecycle package for compatibility with upcoming rlang (#955, @​romainfrancois).",1,52,FALSE,NA
tibble,5617db877599c0ac20d02a9b0c85d420,`as.data.frame.tbl_df()` strips inner column names (#837).,1,53,FALSE,NA
tibble,740b0f3ed8b53e00a7495b8d67757ae0,`new_tibble()` allows omitting the `nrow` argument again (#781).,1,54,FALSE,NA
tibble,d6e3c0148d2af928da3c0768fd2b74f1,"Move `vignette(""digits"")`, `vignette(""numbers"")`, `?num` and `?char` from the pillar package here (#913).",1,55,FALSE,NA
tibble,9426aeb4a592bc1f212b21e0ae876a86,Replace `iris` by `trees` (#943).,1,56,FALSE,NA
tibble,da7d635499835779ce59df87a5aef891,Various documentation improvements.,1,57,FALSE,NA
tibble,3a9f331356584154a0f8d955fee1e11c,New `?tibble_options` help page (#912).,1,58,FALSE,NA
tibble,c624232e20419f53e6a255a3e3da7901,"`x[i, j] <- one_row_value` avoids explicit recycling of the right-hand side, the recycling happens implicitly in `vctrs::vec_assign()` for performance (#922).",1,59,FALSE,NA
tibble,6bbd4853f8e3d2bcbd15b430713f7405,Vignettes are now tested with a snapshot test (#919).,1,60,FALSE,NA
tibble,f91b232ac906025b9eb18bd892cc263c,"`new_tibble()` uses `vctrs::new_data_frame()` internally (#726, @​DavisVaughan).",1,61,FALSE,NA
tibble,a15dc91f3d42d9dc38d494f5df28d4d6,Adapt to pillar 1.6.2.,1,62,FALSE,NA
tibble,92b4caf522787df4dff802a791a3a19f,Fix tests for compatibility with pillar 1.6.2.,1,63,FALSE,NA
tibble,d9f07cd67267ed2f76fd14dd535b0688,"`tbl[row, col] <- rhs` treats an all-`NA` logical vector as a missing value both for existing data (#773) and for the right-hand side value (#868). This means that a column initialized with `NA` (of type `logical`) will change its type when a row is updated to a value of a different type.",1,64,FALSE,NA
tibble,f5f0c7d7d120f08879d2d8a11f2456c5,`[[<-()` supports symbols (#893).,1,65,FALSE,NA
tibble,6df697e6104872b5bf1e9838aeaf1d4e,`as_tibble_row()` supports arbitrary vectors (#797).,1,66,FALSE,NA
tibble,ea085c91bc4f6040ae27778c15286512,`enframe()` and `deframe()` support arbitrary vectors (#730).,1,67,FALSE,NA
tibble,cf87fe5c2cbd41b25e7ab694d23b1d6b,"`tibble()` and `tibble_row()` ignore all columns that evaluate to `NULL`, not only those where a verbatim `NULL` is passed (#895, #900).",1,68,FALSE,NA
tibble,04525fd8437d9982228d2dc6c5039f41,"`new_tibble()` is now faster (#901, @​mgirlich).",1,69,FALSE,NA
tibble,5fcf47023fb4d42a0d6f87b18603b761,Establish compatibility with rlang \> 0.4.11 (#908).,1,70,FALSE,NA
tibble,95391d38adfa7f305e6a693633a47a68,Use `pillar::dim_desc()` (#859).,1,71,FALSE,NA
tibble,80e89c465a0be351a0af1de089569c1e,"Establish compatibility with testthat \> 3.0.3 (#896, @​lionel-).",1,72,FALSE,NA
tibble,5238dd70b363193c567af0ff5559d551,Bump required versions of ellipsis and vctrs to avoid warning during package load.,1,73,FALSE,NA
tibble,193889755b6aa842d73b0dc8e6d3a86d,Bump required versions of ellipsis and vctrs to avoid warning during package load.,1,74,FALSE,NA
tibble,e00ec854870e2a0950b446a6a85c3c80,`num()` and `char()` are reexported from pillar (#880).,1,75,FALSE,NA
tibble,8df8974026272b60039c35ecfcbcdcd0,"`tribble()` and `frame_matrix()` give an error if values are named (#871, @​lorenzwalthert).",1,76,FALSE,NA
tibble,fc57466f14e29a4521c5e6ddc9345d1c,Document `cli.num_colors` option (#410).,1,77,FALSE,NA
tibble,a19ea00b3d77ecb69f008615571e5a04,Fix `new_tibble()` examples for compatibility with pillar 1.6.0.,1,78,FALSE,NA
tibble,9323466aef978aa7da636d8c31eaa44e,"`has_rownames()` now works correctly for data frames with a `""row.names""` attribute malformed due to a problem in `structure()` (#852).",1,79,FALSE,NA
tibble,53ca08fce70e986c4814e9f0057079e7,"`tbl[FALSE, ""column""] <- x` adds new column again (#846).",1,80,FALSE,NA
tibble,70839fd95ae87b8875d94fd9dc393414,"Importing pillar 1.5.0, cli and crayon are now suggested packages (#475).",1,81,FALSE,NA
tibble,58aa131b041ae67b9565c49143206d44,"`size_sum()` is now reexported from pillar (#850, @​topepo).",1,82,FALSE,NA
tibble,d04e338cd37c0db1269fa4306247e3fd,`as_tibble()` hints more often to use the `.name_repair` argument if column names are invalid (#855).,1,83,FALSE,NA
tibble,717e073eaa252bef26fabcebdcdfe6cd,`as_tibble.table()` mentions `.name_repair` argument in the error message (#839).,1,84,FALSE,NA
tibble,09207a14409928597faa058551c33333,Remove compatibility code for pillar \< 1.5.0 (#861).,1,85,FALSE,NA
tibble,4cc36ca63d079f099ce5f9b137784ada,"Moved most functions to the ""stable"" lifecycle (#860).",1,86,FALSE,NA
tibble,c693e983dd5e8fa5452f21ea84c954a0,"`vec_ptype_abbr.tbl_df()` and `type_sum.tbl_df()` now uses the name of the topmost class for subclasses of `""tbl_df""` (#843).",1,87,FALSE,NA
tibble,46c4e2e4c91aaa0547dd13a1861ac789,Ignore errors in `formats.Rmd` vignette.,1,88,FALSE,NA
tibble,2a26e79d7de193881f6227c8d58eb3d0,Avoid tidy evaluation in pillar compatibility code.,1,89,FALSE,NA
tibble,171ac238f5dcc9c20fa15c7978cfb00c,"Use testthat edition 3, compatible with testthat 3.0.1 (#827, #832).",1,90,FALSE,NA
tibble,1e066f980aa984061b2d658b71d36464,Establish compatibility with upcoming pillar 1.5.0 (#818).,1,91,FALSE,NA
tibble,7eb95f424c59135ae0b1ddf347c1d124,"`tbl_sum()` shows ""data frame"" instead of ""tibble"" for objects inheriting from `""tbl""` but not `""tbl_df""` (#818).",1,92,FALSE,NA
tibble,299484b7e2831815be35c67b71a6cce4,Register `format.tbl()` and `print.tbl()` methods only if pillar doesn't (#816).,1,93,FALSE,NA
tibble,21199b5927dda82a07abeda0770d9b3e,Use `vctrs::num_as_location()` internally for subset assignment of rows and columns for better error messages (#746).,1,94,FALSE,NA
tibble,835c51b87fcc33c85282a5b4b1826283,Adapt tests to the development version of testthat.,1,95,FALSE,NA
tibble,15889ef24eb03ae112e36192cf3ea2af,Fix documentation link to `base::Extract`.,1,96,FALSE,NA
tibble,f7137fbe4b38be7c3a68c9e81805db88,"`add_row(df)` adds an empty row again (#809, @​DavisVaughan).",1,97,FALSE,NA
tibble,5dd164d276274bdf2688b585019e9748,Fix test compatibility with rlang 0.4.7.,1,98,FALSE,NA
tibble,48dece2c2a42967a36948218d26ad4a9,Fix warning about `needs_dots` arguments with pillar \>= 1.4.5 (#798).,1,99,FALSE,NA
tibble,5f5454542a76556a9fc7e4e1c4d91504,"`[[` works with classed indexes again, e.g. created with `glue::glue()` (#778).",1,100,FALSE,NA
tibble,9fd3e353863c10eb18a77d6bf2086b31,`add_column()` works without warning for 0-column data frames (#786).,1,101,FALSE,NA
tibble,08b291ac57a33b7199efb04954d86d46,`tribble()` now better handles named inputs (#775) and objects of non-vtrs classes like `lubridate::Period` (#784) and `formattable::formattable` (#785).,1,102,FALSE,NA
tibble,13340282b7adf47c2aa6370992abbaea,"Subsetting and subassignment are faster (#780, #790, #794).",1,103,FALSE,NA
tibble,9ea69bac10620562e2c14766dfdb2b5a,`is.null()` is preferred over `is_null()` for speed.,1,104,FALSE,NA
tibble,c1a56efba3486bf1eb66b8d3613770b0,Implement continuous benchmarking (#793).,1,105,FALSE,NA
tibble,b7037a44f61a77394692467d5583fd84,`is_vector_s3()` is no longer reexported from pillar (#789).,1,106,FALSE,NA
tibble,1b31b26128b7bf61094864137de380db,`[<-.tbl_df()` coerces matrices to data frames (#762).,1,107,FALSE,NA
tibble,c9995458c9cb302bf0dbadde8abef858,Use delayed import for cli to work around unload problems in downstream packages (#754).,1,108,FALSE,NA
tibble,00833cedcb1ea59b916bca0368b86be7,More soft-deprecation warnings are actually visible.,1,109,FALSE,NA
tibble,dd361025f66513042192951b536ca4d8,"If `.name_repair` is a function, no repair messages are shown (#763).",1,110,FALSE,NA
tibble,a51cfd187b1e4e5d8eee1005fdeedec8,"Remove superseded signal for `as_tibble.list()`, because `as_tibble_row()` only works for size 1.",1,111,FALSE,NA
tibble,213f0dfc2b91d00cf2c22b670334d5fd,`as_tibble(validate = )` now always triggers a deprecation warning.,1,112,FALSE,NA
tibble,6126a1d062ff9a1015f7055a55f7fdcd,"Subsetting and subassignment of rows with one-column matrices work again, with a deprecation warning (#760).",1,113,FALSE,NA
tibble,81977dce425519e653d8ec80702d9271,Attempts to update a tibble row with an atomic vector give a clearer error message. Recycling message for subassignment appears only if target size is != 1.,1,114,FALSE,NA
tibble,efff3fcc20c7c5d8788111ffde5923fd,"Tweak title of ""Invariants"" vignette.",1,115,FALSE,NA
tibble,b89b6bc2e6006dbacf83ef10f994f483,"Subset assignment (""subassignment"") and also subsetting has become stricter. Symptoms:",1,116,FALSE,NA
tibble,b89b6bc2e6006dbacf83ef10f994f483,• Error: No common type for ...,2,117,FALSE,"Subset assignment (""subassignment"") and also subsetting has become stricter. Symptoms:"
tibble,b89b6bc2e6006dbacf83ef10f994f483,• Error: Assigned data `...` must be compatible with ...,2,118,FALSE,"Subset assignment (""subassignment"") and also subsetting has become stricter. Symptoms:"
tibble,b89b6bc2e6006dbacf83ef10f994f483,"• `i` must have one dimension, not 2",2,119,FALSE,"Subset assignment (""subassignment"") and also subsetting has become stricter. Symptoms:"
tibble,b89b6bc2e6006dbacf83ef10f994f483,• Error: Lossy cast from ... to ...,2,120,FALSE,"Subset assignment (""subassignment"") and also subsetting has become stricter. Symptoms:"
tibble,8b906fd0178ff5bfd97119224de78373,"The ""invariants"" article at https://tibble.tidyverse.org/dev/articles/invariants.html describes the invariants that the operations follow in tibble, and the most important differences to data frames. We tried to make subsetting and subassignment as safe as possible, so that errors are caught early on, while introducing as little friction as possible.",1,120,FALSE,NA
tibble,fbe62617ce0705b37d6dfbae547f9559,List classes are no longer automatically treated as vectors. Symptoms:,1,121,FALSE,NA
tibble,fbe62617ce0705b37d6dfbae547f9559,• Error: All columns in a tibble must be vectors,2,122,FALSE,List classes are no longer automatically treated as vectors. Symptoms:
tibble,fbe62617ce0705b37d6dfbae547f9559,"• Error: Expected a vector, not a `...` object",2,123,FALSE,List classes are no longer automatically treated as vectors. Symptoms:
tibble,47ad8ac958a2f022dddf8747ad15ca1e,"If you implement a class that wraps a list as S3 vector, you need to include `""list""` in the class:",1,123,FALSE,NA
tibble,47ad8ac958a2f022dddf8747ad15ca1e,"```
structure(x, class = c(""your_s3_class"", ""list""))
```",1,124,TRUE,NA
tibble,47ad8ac958a2f022dddf8747ad15ca1e,"Alternatively, implement a `vec_proxy()` method as described in https://vctrs.r-lib.org/reference/vec_data.html, or construct your class with `list_of()`.",1,124,FALSE,NA
tibble,2eca06f6746df70bbc6acb16c658a2e3,"Added experimental support for inner names for all columns, of the form `tibble(a = c(b = 1))`. Inner names are no longer stripped when creating a tibble. They are maintained for slicing operations but not yet updated when assigning with a row subscript. This is a change that may break existing comparison tests that don't expect names in columns (#630). Symptoms:",1,125,FALSE,NA
tibble,2eca06f6746df70bbc6acb16c658a2e3,"• ""names for target but not for current"" when comparing",2,126,FALSE,"Added experimental support for inner names for all columns, of the form `tibble(a = c(b = 1))`. Inner names are no longer stripped when creating a tibble. They are maintained for slicing operations but not yet updated when assigning with a row subscript. This is a change that may break existing comparison tests that don't expect names in columns (#630). Symptoms:"
tibble,1ff6fc1e6a7aa65e0d3bc23aa7ec8e2d,"`tibble()` now splices anonymous data frames, `tibble(tibble(a = 1), b = a)` is equivalent to `tibble(a = 1, b = a)`. This means that `tibble(trees)` now has three columns, use `tibble(trees = trees)` if the intention is to create a packed data frame (#581).",1,127,FALSE,NA
tibble,51b18d01e05b88a4e3f774bd77a85438,"The `name-repair` help topic is gone, refer to `?vctrs::vec_as_names` instead.",1,128,FALSE,NA
tibble,fac698ff9fbf4b4bca7fa655104c0294,`expression()` columns are converted to lists as a workaround for lacking support in vctrs (#657).,1,129,FALSE,NA
tibble,79becc36fd57ec27d23b1b20b195f007,"`tribble()` is now stricter when combining values. All values in a column must be compatible, otherwise an error occurs (#204). The criteria for wrapping in a list column are now based on vctrs principles: non-vectors or vectors with `vctrs::vec_size()` unequal 1 are wrapped in lists.",1,130,FALSE,NA
tibble,5bfd2b7f3e2ddac8914eee164a8c14a1,"`$` warns unconditionally if column not found, `[[` doesn't warn.",1,131,FALSE,NA
tibble,5b57bab3a409f4282341e91e0ab1bd89,"`add_row()` now uses `vctrs::vec_rbind()` under the hood, this means that all columns are combined with `vctrs::vec_c()`. In particular, factor columns will be converted to character if one of the columns is a character column.",1,132,FALSE,NA
tibble,0e5c94b9b06d57ba9d395f7048f68e87,Soft-deprecate `subclass` argument to `new_tibble()`.,1,133,FALSE,NA
tibble,c5ffa95ba25aa038f8ae714701af1d2b,Soft-deprecate `as_tibble()` without arguments (#683).,1,134,FALSE,NA
tibble,8a0101b277d5ffc6d75191d8ea765a4e,"Preparing to move `glimpse()` and `tbl_sum()` to the pillar package. If your package implements these methods, please import the generics from pillar as soon as they become available there.",1,135,FALSE,NA
tibble,fff37ae72ed40782fb00005c8dc008e1,"Internals now make heavy use of the vctrs package, following most of the invariants defined there. Name repair is the responsibility of vctrs now (#464).",1,136,FALSE,NA
tibble,ef0b4400344ca56a0f6ef4f949f6bfb0,"All errors emitted directly by the package inherit from the `""tibble_error""` and `""rlang_error""` classes. In some cases, `""vctrs_error""` errors may be passed through. The exact subclass is subject to change. Example: `tibble(a = quote(b))` raises an error that inherits from `""tibble_error_column_must_be_vector""`, `""tibble_error""` and `""rlang_error""`, and from `""error""` and `""condition""` like all errors. Do not rely on the wording of `""tibble_error_column_must_be_vector""`, this is likely to change. Use the following pattern to catch errors emitted by tibble:",1,137,FALSE,NA
tibble,ef0b4400344ca56a0f6ef4f949f6bfb0,"```
tryCatch(
  your_code(),
  tibble_error = function(cnd) {
  }
)
```",1,138,TRUE,NA
tibble,d34301868b7182274ce8ebd3cbf49d4d,"New `tibble_row()` constructs tibbles that have exactly one row, or fails. Non-vector objects are automatically wrapped in a list, vectors (including lists) must have length one (#205).",1,139,FALSE,NA
tibble,17d1a08712ee23e0c5e878f995f068a6,"New `as_tibble_row()` and `as_tibble_col()` convert a bare vector to a one-row or one-column tibble, respectively. `as_tibble_col()` also works for non-bare vectors. Using `as_tibble()` for bare vectors is superseded (#447).",1,140,FALSE,NA
tibble,cf6756f1a3d49cdb1ffde9ab68f0f295,"`as_tibble.data.frame()` uses implicit row names if asked to create a column from row names. This allows lossless direct conversion of matrices with row names to tibbles (#567, @​stufield).",1,141,FALSE,NA
tibble,1aa989e4118fd9e0532257a341c59f8a,Implement `str.tbl_df()` (#480).,1,142,FALSE,NA
tibble,1d4a1f05cb4700bd22c2fe3e095153b2,"`tribble()` now returns columns with `""unspecified""` type for 0-row tibbles.",1,143,FALSE,NA
tibble,827e4b698c6bbf2fb2bcf980190f02b9,`add_row()` and `add_column()` now restore attributes to avoid errors when appending to sf objects or other tibble subclasses (#662).,1,144,FALSE,NA
tibble,f75d6ecfe4f1c93a8a6f4ecee6762436,"`add_column()` gains `.name_repair` argument. If not given, `.data` must have unique columns, with a deprecation message.",1,145,FALSE,NA
tibble,351467a16232dd60de67d835a7d6f73b,"Allow `POSIXlt` columns, they are now better supported by dplyr and other tools thanks to vctrs (#626).",1,146,FALSE,NA
tibble,fb3d124f9d53527833e904636ae3e4a4,"`tibble()` ignores NULL arguments, named or unnamed (#580).",1,147,FALSE,NA
tibble,3919e6636afa7418d10a6668fd1dd887,"`view()` works for remote data sources by applying the same strategy as `print()` and `glimpse()`. The maximum number of rows in this case can be specified using the new `n` argument, by default it is taken from the new `""tibble.view_max""` option (#695).",1,148,FALSE,NA
tibble,58996019a2b8b7b6e665f94c197c467d,Formatting dimensions never uses scientific notation.,1,149,FALSE,NA
tibble,c3cb54db04ed7df746dcbc71ef057e3d,"`glimpse()` uses ""Rows"" and ""Columns"" instead of ""Variables"" and ""Observations"", because we're not sure if the data is tidy here (#614).",1,150,FALSE,NA
tibble,34efda8c4dd21d2035f28132996a39fc,"`view()` now uses the created (or passed) title argument (#610, @​xvrdm).",1,151,FALSE,NA
tibble,5b57e5bab537a58dcab1a483cfad5240,"Construction and subsetting of large data frames is faster now (#717, @​romainfrancois).",1,152,FALSE,NA
tibble,05d0106ccfcbf02ae585f140c1d2723c,Import lifecycle package (#669).,1,153,FALSE,NA
tibble,83d5b71e85f760fa62b2cd1f74c3dd11,"`new_tibble()` removes redundant subclasses from the `""class""` attribute.",1,154,FALSE,NA
tibble,2ea4165916b3bf51e91a762d147f14b5,"Using classed conditions. All classes start with `""tibble_error_""` and also contain `""tibble_error""` (#659).",1,155,FALSE,NA
tibble,c1667e48fe480a890f6d0b1573db207a,The magrittr pipe `%>%` is reexported.,1,156,FALSE,NA
tibble,263c331e5ce0e1a179e8a9e85ea107c0,"Fix compatibility with R 3.5 and earlier, regression introduced in tibble 2.1.2.",1,157,FALSE,NA
tibble,3e1afc2b4d52e9f193979a80b2ee08ec,Relax version requirements.,1,158,FALSE,NA
tibble,23f79e533ce3d34662fb89e2deac70b7,Fix test failing after pillar upgrade.,1,159,FALSE,NA
tibble,951f79f59a54723a9f495abf2e6f4ce3,"Three dots are used even for `""unique""` name repair (#566).",1,160,FALSE,NA
tibble,f9eafebdee9c021e492be98a486ee585,"`add_row()`, `add_case()` and `add_column()` now signal a warning once per session if the input is not a data frame (#575).",1,161,FALSE,NA
tibble,88ec4e95970da9b831ffdacddc740cb1,Fix `view()` for the case when an object named `x` exists in the global environment (#579).,1,162,FALSE,NA
tibble,0ca923e894f7dd7b494d6d5cfd9235e7,"tibble names can again be set to `NULL` within RStudio, as some R routines within RStudio relied on this behaviour (#563, @​kevinushey).",1,163,FALSE,NA
tibble,fac4443cde5d7f0dd947134e36f196dc,"`as_tibble.matrix(validate = TRUE)` works again, with a lifecycle warning (#558).",1,164,FALSE,NA
tibble,37df1eef8331755e56aa04416fde045b,"Replace `new_list_along()` by `rep_along()` to support rlang 0.3.1 (#557, @​lionel-).",1,165,FALSE,NA
tibble,084c3e61a0f436bcefa3c62938f142f6,"All optional arguments have moved past the ellipsis, and must be specified as named arguments. This affects mostly the `n` argument to `as_tibble.table()`, passing `n` unnamed still works (with a warning).",1,166,FALSE,NA
tibble,f724ac679ab10629bd7b80ce7a79fd68,"`new_tibble()` has been optimized for performance, the function no longer strips dimensions from 1d arrays and no longer checks correctness of names or column lengths. (It still checks if the object is named, except for zero-length input.) Use the new `validate_tibble()` if you need these checks (#471).",1,167,FALSE,NA
tibble,922a917172ca975a56aecdc6aee1df92,"The `nrow` argument to `new_tibble()` is now mandatory. The `class` argument replaces the now deprecated `subclass` argument, the latter will be supported quietly for some time (#518).",1,168,FALSE,NA
tibble,ea5cddb25ef99b7083a5da64a351be78,"Setting names on a tibble via `names(df) <- ...` now also requires minimal names, otherwise a warning is issued once per session (#466).",1,169,FALSE,NA
tibble,f7dc4cce7d6389981422209e170c3374,"In `as_tibble()`, checking names is also enabled by default, even for tibbles, matrices and other matrix-like objects: names must exist, `NA` names are not allowed. Coercing a matrix without column names will trigger a warning once per session. (This corresponds to the `""minimal""` checks described below.).",1,170,FALSE,NA
tibble,e99c17c92cae3a331b63d3ddbf50feed,"The `validate` argument to `as_tibble()` has been deprecated, see below for alternatives. (The `as_tibble.tbl_df()` method has been removed, the `as_tibble.data.frame()` method will be used for tibbles.)",1,171,FALSE,NA
tibble,6f35a91252d421e9dc969cd2b24c4408,"`as_tibble()` always checks that all columns are 1D or 2D vectors and not of type `POSIXlt`, even with `validate = FALSE` (which is now deprecated).",1,172,FALSE,NA
tibble,3d6e4fed878bb64e3bd8b2d7ab3c0b05,"Calling `as_tibble()` on a vector now warns once per session. Use `enframe(name = NULL)` for converting a vector to a one-column tibble, or `enframe()` for converting a named vector to a two-column tibble.",1,173,FALSE,NA
tibble,610db170e1a6dcb28915d6c57891978f,"`data_frame()` and `frame_data()` are soft-deprecated, please use `tibble()` or `tribble()` (#111).",1,174,FALSE,NA
tibble,5eea39e8a48bba7747cee0e9ddb0419b,"`tibble_()`, `data_frame_()`, and `lst_()` are soft-deprecated. Please use `tibble()` or `lst()` (#111, #509).",1,175,FALSE,NA
tibble,fe3ed22f9af5d7fed62c484bcf17d79d,"`as.tibble()` and `as_data_frame()` are officially deprecated and not generic anymore, please use/implement `as_tibble()` (#111).",1,176,FALSE,NA
tibble,0896e30f03c1790ddb1e45d7a2ad5e78,`as_tibble.data.frame()` (and also `as_tibble.matrix()`) strip row names by default. Code that relies on tibbles keeping row names now will see:,1,177,FALSE,NA
tibble,0896e30f03c1790ddb1e45d7a2ad5e78,"• a different result when calling `rownames()` or `row.names()`,",2,178,FALSE,`as_tibble.data.frame()` (and also `as_tibble.matrix()`) strip row names by default. Code that relies on tibbles keeping row names now will see:
tibble,0896e30f03c1790ddb1e45d7a2ad5e78,"• rows full of `NA` values when subsetting rows with with a character vector, e.g. `as_tibble(mtcars)[""Mazda RX4"", ]`.",2,179,FALSE,`as_tibble.data.frame()` (and also `as_tibble.matrix()`) strip row names by default. Code that relies on tibbles keeping row names now will see:
tibble,4b7a252601bf21f91edb5b1fe95ae8da,"Call `pkgconfig::set_config(""tibble::rownames"", NA)` to revert to the old behavior of keeping row names. Packages that import *tibble* can call `set_config()` in their `.onLoad()` function (#114).",1,179,FALSE,NA
tibble,238bd4f8e2cc7be4680a67f85617d268,"`as_tibble()` drops extra classes, in particular `as_tibble.grouped_df()` now removes grouping (#535).",1,180,FALSE,NA
tibble,5ce1d992bc3f930fa49fd3ca03d805e4,"`column_to_rownames()` now always coerces to a data frame, because row names are no longer supported in tibbles (#114).",1,181,FALSE,NA
tibble,139d7f2b99ae0d9d2f1efb8f60890b0a,"In all `*_rownames()` functions, the first argument has been renamed to `.data` for consistency (#412).",1,182,FALSE,NA
tibble,83bf976e4fd419081dbb0c8bb0701258,"Subsetting one row with `[..., , drop = TRUE]` returns a tibble (#442).",1,183,FALSE,NA
tibble,02e55bf3fc919d4737e8908b98502e45,"The `print.tbl_df()` method has been removed, the `print.tbl()` method handles printing (#519).",1,184,FALSE,NA
tibble,aff6f4eaf9bda5f724066e6867758bf9,`tibble()` supports columns that are matrices or data frames (#416).,1,185,FALSE,NA
tibble,ac9d8acc56e54de79bcf9533399c3e11,"The new `.rows` argument to `tibble()` and `as_tibble()` allows specifying the expected number of rows explicitly, even if it's evident from the data. This allows writing more defensive code.",1,186,FALSE,NA
tibble,c93dc8131ad3018a87ce173c18e36daf,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:",1,187,FALSE,NA
tibble,c93dc8131ad3018a87ce173c18e36daf,"• `""minimal""`: No name repair or checks, beyond basic existence.",2,188,FALSE,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:"
tibble,c93dc8131ad3018a87ce173c18e36daf,"• `""unique""`: Make sure names are unique and not empty.",2,189,FALSE,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:"
tibble,c93dc8131ad3018a87ce173c18e36daf,"• `""check_unique""`: (default value), no name repair, but check they are `unique`.",2,190,FALSE,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:"
tibble,c93dc8131ad3018a87ce173c18e36daf,"• `""universal""`: Make the names `unique` and syntactic.",2,191,FALSE,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:"
tibble,c93dc8131ad3018a87ce173c18e36daf,"• a function: apply custom name repair (e.g., `.name_repair = make.names` or `.name_repair = ~make.names(., unique = TRUE)` for names in the style of base R).",2,192,FALSE,"Column name repair has more direct support, via the new `.name_repair` argument to `tibble()` and `as_tibble()`. It takes the following values:"
tibble,486e25873316edc49aece44eb3213013,"The `validate` argument of `as_tibble()` is deprecated but supported (emits a message once per session). Use `.name_repair = ""minimal""` instead of `validate = FALSE`, and `.name_repair = ""check_unique""` instead of `validate = TRUE`. If you need to support older versions of tibble, pass both `.name_repair` and `validate` arguments in a consistent way, no message will be emitted in this case (#469, @​jennybc).",1,192,FALSE,NA
tibble,7ca9579b8ea708a90f766835a2b4e72a,"Row name handling is stricter. Row names are never (and never were) supported in `tibble()` and `new_tibble()`, and are now stripped by default in `as_tibble()`. The `rownames` argument to `as_tibble()` supports:",1,193,FALSE,NA
tibble,7ca9579b8ea708a90f766835a2b4e72a,"• `NULL`: remove row names (default),",2,194,FALSE,"Row name handling is stricter. Row names are never (and never were) supported in `tibble()` and `new_tibble()`, and are now stripped by default in `as_tibble()`. The `rownames` argument to `as_tibble()` supports:"
tibble,7ca9579b8ea708a90f766835a2b4e72a,"• `NA`: keep row names,",2,195,FALSE,"Row name handling is stricter. Row names are never (and never were) supported in `tibble()` and `new_tibble()`, and are now stripped by default in `as_tibble()`. The `rownames` argument to `as_tibble()` supports:"
tibble,7ca9579b8ea708a90f766835a2b4e72a,"• A string: the name of the new column that will contain the existing row names, which are no longer present in the result.",2,196,FALSE,"Row name handling is stricter. Row names are never (and never were) supported in `tibble()` and `new_tibble()`, and are now stripped by default in `as_tibble()`. The `rownames` argument to `as_tibble()` supports:"
tibble,ce98e754b815279df01d5125f3575b41,"The old default can be restored by calling `pkgconfig::set_config(""tibble::rownames"", NA)`, this also works for packages that import *tibble*.",1,196,FALSE,NA
tibble,0eba85e6a1ea8f0581125149273a34ac,"`new_tibble()` and `as_tibble()` now also strip the `""dim""` attribute from columns that are one-dimensional arrays. (`tibble()` already did this before.)",1,197,FALSE,NA
tibble,58f07404f4351b10ec2febf269d9b767,"Internally, all `as_tibble()` implementation forward all extra arguments and `...` to `as_tibble.list()` where they are handled. This means that the common `.rows` and `.name_repair` can be used for all inputs. We suggest that your implementations of this method do the same.",1,198,FALSE,NA
tibble,e55393ba73f20aa9db88f57485e8d982,`enframe()` (with `name = NULL`) and `deframe()` now support one-column tibbles (#449).,1,199,FALSE,NA
tibble,0976d9bb520a1778c8459bc8dad4c71a,"Improved S4 support by adding `exportClass(tbl_df)` to `NAMESPACE` (#436, @​jeffreyhanson and @​javierfajnolla).",1,200,FALSE,NA
tibble,47660754ff8080b2cc6d153d7a8bd9b3,New `validate_tibble()` checks a tibble for internal consistency (#471).,1,201,FALSE,NA
tibble,ae38aa2ff27de6691c21ea8169f2c84c,"Bring error message for invalid column type in line with allowed matrix/df cols (#465, @​maxheld83).",1,202,FALSE,NA
tibble,573696b1a26301ae53009b0ac4353f91,Added experimental `view()` function that always returns its input invisibly and calls `utils::View()` only in interactive mode (#373).,1,203,FALSE,NA
tibble,10b1570a53fd27e1517d94a7b184f571,The `set_tidy_names()` and `tidy_names()` helpers the list of new names using a bullet list with at most six items (#406).,1,204,FALSE,NA
tibble,30e8cf10661a4cb960a7ac114e49922b,"A one-character ellipse (`cli::symbol$ellipsis`) is printed instead of `""...""` where available, this affects `glimpse()` output and truncated lists (#403).",1,205,FALSE,NA
tibble,f4024c157fdf37ea53a85d4825155e12,Column names and types are now formatted identically with `glimpse()` and `print.tbl_df()`.,1,206,FALSE,NA
tibble,5dd9b0a5847db38b737f24eb3e4c7760,`tidy_names()` quotes variable names when reporting on repair (#407).,1,207,FALSE,NA
tibble,e0dc7063665b3eb15a4fdd10a38571b9,All error messages now follow the tidyverse style guide (#223).,1,208,FALSE,NA
tibble,de5f3f9adc50ca1b2843b8a04ffe7388,"`as_tibble()` prints an informative error message when using the `rownames` argument and the input data frame or matrix does not have row names (#388, @​anhqle).",1,209,FALSE,NA
tibble,51a09a964bd129b86a82c7c066f3cc92,"`column_to_rownames()` uses the real variable name in its error message (#399, @​alexwhan).",1,210,FALSE,NA
tibble,899d31bf60c9ffd282930cc04eee7ce4,"Lazy tibbles with exactly 10 rows no longer show ""...with more rows"" (#371).",1,211,FALSE,NA
tibble,1d596d20665b2600da42115ea521cb89,"`glimpse()` shows information obtained from `tbl_sum()`, e.g. grouping information for `grouped_df` from dplyr (#550).",1,212,FALSE,NA
tibble,b7f0535b3833fd8172493e8dc7751c11,"`glimpse()` takes coloring into account when computing column width, the output is no longer truncated prematurely when coloring is enabled.",1,213,FALSE,NA
tibble,7e1df0b311452cf6b49827b95e27e5d9,"`glimpse()` disambiguates outputs for factors if the levels contain commas (#384, @​anhqle).",1,214,FALSE,NA
tibble,5b0b85d5b3bcbef4a4bbbcbf61c0d705,`print.tbl_df()` with a negative value for `n` behaves as if `n` was omitted (#371).,1,215,FALSE,NA
tibble,2aadb94748be2a42738caca667853071,Fixed output for extra column names that contain spaces.,1,216,FALSE,NA
tibble,b0ba3ca729b94667e9dfda57f62ab480,"Skip dplyr in tests if unavailable (#420, @​QuLogic).",1,217,FALSE,NA
tibble,a3c3fccecb9548f6f701337c38fce1b4,"Skip mockr in tests if unavailable (#454, @​Enchufa2).",1,218,FALSE,NA
tibble,d37a00a3c7952e6b5e687992480317cc,Use `fansi::strwrap_ctl()` instead of own string wrapping routine.,1,219,FALSE,NA
tibble,9078c2590b8a8df90c84ca40f47573fe,`tibble()` uses recycled values during construction but unrecycled values for validation.,1,220,FALSE,NA
tibble,8a9e19a316ddb4c79176eac81564d94b,`tibble()` is now faster for very wide tibbles.,1,221,FALSE,NA
tibble,d1ccd8221ea465659c85a72f80122680,Subsetting with the `[` operator is faster (#544).,1,222,FALSE,NA
tibble,33ada2bac1a6cb46432992a688ca1519,"Avoid use of `stop()` in examples if packages are not installed (#453, @​Enchufa2).",1,223,FALSE,NA
tibble,f31443ce87085e0145c976e4054ea69c,"Fix `as_tibble()` examples by using correct argument names in `requireNamespace()` call (#424, @​michaelweylandt).",1,224,FALSE,NA
tibble,904f10ce75bf879dffe96d9cc5a1931b,"`as_tibble()` checks column length only once (#365, @​anhqle).",1,225,FALSE,NA
tibble,3b667c4f6a7d8920901fbcb102624912,"Using `rlang::list2()` (#391, @​lionel-).",1,226,FALSE,NA
tibble,e6d967652d686eb6dae39964a7f7c07e,Fix OS X builds.,1,227,FALSE,NA
tibble,952c40a7acd0f9044caf9838da38dfeb,The `tibble.width` option is honored again (#369).,1,228,FALSE,NA
tibble,b04ceec9feeca45056916fbf372d0db9,"`tbl[1, , drop = TRUE]` now behaves identically to data frames (#367).",1,229,FALSE,NA
tibble,3b4e9bcd20580132c772024f3d6d52f6,"Fix error message when accessing columns using a logical index vector (#337, @​mundl).",1,230,FALSE,NA
tibble,a82bc538ec4140282267ab8df39acd31,`glimpse()` returns its input for zero-column data frames.,1,231,FALSE,NA
tibble,e5e13b60a56b7ed6f9e1edc51766027a,`enframe(NULL)` now returns the same as `enframe(logical())` (#352).,1,232,FALSE,NA
tibble,bc7c52d8d36443c04b7e0846f7e16508,"`tribble()` now ignores trailing commas (#342, @​anhqle).",1,233,FALSE,NA
tibble,3ba8b6715fb50bcb7364ec4a2f151933,Updated vignettes and website documentation.,1,234,FALSE,NA
tibble,6a2071ccc73813722a724e5819822783,Faster printing of very wide tibbles (#360).,1,235,FALSE,NA
tibble,b6dac52a1392ad0c126456c91cb895aa,Faster construction and subsetting for tibbles (#353).,1,236,FALSE,NA
tibble,8601f7a1eabd024e890ed87666c8dc44,"Only call `nrow()` and `head()` in `glimpse()`, not `ncol()`.",1,237,FALSE,NA
tibble,009363c57eddc98cb42240061a02bab7,"Make `add_case()` an alias for `add_row()` (#324, @​LaDilettante).",1,238,FALSE,NA
tibble,d4b3eb8dbce8fa1fb014f0263a72a6a2,"`as_tibble()` gains `rownames` argument (#288, #289).",1,239,FALSE,NA
tibble,6ab305ec5d90c36a48811be7113ed3cb,`as_tibble.matrix()` repairs column names.,1,240,FALSE,NA
tibble,ced7bfbb3d1a0ea3156471c88e5c32cc,Tibbles now support character subsetting (#312).,1,241,FALSE,NA
tibble,5d8b49f80587d67c85791cb3a1c70611,"`` `[.tbl_df`() `` supports `drop = TRUE` and omits the warning if `j` is passed. The calls `df[i, j, drop = TRUE]` and `df[j, drop = TRUE]` are now compatible with data frames again (#307, #311).",1,242,FALSE,NA
tibble,3432eaa77c69edea64b9091839be442f,Improved compatibility with remote data sources for `glimpse()` (#328).,1,243,FALSE,NA
tibble,dd4e8c476555eed3b90bf41f74e93ac7,"Logical indexes are supported, a warning is raised if the length does not match the number of rows or 1 (#318).",1,244,FALSE,NA
tibble,23dd19934e4433bbacf6fa6fc3982e73,Fixed width for word wrapping of the extra information (#301).,1,245,FALSE,NA
tibble,8cbc629f6b58d08d84189353f38e92db,"Prevent `add_column()` from dropping classes and attributes by removing the use of `cbind()`. Additionally this ensures that `add_column()` can be used with grouped data frames (#303, @​DavisVaughan).",1,246,FALSE,NA
tibble,b4c9cdf43b65117175f8657e3fb6f62b,`add_column()` to an empty zero-row tibble with a variable of nonzero length now produces a correct error message (#319).,1,247,FALSE,NA
tibble,add12d8250167135c24013f1c67b88c1,"Reexporting `has_name()` from rlang, instead of forwarding, to avoid warning when importing both rlang and tibble.",1,248,FALSE,NA
tibble,30f5180ef6c632e313f8f109e1bb3dc7,Compatible with R 3.1 (#323).,1,249,FALSE,NA
tibble,68474d5c774b45c35fc50fc0b1f18795,"Remove Rcpp dependency (#313, @​patperry).",1,250,FALSE,NA
tibble,c1b6ef3fbd57b38b813f7685a84ef02e,"Values of length 1 in a `tibble()` call are recycled prior to evaluating subsequent arguments, improving consistency with `mutate()` (#213).",1,251,FALSE,NA
tibble,f41092b5eca2666dc7afc0fe807dd114,Recycling of values of length 1 in a `tibble()` call maintains their class (#284).,1,252,FALSE,NA
tibble,abeb89b60023e208a1fefc74cac19cce,`add_row()` now always preserves the column data types of the input data frame the same way as `rbind()` does (#296).,1,253,FALSE,NA
tibble,4aad948410448934add68e718ae8e5eb,"`lst()` now again handles duplicate names, the value defined last is used in case of a clash.",1,254,FALSE,NA
tibble,915974f816404da07005dd5b5e2783d3,Adding columns to zero-row data frames now also works when mixing lengths 1 and 0 in the new columns (#167).,1,255,FALSE,NA
tibble,f0cb9c81f5933ec4f3584bd0746a1c96,"The `validate` argument is now also supported in `as_tibble.tbl_df()`, with default to `FALSE` (#278). It must be passed as named argument, as in `as_tibble(validate = TRUE)`.",1,256,FALSE,NA
tibble,0e26bb9a06abf072daf41e3d0e0e7734,"`format_v()` now always surrounds lists with `[]` brackets, even if their length is one. This affects `glimpse()` output for list columns (#106).",1,257,FALSE,NA
tibble,57c041c186c0417904c794afe5344ba8,Factor levels are escaped when printing (#277).,1,258,FALSE,NA
tibble,6a431053755c6759eb8718e4bbc465d0,Non-syntactic names are now also escaped in `glimpse()` (#280).,1,259,FALSE,NA
tibble,863d6355ffbe6d8a18388399d825ab98,`tibble()` gives a consistent error message in the case of duplicate column names (#291).,1,260,FALSE,NA
tibble,347791e4fa4db7228efd856510359caa,"Added `format()` and `print()` methods for both `tbl` and `tbl_df` classes, to protect against malformed tibbles that inherit from `""tbl_df""` but not `""tbl""`, as created e.g. by `ungroup()` in dplyr 0.5.0 and earlier (#256, #263).",1,261,FALSE,NA
tibble,00df1b41585b09ca47c98e87a63747aa,The column width for non-syntactic columns is computed correctly again (#258).,1,262,FALSE,NA
tibble,b77e68c9a3c5c1df2d10bc998e801d18,Printing a tibble doesn't apply quote escaping to list columns.,1,263,FALSE,NA
tibble,01da5c183b9783837155bd5dd9499171,"Fix error in `tidy_names(syntactic = TRUE, quiet = FALSE)` if not all names are fixed (#260, @​imanuelcostigan).",1,264,FALSE,NA
tibble,c8409b18d6fcd77836b3445cec35fe8e,Remove unused import declaration for assertthat.,1,265,FALSE,NA
tibble,3b529a9f22c7f121de143c2228b81d4c,"Subsetting zero columns no longer returns wrong number of rows (#241, @​echasnovski).",1,266,FALSE,NA
tibble,3a0ccc0a8b05f5003864f6fe5e2d4cd3,"New `set_tidy_names()` and `tidy_names()`, a simpler version of `repair_names()` which works unchanged for now (#217).",1,267,FALSE,NA
tibble,4a8d3f07fa22a5e9b1562331ef60cfe6,"New `rowid_to_column()` that adds a `rowid` column as first column and removes row names (#243, @​barnettjacob).",1,268,FALSE,NA
tibble,4104b8b4881e83dccd846b8e3b7cde2b,"The `all.equal.tbl_df()` method has been removed, calling `all.equal()` now forwards to `base::all.equal.data.frame()`. To compare tibbles ignoring row and column order, please use `dplyr::all_equal()` (#247).",1,269,FALSE,NA
tibble,3fe6315d02c9d97611fd05522aebe916,"Printing now uses `x` again instead of the Unicode multiplication sign, to avoid encoding issues (#216).",1,270,FALSE,NA
tibble,dd84b0982ae73e818c0ec7b626769999,String values are now quoted when printing if they contain non-printable characters or quotes (#253).,1,271,FALSE,NA
tibble,857d6b8a682a4c9f698e90ff033a850b,"The `print()`, `format()`, and `tbl_sum()` methods are now implemented for class `""tbl""` and not for `""tbl_df""`. This allows subclasses to use tibble's formatting facilities. The formatting of the header can be tweaked by implementing `tbl_sum()` for the subclass, which is expected to return a named character vector. The `print.tbl_df()` method is still implemented for compatibility with downstream packages, but only calls `NextMethod()`.",1,272,FALSE,NA
tibble,00a2593d990c62655021f63c8d70c0ca,"Own printing routine, not relying on `print.data.frame()` anymore. Now providing `format.tbl_df()` and full support for Unicode characters in names and data, also for `glimpse()` (#235).",1,273,FALSE,NA
tibble,eda83a09c4c0b3000b612012232cf4d3,Improve formatting of error messages (#223).,1,274,FALSE,NA
tibble,20f079d3527dd60ac49a97d87464fa40,"Using `rlang` instead of `lazyeval` (#225, @​lionel-), and `rlang` functions (#244).",1,275,FALSE,NA
tibble,e87f6465269c1f5e32d8310fe325af66,"`tribble()` now handles values that have a class (#237, @​NikNakk).",1,276,FALSE,NA
tibble,c4a796b6a829cd72ab59a051e73a446b,"Minor efficiency gains by replacing `any(is.na())` with `anyNA()` (#229, @​csgillespie).",1,277,FALSE,NA
tibble,95e35e5478c05653abee13a06da9d497,The `microbenchmark` package is now used conditionally (#245).,1,278,FALSE,NA
tibble,ba120f400dc727b12f7f2eef8cd856f9,`pkgdown` website.,1,279,FALSE,NA
tibble,c3b9c7dc17f9c4d39b80ccf7126b3172,Time series matrices (objects of class `mts` and `ts`) are now supported in `as_tibble()` (#184).,1,280,FALSE,NA
tibble,7de28b7f8bc5a799365b73acb66ac71a,"The `all_equal()` function (called by `all.equal.tbl_df()`) now forwards to `dplyr` and fails with a helpful message if not installed. Data frames with list columns cannot be compared anymore, and differences in the declared class (`data.frame` vs. `tbl_df`) are ignored. The `all.equal.tbl_df()` method gives a warning and forwards to `NextMethod()` if `dplyr` is not installed; call `all.equal(as.data.frame(...), ...)` to avoid the warning. This ensures consistent behavior of this function, regardless if `dplyr` is loaded or not (#198).",1,281,FALSE,NA
tibble,5eca1527783ebd9f5f6a9e9c94aec717,Now requiring R 3.1.0 instead of R 3.1.3 (#189).,1,282,FALSE,NA
tibble,9d1e5844435a446b70ae0fd62c76e5d3,"Add `as.tibble()` as an alias to `as_tibble()` (#160, @​LaDilettante).",1,283,FALSE,NA
tibble,c17a3ca9b7b6ecf2a6ddf4012e12d22c,"New `frame_matrix()`, similar to `frame_data()` but for matrices (#140, #168, @​LaDilettante).",1,284,FALSE,NA
tibble,f8cbec0f87ae28f21fc145efd5292f85,"New `deframe()` as reverse operation to `enframe()` (#146, #214).",1,285,FALSE,NA
tibble,16fa064185f539c8691d974cd479e9ee,Removed unused dependency on `assertthat`.,1,286,FALSE,NA
tibble,28a0f2ca9eee7dbd11f70f598db9786e,"Keep column classes when adding row to empty tibble (#171, #177, @​LaDilettante).",1,287,FALSE,NA
tibble,2307ee4e61b52067028daf5424afeb70,"Singular and plural variants for error messages that mention a list of objects (#116, #138, @​LaDilettante).",1,288,FALSE,NA
tibble,d85be6decb34e881134e687beb2a654e,"`add_column()` can add columns of length 1 (#162, #164, @​LaDilettante).",1,289,FALSE,NA
tibble,335af23211e01cff0352cf1c1e5b193a,An attempt to read or update a missing column now throws a clearer warning (#199).,1,290,FALSE,NA
tibble,8a31adf0d315fb2675015c63f359beac,An attempt to call `add_row()` for a grouped data frame results in a helpful error message (#179).,1,291,FALSE,NA
tibble,f2d352f638eba22144dc9724baec333a,"Render Unicode multiplication sign as `x` if it cannot be represented in the current locale (#192, @​ncarchedi).",1,292,FALSE,NA
tibble,6e5b43ce8cabb842d7d32c844fee7523,"Backtick `NA` names in printing (#206, #207, @​jennybc).",1,293,FALSE,NA
tibble,49963c329341bd485bff142db3e2fdf0,"`glimpse()` now uses `type_sum()` also for S3 objects (#185, #186, @​holstius).",1,294,FALSE,NA
tibble,372af2083df05613a9b1f1ece5e66dc0,"The `max.print` option is ignored when printing a tibble (#194, #195, @​t-kalinowski).",1,295,FALSE,NA
tibble,75d4d54c6fb14b8db2b8b985838100f9,"Fix typo in `obj_sum` documentation (#193, @​etiennebr).",1,296,FALSE,NA
tibble,e37c2a63862323bb83a1c6431139d5b7,"Reword documentation for `tribble()` (#191, @​kwstat).",1,297,FALSE,NA
tibble,58267c5134a0e47de85a8eb5bb192acb,Now explicitly stating minimum Rcpp version 0.12.3.,1,298,FALSE,NA
tibble,4fc04ae6e879ea376d05ce31ba13b31c,Using registration of native routines.,1,299,FALSE,NA
tibble,ef6b043cbd07dea23829871e1daff48f,"The `tibble.width` option is used for `glimpse()` only if it is finite (#153, @​kwstat).",1,300,FALSE,NA
tibble,ef82a6d5b5161a9f917908f0a8e6c938,New `as_tibble.poly()` to support conversion of a `poly` object to a tibble (#110).,1,301,FALSE,NA
tibble,269f281bc0f19605fe36791f464d29fd,`add_row()` now correctly handles existing columns of type `list` that are not updated (#148).,1,302,FALSE,NA
tibble,9433394620c7ab5c27eeecadbbafb95d,"`all.equal()` doesn't throw an error anymore if one of the columns is named `na.last`, `decreasing` or `method` (#107, @​BillDunlap).",1,303,FALSE,NA
tibble,b17f298a47e28b94a47bdbe9abdf0c95,"New `add_column()`, analogously to `add_row()` (#99).",1,304,FALSE,NA
tibble,a67c607cb41b7328f5c4762152d6933f,`print.tbl_df()` gains `n_extra` method and will have the same interface as `trunc_mat()` from now on.,1,305,FALSE,NA
tibble,790db7f7358f420118effa68e5ca3beb,`add_row()` and `add_column()` gain `.before` and `.after` arguments which indicate the row (by number) or column (by number or name) before or after which the new data are inserted. Updated or added columns cannot be named `.before` or `.after` (#99).,1,306,FALSE,NA
tibble,81f87784bb625c61966058ce40b6988d,"Rename `frame_data()` to `tribble()`, stands for ""transposed tibble"". The former is still available as alias (#132, #143).",1,307,FALSE,NA
tibble,cd9d97dba34c6bbcfc9c146a2f295076,"`add_row()` now can add multiple rows, with recycling (#142, @​jennybc).",1,308,FALSE,NA
tibble,13676df3d005d4bf48c5a0b950f0bd56,Use multiply character `×` instead of `x` when printing dimensions (#126). Output tests had to be disabled for this on Windows.,1,309,FALSE,NA
tibble,f12a8da66e40e1b3ef9218b0429bc286,Back-tick non-semantic column names on output (#131).,1,310,FALSE,NA
tibble,928abd4ce23c6359781100a794a2180e,"Use `dttm` instead of `time` for `POSIXt` values (#133), which is now used for columns of the `difftime` class.",1,311,FALSE,NA
tibble,9a685b8420715f102045f93314642037,"Better output for 0-row results when total number of rows is unknown (e.g., for SQL data sources).",1,312,FALSE,NA
tibble,efd6cf51ec8b5772c000b195e3353a63,New object summary vignette that shows which methods to define for custom vector classes to be used as tibble columns (#151).,1,313,FALSE,NA
tibble,853f4bd783d028b9de77c45b334dfa21,"Added more examples for `print.tbl_df()`, now using data from `nycflights13` instead of `Lahman` (#121), with guidance to install `nycflights13` package if necessary (#152).",1,314,FALSE,NA
tibble,5e1b8ecc785cf5eb2a653bac8d4cfd2f,"Minor changes in vignette (#115, @​helix123).",1,315,FALSE,NA
tibble,efa8972253d1fe23ef0275dcfb68f86d,`tibble()` is no longer an alias for `frame_data()` (#82).,1,316,FALSE,NA
tibble,2fc3cd095da31e2f4cf46281f5c49819,Remove `tbl_df()` (#57).,1,317,FALSE,NA
tibble,c1e7074ed15d763d90c6617cecfc0e3a,"`$` returns `NULL` if column not found, without partial matching. A warning is given (#109).",1,318,FALSE,NA
tibble,24600be342755bb16e019d39cfc7b05a,`[[` returns `NULL` if column not found (#109).,1,319,FALSE,NA
tibble,5cdca1516bd57545a3094ead3b322e5c,"Reworked output: More concise summary (begins with hash `#` and contains more text (#95)), removed empty line, showing number of hidden rows and columns (#51). The trailing metadata also begins with hash `#` (#101). Presence of row names is indicated by a star in printed output (#72).",1,320,FALSE,NA
tibble,31ea829bcc43a2b42296b12e043f5b36,"Format `NA` values in character columns as `<NA>`, like `print.data.frame()` does (#69).",1,321,FALSE,NA
tibble,49281d7b81d0c45ebbb637bad37da4a6,"The number of printed extra cols is now an option (#68, @​lionel-).",1,322,FALSE,NA
tibble,5f95f438b87186dc93c2b307de87574f,"Computation of column width properly handles wide (e.g., Chinese) characters, tests still fail on Windows (#100).",1,323,FALSE,NA
tibble,5492c70de1800950ae8eee3dc0cf9795,`glimpse()` shows nesting structure for lists and uses angle brackets for type (#98).,1,324,FALSE,NA
tibble,cb1d71ed91a2d59301c8aa7e8464ff75,"Tibbles with `POSIXlt` columns can be printed now, the text `<POSIXlt>` is shown as placeholder to encourage usage of `POSIXct` (#86).",1,325,FALSE,NA
tibble,7873c441b36f939061328a1fd2ef420f,`type_sum()` shows only topmost class for S3 objects.,1,326,FALSE,NA
tibble,37b9d2cac8ff7e098f9d58e53366c435,"Strict checking of integer and logical column indexes. For integers, passing a non-integer index or an out-of-bounds index raises an error. For logicals, only vectors of length 1 or `ncol` are supported. Passing a matrix or an array now raises an error in any case (#83).",1,327,FALSE,NA
tibble,cc6dacb4ff8e0abe8a9bd51e147867c4,Warn if setting non-`NULL` row names (#75).,1,328,FALSE,NA
tibble,d6f7ba88c153a1dee477864731b23b16,Consistently surround variable names with single quotes in error messages.,1,329,FALSE,NA
tibble,6fc43cbe98103325da3cf4e67856ec92,"Use ""Unknown column 'x'"" as error message if column not found, like base R (#94).",1,330,FALSE,NA
tibble,65454d2225ee0861a363f03969b168d3,`stop()` and `warning()` are now always called with `call. = FALSE`.,1,331,FALSE,NA
tibble,4f5f66863fc3f8bad25b306fb5e795a1,The `.Dim` attribute is silently stripped from columns that are 1d matrices (#84).,1,332,FALSE,NA
tibble,d78819df2f61cfda0e314bd7054124a4,Converting a tibble without row names to a regular data frame does not add explicit row names.,1,333,FALSE,NA
tibble,a045af41aed2d61fad2251cb81fd67a7,"`as_tibble.data.frame()` preserves attributes, and uses `as_tibble.list()` to calling overriden methods which may lead to endless recursion.",1,334,FALSE,NA
tibble,860deb5186066aad74f9a4a428436137,New `has_name()` (#102).,1,335,FALSE,NA
tibble,8f68f73c1f7c62612de59beab2eb02ad,Prefer `tibble()` and `as_tibble()` over `data_frame()` and `as_data_frame()` in code and documentation (#82).,1,336,FALSE,NA
tibble,661101df2765de254feb7fe85f45318c,New `is.tibble()` and `is_tibble()` (#79).,1,337,FALSE,NA
tibble,89f0efeba4d77277666429c143c66160,"New `enframe()` that converts vectors to two-column tibbles (#31, #74).",1,338,FALSE,NA
tibble,f3828433ee26800b42600b2c718a36e6,"`obj_sum()` and `type_sum()` show `""tibble""` instead of `""tbl_df""` for tibbles (#82).",1,339,FALSE,NA
tibble,106bcdbb99874a2dac3d74cbc597d41c,"`as_tibble.data.frame()` gains `validate` argument (as in `as_tibble.list()`), if `TRUE` the input is validated.",1,340,FALSE,NA
tibble,309ac41fdd471d10b2d8dbea270bc29b,"Implement `as_tibble.default()` (#71, hadley/dplyr#1752).",1,341,FALSE,NA
tibble,339cd8a9c2c23c9dea7fbcbab67dc3d2,`has_rownames()` supports arguments that are not data frames.,1,342,FALSE,NA
tibble,a1912312c961d36a3cc0c85d767400c4,"Two-dimensional indexing with `[[` works (#58, #63).",1,343,FALSE,NA
tibble,e3b2378e84de2d151ff6db79ca3a018e,"Subsetting with empty index (e.g., `x[]`) also removes row names.",1,344,FALSE,NA
tibble,6bd1cb239485d832aa4081627803ad31,Document behavior of `as_tibble.tbl_df()` for subclasses (#60).,1,345,FALSE,NA
tibble,5fb8c4e06ec7a71eb586b9ed67f665d5,Document and test that subsetting removes row names.,1,346,FALSE,NA
tibble,5a999b803eec8e211ebb9e44615d3db8,Don't rely on `knitr` internals for testing (#78).,1,347,FALSE,NA
tibble,fc88740b1ce90aa03f81ba30216ffd54,Fix compatibility with `knitr` 1.13 (#76).,1,348,FALSE,NA
tibble,113eccb93dd27290962b75a51ae90fce,Enhance `knit_print()` tests.,1,349,FALSE,NA
tibble,ae701e1c77f52df8c4a8870271dbb2dc,Provide default implementation for `tbl_sum.tbl_sql()` and `tbl_sum.tbl_grouped_df()` to allow `dplyr` release before a `tibble` release.,1,350,FALSE,NA
tibble,0089654ed125b6bccd782f5b5cc3516c,Explicit tests for `format_v()` (#98).,1,351,FALSE,NA
tibble,6537951f224116a27b734325c9c01d6d,Test output for `NULL` value of `tbl_sum()`.,1,352,FALSE,NA
tibble,520f4fedff8819ccbb5b4a1c16cd6123,Test subsetting in all variants (#62).,1,353,FALSE,NA
tibble,eef7288a2149cea264dffadeaff2ec21,Add missing test from dplyr.,1,354,FALSE,NA
tibble,45d80a97d2c94dc7e27b0c5e8f17cce2,Use new `expect_output_file()` from `testthat`.,1,355,FALSE,NA
tibble,f3d0c8e61a278a61d26544a80589988e,Initial CRAN release,1,356,FALSE,NA
tibble,2b3dde23e4638dc67c04740f11b6de4b,Extracted from `dplyr` 0.4.3,1,357,FALSE,NA
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,Exported functions:,1,358,FALSE,NA
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• `tbl_df()`,2,359,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• `as_data_frame()`,2,360,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• `data_frame()`, `data_frame_()`",2,361,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• `frame_data()`, `tibble()`",2,362,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• `glimpse()`,2,363,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• `trunc_mat()`, `knit_print.trunc_mat()`",2,364,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• `type_sum()`,2,365,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• New `lst()` and `lst_()` create lists in the same way that `data_frame()` and `data_frame_()` create data frames (hadley/dplyr#1290). `lst(NULL)` doesn't raise an error (#17, @​jennybc), but always uses deparsed expression as name (even for `NULL`).",2,366,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• New `add_row()` makes it easy to add a new row to data frame (hadley/dplyr#1021).,2,367,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• New `rownames_to_column()` and `column_to_rownames()` (#11, @​zhilongjia).",2,368,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• New `has_rownames()` and `remove_rownames()` (#44).,2,369,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,"• New `repair_names()` fixes missing and duplicate names (#10, #15, @​r2evans).",2,370,FALSE,Exported functions:
tibble,b5dbda3d987fbb1d3aeffcd9c9cc37ad,• New `is_vector_s3()`.,2,371,FALSE,Exported functions:
tibble,ad8c97c75754440f84f07a15ae0d1695,Features,1,372,FALSE,NA
tibble,ad8c97c75754440f84f07a15ae0d1695,"• New `as_data_frame.table()` with argument `n` to control name of count column (#22, #23).",2,373,FALSE,Features
tibble,ad8c97c75754440f84f07a15ae0d1695,"• Use `tibble` prefix for options (#13, #36).",2,374,FALSE,Features
tibble,ad8c97c75754440f84f07a15ae0d1695,"• `glimpse()` now (invisibly) returns its argument (hadley/dplyr#1570). It is now a generic, the default method dispatches to `str()` (hadley/dplyr#1325). The default width is obtained from the `tibble.width` option (#35, #56).",2,375,FALSE,Features
tibble,ad8c97c75754440f84f07a15ae0d1695,"• `as_data_frame()` is now an S3 generic with methods for lists (the old `as_data_frame()`), data frames (trivial), matrices (with efficient C++ implementation) (hadley/dplyr#876), and `NULL` (returns a 0-row 0-column data frame) (#17, @​jennybc).",2,376,FALSE,Features
tibble,ad8c97c75754440f84f07a15ae0d1695,• Non-scalar input to `frame_data()` and `tibble()` (including lists) creates list-valued columns (#7). These functions return 0-row but n-col data frame if no data.,2,377,FALSE,Features
tibble,33bf80f49bee24b18fbb1aa268b50324,Bug fixes,1,378,FALSE,NA
tibble,33bf80f49bee24b18fbb1aa268b50324,"• `frame_data()` properly constructs rectangular tables (hadley/dplyr#1377, @​kevinushey).",2,379,FALSE,Bug fixes
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,Minor modifications,1,380,FALSE,NA
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• Uses `setOldClass(c(""tbl_df"", ""tbl"", ""data.frame""))` to help with S4 (hadley/dplyr#969).",2,381,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,• `tbl_df()` automatically generates column names (hadley/dplyr#1606).,2,382,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• `tbl_df`s gain `$` and `[[` methods that are \~5x faster than the defaults, never do partial matching (hadley/dplyr#1504), and throw an error if the variable does not exist. `[[.tbl_df()` falls back to regular subsetting when used with anything other than a single string (#29). `base::getElement()` now works with tibbles (#9).",2,383,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• `all_equal()` allows to compare data frames ignoring row and column order, and optionally ignoring minor differences in type (e.g. int vs. double) (hadley/dplyr#821). Used by `all.equal()` for tibbles. (This package contains a pure R implementation of `all_equal()`, the `dplyr` code has identical behavior but is written in C++ and thus faster.)",2,384,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• The internals of `data_frame()` and `as_data_frame()` have been aligned, so `as_data_frame()` will now automatically recycle length-1 vectors. Both functions give more informative error messages if you are attempting to create an invalid data frame. You can no longer create a data frame with duplicated names (hadley/dplyr#820). Both functions now check that you don't have any `POSIXlt` columns, and tell you to use `POSIXct` if you do (hadley/dplyr#813). `data_frame(NULL)` raises error ""must be a 1d atomic vector or list"".",2,385,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,• `trunc_mat()` and `print.tbl_df()` are considerably faster if you have very wide data frames. They will now also only list the first 100 additional variables not already on screen - control this with the new `n_extra` parameter to `print()` (hadley/dplyr#1161). The type of list columns is printed correctly (hadley/dplyr#1379). The `width` argument is used also for 0-row or 0-column data frames (#18).,2,386,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• When used in list-columns, S4 objects only print the class name rather than the full class hierarchy (#33).",2,387,FALSE,Minor modifications
tibble,6ec0f325f3fd849bcf1d2142ec2070b2,"• Add test that `[.tbl_df()` does not change class (#41, @​jennybc). Improve `[.tbl_df()` error message.",2,388,FALSE,Minor modifications
tibble,fea528343dc0e44cddd81d3ff89d9de8,Documentation,1,389,FALSE,NA
tibble,fea528343dc0e44cddd81d3ff89d9de8,"• Update README, with edits (#52, @​bhive01) and enhancements (#54, @​jennybc).",2,390,FALSE,Documentation
tibble,fea528343dc0e44cddd81d3ff89d9de8,"• `vignette(""tibble"")` describes the difference between tbl_dfs and regular data frames (hadley/dplyr#1468).",2,391,FALSE,Documentation
tibble,f182fdd78e75a6a046096bd18d4e7e03,Code quality,1,392,FALSE,NA
tibble,f182fdd78e75a6a046096bd18d4e7e03,"• Test using new-style Travis-CI and AppVeyor. Full test coverage (#24, #53). Regression tests load known output from file (#49).",2,393,FALSE,Code quality
tibble,f182fdd78e75a6a046096bd18d4e7e03,"• Renamed `obj_type()` to `obj_sum()`, improvements, better integration with `type_sum()`.",2,394,FALSE,Code quality
tibble,f182fdd78e75a6a046096bd18d4e7e03,• Internal cleanup.,2,395,FALSE,Code quality
tidyr,8bf92ed9a9cce1a850be1a66a4e22a3b,"`pivot_wider` now uses `.by` and `|>` syntax for the dplyr helper message to identify duplicates (@​boshek, #1516)",1,1,FALSE,NA
tidyr,80103522342cb43781b183e3c7517d50,"New family of consistent string separating functions: `separate_wider_delim()`, `separate_wider_position()`, `separate_wider_regex()`, `separate_longer_delim()`, and `separate_longer_position()`. These functions are thorough refreshes of `separate()` and `extract()`, featuring improved performance, greater consistency, a polished API, and a new approach for handling problems. They use stringr and supersede `extract()`, `separate()`, and `separate_rows()` (#1304). The named character vector interface used in `separate_wider_regex()` is very similar to the nc package by Toby Dylan Hocking.",1,2,FALSE,NA
tidyr,b1eafb3650239096b61c23c6d88a8402,"`nest()` gains a `.by` argument which allows you to specify the columns to nest by (rather than the columns to nest, i.e. through `...`). Additionally, the `.key` argument is no longer deprecated, and is used whenever `...` isn't specified (#1458).",1,3,FALSE,NA
tidyr,0431798297f1422fb449742bed8d838f,`unnest_longer()` gains a `keep_empty` argument like `unnest()` (#1339).,1,4,FALSE,NA
tidyr,519d0ee9874b07864eafa770026695da,`pivot_longer()` gains a `cols_vary` argument for controlling the ordering of the output rows relative to their original row number (#1312).,1,5,FALSE,NA
tidyr,bd1d8a9cbc04929544548ae8abdcbe5b,"New datasets `who2`, `household`, `cms_patient_experience`, and `cms_patient_care` to demonstrate various tidying challenges (#1333).",1,6,FALSE,NA
tidyr,a652c26d63189bd8d54c2a67e026c53b,"The `...` argument of both `pivot_longer()` and `pivot_wider()` has been moved to the front of the function signature, after the required arguments but before the optional ones. Additionally, `pivot_longer_spec()`, `pivot_wider_spec()`, `build_longer_spec()`, and `build_wider_spec()` have all gained `...` arguments in a similar location. This change allows us to more easily add new features to the pivoting functions without breaking existing CRAN packages and user scripts. `pivot_wider()` provides temporary backwards compatible support for the case of a single unnamed argument that previously was being positionally matched to `id_cols`. This one special case still works, but will throw a warning encouraging you to explicitly name the `id_cols` argument. To read more about this pattern, see Data, dots, details in the tidyverse design guide (#1350).",1,7,FALSE,NA
tidyr,5b5869ddd0d6692bc6bfaf8877ca0b16,All functions deprecated in tidyr 1.0 and 1.2 (the old lazyeval functions ending in `_` and various arguments to `unnest()`) now warn on every use. They will be made defunct in 2024 (#1406).,1,8,FALSE,NA
tidyr,abaf7d198b30827e96f55af24e1cfc4c,"`unnest_longer()` now consistently drops rows with either `NULL` or empty vectors (like `integer()`) by default. Set the new `keep_empty` argument to `TRUE` to retain them. Previously, `keep_empty = TRUE` was implicitly being used for `NULL`, while `keep_empty = FALSE` was being used for empty vectors, which was inconsistent with all other tidyr verbs with this argument (#1363).",1,9,FALSE,NA
tidyr,e3b201c97c58d84905cc440a80045a9d,"`unnest_longer()` now uses `""""` in the index column for fully unnamed vectors. It also now consistently uses `NA` in the index column for empty vectors that are ""kept"" by `keep_empty = TRUE` (#1442).",1,10,FALSE,NA
tidyr,1fa828f22a8e5e67aa025a79cba4b476,`unnest_wider()` now errors if any values being unnested are unnamed and `names_sep` is not provided (#1367).,1,11,FALSE,NA
tidyr,ea7a1f3df59c5d38ddded5bd3d07a9ef,"`unnest_wider()` now generates automatic names for *partially* unnamed vectors. Previously it only generated them for fully unnamed vectors, resulting in a strange mix of automatic names and name-repaired names (#1367).",1,12,FALSE,NA
tidyr,588b25886c96cfb1c9622a7eb08ab80f,"Most tidyr functions now consistently disallow renaming during tidy-selection. Renaming was never meaningful in these functions, and previously either had no effect or caused problems (#1449, #1104).",1,13,FALSE,NA
tidyr,f692e1a560f0b26d785cba5239cf2ad5,"tidyr errors (including input validation) have been thoroughly reviewed and should generally be more likely to point you in the right direction (#1313, #1400).",1,14,FALSE,NA
tidyr,1d5bca34846ac997a40c6da5f4ca7d5f,"`uncount()` is now generic so implementations can be provided for objects other than data frames (@​mgirlich, #1358).",1,15,FALSE,NA
tidyr,9e8cec23264200050a9f669a900a1cde,"`uncount()` gains a `...` argument. It comes between the required and the optional arguments (@​mgirlich, #1358).",1,16,FALSE,NA
tidyr,dae38dfcf3a7c0a926520d0953a4e0e7,"`nest()`, `complete()`, `expand()`, and `fill()` now document their support for grouped data frames created by `dplyr::group_by()` (#952).",1,17,FALSE,NA
tidyr,7617983be51cf5705f808dc2280e3f44,All built in datasets are now standard tibbles (#1459).,1,18,FALSE,NA
tidyr,6f57444298d7fb2dac413b9b3c03d80a,"R \>=3.4.0 is now required, in line with the tidyverse standard of supporting the previous 5 minor releases of R.",1,19,FALSE,NA
tidyr,1532fc5de45ed21464a2574664a1fb77,"rlang \>=1.0.4 and vctrs \>=0.5.2 are now required (#1344, #1470).",1,20,FALSE,NA
tidyr,f6c5e24a96a97ca32fe448a6ef09ce18,Removed dependency on ellipsis in favor of equivalent functions in rlang (#1314).,1,21,FALSE,NA
tidyr,3c264b149f25945c572311ba917b37eb,"`unnest()`, `unchop()`, `unnest_longer()`, and `unnest_wider()` better handle lists with additional classes (#1327).",1,22,FALSE,NA
tidyr,1ff8ddd159ef91afaa9983b9531a3256,"`pack()`, `unpack()`, `chop()`, and `unchop()` all gain an `error_call` argument, which in turn improves some of the error calls shown in `nest()` and various `unnest()` adjacent functions (#1446).",1,23,FALSE,NA
tidyr,88c316304d5ad07298612460a21e29c1,"`chop()`, `unpack()`, and `unchop()` all gain `...`, which must be empty (#1447).",1,24,FALSE,NA
tidyr,da15ecd4e996447306a0bf93802c8e7d,"`unpack()` does a better job of reporting column name duplication issues and gives better advice about how to resolve them using `names_sep`. This also improves errors from functions that use `unpack()`, like `unnest()` and `unnest_wider()` (#1425, #1367).",1,25,FALSE,NA
tidyr,2c9377df9522747e852bc130d964b4ec,"`pivot_longer()` no longer supports interpreting `values_ptypes = list()` and `names_ptypes = list()` as `NULL`. An empty `list()` is now interpreted as a `<list>` prototype to apply to all columns, which is consistent with how any other 0-length value is interpreted (#1296).",1,26,FALSE,NA
tidyr,e82863b8fd78dc5629274e246d9b4c64,"`pivot_longer(values_drop_na = TRUE)` is faster when there aren't any missing values to drop (#1392, @​mgirlich).",1,27,FALSE,NA
tidyr,5d3ccd983a830e215839e8ee6e04f83e,"`pivot_longer()` is now more memory efficient due to the usage of `vctrs::vec_interleave()` (#1310, @​mgirlich).",1,28,FALSE,NA
tidyr,d741fd0cfcab3d783866ff764f5d6f01,`pivot_longer()` now throws a slightly better error message when `values_ptypes` or `names_ptypes` is provided and the coercion can't be made (#1364).,1,29,FALSE,NA
tidyr,5bc47ce83876a1ea57ee894880347519,`pivot_wider()` now throws a better error message when a column selected by `names_from` or `values_from` is also selected by `id_cols` (#1318).,1,30,FALSE,NA
tidyr,2d8e6da65d19eb1103dccba7448addb7,"`pivot_wider()` is now faster when `names_sep` is provided (@​mgirlich, #1426).",1,31,FALSE,NA
tidyr,139d61bb677b3833001c15737a9ac7e5,"`pivot_longer_spec()`, `pivot_wider_spec()`, `build_longer_spec()`, and `build_wider_spec()` all gain an `error_call` argument, resulting in better error reporting in `pivot_longer()` and `pivot_wider()` (#1408).",1,32,FALSE,NA
tidyr,c899ee9438e479cb2d2548f91c249553,"`fill()` now works correctly when there is a column named `.direction` in `data` (#1319, @​tjmahr).",1,33,FALSE,NA
tidyr,6307dd7979a4c8bbe874556a24aad910,"`replace_na()` is faster when there aren't any missing values to replace (#1392, @​mgirlich).",1,34,FALSE,NA
tidyr,e2c3c0bc75ef1a2ec3a153ca0c745f21,The documentation of the `replace` argument of `replace_na()` now mentions that `replace` is always cast to the type of `data` (#1317).,1,35,FALSE,NA
tidyr,46660114b103bd519d263c47638a75a9,Hot patch release to resolve R CMD check failures.,1,36,FALSE,NA
tidyr,798694a554fdb20a3af826df055821e9,"`complete()` and `expand()` no longer allow you to complete or expand on a grouping column. This was never well-defined since completion/expansion on a grouped data frame happens ""within"" each group and otherwise has the potential to produce erroneous results (#1299).",1,37,FALSE,NA
tidyr,caa7cf48c19665fd5194d32e9bb4aa69,"`replace_na()` no longer allows the type of `data` to change when the replacement is applied. `replace` will now always be cast to the type of `data` before the replacement is made. For example, this means that using a replacement value of `1.5` on an integer column is no longer allowed. Similarly, replacing missing values in a list-column must now be done with `list(""foo"")` rather than just `""foo""`.",1,38,FALSE,NA
tidyr,f6b14eec386361ea836e53e80704d841,`pivot_wider()` gains new `names_expand` and `id_expand` arguments for turning implicit missing factor levels and variable combinations into explicit ones. This is similar to the `drop` argument from `spread()` (#770).,1,39,FALSE,NA
tidyr,ae4177788dc390b59159f4e22acbd59c,`pivot_wider()` gains a new `names_vary` argument for controlling the ordering when combining `names_from` values with `values_from` column names (#839).,1,40,FALSE,NA
tidyr,5f36ae5c35d95c2bce955f7aa1fedb1c,"`pivot_wider()` gains a new `unused_fn` argument for controlling how to summarize unused columns that aren't involved in the pivoting process (#990, thanks to @​mgirlich for an initial implementation).",1,41,FALSE,NA
tidyr,4c4b5d69a39dbb54f08c351b930b80f2,"`pivot_longer()`'s `names_transform` and `values_transform` arguments now accept a single function which will be applied to all of the columns (#1284, thanks to @​smingerson for an initial implementation).",1,42,FALSE,NA
tidyr,4ffe6ea5cd153013798327a635f8d326,`pivot_longer()`'s `names_ptypes` and `values_ptypes` arguments now accept a single empty ptype which will be applied to all of the columns (#1284).,1,43,FALSE,NA
tidyr,c4bb840f77dd3deb47e4663db0af6b35,`unnest()` and `unchop()`'s `ptype` argument now accepts a single empty ptype which will be applied to all `cols` (#1284).,1,44,FALSE,NA
tidyr,118e0b78eca7026f2c8eb6385dd0040d,`unpack()` now silently skips over any non-data frame columns specified by `cols`. This matches the existing behavior of `unchop()` and `unnest()` (#1153).,1,45,FALSE,NA
tidyr,2a320f0527cbb75b45d9f7280df49710,`unnest_wider()` and `unnest_longer()` can now unnest multiple columns at once (#740).,1,46,FALSE,NA
tidyr,bc2b76e72d23daab6ec81ca2245d06df,"`unnest_longer()`'s `indices_to` and `values_to` arguments now accept a glue specification, which is useful when unnesting multiple columns.",1,47,FALSE,NA
tidyr,c925d493d8f6e162b715231cf17c1a26,"For `hoist()`, `unnest_longer()`, and `unnest_wider()`, if a `ptype` is supplied, but that column can't be simplified, the result will be a list-of column where each element has type `ptype` (#998).",1,48,FALSE,NA
tidyr,0211633b3111afd8362d0d23c40c7bb5,"`unnest_wider()` gains a new `strict` argument which controls whether or not strict vctrs typing rules should be applied. It defaults to `FALSE` for backwards compatibility, and because it is often more useful to be lax when unnesting JSON, which doesn't always map one-to-one with R's types (#1125).",1,49,FALSE,NA
tidyr,d773444471761af3c1d2ea20bab7e9de,"`hoist()`, `unnest_longer()`, and `unnest_wider()`'s `simplify` argument now accepts a named list of `TRUE` or `FALSE` to control simplification on a per column basis (#995).",1,50,FALSE,NA
tidyr,f6b7c67a1e8bca487f04e775986b688b,"`hoist()`, `unnest_longer()`, and `unnest_wider()`'s `transform` argument now accepts a single function which will be applied to all components (#1284).",1,51,FALSE,NA
tidyr,2ea388b9ba52cd644baf8ce9d785f541,"`hoist()`, `unnest_longer()`, and `unnest_wider()`'s `ptype` argument now accepts a single empty ptype which will be applied to all components (#1284).",1,52,FALSE,NA
tidyr,ccfcba898cb6b8f7479bfc7256907ab6,`complete()` gains a new `explicit` argument for limiting `fill` to only implicit missing values. This is useful if you don't want to fill in pre-existing missing values (#1270).,1,53,FALSE,NA
tidyr,1aaa0e8d3db2cc2b5b45e33ecf89d7ae,"`complete()` gains a grouped data frame method. This generates a more correct completed data frame when groups are involved (#396, #966).",1,54,FALSE,NA
tidyr,38c82442e091c0e1ac56433511e4977c,"`drop_na()`, `replace_na()`, and `fill()` have been updated to utilize vctrs. This means that you can use these functions on a wider variety of column types, including lubridate's Period types (#1094), data frame columns, and the rcrd type from vctrs.",1,55,FALSE,NA
tidyr,47ac3bcd2a8998d66dfed1ea8b690839,`replace_na()` no longer replaces empty atomic elements in list-columns (like `integer(0)`). The only value that is replaced in a list-column is `NULL` (#1168).,1,56,FALSE,NA
tidyr,6ceec985add48576750070a20164473e,`drop_na()` no longer drops empty atomic elements from list-columns (like `integer(0)`). The only value that is dropped in a list-column is `NULL` (#1228).,1,57,FALSE,NA
tidyr,3339e944d1c860adadbba793806bafe9,@​mgirlich is now a tidyr author in recognition of his significant and sustained contributions.,1,58,FALSE,NA
tidyr,eb432ac42668c4f554760761a207012b,All lazyeval variants of tidyr verbs have been soft-deprecated. Expect them to move to the defunct stage in the next minor release of tidyr (#1294).,1,59,FALSE,NA
tidyr,72598fc52d53162a4deb67b56924edee,`any_of()` and `all_of()` from tidyselect are now re-exported (#1217).,1,60,FALSE,NA
tidyr,ce64b477f31d338f910a54d350073895,dplyr \>= 1.0.0 is now required.,1,61,FALSE,NA
tidyr,600a101981ec596460058bd556ec5ca8,`pivot_wider()` now gives better advice about how to identify duplicates when values are not uniquely identified (#1113).,1,62,FALSE,NA
tidyr,b47b2b8d8a949fe213c7373c572cab95,`pivot_wider()` now throws a more informative error when `values_fn` doesn't result in a single summary value (#1238).,1,63,FALSE,NA
tidyr,247f3f82f72756b62e8884be356310f2,`pivot_wider()` and `pivot_longer()` now generate more informative errors related to name repair (#987).,1,64,FALSE,NA
tidyr,28197b5539834c03c6ba5ef225de2e8f,`pivot_wider()` now works correctly when `values_fill` is a data frame.,1,65,FALSE,NA
tidyr,8969e4d293ebc0c22adb30701c0c5cb6,`pivot_wider()` no longer accidentally retains `values_from` when pivoting a zero row data frame (#1249).,1,66,FALSE,NA
tidyr,d407e3dbeef32d98f9476be4195b59ec,`pivot_wider()` now correctly handles the case where an id column name collides with a value from `names_from` (#1107).,1,67,FALSE,NA
tidyr,1e740cc370117af5c80ba42e9d1e043e,"`pivot_wider()` and `pivot_longer()` now both check that the spec columns `.name` and `.value` are character vectors. Additionally, the `.name` column must be unique (#1107).",1,68,FALSE,NA
tidyr,a5c89364717239df2b713a16368a9b2e,"`pivot_wider()`'s `names_from` and `values_from` arguments are now required if their default values of `name` and `value` don't correspond to columns in `data`. Additionally, they must identify at least 1 column in `data` (#1240).",1,69,FALSE,NA
tidyr,b1221c72dfecf595ff56bc4ecc7a611d,`pivot_wider()`'s `values_fn` argument now correctly allows anonymous functions (#1114).,1,70,FALSE,NA
tidyr,707878fd23edc4e60a55714427b10d2b,"`pivot_wider_spec()` now works correctly with a 0-row data frame and a `spec` that doesn't identify any rows (#1250, #1252).",1,71,FALSE,NA
tidyr,f5b31286d42a2e24e1524ae71025cc70,`pivot_longer()`'s `names_ptypes` argument is now applied after `names_transform` for consistency with the rectangling functions (i.e. `hoist()`) (#1233).,1,72,FALSE,NA
tidyr,e5a2a506500738f74792e89f03dfe749,`check_pivot_spec()` is a new developer facing function for validating a pivot `spec` argument. This is only useful if you are extending `pivot_longer()` or `pivot_wider()` with new S3 methods (#1087).,1,73,FALSE,NA
tidyr,17fafc5d2b5398ab38c22e46929a5f8a,"The `nest()` generic now avoids computing on `.data`, making it more compatible with lazy tibbles (#1134).",1,74,FALSE,NA
tidyr,89ec110da00ed45dcd807259f9cdec09,The `.names_sep` argument of the data.frame method for `nest()` is now actually used (#1174).,1,75,FALSE,NA
tidyr,4a8664e2ff1a5d1059e7e2923197aa3e,`unnest()`'s `ptype` argument now works as expected (#1158).,1,76,FALSE,NA
tidyr,9f1c62046ad00a0113ca1edc8c5ab2e0,`unpack()` no longer drops empty columns specified through `cols` (#1191).,1,77,FALSE,NA
tidyr,d3b357490e5f271e5291ae61fbfd105c,`unpack()` now works correctly with data frame columns containing 1 row but 0 columns (#1189).,1,78,FALSE,NA
tidyr,0d992c09b7df8d049b9f546d2bf75255,`chop()` now works correctly with data frames with 0 rows (#1206).,1,79,FALSE,NA
tidyr,303306352c726226e12ecf3d8f9d2f36,`chop()`'s `cols` argument is no longer optional. This matches the behavior of `cols` seen elsewhere in tidyr (#1205).,1,80,FALSE,NA
tidyr,6fe3707494bbfa38da5c59b024a1bb21,`unchop()` now respects `ptype` when unnesting a non-list column (#1211).,1,81,FALSE,NA
tidyr,7d7245ff86d860a8a08fce3cd0a4c9ba,`hoist()` no longer accidentally removes elements that have duplicated names (#1259).,1,82,FALSE,NA
tidyr,0ffea61672eaac8f967093eb84f35039,"The grouped data frame methods for `complete()` and `expand()` now move the group columns to the front of the result (in addition to the columns you completed on or expanded, which were already moved to the front). This should make more intuitive sense, as you are completing or expanding ""within"" each group, so the group columns should be the first thing you see (#1289).",1,83,FALSE,NA
tidyr,1def2420317e304b031447ef74ad1b54,`complete()` now applies `fill` even when no columns to complete are specified (#1272).,1,84,FALSE,NA
tidyr,2a8ab2bfa276e405058c55fe40f33d3b,"`expand()`, `crossing()`, and `nesting()` now correctly retain `NA` values of factors (#1275).",1,85,FALSE,NA
tidyr,bc5faaca979a3040e415f635b11e4d10,"`expand_grid()`, `expand()`, `nesting()`, and `crossing()` now silently apply name repair to automatically named inputs. This avoids a number of issues resulting from duplicate truncated names (#1116, #1221, #1092, #1037, #992).",1,86,FALSE,NA
tidyr,aacbd047d2bdba775b824eae59a27db2,"`expand_grid()`, `expand()`, `nesting()`, and `crossing()` now allow columns from unnamed data frames to be used in expressions after that data frame was specified, like `expand_grid(tibble(x = 1), y = x)`. This is more consistent with how `tibble()` behaves.",1,87,FALSE,NA
tidyr,5efc857f557c6f25833b350027b3cc87,"`expand_grid()`, `expand()`, `nesting()`, and `crossing()` now work correctly with data frames containing 0 columns but \>0 rows (#1189).",1,88,FALSE,NA
tidyr,c2fd53322d9fdf30bbaa4b7ab57977a3,"`expand_grid()`, `expand()`, `nesting()`, and `crossing()` now return a 1 row data frame when no inputs are supplied, which is more consistent with `prod() == 1L` and the idea that computations involving the number of combinations computed from an empty set should return 1 (#1258).",1,89,FALSE,NA
tidyr,df6d6efa6b9bc72d53eb75b2bb4d66fd,`drop_na()` no longer drops missing values from all columns when a tidyselect expression that results in 0 columns being selected is used (#1227).,1,90,FALSE,NA
tidyr,18d2a75cc84d3d28ab0f0d434cb181ae,`fill()` now treats `NaN` like any other missing value (#982).,1,91,FALSE,NA
tidyr,480d1013abd027457f01b8b08ba38733,"`expand_grid()` is now about twice as fast and `pivot_wider()` is a bit faster (@​mgirlich, #1130).",1,92,FALSE,NA
tidyr,db76f9f2c137e919fe57f50bd753bfc6,"`unchop()` is now much faster, which propagates through to various functions, such as `unnest()`, `unnest_longer()`, `unnest_wider()`, and `separate_rows()` (@​mgirlich, @​DavisVaughan, #1127).",1,93,FALSE,NA
tidyr,656e2dd482df91c7525f73ffce8188a2,"`unnest()` is now much faster (@​mgirlich, @​DavisVaughan, #1127).",1,94,FALSE,NA
tidyr,e3de86308e8a272428f2db9a6cc3745e,"`unnest()` no longer allows unnesting a list-col containing a mix of vector and data frame elements. Previously, this only worked by accident, and is considered an off-label usage of `unnest()` that has now become an error.",1,95,FALSE,NA
tidyr,23549a2cf052e4a4aa9028e118da9014,"tidyr verbs no longer have ""default"" methods for lazyeval fallbacks. This means that you'll get clearer error messages (#1036).",1,96,FALSE,NA
tidyr,84e10947fa2ac713be4f47e0a60148c4,"`uncount()` error for non-integer weights and gives a clearer error message for negative weights (@​mgirlich, #1069).",1,97,FALSE,NA
tidyr,2ee4a1c9446b1685effdfb66bf621dfd,"You can once again unnest dates (#1021, #1089).",1,98,FALSE,NA
tidyr,00c7f8c2093e2a0fb9fec408db71dd11,"`pivot_wider()` works with data.table and empty key variables (@​mgirlich, #1066).",1,99,FALSE,NA
tidyr,1f62e494090b0831ac8af6a2f03b55f4,"`separate_rows()` works for factor columns (@​mgirlich, #1058).",1,100,FALSE,NA
tidyr,ac50c79fc8e925934e944eba25c3d0d8,"`separate_rows()` returns to 1.1.0 behaviour for empty strings (@​rjpatm, #1014).",1,101,FALSE,NA
tidyr,beb264a64eaa6b01f3802a4594bc786d,New tidyr logo!,1,102,FALSE,NA
tidyr,8bb0d755a98d8963f75afe3e9da5c5f1,"stringi dependency has been removed; this was a substantial dependency that make tidyr hard to compile in resource constrained environments (@​rjpat, #936).",1,103,FALSE,NA
tidyr,a4aa6df363f8ec9d5fc9512383744997,Replace Rcpp with cpp11. See https://cpp11.r-lib.org/articles/motivations.html for reasons why.,1,104,FALSE,NA
tidyr,7f36ca05157814626bd7fdd9f6cc16cd,"`pivot_longer()`, `hoist()`, `unnest_wider()`, and `unnest_longer()` gain new `transform` arguments; these allow you to transform values ""in flight"". They are partly needed because vctrs coercion rules have become stricter, but they give you greater flexibility than was available previously (#921).",1,105,FALSE,NA
tidyr,5d6c43b79d3ff3cf3fa69f15bfa663e7,Arguments that use tidy selection syntax are now clearly documented and have been updated to use tidyselect 1.1.0 (#872).,1,106,FALSE,NA
tidyr,30f3b75ea1acf9db462d3026f3328e74,"Both `pivot_wider()` and `pivot_longer()` are considerably more performant, thanks largely to improvements in the underlying vctrs code (#790, @​DavisVaughan).",1,107,FALSE,NA
tidyr,b9108c90c2d26dd2e265752f301db3e9,`pivot_longer()` now supports `names_to = character()` which prevents the name column from being created (#961).,1,108,FALSE,NA
tidyr,b9108c90c2d26dd2e265752f301db3e9,"```
df <- tibble(id = 1:3, x_1 = 1:3, x_2 = 4:6)  
df %>% pivot_longer(-id, names_to = character())
```",1,109,TRUE,NA
tidyr,7208a89c5da5950f0f90f7e55aa74338,`pivot_longer()` no longer creates a `.copy` variable in the presence of duplicate column names. This makes it more consistent with the handling of non-unique specs.,1,110,FALSE,NA
tidyr,3b812ebcf3e0292cda1d95d6e15aab91,"`pivot_longer()` automatically disambiguates non-unique ouputs, which can occur when the input variables include some additional component that you don't care about and want to discard (#792, #793).",1,111,FALSE,NA
tidyr,3b812ebcf3e0292cda1d95d6e15aab91,"```
df <- tibble(id = 1:3, x_1 = 1:3, x_2 = 4:6)  
df %>% pivot_longer(-id, names_pattern = ""(.)_."")
df %>% pivot_longer(-id, names_sep = ""_"", names_to = c(""name"", NA))
df %>% pivot_longer(-id, names_sep = ""_"", names_to = c("".value"", NA))
```",1,112,TRUE,NA
tidyr,a83719a3bdd85436e81ceffdfb88a8a5,"`pivot_wider()` gains a `names_sort` argument which allows you to sort column names in order. The default, `FALSE`, orders columns by their first appearance (#839). In a future version, I'll consider changing the default to `TRUE`.",1,113,FALSE,NA
tidyr,f1a6e339c8f2f6227ed6b06cc4bb19bd,`pivot_wider()` gains a `names_glue` argument that allows you to construct output column names with a glue specification.,1,114,FALSE,NA
tidyr,ad850742dd98360b833801ab6105a28a,"`pivot_wider()` arguments `values_fn` and `values_fill` can now be single values; you now only need to use a named list if you want to use different values for different value columns (#739, #746). They also get improved errors if they're not of the expected type.",1,115,FALSE,NA
tidyr,8e8425ade61a2ecb5ef3580f0139fa87,"`hoist()` now automatically names pluckers that are a single string (#837). It error if you use duplicated column names (@​mgirlich, #834), and now uses `rlang::list2()` behind the scenes (which means that you can now use `!!!` and `:=`) (#801).",1,116,FALSE,NA
tidyr,04be8acdf57bca900d149dcc1d5cef15,"`unnest_longer()`, `unnest_wider()`, and `hoist()` do a better job simplifying list-cols. They no longer add unneeded `unspecified()` when the result is still a list (#806), and work when the list contains non-vectors (#810, #848).",1,117,FALSE,NA
tidyr,51f7fa7e1c585f569281c1231ba84de2,"`unnest_wider(names_sep = """")` now provides default names for unnamed inputs, suppressing the many previous name repair messages (#742).",1,118,FALSE,NA
tidyr,f8527b86cb81a10886ef02e110a09ed2,"`pack()` and `nest()` gains a `.names_sep` argument allows you to strip outer names from inner names, in symmetrical way to how the same argument to `unpack()` and `unnest()` combines inner and outer names (#795, #797).",1,119,FALSE,NA
tidyr,87eb328c90b0cded3f7a7a3899ebe36c,"`unnest_wider()` and `unnest_longer()` can now unnest `list_of` columns. This is important for unnesting columns created from `nest()` and with `pivot_wider()`, which will create `list_of` columns if the id columns are non-unique (#741).",1,120,FALSE,NA
tidyr,7de6942fde4b5154e2ee94308cffca46,"`chop()` now creates list-columns of class `vctrs::list_of()`. This helps keep track of the type in case the chopped data frame is empty, allowing `unchop()` to reconstitute a data frame with the correct number and types of column even when there are no observations.",1,121,FALSE,NA
tidyr,68885ae678ea49adea96aa8a3c5bc00a,`drop_na()` now preserves attributes of unclassed vectors (#905).,1,122,FALSE,NA
tidyr,bac8638e94a81fe072cd7e48e7dbdb6c,"`expand()`, `expand_grid()`, `crossing()`, and `nesting()` once again evaluate their inputs iteratively, so you can refer to freshly created columns, e.g. `crossing(x = seq(-2, 2), y = x)` (#820).",1,123,FALSE,NA
tidyr,50916e1d39f6fc703aaf56ce467efe56,"`expand()`, `expand_grid()`, `crossing()`, and `nesting()` gain a `.name_repair` giving you control over their name repair strategy (@​jeffreypullin, #798).",1,124,FALSE,NA
tidyr,62defef5874c4106ba36f557a20c301b,"`extract()` lets you use `NA` in `into`, as documented (#793).",1,125,FALSE,NA
tidyr,a05bd87747eecadc5afb3193355ffe7a,"`extract()`, `separate()`, `hoist()`, `unnest_longer()`, and `unnest_wider()` give a better error message if `col` is missing (#805).",1,126,FALSE,NA
tidyr,279896e220ac27f51e00885ac66aa1b6,`pack()`'s first argument is now `.data` instead of `data` (#759).,1,127,FALSE,NA
tidyr,a9370a0a765a8c99e59c46a0b91a7e9b,`pivot_longer()` now errors if `values_to` is not a length-1 character vector (#949).,1,128,FALSE,NA
tidyr,3e136c4a8f26562d8599ae9403224162,`pivot_longer()` and `pivot_wider()` are now generic so implementations can be provided for objects other than data frames (#800).,1,129,FALSE,NA
tidyr,f0348144013f5a152c945008c35b7a64,`pivot_wider()` can now pivot data frame columns (#926),1,130,FALSE,NA
tidyr,eda463703fd1ae18603a03c9577a28a1,"`unite(na.rm = TRUE)` now works for all types of variable, not just character vectors (#765).",1,131,FALSE,NA
tidyr,5b719d396e9c10357a8b1bac3ef25faa,`unnest_wider()` gives a better error message if you attempt to unnest multiple columns (#740).,1,132,FALSE,NA
tidyr,9d9393574e3bd4d26c760101010fcb9f,`unnest_auto()` works when the input data contains a column called `col` (#959).,1,133,FALSE,NA
tidyr,85f1b84c5c5b4f4b129abe9f8525a978,"Minor fixes for dev versions of rlang, tidyselect, and tibble.",1,134,FALSE,NA
tidyr,5673b35af58645a49a4d91b13cfa2212,Did not exist since I accidentally released v1.0.2,1,135,FALSE,NA
tidyr,c4d36b9eab31aa2af8e640d59d3210cf,"`nest()` and `unnest()` have new syntax. The majority of existing usage should be automatically translated to the new syntax with a warning. If that doesn't work, put this in your script to use the old versions until you can take a closer look and update your code:",1,136,FALSE,NA
tidyr,c4d36b9eab31aa2af8e640d59d3210cf,"```
library(tidyr)
nest <- nest_legacy
unnest <- unnest_legacy
```",1,137,TRUE,NA
tidyr,93c511ab0ce38d58f01a2ef9805433bc,"`nest()` now preserves grouping, which has implications for downstream calls to group-aware functions, such as `dplyr::mutate()` and `filter()`.",1,138,FALSE,NA
tidyr,639fae1be6f6e1d408aec98367f7bc16,The first argument of `nest()` has changed from `data` to `.data`.,1,139,FALSE,NA
tidyr,7b7ac872bb753ff04495fe20bfc1c94c,`unnest()` uses the emerging tidyverse standard to disambiguate unique names. Use `names_repair = tidyr_legacy` to request the previous approach.,1,140,FALSE,NA
tidyr,0a52f2b019ad1ceae3a3f23072f542b9,"`unnest_()`/`nest_()` and the lazyeval methods for `unnest()`/`nest()` are now defunct. They have been deprecated for some time, and, since the interface has changed, package authors will need to update to avoid deprecation warnings. I think one clean break should be less work for everyone. All other lazyeval functions have been formally deprecated, and will be made defunct in the next major release. (See lifecycle vignette for details on deprecation stages).",1,141,FALSE,NA
tidyr,6f186a3e5ca61c2362d17ddbc45b4a99,"`crossing()` and `nesting()` now return 0-row outputs if any input is a length-0 vector. If you want to preserve the previous behaviour which silently dropped these inputs, you should convert empty vectors to `NULL`. (More discussion on this general pattern at https://github.com/tidyverse/principles/issues/24)",1,142,FALSE,NA
tidyr,ab8791f6d512746231d6a07efd19ab20,"New `keep_empty` parameter ensures that every row in the input gets at least one row in the output, inserting missing values as needed (#358).",1,144,FALSE,NA
tidyr,e891eacf69554a80f52603f96ff1db43,Provides `names_sep` argument to control how inner and outer column names are combined.,1,145,FALSE,NA
tidyr,6ff3c5c47a62647848cfe93a5ebca533,"Uses standard tidyverse name-repair rules, so by default you will get an error if the output would contain multiple columns with the same name. You can override by using `name_repair` (#514).",1,146,FALSE,NA
tidyr,b6690e03f1cf41e2f5e2dc2486681009,Now supports `NULL` entries (#436).,1,147,FALSE,NA
tidyr,15f378fd9bcce2920322392c39d82bcb,`pack()` and `unpack()` allow you to pack and unpack columns into data frame columns (#523).,1,148,FALSE,NA
tidyr,e4d3abc56ddc0a19c96a1d0c7bed7feb,`chop()` and `unchop()` chop up rows into sets of list-columns.,1,149,FALSE,NA
tidyr,f70fa878e23e45910ff1cda08552c686,"New `expand_grid()`, a tidy version of `expand.grid()`, is lower-level than the existing `expand()` and `crossing()` functions, as it takes individual vectors, and does not sort or uniquify them.",1,150,FALSE,NA
tidyr,63e0157e59ef086ac49b0d509ab36bf4,"`crossing()`, `nesting()`, and `expand()` have been rewritten to use the vctrs package. This should not affect much existing code, but considerably simplies the implementation and ensures that these functions work consistently across all generalised vectors (#557). As part of this alignment, these functions now only drop `NULL` inputs, not any 0-length vector.",1,151,FALSE,NA
tidyr,86e0366201e05167beac72a488f7f722,"`full_seq()` now also works when gaps between observations are shorter than the given `period`, but are within the tolerance given by `tol`. Previously, gaps between consecutive observations had to be in the range \[`period`, `period + tol`\]; gaps can now be in the range \[`period - tol`, `period + tol`\] (@​ha0ye, #657).",1,152,FALSE,NA
tidyr,b6fd677ea8521bc9a93a7f2d4a94030b,"tidyr now re-exports `tibble()`, `as_tibble()`, and `tribble()`, as well as the tidyselect helpers (`starts_with()`, `ends_width()`, ...). This makes generating documentation, reprexes, and tests easier, and makes tidyr easier to use without also attaching dplyr.",1,153,FALSE,NA
tidyr,8ff095f4097b144b1fbf90733a967739,All functions that take `...` have been instrumented with functions from the ellipsis package to warn if you've supplied arguments that are ignored (typically because you've misspelled an argument name) (#573).,1,154,FALSE,NA
tidyr,909e3f3b1452dd0c7009f57f1c3731ae,"`complete()` now uses `full_join()` so that all levels are preserved even when not all levels are specified (@​Ryo-N7, #493).",1,155,FALSE,NA
tidyr,6c7212bee300e2149d81f4e1dfd1f85a,"`crossing()` now takes the unique values of data frame inputs, not just vector inputs (#490).",1,156,FALSE,NA
tidyr,4ed6b4948b57fad103ec1b09048a7d67,`gather()` throws an error if a column is a data frame (#553).,1,157,FALSE,NA
tidyr,be0929063a254fb093816c1d1251e63a,`extract()` (and hence `pivot_longer()`) can extract multiple input values into a single output column (#619).,1,158,FALSE,NA
tidyr,49203c758256e04d9bd7b909838e5684,`fill()` is now implemented using `dplyr::mutate_at()`. This radically simplifies the implementation and considerably improves performance when working with grouped data (#520).,1,159,FALSE,NA
tidyr,94a61762913224cf0dc164b9041df27d,"`fill()` now accepts `downup` and `updown` as fill directions (@​coolbutuseless, #505).",1,160,FALSE,NA
tidyr,c7a407dbf6220a9e242c9b4cc313460a,"`unite()` gains `na.rm` argument, making it easier to remove missing values prior to uniting values together (#203)",1,161,FALSE,NA
tidyr,237182ca532de1813c07e16456ca98c1,"`crossing()` preserves factor levels (#410), now works with list-columns (#446, @​SamanthaToet). (These also help `expand()` which is built on top of `crossing()`)",1,162,FALSE,NA
tidyr,20b0bd10221d5fe4a105c9c928d85977,`nest()` is compatible with dplyr 0.8.0.,1,163,FALSE,NA
tidyr,55e3975886da19f7b0a95fed2c31e3e4,`spread()` works when the id variable has names (#525).,1,164,FALSE,NA
tidyr,354bc995b74829a0c4a37f552073a09b,"`unnest()` preserves column being unnested when input is zero-length (#483), using `list_of()` attribute to correctly restore columns, where possible.",1,165,FALSE,NA
tidyr,b8dd5d127bbad62e97701211bc7f1f50,"`unnest()` will run with named and unnamed list-columns of same length (@​hlendway, #460).",1,166,FALSE,NA
tidyr,3990b6b4006c6219d5149a7229f6a085,"`separate()` now accepts `NA` as a column name in the `into` argument to denote columns which are omitted from the result. (@​markdly, #397).",1,167,FALSE,NA
tidyr,295202d308e0048a89a5e869ad6b05b1,Minor updates to ensure compatibility with dependencies.,1,168,FALSE,NA
tidyr,1077629e7ac4ba414b483e2913dea483,"`unnest()` weakens test of ""atomicity"" to restore previous behaviour when unnesting factors and dates (#407).",1,169,FALSE,NA
tidyr,19cf46f38f1f56a01d9d4a1067df4fb3,"There are no deliberate breaking changes in this release. However, a number of packages are failing with errors related to numbers of elements in columns, and row names. It is possible that these are accidental API changes or new bugs. If you see such an error in your package, I would sincerely appreciate a minimal reprex.",1,170,FALSE,NA
tidyr,b108eec837ce8e8ee01835f36e251c78,"`separate()` now correctly uses -1 to refer to the far right position, instead of -2. If you depended on this behaviour, you'll need to switch on `packageVersion(""tidyr"") > ""0.7.2""`",1,171,FALSE,NA
tidyr,89b04d8f4996f7eff7f73c20f9726fe7,Increased test coverage from 84% to 99%.,1,172,FALSE,NA
tidyr,ea7e13319a22453522ab6d62427abc32,`uncount()` performs the inverse operation of `dplyr::count()` (#279),1,173,FALSE,NA
tidyr,633315d89f18ccecea6c96955d4fec75,`complete(data)` now returns `data` rather than throwing an error (#390). `complete()` with zero-length completions returns original input (#331).,1,174,FALSE,NA
tidyr,466e200910b7f7bab102278d2316d6f8,`crossing()` preserves `NA`s (#364).,1,175,FALSE,NA
tidyr,eb00e939596b7f97290fc9046fe2085c,`expand()` with empty input gives empty data frame instead of `NULL` (#331).,1,176,FALSE,NA
tidyr,52bb21ac5cd965dff471c1aebe313cfc,"`expand()`, `crossing()`, and `complete()` now complete empty factors instead of dropping them (#270, #285)",1,177,FALSE,NA
tidyr,d4b70aabe25fc68b44ea3e5f6065cc2c,`extract()` has a better error message if `regex` does not contain the expected number of groups (#313).,1,178,FALSE,NA
tidyr,5c03f3493c3bd97fae67a746dd954189,"`drop_na()` no longer drops columns (@​jennybryan, #245), and works with list-cols (#280). Equivalent of `NA` in a list column is any empty (length 0) data structure.",1,179,FALSE,NA
tidyr,0c6efe5bfb4ef16f818811c104a0eabf,"`nest()` is now faster, especially when a long data frame is collapsed into a nested data frame with few rows.",1,180,FALSE,NA
tidyr,4bca9ae175dd52ffee18072353931ae6,`nest()` on a zero-row data frame works as expected (#320).,1,181,FALSE,NA
tidyr,0bb10989be937a6dd860fd2d27fe5838,`replace_na()` no longer complains if you try and replace missing values in variables not present in the data (#356).,1,182,FALSE,NA
tidyr,a9a5c5697e74247610be5ed925c17954,"`replace_na()` now also works with vectors (#342, @​flying-sheep), and can replace `NULL` in list-columns. It throws a better error message if you attempt to replace with something other than length 1.",1,183,FALSE,NA
tidyr,2d17dfa783407223c393f4bc854bd122,"`separate()` no longer checks that `...` is empty, allowing methods to make use of it. This check was added in tidyr 0.4.0 (2016-02-02) to deprecate previous behaviour where `...` was passed to `strsplit()`.",1,184,FALSE,NA
tidyr,cb754578c386174d5267e118d4bee119,`separate()` and `extract()` now insert columns in correct position when `drop = TRUE` (#394).,1,185,FALSE,NA
tidyr,95226bde854eaacf44ffa2c107c9d656,"`separate()` now works correctly counts from RHS when using negative integer `sep` values (@​markdly, #315).",1,186,FALSE,NA
tidyr,408557555a33344bd02a42ace61cf92c,`separate()` gets improved warning message when pieces aren't as expected (#375).,1,187,FALSE,NA
tidyr,1dcd08a99aecb8114c84730e0d229536,"`separate_rows()` supports list columns (#321), and works with empty tibbles.",1,188,FALSE,NA
tidyr,ab87a814938cbdb86f9a6bf48512bee9,`spread()` now consistently returns 0 row outputs for 0 row inputs (#269).,1,189,FALSE,NA
tidyr,86aaf75ac0d71dfa1cfe54112529ba59,`spread()` now works when `key` column includes `NA` and `drop` is `FALSE` (#254).,1,190,FALSE,NA
tidyr,3216b462165945afb0d21a7c7c0ca661,`spread()` no longer returns tibbles with row names (#322).,1,191,FALSE,NA
tidyr,ce4c9fdf3ee82b07e408b6fa022e11f8,"`spread()`, `separate()`, `extract()` (#255), and `gather()` (#347) now replace existing variables rather than creating an invalid data frame with duplicated variable names (matching the semantics of mutate).",1,192,FALSE,NA
tidyr,ab59c2bcc568ef5d0cdf90630b4c0eb1,`unite()` now works (as documented) if you don't supply any variables (#355).,1,193,FALSE,NA
tidyr,6f113fd97356dfaa5106941fcbe1dd48,`unnest()` gains `preserve` argument which allows you to preserve list columns without unnesting them (#328).,1,194,FALSE,NA
tidyr,5132b76b8396e30d24b64ee289bb2569,`unnest()` can unnested list-columns contains lists of lists (#278).,1,195,FALSE,NA
tidyr,d88912fc4ce8b944ce4d1173ac821ceb,`unnest(df)` now works if `df` contains no list-cols (#344),1,196,FALSE,NA
tidyr,77b47f4858495877a3b80ac08024f8ac,"The SE variants `gather_()`, `spread_()` and `nest_()` now treat non-syntactic names in the same way as pre tidy eval versions of tidyr (#361).",1,197,FALSE,NA
tidyr,5c936fc467495e9bf37edc7c24fa1e5a,Fix tidyr bug revealed by R-devel.,1,198,FALSE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"If you see error messages about objects or functions not found, it is likely because the selecting functions are now stricter in their arguments An example of selecting function is `gather()` and its `...` argument. This change makes the code more robust by disallowing ambiguous scoping. Consider the following code:",1,199,FALSE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"```
x <- 3
df <- tibble(w = 1, x = 2, y = 3)
gather(df, ""variable"", ""value"", 1:x)
```",1,200,TRUE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"Does it select the first three columns (using the `x` defined in the global environment), or does it select the first two columns (using the column named `x`)? To solve this ambiguity, we now make a strict distinction between data and context expressions. A data expression is either a bare name or an expression like `x:y` or `c(x, y)`. In a data expression, you can only refer to columns from the data frame. Everything else is a context expression in which you can only refer to objects that you have defined with `<-`. In practice this means that you can no longer refer to contextual objects like this:",1,200,FALSE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"```
mtcars %>% gather(var, value, 1:ncol(mtcars))

x <- 3
mtcars %>% gather(var, value, 1:x)
mtcars %>% gather(var, value, -(1:x))
```",1,201,TRUE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"You now have to be explicit about where to find objects. To do so, you can use the quasiquotation operator `!!` which will evaluate its argument early and inline the result:",1,201,FALSE,NA
tidyr,8b748e05f5a130191835800e2923cddd,"```
mtcars %>% gather(var, value, !! 1:ncol(mtcars))
mtcars %>% gather(var, value, !! 1:x)
mtcars %>% gather(var, value, !! -(1:x))
```",1,202,TRUE,NA
tidyr,8b748e05f5a130191835800e2923cddd,An alternative is to turn your data expression into a context expression by using `seq()` or `seq_len()` instead of `:`. See the section on tidyselect for more information about these semantics.,1,202,FALSE,NA
tidyr,28c0ea39dfce5942d5194a02f3f97a9d,"Following the switch to tidy evaluation, you might see warnings about the ""variable context not set"". This is most likely caused by supplying helpers like `everything()` to underscored versions of tidyr verbs. Helpers should be always be evaluated lazily. To fix this, just quote the helper with a formula: `drop_na(df, ~everything())`.",1,203,FALSE,NA
tidyr,2e8b0ae1f79aac7a155cbbd92cb71f05,The selecting functions are now stricter when you supply integer positions. If you see an error along the lines of,1,204,FALSE,NA
tidyr,2e8b0ae1f79aac7a155cbbd92cb71f05,"```
`-0.949999999999999`, `-0.940000000000001`, ... must resolve to
integer column positions, not a double vector
```",1,205,TRUE,NA
tidyr,2e8b0ae1f79aac7a155cbbd92cb71f05,please round the positions before supplying them to tidyr. Double vectors are fine as long as they are rounded.,1,205,FALSE,NA
tidyr,262ff88def9ff2a5eb6b85bc6824f45e,"The arguments for selecting a single variable now support all features from `dplyr::pull()`. You can supply a name or a position, including negative positions.",1,206,FALSE,NA
tidyr,4e147d9ca290cc949bad1f7e2a7befb6,"Multiple variables are now selected a bit differently. We now make a strict distinction between data and context expressions. A data expression is either a bare name of an expression like `x:y` or `c(x, y)`. In a data expression, you can only refer to columns from the data frame. Everything else is a context expression in which you can only refer to objects that you have defined with `<-`. You can still refer to contextual objects in a data expression by being explicit. One way of being explicit is to unquote a variable from the environment with the tidy eval operator `!!`:",1,207,FALSE,NA
tidyr,4e147d9ca290cc949bad1f7e2a7befb6,"```
x <- 2
drop_na(df, 2)     # Works fine
drop_na(df, x)     # Object 'x' not found
drop_na(df, !! x)  # Works as if you had supplied 2
```",1,208,TRUE,NA
tidyr,4e147d9ca290cc949bad1f7e2a7befb6,"On the other hand, select helpers like `start_with()` are context expressions. It is therefore easy to refer to objects and they will never be ambiguous with data columns:",1,208,FALSE,NA
tidyr,4e147d9ca290cc949bad1f7e2a7befb6,"```
x <- ""d""
drop_na(df, starts_with(x))
```",1,209,TRUE,NA
tidyr,4e147d9ca290cc949bad1f7e2a7befb6,While these special rules is in contrast to most dplyr and tidyr verbs (where both the data and the context are in scope) they make sense for selecting functions and should provide more robust and helpful semantics.,1,209,FALSE,NA
tidyr,3c317b61431edd3de5eef6789396899f,Patch tests to be compatible with dev tibble,1,210,FALSE,NA
tidyr,8635274e320278eb8c02aea35d7b6c50,Register C functions,1,211,FALSE,NA
tidyr,44df17f57ef2f64d5173d2b3da8359e1,Added package docs,1,212,FALSE,NA
tidyr,f125db0c8b00ab2de004cee3b78f9d1b,Patch tests to be compatible with dev dplyr.,1,213,FALSE,NA
tidyr,8ef1dd87db5da492d167999c100010b3,Patch test to be compatible with dev tibble,1,214,FALSE,NA
tidyr,d5151f712607144193c47acb98235166,Changed deprecation message of `extract_numeric()` to point to `readr::parse_number()` rather than `readr::parse_numeric()`,1,215,FALSE,NA
tidyr,266cfb48a9cc2be8d5281934b193b337,"`drop_na()` removes observations which have `NA` in the given variables. If no variables are given, all variables are considered (#194, @​janschulz).",1,216,FALSE,NA
tidyr,256377444412ca5c36619a7ecd924fa5,`extract_numeric()` has been deprecated (#213).,1,217,FALSE,NA
tidyr,315bc12efae7826d95b0e9084e9f07fb,Renamed `table4` and `table5` to `table4a` and `table4b` to make their connection more clear. The `key` and `value` variables in `table2` have been renamed to `type` and `count`.,1,218,FALSE,NA
tidyr,f4e613b38b6c53496e209001f7c4111c,"`expand()`, `crossing()`, and `nesting()` now silently drop zero-length inputs.",1,219,FALSE,NA
tidyr,c1a59f73fcaba41ec1bd4264a268413f,`crossing_()` and `nesting_()` are versions of `crossing()` and `nesting()` that take a list as input.,1,220,FALSE,NA
tidyr,0e09aa321a9f3b554687883e0560400f,`full_seq()` works correctly for dates and date/times.,1,221,FALSE,NA
tidyr,c13e03983d3f17833581a6d9c7cf3041,"Restored compatibility with R \< 3.3.0 by avoiding `getS3method(envir = )` (#205, @​krlmlr).",1,222,FALSE,NA
tidyr,d5600323dd9ef559808032e6aef18386,"`separate_rows()` separates observations with multiple delimited values into separate rows (#69, @​aaronwolen).",1,223,FALSE,NA
tidyr,bdbbbf529670b6dde5e21d1741c3dbb3,`complete()` preserves grouping created by dplyr (#168).,1,224,FALSE,NA
tidyr,f2f01a31c725f1780a251c95c7c4b594,`expand()` (and hence `complete()`) preserves the ordered attribute of factors (#165).,1,225,FALSE,NA
tidyr,ef0ac9d9ffcc6d75b9ccec73f3fd1cd9,"`full_seq()` preserve attributes for dates and date/times (#156), and sequences no longer need to start at 0.",1,226,FALSE,NA
tidyr,7cde95a6705eae61ac5c9eadf943c6d8,"`gather()` can now gather together list columns (#175), and `gather_.data.frame(na.rm = TRUE)` now only removes missing values if they're actually present (#173).",1,227,FALSE,NA
tidyr,d5555dbb1a7d1627f95354bb83cae4f7,`nest()` returns correct output if every variable is nested (#186).,1,228,FALSE,NA
tidyr,ee269d661031c1f44ba70e60a655ed35,"`separate()` fills from right-to-left (not left-to-right!) when fill = ""left"" (#170, @​dgrtwo).",1,229,FALSE,NA
tidyr,6d33823ae1c4a1dddf6f14e886f26f38,"`separate()` and `unite()` now automatically drop removed variables from grouping (#159, #177).",1,230,FALSE,NA
tidyr,b6d30a129a95a848c41c5abb8899e9ce,"`spread()` gains a `sep` argument. If not-null, this will name columns as ""key`<sep>`{=html}value"". Additionally, if sep is `NULL` missing values will be converted to `<NA>` (#68).",1,231,FALSE,NA
tidyr,ea8223b4f5f6692c1e3217c029c9b1c8,`spread()` works in the presence of list-columns (#199),1,232,FALSE,NA
tidyr,1d4c4348cba2b848adb253449fa83f3e,`unnest()` works with non-syntactic names (#190).,1,233,FALSE,NA
tidyr,417020e9b46811ff92019662be959975,"`unnest()` gains a `sep` argument. If non-null, this will rename the columns of nested data frames to include both the original column name, and the nested column name, separated by `.sep` (#184).",1,234,FALSE,NA
tidyr,97538808099d07798a7383a0a8bf7dc9,`unnest()` gains `.id` argument that works the same way as `bind_rows()`. This is useful if you have a named list of data frames or vectors (#125).,1,235,FALSE,NA
tidyr,0f7c4f63cfb9fcc4516bdadaa3af0e9f,Moved in useful sample datasets from the DSR package.,1,236,FALSE,NA
tidyr,42d2d19dbdc6198797a9acd5073ee73e,Made compatible with both dplyr 0.4 and 0.5.,1,237,FALSE,NA
tidyr,1f3a7da38778edd3c2831db6db5c6cc4,tidyr functions that create new columns are more aggressive about re-encoding the column names as UTF-8.,1,238,FALSE,NA
tidyr,12aae27a229bbc8c430240f8b31ddb51,Fixed bug in `nest()` where nested data was ending up in the wrong row (#158).,1,239,FALSE,NA
tidyr,ec3cc002baa9ff4f33e14ab6046b52ad,"`nest()` now produces a single list of data frames called ""data"" rather than a list column for each variable. Nesting variables are not included in nested data frames. It also works with grouped data frames made by `dplyr::group_by()`. You can override the default column name with `.key`.",1,240,FALSE,NA
tidyr,85cdfbaea29445d7bf966b87c6ca8386,"`unnest()` gains a `.drop` argument which controls what happens to other list columns. By default, they're kept if the output doesn't require row duplication; otherwise they're dropped.",1,241,FALSE,NA
tidyr,068ea8cd749d44a2c4a5d7a2811c80f0,`unnest()` now has `mutate()` semantics for `...` - this allows you to unnest transformed columns more easily. (Previously it used select semantics).,1,242,FALSE,NA
tidyr,8cebd68cd2984f71401fc6b34e893dd8,"`expand()` once again allows you to evaluate arbitrary expressions like `full_seq(year)`. If you were previously using `c()` to created nested combinations, you'll now need to use `nesting()` (#85, #121).",1,243,FALSE,NA
tidyr,e1332bb86c6c1be9abb039157108ec9f,`nesting()` and `crossing()` allow you to create nested and crossed data frames from individual vectors. `crossing()` is similar to `base::expand.grid()`,1,244,FALSE,NA
tidyr,2282510698680b2073bf6795b4b9302f,"`full_seq(x, period)` creates the full sequence of values from `min(x)` to `max(x)` every `period` values.",1,245,FALSE,NA
tidyr,64e3d67d88d54415a7eb33e6de3e824c,`fill()` fills in `NULL`s in list-columns.,1,246,FALSE,NA
tidyr,3ca0004506510f37130fa4e789611678,`fill()` gains a direction argument so that it can fill either upwards or downwards (#114).,1,247,FALSE,NA
tidyr,26424d9b7630657a8ae99938d7dfe31b,"`gather()` now stores the key column as character, by default. To revert to the previous behaviour of using a factor (which allows you to preserve the ordering of the columns), use `key_factor = TRUE` (#96).",1,248,FALSE,NA
tidyr,e7601180a96eaa014ab61758fd8b822c,"All tidyr verbs do the right thing for grouped data frames created by `group_by()` (#122, #129, #81).",1,249,FALSE,NA
tidyr,f13d2fac94330216940ccf7a8778d847,`seq_range()` has been removed. It was never used or announced.,1,250,FALSE,NA
tidyr,027cd1d6dfc28c98a64e8c121df9092e,"`spread()` once again creates columns of mixed type when `convert = TRUE` (#118, @​jennybc). `spread()` with `drop = FALSE` handles zero-length factors (#56). `spread()`ing a data frame with only key and value columns creates a one row output (#41).",1,251,FALSE,NA
tidyr,4b674c675833f79ebb0fbe4f543c28b6,"`unite()` now removes old columns before adding new (#89, @​krlmlr).",1,252,FALSE,NA
tidyr,89eeb851e7bba9fe03af09c3b0c20fbf,"`separate()` now warns if defunct ... argument is used (#151, @​krlmlr).",1,253,FALSE,NA
tidyr,fa6a39ee1a309bc7f6ddf3ccfece7812,Fixed bug where attributes of non-gather columns were lost (#104),1,254,FALSE,NA
tidyr,f57ee6b1f60a327b7b9e9c5c5d75ae79,"New `complete()` provides a wrapper around `expand()`, `left_join()` and `replace_na()` for a common task: completing a data frame with missing combinations of variables.",1,255,FALSE,NA
tidyr,6bb999888c494a9c11f401d654605687,`fill()` fills in missing values in a column with the last non-missing value (#4).,1,256,FALSE,NA
tidyr,1aed17159a3c42b6345ea97edd662a12,New `replace_na()` makes it easy to replace missing values with something meaningful for your data.,1,257,FALSE,NA
tidyr,014c87ec940a396c0ccfe3b9e96c6e29,`nest()` is the complement of `unnest()` (#3).,1,258,FALSE,NA
tidyr,3da5523236f9361d903404b9ef12241a,"`unnest()` can now work with multiple list-columns at the same time. If you don't supply any columns names, it will unlist all list-columns (#44). `unnest()` can also handle columns that are lists of data frames (#58).",1,259,FALSE,NA
tidyr,f813a39637f71521815c8017fe3527f9,tidyr no longer depends on reshape2. This should fix issues if you also try to load reshape (#88).,1,260,FALSE,NA
tidyr,397f09238d6873d64c62b433937fae72,`%>%` is re-exported from magrittr.,1,261,FALSE,NA
tidyr,c6b2ef6e925c8ad2992f651b2147b51a,`expand()` now supports nesting and crossing (see examples for details). This comes at the expense of creating new variables inline (#46).,1,262,FALSE,NA
tidyr,3e212010ce3f12a3cfbe3901ca3b72c8,`expand_` does SE evaluation correctly so you can pass it a character vector of columns names (or list of formulas etc) (#70).,1,263,FALSE,NA
tidyr,56afcff8ed964f51357d16838ef2232b,`extract()` is 10x faster because it now uses stringi instead of base R regular expressions. It also returns NA instead of throwing an error if the regular expression doesn't match (#72).,1,264,FALSE,NA
tidyr,dcde96941c257ba58ae125610fb019ef,`extract()` and `separate()` preserve character vectors when `convert` is TRUE (#99).,1,265,FALSE,NA
tidyr,e95d671302bb3a84120a21b252603d6d,"The internals of `spread()` have been rewritten, and now preserve all attributes of the input `value` column. This means that you can now spread date (#62) and factor (#35) inputs.",1,266,FALSE,NA
tidyr,c23d631d82fafa9cd0f8c95dc3436fd1,`spread()` gives a more informative error message if `key` or `value` don't exist in the input data (#36).,1,267,FALSE,NA
tidyr,aa6b8c0475ca5c96bcaa50f0be7a435e,"`separate()` only displays the first 20 failures (#50). It has finer control over what happens if there are two few matches: you can fill with missing values on either the ""left"" or the ""right"" (#49). `separate()` no longer throws an error if the number of pieces aren't as expected - instead it uses drops extra values and fills on the right and gives a warning.",1,268,FALSE,NA
tidyr,6be443cef82a971d669020ceffc7f9cc,"If the input is NA `separate()` and `extract()` both return silently return NA outputs, rather than throwing an error. (#77)",1,269,FALSE,NA
tidyr,3c5ea4db3ae6c48e701cf8bcd057d5c0,Experimental `unnest()` method for lists has been removed.,1,270,FALSE,NA
tidyr,1f2003a865bc5896a9d2c75f101ac84a,Experimental `expand()` function (#21).,1,271,FALSE,NA
tidyr,5ee9a4b9a024f6a15b88d5755824ee22,"Experiment `unnest()` function for converting named lists into data frames. (#3, #22)",1,272,FALSE,NA
tidyr,c29551655a797a2f04a61e96509f5355,`extract_numeric()` preserves negative signs (#20).,1,273,FALSE,NA
tidyr,8fc5484e197c81191db6f10360f73d31,"`gather()` has better defaults if `key` and `value` are not supplied. If `...` is omitted, `gather()` selects all columns (#28). Performance is now comparable to `reshape2::melt()` (#18).",1,274,FALSE,NA
tidyr,899a337a91974cf6e8c451a2f44ee171,"`separate()` gains `extra` argument which lets you control what happens to extra pieces. The default is to throw an ""error"", but you can also ""merge"" or ""drop"".",1,275,FALSE,NA
tidyr,34550d34cf0527d7ce198d44a7501958,"`spread()` gains `drop` argument, which allows you to preserve missing factor levels (#25). It converts factor value variables to character vectors, instead of embedding a matrix inside the data frame (#35).",1,276,FALSE,NA
tidyverse,e04d75e63d0f426491c30f985abe1b31,lubridate is now a member of the core tidyverse (#157)!,1,1,FALSE,NA
tidyverse,512d40796c8c5840c4f9daf0efb7bb8d,tidyverse now installs ragg (#310).,1,2,FALSE,NA
tidyverse,d941403ba8f3e4f6b8259fc4f976371e,Loading the tidyverse now advertises `library(conflicted)` because it resolves many conflict problems and silences tidyverse's automated report (#218).,1,3,FALSE,NA
tidyverse,4768f265ecc775d532f0930735009d5d,`tidyverse_sitrep()` correctly displays installed package versions and highlights development versions of packages (#222).,1,4,FALSE,NA
tidyverse,bb950c2cfb29498c293e8c436808dc0b,Text version of the citation now lists all authors (#269).,1,5,FALSE,NA
tidyverse,b4ab789b5f35a6ce8b032aab257e65e4,All packages have been bumped to their latest versions.,1,6,FALSE,NA
tidyverse,bef7aef1e7e29750934e54610062f2c2,Messaging uses modern approach to avoid red text in RStudio (#296).,1,7,FALSE,NA
tidyverse,eb77fbb7950fec7a4d7240c0741d2a69,"tidyverse now installs dtplyr (#216), googledrive, and googlesheets4 (#229). All packages have been bumped to their latest versions.",1,8,FALSE,NA
tidyverse,b63a1efa2b6978cefe5b5836f15c1aaa,License changed to MIT (#235).,1,9,FALSE,NA
tidyverse,ac2ca4762acb17d6e45d59d57f67a120,"The tidyverse now has an associated paper at the Journal of Open Source Software that you can use to cite the tidyverse if you use it in a paper - see `citation(""tidyverse"")` for details.",1,10,FALSE,NA
tidyverse,be9772914749d592ad44036178f64253,"Eliminate repeats in the package list when loading an odd number of packages (#94, #100, @​dchiu911)",1,11,FALSE,NA
tidyverse,db3e3c82adb0da3c43157264cc709f8c,"Packages attached from same library they were initially loaded from (#171, @​gabrocsardi)",1,12,FALSE,NA
tidyverse,68523e816075f2987fde01f4ba1c021b,"If conflicted package is loaded, omit display of conflicts. This includes fix to `tidyverse_conflicts()` to avoid accidentally triggering conflicted shims (#136).",1,13,FALSE,NA
tidyverse,866bcedf2aeee57752382dc94d71be76,"`tidyverse_deps()` now succeeds even if a dependency of a dependency is missing (#152, @​PoGibas). It no longer includes dependencies that are needed by the tidyverse package but are not strictly part of the tidyverse (i.e. cli, crayon, and rstudioapi).",1,14,FALSE,NA
tidyverse,59cd61598322b8324736675aba214bce,"`tidyverse_deps()` and `tidyverse_update()` gain a new `repos` argument that gets passed to the base function `available.packages()` (@​zkamvar, #82)",1,15,FALSE,NA
tidyverse,21cc48aceb42ec4eeff359aee4ebbff2,"`tidyverse_packages()` correctly returns packages names (#93, #106, @​coatless)",1,16,FALSE,NA
tidyverse,5c531dbcbe176cebaaa23694e96435e4,`tidyverse_sitrep()` gives you a situation report on your install of the tidyverse (#203),1,17,FALSE,NA
tidyverse,14e110cdd95b88412765915516915475,Require modern versions of all packages (#85),1,18,FALSE,NA
tidyverse,92a16ea7985e7c3571f999fcb2f58423,Work with RStudio 1.0 and earlier (#88).,1,19,FALSE,NA
tidyverse,1821841653aa49cc7a4d80da3df9352e,"stringr and forcats have been added to the core tidyverse, so they are attached by `library(tidyverse)`.",1,20,FALSE,NA
tidyverse,eec13a112dcf65bf8af902a4630c7025,reprex joins the tidyverse to make it easier to create reproducible examples (#47),1,21,FALSE,NA
tidyverse,4f359e1e2efcd26c088a7a9cd915bc08,"On attach, tidyverse now makes better use of the horizontal space, printing packages and versions in two columns (#59). It only prints packages that it attaches, not packages that you've already attached. Development versions are highlighted in red. You can now suppress this startup message by setting `options(tidyverse.quiet = TRUE)`",1,22,FALSE,NA
tidyverse,a333f8c7474f3400d18b12157d86d4b1,"`tidyverse_conflicts()` now prints all conflicts that involve at least one tidyverse package; Previously it only omitted any intra-tidyverse conflicts (#26). I've also tweaked the display of conflicts to hopefully make it more clear which function is the ""winner"".",1,23,FALSE,NA
tidyverse,801bccbca3c27bbda66882503ba704c3,"`tidyverse_update()` now just gives you the code you need to update the packges, since in general it's not possible to update packages that are already loaded.",1,24,FALSE,NA
tidyverse,fa379f36aadb51296445aff74c0ab45e,feather is now *actually* in suggests.,1,25,FALSE,NA
tidyverse,1b37f96cda445bad9819e49899cf30f8,Moved feather from Imports to Suggests - feather is part of the tidyverse but it's installation requirements (C++11 + little-endian) make it painful in many scenarios (#36).,1,26,FALSE,NA
tidyverse,ffe064c77b23c613c6228dc3cb2c492a,Added a `NEWS.md` file to track changes to the package.,1,27,FALSE,NA
tidyverse,68ccd3fb125a9b30df7e714b02feb5fa,Membership changes:,1,28,FALSE,NA
tidyverse,68ccd3fb125a9b30df7e714b02feb5fa,"• Removed DBI (since very different API, #16)",2,29,FALSE,Membership changes:
tidyverse,68ccd3fb125a9b30df7e714b02feb5fa,• Added feather (#15),2,30,FALSE,Membership changes:
tidyverse,9ad2ee45595d3da595518fa7bdf1ce15,"`tidyverse_deps()` and `tidyverse_packages()` are now exported so you can more easily see the make up of the tidyverse, and what package versions you have (#18, #23)",1,31,FALSE,NA
tidyverse,88a255570bd674ad7adbd822dde5c49c,`suppressPackageStartupMessages()` now suppresses all messages during loading (#19). `suppressPackageStartupMessages()` is called automatically for all tidyverse packages (#27).,1,32,FALSE,NA
xml2,7dfa4cf7b83d591f5173a71c3c5ca1e2,"`xml_serialize()` now includes the document type so that `xml_unserialize()` works also for HTML documents (#407, @​HenrikBengtsson).",1,1,FALSE,NA
xml2,82384e3a548da85585115e4ce896d50c,"Remove unused dependencies on glue, withr and lifecycle (@​mgirlich).",1,2,FALSE,NA
xml2,cf035ec652a475d54383a6b8b6d8f370,"`print()` is faster for very long `xml_nodeset` inputs (#366, @​michaelchirico).",1,3,FALSE,NA
xml2,95b921232d1a2bc53917de0009edfd94,"Small speedup for `xml_find_all()` (@​mgirlich, #393).",1,4,FALSE,NA
xml2,08c42727d23eb8406ee51673e16f0c27,Fixes for R CMD check problems.,1,5,FALSE,NA
xml2,273e310a51a01e36dcd0df6ba95c89b2,Fixes for R CMD check problems.,1,6,FALSE,NA
xml2,75a147f327996d2d3e6d06aae75c75d2,Windows: update to libxml2 2.10.3,1,7,FALSE,NA
xml2,e0231246139c339ecb030617b790c116,Hadley Wickham is now (again) the maintainer.,1,8,FALSE,NA
xml2,d4cbc301dfad9f0f974a8657ff3d488c,xml2 has been re-licensed as MIT (#317).,1,9,FALSE,NA
xml2,8a6e7326c75d3670a17a3c7c5aa690d8,`xml_find_all.xml_node()` fails more informatively the `xpath` parameter is the wrong type (@​michaelchirico),1,10,FALSE,NA
xml2,c5c830600cc7afc669fbb778516b0a32,"`xml_find_all.xml_nodeset()` gains a `flatten` argument to control whether to return a single nodeset or a list of nodesets (#311, @​jakejh)",1,11,FALSE,NA
xml2,69df9c86592f90a0dfd169d4d347350c,"`write_xml()` and `write_html()` now return NULL invisibly, as they did prior to version 1.3.0 (#307)",1,12,FALSE,NA
xml2,7192021701e545cb8aef0f880b683472,"`XPtr` gets explicit copy constructor and assignment operator definitions, which were two missing components of the Rule of three (@​michaelchirico)",1,13,FALSE,NA
xml2,1eeffa77259ec94d84c9d773b91fbbf6,Windows: update to libxml2 2.9.10 and libxslt 1.1.34 and add ucrt libs,1,14,FALSE,NA
xml2,19ffebc365673bdbdbea38e3587ea48f,`read_html()` and `read_xml()` now error if passed strings of length greater than one (#121),1,15,FALSE,NA
xml2,bc7ce8a3720053d9e6b9ed72f02628f7,`read_xml.raw()` had an inadvertent regression in 1.3.0 and is now again fixed (#300),1,16,FALSE,NA
xml2,9585f0b59aaf8a46641d7ce70d7d5cb6,"Compilation fix on macOS 10.15.4 (@​kevinushey, #296)",1,17,FALSE,NA
xml2,0dba299bec729095a5f98d2f93526bad,`read_html()` now again works with HTML files with non-ASCII encodings (#293).,1,18,FALSE,NA
xml2,25211ce4ae72f6665f1b4732b657846c,Removes the Rcpp dependency,1,19,FALSE,NA
xml2,bd40995894305faa68386c217bad48cd,Fix compilation issue on macOS versions after High Sierra when not using homebrew supplied libxml2,1,20,FALSE,NA
xml2,2ed07654ea141af4939a515d2da3f119,"Fix potential dangling pointer with internal `asXmlChar()` function (@​michaelquinn32, #287).",1,21,FALSE,NA
xml2,a818cc6b942546cbd4c68eb84080a3cf,`as_xml_document()` now handles cases with text nodes trailing normal nodes (#274).,1,22,FALSE,NA
xml2,632203ea02b836be03225092ed73d247,"`xml_add_child()` can now create nodes with a `par` attribute. These previously errored due to partial name matching of the `parent` function in the internal `create_node()` function. (@​jennybc, #285)",1,23,FALSE,NA
xml2,b3adf2a937ffb48bcb2a69d6f5bf3339,"`libxml2_version()` now returns a semantic version rather than alphanumeric version, so ""2.9.10"" \> ""2.9.9"" (#277)",1,24,FALSE,NA
xml2,7afe0168e0877f68ccf53ff2d37b56f6,"Export S4 classes with documentation, so they can be used in other packages without Warnings (@​nuest, #267)",1,25,FALSE,NA
xml2,f484b4323d583b392fda3f4a723c95fb,"xml2 now has a pkgdown site! https://xml2.r-lib.org (@​jayhesselberth, #211).",1,26,FALSE,NA
xml2,9eade954745c11b75c9b9e43f15c4d5b,Windows: upgrade to libxml2 2.9.8,1,27,FALSE,NA
xml2,bc4e386c3d1ac530853e6d330786f33b,"print methods now match the type of document, e.g. `read_html()` prints as ""{html_document}"" rather than ""{xml_document}"" (#227)",1,28,FALSE,NA
xml2,a466a16002fcba39b05f327325bcd9b0,"Generic xml2 error are now forwarded as R errors. Previously these errors were output to stderr, so could not be suppressed (#209).",1,29,FALSE,NA
xml2,9e02c7e507327400c63741eb20c7c9ef,"Fix for ICU 59+ defaulting to use char16_t, which is only available in C++11 (#231)",1,30,FALSE,NA
xml2,baa972246a0c7dcd4601ee2ebdbb374d,No longer uses the C connections API,1,31,FALSE,NA
xml2,f72182c4756ce4601cd31b3415a4bf11,Better error message when trying to run `download_xml()` without the curl package installed (#262),1,32,FALSE,NA
xml2,968b1ba87456ec129d5efd88d0dec79e,xml2 classes are now registered for use with S4 by calling `setOldClass()` (#248),1,33,FALSE,NA
xml2,0d82e1def7c2ec430aae06f1dd10532b,Nodes with nested data type definition entities now work without crashing (#241),1,34,FALSE,NA
xml2,b88bbc30c21472a26b02452071f831fd,Test failure fixed due to behavior change with relative paths in libxml2 2.9.9 (#245).,1,35,FALSE,NA
xml2,c4c70d282c4395beaecaac97185127f2,`read_xml()` now has a better error message when given zero length character inputs (#212).,1,36,FALSE,NA
xml2,7b0c05badd9cf25a20451150e22004a3,`read_xml()` and `read_html()` now automatically check if the response succeeded before trying to read from a HTTP response (#255).,1,37,FALSE,NA
xml2,84a9d122785c30d2f9239b5b32f2ff05,`xml_root()` can now create root nodes with namespaces (#239),1,38,FALSE,NA
xml2,3fe4f7fe4df557a8ea62080dab804f93,`xml_set_attr()` no longer crashes if you try to set the same namespace on the same node multiple times (#253).,1,39,FALSE,NA
xml2,071de23c0d1c70b7df5e431a244a11ee,`xml_set_attr()` now recycles the values if needed (#221),1,40,FALSE,NA
xml2,d124143d785066e20cb30a43bfbf7218,"`xml_structure()` gains a `file` argument, to support writing to a file rather than the console (#244).",1,41,FALSE,NA
xml2,8685373607c2434844627b4429ae2df9,`as_list()` on `xml_document` objects did not properly include the root node in the returned list. Previous behavior can be obtained by using `as_list()[[1L]]` in place of `as_list()`.,1,42,FALSE,NA
xml2,198f38c2de52e653626c0d3b3cd3794d,`download_xml()` and `download_html()` helper functions to make it easy to download files (#193).,1,43,FALSE,NA
xml2,bbec90c45ec0c66f09e2b4cfd5e14298,`xml_attr()` can now set attributes with no value (#198).,1,44,FALSE,NA
xml2,e7ab93dee550073b7ff62e62896667d4,`xml_serialize()` and `xml_unserialize()` now create file connections when given character input (#179).,1,45,FALSE,NA
xml2,3db2c3e65b5a999b02bd42ad7f54da7c,"`xml_find_first()` no longer de-duplicates results, so the results are always the same length as the inputs (as documented) (#194).",1,46,FALSE,NA
xml2,183085436ee40fda83fadba95d0e8e5d,xml2 can now build using libxml2 2.7.0,1,47,FALSE,NA
xml2,5f81bc5284b1365663550c071c61a91e,Use Rcpp symbol registration and visibility to prevent symbol conflicts on Linux,1,48,FALSE,NA
xml2,ddc8966d79b4a09aa73fe93212be65d7,"`xml_add_child()` now requires less resources to insert a node when called with `.where = 0L` (@​heckendorfc, #175).",1,49,FALSE,NA
xml2,560a7dedbd2dbae407353eab7efec781,Fixed failing examples due to a change in an external resource.,1,50,FALSE,NA
xml2,ac5ecdd8eea8683e37c373132259c0a9,"This is a small point release addressing installation issues found with older libxml2 versions shipped with RedHat Linux 6 / CentOS 6 (#163, #164).",1,51,FALSE,NA
xml2,cf814f015ab77d6e53e58c41acef4f12,`write_xml()` and `write_html()` now accept connections as well as filenames for output. (#157),1,52,FALSE,NA
xml2,1e8f5dfbb95679e191c291ea53d7f1b9,`xml_add_child()` now takes a `.where` argument specifying where to add the new children. (#138),1,53,FALSE,NA
xml2,ef02f31f4da20766414b40950c8e3216,"`as_xml()` generic function to convert R objects to xml. The most important method is for lists and enables full roundtrip support for going to and back from xml for lists and enables full roundtrip support to and from XML. (#137, #143)",1,54,FALSE,NA
xml2,67920f229dadcfb97cd6d6a6112f5705,`xml_new_root()` can be used to create a new document and a root node in one step (#131).,1,55,FALSE,NA
xml2,47d26fe6b9874bdcaf663136023b2093,`xml_add_parent()` inserts a new node between the node and its parent (#129),1,56,FALSE,NA
xml2,96614ec7cef3ec3a6335199170794166,"Add `xml_validate()` to validate a document against an xml schema (#31, @​jeroenooms).",1,57,FALSE,NA
xml2,f3dcaaac59c7ac8912994930b7c1f54c,Export `xml2_types.h` to allow for extension packages such as xslt.,1,58,FALSE,NA
xml2,effd15de01a0e49f9b06698e03092a8a,`xml_comment()` allows you to add comment nodes to a document. (#111),1,59,FALSE,NA
xml2,933ca2b099cf0e6729cc544af5fc0138,`xml_cdata()` allows you to add CDATA nodes to a document. (#128),1,60,FALSE,NA
xml2,d4f58aaccce92f8cac61f8c625b06975,Add `xml_set_text()` and `xml_set_name()` equivalent to `xml_text<-` and `xml_name<-`. (#130).,1,61,FALSE,NA
xml2,5a7d909465a6de390a8c281224ec5a79,"Add `xml_set_attr()` and `xml_set_attrs()` equivalent to `xml_attr<-` and `xml_attrs<-`. (#109, #130)",1,62,FALSE,NA
xml2,97b355f000feb0e0f407bae4eac625c8,Add `write_html()` method (#133).,1,63,FALSE,NA
xml2,321c602bf005c92946b669d993b87a56,`xml_new_document()` now explicitly sets the encoding (default UTF-8) (#142),1,64,FALSE,NA
xml2,947632cc82172fedc07aae33b3e1fffc,Document formatting options for `write_xml()` (#132),1,65,FALSE,NA
xml2,3947be05307dec92b816503d2f1d0722,Add missing methods for xml_missing objects. (#134),1,66,FALSE,NA
xml2,3290981b9eb7079831cb25f3bfe49c4f,Bugfix for xml_length.xml_nodeset that caused it to fail unconditionally. (#140),1,67,FALSE,NA
xml2,e0da394e0c78f3da3efdfca1be203e34,`is.na()` now returns `TRUE` for `xml_missing` objects. (#139),1,68,FALSE,NA
xml2,b3ed414a5b2398641e4ba1eff84390ad,Trim non-breaking spaces in `xml_text(trim = TRUE)` (#151).,1,69,FALSE,NA
xml2,9d009dd419a79f6f439123b507adfe55,"Allow setting non-character attributes (values are coerced to characters). (@​sjp, #117, #122).",1,70,FALSE,NA
xml2,638a0aa59bb6c53d042946aca6f109e0,"Fixed return value in call to vapply in xml_integer.xml_nodeset. (@​ddiez, #146, #147).",1,71,FALSE,NA
xml2,1115aa092dcf51541412a6891ffdede3,"Allow docs missing a root element to be created and printed. (@​sjp, #126, #121).",1,72,FALSE,NA
xml2,eef3ca5c3ec852ed401d048c04d265e6,"xml_add\_\* methods now return invisibly. (@​sjp, #124)",1,73,FALSE,NA
xml2,3bb0d3604b715863737def488f5a9aab,"`as_list()` now preserves element names when attributes exist, and escapes XML attributes that conflict with special R attributes (@​peterfoley, #115).",1,74,FALSE,NA
xml2,a57704b901b0d1db340ccac9000f865e,"All C++ functions now use `checked_get()` instead of `get()` where possible, so NULL XPtrs properly throw an error rather than crashing. (@​jimhester, #101, #104).",1,75,FALSE,NA
xml2,f1698a2936e92d9cfbaff333d091a157,"`xml_integer()` and `xml_double()` functions to make it easy to extract integer and double text from nodes (@​jimhester, #97, #99).",1,76,FALSE,NA
xml2,2baebd5e8a1a65bc7d82cf5dc93424aa,"xml2 now supports modification and creation of XML nodes. New functions `xml_new_document()`, `xml_new_child()`, `xml_new_sibling()`, `xml_set_namespace()`, , `xml_remove()`, `xml_replace()`, `xml_root()` and replacement methods for `xml_name()`, `xml_attr()`, `xml_attrs()` and `xml_text()` (@​jimhester, #9 #76)",1,77,FALSE,NA
xml2,6ed470809d12e46b1ce1c49eda1235f6,"`xml_ns()` now keeps namespace prefixes that point to the same URI (@​jimhester, #35, #95).",1,78,FALSE,NA
xml2,56af6222b283230ecabd45a40ba27ffe,"`read_xml()` and `read_html()` methods added for `httr::response()` objects. (@​jimhester, #63, #93)",1,79,FALSE,NA
xml2,f8e5bd1ad0fa97f68a39b3a324e36a91,"`xml_child()` function to make selecting children a little easier (@​jimhester, #23, #94)",1,80,FALSE,NA
xml2,6ee1263109f6f67b232fe7876c924bfc,"`xml_find_one()` has been deprecated in favor of `xml_find_first()` (@​jimhester, #58, #92)",1,81,FALSE,NA
xml2,a1e77f805a92dae357dcd637fc7ef6d9,"`xml_read()` functions now default to passing the document's namespace object. Namespace definitions can now be removed as well as added and `xml_ns_strip()` added to remove all default namespaces from a document. (@​jimhester, #28, #89)",1,82,FALSE,NA
xml2,b62d4be1babcfcb27183d76c04da6397,"`xml_read()` gains a `options` argument to control all available parsing options, including `HUGE` to turn off limits for parsing very large documents and now drops blank text nodes by default, mimicking default behavior of XML package. (@​jimhester, #49, #62, #85, #88)",1,83,FALSE,NA
xml2,2977610aa81c6494ee5839b61f6628b5,"`xml_write()` expands the path on filenames, so directories can be specified with '\~/' (@​jimhester, #86, #80)",1,84,FALSE,NA
xml2,79a612d7afdecf4abea6ef6b8bf9f4c3,"`xml_find_one()` now returns a 'xml_missing' node object if there are 0 matches (@​jimhester, #55, #53, hadley/rvest#82).",1,85,FALSE,NA
xml2,1d1d3e2340c1eb8888992b22b9f81361,"`xml_find_num()`, `xml_find_chr()`, `xml_find_lgl()` functions added to return numeric, character and logical results from XPath expressions. (@​jimhester, #55)",1,86,FALSE,NA
xml2,f7f20ec00c472b478ef9ffbb856eb76a,`xml_name()` and `xml_text()` always correctly encode returned value as UTF-8 (#54).,1,87,FALSE,NA
xml2,00036db68b301fb68ad8a44d623f7ae2,Improved configure script - now works again on R-devel on windows.,1,88,FALSE,NA
xml2,9dd3fa326110fa6e68989b5af446ce07,"Compiles with older versions of libxml2.,",1,89,FALSE,NA
xml2,de69724a485cb67a1844cf03bd1199fb,Make configure script more cross platform.,1,90,FALSE,NA
xml2,e68bef4972d75ab3d1e22a3297b5d4fa,Add `xml_length()` to count the number of children (#32).,1,91,FALSE,NA
ggplot2,cb877f9ae6c17fc354b624a826695925,"New `guide_axis_logticks()` can be used to draw logarithmic tick marks as an axis. It supersedes the `annotation_logticks()` function (@​teunbrand, #5325).",NA,NA,NA,NA
ggplot2,0065a60c03bea0c4ad19ba7b1a9f1a3e,"Glyphs drawing functions of the `draw_key_*()` family can now set `""width""` and `""height""` attributes (in centimetres) to the produced keys to control their displayed size in the legend.",NA,NA,NA,NA
ggplot2,a7698f404af2065d70a19ea9e65a5ea8,Lines where `linewidth = NA` are now dropped in `geom_sf()` (#5204).,NA,NA,NA,NA
broom,c4808b67563c546d4c448e81c6c15d6f,Corrected coefficients values in `tidy.varest()` output (#1174).,NA,NA,NA,NA
ggplot2,bc7ecb1ad8bc95964bf90ffadd442cb6,The `legend.key` theme element is set to inherit from the `panel.background` theme element. The default themes no longer set the `legend.key` element. This causes a visual change with the default `theme_gray()` (#5549).,NA,NA,NA,NA
xml2,5f948cd498a3e184a068ce1e29b23b23,"`xml_find_int()` analogous to `xml_find_num()` for returning integers matched by an XPath (#365, @​michaelchirico).",NA,NA,NA,NA
xml2,f2ce71753c7fb1168f0c01a94ccd15d1,Now compatible with limxml2 2.12.0 and later (@​KNnut).,NA,NA,NA,NA
xml2,8411f96104ba7aa27c171e87e909ed23,Fix format string issues detected in R-devel.,NA,NA,NA,NA
xml2,74f9052e71e08fbe56fe11ceff1c6ba8,"`xml_attr()`, `xml_attrs()`, `xml_double()`, `xml_integer()`, `xml_length()`, `xml_name()`, `xml_path()`, `xml_text()`, and `xml_type()` no longer use S3 dispatch but instead dispatch in C, leading to considerable performance improvements in many cases (@​mgirlich, #400).",NA,NA,NA,NA
ggplot2,00ec1900bca0f4a7730b9a3cc6a926ff,"Contour functions will not fail when `options(""OutDec"")` is not `.` (@​eliocamp, #5555).",NA,NA,NA,NA
ggplot2,f66fda5909907118652d537a276eea6b,`theme()` now supports splicing a list of arguments (#5542).,NA,NA,NA,NA
ggplot2,e220de9c5eae4b788323791ba7462175,New `guide_custom()` function for drawing custom graphical objects (grobs) unrelated to scales in legend positions (#5416).,NA,NA,NA,NA
ggplot2,6bf4f79f4cc17ef8c88881419ac0f2ca,New `guide_axis_stack()` to combine other axis guides on top of one another.,NA,NA,NA,NA
ggplot2,d67d3157a7bbe9e98908c576dc8f67db,"The plot's title, subtitle and caption now obey horizontal text margins (#5533).",NA,NA,NA,NA
ggplot2,fed09f81908e8549ef2f39b52b4fc55b,"The `fill` aesthetic in many geoms now accepts grid's patterns and gradients. For developers of layer extensions, this feature can be enabled by switching from `fill = alpha(fill, alpha)` to `fill = fill_alpha(fill, alpha)` when providing fills to `grid::gpar()` (@​teunbrand, #3997).",NA,NA,NA,NA
ggplot2,c6cf9813ce28c2b16631781c7c6e6345,"Plot scales now ignore `AsIs` objects constructed with `I(x)`, instead of invoking the identity scale. This allows these columns to co-exist with other layers that need a non-identity scale for the same aesthetic. Also, it makes it easy to specify relative positions (@​teunbrand, #5142).",NA,NA,NA,NA
ggplot2,1a7bb650909cd603ddae5c4562a585b3,`draw_key_label()` now better reflects the appearance of labels.,NA,NA,NA,NA
ggplot2,6f3fa6423237006369ad09ecde633b08,The `minor_breaks` function argument in scales can now take a function with two arguments: the scale's limits and the scale's major breaks (#3583).,NA,NA,NA,NA
ggplot2,bc8231fadd7b0b79342dc28c0638621f,(internal) The `ScaleContinuous$get_breaks()` method no longer censors the computed breaks.,NA,NA,NA,NA
ggplot2,c6183493e793f5345115ab98d5879abd,"When legend titles are larger than the legend, title justification extends to the placement of keys and labels (#1903).",NA,NA,NA,NA
ggplot2,0e84d9f89b49a1ed9e0704015f831a9e,"`guide_*()` functions get a new `theme` argument to style individual guides. The `theme()` function has gained additional arguments for styling guides: `legend.key.spacing{.x/.y}`, `legend.frame`, `legend.axis.line`, `legend.ticks`, `legend.ticks.length`, `legend.text.position` and `legend.title.position`. Previous style arguments in the `guide_*()` functions have been soft-deprecated.",NA,NA,NA,NA
ggplot2,f2257cbaea680aef3f23b655ae6252c2,"The `trans` argument in scales and secondary axes has been renamed to `transform`. The `trans` argument itself is deprecated. To access the transformation from the scale, a new `get_transformation()` method is added to Scale-classes (#5558).",NA,NA,NA,NA
ggplot2,7664251d9fd482eccbc92a2922ac4c7e,Legend keys that can draw arrows have their size adjusted for arrows.,NA,NA,NA,NA
ggplot2,30d047966ec44e602f83e26e76c05073,`guide_colourbar()` and `guide_coloursteps()` gain an `alpha` argument to set the transparency of the bar (#5085).,NA,NA,NA,NA
ggplot2,f744f0cd8af1bd68fa715d8d1dbf1d31,`stat_count()` treats `x` as unique in the same manner `unique()` does (#4609).,NA,NA,NA,NA
ggplot2,ff1e8f98a81807f39d22f4c54312c2f3,"`position_stack()` no longer silently removes missing data, which is now handled by the geom instead of position (#3532).",NA,NA,NA,NA
ggplot2,677af61095be729885517946e1650deb,"(breaking) In the `scale_{colour/fill}_gradient2()` and `scale_{colour/fill}_steps2()` functions, the `midpoint` argument is transformed by the scale transformation (#3198).",NA,NA,NA,NA
ggplot2,0e174fca7e873e7900ae11892e0b9180,"When using `geom_dotplot(binaxis = ""x"")` with a discrete y-variable, dots are now stacked from the y-position rather than from 0 (@​teunbrand, #5462)",NA,NA,NA,NA
ggplot2,41e8df1840185faff4f456873de336ae,"New `display` argument in `guide_colourbar()` supplants the `raster` argument. In R 4.1.0 and above, `display = ""gradient""` will draw a gradient.",NA,NA,NA,NA
ggplot2,54fc5faa1220aaa2356c14b800d4f700,The `name` argument in most scales is now explicitly the first argument (#5535),NA,NA,NA,NA
ggplot2,c62faad60b6968beb56339ed6a8d03ac,"The new argument `axes` in `facet_grid()` and `facet_wrap()` controls the display of axes at interior panel positions. Additionally, the `axis.labels` argument can be used to only draw tick marks or fully labelled axes (@​teunbrand, #4064).",NA,NA,NA,NA
ggplot2,afae2d6a2900e0494ac85c41fb76e21b,"`coord_polar()` can have free scales in facets (@​teunbrand, #2815).",NA,NA,NA,NA
ggplot2,00b1032803e333a9fc146d22b89ca1ff,The `get_guide_data()` function can be used to extract position and label information from the plot (#5004).,NA,NA,NA,NA
ggplot2,61411c8bcd78f8f012de6609fea46441,"The ggplot object now contains `$layout` which points to the `Layout` ggproto object and will be used by the `ggplot_build.ggplot` method. This was exposed so that package developers may extend the behavior of the `Layout` ggproto object without needing to develop an entirely new `ggplot_build` method (@​jtlandis, #5077).",NA,NA,NA,NA
ggplot2,65afc21ce9c0674fab17aca2e4ae1aef,"The guide system. As a whole. See 'new features' for more information. While the S3 guide generics are still in place, the S3 methods for `guide_train()`, `guide_merge()`, `guide_geom()`, `guide_transform()`, `guide_gengrob()` have been superseded by the respective ggproto methods. In practice, this will mean that `NextMethod()` or sub-classing ggplot2's guides with the S3 system will no longer work.",NA,NA,NA,NA
ggplot2,c99e987341e002a0e2af7df7aeff9c4a,"The `scale_name` argument in `continuous_scale()`, `discrete_scale()` and `binned_scale()` is soft-deprecated. If you have implemented custom scales, be advised to double-check that unnamed arguments ends up where they should (@​teunbrand, #1312).",NA,NA,NA,NA
ggplot2,fd62809491c269f3364a7ab8e51e9eb8,"The `trans` argument in scales and secondary axes has been renamed to `transform`. The `trans` argument itself is deprecated. To access the transformation from the scale, a new `get_transformation()` method is added to Scale-classes that retrieves the transformation object from the new `Scale$transformation` field (#5558).",NA,NA,NA,NA
ggplot2,aa5fac59817ebbe37ba39144dd4f8d4f,"Providing a numeric vector to `theme(legend.position)` has been deprecated. To set the default legend position inside the plot use `theme(legend.position = ""inside"", legend.position.inside = c(...))` instead.",NA,NA,NA,NA
ggplot2,272ae80591a1d4d163a593ab782a39a4,"The most user-facing change is that the styling of guides is rewired through the theme system. Guides now have a `theme` argument that can style individual guides, while `theme()` has gained additional arguments to style guides. Theme elements declared in the guide override theme elements set through the plot. The new theme elements for guides are: `legend.key.spacing{.x/.y}`, `legend.frame`, `legend.axis.line`, `legend.ticks`, `legend.ticks.length`, `legend.text.position` and `legend.title.position`. Previous style options in the arguments of `guide_*()` functions are soft-deprecated.",NA,NA,NA,NA
ggplot2,85ff98b2e63d37cc3227c92666e430ba,"Unfortunately, we could not fully preserve the function of pre-existing guide extensions written in the S3 system. A fallback for these old guides is encapsulated in the `<GuideOld>` class, which calls the old S3 generics. The S3 methods have been removed as part of cleaning up, so the old guides will still work if the S3 methods are reimplemented, but we encourage to switch to the new system (#2728).",NA,NA,NA,NA
ggplot2,981a8e564cadadd932c5fc37667762db,The `order` argument of guides now strictly needs to be a length-1 integer (#4958).,NA,NA,NA,NA
ggplot2,30900d220be6f7445a6bfcbf5ae997c7,New `guide_axis_theta()` to draw an axis in a circular arc in `coord_radial()`. The guide can be controlled by adding `guides(theta = guide_axis_theta(...))` to a plot.,NA,NA,NA,NA
ggplot2,6c6daec7190a51ba7d94797af4ba6fb7,`guide_axis()` gains a `minor.ticks` argument to draw minor ticks (#4387).,NA,NA,NA,NA
ggplot2,1915d1f6fb22d5b8792cb18b3b4afe9e,`guide_axis()` gains a `cap` argument that can be used to trim the axis line to extreme breaks (#4907).,NA,NA,NA,NA
ggplot2,8c2438a0234e24e43b420112a2362ac9,"Primary axis titles are now placed at the primary guide, so that `guides(x = guide_axis(position = ""top""))` will display the title at the top by default (#4650).",NA,NA,NA,NA
ggplot2,026e381d48d1aacd97b71144fe9cb8df,Unknown secondary axis guide positions are now inferred as the opposite of the primary axis guide when the latter has a known `position` (#4650).,NA,NA,NA,NA
ggplot2,d6a3bc7ddf9ebdba783d5480b4f91bfa,"All legends have acquired a `position` argument, that allows individual guides to deviate from the `legend.position` set in the `theme()` function. This means that legends can now be placed at multiple sides of the plot (#5488).",NA,NA,NA,NA
ggplot2,844da681a5c606483d709fe5cc405229,`draw_key_label()` now better reflects the appearance of labels (#5561).,NA,NA,NA,NA
ggplot2,5a883ba71c46c444d7f374f88d404f4f,"More informative error for mismatched `direction`/`theme(legend.direction = ...)` arguments (#4364, #4930).",NA,NA,NA,NA
ggplot2,9a4e95ccfef311b02e35c7cf5eb78259,Fixed regression in `guide_legend()` where the `linewidth` key size wasn't adapted to the width of the lines (#5160).,NA,NA,NA,NA
ggplot2,36f1602e8bb658629eaaf694410b9102,"In `guide_bins()`, the title no longer arbitrarily becomes offset from the guide when it has long labels.",NA,NA,NA,NA
ggplot2,fb14bf8410c4e70755835b2e6d62397a,`guide_colourbar()` and `guide_coloursteps()` merge properly when one of the aesthetics is dropped (#5324).,NA,NA,NA,NA
ggplot2,339be94d2031465de1ca584433705593,`guide_coloursteps()` and `guide_bins()` sort breaks (#5152).,NA,NA,NA,NA
ggplot2,1fd5a0f3ec67c2c25bd3d26acb8f8489,The `titleGrob()` function has been refactored to be faster and less complicated.,NA,NA,NA,NA
ggplot2,873c16098a37613ac2ef8a3fc3dc7bdb,"The `scales_*()` functions related to managing the `<ScalesList>` class have been implemented as methods in the `<ScalesList>` class, rather than stray functions (#1310).",NA,NA,NA,NA
tibble,1ad5ba5b9994883319c708a1fe653d67,"`as_tibble()` calls `as.data.frame()` for objects that are not subclasses of `""tbl_df""` (@​TimTaylor, #1556, #1557).",NA,NA,NA,NA
tibble,0c5e26c34d98d7092d1d8254a17a3368,Check fast path first.,NA,NA,NA,NA
dbplyr,59c198cb34ac85a21b033df1191741b5,"Snowflake (@​nathanhaigh, #1406)",NA,NA,NA,NA
dbplyr,59c198cb34ac85a21b033df1191741b5,• Added support for `str_starts()` and `str_ends()` via `REGEXP_INSTR()`,NA,NA,NA,NA
dbplyr,59c198cb34ac85a21b033df1191741b5,• Refactored `str_detect()` to use `REGEXP_INSTR()` so now supports regular expressions.,NA,NA,NA,NA
dbplyr,59c198cb34ac85a21b033df1191741b5,"• Refactored `grepl()` to use `REGEXP_INSTR()` so now supports case-insensitive matching through `grepl(..., ignore.case = TRUE)`",NA,NA,NA,NA
dbplyr,0713190980f1421388bcbf8b82529cea,"Database errors now show the generated SQL, which hopefully will make it faster to track down problems (#1401).",NA,NA,NA,NA
dbplyr,f278e795185b0e1113bd9b9c873cede3,"`db_explain()` now works for Oracle (@​thomashulst, #1353).",NA,NA,NA,NA
dbplyr,fc0496f56d40c6a83640fc1fb1ad1755,"The class of remote sources now includes all S4 class names, not just the first (#918).",NA,NA,NA,NA
dbplyr,168079c12f4ca706ab4b7a0aa25b3863,Allow additional arguments to be passed from `compute()` all the way to `sql_query_save()`-method (@​rsund).,NA,NA,NA,NA
dbplyr,50c3d10ed772b5d76b0362ea040c813e,"Oracle: Added support for `str_replace()` and `str_replace_all()` via `REGEXP_REPLACE()` (@​thomashulst, #1402).",NA,NA,NA,NA
dbplyr,24ac5e23db61635a7e68ae2f056b8951,"SQL server: `filter()` does a better job of converting logical vectors from bit to boolean (@​ejneer, #1288).",NA,NA,NA,NA
rlang,f1dc4a32fa54391282c38982cc2e479a,`%||%` is now reexported from base on newer R versions. This avoids conflict messages when attaching or importing rlang.,NA,NA,NA,NA
dbplyr,aa39b1fd2037e409f110ba9275b6f216,"Add translations for clock functions `add_years()`, `add_days()`, `date_build()`, `get_year()`, `get_month()`, `get_day()`, and `base::difftime()` on SQL server, Redshift, Snowflake, and Postgres.",NA,NA,NA,NA
dbplyr,08a3104cec569110b88ce4768f8a7d67,SQL server: clear error if you attempt to use `n_distinct()` in `mutate()` or `filter()` (#1366).,NA,NA,NA,NA
dbplyr,3fbb4a503abd07519a9cdd3e4fb0c729,`-1 + x` is now translated correctly (#1420).,NA,NA,NA,NA
dbplyr,bfed16ebfdfe8b1dfdad24556e66eeb4,`db_sql_render()` correctly passes on `...` when re-calling with `sql_options` set (#1394).,NA,NA,NA,NA
readr,64b8364caab5a625334c81f182482f3c,No major user-facing changes. Patch release with housekeeping changes and internal changes requested by CRAN around format specification in compiled code.,NA,NA,NA,NA
dbplyr,278b2798a9ec69849d8e8786beb55466,"Namespaced dplyr calls now error if the function doesn't exist, or a translation is not available (#1426).",NA,NA,NA,NA
reprex,28b5c5bf85fa76c1df8a656ff0518719,"The unexported `prex_*()` functions protect the current session from option changes coming from reprex's own machinery, such as disabling color (#427).",NA,NA,NA,NA
lubridate,fac1e8e3f8234f2c25afad542498149a,#1133 Don't error on addition on infinite periods.,NA,NA,NA,NA
tibble,b45a821922aca95a91f059c7b7170086,"Revert ""Fix as_tibble() usage"". This reverts commit 49d0b63504c4e3f77beaf2889ace12cad7d3f293.",NA,NA,NA,NA
tidyr,75f74d25201ca4c533d3f21ca2f834f1,"The `...` argument of both `pivot_longer()` and `pivot_wider()` has been moved to the front of the function signature, after the required arguments but before the optional ones. Additionally, `pivot_longer_spec()`, `pivot_wider_spec()`, `build_longer_spec()`, and `build_wider_spec()` have all gained `...` arguments in a similar location. This change allows us to more easily add new features to the pivoting functions without breaking existing CRAN packages and user scripts. `pivot_wider()` provides temporary backwards compatible support for the case of a single unnamed argument that previously was being positionally matched to `id_cols`. This one special case still works, but will throw a warning encouraging you to explicitly name the `id_cols` argument. To read more about this pattern, see https://design.tidyverse.org/dots-after-required.html (#1350).",NA,NA,NA,NA
rvest,a0e4cf77167b3104820926b19a046c71,"`html_table()` discards rows without cells (@​epiben, #360).",NA,NA,NA,NA
rlang,280cd6cb900b254b55bb869e637ad1d4,`last_trace()` hyperlinks now use the modern `x-r-run` format (#1678).,NA,NA,NA,NA
httr2,22e6bd5b44660223f272e83dd2331472,`url_parse()` is considerably faster thanks to performance optimisations by and discussion with @​DyfanJones (#429).,NA,NA,NA,NA
dbplyr,4b6c9d8c6fe0f7b99db4b4f89742458d,"`rows_patch(in_place = FALSE)` now works when more than one column should be patched (@​gorcha, #1443).",NA,NA,NA,NA
rvest,4c8f1a35081766f27d490e4bda34661b,"New `read_html_live()` reads HTML into a real, live, HTML browser, meaning that you can scrape HTML generated by javascript. It returns a `LiveHTML` object which you can also use to simulate user interactions with the page, like clicking, typing, and scrolling (#245).",NA,NA,NA,NA
rstudioapi,21c2f7e3d620fe947398831c3e0a5f19,"`restartSession()` gains the `clean` argument, for RStudio 2024.04 and newer.",NA,NA,NA,NA
dbplyr,8f6926317ef23b0370f94ed08c7e490f,Clearer error if you attempt to embed non-atomic vectors inside of a generated query (#1368).,NA,NA,NA,NA
dbplyr,c044a5634fb880267718f853ce1c93ea,`x$name` never attempts to evaluate `name` (#1368).,NA,NA,NA,NA
httr2,bd436726494eae7144dffb9f8609813d,"`req_perform_stream()` gains a `round = c(""byte"", ""line"")` argument to control how the stream is rounded (#437).",NA,NA,NA,NA
dbplyr,a72ae775248ebdd803ae34bc67ffc7ca,The databricks backend now supports creating non-temporary tables too (#1418).,NA,NA,NA,NA
dbplyr,1311d5e11a0d1ea8488677e234749c7b,"Oracle once again translates `head()` to `FETCH FIRST`. This does require Oracle 12c or newer, but it actually works, compared to the approach using `ROWNUM` from #1292 (#1436).",NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,Specification of table names with schema/catalogs has been overhauled to make it simpler. This includes the following features and fixes:,NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,"• The simplest way to refer to a qualified table is now to wrap it in `I()`, e.g. `I(""schema_name.table_name"")`.",NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,• Use of `sql()` and `ident_q()` inside `in_catalog()` and `in_schema()` is once again supported (#1388).,NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,• It's ok to use `ident_q()` once again (#1413) and you should no longer see unsuppressable warnings about using `in_schema()` (#1408).,NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,"• The names of the arguments to `Id()` no longer matter, only their order (#1416). Additionally, thanks to changes to the DBI package, you no longer need to name each argument.",NA,NA,NA,NA
dbplyr,d10bef051d831f803754b4ee19ba1d43,"• If you accidentally pass a named vector to any of the database identifer functions, those names will be automatically stripped (#1404).",NA,NA,NA,NA
dbplyr,baddf92a4d305b6710b866c5c9a0dcfe,"When dbplyr creates an index on a table in a schema (e.g. `schema.table`), it now only includes the table name in the index name, not the schema name.",NA,NA,NA,NA
dbplyr,4c7feccbe9443c99592ebc2306191db9,You can once again use `NULL` on the LHS of an infix operator in order to generate SQL with unusual syntax (#1345).,NA,NA,NA,NA
dtplyr,607329628d60f80eebe5dfaaa299a170,"`print.dtplyr_step()` gains `n`, `max_extra_cols`, and `max_footer_lines` args (#464)",NA,NA,NA,NA
dbplyr,8fbba7854ec34f3dd4ae063291b73981,dbplyr now exports some tools to work with the internal `table_path` class which is useful for certain backends that need to work with this data structure (#1300).,NA,NA,NA,NA
blob,f28ea4f10a1ad1ed1ac1b26c658ceaf8,Internal changes only.,1,1,FALSE,NA
blob,bf74221d23627328b1e088e985a5995d,Merged cran-1.2.4 into main.,1,2,FALSE,NA
blob,71f0a1e5fa1c2a12ef01324db2ef2de5,Internal changes only.,1,3,FALSE,NA
blob,e82e8c37b2a720f2433d172a66fd06e2,Fix argument consistency between S3 generics and methods.,1,4,FALSE,NA
blob,7f2c37830c90cb8d868edd032ca7e090,Change maintainer e-mail.,1,5,FALSE,NA
blob,1ce64b35d2374d63c138112bec0cf611,Fix argument consistency between S3 generics and methods.,1,6,FALSE,NA
blob,280024dd2d10b098a278045a2de86fbd,"`as_blob(NA_character_)` returns a missing `blob` instead of `as_blob(""NA"")` (#26, @​michaelchirico).",1,7,FALSE,NA
blob,12258cbdd727a9db8e2c4253da19d103,"Moved to ""stable"" lifecycle stage.",1,8,FALSE,NA
blob,d997cfdc70977a5b8459b3146e313457,Remove `is_vector_s3()` (#19).,1,9,FALSE,NA
blob,0a5529880d19c6edf0f3a91a0e90e1bd,Inline prettyunits.,1,10,FALSE,NA
blob,a666e06bb2c68e5333ca45c064f96a6c,`vec_ptype2.hms.default()` forwards to `vec_default_ptype2()` for compatibility with vctrs 0.2.1.,1,11,FALSE,NA
blob,06751558f73464412d0f7a9f89a039d7,"The `blob` class is now based on `list_of(raw())` from the vctrs package (#11). This adds support for `vec_cast()` and `vec_ptype2()`. Some operations (such as subset assignment) are now stricter. The `new_blob()` constructor permits safe and fast construction of `blob` objects from a list, and `validate_blob()` checks an existing object for conformity with the rules.",1,12,FALSE,NA
blob,8ec6221f8cf9d4ee77a9ebcb7e0ef24e,The new `is_blob()` deprecates the existing `is.blob()`. `as.blob()` is deprecated in favor of `vec_cast()` or the new `as_blob()` (which is just a thin wrapper around `vec_cast()`).,1,13,FALSE,NA
blob,f208af38b3465a73ae0e4439c0483335,Indexing a vector of blobs out of bounds now raises an error. Use `NA` as index to create a `NULL` blob.,1,14,FALSE,NA
blob,cdad3dfb7ac365e8dee84cbf99da6782,"Now suggesting *pillar* instead of importing *tibble*, and using colored formatting with the *prettyunits* package with `B` instead of `b` as units (#7, #9).",1,15,FALSE,NA
blob,bd5b2a8302ccc4692fcfeefd1ea0ff36,The blob class can now be used for S4 dispatch.,1,16,FALSE,NA
blob,2cc50b62a37aef3611f88ecbc4553b5c,Calling `c()` on blob objects returns a blob.,1,17,FALSE,NA
blob,ea6f36db2ada128a9b4593c414186126,New maintainer: Kirill Müller.,1,18,FALSE,NA
blob,4aabe3af3f50812fe24c4686782eebe5,Added `as.blob.blob()`and `as.data.frame.blob()` methods (#3).,1,19,FALSE,NA
blob,582a52941e7964be0f57be8dba2a2301,Size of very large blobs is displayed correctly.,1,20,FALSE,NA
blob,d48c892f737e728bd75f537da14cc23b,Initial release.,1,21,FALSE,NA
dsbox,e988be961a5aa263a9c4b378a2ddfedd,Added a `NEWS.md` file to track changes to the package.,1,1,FALSE,NA
dsbox,6f351357d728f211a9f12539a28f56e4,"Deprecated `gss` to avoid name collision with `infer::gss`, renamed to `gss16`.",1,2,FALSE,NA
funs,521b0a56412bc30d72fb274e258164b1,Use testthat 3rd edition.,1,1,FALSE,NA
funs,bdd8ff211bd0b59c543a530c1aac3cb1,Added a `NEWS.md` file to track changes to the package.,1,2,FALSE,NA
multidplyr,fc1613ce1bccbd8b097ad1e448cc9674,Fix for R CMD check failure.,1,1,FALSE,NA
multidplyr,15c778569d71be680f4956d6fcc9ba53,`cluster_call()` gains a `simplify` argument - use this to request that the result should be simplified (#136).,1,2,FALSE,NA
multidplyr,6d24d03940068b4f8733f5f023a1990f,Fixed problems identified as part of working on dplyr 1.0.8.,1,3,FALSE,NA
multidplyr,b9acabe8abf626de483911d175583c1e,Added a `NEWS.md` file to track changes to the package.,1,4,FALSE,NA
nycflights13,06def475a9cd0d3f6eea1b64df26faeb,Fixes for R CMD check changes.,1,1,FALSE,NA
nycflights13,7eaad4e49f2fcc999cad919aa9bacfed,`airports$tz` with values `\N` replaced with `NA` (#36).,1,2,FALSE,NA
nycflights13,f5d56427961447b36c58084e86ec4d4b,"`weather$year` and `weather$month` are now integers to match `flights$year` and `flights$month` (@​jozefhajnala, #34)",1,3,FALSE,NA
nycflights13,a72435b1d482fa42b75b19ca9aa8e56a,`weather$time_hour` and `flights$time_hour` are now stored in the America/New_York timezone (#19).,1,4,FALSE,NA
nycflights13,426ce3d6a80ed726340e87477ff72bef,"`weather` data updated from latest Iowa State mesonet (@​rmcd1024, #24). `wind_gust` is now correctly captured from the underlying data, rather than being a copy of `wind_speed`. `precip` is better captures the hourly preciptation (which tends to be recorded at 51 minutes past the hour) (#27)",1,5,FALSE,NA
nycflights13,42046d36e350de8466266316e0145a31,Import function from tibble to suppress R CMD check NOTE.,1,6,FALSE,NA
nycflights13,3906ccc7ab611c647e9f1c8312c20987,nycflights imports tibble so you get nice printing even when no other tidyverse package is loaded.,1,7,FALSE,NA
nycflights13,5dc4c0be47395d2546992f9383f0309f,`airports` now has a `tzone` column that contains the IANA time zone for the airport (#15).,1,8,FALSE,NA
nycflights13,e2b720d7649150fe4e47b4c92b483dfc,`airlines`: `carrier` columns are characters instead of factors (#2).,1,9,FALSE,NA
nycflights13,1d71e6569e921bdd0ac7da98ee56bf50,`airports`: duplicate entry for BFT removed (#7).,1,10,FALSE,NA
nycflights13,2ec70af0cb99ac9d37d2239f9a9abf41,`flights`:,1,11,FALSE,NA
nycflights13,2ec70af0cb99ac9d37d2239f9a9abf41,"• new `time_hour` variable combines `year`, `month`, `day`, and `hour` into a single variable (#11).",2,12,FALSE,`flights`:
nycflights13,2ec70af0cb99ac9d37d2239f9a9abf41,"• new `sched_dep_time` and `sched_arr_time` variables give scheduled departure and arrival times - these are more appropriate for connecting to weather data. `hour` and `minute` are now computed from the scheduled departure time, not the actual departure time.",2,13,FALSE,`flights`:
nycflights13,2ec70af0cb99ac9d37d2239f9a9abf41,"• missing `tailnum` now recorded as `NA`, not `""""` (#10).",2,14,FALSE,`flights`:
nycflights13,2a22d72ad3468b578510bd139a7377bc,`weather`:,1,15,FALSE,NA
nycflights13,2a22d72ad3468b578510bd139a7377bc,• Includes weather data for all airports.,2,16,FALSE,`weather`:
nycflights13,2a22d72ad3468b578510bd139a7377bc,"• New `time_hour` variable combines `year`, `month`, `day`, `hour` into a single POSIXct variable.",2,17,FALSE,`weather`:
nycflights13,2a22d72ad3468b578510bd139a7377bc,• Saved as ungrouped.,2,18,FALSE,`weather`:
vroom,701d9565b34c9bfead2c9ac05262650a,Internal changes requested by CRAN around format specification (#524).,1,1,FALSE,NA
vroom,98745fa9087033325f92e5dde4c2d343,"It is now possible (again?) to read from a list of connections (@​bairdj, #514).",1,2,FALSE,NA
vroom,aa447a8d1304b026743b0750acce5fc9,"Internal change for compatibility with cpp11 \>= 0.4.6 (@​DavisVaughan, #512).",1,3,FALSE,NA
vroom,6519cd03e4d386b1685688fed7b56560,No user-facing changes.,1,4,FALSE,NA
vroom,f374a3249b15b0cba4e1c73c30b80e4c,There was no CRAN release with this version number.,1,5,FALSE,NA
vroom,0b645d4b8d3acfa4e4c17711298e63c2,"`str()` now works in a colorized context in the presence of a column of class `integer64`, i.e. parsed with `col_big_integer()` (@​bart1, #477).",1,6,FALSE,NA
vroom,a9623099842cfb1c8f2ceb9310f266fd,"The embedded implementation of the Grisu algorithm for printing floating point numbers now uses `snprintf()` instead of `sprintf()` and likewise for vroom's own code (@​jeroen, #480).",1,7,FALSE,NA
vroom,89572191954969bf8a7b3c7a28029841,`vroom(col_select=)` now handles column selection by numeric position when `id` column is provided (#455).,1,8,FALSE,NA
vroom,893dc6f9bcf3a7e60ae518a27a88cf59,"`vroom(id = ""path"", col_select = a:c)` is treated like `vroom(id = ""path"", col_select = c(path, a:c))`. If an `id` column is provided, it is automatically included in the output (#416).",1,9,FALSE,NA
vroom,b520e6299969211d5277492df30acf9c,"`vroom_write(append = TRUE)` does not modify an existing file when appending an empty data frame. In particular, it does not overwrite (delete) the existing contents of that file (https://github.com/tidyverse/readr/issues/1408, #451).",1,10,FALSE,NA
vroom,d01bb91e958b5dd1715a8aa15a9e637b,"`vroom::problems()` now defaults to `.Last.value` for its primary input, similar to how `readr::problems()` works (#443).",1,11,FALSE,NA
vroom,e01585b92182cff4a0e327a6e08b44d4,"The warning that indicates the existence of parsing problems has been improved, which should make it easier for the user to follow-up (https://github.com/tidyverse/readr/issues/1322).",1,12,FALSE,NA
vroom,3bae9c0d6bb8927540f0f5d2773c72c6,"`vroom()` reads more reliably from filepaths containing non-ascii characters, in a non-UTF-8 locale (#394, #438).",1,13,FALSE,NA
vroom,00102d5a211b824d4c1a28675b2a846c,"`vroom_format()` and `vroom_write()` only quote values that contain a delimiter, quote, or newline. Specifically values that are equal to the `na` string (or that start with it) are no longer quoted (#426).",1,14,FALSE,NA
vroom,22921b37207733a6fe9b3fc74d597d72,"Fixed segfault when reading in multiple files and the first file has only a header row of column names, but subsequent files have at least one row (#430).",1,15,FALSE,NA
vroom,fe7867b14e20cf9f05af4b0b9e197540,Fixed segfault when `vroom_format()` is given an empty data frame (#425),1,16,FALSE,NA
vroom,782821b7fdc211f2d3c56934ca393c3a,Fixed a segfault that could occur when the final field of the final line is missing and the file also does not end in a newline (#429).,1,17,FALSE,NA
vroom,ab98c22f0e2ebc309ef3e5246990595d,Fixed recursive garbage collection error that could occur during `vroom_write()` when `output_column()` generates an ALTREP vector (#389).,1,18,FALSE,NA
vroom,a5769a7c7113b58c199b6db913d3baf1,`vroom_progress()` uses `rlang::is_interactive()` instead of `base::interactive()`.,1,19,FALSE,NA
vroom,501feff9bc9fa771ce8cdbbb1b0485fe,"`col_factor(levels = NULL)` honors the `na` strings of `vroom()` and its own `include_na` argument, as described in the docs, and now reproduces the behaviour of readr's first edition parser (#396).",1,20,FALSE,NA
vroom,1c6fd767325d8e85035007e0b8ff1fef,Jenny Bryan is now the official maintainer.,1,21,FALSE,NA
vroom,b86d457cc82f12e119bdaf498eb0f532,Fix uninitialized bool detected by CRAN's UBSAN check (https://github.com/tidyverse/vroom/pull/386),1,22,FALSE,NA
vroom,e7d11cae022dd23555a9deda67680ea4,Fix buffer overflow when trying to parse an integer field that is over 64 characters long (https://github.com/tidyverse/readr/issues/1326),1,23,FALSE,NA
vroom,25474ff3fd22fb618553c830bffa0804,Fix subset indexing when indexes span a file boundary multiple times (#383),1,24,FALSE,NA
vroom,4a0daccbf39521ddfb4dc17617e26b16,`vroom(col_select=)` now works if `col_names = FALSE` as intended (#381),1,25,FALSE,NA
vroom,978e817338b9fbdeea5917d2635373ce,`vroom(n_max=)` now correctly handles cases when reading from a connection and the file does *not* end with a newline (https://github.com/tidyverse/readr/issues/1321),1,26,FALSE,NA
vroom,6efc1d7ac542b91353e9074dc8173186,`vroom()` no longer issues a spurious warning when the parsing needs to be restarted due to the presence of embedded newlines (https://github.com/tidyverse/readr/issues/1313),1,27,FALSE,NA
vroom,c68e90c5541286fb86843aee67e2e526,Fix performance issue when materializing subsetted vectors (#378),1,28,FALSE,NA
vroom,9dc77d7926ce40e414176ab1f5deb16e,"`vroom_format()` now uses the same internal multi-threaded code as `vroom_write()`, improving its performance in most cases (#377)",1,29,FALSE,NA
vroom,6bed7c8141230f1690bf5ba56de0028f,`vroom_fwf()` no longer omits the last line if it does *not* end with a newline (https://github.com/tidyverse/readr/issues/1293),1,30,FALSE,NA
vroom,df6c32e2e2e6e58de688999bf72c6d1f,Empty files or files with only a header line and no data no longer cause a crash if read with multiple files (https://github.com/tidyverse/readr/issues/1297),1,31,FALSE,NA
vroom,b5436e8f2a901a295e1727907b5df4e8,"Files with a header but no contents, or a empty file if `col_names = FALSE` no longer cause a hang when `progress = TRUE` (https://github.com/tidyverse/readr/issues/1297)",1,32,FALSE,NA
vroom,dae0cac29f8dae7251d49548ac11cee3,Commented lines with comments at the end of lines no longer hang R (https://github.com/tidyverse/readr/issues/1309),1,33,FALSE,NA
vroom,103327514d919d66117b672a6fc25d4e,Comment lines containing unpaired quotes are no longer treated as unterminated quotations (https://github.com/tidyverse/readr/issues/1307),1,34,FALSE,NA
vroom,66d23f44085175a0ce23ada12338e71e,"Values with only a `Inf` or `NaN` prefix but additional data afterwards, like `Inform` or no longer inappropriately guessed as doubles (https://github.com/tidyverse/readr/issues/1319)",1,35,FALSE,NA
vroom,966cc916d786e811bb6840fead3d9baf,"Time types now support `%h` format to denote hour durations greater than 24, like readr (https://github.com/tidyverse/readr/issues/1312)",1,36,FALSE,NA
vroom,320164f1033f58a8d3332ae28b6f368f,Fix performance issue when materializing subsetted vectors (#378),1,37,FALSE,NA
vroom,133b3dc1e4b92f965f126782442b1d96,"`vroom()` now supports files with only carriage return newlines (`\r`). (#360, https://github.com/tidyverse/readr/issues/1236)",1,38,FALSE,NA
vroom,9f069a7c9e1c3a15894ad3ebfd3468fb,`vroom()` now parses single digit datetimes more consistently as readr has done (https://github.com/tidyverse/readr/issues/1276),1,39,FALSE,NA
vroom,502ffec506a2826773d2972890c51ab4,`vroom()` now parses `Inf` values as doubles (https://github.com/tidyverse/readr/issues/1283),1,40,FALSE,NA
vroom,2ba435c29bcfbce08eed7b3e352bc6a1,`vroom()` now parses `NaN` values as doubles (https://github.com/tidyverse/readr/issues/1277),1,41,FALSE,NA
vroom,a9eca94b5727fb4fe853ab2fcdabd007,"`VROOM_CONNECTION_SIZE` is now parsed as a double, which supports scientific notation (#364)",1,42,FALSE,NA
vroom,c17062354bc68a58b91895cc07f3c490,"`vroom()` now works around specifying a `\n` as the delimiter (#365, https://github.com/tidyverse/dplyr/issues/5977)",1,43,FALSE,NA
vroom,f66faabccb5fb2f66c3b83a7f5859b66,`vroom()` no longer crashes if given a `col_name` and `col_type` both less than the number of columns (https://github.com/tidyverse/readr/issues/1271),1,44,FALSE,NA
vroom,40006e58e37f21b2c356764306ccda9d,`vroom()` no longer hangs if given an empty value for `locale(grouping_mark=)` (https://github.com/tidyverse/readr/issues/1241),1,45,FALSE,NA
vroom,65131d4061595caba566fd9eeb294e84,Fix performance regression when guessing with large numbers of rows (https://github.com/tidyverse/readr/issues/1267),1,46,FALSE,NA
vroom,d8b96e5947cf0ac77d659e116ca8222b,"`vroom(col_types=)` now accepts column type names like those accepted by utils::read.table. e.g. vroom::vroom(col_types = list(a = ""integer"", b = ""double"", c = ""skip""))",1,47,FALSE,NA
vroom,d01b8651ac6a4e26fa602b675d51563b,`vroom()` now respects the `quote` parameter properly in the first two lines of the file (https://github.com/tidyverse/readr/issues/1262),1,48,FALSE,NA
vroom,ab53e1a38213695f2538d34bfde0cdb8,`vroom_write()` now always correctly writes its output including column names in UTF-8 (https://github.com/tidyverse/readr/issues/1242),1,49,FALSE,NA
vroom,48034076ee8ce9d6bc00acf72fe9f8af,`vroom_write()` now creates an empty file when given a input without any columns (https://github.com/tidyverse/readr/issues/1234),1,50,FALSE,NA
vroom,7020663f403d80bd929b5c237717a48f,`vroom(col_types=)` now truncates the column types if the user passes too many types. (#355),1,51,FALSE,NA
vroom,1312353281c65e19c4e8d07a4dfe913a,`vroom()` now always includes the last row when guessing (#352),1,52,FALSE,NA
vroom,cb9521f48f90889dcd87020a7ed2dccd,`vroom(trim_ws = TRUE)` now trims field content within quotes as well as without (#354). Previously vroom explicitly retained field content inside quotes regardless of the value of `trim_ws`.,1,53,FALSE,NA
vroom,8ea301e6efffd2d4a365a52c40680465,`vroom()` now supports inputs with unnamed column types that are less than the number of columns (#296),1,54,FALSE,NA
vroom,f788fed74fe39a7f475b7dcc09f439b8,"`vroom()` now outputs the correct column names even in the presence of skipped columns (#293, tidyverse/readr#1215)",1,55,FALSE,NA
vroom,e4c562f4f2881ce408c8e2d2419ada81,`vroom_fwf(n_max=)` now works as intended when the input is a connection.,1,56,FALSE,NA
vroom,a6bbc2fb232040cace91a9139c70fdf2,"`vroom()` and `vroom_write()` now automatically detect the compression format regardless of the file extension for bzip2, xzip, gzip and zip files (#348)",1,57,FALSE,NA
vroom,64852c6bfe4cdac60fe3da307650a521,"`vroom()` and `vroom_write()` now automatically support many more archive formats thanks to the archive package. These include new support for writing zip files, reading and writing 7zip, tar and ISO files.",1,58,FALSE,NA
vroom,8a5674bcbf10be9eb66b5344fb11b1d3,`vroom(num_threads = 1)` will now not spawn any threads. This can be used on as a workaround on systems without full thread support.,1,59,FALSE,NA
vroom,0b19e3482234d54e8aabe7332ce57542,"Threads are now automatically disabled on non-macOS systems compiling against clang's libc++. Most systems non-macOS systems use the more common gcc libstdc++, so this should not effect most users.",1,60,FALSE,NA
vroom,b92cf975daad63864a070111c798d4df,Parsers now treat NA values as NA even if they are valid values for the types (#342),1,61,FALSE,NA
vroom,9ab046addba7e43b4c41b897c00b1a98,Element-wise indexing into lazy (ALTREP) vectors now has much less overhead (#344),1,62,FALSE,NA
vroom,f6ef8bd3c38512c40454ba6e0ed17bbe,New `vroom(show_col_types=)` argument to more simply control when column types are shown.,1,63,FALSE,NA
vroom,7da2098723aa5b20d611bc04d974d217,"`vroom()`, `vroom_fwf()` and `vroom_lines()` now support multi-byte encodings such as UTF-16 and UTF-32 by converting these files to UTF-8 under the hood (#138)",1,64,FALSE,NA
vroom,d0bd81d1270db6b43111f945ac5544f9,"`vroom()` now supports skipping comments and blank lines within data, not just at the start of the file (#294, #302)",1,65,FALSE,NA
vroom,30cd6b693f7b4d93a42fbc00a4bcf72e,"`vroom()` now uses the tzdb package when parsing date-times (@​DavisVaughan, #273)",1,66,FALSE,NA
vroom,083b5228298476138dff6091b7ff3c25,`vroom()` now emits a warning of class `vroom_parse_issue` if there are non-fatal parsing issues.,1,67,FALSE,NA
vroom,f5e725ef9d833c247e77c5517748c18f,`vroom()` now emits a warning of class `vroom_mismatched_column_name` if the user supplies a column type that does not match the name of a read column (#317).,1,68,FALSE,NA
vroom,deea9f941a1d06e0f0606ba61fed9873,"The vroom package now uses the MIT license, as part of systematic relicensing throughout the r-lib and tidyverse packages (#323)",1,69,FALSE,NA
vroom,bf0a944ccd48b1a7bc45277bda442625,\`vroom() correctly reads double values with comma as decimal separator (@​kent37 #313),1,70,FALSE,NA
vroom,dcd6329e2acc98e7af669e531e211709,`vroom()` now correctly skips lines with only one quote if the format doesn't use quoting (https://github.com/tidyverse/readr/issues/991#issuecomment-616378446),1,71,FALSE,NA
vroom,ad69baad2b4d9bf953da91a8a036ce0e,`vroom()` and `vroom_lines()` now handle files with mixed windows and POSIX line endings (https://github.com/tidyverse/readr/issues/1210),1,72,FALSE,NA
vroom,a55cbec0e52daa1a915f94102e239753,`vroom()` now outputs a tibble with the expected number of columns and types based on `col_types` and `col_names` even if the file is empty (#297).,1,73,FALSE,NA
vroom,92fa286ccdd2910937fd17094ecebcfc,`vroom()` no longer mis-indexes files read from connections with windows line endings when the two line endings falls on separate sides of the read buffer (#331),1,74,FALSE,NA
vroom,f7d6cfe87a34bdeb948d7fe6cada27cd,`vroom()` no longer crashes if `n_max = 0` and `col_names` is a character (#316),1,75,FALSE,NA
vroom,8ecec7a3b58de139fc5c768fcbcf81f0,`vroom()` now preserves the spec attribute when vroom and readr are both loaded (#303),1,76,FALSE,NA
vroom,2ac478693d48513c2b02f4380aa2ee58,`vroom()` now allows specifying column names in `col_types` that have been repaired (#311),1,77,FALSE,NA
vroom,999cd62f919134e0a17dd4fc621b3a5b,`vroom()` no longer inadvertently calls `.name_repair` functions twice (#310).,1,78,FALSE,NA
vroom,d26b75da11916d1a6d99f9674a52315e,`vroom()` is now more robust to quoting issues when tracking the CSV state (#301),1,79,FALSE,NA
vroom,fcfe42593f0eef71c43bf947acfa2fba,`vroom()` now registers the S3 class with `methods::setOldClass()` (r-dbi/DBI#345),1,80,FALSE,NA
vroom,c3c71d3b207384b1ce655e723edcfc84,"`col_datetime()` now supports '%s' format, which represents decimal seconds since the Unix epoch.",1,81,FALSE,NA
vroom,974d0e63fe436818870760730c9bdce3,"`col_numeric()` now supports `grouping_mark` and `decimal_mark` that are unicode characters, such as U+00A0 which is commonly used as the grouping mark for numbers in France (https://github.com/tidyverse/readr/issues/796).",1,82,FALSE,NA
vroom,2e73a687f1ed56e9fa4152ce1fda8efb,`vroom_fwf()` gains a `skip_empty_rows` argument to skip empty lines (https://github.com/tidyverse/readr/issues/1211),1,83,FALSE,NA
vroom,f91bd2ef4e5a394921e61bcc03fd955a,"`vroom_fwf()` now respects `n_max`, as intended (#334)",1,84,FALSE,NA
vroom,ff044dbf8216cb7079008c4341214964,`vroom_lines()` gains a `na` argument.,1,85,FALSE,NA
vroom,15cc8e72ddc87232ab04f1a79fd0b3d5,`vroom_write_lines()` no longer escapes or quotes lines.,1,86,FALSE,NA
vroom,5a315e6da087c68a862aa4828871ba43,`vroom_write_lines()` now works as intended (#291).,1,87,FALSE,NA
vroom,2c82a3974024083d525361a195a0ddf2,"`vroom_write(path=)` has been deprecated, in favor of `file`, to match readr.",1,88,FALSE,NA
vroom,6c726371271aa885ce400fd3264dc0fd,`vroom_write_lines()` now exposes the `num_threads` argument.,1,89,FALSE,NA
vroom,b1bc00fa33e9371c0377cbd9c5f6c717,`problems()` now prints the correct row number of parse errors (#326),1,90,FALSE,NA
vroom,a549ae00719f7d062fcd79bb88d8eefb,`problems()` now throws a more informative error if called on a readr object (#308).,1,91,FALSE,NA
vroom,3b9cfe8a3f89acd7d028580cf738d909,`problems()` now de-duplicates identical problems (#318),1,92,FALSE,NA
vroom,aa5e3862eed28d246eafd5dc9a432e6b,Fix an inadvertent performance regression when reading values (#309),1,93,FALSE,NA
vroom,b00acace9130ffb77cf03119f12177b8,`n_max` argument is correctly respected in edge cases (#306),1,94,FALSE,NA
vroom,be3a059f6830e3d159ea91c1814ea0c8,"factors with implicit levels now work when fields are quoted, as intended (#330)",1,95,FALSE,NA
vroom,f329bf50191d13d16b8421589b379f6f,Guessing double types no longer unconditionally ignores leading whitespace. Now whitespace is only ignored when `trim_ws` is set.,1,96,FALSE,NA
vroom,3ae38a71eef59cba6c12695f47c5b49d,vroom now tracks indexing and parsing errors like readr. The first time an issue is encountered a warning will be signaled. A tibble of all found problems can be retrieved with `vroom::problems()`. (#247),1,97,FALSE,NA
vroom,db26256de8c8988f3c351182c244ace8,Data with newlines within quoted fields will now automatically revert to using a single thread and be properly read (#282),1,98,FALSE,NA
vroom,56ccfdba89d92b6f3d21812e69cc9b02,"NUL values in character data are now permitted, with a warning.",1,99,FALSE,NA
vroom,208ae5c51e88614b1344e17276ded6d2,New `vroom_write_lines()` function to write a character vector to a file (#291),1,100,FALSE,NA
vroom,258f55630c4e429b32a30ccc844a68ae,"`vroom_write()` gains a `eol=` parameter to specify the end of line character(s) to use. Use `vroom_write(eol = ""\r\n"")` to write a file with Windows style newlines (#263).",1,101,FALSE,NA
vroom,d5ba90a09a8c7de11ee1de1fbfeddb61,Datetime formats used when guessing now match those used when parsing (#240),1,102,FALSE,NA
vroom,a5d38d312eb1373446cf17a96a651dc7,Quotes are now only valid next to newlines or delimiters (#224),1,103,FALSE,NA
vroom,4d03817ff050bba6c8e970941fd17585,"`vroom()` now signals an R error for invalid date and datetime formats, instead of crashing the session (#220).",1,104,FALSE,NA
vroom,01b10bd08f4c46fbfa753b1e8748c9f6,`vroom(comment = )` now accepts multi-character comments (#286),1,105,FALSE,NA
vroom,36ab84e80af45193f0ea31a94b1f41ed,`vroom_lines()` now works with empty files (#285),1,106,FALSE,NA
vroom,31baea9acbc7424f65316bee9b9fb821,Vectors are now subset properly when given invalid subscripts (#283),1,107,FALSE,NA
vroom,57626b8c5c75f35e27bf349f43f78f4c,"`vroom_write()` now works when the delimiter is empty, e.g. `delim = """"` (#287).",1,108,FALSE,NA
vroom,ca3840eea296481657a007b294075737,"`vroom_write()` now works with all ALTREP vectors, including string vectors (#270)",1,109,FALSE,NA
vroom,f9532d15688c761ddae8977f7be69327,An internal call to `new.env()` now correctly uses the `parent` argument (#281),1,110,FALSE,NA
vroom,2979005e7431e8852f4b476407d9fb67,Test failures on R 4.1 related to factors with NA values fixed (#262),1,111,FALSE,NA
vroom,82be00dfe9e6b10775c9c0921903ace8,"`vroom()` now works without error with readr versions of col specs (#256, #264, #266)",1,112,FALSE,NA
vroom,39d3013c9e5839d8b4d5df000638a72f,Test failures on R 4.1 related to POSIXct classes fixed (#260),1,113,FALSE,NA
vroom,55300574b34585d8ccca9f96e679fa2d,Column subsetting with double indexes now works again (#257),1,114,FALSE,NA
vroom,063ec8616d0b95e888b5379111720086,"`vroom(n_max=)` now only partially downloads files from connections, as intended (#259)",1,115,FALSE,NA
vroom,a76467cfae3fc9113210e8c0b47834b2,The Rcpp dependency has been removed in favor of cpp11.,1,116,FALSE,NA
vroom,0c1791c0b6fdcbef5b5150dfc721c3dc,`vroom()` now handles cases when `id` is set and a column in skipped (#237),1,117,FALSE,NA
vroom,f374dff00b09a211e661ae24ce37bc70,`vroom()` now supports column selections when there are some empty column names (#238),1,118,FALSE,NA
vroom,1e0d15f53582e2a5f35a88ffbe08878a,`vroom()` argument `n_max` now works properly for files with windows newlines and no final newline (#244),1,119,FALSE,NA
vroom,fc57dae04d72dc81f70f51924d453a4d,Subsetting vectors now works with `View()` in RStudio if there are now rows to subset (#253).,1,120,FALSE,NA
vroom,ad06a616dff1277c542bd07581093107,Subsetting datetime columns now works with `NA` indices (#236).,1,121,FALSE,NA
vroom,00c43aa8f5212b1cacd65ad8218f667e,`vroom()` now writes the column names if given an input with no rows (#213),1,122,FALSE,NA
vroom,b1496d620257cfe6d427a91f21d236d0,`vroom()` columns now support indexing with NA values (#201),1,123,FALSE,NA
vroom,55894e1b72d18d18b0307fe27d22dd9a,`vroom()` no longer truncates the last value in a file if the file contains windows newlines but no final newline (#219).,1,124,FALSE,NA
vroom,01eab8594c9ffe565e86aa0c256f012b,`vroom()` now works when the `na` argument is encoded in non ASCII or UTF-8 locales *and* the file encoding is not the same as the native encoding (#233).,1,125,FALSE,NA
vroom,0c28098f2bc7330319c4760b0b7a2d23,"`vroom_fwf()` now verifies that the positions are valid, namely that the begin value is always less than the previous end (#217).",1,126,FALSE,NA
vroom,05e178be26fe38d78852f751f3ad4d7d,`vroom_lines()` gains a `locale` argument so you can control the encoding of the file (#218),1,127,FALSE,NA
vroom,90bef29fde0b99a55ca96b6abbbfe592,`vroom_write()` now supports the `append` argument with R connections (#232),1,128,FALSE,NA
vroom,6430bf06599cdde21df7b77806e2ee40,`vroom_altrep_opts()` and the argument `vroom(altrep_opts =)` have been renamed to `vroom_altrep()` and `altrep` respectively. The prior names have been deprecated.,1,129,FALSE,NA
vroom,040aea66c369d70148bb4dcb34d98f14,"`vroom()` now supports reading Big Integer values with the `bit64` package. Use `col_big_integer()` or the ""I"" shortcut to read a column as big integers. (#198)",1,130,FALSE,NA
vroom,27fd115bd702bd57958efa6f2a6ce8a2,`cols()` gains a `.delim` argument and `vroom()` now uses it as the delimiter if it is provided (#192),1,131,FALSE,NA
vroom,e9d0fc0a19e274ec62987385082c4668,"`vroom()` now supports reading from `stdin()` directly, interpreted as the C-level standard input (#106).",1,132,FALSE,NA
vroom,2ee8b2a25d678a4e18e4b519c7d96bdb,"`col_date` now parses single digit month and day (@​edzer, #123, #170)",1,133,FALSE,NA
vroom,50a5172a4199c17cf232b6542fdcaa73,"`fwf_empty()` now uses the `skip` parameter, as intended.",1,134,FALSE,NA
vroom,92c9b608aa95580faba80ddede0af531,`vroom()` can now read single line files without a terminal newline (#173).,1,135,FALSE,NA
vroom,ae6a9c5a1ce91dea98d61810893ab102,`vroom()` can now select the id column if provided (#110).,1,136,FALSE,NA
vroom,1b58845f0a3904ef97cc293db886efad,`vroom()` now correctly copies string data for factor levels (#184),1,137,FALSE,NA
vroom,e7a213cfc0aeb7f905a891c57f86a770,"`vroom()` no longer crashes when files have trailing fields, windows newlines and the file is not newline or null terminated.",1,138,FALSE,NA
vroom,c47e351b1c16400870a0008a63f8cac7,"`vroom()` now includes a spec object with the `col_types` class, as intended.",1,139,FALSE,NA
vroom,628a3d7a14c43a72dfddaf35d45f2ec7,`vroom()` now better handles floating point values with very large exponents (#164).,1,140,FALSE,NA
vroom,028b8d8beb9038aabc61907b33d49424,"`vroom()` now uses better heuristics to guess the delimiter and now throws an error if a delimiter cannot be guessed (#126, #141, #167).",1,141,FALSE,NA
vroom,4373b154400c9773e321d7e7df86b827,`vroom()` now has an improved error message when a file does not exist (#169).,1,142,FALSE,NA
vroom,60a44fc5c81105c8bdd9dc048c2e4eef,"`vroom()` no longer leaks file handles (#177, #180)",1,143,FALSE,NA
vroom,d1888f9d8874826b5cef59ade86b9461,"`vroom()` now outputs its messages on `stdout()` rather than `stderr()`, which avoids the text being red in RStudio and in the Windows GUI.",1,144,FALSE,NA
vroom,abd36695954cf01d1eff3caed537fa9a,"`vroom()` no longer overflows when reading files with more than 2B entries (@​wlattner, #183).",1,145,FALSE,NA
vroom,e68ca036d57057498d17988be974e1dd,`vroom_fwf()` is now more robust if not all lines are the expected length (#78),1,146,FALSE,NA
vroom,4dfd6c2528d72b5a9e6933b626582389,`vroom_fwf()` and `fwf_empty()` now support passing `Inf` to `guess_max()`.,1,147,FALSE,NA
vroom,39d36cb20e2f9e0be7f6ddd918fb72d1,`vroom_str()` now works with S4 objects.,1,148,FALSE,NA
vroom,bba16e90a93a661c312599a76a982a23,`vroom_fwf()` now handles files with dos newlines properly.,1,149,FALSE,NA
vroom,c0ccadf653a72d6b2c623e2d5aa3c10b,`vroom_write()` now does not try to write anything when given empty inputs (#172).,1,150,FALSE,NA
vroom,c8ec37f65e2a4885ac268d7d30606519,"Dates, times, and datetimes now properly consider the locale when parsing.",1,151,FALSE,NA
vroom,4646f0bcdbf977c0d4974d98dfa7f33a,"Added benchmarks with *wide* data for both numeric and character data (#87, @​R3myG)",1,152,FALSE,NA
vroom,8d2e5d3788c271dc8986c4fb2a05ccf0,The delimiter used for parsing is now shown in the message output (#95 @​R3myG),1,153,FALSE,NA
vroom,42db8f843df454b8921f5c78096cde90,"The column created by `id` is now stored as an run length encoded Altrep vector, which uses less memory and is much faster for large inputs. (#111)",1,154,FALSE,NA
vroom,3c1cac60e02875b02c247c34dde956b1,`vroom_lines()` now properly respects the `n_max` parameter (#142),1,155,FALSE,NA
vroom,fe1ca5e50d6d20f010edca181057cd42,`vroom()` and `vroom_lines()` now support reading files which do not end in newlines by using a file connection (#40).,1,156,FALSE,NA
vroom,1cf465fff319caf8c0985b5be9b5d787,`vroom_write()` now works with the standard output connection `stdout()` (#106).,1,157,FALSE,NA
vroom,ba97b118890a961b5dea05e8cc73191a,`vroom_write()` no longer crashes non-deterministically when used on Altrep vectors.,1,158,FALSE,NA
vroom,48859ebd3bab3eaf5526c182f0240168,The integer parser now returns NA values for invalid inputs (#135),1,159,FALSE,NA
vroom,5b61c6ae9f4f11edfef3405ab43198b0,Fix additional UBSAN issue in the mio project reported by CRAN (#97),1,160,FALSE,NA
vroom,ca68c547d0508342ec92ee635748b133,Fix indexing into connections with quoted fields (#119),1,161,FALSE,NA
vroom,e2ed304d7772990c6a877216f7b74c4a,Move example files for `vroom()` out of `\dontshow{}`.,1,162,FALSE,NA
vroom,3d018bfff90abe6cd7a3a53dce2d595a,"Fix integer overflow with very large files (#116, #119)",1,163,FALSE,NA
vroom,7ae376539f470ab07dd5b83fbb0d2940,Fix missing columns and windows newlines (#114),1,164,FALSE,NA
vroom,3bce7de4785556be7e0352ae489ed03d,"Fix encoding of column names (#113, #115)",1,165,FALSE,NA
vroom,7c0c26abeabfe1886cef2b709b366c85,"Throw an error message when writing a zip file, which is not supported (@​metaOO, #145)",1,166,FALSE,NA
vroom,2bb057a63d6cf9d3403fbf9751628e73,"Default message output from `vroom()` now uses `Rows` and `Cols` (@​meta00, #140)",1,167,FALSE,NA
vroom,e48e9adca1231533c264b49a5f3405de,"`vroom_lines()` function added, to (lazily) read lines from a file into a character vector (#90).",1,168,FALSE,NA
vroom,50ef38141d29debc0df21f405eb97321,Fix for a hang on Windows caused by a race condition in the progress bar (#98),1,169,FALSE,NA
vroom,995bbe82de5945d4ee292c444442451b,Remove accidental runtime dependency on testthat (#104),1,170,FALSE,NA
vroom,a535f39d4eded58c8a5f87ba3c1e2a6e,"Fix to actually return non-Altrep character columns on R 3.2, 3.3 and 3.4.",1,171,FALSE,NA
vroom,9f9613afaefa9ef60e68802e8a1a162d,"Disable colors in the progress bar when running in RStudio, to work around an issue where the progress bar would be garbled (https://github.com/rstudio/rstudio/issues/4777)",1,172,FALSE,NA
vroom,1023498236a9ccc877b2840811d23c2e,Fix for UBSAN issues reported by CRAN (#97),1,173,FALSE,NA
vroom,b54714a544fdc2f8d8ceb9520f402034,Fix for rchk issues reported by CRAN (#94),1,174,FALSE,NA
vroom,485c38a420d0fb36e2aa40a9c27648d7,The progress bar now only updates every 10 milliseconds.,1,175,FALSE,NA
vroom,e975c573d99d4b052938548e3ba26599,Getting started vignette index entry now more informative (#92),1,176,FALSE,NA
vroom,7eb96875d6f9837b423e8c99cac25297,Initial release,1,177,FALSE,NA
vroom,78aad87e3abac5a0d236d491f74a1813,Added a `NEWS.md` file to track changes to the package.,1,178,FALSE,NA
available,9d26316ad75bfcb93c6afd96539d494c,"Removed Urban Dictionary support, as the udapi package is set to be archived.",1,1,FALSE,NA
available,26b143f421941bb7ff88ab82d4eb5691,Gábor Csárdi is now the maintainer.,1,2,FALSE,NA
available,eb632c3829fdefa9da13fcb586de995a,`get_wikipidia()` renamed to `get_wikipedia()`.,1,3,FALSE,NA
available,de237aaa96f1521f5200a27981ba6f62,"`valid_package_name()` now correctly checks a package name according to CRAN policy (@​KevCaz, #61).",1,4,FALSE,NA
available,4b8129e3096466bc1d211d6ea0285d63,Tests requiring network access are now skipped on CRAN.,1,5,FALSE,NA
available,44f2f8d59eff8020db3eb0c68a8332a3,"`BiocManager` is now preferred to `BiocInstaller` if both are installed (#44, @​luciorq).",1,6,FALSE,NA
available,ecdfcf787056e8224dd253dac7d0bdf2,`create()` now uses `usethis::create_package()` rather than the deprecated `devtools::create()`.,1,7,FALSE,NA
available,f3b6801e7f248afb8b923e1b52fcb6fd,"Add dialog when run interactively asking if urban dictionary results should be included, as they can potentially contain offensive results (#41).",1,8,FALSE,NA
available,8e8e6ba48c21f4618452866f5557cb3b,Use BiocManager for compatibility with future versions of R.,1,9,FALSE,NA
available,26fc442681305371e5cd4c904e7425b0,Filter own repo from GitHub results (#21).,1,10,FALSE,NA
available,22fe4c1e85c23837b8ab8f2a73cda1c7,`get_urban_data()` is now exported (#34).,1,11,FALSE,NA
available,a1a50d3fe866e2184efc0365a0f44daa,"No longer trimming r or R when proceeded by a vowel from search terms, as originally intended (#35).",1,12,FALSE,NA
available,acef414d088946777ef8126b0b6f70ec,Support for upcoming glue 1.3.0 release,1,13,FALSE,NA
available,697d25d0aa6da5fd24b22e77b3d2dd93,Initial release,1,14,FALSE,NA
bench,e7b4c9a832b3ccc0fc60d13bb205e028,Long unnamed `bench_expr` expressions are now truncated correctly when used as columns of a tibble (#94).,1,1,FALSE,NA
bench,64e862d1c131fca3f6d7c6d8244fc916,`bench_mark` tibbles now respect the knitr paged df option (#103).,1,2,FALSE,NA
bench,5080428346cdfdadc554bc6406095c8a,Fixed an issue where macOS specific C code paths were accidentally being used on GNU Hurd (#118).,1,3,FALSE,NA
bench,c0287a7f1d211e7e8a7becb3b62f8aa8,"Fixed `-Wstrict-prototypes` warnings, as requested by CRAN (#124).",1,4,FALSE,NA
bench,261640ff24ea9886660a62889b71f26c,"R \>=3.5.0 is now required, which is aligned with tidyverse standards.",1,5,FALSE,NA
bench,f89c08ffb6661489011e5d8b0e429002,bench now uses testthat 3e (#129).,1,6,FALSE,NA
bench,4e6fd201abea1e68a6effc5e4303dc5d,bench no longer Suggests mockery.,1,7,FALSE,NA
bench,81734702ec06c96765ccd245b2a4e6ad,Davis Vaughan is now the maintainer.,1,8,FALSE,NA
bench,1bdc8d7dcb8f64c5b12fd321c29a0333,"`autoplot.bench_mark()` again supports factor levels for `expression`, as intended (#82)",1,9,FALSE,NA
bench,eebe032d1647e3b496d1f0521449a7c3,`bench::mark()` and `bench::workout()` no longer support unquote and splice operators. This fixes inconsistencies in performance results with functions like `rlang::list2()` (#61).,1,10,FALSE,NA
bench,bd6ea077382362ed840e8e2ce5d1bf2f,bench has been re-licensed as MIT (#101).,1,11,FALSE,NA
bench,410a865f404f322cc83b619ab1456c71,"`mark()` columns memory, result and mem_alloc columns are now always included, even if they are unused.",1,12,FALSE,NA
bench,717ec85a116974a6cf7ed48a5a9729b8,"New `bench_process_memory()` function, to return the current and maximum memory used by the current process. This uses system functions to track memory, so can measure memory outside of R's GC heap.",1,13,FALSE,NA
bench,ab9b36e8f028dab2344c5ea5a033dba1,"New `workout_expressions()` function, a low-level function to workout a list of expressions, like those obtained via `parse()` from a file.",1,14,FALSE,NA
bench,50edd07e5143e1c7e853b8aaecd707f0,"`mark()` gains a `memory` argument to control if it records memory allocations, set `memory = FALSE` to disable recording memory allocations, which can be helpful when trying to benchmark long pieces of code with many allocations (#62).",1,15,FALSE,NA
bench,93865327ac6ab54b311d6571e219df0b,"`mark()` now permits empty arguments, e.g. accidental trailing commas (#61).",1,16,FALSE,NA
bench,1fd8b5f63bdcc7e962153ab1f6ae3479,`mark()` now errors correctly when the expressions deparsed length is different.,1,17,FALSE,NA
bench,fdc929f4e8ebaab18b256b4f14bc23f7,"`bench_expr` objects now work better with the upcoming versions of tibble and vctrs (@​romainfrancois, #64)",1,18,FALSE,NA
bench,e4dc2c4b76251170c7504608f2ff7f8d,"`autoplot.bench_mark()` provides a more informative error if the `ggbeeswarm` package is not installed (@​coatless, #69).",1,19,FALSE,NA
bench,2c2e3af2325a221d93061e00366545ea,"Update documentation of `bench_mark` columns (@​jdblischak, #67).",1,20,FALSE,NA
bench,99a2fd1ff1e522a0da6eddb205dbf5a5,`bench_memory()` examples no longer fail if they are run with R that does not have memory profiling capability (#56).,1,21,FALSE,NA
bench,8b83e2252c471c75104371900404133a,"`bench_expr` now has a class of `c(""bench_expr"", ""list"")` rather than `c(""bench_expr"", ""expression"")`, as it is really a list of calls rather than a true expression object. (https://github.com/r-lib/vctrs/issues/559)",1,22,FALSE,NA
bench,3692f4b0721b47364f55d52e20294940,"`summary.bench_mark()` gains a `time_unit` argument, so you can report all times in a consistent scale if desired (#18, #26).",1,23,FALSE,NA
bench,470ef2218f692504b2a941931842f4d5,"`bench_mark()` now checks for user interrupts, to allow you to stop benchmarking if it takes longer than you were expecting (#49).",1,24,FALSE,NA
bench,96fd0ce1fd554eff8f9cc42ca15ea1d6,New `bench_memory()` to capture just the memory allocated by an expression.,1,25,FALSE,NA
bench,6050f529da62b99019c96c27f72d13e0,`bench_time()` is now an alias for `system_time()`.,1,26,FALSE,NA
bench,865980ef006859b79276c374e2f19173,"`unnest.bench_mark()` is now compatible with the upcoming tidyr 1.0.0 (#48, #51)",1,27,FALSE,NA
bench,9cc18001529f8214fd570a196cbac28a,New `hires_time()` allows you to explicitly capture high resolution time points.,1,28,FALSE,NA
bench,a9d30e92b9caf516b0ccd07afa2d71f2,`workout()` a new function which makes timing multiple expressions in turn simpler.,1,29,FALSE,NA
bench,e84e1bab6bc8007d7f0aece85340ab43,"`mark()` now internally uses a tempfile rather than a textConnection, as the latter has a 100,000 character limit on some platforms (#27)",1,30,FALSE,NA
bench,61587049051c2035a8d26e44134fe8d1,`mark()` no longer returns the mean or max values and the column order has been tweaked to try and put the most interesting columns first (#37),1,31,FALSE,NA
bench,81c99b0beab7265c9ce8efbb7ac929f5,"Errors during evaluation now halt execution (#28, #43)",1,32,FALSE,NA
bench,231d29ce5eb4f3b197eb2e754a8074af,`scale_bench_time()` and `scale_bench_bytes()` now allow you to use a non-logarithmic scale.,1,33,FALSE,NA
bench,8b49b368b12f708c040c6394dd2b8b58,Add support for macOS versions prior to 10.12,1,34,FALSE,NA
bench,f8ec3aa2afca132848c458ab6a7761f6,"Disable load sensitive tests on CRAN, to avoid failures",1,35,FALSE,NA
bench,8cbab73e436cfc2130f8fd8fd54ba885,Added a `NEWS.md` file to track changes to the package.,1,36,FALSE,NA
callr,64430368ec97e15da88bcfb74b602307,No changes.,1,1,FALSE,NA
callr,4fc29b46adc2a0f3e38632e94601e0aa,"The `r_session$get_running_time()` method now returns the correct values, as documented (#241, @​djnavarro).",1,2,FALSE,NA
callr,deb994b80578982f32414046d8c6fb5c,callr now uses fully qualified function calls in the subprocess to avoid interference with functions defined in the global environment. I.e. `base::stderr()` instead of `stderr()`. Closes #246.,1,3,FALSE,NA
callr,e7d25c07892ef96f3bafd02e1a1d58d4,"Errors from callr now include the standard output (in `$stdout`) and standard error (in `stderr`) again. The standard output and error are also printed on error in non-interactive sessions, and a note is printed about them in interactive sessions.",1,4,FALSE,NA
callr,80a746fb344547a430703a2f0651ab25,"New function `add_hook()` to hook into the callr process startup and options. This is for experts and it is also currently experimental (#203, @​klmr).",1,5,FALSE,NA
callr,ffb72f8516ed167655adb439c33454ea,"When copying existing startup files, an additional newline is appended to protect against a missing newline at the end of the file. This would cause R ignore that line (#205).",1,6,FALSE,NA
callr,bbf8465262f8312d1787b3cbd7ee733e,"Serialization of objects passed between sessions now uses `compress=FALSE` by default. The default can be changed by setting the `callr.compress_transport` option (#223, @​dfalbel).",1,7,FALSE,NA
callr,d654123db8d0fb7fc35aec495a7d7cc5,"We have revamped callr's error objects, with lots of improvements to the output.",1,8,FALSE,NA
callr,eee469eb155b2e0085c2d70efa08589a,Reporting errors is much faster now (#185).,1,9,FALSE,NA
callr,4975c88b9cba810c06897c7cdc947811,The `user_profile` option of `r_vanilla()` defaults to `FALSE` now (#194).,1,10,FALSE,NA
callr,58ca009ef541760153cc5cbbc78ddf96,"It is now possible to set R environment variables (`R_ENVIRON_USER`, `R_PROFILE_USER`, etc.) via the `env` argument (#193).",1,11,FALSE,NA
callr,2a74ac87c8f2e2140d6d3171991cc78c,"callr now supports starting an R process with a different architecture, so on Windows 64-bit R can start a 32-bit R background process, and vice-versa (#95).",1,12,FALSE,NA
callr,db30f6b350637c5a691315902db97c4b,"callr now handles symbolic arguments properly, and does not evaluate them. E.g. `callr::r(function(x) x, list(quote(foobar)))` works now (#175).",1,13,FALSE,NA
callr,d97bbe99843c8d6f1c45093e6f8bd7ea,`callr::r_session` does not leak file descriptors now in the sub-process (#184).,1,14,FALSE,NA
callr,4fc9421a91068edbac4c7146c7628af8,`callr::r_session` now handles large messages from the subprocess well (#168).,1,15,FALSE,NA
callr,f6feba6c3d5a4b115e4291cc228ad65f,"callr can now pass the environment of the function to the subprocess, optionally. This makes it easier to call an internal function of a package in a subprocess. See the `package` argument of `r()`, `r_bg()`, `r_session$run()`, etc. (#147).",1,16,FALSE,NA
callr,31c025463b469ec38962bad4f1dec791,An `r_session` now exits if the load hook errors. This generates an error if the session is started with `wait = TRUE`. For `wait = FALSE` the first `$read()` operation will return with an error (#162).,1,17,FALSE,NA
callr,4a96db942bc991f998ca2f77f598f62d,"`default_repos()` now returns a list if `getOption(""repos"")` is a list, and a vector otherwise, on R 4.x.y as well.",1,18,FALSE,NA
callr,00ed3bf7341f97ff9ea8a542bf978f3b,"Improved error messages. Error messages are now fully printed after an error. In non-interactive sessions, the stack trace is printed as well.",1,19,FALSE,NA
callr,8a6d7eb4b57b58c5cce9e1ee8d72f29c,callr is now more careful when loading the local `.Rprofile` in the subprocess. This fixes issues with packrat and renv that use `.Rprofile` for setup (#139).,1,20,FALSE,NA
callr,e526f4925ff22958cdbe722e84a51d5b,"callr functions fail early if environment file is missing (#123, @​jdblischak)",1,21,FALSE,NA
callr,bc941974d9f1eafe832124376093ac24,All callr functions and background processes properly clean up temporary files now (#104).,1,22,FALSE,NA
callr,0be3926180ffa7a5eb7f326680cd026b,"callr now uses a more principled setup for the library path, and restores the related environment variables in the child process. This is a **breaking change** if you relied on having the library set in a `system()` subprocess of the callr subprocess (#114).",1,23,FALSE,NA
callr,00558de194a8fba8ad783b06275e7e08,Better printing of `rlang_error`s that happened in the subprocess.,1,24,FALSE,NA
callr,1f4522c7f382ea5e24c02f1490ae9748,"The stacking of error objects is slightly different now, as we keep the unmodified error from the subprocess in `$parent$error`.",1,25,FALSE,NA
callr,7889edf660078edfc757d938f6ad7a1b,"callr now loads `.Rprofile` files from the current working directory by default. This works better with packrat, renv, and other software that relies on a local profile for initialization (#131).",1,26,FALSE,NA
callr,6685dda8c9bbf5b42d6ab1d7ca49b408,`r_session` now avoids creating `data` and `env` objects in the global environment of the subprocess.,1,27,FALSE,NA
callr,3a93b6780ae83d8f9d32290d44fdd8ba,"New `$debug()` method for `r_session` to inspect the dumped frames in the subprocess, after an error.",1,28,FALSE,NA
callr,431aa30826164401f4b34f215d900988,"callr now sets the `.Last.error` variable for every uncaught callr error to the error condition, and also sets `.Last.error.trace` to its stack trace. If the error originates in the subprocess, then `.Last.error` is a hierarchical error object, and `.Last.error.trace` merges the traces from the two processes. See the `README.md` for an example.",1,29,FALSE,NA
callr,6fa2705e1b101c25b63500f11ce8fc15,"New `$traceback()` method for `r_session`, to run `traceback()` in the subprocess, after an error.",1,30,FALSE,NA
callr,20d32ea726c9c4895fdb74bc9040a44a,A callr subprocess now does not load any R packages by default.,1,31,FALSE,NA
callr,2aeb0c995e509f35288722de81c95ad7,"New vignette, that showcases `r_session`.",1,32,FALSE,NA
callr,b0dc3e2f24d94cb208d1bb6609dcadf5,"`r()`, `rcmd()` and `rscript()` can now redirect the standard error of the subprocess its standard output. This allows to keep them correctly interleaved. For this, you need to either set the `stderr` argument to the special string `""2>&1""`, or to the same output file as specified for `stdout`.",1,33,FALSE,NA
callr,2837f96ef58b0cb3daf439e380e509bd,"`r()`, `rcmd()` and `rscript()` now pass `...` arguments to `processx::run()`. `r_bg()` and `rcmd_bg()` pass `...` arguments to the `processx::process` constructor. For `r_process`, `rcmd_process` and `rscript_process` extra arguments can be specified as `options$extra`, these are also passed to the `processx::process` constructor (#100).",1,34,FALSE,NA
callr,f743c3f36b8cb984de057565c139b0cb,"`r()`, `r_bg()`, etc. now handle messages from the cliapp package properly. They used to make the R session exit.",1,35,FALSE,NA
callr,5459ef9c7a7a066a62f4d7ee97b14943,"Better default for the `repos` option in callr subprocesses. callr no longer creates duplicate ""CRAN"" entries. By default the new `default_repos()` function is used to set `repos` in the subprocess.",1,36,FALSE,NA
callr,221d33728b59426a1a00945c16af491f,"New `rscript()` function and `rscript_process` class to execute R scripts via `Rscript` (#40, #81).",1,37,FALSE,NA
callr,73c05c3196feac07a33b99f1a2f39425,"Library paths are now correctly set up for `system()` (and similar) calls from the callr subprocesses (#83, #84).",1,38,FALSE,NA
callr,a503e7bb6309d72a76a0f65c033fb85d,"Pass `options(""repos"")` to the child process as is, without checking. Closes #82.",1,39,FALSE,NA
callr,94cfd64499283124b238806d48686da2,`r_session$run_with_output()` now returns an S3 object with class `callr_session_result`.,1,40,FALSE,NA
callr,ed7250bcfd91572d38f47f19259bf25b,"`r_session$run*()` handle interrupts properly. It tries to interrupt the background process fist, kills it if it is not interruptible, and then re-throws the interrupt condition, going back to the top level prompt if the re-thrown condition is uncaught.",1,41,FALSE,NA
callr,e0a48f8a0b9e4e875e0d0f753c763484,New `r_session` class: a background R session you can send commands to (#56).,1,42,FALSE,NA
callr,deb3be674b0a725ceb072679aaf17f27,"Rewrote passing the library path to the subprocess (#73, #75)",1,43,FALSE,NA
callr,282cd99f8bdf21091b3720943bd2c102,"Retain names of the `repos` option (#67, @​jennybc)",1,44,FALSE,NA
callr,32a349e2074130bc748d251804f1ec2f,"pkgdown web site at https://callr.r-lib.org (#52, #53).",1,45,FALSE,NA
callr,bb5d01bfee382ce07d00e4f50149c2ba,"callr users `.Renviron` files now (and `R_ENVIRON_USER` as well), but overrides the library path, as requested in `r()`, etc. (#30).",1,46,FALSE,NA
callr,d277d543e20c250bdb43691b938e2654,callr now handles the case when the subprocess calls `quit()`.,1,47,FALSE,NA
callr,9a087094690be7a6b5f36510bf98b5ec,"callr now uses the processx package, instead of embedded code, to create and control processes.",1,48,FALSE,NA
callr,688686442c3a6c6dac0422c2f51a692f,The default behavior on error can be set now with the `callr.error` option.,1,49,FALSE,NA
callr,58078b2bef0702cb4803742b0adfb8a7,Better error message if the child R process crashes or gets killed. (#41),1,50,FALSE,NA
callr,09d41bfdbb8a397473ac68ef5bf681dd,`r_bg` and `rcmd_bg` now have the `supervise` option (#45).,1,51,FALSE,NA
callr,e165c2ac2f4860173c2997e9db02f485,"Fix a bug with R-devel, caused by the change on 2018-02-08: https://github.com/wch/r-source/commit/924582943706100e88a11d6bb0585d25779c91f5 #37, #38",1,52,FALSE,NA
callr,5560c44c56bdbfdb1bca81675cb5bf12,"Fix a race condition on Windows, when creating named pipes for `stdout` or `stderr`. The client sometimes didn't wait for the server, and callr failed with ERROR_PIPE_BUSY (231, All pipe instances are busy).",1,53,FALSE,NA
callr,e721cbbe6244a146a37be35891536c4f,Fix compilation issues on Solaris,1,54,FALSE,NA
callr,122c17a3a9efe71950f02d9e8e224551,Fix a test failure on macOS,1,55,FALSE,NA
callr,f453500abd7c1da4f0c837c4666647e6,"Run R or `R CMD` in the background, see `r_bg()`, `rcmd_bg()`, and also `r_process` and `rcmd_process`",1,56,FALSE,NA
callr,bda59d21a214c91cd1d5ee35933bf0ff,"The defaults for `r()` are safer now, the match the defaults of `r_safe()`. `r_safe()` is kept for compatibility. `r_copycat()` has the old `r()` defaults.",1,57,FALSE,NA
callr,2c63ef4f24762e7c0b6352ef2858f4f1,"The defaults for `rcmd()` are safer now, the match the defaults of `rcmd_safe()`. `rcmd_safe()` is kept for compatibility. `rcmd_copycat()` has the old `rcmd()` defaults.",1,58,FALSE,NA
callr,1853ece49bfe33666ec6812bc1e52694,"Support block callbacks, in addition to line callbacks. Block callbacks are called for arbitrary chunks of output, even without a newline",1,59,FALSE,NA
callr,89a7e4cad3f0106212e7b823a7e559d5,Add `spinner` argument to show a spinner in `r()` or `rcmd()`,1,60,FALSE,NA
callr,7ffcd80901560cc1bd7b3d4d308c281b,"Support timeouts, via the `timeout` argument",1,61,FALSE,NA
callr,f68fa5e3d6ab669ee0ea2b4ba17276c9,Fix bug when `stdout` and `stderr` are redirected to the same file,1,62,FALSE,NA
callr,b2cd652dedcee5628aeae5742f1c6df1,`rcmd_safe_env()` to allow extending the environment variables set in safe mode,1,63,FALSE,NA
callr,af0c4e55260b44d228844fed2ca0d46d,`rcmd()` gets a `fail_on_status` argument,1,64,FALSE,NA
callr,361638026dc80eb905d4c8a9fc9ac939,`rcmd()` gets an `echo` argument to potentially show the command to be run on the screen (#15),1,65,FALSE,NA
callr,44bcad5a258ac3e96af4f8359156054e,`rcmd()` gets a `wd` argument to set the working directory,1,66,FALSE,NA
clock,62a8b03046f3c9873a6d2513eeb85764,"New `year_week_day()` calendar for specifying a date using the year, the week number, and the day of the week, alongside a `start` value representing the day of the week that is considered the start of the week. Using `start = clock_weekdays$monday` is identical to the `iso_year_week_day()` calendar, and using `start = clock_weekdays$sunday` is useful for representing the Epidemiological calendar used by the US CDC guidelines (similar to what is supported by `lubridate::epiweek()` and `lubridate::epiyear()`) (#110).",1,1,FALSE,NA
clock,3c1b50232f52db40681f6257a0d67d6a,"New `date_spanning_seq()` for generating a regular sequence along the full span of a date or date-time vector (i.e. along `[min(x), max(x)]`). It is similar to `tidyr::full_seq()`, but is a bit simpler and currently has better handling of some edge cases. Additionally included in the low-level API are `calendar_spanning_seq()`, `time_point_spanning_seq()`, and `duration_spanning_seq()` (#279).",1,2,FALSE,NA
clock,6bfc568d35475d55d6ae565fc7213cb1,"New `date_time_info()` and `zoned_time_info()` low-level helpers for accessing the previous/next transition times, the offset from UTC, and the current time zone abbreviation (#295).",1,3,FALSE,NA
clock,18374815631c23c775df876c1d20a878,"`calendar_leap_year()` now supports the year-quarter-day and iso-year-week-day calendars (#332, #333).",1,4,FALSE,NA
clock,1c9f5f2b45516d67f14c5f9f6bbed69b,"The storage mechanism for the duration, sys-time, naive-time, and zoned-time types has been altered to more correctly represent the full range of values allowed by the underlying C++ types. This means that if you have serialized a value of one of these types with an old version of clock, then it will no longer unserialize correctly going forward. Technically, rather than storing a variable number of integer vectors representing ticks, ticks of a day, and ticks of a second, we now always store values of these types within two double vectors, regardless of the precision. This simplifies the implementation and allows us to represent the full range of possible `int64_t` values (#331).",1,5,FALSE,NA
clock,ebf087536bfc7c895c083084d959934d,`date_zone()` and `date_set_zone()` have been soft-deprecated in favor of `date_time_zone()` and `date_time_set_zone()` (#326).,1,6,FALSE,NA
clock,b59a18e7eea238680d502bb49e7a7634,"clock now compiles significantly faster (on a 2018 Intel Mac, it used to take \~70 seconds for a full compilation, and now takes \~25 seconds) (#322).",1,7,FALSE,NA
clock,1450c38099d0e60d6783e42c2d033c91,"`%%` and `%/%` operators now return a missing value when the right-hand side is `0`. For `%/%`, this is consistent with `2L %/% 0L`, which returns a missing value, rather than with `2 %/% 0`, which returns `Inf`, since infinite durations are not supported (#349).",1,8,FALSE,NA
clock,563806f2b7b9614f10d1a6f863d7551f,`seq()` methods for durations and time points handle the empty sequence cases of `from > to && by > 0` and `from < to && by < 0` better when `from` and `to` are very far apart (i.e. when they would otherwise result in overflow if they were subtracted).,1,9,FALSE,NA
clock,0cfba7fe3597d288bba799bbd56df9de,"`zoned_time_zone()` and `zoned_time_set_zone()` are no longer generic, and now only work for zoned-times.",1,10,FALSE,NA
clock,0139bd7c4f7a2bdfb4d563a6ed0b0de0,Documented clock's current stance on leap seconds in the FAQ vignette (clock ignores them like POSIXct) (#309).,1,11,FALSE,NA
clock,0d1893e75eddede9861bed8ce215a2b4,Duration vectors now work as `.before` and `.after` arguments of `slider::slide_index()` and friends (#306).,1,12,FALSE,NA
clock,96edbe9aa9c7b90b16f775868e11a2c8,"All `as_*()` generics exported by clock now include `...` in their signature to help with extensibility of converting to clock types. These are the only clock generics that are currently ""blessed"" as fully extensible (#348).",1,13,FALSE,NA
clock,b0b1f88aa589f0c5317cafb2fd79b46b,`as.character()` has been implemented for durations.,1,14,FALSE,NA
clock,64162b211bdfcb106e29acd1d6ef91f7,Fixed `vec_ptype_full()` and `vec_ptype_abbr()` methods for sys-time and naive-time objects (#302).,1,15,FALSE,NA
clock,3382d8d8b716e6b8e71b3a9e35c3b7b6,"Many errors have been improved (#219, #286, #595).",1,16,FALSE,NA
clock,2b9355c01642a0df00aeb5e5f1f162fc,Renamed `locale.h` to `fill.h` to avoid clock's `locale.h` being chosen over a system header of the same name on some CentOS machines (#310).,1,17,FALSE,NA
clock,85095ae9db28707ee9fc85550031f91e,Skipped a test on 32-bit architectures to work around a bug in base R (#312).,1,18,FALSE,NA
clock,3bad1da5a0ca8740904484ce49c4a3b8,"R \>=3.5.0 is now required, which is in line with tidyverse standards.",1,19,FALSE,NA
clock,4f62233e3161b6889744a4d3a9280ad9,vctrs \>=0.6.1 and rlang \>=1.1.0 are now required.,1,20,FALSE,NA
clock,114bc8ef2f962682fd200bcf3c5722c7,"`date_seq()` and the `seq()` methods for the calendar, time point, and duration types now allow `from > to` when `by > 0`. This now results in a size zero result rather than an error, which is more in line with `rlang::seq2()` and generally has more useful programmatic properties (#282).",1,21,FALSE,NA
clock,927d388fe78c42baee8b80a2939270f9,The sys-time method for `as.POSIXct()` now correctly promotes to a precision of at least seconds before attempting the conversion. This matches the behavior of the naive-time method (#278).,1,22,FALSE,NA
clock,22b5a4afe2a7bf550dc5113e6d780ae2,Removed the dependency on ellipsis in favor of the equivalent functions in rlang (#288).,1,23,FALSE,NA
clock,6523f26644cfaf4fa2122b79608a4df9,Updated tests related to writing UTF-8 on Windows and testthat 3.1.2 (#287).,1,24,FALSE,NA
clock,50d6a06cea9aa936cb3aacd99a1e27b3,Updated all snapshot tests to use rlang 1.0.0 (#285).,1,25,FALSE,NA
clock,a709a0bdab1060ff812cad61d5d895fe,tzdb \>=0.3.0 is now required to get access to the latest time zone database information (2022a).,1,26,FALSE,NA
clock,7d3a6cfb4ae5fecc3b7797e57d795b7f,vctrs \>=0.4.1 and rlang \>=1.0.4 are now required (#297).,1,27,FALSE,NA
clock,3a50ab82de3459811931f1addb6d87d8,cpp11 \>=0.4.2 is now required to ensure that a fix related to unwind protection is included.,1,28,FALSE,NA
clock,cc52dfff4af48a1d4e8f1bab09222dd0,R \>=3.4.0 is now required. This is consistent with the standards of the tidyverse.,1,29,FALSE,NA
clock,0c3324892f2a7c26030311a1cfc6abe1,"New `date_count_between()`, `calendar_count_between()`, and `time_point_count_between()` for computing the number of units of time between two dates (i.e. the number of years, months, days, or seconds). This has a number of uses, like computing the age of an individual in years, or determining the number of weeks that have passed since the start of the year (#266).",1,30,FALSE,NA
clock,a1f56764be3d6f0405520dd44405c528,Modulus is now defined between a duration vector and an integer vector through `<duration> %% <integer>`. This returns a duration vector containing the remainder of the division (#273).,1,31,FALSE,NA
clock,14768cb6118b52aaf28ad90bea541be0,"Integer division is now defined for two duration objects through `<duration> %/% <duration>`. This always returns an integer vector, so be aware that using very precise duration objects (like nanoseconds) can easily generate a division result that is outside the range of an integer. In that case, an `NA` is returned with a warning.",1,32,FALSE,NA
clock,7159d797c6dc096625689d1cc8395596,"New `date_time_parse_RFC_3339()` and `sys_time_parse_RFC_3339()` for parsing date-time strings in the RFC 3339 format. This format is a subset of ISO 8601 representing the most common date-time formats seen in internet protocols, and is particularly useful for parsing date-time strings returned by an API. The default format parses strings like `""2019-01-01T01:02:03Z""` but can be adjusted to parse a numeric offset from UTC with the `offset` argument, which can parse strings like `""2019-01-01T01:02:03-04:30""` (#254).",1,33,FALSE,NA
clock,9b84c9f59f96cec64176751162b445fa,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:",1,34,FALSE,NA
clock,9b84c9f59f96cec64176751162b445fa,• Date-times (POSIXct):,2,35,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `date_format()` now prints a `T` between the date and time.,3,36,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `date_time_parse_complete()` now expects a `T` between the date and time by default.,3,37,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,• Sys-times:,2,38,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `format()` and `as.character()` now print a `T` between the date and time.,3,39,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `sys_time_parse()` now expects a `T` between the date and time by default.,3,40,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,• Naive-times:,2,41,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `format()` and `as.character()` now print a `T` between the date and time.,3,42,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `naive_time_parse()` now expects a `T` between the date and time by default.,3,43,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,• Zoned-times:,2,44,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `format()` and `as.character()` now print a `T` between the date and time.,3,45,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `zoned_time_parse_complete()` now expects a `T` between the date and time by default.,3,46,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,• Calendars:,2,47,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `format()` and `as.character()` now print a `T` between the date and time.,3,48,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,9b84c9f59f96cec64176751162b445fa,‣ `year_month_day_parse()` now expects a `T` between the date and time by default.,3,49,FALSE,"To align more with RFC 3339 and ISO 8601 standards, the default formats used in many of the date formatting and parsing functions have been slightly altered. The following changes have been made:"
clock,958c65844514f37f3a637b677605b32c,Further improved documentation of undefined behavior resulting from attempting to parse sub-daily components of a string that is intended to be parsed into a Date (#258).,1,50,FALSE,NA
clock,e9284a37d9cf72508fd7a1397aa42af4,Bumped required minimum version of tzdb to 0.2.0 to get access to the latest time zone database information (2021e) and to fix a Unicode bug on Windows.,1,51,FALSE,NA
clock,6a078700b0c803e04937f2b9a05f1459,Updated a test related to upcoming changes in testthat.,1,52,FALSE,NA
clock,71af203f9a6f1ed73698db13522a1ce6,"New `date_start()` and `date_end()` for computing the date at the start or end of a particular `precision`, such as the ""end of the month"" or the ""start of the year"". These are powered by `calendar_start()` and `calendar_end()`, which allow for even more flexible calendar-specific boundary generation, such as the ""last moment in the fiscal quarter"" (#232).",1,53,FALSE,NA
clock,740e84318e139fb9dcdf8c2ea1de954b,"New `invalid_remove()` for removing invalid dates. This is just a wrapper around `x[!invalid_detect(x)]`, but works nicely with the pipe (#229).",1,54,FALSE,NA
clock,bf315666366ccc6eed64979f3bb5c0d4,"All clock types now support `is.nan()`, `is.finite()`, and `is.infinite()`. Additionally, duration types now support `abs()` and `sign()` (#235).",1,55,FALSE,NA
clock,5313d582ef8944f8a9a049adce02669a,"tzdb 0.1.2 is now required, which fixes compilation issues on RHEL7/Centos (#234).",1,56,FALSE,NA
clock,4f895a3c3768979b114e677d2e4a060b,"Parsing into a date-time type that is coarser than the original string is now considered ambiguous and undefined behavior. For example, parsing a string with fractional seconds using `date_time_parse(x)` or `naive_time_parse(x, precision = ""second"")` is no longer considered correct. Instead, if you only require second precision from such a string, parse the full string, with fractional seconds, into a clock type that can handle them, then round to seconds using whatever rounding convention is required for your use case, such as `time_point_floor()` (#230). For example:",1,57,FALSE,NA
clock,4f895a3c3768979b114e677d2e4a060b,"```
x <- c(""2019-01-01 00:00:59.123"", ""2019-01-01 00:00:59.556"")

x <- naive_time_parse(x, precision = ""millisecond"")
x
#> <time_point<naive><millisecond>[2]>
#> [1] ""2019-01-01 00:00:59.123"" ""2019-01-01 00:00:59.556""

x <- time_point_round(x, ""second"")
x
#> <time_point<naive><second>[2]>
#> [1] ""2019-01-01 00:00:59"" ""2019-01-01 00:01:00""

as_date_time(x, ""America/New_York"")
#> [1] ""2019-01-01 00:00:59 EST"" ""2019-01-01 00:01:00 EST""
```",1,58,TRUE,NA
clock,f92ff1bb8063539caa55c4020c6b08b2,Preemptively updated tests related to upcoming changes in testthat (#236).,1,59,FALSE,NA
clock,c9dd0c1145a5d61e0bb68111c9c58482,New `date_seq()` for generating date and date-time sequences (#218).,1,60,FALSE,NA
clock,00152efcda8ea47c5cebca13a8f839d6,clock now uses the tzdb package to access the date library's API. This means that the experimental API that was to be used for vroom has been removed in favor of using the one exposed in tzdb.,1,61,FALSE,NA
clock,2e412d4da066a43a41cce4e4b2edf3ac,`zone_database_names()` and `zone_database_version()` have been removed in favor of re-exporting `tzdb_names()` and `tzdb_version()` from the tzdb package.,1,62,FALSE,NA
clock,c1c2e4bde9300755a2689e0442562f10,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:,1,63,FALSE,NA
clock,c1c2e4bde9300755a2689e0442562f10,"• `date_zone()` now errors with Date input, as naive-times do not have a specified time zone.",2,64,FALSE,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:
clock,c1c2e4bde9300755a2689e0442562f10,"• `date_parse()` now parses into a naive-time, rather than a sys-time, before converting to Date. This means that `%z` and `%Z` are now completely ignored.",2,65,FALSE,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:
clock,c1c2e4bde9300755a2689e0442562f10,• The Date method for `date_format()` now uses the naive-time `format()` method rather than the zoned-time one. This means that `%z` and `%Z` are no longer valid format commands.,2,66,FALSE,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:
clock,c1c2e4bde9300755a2689e0442562f10,"• The zoned-time method for `as.Date()` now converts to Date through an intermediate naive-time, rather than a sys-time. This means that the printed date will always be retained, which is generally what is expected.",2,67,FALSE,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:
clock,c1c2e4bde9300755a2689e0442562f10,"• The Date method for `as_zoned_time()` now converts to zoned-time through an intermediate naive-time, rather than a sys-time. This means that the printed date will always attempt to be retained, if possible, which is generally what is expected. In the rare case that daylight saving time makes a direct conversion impossible, `nonexistent` and `ambiguous` can be used to resolve any issues.",2,68,FALSE,clock now interprets R's Date class as *naive-time* rather than *sys-time*. This means that it no longer assumes that Date has an implied time zone of UTC (#203). This generally aligns better with how users think Date should work. This resulted in the following changes:
clock,def97578440bc45397a35af5337abd88,"New `as_date()` and `as_date_time()` for converting to Date and POSIXct respectively. Unlike `as.Date()` and `as.POSIXct()`, these functions always treat Date as a naive-time type, which results in more consistent and intuitive conversions. Note that `as_date()` does conflict with `lubridate::as_date()`, and the lubridate version handles Dates differently (#209).",1,69,FALSE,NA
clock,a9ff97a05fd660e494f02f94db06b621,Added two new convenient helpers (#197):,1,70,FALSE,NA
clock,a9ff97a05fd660e494f02f94db06b621,• `date_today()` for getting the current date (Date),2,71,FALSE,Added two new convenient helpers (#197):
clock,a9ff97a05fd660e494f02f94db06b621,• `date_now()` for getting the current date-time (POSIXct),2,72,FALSE,Added two new convenient helpers (#197):
clock,1dc761fcea1f831fa0d77470eec562e3,Fixed a bug where converting from a time point to a Date or POSIXct could round incorrectly (#205).,1,73,FALSE,NA
clock,50f0ded2fa35176acd962fcf7c128ac3,Errors resulting from invalid dates or nonexistent/ambiguous times are now a little nicer to read through the usage of an info bullet (#200).,1,74,FALSE,NA
clock,89b0d8f9d952cf5b6b1da9e5ad8856ed,Formatting a naive-time with `%Z` or `%z` now warns that there were format failures (#204).,1,75,FALSE,NA
clock,28171d532c7c2e3bae02f5d5e159a4c5,"Fixed a Solaris ambiguous behavior issue from calling `pow(int, int)`.",1,76,FALSE,NA
clock,7d9af8f036aa89f137957a9c24132d3f,Linking against cpp11 0.2.7 is now required to fix a rare memory leak issue.,1,77,FALSE,NA
clock,ee73c95fc22de566562767faddfa0dd2,Exposed an extremely experimental and limited C++ API for vroom (#322).,1,78,FALSE,NA
clock,8be39fc09c481284bf6a396f273aa424,Added a `NEWS.md` file to track changes to the package.,1,79,FALSE,NA
conflicted,6a1a4ba4d7bd2576326abcb2c7de7f6a,"`conflict_scout()` refers to the package where the function was defined, for reexported functions (#93).",1,1,FALSE,NA
conflicted,9670be55a68e6cbb2c07f6fcaa93532c,`conflict_scout()` no longer returns functions whose conflicts have been resolved manually or automatically (#95).,1,2,FALSE,NA
conflicted,d4d7dee9d38fe0384e6b03d26a99cab1,"New `conflicts_prefer()` to easily declare multiple preferences at once: `conflicts_prefer(dplyr::filter, lubridate::week, ...)` (#82).",1,3,FALSE,NA
conflicted,f30d766260a694fd8cfe5be8c468ece4,Disambiguation message now provides clickable preferences (#74).,1,4,FALSE,NA
conflicted,f3ed1b7e2922cf37a3b31daf894c1994,Conflicts now take into account the `include.only` and `exclude` arguments that you might have specified in `library()` (#84).,1,5,FALSE,NA
conflicted,81a7828ea260c36f07980ffad3efe8c5,"`conflict_prefer_all()` and `conflict_prefer_matching()` are now much faster. And when `losers` is supplied, they only register the minimal necessary number of conflicts.",1,6,FALSE,NA
conflicted,ae52c4049f82ab4bf71d50d0edce3212,New `conflicted_prefer_all()` and `conflicted_prefer_matching()` to prefer functions en masse (#51).,1,7,FALSE,NA
conflicted,ad8b0b58a6b3c89eb66f449b91154491,Improvements to conflict detection and resolution:,1,8,FALSE,NA
conflicted,ad8b0b58a6b3c89eb66f449b91154491,• Reports conflicts involving lazy loaded datasets (#54).,2,9,FALSE,Improvements to conflict detection and resolution:
conflicted,ad8b0b58a6b3c89eb66f449b91154491,• Don't report conflicts involving a `standardGeneric` (#47).,2,10,FALSE,Improvements to conflict detection and resolution:
conflicted,ad8b0b58a6b3c89eb66f449b91154491,"• Better handling of conflicts cleared by superset principle: if there is a conflict all functions (including any base functions) are reported, and if there isn't a conflict, no packages are reported (instead of 1) (#47).",2,11,FALSE,Improvements to conflict detection and resolution:
conflicted,ad8b0b58a6b3c89eb66f449b91154491,• Don't report conflict between a function and a non-function (#30).,2,12,FALSE,Improvements to conflict detection and resolution:
conflicted,ad8b0b58a6b3c89eb66f449b91154491,"• Conflicts involving a primitive function no longer error (@​nerskin, #46, #48).",2,13,FALSE,Improvements to conflict detection and resolution:
conflicted,21f5a5ac45c38b009878e1de31cfe59d,Fixes for dev rlang,1,14,FALSE,NA
conflicted,76f59ff2053949d29446069adf9f418b,Fix \> vs \>= mistake,1,15,FALSE,NA
conflicted,0708d15e30d008d6a871d03a0a52eeab,Align with changes to R 3.6,1,16,FALSE,NA
conflicted,ff548ef77a1965509165c9027f779136,Internal `has_moved()` function no longer fails when it encounters a call to `.Deprecated()` with no arguments (#29).,1,17,FALSE,NA
conflicted,4154d4ac267bd910b5db7787df0ac9dd,`.conflicts` environment is correctly removed and replaced each time a new package is loaded (#28).,1,18,FALSE,NA
conflicted,e904dd97a6bad6b203e4d6e28bd2f42d,`conflict_scout()` reports all conflicts found with a set of packages.,1,19,FALSE,NA
conflicted,414e86d8d3d9eb53206f1ef4f8060dc9,`conflict_prefer()` allows you to declare a persistent preference (within a session) for one function over another (#4).,1,20,FALSE,NA
conflicted,602a4d2353a6a353e1fecc866b71ecd0,"conflicts now generally expects packages that override functions in base packages to obey the ""superset principle"", i.e. that `foo::bar(...)` must return the same value of `base::bar(...)` whenever the input is not an error. In other words, if you override a base function you can only extend the API, not change or reduce it. There are two exceptions. If the arguments of the two functions are not compatible (i.e. the function in the package doesn't include all arguments of the base package), conflicts can tell it doesn't follow the superset principle. Additionally, `dplyr::lag()` fails to follow the superset principle, and is marked as a special case (#2).",1,21,FALSE,NA
conflicted,e166063098be5a6ced6ae002085cfe5a,"Functions that have moved between packages (i.e. functions with a call to `.Deprecated(""pkg::foo"")`) as the first element of the function body) will never generate conflicts.",1,22,FALSE,NA
conflicted,339c6105722d419caa1ddfc5eaf09b11,conflicted now listens for `detach()` events and removes conflicts that are removed by detaching a package (#5),1,23,FALSE,NA
conflicted,c0ee7779741924a49f9863f2a8baf643,Error messages for infix functions and non-syntactic function names are improved (#14),1,24,FALSE,NA
debugme,74c0bd4014ef9a94029e3c0cca80e235,"Make sure code is not instrumented multiple times, which can happen if environments are referenced from multiple places",1,1,FALSE,NA
debugme,9c0c5ee7c018dc2c10401e90a9ff0618,"Fix instrumenting functions with attributes, the attributes are kept now. Some packages, e.g. `assertthat` create such functions.",1,2,FALSE,NA
debugme,2328d047d5797f6db648cc5ebf073ff3,"Support functions in lists and environments. In particular, this fixes debugging R6 methods (#15)",1,3,FALSE,NA
debugme,f10409288f70c40c54e3c6cc92b7c5f8,Support `DEBUGME_OUTPUT_DIR` (#19),1,4,FALSE,NA
debugme,530cc243ce289c7152354969f73cf6d6,Support log levels (#12),1,5,FALSE,NA
debugme,8091fb54177658c2a0f952cd8b5f4813,Fix functions without arguments (#17),1,6,FALSE,NA
debugme,06a673302c705a22746489852702a177,"Print the debug stack, optionally (@​kforner, #21)",1,7,FALSE,NA
debugme,6e4c43af9598af725108998e7e10b720,"Do not us `testthat::with_mock`, it interferes with the JIT that is default in R 3.4.0. Use the `mockery` package instead.",1,8,FALSE,NA
debugme,e7922dcf5e02df920ac8628e8205ca71,Fix a test case bug.,1,9,FALSE,NA
desc,61d99e1aa7e3f0a8dc4e8417f2d55305,`$set()` and `desc_set()` now can omit checks if `check = FALSE` is set.,1,1,FALSE,NA
desc,f9c1f520c7c35a443064b7254a622389,"The `description$write()` method, and thus all `desc_*()` functions work correctly now on R 4.3.x for packages that declare a non-UTF-8 encoding.",1,2,FALSE,NA
desc,79f28ff9ba6a2c1d3f22cc18c2fb4633,"The `$coerce_authors_at_r()` method now does a much better job at setting the authors' roles (#114, @​dpprdan).",1,3,FALSE,NA
desc,c939dbea8ae370d54ae50b60d571d7d5,"DESCRIPTION objects created with the `!new` command now omit `LazyData: true` to match new CRAN checks (#105, @​malcolmbarrett)",1,4,FALSE,NA
desc,9c682a6b0726d55bb920d649d69cf56c,`description$write()` now writes out the file in the correct encoding (#109).,1,5,FALSE,NA
desc,be47f4c3bb6d965b3504a5c3fa6a9906,`Authors@​R` fields are now formatted differently when normalizing a DESCRIPTION file (#78).,1,6,FALSE,NA
desc,e525bae1ff99d8345cc9ebdbf56ef93a,"New `description$get_list()`, `description$set_list()` and corresponding `desc_get_list()` and `desc_set_list()` values to query and create comma separated fields (#86).",1,7,FALSE,NA
desc,d487a1ac0a12a014f23b3cf42500f6f3,`desc_get_field()` gains a boolean `squish_ws` parameter to normalize whitespace within the retrieved value. It defaults to the value of `trim_ws` (`TRUE` by default). Example with desc's current DESCRIPTION: Old behaviour:,1,8,FALSE,NA
desc,d487a1ac0a12a014f23b3cf42500f6f3,"```
> desc::desc_get_field(""Description"")
[1] ""... DESCRIPTION files.\n    It is intended for packages ...""
```",1,9,TRUE,NA
desc,d487a1ac0a12a014f23b3cf42500f6f3,New behaviour:,1,9,FALSE,NA
desc,d487a1ac0a12a014f23b3cf42500f6f3,"```
> desc::desc_get_field(""Description"")
[1] ""... DESCRIPTION files. It is intended for packages ...""
```",1,10,TRUE,NA
desc,d487a1ac0a12a014f23b3cf42500f6f3,"If you want the old behaviour, just set `squish_ws = FALSE`.",1,10,FALSE,NA
desc,8b3a4554c61ee972ef6eda7ab5130df6,"Adding authors with long names or other fields (`comment`, typically) works well now (#91).",1,11,FALSE,NA
desc,25570879eca7721a35318eb3bd839fcb,`get_deps()` now removes unneeded whitespace from version requirements (#84).,1,12,FALSE,NA
desc,5601f8e39273c37fa0313e0413ba6a6f,`normalize()` now does not drop `Authors@​R` on non-UTF-8 systems when it has non-ASCII characters (#80).,1,13,FALSE,NA
desc,1cd6d3c970444c4eec541e1cf4d11fc1,"`has_dep()` now works well with dependencies listed multiple times (#97, @​richfitz).",1,14,FALSE,NA
desc,342c08a55bf4c79fb73c2429057551b0,"Add `coerce_authors_at_r()` method to convert `Author` to `Authors@​R` (#44, @​muschellij2).",1,15,FALSE,NA
desc,d2ddf789a0b9cc71d3ef4d49b48380b5,"`add_author()` and similar functions now allow a character vector of multiple roles (@​niceume, #89).",1,16,FALSE,NA
desc,64583f41ca97cce7322592ca424061ae,"`desc_set_deps()` now inserts new packages in (case-insensitive) alphabetical order, if the existing packages are already in alphabetical order.",1,17,FALSE,NA
desc,b0dd329cc626bc6de61a70f447292108,"New `add_author_gh()` method and `desc_add_author_gh()` function to add an author using the information available from GitHub V3 API. This method and function depend on `gh` and are limited when the GitHub user full name is incomplete or not well parsed by `as.person()` and when their email address isn't available (@​maelle, #71).",1,18,FALSE,NA
desc,f709dced981d862f5d827e8c0e8ebe4d,"When using `desc_normalize()` the package dependencies are now alphabetically sorted (#66, @​llrs).",1,19,FALSE,NA
desc,0825402c8d52d11f0019efaa9657d074,"New `add_orcid()` method and `desc_add_orcid()` functions make it possible to add ORCID IDs to authors directly instead of via the `comment` argument (@​maelle, #70).",1,20,FALSE,NA
desc,ed1ea2f612b2f8d09fa4ddcba9316235,"All functions and methods managing authors (`add_me`, `add_author()`, `del_author()`, `add_role()`, `del_role()`, `change_maintainer()`, `search_for_author()`, `add_me()`, etc.) gain an `orcid` argument (@​maelle, #70).",1,21,FALSE,NA
desc,61011334d8f99764e15dd3dfe2d97c69,"In `person()` within the `Authors@​R` field, `comment` can now be a named character vector (@​maelle, #69; @​gvegayon, #65).",1,22,FALSE,NA
desc,0818b7ba46f51a1dab4fd1ccdc20a59d,"When using `desc(text=)` parameter, set `textConnection(encoding = ""bytes"")` to handle cases when the input text is in a different marked encoding than the default encoding, such as UTF-8 input on Windows.",1,23,FALSE,NA
desc,6afb92eca744409558f7d9d87dbcbfdf,"Add `get_field()` method, with easier to use failure and fallback semantics (#62)",1,24,FALSE,NA
desc,70a1aafe12d026f763e763908245745d,"Use the `Encoding` field to read and write DESCRIPTION with the correct encoding. UTF-8 is always used internally by desc. (#52, #53)",1,25,FALSE,NA
desc,e5c7d100c144e57c047451eef713cb9d,"Add `get_built()` function to parse the Built field used in package binaries. (#48, @​jimhester)",1,26,FALSE,NA
desc,94ae281500354b7ae9a6504cb3a4fdd1,"`get_deps()` (and `desc_get_deps()`) return a zero-row data frame instead of `NULL` for packages without any dependencies, for consistency.",1,27,FALSE,NA
desc,fcff0352e4b019411b8753790d78a3cb,"Empty `DESCRIPTION` files are handled more gracefully, as are querying no fields with `desc_get()`",1,28,FALSE,NA
desc,d7c01c6367e5e6211bcb27e4bd2be6d4,"`Remotes`, `VignetteBuilder` and `RdMacros` fields are syntax checked. (#59, @​krlmlr)",1,29,FALSE,NA
desc,fece0289323fe69111ffef4cf6a0e57d,"Account for non-URL content in the `URL` field (#57, @​jennybc)",1,30,FALSE,NA
desc,bda2542cfe5d5d3cba54d8303a79a513,"Allow for IETF region subtag in `Language` field (#55, @​jeroen)",1,31,FALSE,NA
desc,821775a7fde479fdc36fa4eab573e345,Fix continuation lines in output,1,32,FALSE,NA
desc,6e5f1568e2caa34cd96e4c029a98f96d,"`get_deps()` returns empty data frame if no dependencies, instead of `NULL`",1,33,FALSE,NA
desc,dc2d15c2c075fd62a4a900afac1db56f,"Relax the R \>= 3.2.0 dependency, R 3.1.0 is enough now.",1,34,FALSE,NA
desc,8bafde9963de4162529586a8fb41eef9,Fix bug when adding authors and there is no `Authors@​R` field,1,35,FALSE,NA
desc,57c7df4654b21cc6edea842f894f1895,Get `DESCRIPTION` from package archives (#40),1,36,FALSE,NA
desc,55e9737b6c40d825f700ba60f375b48f,"Fix but in `del_dep()` and `has_dep()`, they only worked if the package was attached.",1,37,FALSE,NA
desc,1dcacbba1149e0627e9b268ffeae1711,"Fix formatting of `Collate` fields, they always start at a new line now.",1,38,FALSE,NA
desc,27e8c0f5bc2d4398d7d9c86425b5f3cb,"Fix formatting of `Authors@​R` fields, when changed.",1,39,FALSE,NA
desc,e59d997eb48042769432d00b587217f1,"Keep trailing space after the `:` character, see #14",1,40,FALSE,NA
devtools,9b5b566d89902eaff3f523de0e69ac44,`test_coverage()` now works if the package has not been installed.,1,1,FALSE,NA
devtools,ac16892b06e2b57ca12aeba648973a54,`test_coverage_active_file()` now reports if any tests failed and does a better job of executing snapshot comparisons.,1,2,FALSE,NA
devtools,1cca4ff5c53648c5a08c2071dcbc0547,`check(cleanup =)` was deprecated in devtools v1.11.0 (2016-04-12) and was made defunct in v2.4.4 (2022-07-20). The documentation is more clear now about recommended alternatives.,1,3,FALSE,NA
devtools,d188d8fdc0e00963d035b89d7e35f811,"`check(check_dir = NULL)` is the new default, to align with the default behaviour of the underlying `rcmdcheck::rcmdcheck()`.",1,4,FALSE,NA
devtools,01da1635f30e1abf0934e6b37824e9d5,"`check(cran = TRUE)` sets the env var `_R_CHECK_PACKAGES_USED_IGNORE_UNUSED_IMPORTS_` to `FALSE`, in order to surface the `""Namespace in Imports field not imported from""` NOTE. This only applies to R \>= 4.2, due to favorable changes in the behaviour of `R CMD check --as-cran` (#2459).",1,5,FALSE,NA
devtools,624db4cf2d3a7d1a87439867b9b34dbe,`test_active_file()` passes the package onto to testthat so it can correctly set the `TESTTHAT_PKG` envvar (#2470).,1,6,FALSE,NA
devtools,8485a811ec27fc822b3d71b4b55d4b2d,`test()` and `test_active_file()` once again work with testthat itself.,1,7,FALSE,NA
devtools,a9b5ebd2bcf5caf82e51fc7cd1a4d4e4,"`dev_mode()` is deprecated (@​billdenney, #2467).",1,8,FALSE,NA
devtools,0b814012f0f2b3cbc8e732ea09d5e8ea,`install(reload = TRUE)` now calls `pkgload::unregister()` instead of `pkload::unload()` (#2349). This allows the package to keep functioning if it is still in use in the R session (e.g. through event handlers).,1,9,FALSE,NA
devtools,0cacba309fe56cd4efe86a31217afbbc,`test()` no longer calls `load_all()` twice. `test_active_file()` now calls `load_all()` via testthat.,1,10,FALSE,NA
devtools,7674e414d6cb12f8f23537280dd71309,"`aspell_env_var()` does a better job of matching `R CMD check` behaviour, which is only to use `aspell`, not `hunspell` or `ispell` (#2376).",1,11,FALSE,NA
devtools,7719dda93dc6150e82df59b6a197f999,"Installing devtools now installs pkgdown, profvis, bench, miniUI, and urlchecker, ensuring that you have everything needed for package development (#2388).",1,12,FALSE,NA
devtools,44073e2b4a98b71f5a87b96c48063183,"`dev_sitrep()` has been updated for the calendar-based version number scheme adopted by the RStudio IDE in September 2021 (#2397, #2410).",1,13,FALSE,NA
devtools,304862fbfb4269f019f11e6f5b86978c,New `check_mac_release()` function to check a package using the macOS builder at https://mac.r-project.org/macbuilder/submit.html (#2375),1,14,FALSE,NA
devtools,483b55e5b8b18729b1e77452e8a65f7a,Jenny Bryan is now the official maintainer.,1,15,FALSE,NA
devtools,12a1226bd5d4f7e6a2bbbbc5678c4c7a,"`release()` and `submit_cran()` now record submission details using the Debian Control File format, for better machine-readability. This file has a new name, CRAN-SUBMISSION (instead of CRAN-RELEASE) and now includes package version, in addition to the full SHA and a timestamp.",1,16,FALSE,NA
devtools,094ad107219fdb824e725f2315807d0f,`check_man()` now works with R versions 4.1+ (#2354),1,17,FALSE,NA
devtools,a23450f1e408d7b0ac5c9ca9ca682797,`test_active_file()` now again works on windows projects stored under the user's home directory (`~`) (#2355),1,18,FALSE,NA
devtools,ee2382a89f168400ead4a478221dd52e,`document(quiet = TRUE)` now works without failure on windows (#2351),1,19,FALSE,NA
devtools,1a0f846ea456d0e1b58a4b28d0f55992,Minor test failure on R 4.2 has been fixed.,1,20,FALSE,NA
devtools,a3118354b46892663edaffdf771f91e7,New Rstudio addin for `run_examples()` (#2358),1,21,FALSE,NA
devtools,2244cddfe738a4c1bc8bafbd5efc87b0,"`build_readme()` now uses the `path` argument, as designed (#2344)",1,22,FALSE,NA
devtools,989d66b30a8f505d261257ecbb5ac746,"`create()` no longer opens projects by default to avoid duplicate projects opened by the RStudio IDE project template (#2347, @​malcolmbarrett)",1,23,FALSE,NA
devtools,fcdb193fe351c79da62147081f6db7b2,The RStudio addins now use `test_active_file()` and `test_coverage_active_file()` instead of the deprecated `test_file()` and `test_coverage_file()` (#2339),1,24,FALSE,NA
devtools,3a5c6ae13fad894f47484a87c642c7ff,"RStudio addins now run in interactive mode, rather than background mode (@​jennybc, #2350)",1,25,FALSE,NA
devtools,b5a1be2a83d4c0f2d4d720c091d8f84e,`install(upgrade)` now defaults to 'default' rather than 'ask'. This allows you to control the default asking behavior with the `R_REMOTES_UPGRADE` environment variable (#2345),1,26,FALSE,NA
devtools,f1ff3a29f6daa8ac9d8958cb81cebd2f,"The `check_results()` function has been removed. It was not used by any CRAN package, and much better alternatives are available in the rcmdcheck package.",1,27,FALSE,NA
devtools,288e3980d96db98e738db62f9f8e7719,`pkgload::inst()` is no longer re-exported (#2218).,1,28,FALSE,NA
devtools,a5d4fc850c65c30867ca81a385360394,"`test_file()` has been renamed to `test_active_file()` and `test_coverage_file()` has been renamed to `test_coverage_active_file()` to avoid a name collision with `testthat::test_file()`. The previous names have been soft deprecated in this release, they will be hard deprecated in the next release and eventually removed. (#2125)",1,29,FALSE,NA
devtools,db1660d0288cb1603624f758aebf7ae2,devtools is now released under a MIT license (#2326),1,30,FALSE,NA
devtools,3f64b5e79c4381c65c2204237a783c78,"`build_readme()` now supports readme files located in `inst/README.Rmd`, as intended (#2333)",1,31,FALSE,NA
devtools,523056a19088d6daf303392480bcacd0,"`build_vignettes()` now creates more specific `.gitignore` entries (@​klmr, #2317)",1,32,FALSE,NA
devtools,680a2b4e8006a3bffc5120eebe1abe28,`check()` now only re-documents if you have a matching version of roxygen2 (#2263).,1,33,FALSE,NA
devtools,4d7fd49c4067f7fa093c1abadf2db20e,"`change_maintainer_email()` now has a check to assess whether the email is actually changed. If the email is not changed, the code now stops such that an email is not accidentally sent to the wrong recipient. (@​emilsjoerup, #2073)",1,34,FALSE,NA
devtools,1d67176774e15b6c60fc02b4a141a68d,`run_examples(fresh = TRUE)` again works without error (#2264),1,35,FALSE,NA
devtools,d130e90476cef9b10b9df25102ed8898,The covr and DT packages have been moved from Imports to Suggests. They are only needed when running `test_coverage()` and `test_coverage_active_file()` so now you'll be prompted to install them when needed.,1,36,FALSE,NA
devtools,960ad11aad49a2bf48a0eacdb712491b,"Switched to fs for all file system functions (#2331, @​malcolmbarrett)",1,37,FALSE,NA
devtools,c8041b32f26b06fac9e56d7014eb8474,"Now uses testthat 3.0.0 to power `test()`, `test_active_file()`, `test_coverage()`, and `test_coverage_active_file()`. The major difference is that `test_active_file()` now generates a compact summary that takes up less space on the console.",1,38,FALSE,NA
devtools,183634ce80d1a7a464da22b0f6da6f79,Fix for compatibility with withr 2.3.0,1,39,FALSE,NA
devtools,f4100f3a1df07ad49b29d2b309368ae3,"`check_win_*()` function now resets the email to the original email after execution, this bug was fixed and crept back in (@​muschellij2, #2152).",1,40,FALSE,NA
devtools,da69152e7f6f8eebb19398b81c92e5ae,`run_examples()` arguments `run` and `test` are deprecated in favor of the (hopefully) more clear `run_dontrun` and `run_donttest` (pkgload/#107).,1,41,FALSE,NA
devtools,be6481b333e546795ae9e7aa311fac8b,Previously deprecated functions `dr_devtools()` and `dr_github()` have been removed.,1,42,FALSE,NA
devtools,67e28a31ca109bca0a822f12ed301dbd,Documentation has been synced with remotes 2.2.0,1,43,FALSE,NA
devtools,9a97578fba0e7e6737e3332f12b5a85b,`build()` now errors with a more informative error message when passed an invalid `pkg`. (#2177),1,44,FALSE,NA
devtools,afff6034349652b2b528914050ee8464,New `build_rmd()` can build any `.Rmd` file in a clean session.,1,45,FALSE,NA
devtools,53553cc3e4458ece02a72517692abd8b,`dev_sitrep()` now works correctly when R is out of date (#2204),1,46,FALSE,NA
devtools,ba7e5c922406ec22501d480ed70dc9b0,"`install_dev_deps()` now passes formal args onto `remotes::install_deps()` (@​t-gibson, #2166)",1,47,FALSE,NA
devtools,9e4bd9e067a3e30d0290048b8ae7c05d,"`spell_check()` now checks if `spelling` is installed and prompts users to install it if not (@​mikemahoney218, #2172)",1,48,FALSE,NA
devtools,885c97c1633efee4fc05db0695ff270d,`submit_cran()` now returns a more informative error when the CRAN submission portal is down (#1958),1,49,FALSE,NA
devtools,442bca3572d993a87a1db843e1b8be6e,"`check()` gains a `vignettes` argument, to more easily disable checks for vignettes (#2165).",1,50,FALSE,NA
devtools,4dd8c3042902d80717f711dfb96225a5,"`check_win_*()` function now resets the email to the original email after execution (@​muschellij2, #2152).",1,51,FALSE,NA
devtools,76dd7d46b5dd1a4a8330207d6b4c7331,"`check()` now sets `NOT_CRAN=true` by default, as was originally intended (#2135).",1,52,FALSE,NA
devtools,fa3225796748ef057e091a649a232a20,"`install_deps()` now supports `options(""devtools.ellipsis_action"")` as well (#2169)",1,53,FALSE,NA
devtools,f415325c45d507621d71cca4b45e142a,"`test()` now takes `stop_on_failure` as a formal argument (FALSE by default) instead of in `...`. Its value is still passed to `testthat::test_dir` as before (@​infotroph, #2129).",1,54,FALSE,NA
devtools,6723d8fb37aa5ab14f33e9dbc331ebbe,"`test()` and `test_coverage_file()` gain a `export_all` argument, which controls if all functions in a package are automatically exported (#1201).",1,55,FALSE,NA
devtools,9173c81b196a87eeffa7a0d3eea479d7,`dev_sitrep()` now works if run outside a package directory (#2127).,1,56,FALSE,NA
devtools,1f9d6c786784b71665f07679ce568f3e,`release()` now works if the package root is not in the working directory.,1,57,FALSE,NA
devtools,675cda3aed675536614e338d70d63b3b,"`test()` now sets the collation order to `C` before running, which matches the behavior of tests when run with `R CMD check` (#2121)",1,58,FALSE,NA
devtools,935134c4208f9062f2b323fd8c25a10d,"New `options(""devtools.ellipsis_action"")` option added to control the action of ellipsis in devtools. This should be one of",1,59,FALSE,NA
devtools,935134c4208f9062f2b323fd8c25a10d,• `rlang::abort` - to emit an error if arguments are unused,2,60,FALSE,"New `options(""devtools.ellipsis_action"")` option added to control the action of ellipsis in devtools. This should be one of"
devtools,935134c4208f9062f2b323fd8c25a10d,• `rlang::warn` - to emit a warning if arguments are unused,2,61,FALSE,"New `options(""devtools.ellipsis_action"")` option added to control the action of ellipsis in devtools. This should be one of"
devtools,935134c4208f9062f2b323fd8c25a10d,• `rlang::inform` - to emit a message if arguments are unused,2,62,FALSE,"New `options(""devtools.ellipsis_action"")` option added to control the action of ellipsis in devtools. This should be one of"
devtools,935134c4208f9062f2b323fd8c25a10d,"• `rlang::signal` - to emit a message if arguments are unused Using `rlang::signal` will produce no output unless the custom condition is caught, so it is the best way to retain backwards compatibility with devtools behavior prior to 2.2.0. The default behavior was also changed to issue a warning rather than an error if any arguments are unused, as there are some cases where devtools does not need to install the package, so unused arguments are false positives (#2109).",2,63,FALSE,"New `options(""devtools.ellipsis_action"")` option added to control the action of ellipsis in devtools. This should be one of"
devtools,4aebdedb7dd2ea5acaa7bc7c6875bcd0,"`install()` now throws an error when it fails, as intended (#2120)",1,64,FALSE,NA
devtools,9b752c3afc5c3c1a3a8343e195ca9d43,`install()` now again reloads and re-attaches packages if they were previously loaded (#2111).,1,65,FALSE,NA
devtools,b199b438d67d7ad8794d88123bded833,`release()` no longer calls the deprecated `dr_devtools()` (#2105),1,66,FALSE,NA
devtools,efb11be07a8639556b5385e60ebdce7e,"`test()` now explicitly passes `stop_on_failure = FALSE` to `testthat::test_dir()` (@​jameslamb, #2099)",1,67,FALSE,NA
devtools,0ac3e85d89ea84c67a11e96bc7eb0e62,"`create()` added back, the RStudio IDE uses `create()` in the create packages dialog, so removing it in version 2.1.0 broke old versions of the IDE.",1,68,FALSE,NA
devtools,e6c933a873e02d47fa70a7a4c221380f,New `dev_sitrep()` function to return information about your development environment and diagnose common problems. The former functions `dr_devtools()` and `dr_github()` have been deprecated. (#1970),1,69,FALSE,NA
devtools,a4acd1c8b22c159fedc1168df3c17764,All functions taking `...` now use the ellipsis package. This catches errors when arguments are misspelled or incorrectly specified (#2016),1,70,FALSE,NA
devtools,00492870126b09ca64f1bac3727a2938,`build_vignettes()` now correctly installs the vignette builder if it is not already installed (#2089).,1,71,FALSE,NA
devtools,03dbdf30923f2a58eb28b136420772d8,`dev_sitrep()` now uses the same endpoint to detect the current RStudio version as the IDE (#2050).,1,72,FALSE,NA
devtools,2fe738e15f47389624930004d4bcb181,"`document()` gains a `quiet` parameter, to silence output and `check()` now passes its quiet argument to it (#1986).",1,73,FALSE,NA
devtools,d9431ed584d72b7b8302ab0518ccbb10,"Add the DT package as a dependency, so that `test_coverage()` and `test_coverage_file()` work without having to install additional packages (#2085).",1,74,FALSE,NA
devtools,3aa369e2df96f4156b103b4cf45aab42,`check_man()` now succeeds when `tools::undoc()` returns empty results (#1944).,1,75,FALSE,NA
devtools,8ab632d442985366caef6c24b5f25dc4,"`check_win_*()` functions gain a `email` argument, so temporarily change the email the check results will be sent to (#1723).",1,76,FALSE,NA
devtools,3c486661791a81012df3bc9b1e14a745,`install()` now explicitly unloads packages before trying to install a new version (#2094).,1,77,FALSE,NA
devtools,91070acd813ad1759e89b53d2815ebba,"All `install_*()` functions now attach build tools to the PATH, which makes them work on Windows when RTools is not on the default PATH (#2093).",1,78,FALSE,NA
devtools,85b76a013ab7ae1036e137d041b558b6,`test_coverage_file()` now works when there is not a 1 to 1 correspondence between test and source files (#2011).,1,79,FALSE,NA
devtools,0d13a65dce75d331bba3ca9c6c1134fb,`release()` now works again when `pkg` is not the current working directory (#1974).,1,80,FALSE,NA
devtools,843670639ad84140741e2a74a2fef9f7,"`release()` now works without error when `options(""repos"")` is unnamed (#1956).",1,81,FALSE,NA
devtools,33255819beb09206e26badaa9a98fee9,"`create()` added, the RStudio IDE uses `create()`, so removing it in version 2.1.0 broke old versions of the IDE.",1,82,FALSE,NA
devtools,2a9ad926474fa16c95a3d6188cbbefae,"In several places `http:` URLs were used instead of `https:`, the most critical being in the `cran_mirror`, `cran_pacakges`, and `cran_submission_url` values which could have enabled discrete activity disclosure and person-in-the-middle attacks (i.e. changing the contents while uploading/downloading). All `http:` URLS have been changed to `https:` URLs. (@​hrbrmstr, #2091)",1,83,FALSE,NA
devtools,a811ae32727e0899ae33108c70327b20,"`testthat` and `roxygen2` are now added to `Imports` rather than `Suggests`, so they are automatically installed when you install devtools.",1,84,FALSE,NA
devtools,0be52049cb79fbed2777233ff9fb1c3a,"`create()`, `create_description()`, `setup()` `use_appveyor()`, `use_build_ignore()`, `use_code_of_conduct()`, `use_coverage()`, `use_cran_badge()`, `use_cran_comments()`, `use_data()`, `use_data_raw()`, `use_dev_version()`, `use_git()`, `use_git_hook()`, `use_github()`, `use_github_links()`, `use_gpl3_license()`, `use_mit_license()`, `use_news_md()`, `use_package()`, `use_package_doc()`, `use_rcpp()`, `use_readme_md()`, `use_readme_rmd()`, `use_revdep()`, `use_rstudio()`, `use_test()`, `use_testthat()`, `use_travis()`, `use_vignette()`, have been removed after being deprecated in previous releases. Use the versions in the usethis package directly.",1,85,FALSE,NA
devtools,57421dbd177ce6ec87964d7f918abf36,"`check_cran()`, `revdep_check()`, `revdep_check_print_problems()`, `revdep_check_reset()`, `revdep_check_resume()`, `revdep_check_save_summary()`, `revdep_email()` have been removed after being deprecated in previous releases. It is recommended to use the revdepcheck package instead.",1,86,FALSE,NA
devtools,0f320d8165bdd2a48b6a23eea57439d4,"`system_check()`, `system_output()` have been removed after being deprecated in previous releases. It is recommend to use the processx package instead.",1,87,FALSE,NA
devtools,a99fc0293d19d84722cc8ce642ff1f11,"`build_win()` has been removed, after being deprecated in previous releases.",1,88,FALSE,NA
devtools,6ffd3aca247824a27f3a4c20d4f4c1a5,"`yesno()` as used in `release()` now has clearer synonyms for ""yes"" (@​mattmalin, #1993)",1,89,FALSE,NA
devtools,af24d76b4dd455a08ddc8172c10c52ce,"`check_rhub` gains a new argument `build_args` for arguments passed to `R CMD build`. `...` is now passed to `rhub::check_for_cran()` (@​gaborcsardi, @​maelle, #2041)",1,90,FALSE,NA
devtools,8ec0f270e5d7b91bd51d2ee7c5e50043,`build_manual()` now fails if the manual fails to build. (#2056),1,91,FALSE,NA
devtools,dc7c70e670b1093d19336006a80badc1,`test_file()` and `test_coverage_file()` now work with C and C++ files in the src/ directory as well.,1,92,FALSE,NA
devtools,0bdf4ce59dcf63864af1cac7ec4d1f33,"Two tests are now skipped when run on CRAN, as they fail due to an outdated pandoc and restrictions on writing to the package library respectively.",1,93,FALSE,NA
devtools,8fb4c2a62c2f56f325eef91b9626adb5,"`load_all()` now accepts 'package' objects, regaining previous behavior in devtools prior to 2.0.0 (#1923)",1,94,FALSE,NA
devtools,e7cb616f0f855af107dd9cf181c3464a,"`test()`, `test_coverage()` and `test_coverage_file()` now set the `TESTTHAT_PKG` environment variable, so it is more consistent with running the tests during `R CMD check` (testthat#787).",1,95,FALSE,NA
devtools,730f189304bc65fc2708f669ad2d5921,`check()` now replaces existing environment variables rather than appending them (#1914).,1,96,FALSE,NA
devtools,1ce7f98ce0427e00139380788afe26eb,"`install()` now correctly passes the `upgrade` parameter to `remotes::install_deps()` (@​Paxanator, #1898).",1,97,FALSE,NA
devtools,97aeec2e3d961cecb6fbf9edc9985394,`install_deps()` now again works from any directory within a package (#1905),1,98,FALSE,NA
devtools,4669ce2130dc9b394d6d32a0c0b04955,Add a RStudio addin for `test_coverage()`.,1,99,FALSE,NA
devtools,e689c3560885c473937a22dd9ed4968a,"All tests which use remote resources are now skipped on CRAN, to avoid spurious failures",1,100,FALSE,NA
devtools,9dd92ecbd3bfaa483410e2f79a7a3622,remotes: Installing packages (i.e. `install_github()`).,1,101,FALSE,NA
devtools,8900091f6ef6bcd5c91368d416a0ffba,pkgbuild: Building binary packages (including checking if build tools are available) (i.e. `build()`).,1,102,FALSE,NA
devtools,dd30033f58baf86ea3c1ca89e43a3088,pkgload: Simulating package loading (i.e. `load_all()`).,1,103,FALSE,NA
devtools,77c934b7752a6b6634c0e8ea0b5bc4e6,rcmdcheck: Running R CMD check and reporting the results (i.e. `check()`).,1,104,FALSE,NA
devtools,e0547a9ecdc54c9cddf07c822aff9f23,"revdepcheck: Running R CMD check on all reverse dependencies, and figuring out what's changed since the last CRAN release (i.e. `revdep_check()`).",1,105,FALSE,NA
devtools,4b6b84a7df8ccc95b1c7ea347a24d540,sessioninfo: R session info (i.e. `session_info()`).,1,106,FALSE,NA
devtools,904a28f05ab520689a937e566e7a33b4,usethis: Automating package setup (i.e. `use_test()`).,1,107,FALSE,NA
devtools,0af66cd75ef09e4a8504c8be5817899f,`devtools::install()` arguments have been changed as follows.,1,108,FALSE,NA
devtools,0af66cd75ef09e4a8504c8be5817899f,• `local` -\> `build`,2,109,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,• `force_deps` -\> `force`,2,110,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,• `upgrade_dependencies` -\> `upgrade`,2,111,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,"• `threads` -\> Removed, but you can use `Ncpus`, which is passed by `...` to `install.packages()`",2,112,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,• `metadata` -\> Removed,2,113,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,• `out_dir` -\> Removed,2,114,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,0af66cd75ef09e4a8504c8be5817899f,• `skip_if_log_exists` -\> Removed,2,115,FALSE,`devtools::install()` arguments have been changed as follows.
devtools,d2858bfd77752709a9757c81d4f37baf,`check()` argument `check_version` has been renamed to `remote` to better describe what tests are disabled (#1811),1,116,FALSE,NA
devtools,9de466d86cd12f0498b5f3ca9bbabb51,"`get_path()`, `set_path()`, `add_path()` and `on_path()` have been removed, this functionality is available with `withr::with_path()` (#1796).",1,117,FALSE,NA
devtools,f5df10cfbd945794f6fe17cfc9dc47f6,"The `lang` argument to `spell_check()` was removed, for compatibility with spelling v1.1. (#1715)",1,118,FALSE,NA
devtools,a68784cf8558b83bd3b9016d956283d5,The previously deprecated `with_` functions have now been removed. The functionality has been moved to the **withr** package.,1,119,FALSE,NA
devtools,c845440850ade4529a7dab34d37f3be6,"`RCMD()`, `clean_source()`, `eval_clean()` and `evalq_clean()` have been removed. These functions never worked terribly well, and have been replaced by the much better functions in **callr**.",1,120,FALSE,NA
devtools,02ddcdf39fc016ce9265107dfcf010ad,"`build_win()` has been renamed to `check_win_release()`, `check_win_devel()`, and `check_win_oldrelease()` (#1598).",1,121,FALSE,NA
devtools,72c2397e36a95e8406525e6c187a917a,Infrastructure functions (`use_*`) now use the implementations in **usethis** and the versions in **devtools** are deprecated. If you use these from a package you should switch your package to depend on **usethis** directly instead.,1,122,FALSE,NA
devtools,2bd152fa45ce22e901f9b2e46ed97378,The `revdep_check_*` functions have been deprecated in favor of the **revdepcheck** package.,1,123,FALSE,NA
devtools,ce185c6bdda0f76410cad765d59df11d,`system_check()` and `system_output()` have been deprecated in factor of the **processx** package.,1,124,FALSE,NA
devtools,63e0328ac5a50d0113b977e400af1258,All `install_*()` functions are now re-exported from **remotes** rather than being defined in **devtools**,1,125,FALSE,NA
devtools,c4dcad9dbafe0bc91cce70b1233a0e8b,**devtools** now depends on **roxygen2** 6.1.0: this considerably simplifies `devtools::document()` and makes it more consistent with `roxygen2::roxygenise()`.,1,126,FALSE,NA
devtools,9713d7778f586d31a5f53465dba00033,`test_file()` function added to test one or more files from a package (#1755).,1,127,FALSE,NA
devtools,010d6f267fba171bc228fa41e11fa4b2,`test_coverage()` function added to provide a helper to compute test coverage using **covr** (#1628).,1,128,FALSE,NA
devtools,4976ae4542e1ff4dd3e791dfaca5c779,`test_file()` and `test_coverage_file()` now have RStudio addins (#1650),1,129,FALSE,NA
devtools,df5ff3955bcae15dd13dcfc4c51e1d6e,`test_file_coverage()` function added to show the test coverage of one or more files from a package. (#1755).,1,130,FALSE,NA
devtools,88f2155bcca42b27835c4c0e74e7ee74,`session_info()` now uses the implementation in the **sessioninfo** package. Packages using `devtools::session_info()` are encouraged to switch to using `sessioninfo::session_info()` instead.,1,131,FALSE,NA
devtools,2a77ff7999145fa000633715ab3b9048,`package_info()` function now re-exported from the **sessioninfo** package.,1,132,FALSE,NA
devtools,2033e5de41ae4b776d346f1d63d800fc,`check()` now uses **rcmdcheck** to run and parse R CMD check output (#1153).,1,133,FALSE,NA
devtools,27729e46eaddb50f5dbd89b4dd950924,"Code related to simulating package loading has been pulled out into a separate package, **pkgload**. The following functions have been moved to pkgload without a shim: `clean_dll()`, `compile_dll()`, `dev_example()`, `dev_help()`, `dev_meta()`, `find_topic()`, `imports_env()`, `inst()`, `load_code()`, `load_dll()`, `ns_env()`, `parse_ns_file()`, `pkg_env()`. These functions are primarily for internal use. `load_all()` and `unload()` have been moved to pkgload, but **devtools** provides shims since these are commonly used.",1,134,FALSE,NA
devtools,8bf41a013e492421e287186a9dc78c68,"`find_rtools()`, `setup_rtools()`, `has_devel()`, `compiler_flags()`, `build()` and `with_debug()` have moved to the new **pkgbuild** package. `build()` and `with_debug()` are re-exported by **devtools**",1,135,FALSE,NA
devtools,2c3f3b998d1647e4ad0d2e8a7f268388,The `spell_check()` code has been moved into the new **spelling** package and has thereby gained support for vignettes and package wordlists. The **devtools** function now wraps `spelling::spell_check_package()`.,1,136,FALSE,NA
devtools,dac1c2a7b6466400a1006b3e69d7e12a,`check_win_*()` now build the package with `manual = TRUE` by default (#1890).,1,137,FALSE,NA
devtools,9d5ce46a92228f2e46ec5985cd7db75d,`check()` output now works more nicely with recent changes to **rcmdcheck** (#1874).,1,138,FALSE,NA
devtools,b7ef2271dcbce013cd6bcd2cd481b308,`reload()` now reloads loaded but not attached packages as well as attached ones.,1,139,FALSE,NA
devtools,0046b03869cbf0f901d96cdb20122f98,"Executed `styler::style_pkg()` to update code style (#1851, @​amundsenjunior).",1,140,FALSE,NA
devtools,b2938c1c737000a6e58a4c0a27a971f6,"`save_all()` helper function wraps `rstudioapi::documentSaveAll()` calls (#1850, @​amundsenjunior).",1,141,FALSE,NA
devtools,cf3fff188c672e862ec41b60d678b21d,`check()` now allows users to run without `--timings` (#1655),1,142,FALSE,NA
devtools,dab4089ad0b89887e5d9857b2e2ec8a2,`update_packages()` better documented to advertise it can be used to update packages installed by any of the `install_*` functions.,1,143,FALSE,NA
devtools,bc1ad036a6963d7fe03d5f4f89565647,`check()` gains a `incoming` option to toggle the CRAN incoming checks.,1,144,FALSE,NA
devtools,809ebb13d2fc5d23a6127d4eb01b4cc0,`build_vignette()` gains a `keep_md` option to allow keeping the intermediate markdown output (#1726),1,145,FALSE,NA
devtools,ae70676cf476faf413a7d985be26fed9,"`remote_sha.github()` now correctly looks up SHA in private repositories (#1827, @​renozao).",1,146,FALSE,NA
devtools,8772918aa55ef23c90079e93df958f27,**devtools** `use_*()` functions now temporarily set the active **usethis** project if given a pkg argument that is not the current directory. This provides backwards compatibility with previous behavior (#1823).,1,147,FALSE,NA
devtools,1bcf1ac05439262369e2abcf524da361,"Vignettes are now built in a separate process, and the package is installed before building the vignettes (#1822)",1,148,FALSE,NA
devtools,1ee08edf1a912b787285bbd2ff08b79e,`build_readme()` added to build the README.md from a README.Rmd (#1762),1,149,FALSE,NA
devtools,25e208e7abb633c71b930bb8bc612f42,"`build_vignettes()` now has a `clean` and `upgrade` arguments, to control cleaning of intermediate files and upgrading vignette dependencies respectively. (#1770).",1,150,FALSE,NA
devtools,c595c92b6de86a7ee02ec68a02b90a2d,"`release()` gains an additional question ensuring you updated codemeta.json if one exists (#1774, #1754)",1,151,FALSE,NA
devtools,f6621175bd0fa7e09d15312499d81a2b,`test()` now sets `useFancyQuotes = FALSE` to better mimic the environment tests are run under with `R CMD check` (#1735).,1,152,FALSE,NA
devtools,c54606966cd8e40487e3a3364e06b09c,`test()` no longer passes encoding argument to `testthat::test_dir()` (#1776),1,153,FALSE,NA
devtools,16708720af6428902f77390f85dee0f3,`install_url()` can now install package binaries on windows (#1765),1,154,FALSE,NA
devtools,3771ba421572d6e64df07730aae87a45,Fix skipping when installing from a full SHA (#1624),1,155,FALSE,NA
devtools,d7ac0275e65a5211ec541e75c48984f6,"add `pkgdown::build_site()` wrapper (@​kiwiroy, #1777)",1,156,FALSE,NA
devtools,ca7070484c96c33802cf210edc7f96de,"add pkgdown site (https://devtools.r-lib.org) (#1779, @​jayhesselberth)",1,157,FALSE,NA
devtools,6d1932b171e81278bbc2873f6be7800d,"`install_version()` can now install current version of CRAN package on Windows and macOS (@​jdblischak, #1730)",1,158,FALSE,NA
devtools,5485709c591c6d951c0e06bed87c27a7,The CRAN-RELEASE file is now added to .Rbuildignore (#1711),1,159,FALSE,NA
devtools,35e55fc3b623ceb5811a0cd7243dbd2c,"`check()` and `check_built()` now have an `error_on` argument to specify if they should throw an error on check failures. When run non-interactively this is set to ""warnings"" unless specified.",1,160,FALSE,NA
devtools,a637bba83fd6cf9f69006ac34c885247,"`check()` now sets `_R_CHECK_CRAN_INCOMING_REMOTE_` instead of `_R_CHECK_CRAN_INCOMING_`on R versions which support the former option (#1271, #1276, #1702).",1,161,FALSE,NA
devtools,c8bbd6c5436c7d22d5c3dff5db01b2d9,Now use cli package to draw rules - they are more aesthetically pleasing and the correct width in the RStudio build pane (#1627).,1,162,FALSE,NA
devtools,251aaf36ee383357b29f158a766f18c0,`release()` has been tweaked to reflect modern submission workflow and to ask questions rather than running code for you (#1632).,1,163,FALSE,NA
devtools,59dbb210d68f358b33971e575efca6c5,"`document()`, `load_all()`, `check()`, `build()` and `test()` now automatically save open files when they are run inside the RStudio IDE. (#1576)",1,164,FALSE,NA
devtools,c604d9993614b90336478c5d1048195d,New `check_rhub()` function to check packages using https://builder.r-hub.io/.,1,165,FALSE,NA
devtools,a87365bf4a16d10087660bdfa778d0f7,"`run_examples` was mistakenly passing `show` to `pkgload::run_example`, causing it to fail (@​amcdavid, #1449)",1,166,FALSE,NA
devtools,d7dd5142663ba9f4c00fe45e9dc91251,"New `build_manual()` function that produces pdf manual for the package (@​twolodzko, #1238).",1,167,FALSE,NA
devtools,07aa7bbdcb5e052aa6451c800a40a159,If you use git `release()` now generates a file called `CRAN-RELEASE` that reminds you to tag the commit that you submitted to CRAN (#1198).,1,168,FALSE,NA
devtools,946679b7075bd39608a3e2a1561cebb7,`release()` once again looks for additional release questions in the correct environment (#1434).,1,169,FALSE,NA
devtools,7a44ee878d4a90bc90fe566f2bfa812a,"`submit_cran()` now checks that you're ready to submit, since this is a potentially expensive operation (#1228)",1,170,FALSE,NA
devtools,d07c9855973f3b0ce58a41dc35634b06,`check()` defaults to running `document()` only if you have used roxygen previously (#1437).,1,171,FALSE,NA
devtools,857676d647e8002aab04c73117a4b24f,"Signal an error if commas are missing in between remote entries (#1511, @​ianmcook).",1,172,FALSE,NA
devtools,64d28f7a214d2167466d58f2c3a4bfb3,`build_vignettes()` gains a quiet argument (#1543).,1,173,FALSE,NA
devtools,552632cb548bed7bc31035f4dcfda0dc,`source_gist()` works once more when there is only a single file in the gist (#1266).,1,174,FALSE,NA
devtools,e258e991591277fd078e0e1eb15a5e3f,"In order to not run test helpers in `document()`, the `helpers` argument of `load_all()` is set to `FALSE` (@​nbenn, #1669)",1,175,FALSE,NA
devtools,311468d7bf8f0d52e9d3f2eeb1dc6ac5,"The `my_unzip()` function is now able to use the `utils::unzip` fallback when R is compiled from source with no *unzip* package present (@​theGreatWhiteShark, #1678)",1,176,FALSE,NA
devtools,5678f5bf3c10ced90683cb6d4e189dbb,"If the **foghorn** package is installed, `release()` displays the results of the CRAN checks (#1672, @​fmichonneau).",1,177,FALSE,NA
devtools,c4bbfa369d350b0e7c88a53a7322e6d8,Fix two test errors related to GitHub rate limiting and mocking base functions.,1,178,FALSE,NA
devtools,2f577bb53b5a612f5ec107696b515053,Fix test errors for upcoming testthat release.,1,179,FALSE,NA
devtools,02dca720779647c8a7b78a53a5c9b80f,Workaround a change in how Rcpp::compileAttributes stores the symbol names that broke tests.,1,180,FALSE,NA
devtools,caba983ee0532ddb0cdf49c84f21e9c6,Workaround a regression in Rcpp::compileAttributes. Add trimws implementation for R 3.1 support.,1,181,FALSE,NA
devtools,62ce5654ac0a93b0560e919add3abdf7,"Bugfix for installing from git remote and not passing git2r credentials (@​james-atkins, #1498)",1,182,FALSE,NA
devtools,415656616157b270fca8d4a746f909bf,"Bugfix for installation of dependencies of dependencies (@​jimhester, #1409).",1,183,FALSE,NA
devtools,c50776c830d9c2e245924b44c6ccb9b7,"Bugfix for installation of dependencies in CRAN-like repositories such as those created by drat (@​jimhester, #1243, #1339).",1,184,FALSE,NA
devtools,54312d24d60d10ba31d3c16859d43d56,`load_all()` no longer automatically creates a description for you.,1,185,FALSE,NA
devtools,49cf764bead7e0cf1d1dd0b0b471bdbc,`use_test()` template no longer includes useless comments (#1349),1,186,FALSE,NA
devtools,273ba7762eb5320f828f949c586267dd,Fix `test()` compatibility with testthat versions 1.0.2 (#1503).,1,187,FALSE,NA
devtools,5254989416375f0fbd08ed312cc67b80,"Fix `install_version()`, `install_bitbucket()`, `install_local()`, `install_url()`, `install_svn()`, `install_bioc()` gain `quiet` arguments and properly pass them to internal functions. (#1502)",1,188,FALSE,NA
devtools,f635ffacad44654b2c6901c206f6bb14,`spell_check` gains a `dict` argument to set a custom language or dictionary,1,189,FALSE,NA
devtools,d2a3daa5e989f3e379649657a90d5a9b,`release()` now checks documentation for spelling errors by default.,1,190,FALSE,NA
devtools,8a35748976b914eaa27efcdea68c7765,New `use_gpl3_license()` sets the license field in `DESCRIPTION` and includes a copy of the license in `LICENSE`.,1,191,FALSE,NA
devtools,d2fa423046c788c9d1d806a7ddb91434,"Various minor improvements around checking of reverse dependencies (#1284, @​krlmlr). All packages involved are listed at the start, the whole process is now more resilient against package installation failures.",1,192,FALSE,NA
devtools,3b6b7a196d50184fb82058d3e94f893b,`revdep_check()` and `revdep_check_resume()` gain a skip argument which takes a character vector of packages to skip.,1,193,FALSE,NA
devtools,f8d5fedfecc528d2cf8d87ddf90a9d85,`revdep_check()` and `check_cran()` gain a `quiet_check` argument. You can use `quiet_check = FALSE` to see the actual text of R CMD check as it runs (not recommending with multiple threads).,1,194,FALSE,NA
devtools,542d1a9383f8045323b1294ed5f3d4c4,"`revdep_check_resume()` now takes `...` which can be used to override settings from `revdep_check()`. For debugging a problem with package checks, try `revdep_check(threads = 1, quiet_check = FALSE)`",1,195,FALSE,NA
devtools,7862b2cc07a26bdb660bd1062ec7675e,"`revdep_check()` collects timing information in `timing.md` (#1319, @​krlmlr).",1,196,FALSE,NA
devtools,4c0f115c8a717e559938941ce91e689e,"Package names and examples are sorted in case-insensitive C collation (#1322, @​krlmlr).",1,197,FALSE,NA
devtools,e030c24a4ae1149280a1ba21265773d5,"`use_revdep()` adds `.gitignore` entry for check database (#1321, @​krlmlr).",1,198,FALSE,NA
devtools,aca58c0053943543699bc08ea68b1872,"Own package is installed in temporary library for revdep checking (#1338, @​krlmlr).",1,199,FALSE,NA
devtools,5e77e8a3e411c8309135e915440db0cf,"Automated revdep check e-mails now can use the new `my_version` and `you_cant_install` variables. The e-mail template has been updated to use these variables (#1285, @​krlmlr).",1,200,FALSE,NA
devtools,33f217d73882a7202c5ccf295568807d,"Installation failures are logged during revdep checking, by default in `revdep/install`. Once an installation has failed, it is not attempted a second time (#1300, @​krlmlr).",1,201,FALSE,NA
devtools,b2a1202b97f31d6708fdf4307d323ef8,"Print summary table in README.md and problems.md (#1284, @​krlmlr).",1,202,FALSE,NA
devtools,11435a2d68529305f51075cadab6088b,Revdep check improvements (#1284),1,203,FALSE,NA
devtools,74c172a8fe66d43f015a8974b3d3c695,Handle case of un-installed package being passed to session_info (#1281).,1,204,FALSE,NA
devtools,f4caf672592a5e249adc895b1ae7507f,"Using authentication to access Github package name. (#1262, @​eriknil).",1,205,FALSE,NA
devtools,d6c204346d731b58d0cae5510e100c4e,"`spell_check()` checks for hunspell before running (#1475, @​jimvine).",1,206,FALSE,NA
devtools,60d87cb08ad3a16c71ad323f0aac42b3,"`add_desc_package()` checks for package dependencies correctly (#1463, @​thomasp85).",1,207,FALSE,NA
devtools,b49a981e375b5d8edb02b9b06ce3f59e,"Remove deprecated `args` argument from `install_git()` to allow passthrough to `install` (#1373, @​ReportMort).",1,208,FALSE,NA
devtools,d1f9521554ab8aad21f5d88df2eb5ac9,"added a `quiet` argument to `install_bitbucket()`, with a default value of `FALSE` (fixes issue #1345, @​plantarum).",1,209,FALSE,NA
devtools,7eecfe035bd041ec8f74f2891f26e94a,"`update_packages()` allows for override of interactive prompt (#1260, @​pkq).",1,210,FALSE,NA
devtools,a3e889b5d96dc8a75d9ee4171844d19c,`use_test()` template no longer includes useless comments (#1349),1,211,FALSE,NA
devtools,ca68ca539ef3b28dda0b5a42bc9bcf5a,"Add encoding support in `test_dir()` call by adding reference to pkg\$encoding (#1306, @​hansharhoff)",1,212,FALSE,NA
devtools,403747b8ac893a66f54cc1426dbc2df2,"Parse valid Git remote URLs that lack trailing `.git`, e.g. GitHub browser URLs (#1253, @​jennybc).",1,213,FALSE,NA
devtools,190a9aea7e90a93648ffd33dab6e0d97,Add a `check_bioconductor()` internal function to automatically install BiocInstaller() if it is not installed and the user wants to do so.,1,214,FALSE,NA
devtools,5ec2e874deb1c29db395a60d971989de,"Improve Git integration. `use_git_ignore()` and `use_git_config()` gain `quiet` argument, tests work without setting `user.name` and `user.email` Git configuration settings (#1320, @​krlmlr).",1,215,FALSE,NA
devtools,2463b04111597e4f448d787a3502d440,"Improve Git status checks used in `release()` (#1205, @​krlmlr).",1,216,FALSE,NA
devtools,1964c5a8457998373bf4e69befdfdf81,"Improved handling of local `file://` repositories in `install()` (#1284, @​krlmlr).",1,217,FALSE,NA
devtools,e9cdbd05b0d7f09d6dd977d8540da192,"`setup()` and `create()` gain new `quiet` argument (#1284, @​krlmlr).",1,218,FALSE,NA
devtools,4697c4889b48c41c4d7af839339263c7,"Avoid unnecessary query of `available_packages()` (#1269, @​krlmlr).",1,219,FALSE,NA
devtools,0f6617a2d45d1af72e1e820fd4d54e10,"Add cache setting to AppVeyor template (#1290, @​krlmlr).",1,220,FALSE,NA
devtools,8f509da80ccb7db45d629f4235f8fd35,Fix AppVeyor test by manually installing `curl` (#1301).,1,221,FALSE,NA
devtools,05c3c2ac5556d079c8405d3bbf193c9f,"`install(dependencies = FALSE)` doesn't query the available packages anymore (@​krlmlr, #1269).",1,222,FALSE,NA
devtools,1274b38d321882de0cbe9a050fbc96c1,`use_travis()` now opens a webpage in your browser to more easily activate a repo.,1,223,FALSE,NA
devtools,242fafb8606d8816a98a5dfe873d8833,"`use_readme_rmd()` and `use_readme()` share a common template with sections for package overview, GitHub installation (if applicable), and an example (@​jennybc, #1287).",1,224,FALSE,NA
devtools,01427ae458b9fcb69a3aa978575eeed8,"`test()` doesn't load helpers twice anymore (@​krlmlr, #1256).",1,225,FALSE,NA
devtools,c41fef1e684725b6cb8dc4614597a07e,"Fix auto download method selection for `install_github()` on R 3.1 which lacks ""libcurl"" in `capabilities()`. (@​kiwiroy, #1244)",1,226,FALSE,NA
devtools,765c1078f0af5bdd372ead5baa6c0021,Fix removal of vignette files by not trying to remove files twice anymore (#1291),1,227,FALSE,NA
devtools,2ef30ae9e635733ebffb77a091aae20e,"add timestamp to messages in `build_win()` (@​achubaty, #1367).",1,228,FALSE,NA
devtools,fb198201784d924578f1b32e8ce04049,New `install_bioc()` function and bioc remote to install Bioconductor packages from their SVN repository.,1,229,FALSE,NA
devtools,8d70bf289d334fbecf26e9120ac6a54c,"`install_dev_deps()` gets everything you need to start development on source package - it installs all dependencies, and roxygen2 (#1193).",1,230,FALSE,NA
devtools,7e35dabbbd9c40548945258297956313,"`use_dev_version()` automates the process of switching from a release version number by tweaking the `DESCRIPTION`, adding a heading to `NEWS.md` (if present), and checking into git (if you use it) (#1076.)",1,231,FALSE,NA
devtools,3c6ec590a9c129bc5d160abbd3103b54,"`use_github()` accepts a host argument, similar to `install_github()` (@​ijlyttle, #1101)",1,232,FALSE,NA
devtools,00c01873a625b4aac736b489edf0f273,"Update with Rtools-3.4 information, (@​jimhester)",1,233,FALSE,NA
devtools,233f6d28210d3049311e452f5fa47f39,devtools now uses https to access the RStudio CRAN mirror if it will work on your system (#1059),1,234,FALSE,NA
devtools,70e32055b76a7829aaa12f33bc5582a9,"Handle case when a GitHub request returns a non-JSON error response. (@​jimhester, #1204, #1211)",1,235,FALSE,NA
devtools,92b367e9ac9a8b7abf94693d7444e06c,"Suggested packages, including those specified as `Remotes:` are now installed after package installation. This allows you to use circular `Remotes:` dependencies for two related packages as long as one of the dependencies is a Suggested package. (@​jimhester, #1184, hadley/dplyr#1809)",1,236,FALSE,NA
devtools,95cdab81e90e3fb0c2ccb7a2897e699a,"bug fix for installation of binary packages on windows, they must be installed directly from a zip file. (@​jimhester, #1191, #1192)",1,237,FALSE,NA
devtools,e7f56676f12becc0c71804030196a790,"`build_vignette()` will now only install the ""VignetteBuilder"" if it's not present, not try and upgrade it if it is (#1139).",1,238,FALSE,NA
devtools,1a07aa98bc7d38707bfa85b78f2033d8,"`clean_dll()` Only removes package_name.def files and now operates recursively. (@​jimhester, #1175, #1159, #1161)",1,239,FALSE,NA
devtools,13d51ddf303224a42d73f8eb782d17f2,`check_man()` now prints a message if no problems are found (#1187).,1,240,FALSE,NA
devtools,540983bf9617785f2a9d59eeed5be922,"`install_*` functions and `update_packages()` refactored to allow updating of packages installed using any of the install methods. (@​jimhester, #1067)",1,241,FALSE,NA
devtools,4776a3266dc9086442a798400ef728cb,"`install_github()` now uses `https://api.github.com` as the host argument, so users can specify 'http:' or other protocols if needed. (@​jimhester, #1131, #1200)",1,242,FALSE,NA
devtools,2507a34b6f889f41800e55b33d4d4bd4,"`load_all()` runs package hooks before sourcing test helper files allowing test helper to make use of objects created when a package is loaded or attached. (@​imanuelcostigan, #1146)",1,243,FALSE,NA
devtools,22b318c95fe7ee3f4a466d4e738f82f7,`revdep_check()` will now create the `revdep/` directory if it does not already exist (#1178).,1,244,FALSE,NA
devtools,e2052d1a881de1f1022b4b34bb434206,"`source_gist()` gains a `filename` argument to specify a particular file to source from a GitHub gist. (@​ateucher, #1172)",1,245,FALSE,NA
devtools,608cd087c59228693b0d8ffcadc7c0fb,"Add a default codecov.yml file to turn off commenting with `use_coverage()` (@​jimhester, #1188)",1,246,FALSE,NA
devtools,0f38f2e6828e4649237c75e0ee730766,"Bug fix for 'nchar(text) : invalid multibyte string' errors when running `write_dcf()` on DESCRIPTION files with non-ASCII encodings (#1224, @​jimhester).",1,247,FALSE,NA
devtools,370dc711cc39f3cefe3a76dd0afeac3e,"Bug fix in `search_path_for_rtools()` using the gcc-4.9.3 toolchain when there is no rtools setting in the windows registry. (@​jimhester, #1155)",1,248,FALSE,NA
devtools,bee268549c41689359825404f1d9e48c,`create_description()` now sets `Encoding: UTF-8`. This helps non-English package authors (#1123).,1,249,FALSE,NA
devtools,8939869269fe322c8412f1f29fc200ad,"All `use_` function have been overhauled to be more consistent, particularly around notification. Most functions now also ask to overwrite if a file already exists (#1074).",1,250,FALSE,NA
devtools,9679cca7803a2d77a1d64d2c1742561a,"`use_coverage()` now adds covr to ""Suggests"", rather than recommending you install it explicitly in `.travis.yml`.",1,251,FALSE,NA
devtools,c1cbc964df4762c45a92e450b43a4d37,"`use_cran_badge()` now uses HTTPS URL (@​krlmlr, #1124).",1,252,FALSE,NA
devtools,6a5678922801e162ea7d02ae5cdec357,`use_github()` now confirms that you've picked a good title and description (#1092) and prints the url of the repo (#1063).,1,253,FALSE,NA
devtools,c7a88658c891231f1e1c8f5134cfc08c,"`use_news()`, and `use_test()` open the files in RStudio (if you're using it and have the rstudioapi package installed).",1,254,FALSE,NA
devtools,a642f1b48251cf68f1ec84d3b711f2ee,`use_testthat()` tells you what it's doing (#1056).,1,255,FALSE,NA
devtools,7403a5949c7c730d0d651a123f55752b,`use_travis()` generates a template compatible with the newest R-travis.,1,256,FALSE,NA
devtools,2f992b0b7d57ee396263eb6e53f9c3ec,`use_readme_md()` creates a basic `README.md` template (#1064).,1,257,FALSE,NA
devtools,8c7aa92f3c33eb3596d564aa434feda2,"`use_revdep()` has an updated template for the new revdep check system (#1090, @​krlmlr).",1,258,FALSE,NA
devtools,da035427b2137cbf5da42924e8c7dd71,"Removed the deprecated `use_coveralls()`, `add_rstudio_project()`, `add_test_infrastructure()`, and `add_travis()`.",1,259,FALSE,NA
devtools,c120ab19ed0b2c106fa0acd710642f10,Deprecated `build_github_devtools()` has been removed.,1,260,FALSE,NA
devtools,fb21f12971046ca585bda6a94215ba69,"`check()` now always succeeds (instead of throwing an error when `R CMD check` finds an `ERROR`), returning an object that summarises the check failures.",1,261,FALSE,NA
devtools,27c3614662a550adc4b2d5ffcaa3acca,"`check()` gains `run_dont_test` and `manual` arguments to control whether or not `\donttest{}` tests are tested, or manuals are built. This defaults to `FALSE`, but `release()` runs check with it set to `TRUE` (#1071; #1087, @​krlmlr).",1,262,FALSE,NA
devtools,42ff61f4522c78047ee2f51e80f7ab6f,The `cleanup` argument to `check()` is deprecated: it now always returns the path to the check directory.,1,263,FALSE,NA
devtools,04cc8fb80b7727879e0ded604ef9f2d1,`check_built()` allows you to run `R CMD check` on an already built package.,1,264,FALSE,NA
devtools,693babb6b7458812043d9a9796f90ba4,"`check_cran()` suppresses X11 with `DISPLAY = """"`.",1,265,FALSE,NA
devtools,1b1832c1d962404de8d165b6b0c99043,"`release()` has been tweaked to improve the order of the questions, and to ensure that you're ok with problems. It warns if both `inst/NEWS.Rd` and `NEWS.md` exist (@​krlmlr, #1135), doesn't throw error if Git head is detached (@​krlmlr, #1136).",1,266,FALSE,NA
devtools,3957cb5dc0292d7184e74af891bf858a,"`release()` gains an `args` argument to control build options, e.g. to allow passing `args = ""--compact-vignettes=both""` for packages with heavy PDF vignettes (@​krlmlr, #1077).",1,267,FALSE,NA
devtools,4fc4808eb27c4555f681ab67b7928aea,"`system_check()` gains new arguments `path` to controls the working directory of the command, and `throw` to control whether or not it throws an error on command failure. `env` has been renamed to the more explicit `env_vars`.",1,268,FALSE,NA
devtools,e25f25e7ec90d9be78d5243b28b08e0c,"`revdep_check()` doesn't complain about missing `git2r` package anymore (#1068, @​krlmlr).",1,269,FALSE,NA
devtools,1e2024791b46ffba652f1779df9578f3,Package index caches for `revdep_check()` now time out after 30 minutes.,1,270,FALSE,NA
devtools,16953aaf4196833229349c5712e30ba1,`revdep_check_save_logs()` has been removed - it is just not that useful.,1,271,FALSE,NA
devtools,59d25bb6394e02b0f9243aac0f9c094c,`revdep_check_summary()` has been removed - it never should have been part of the exported API.,1,272,FALSE,NA
devtools,2ad365d1c759a00f9c188c754014fafa,"Devtools now uses new gcc toolchain on windows, if installed (@​jimhester).",1,273,FALSE,NA
devtools,c2a2fd0132ceb0cf4baf3c48fdac4104,"`install_git()` now allows you to pass credentials to git2r to specify specific ssh credentials (@​onlymee, #982)",1,274,FALSE,NA
devtools,9e5529a773177cf4c901822e721167cf,"`load_all()` now sources all test helpers if you use testthat. This makes it much easier to interactively run tests (#1125). `load_all()` also correctly handles `unix` and `windows` subdirectories within `R` (@​gaborcsardi, #1102)",1,275,FALSE,NA
devtools,a1c84af3929a27f38086258c8e9fc031,"`build_win()` defaults to only R-devel, since this is most commonly what you want.",1,276,FALSE,NA
devtools,4583c9fc55bbebc8bf491b4e649786bc,Help shims now inform you that you're using development documentation (#1049).,1,277,FALSE,NA
devtools,f1de59ed29c7cd516107618bf9a35699,"`git_sha1()` Fix fetching the latest git commit so that it also works for shallow git clones, i.e. git clones which make use of depth. (#1048, #1046, @​nparley)",1,278,FALSE,NA
devtools,462b611c2e9142808802f1014b0dd5c5,"`curl`, `evaluate`, `roxygen2` and `rversions` have been moved from Imports to Suggests to lighten the dependency load of devtools. If you run a function that needs one of the packages, you'll prompted to install it (#962, @​jimhester).",1,279,FALSE,NA
devtools,6cfe695c8dc6bbbed875ce2b746ef47f,Devtools uses a new strategy for detecting RTools on windows: it now only looks for Rtools if you need to `load_all()` or `build()` a package with compiled code. This should make it easier to work with devtools if you're developing pure R packages (#947).,1,280,FALSE,NA
devtools,3af1ab552f5895ae8711a314204e10c0,`package_file()` lets you find files inside a package. It starts by finding the root directory of the package (i.e. the directory that contains `DESCRIPTION`) (#985).,1,281,FALSE,NA
devtools,131d211cfc82d59d59425a48fbe0dd7c,`use_news_md()` adds a basic `NEWS.md` template (#957).,1,282,FALSE,NA
devtools,0ed8decda7f760dd56dd900d52a24cba,"`use_mit_license()` writes the necessary infrastructure to declare and release an R package under the MIT license in a CRAN-compliant way. (#995, @​kevinushey)",1,283,FALSE,NA
devtools,b3749ea444ea3a9c356026fb9c61f610,`check(cran = TRUE)` adds `--run-donttest` since you do need to test code in `\donttest()` for CRAN submission (#1002).,1,284,FALSE,NA
devtools,5fb22195a28266877c0c70f1e9404657,"`install()` installs packages specified in the `Additional_repositories` field, such as drat repositories. (#907, #1028, @​jimhester). It correctly installs missing dependencies (#1013, @​gaborcsardi). If called on a Bioconductor package, include the Bioconductor repositories if they are not already set (#895, @​jimhester).",1,285,FALSE,NA
devtools,667782903698e002513d87cd7286b161,"`install()` gains a `metadata` argument which lets you add extra fields to the `DESCRIPTION` on install. (#1027, @​rmflight)",1,286,FALSE,NA
devtools,a9ea648d54fd3c9a5ad6371ed14299d0,"`install_github()` and `install_git()` only downloads and installs the package if the remote SHA1 reference differs from the currently installed reference (#903, @​jimhester).",1,287,FALSE,NA
devtools,f06cd0ff1d4d74a7bcdf56b977ad2e9c,"`install_local()` captures git and github information and stores it in the `DESCRIPTION` (#1027, @​rmflight).",1,288,FALSE,NA
devtools,efdd0506c68f80d04060aaf5f4787404,"`install_version()` is more robust when handling multiple repos (#943, #1030, @​jimhester).",1,289,FALSE,NA
devtools,e7c0d811b3ab4fb4e9f961f90362d5c2,"Bugfix for `Remotes:` feature that prevented it from working if devtools was not attached as is done in travis-r (#936, @​jimhester).",1,290,FALSE,NA
devtools,9b260b2817a4778072030e72f6db3efd,`check_dev_versions()` checks only package dependencies (#983).,1,291,FALSE,NA
devtools,2f4374f36a02d908ce171595d92f11dd,`check_man()` replaces `check_doc()` (since most other functions are named after the corresponding directory). `check_doc()` will hang around as an alias for the foreseeable future (#958).,1,292,FALSE,NA
devtools,7aa2b827dfad0057ab12140c46272021,`create()` produces a dummy namespace will fake comment so roxygen2 will overwrite silently (#1016).,1,293,FALSE,NA
devtools,d0981f7b157a80393a032985c90995c4,"`create()` and `setup()` are more permissive -- they now accept a path to either a new directory or empty directory. (#966, @​kevinushey)",1,294,FALSE,NA
devtools,a98550e366b3d498863edf20a8849ef8,`document()` now only runs `update_collate()` once.,1,295,FALSE,NA
devtools,fc16cf313b5811214672af4ccf988523,"`load_all()` resolves a longstanding lazy load database corruption issue when reloading packages which define S3 methods on generics from base or other packages (#1001, @​jimhester).",1,296,FALSE,NA
devtools,d7397a2714d9ef38bb591dbd7216d14b,`release_checks()` gains two new checks:,1,297,FALSE,NA
devtools,d7397a2714d9ef38bb591dbd7216d14b,"• `check_vignette_titles()` checks that your vignette titles aren't the default ""Vignette Title"" (#960, @​jennybc).",2,298,FALSE,`release_checks()` gains two new checks:
devtools,d7397a2714d9ef38bb591dbd7216d14b,"• `check_news_md()` checks that `NEWS.md` isn't in your `.Rbuildignore` (since it's now supported by CRAN, #1042).",2,299,FALSE,`release_checks()` gains two new checks:
devtools,20138d3c5b57725f603f5efdce80aba5,`revdep_check()`:,1,300,FALSE,NA
devtools,20138d3c5b57725f603f5efdce80aba5,"• More verbose about which package is installed (#926, @​krlmlr)",2,301,FALSE,`revdep_check()`:
devtools,20138d3c5b57725f603f5efdce80aba5,"• Verifies the integrity of already downloaded package archives (#930, @​krlmlr)",2,302,FALSE,`revdep_check()`:
devtools,20138d3c5b57725f603f5efdce80aba5,"• Is now more tolerant of errors when retrieving the summary for a checked package (#929, @​krlmlr).",2,303,FALSE,`revdep_check()`:
devtools,20138d3c5b57725f603f5efdce80aba5,"• When `ncpus > 1`, it includes the package name for when so you know which package has failed and can start looking at the output without needing to wait for all packages to finish (@​mattdowle).",2,304,FALSE,`revdep_check()`:
devtools,20138d3c5b57725f603f5efdce80aba5,"• Uses proper repository when `BiocInstaller::useDevel(TRUE)` (#937, @​jimhester).",2,305,FALSE,`revdep_check()`:
devtools,4783a248a679a58ac7b721805ff10af2,Shimmed `system.file()` now respects `mustWork = TRUE` and throws an error if the file does not exist (#1034).,1,306,FALSE,NA
devtools,20a96d0d6d9bbff0508ada6d208a8ade,"`use_appveyor()` template now creates `failure.zip` artifact instead of polluting the logs with `R CMD check` output (#1017, @​krlmlr, @​HenrikBengtsson).",1,307,FALSE,NA
devtools,634743d7b07af44a68506de223e5971f,`use_cran_comments()` template has been improved (#1038).,1,308,FALSE,NA
devtools,c2e93eb6e49b923026f80b0ce06c6710,"`use_data()` now warns when trying to save the same object twice, and stops if there is no object to save (#948, @​krlmlr).",1,309,FALSE,NA
devtools,29faf44c55c3c19f943d975b31f97e12,`use_revdep_check()` no longer includes `revdep_check_save_logs` in default template. I found I never used the logs and they just cluttered up the package directory (#1003).,1,310,FALSE,NA
devtools,4ea7b3db896f6b8f9858b388bcae029a,"`with_*()` functions have moved into the withr package, and devtools functions have been deprecated (#925, @​jimhester).",1,311,FALSE,NA
devtools,df1d9d7682a4f1db4b11293d32a7fbf9,"Avoid importing heavy dependencies to speed up loading (#830, @​krlmlr).",1,312,FALSE,NA
devtools,44ccae50f23a8680ea78568dab7915de,"Remove explicit `library(testthat)` call in `test()` (#798, @​krlmlr).",1,313,FALSE,NA
devtools,038e87b68c043ced03836a83f73124be,"`as.package()` and `load_all()` gain new argument `create`. Like other functions with a `pkg` argument, `load_all()` looks for a `DESCRIPTION` file in parent directories - if `create = TRUE` it will be automatically created if there's a `R/` or `data/` directory (#852, @​krlmlr).",1,314,FALSE,NA
devtools,eadaa0bf8c7fe2142edc5bc889c0d266,"`build_vignettes()` gains dependencies argument (#825, @​krlmlr).",1,315,FALSE,NA
devtools,6e7951500cfb58bb80c1a2cb311ef2fe,`build_win()` now uses `curl` instead of `RCurl` for ftp upload.,1,316,FALSE,NA
devtools,7a69fcfdc24eb54ebd6affa6a31b75f6,"`build_win()` asks for consent to receive e-mail at maintainer address in interactive mode (#800, @​krlmlr).",1,317,FALSE,NA
devtools,904c21a83f9cad60d3f7b3a3dd514b89,"`check()` now uses a better strategy when `cran = TRUE`. Instead of attempting to simulate `--as-cran` behaviour by turning on certain env vars, it now uses `--as-cran` and turns off problematic checks with env vars (#866). The problematic `cran_env_vars()` function has been removed.",1,318,FALSE,NA
devtools,9496c71711944a4fd73c2fb4d2531dad,"`find_rtools()` now looks for registry keys in both HKCU (user) and HKLM (admin) locations (@​Kevin-Jin, #844)",1,319,FALSE,NA
devtools,f38678eaebb7c05c54f12176df2161bb,"`install()` can now install dependencies from remote repositories by specifying them as `Remotes` in the `DESCRIPTION` file (#902, @​jimhester). See `vignette(""dependencies"")` for more details.",1,320,FALSE,NA
devtools,1cca4dd3146d2838c3065b14966011ff,"`install_*()` detects if called on a Bioconductor package and if so, automatically includes the Bioconductor repositories if needed (#895, @​jimhester).",1,321,FALSE,NA
devtools,b1d39308c08481245a3d8f22132183e3,"`install_deps()` now automatically upgrades out of date dependencies. This is typically what you want when you're working on a development version of a package. To suppress this behaviour, set `upgrade_dependencies = FALSE` (#863). `install_deps()` is more careful with `...` - this means additional arguments to `install_*` are more likely to work (#870).",1,322,FALSE,NA
devtools,3ea27b9c3537928442383c6803603fe3,`install_gitorious()` has been removed since gitorious no longer exists (#913).,1,323,FALSE,NA
devtools,9019040148a2995cdefb1b8f4bf11c15,"`load_all()` no longer fails if a `useDynLib()` entry in the NAMESPACE is incorrect. This should make it easy to recover from an incorrect `@​useDynLib`, because re-documenting() should now succeed.",1,324,FALSE,NA
devtools,1b424fed219808f56265a5463706f502,"`release()` works for packages not located at root of git repository (#845, #846, @​mbjones).",1,325,FALSE,NA
devtools,4b26fda3999ba302487daeab03714491,"`revdep_check()` now installs *suggested* packages by default (#808), and sets `NOT_CRAN` env var to `false` (#809). This makes testing more similar to CRAN so that more packages should pass cleanly. It also sets `RGL_USE_NULL` to `true` to stop rgl windows from popping up during testing (#897). It also downloads all source packages at the beginning - this makes life a bit easier if you're on a flaky internet connection (#906).",1,326,FALSE,NA
devtools,f277c0b380b851ea029d61a8300e405b,"New `uninstall()` removes installed package (#820, @​krlmlr).",1,327,FALSE,NA
devtools,97f2de3504cefe3f18719b82a31675f7,"Add `use_coverage()` function to add codecov.io or coveralls.io to a project, deprecate `use_coveralls()` (@​jimhester, #822, #818).",1,328,FALSE,NA
devtools,959da4864beeff902edf2e76596ea8ce,`use_cran_badge()` uses canonical url form preferred by CRAN.,1,329,FALSE,NA
devtools,2e67591712abfb20028589ad46f76805,"`use_data()` also works with data from the parent frame (#829, @​krlmlr).",1,330,FALSE,NA
devtools,8807c5989053ce8d396ae5402fe6cc51,`use_git_hook()` now creates `.git/hooks` if needed (#888),1,331,FALSE,NA
devtools,8c8bca7c95ebecd5341bc6015c16683e,"GitHub integration extended: `use_github()` gains a `protocol` argument (ssh or https), populates URL and BugReports fields of DESCRIPTION (only if non-existent or empty), pushes to the newly created GitHub repo, and sets a remote tracking branch. `use_github_links()` is a new exported function. `dr_github()` diagnoses more possible problems. (#642, @​jennybc).",1,332,FALSE,NA
devtools,b9a3d97faff3fe6053c37a4bb1a04d94,`use_travis()`: Default travis script leaves notifications on default settings.,1,333,FALSE,NA
devtools,417362c1bb44e23bbb480a3ec58c7354,"`uses_testthat()` and `check_failures()` are now exported (#824, #839, @​krlmlr).",1,334,FALSE,NA
devtools,4d53ff9a049d4b02b07af9c62ed42e28,`use_readme_rmd()` uses `uses_git()` correctly (#793).,1,335,FALSE,NA
devtools,491b2ee9e2e2fe895fccc703ffb4d129,"`with_debug()` now uses `with_makevars()` rather than `with_env()`, because R reads compilation variables from the Makevars rather than the environment (@​jimhester, #788).",1,336,FALSE,NA
devtools,adc98b93d33cca814a6510d61188405b,"Properly reset library path after `with_lib()` (#836, @​krlmlr).",1,337,FALSE,NA
devtools,9fa265da3c1c02134ff3d91bf581a0d0,"`remove_s4classes()` performs a topological sort of the classes (#848, #849, @​famuvie).",1,338,FALSE,NA
devtools,40f9bbd79230893cd446e0b724539bd0,"`load_all()` warns (instead of failing) if importing symbols, methods, or classes from `NAMESPACE` fails (@​krlmlr, #921).",1,339,FALSE,NA
devtools,7195400589cf9aa9bef614e9847658b5,New `dr_devtools()` runs some common diagnostics: are you using the latest version of R and devtools? It is run automatically by `release()` (#592).,1,340,FALSE,NA
devtools,9cfec9e3b56826963a3eb10dbd43ee8b,`use_code_of_conduct()` adds a contributor code of conduct from http://contributor-covenant.org. (#729),1,341,FALSE,NA
devtools,f4f9c5b057164676da8e9009220923f2,"`use_coveralls()` allows you to easily add test coverage with coveralls (@​jimhester, #680, #681).",1,342,FALSE,NA
devtools,2bfbf4a7edaab9f7f7102d3670fcfe5f,"`use_git()` sets up a package to use git, initialising the repo and checking the existing files.",1,343,FALSE,NA
devtools,ef483a68bc957cc0e6a8bce7b8406f90,"`use_test()` adds a new test file (#769, @​krlmlr).",1,344,FALSE,NA
devtools,645c276f7074d1c8cc1469fd14fdae8b,New `use_cran_badge()` adds a CRAN status badge that you can copy into a README file. Green indicates package is on CRAN. Packages not yet submitted or accepted to CRAN get a red badge.,1,345,FALSE,NA
devtools,bcdd2d39085e7d929317ef7fdeb69019,"`build_vignettes()` automatically installs the VignetteBuilder package, if necessary (#736).",1,346,FALSE,NA
devtools,87341b6220c9281f4cebcdd7053587fe,"`install()` and `install_deps()` gain a `...` argument, so additional arguments can be passed to `utils::install.packages()` (@​jimhester, #712). `install_svn()` optionally accepts a revision (@​lev-kuznetsov, #739). `install_version()` now knows how to look in multiple repos (#721).",1,347,FALSE,NA
devtools,b43d6189155d7327c598c478a23d9c31,"`package_deps()` (and `dev_package_deps()`) determines all recursive dependencies and whether or not they're up-to-date (#663). Use `update(package_deps(""xyz""))` to update out of date dependencies. This code is used in `install_deps()` and `revdep_check()` - it's slightly more aggressive than previous code (i.e. it forces you to use the latest version), which should avoid problems when you go to submit to CRAN.",1,348,FALSE,NA
devtools,b5666d83176af26befc68968601d2249,New `update_packages()` will install a package (and its dependencies) only if they are missing or out of date (#675).,1,349,FALSE,NA
devtools,62b3f080d8d27a2bb92e45ba11825939,"`session_info()` can now take a vector of package names, in which case it will print the version of those packages and their dependencies (#664).",1,350,FALSE,NA
devtools,c42680c924b7535e9faa48c9d5915b04,"Devtools now uses the git2r package to inspect git properties and install remote git packages with `install_git()`. This should be considerably more reliable than the previous strategy which involves calling the command line `git` client. It has two small downsides: `install_git()` no longer accepts additional `args`, and must do a deep clone when installing.",1,351,FALSE,NA
devtools,23cd6b1253355fa989520555b482236e,`dr_github()` checks for common problems with git/github setup (#643).,1,352,FALSE,NA
devtools,18f29c708a576911e9a8f235ac3ecc89,"If you use git, `release()` now warns you if you have uncommited changes, or if you've forgotten to synchronise with the remote (#691).",1,353,FALSE,NA
devtools,c3ae566fa21e2bfa9cf10ae71f85d95d,"`install_github()` warns if repository contains submodules (@​ashander, #751).",1,354,FALSE,NA
devtools,939d6a04345b5d5d3e0020f10135f8a1,"Previously, devtools ran all external R processes with `R --vanilla`. Now it only suppresses user profiles, and constructs a custom `.Rprofile` to override the default. Currently, this `.Rprofile` sets up the `repos` option. Among others, this enables the cyclic dependency check in `devtools::release` (#602, @​krlmlr).",1,355,FALSE,NA
devtools,76c4764f1166fc4477e61a2eacf4fa7a,"`R_BROWSER` and `R_PDFVIEWER` environment variables are set to ""false"" to suppress random windows opening during checks.",1,356,FALSE,NA
devtools,a69eb0b318aef6ce91f9799e61478a0a,"Devtools correctly identifies RTools 3.1 and 3.2 (#738), and preserves continuation lines in the `DESCRIPTION` (#709).",1,357,FALSE,NA
devtools,a62d4691ae086b438756600c22be9d13,`dev_help()` now uses `normalizePath()`. Hopefully this will make it more likely to work if you're on windows and have a space in the path.,1,358,FALSE,NA
devtools,b2ce50eba7a387e2a65f87ef48169807,"`lint()` gains a `cache` argument (@​jimhester, #708).",1,359,FALSE,NA
devtools,07fd69a862b1f38d78c93968a8ba84d3,"Fixed namespace issues related to `stats::setNames()` (#734, #772) and `utils::unzip()` (#761, @​robertzk).",1,360,FALSE,NA
devtools,228af10f68e4eb4ce997eb1e0cc8181a,"`release()` now reminds you to check the existing CRAN check results page (#613) and shows file size before uploading to CRAN (#683, @​krlmlr).",1,361,FALSE,NA
devtools,c9c1e5669e3c90c218a50c3081fce456,"`RCMD()` and `system_check()` are now exported so they can be used by other packages. (@​jimhester, #699).",1,362,FALSE,NA
devtools,bb9ade331fa48d684af0ce7495f860c7,`revdep_check()` creates directories if needed (#759).,1,363,FALSE,NA
devtools,897db0aa68cb0d604cfe0fa9366d1c76,"`system_check()` combines arguments with ``, not `,`. (#753)",1,364,FALSE,NA
devtools,7ce13ea1b01a99060ea99ecf2174c3f2,"`test()` gains an `...` argument so that additional arguments can be passed to `testthat::test_dir` (@​jimhester, #747)",1,365,FALSE,NA
devtools,4e0630f06c6af3bb51b78008412eb022,`use_travis()` now suggests you link to the svg icon since that looks a little sharper. Default template sets `CRAN: http://cran.rstudio.com/` to enable the cyclic dependency check.,1,366,FALSE,NA
devtools,e06db9f3dc8f7d9b9286e9e3607cb01b,`NOT_CRAN` envvar no longer overrides externally set variable.,1,367,FALSE,NA
devtools,a6502afe71908466d17356d5dc38ab84,"`check(check_version = TRUE)` also checks spelling of the `DESCRIPTION`; if no spell checker is installed, a warning is given (#784, @​krlmlr).",1,368,FALSE,NA
devtools,576451fddc9fc453724b6b58350c1105,"`lint()` runs `lintr::lint_package()` to check style consistency and errors in a package. (@​jimhester, #694)",1,369,FALSE,NA
devtools,0753797144acbbf663ae578439cee8bc,"`use_appveyor()` sets up a package for testing with AppVeyor (@​krlmlr, #549).",1,370,FALSE,NA
devtools,f9cb87bf1b4512795e2673bcfb7e2ab1,`use_cran_comments()` creates a `cran-comments.md` template and adds it to `.Rbuildignore` to help with CRAN submissions. (#661),1,371,FALSE,NA
devtools,4486b98df2bd5049fc96096803fa9fb8,`use_git_hook()` allows you to easily add a git hook to a package.,1,372,FALSE,NA
devtools,191564d8dd0a53f86248924fada68323,`use_readme_rmd()` sets up a template to generate a `README.md` from a `README.Rmd` with knitr.,1,373,FALSE,NA
devtools,829a293d0b84b7778c001a711ed88050,Deprecated `doc_clean` argument to `check()` has been removed.,1,374,FALSE,NA
devtools,b0af88dd1f4dab8573dabe416abd5aed,Initial package version in `create()` is now `0.0.0.9000` (#632). `create()` and `create_description()` checks that the package name is valid (#610).,1,375,FALSE,NA
devtools,0764f6ef34e6063b31b784db361af991,"`load_all()` runs `roxygen2::update_collate()` before loading code. This ensures that files are sourced in the way you expect, as defined by roxygen `@​include` tags. If you don't have any `@​include` tags, the collate will be not be touched (#623).",1,376,FALSE,NA
devtools,b7b922cf8fa80a7fdaed15637e8940e2,`session_info()` gains `include_base` argument to also display loaded/attached base packages (#646).,1,377,FALSE,NA
devtools,c6202e08e25ba31b0b77122f2ddbca4c,`release()` no longer asks if you've read the CRAN policies since the CRAN submission process now asks the same question (#692). `release(check = TRUE)` now runs some additional custom checks. These include:,1,378,FALSE,NA
devtools,c6202e08e25ba31b0b77122f2ddbca4c,• Checking that you don't depend on a development version of a package.,2,379,FALSE,`release()` no longer asks if you've read the CRAN policies since the CRAN submission process now asks the same question (#692). `release(check = TRUE)` now runs some additional custom checks. These include:
devtools,c6202e08e25ba31b0b77122f2ddbca4c,• Checking that the version number has exactly three components (#633).,2,380,FALSE,`release()` no longer asks if you've read the CRAN policies since the CRAN submission process now asks the same question (#692). `release(check = TRUE)` now runs some additional custom checks. These include:
devtools,117864366bd03323499dbbe973c01000,"`release()` now builds packages without the `--no-manual` switch, both for checking and for actually building the release package (#603, @​krlmlr). `build()` gains an additional argument `manual`, defaulting to `FALSE`, and `check()` gains `...` unmodified to `build()`.",1,380,FALSE,NA
devtools,56396b5e4df41d9bfe4a0023a89d964b,`use_travis()` now sets an environment variable so that any WARNING will also cause the build to fail (#570).,1,381,FALSE,NA
devtools,715fbde9a73373be00fd82869f5cb40b,"`with_debug()` and `compiler_flags()` set `CFLAGS` etc instead of `PKG_CFLAGS`. `PKG_*` are for packages to use, the raw values are for users to set. (According to http://cran.rstudio.com/doc/manuals/r-devel/R-exts.html#Using-Makevars)",1,382,FALSE,NA
devtools,ec03492a086de8590b50ad26333d4c8c,"New `setup()` works like `create()` but assumes an existing, not necessarily empty, directory (#627, @​krlmlr).",1,383,FALSE,NA
devtools,8a2b253bb1c059b090cced38dd8d012b,"When installing a pull request, `install_github()` now uses the repository associated with the pull request's branch (and not the repository of the user who created the pull request) (#658, @​krlmlr).",1,384,FALSE,NA
devtools,dd2c7bbefeab145a04063208a63327ef,`missing_s3()` works once again (#672),1,385,FALSE,NA
devtools,da0b64bdcbac4df8e2bb362235bd567b,Fixed scoping issues with `unzip()`.,1,386,FALSE,NA
devtools,d33409364c39e6e38679b1d44029b980,"`load_code()` now executes the package's code with the package's root as working directory, just like `R CMD build` et al. (#640, @​krlmlr).",1,387,FALSE,NA
devtools,15e42694d346b0959f230ceeeb8fb570,Don't set non-portable compiler flags on Solaris.,1,388,FALSE,NA
devtools,9af49ae6de349a152cafb27e29ddf4e1,"The file `template.Rproj` is now correctly installed and the function `use_rstudio` works as it should. (#595, @​hmalmedal)",1,389,FALSE,NA
devtools,9779315c84d61c1241a24db74463fe26,The function `use_rcpp` will now create the file `src/.gitignore` with the correct wildcards. (@​hmalmedal),1,390,FALSE,NA
devtools,9cdcc9fb754e12649133de625a706243,"The functions `test`, `document`, `load_all`, `build`, `check` and any function that applies to some package directory will work from subdirectories of a package (like the ""R"" or ""inst/tests"" directories). (#616, @​robertzk)",1,391,FALSE,NA
devtools,84a6c94c383e730269be183f8b9a6b35,"`create()` no longer generates `man/` directory - roxygen2 now does this automatically. It also no longer generates an package-level doc template. If you want this, use `use_package_doc()`. It also makes a dummy namespace so that you can build & reload without running `document()` first.",1,392,FALSE,NA
devtools,e4b13e6e3fccbe4aafd12da2c90794c7,"New `use_data()` makes it easy to include data in a package, either in `data/` (for exported datasets) or in `R/sysdata.rda` (for internal data). (#542)",1,393,FALSE,NA
devtools,accad7d3510a461edc17f71791f5977b,New `use_data_raw()` creates `data-raw/` directory for reproducible generation of `data/` files (#541).,1,394,FALSE,NA
devtools,cf843cac98082fd94d39ffd36ebd79fb,New `use_package()` allows you to set dependencies (#559).,1,395,FALSE,NA
devtools,6f1435d70d04266108a46d7246cc4755,New `use_package_doc()` sets up an Roxygen template for package-level docs.,1,396,FALSE,NA
devtools,6ca6ab3127f8496365fec6a9872e1853,New `use_rcpp()` sets up a package to use Rcpp.,1,397,FALSE,NA
devtools,0a2825beeb01bbc5a5e4272d24479b84,`use_travis()` now figures out your github username and repo so it can construct the markdown for the build image. (#546),1,398,FALSE,NA
devtools,82645dd9ac8abe082d700e986b25da9e,New `use_vignette()` creates a draft vignette using Rmarkdown (#572).,1,399,FALSE,NA
devtools,c6e3ef0c96afedda6efb0d4e3bed2cb1,"renamed `add_rstudio_project()` to `use_rstudio()`, `add_travis()` to `use_travis()`, `add_build_ignore()` to `use_build_ignore()`, and `add_test_infrastructure()` to `use_testthat()` (old functions are aliased to new)",1,400,FALSE,NA
devtools,b7c5ea1ed9c7b05264151f98ea85a53c,You can add arbitrary extra questions to `release()` by defining a function `release_questions()` in your package. Your `release_questions()` should return a character vector of questions to ask (#451).,1,401,FALSE,NA
devtools,b197258d771aea5ea0a13d456d7da02c,"`release()` uses new CRAN submission process, as implemented by `submit_cran()` (#430).",1,402,FALSE,NA
devtools,6a68520dff8d6c3ef17e884b516b1b81,"All `install_*` now use the same code and store much useful metadata. Currently only `session_info()` takes advantage of this information, but it will allow the development of future tools like generic update functions.",1,403,FALSE,NA
devtools,3bf9cadd491fbbf5cbe7c6aab5de625c,Vignettes are no longer installed by default because they potentially require all suggested packages to also be installed. Use `build_vignettes = TRUE` to force building and to install all suggested packages (#573).,1,404,FALSE,NA
devtools,3f23892f950d726725b1710e7fc379a9,`install_bitbucket()` has been bought into alignment with `install_github()`: this means you can now specify repos with the compact `username/repo@​ref` syntax. The `username` is now deprecated.,1,405,FALSE,NA
devtools,8b90b928fa7aa15095f2a84064b8dee6,`install_git()` has been simplified and many of the arguments have changed names for consistency with metadata for other package installs.,1,406,FALSE,NA
devtools,634cfc7aaf55b98a72970e65540065a6,`install_github()` has been considerably improved:,1,407,FALSE,NA
devtools,634cfc7aaf55b98a72970e65540065a6,"• `username` is deprecated - please include the user in the repo name: `rstudio/shiny`, `hadley/devtools` etc.",2,408,FALSE,`install_github()` has been considerably improved:
devtools,634cfc7aaf55b98a72970e65540065a6,"• `dependencies = TRUE` is no longer forced (regression in 1.5) (@​krlmlr, #462).",2,409,FALSE,`install_github()` has been considerably improved:
devtools,634cfc7aaf55b98a72970e65540065a6,"• Deprecated parameters `auth_user`, `branch`, `pull` and `password` have all been removed.",2,410,FALSE,`install_github()` has been considerably improved:
devtools,634cfc7aaf55b98a72970e65540065a6,"• New `host` argument which allows you to install packages from github enterprise (#410, #506).",2,411,FALSE,`install_github()` has been considerably improved:
devtools,634cfc7aaf55b98a72970e65540065a6,"• The GitHub API is used to download archive file (@​krlmlr, #466) - this makes it less likely to break in the future.",2,412,FALSE,`install_github()` has been considerably improved:
devtools,634cfc7aaf55b98a72970e65540065a6,"• To download a specified pull request, use `ref = github_pull(...)` (@​krlmlr, #509). To install the latest release, use `""user/repo@​*release""` or `ref = github_release()` (@​krlmlr, #350).",2,413,FALSE,`install_github()` has been considerably improved:
devtools,db4a1ac29b3c8da1aabf084b3be615da,`install_gitorious()` has been bought into alignment with `install_github()`: this means you can now specify repos with the compact `username/repo@​ref` syntax. You must now always supply user (project) name and repo.,1,414,FALSE,NA
devtools,9bef4ae69e89e1a464d37a40f1320d45,`install_svn()` lets you install an R package from a subversion repository (assuming you have subversion installed).,1,415,FALSE,NA
devtools,4a36d57ca4e8b6106b3e18739a1d58ad,`decompress()` and hence `install_url()` now work when the downloaded file decompresses without additional top-level directory (#537).,1,416,FALSE,NA
devtools,666b939faf4abe2146250539406ed2e6,"If you're using RStudio, and you're trying to build a binary package without the necessary build tools, RStudio will prompt to download and install the right thing. (#488)",1,417,FALSE,NA
devtools,bf93c8ecb3f17df9b8d5b42ab54de632,Commands are no longer run with `LC_ALL=C` - this no longer seems necessary (#507).,1,418,FALSE,NA
devtools,1d6fc347e4acd81fa44d93327ede84fd,`build(binary = TRUE)` creates an even-more-temporary package library avoid conflicts (#557).,1,419,FALSE,NA
devtools,bf0339f238a2ea8375c3661dce9cc605,`check_dir()` no longer fails on UNC paths (#522).,1,420,FALSE,NA
devtools,f7f1236932df4f0c57afbe2985cc2963,`check_devtools()` also checks for dependencies on development versions of packages (#534).,1,421,FALSE,NA
devtools,85683e799f40ebe685a55ed3d3ce7bd0,`load_all()` no longer fails on partial loading of a package containing S4 or RC classes (#577).,1,422,FALSE,NA
devtools,0f86e725a9bd7f0fd7e95bc4166a3fcb,"On windows, `find_rtools()` is now run on package load, not package attach.",1,423,FALSE,NA
devtools,640ca4b5d531e65ce42d28f55ce86894,"`help()`, `?`, and `system.file()` are now made available when a package is loaded with `load_all()`, even if the devtools package isn't attached.",1,424,FALSE,NA
devtools,90e8308f63e9b38aca998433d1ba6a0e,"`httr` 0.3 required (@​krlmlr, #466).",1,425,FALSE,NA
devtools,6e76250ac9d53723bbabb68a39f8f391,`load_all()` no longer gives an error when objects listed as exports are missing.,1,426,FALSE,NA
devtools,afc1b597abcb1880692f6ab716226a26,Shim added for `library.dynam.unload()`.,1,427,FALSE,NA
devtools,d25d8ab97a069ceda810e2491d87c9b9,`loaded_packages()` now returns package name and path it was loaded from. (#486),1,428,FALSE,NA
devtools,7ab0a3a6cdb8e3732bcecff83e380fd1,"The `parenvs()` function has been removed from devtools, because is now in the pryr package.",1,429,FALSE,NA
devtools,35231f3ce65b02b7060dda1d438ed078,`missing_s3()` uses a better heuristic for determining if a function is a S3 method (#393).,1,430,FALSE,NA
devtools,e0f20ae9f8ed4900126a70c0297e6a04,New `session_info()` provides useful information about your R session. It's a little more focussed than `sessionInfo()` and includes where packages where installed from (#526).,1,431,FALSE,NA
devtools,3438fe7e9cae6e1377190922cca79628,"`rstudioapi` package moved from suggests to imports, since it's always needed (it's job is to figure out if rstudio is available, #458)",1,432,FALSE,NA
devtools,c520f5ea117deee846dee11efa93ea12,Implemented own version `utils::unzip()` that throws error if command fails and doesn't print unneeded messages on non-Windows platforms (#540).,1,433,FALSE,NA
devtools,efe25aa0fe7b8e18339cfb21db944b9f,Wrote own version of `write.dcf()` that doesn't butcher whitespace and fieldnames.,1,434,FALSE,NA
devtools,f09226b52ba57252bf39aeb4e9494bc0,The `fresh` argument to `test()` has been removed - this is best done by the editor since it can run the tests in a completely clean environment by starting a new R session.,1,435,FALSE,NA
devtools,0af8feaeb9515bd6a97721d03d30c7bd,"`compile_dll()` can now build packages located in R's `tempdir()` directory (@​richfitz, #531).",1,436,FALSE,NA
devtools,494081d01dc253fd9964f77627e3f167,"`add_test_infrastructure()` will create test infrastructure for a new package. It is called automatically from `test()` if no test directories are found, the session is interactive and you agree.",1,437,FALSE,NA
devtools,755f239a2a470f6195b3dd74998f6367,"`add_rstudio_project()` adds an RStudio project file to your package. `create()` gains an `rstudio` argument which will automatically create an RStudio project in the package directory. It defaults to `TRUE`: if you don't use RStudio, just delete the file.",1,438,FALSE,NA
devtools,d81c6ce8206ac80ebffe14b612c6ab9a,`add_travis()` adds a basic travis template to your package. `.travis.yml` is automatically added to `.Rbuildignore` to avoid including it in the built package.,1,439,FALSE,NA
devtools,f9ee2a57467409082936f16d460b6aab,"`add_build_ignore()` makes it easy to add files to `.Rbuildignore`, correctly escaping special characters",1,440,FALSE,NA
devtools,f0f08f8a7bf96d41de1224f9233b4cb5,devtools requires at least R version 3.0.2.,1,441,FALSE,NA
devtools,19a5bb061b1c5b8ea0d6471def3fdce6,`document()` requires at least roxygen2 version 3.0.0.,1,442,FALSE,NA
devtools,8a9e73ef57d56c29791daeb644485f1c,"`build_win()` now builds R-release and R-devel by default (@​krlmlr, #438). It also gains parameter `args`, which is passed on to `build()` (@​krlmlr, #421).",1,443,FALSE,NA
devtools,990af83d4d8e140cd32bb29ef7be4411,`check_doc()` now runs `document()` automatically.,1,444,FALSE,NA
devtools,96f9d88bc648202e425df2e3ecaf5577,"`install()` gains `thread` argument which allows you to install multiple packages in parallel (@​mllg, #401). `threads` argument to `check_cran()` now defaults to `getOption(""Ncpus"")`",1,445,FALSE,NA
devtools,a8eec7397aca759cecf4401ffd7d8346,`install_deps(deps = T)` no longer installs all dependencies of dependencies (#369).,1,446,FALSE,NA
devtools,df072f031aedb1477281fedb1efc2d19,"`install_github()` now prefers personal access tokens supplied to `auth_token` rather than passwords (#418, @​jeroenooms).",1,447,FALSE,NA
devtools,7c1d5b4e0126d96cad305f16e712baf1,`install_github()` now defaults to `dependencies = TRUE` so you definitely get all the packages you need to build from source.,1,448,FALSE,NA
devtools,9bef08b2dc6967a20618dd7d5a8e7300,"devtools supplies its own version of `system.file()` so that when the function is called from the R console, it will have special behavior for packages loaded with devtools.",1,449,FALSE,NA
devtools,bc6fe3231b42ecc40797bbd0e82797ab,"devtools supplies its own version of `help` and `?`, which will search devtools-loaded packages as well as normally-loaded packages.",1,450,FALSE,NA
devtools,8276e382609883a38ff36f97d242cc46,`check_devtools()` no longer called by `check()` because the relevant functionality is now included in `R CMD CHECK` and it was causing false positives (#446).,1,451,FALSE,NA
devtools,6cd45e9965901ea4615ed28ea7aee9df,`install_deps(TRUE)` now includes packages listed in `VignetteBuilder` (#396),1,452,FALSE,NA
devtools,25139ad8071f60e620144349cd3111f8,"`build()` no longer checks for `pdflatex` when building vignettes, as many modern vignettes don't need it (#398). It also uses `--no-build-vignettes` for \>3.0.0 compatibility (#391).",1,453,FALSE,NA
devtools,91086de07993661ea57fb003b1c02a38,`release()` does a better job of opening your email client if you're inside of RStudio (#433).,1,454,FALSE,NA
devtools,ea42433380bc220a78202cab17644aae,`check()` now correctly reports the location of the `R CMD check` output when called with a custom `check_dir`. (Thanks to @​brentonk),1,455,FALSE,NA
devtools,d0db57228d6d89372837c987202e612a,`check_cran()` records check times for each package tested.,1,456,FALSE,NA
devtools,afa1c56072466ef12eb17c47a5e478cc,"Improved default `DESCRIPTION` file created by `create_description()`. (Thanks to @​ncarchedi, #428)",1,457,FALSE,NA
devtools,65c169f720d2f6159f5def9ae5a416c5,"Fixed bug in `install_github()` that prevented installing a pull request by supplying `repo = ""username/repo#pull""`. (#388)",1,458,FALSE,NA
devtools,324e435abe00b45bccaea456f7c3a75f,"explicitly specify user agent when querying user name and ref for pull request in `install_github`. (Thanks to Kirill Müller, #405)",1,459,FALSE,NA
devtools,f2618e1529b3f712a0bbcf5f0fa1191e,"`install_github()` now removes blank lines found in a package `DESCRIPTION` file, protecting users from the vague `error: contains a blank line` error. (#394)",1,460,FALSE,NA
devtools,5946d2eabf847733a16fa73da9c8d78a,"`with_options()` now works, instead of throwing an error (Thanks to @​krlmlr, #434)",1,461,FALSE,NA
devtools,804b7ea3273435e37e26bc5bab1b3c35,Fixed bug in `wd()` when `path` was omitted. (#374),1,462,FALSE,NA
devtools,b44e85ae59c2bc7a5ed9557ed878ef32,Fixed bug in `dev_help()` that prevented it from working when not using RStudio.,1,463,FALSE,NA
devtools,80c580b3916f27ca18290582b266ce14,`source_gist()` respects new github policy by sending user agent (hadley/devtools),1,464,FALSE,NA
devtools,55d7aad0528e66b9363a43afaeebc439,"`install_github()` now takes repo names of the form `[username/]repo[/subdir][@​ref|#pull]` - this is now the recommended form to specify username, subdir, ref and/or pull for install_github. (Thanks to Kirill Müller, #376)",1,465,FALSE,NA
devtools,9521086e5e2715f5ac10c0acb4a0af65,`install()` now respects the global option `keep.source.pkgs`.,1,466,FALSE,NA
devtools,8f1b6f8130feb3e7bd343382513b2be1,"`install()` gains a `build_vignettes` which defaults to TRUE, and ensures that vignettes are built even when doing a local install. It does this by forcing `local = FALSE` if the package has vignettes, so `R CMD build` can follow the usual process. (#344)",1,467,FALSE,NA
devtools,3b6e525193e9c83b3f5fe803807d0fd8,`install_github()` now takes repo names of the form `username/repo` - this is now the recommended form for install_github if your username is not hadley ;),1,468,FALSE,NA
devtools,15baf5fc70c48e06bb57f1c54fbc2d20,"`install_github()` now adds details on the source of the installed package (e.g. repository, SHA1, etc.) to the package DESCRIPTION file. (Thanks to JJ Allaire)",1,469,FALSE,NA
devtools,d1d1dd1f17b2832c9209341cbb4f1ace,Adjusted `install_version()` to new meta data structure on CRAN. (Thanks to Kornelius Rohmeyer),1,470,FALSE,NA
devtools,86a73e876b1d2c187edff9ea81a54f63,Fixed bug so that `install_version()` works with version numbers that contain hyphens. (Thanks to Kornelius Rohmeyer),1,471,FALSE,NA
devtools,f910dddd9219008a1e5e754557810905,"`install_deps()` is now exported, making it easier to install the dependencies of a package.",1,472,FALSE,NA
devtools,b7e9f30322d8e376cc2a9e728492c456,`build(binary = TRUE)` now no longer installs the package as a side-effect. (#335),1,473,FALSE,NA
devtools,92a792913bf7bb2fc7d604eb6b68a333,`build_github_devtools()` is a new function which makes it easy for Windows users to upgrade to the development version of devtools.,1,474,FALSE,NA
devtools,5f772420dcc46e372b8856ca45aa6bb9,`create_description()` does a better job of combining defaults and user specified options. (#332),1,475,FALSE,NA
devtools,3b515f9efe17c5c38a459c14171c8364,"`install()` also installs the dependencies that do not have the required versions; besides, the argument `dependencies` now works like `install.packages()` (in previous versions, it was essentially `c(""Depends"", ""Imports"", ""LinkingTo"")`) (thanks, Yihui Xie, #355)",1,476,FALSE,NA
devtools,8d5c2a85ed584f19964f6b9ae34f73d4,`check()` and `check_cran()` gain new `check_dir` argument to control where checking takes place (#337),1,477,FALSE,NA
devtools,45a4c4bae64053a2cae862ea3f3d2cab,`check_devtools()` no longer incorrectly complains about a `vignettes/` directory,1,478,FALSE,NA
devtools,616d3bfd0eb5c9e599663c407a4dfc43,"Decompression of zip files now respects `getOption(""unzip"")` (#326)",1,479,FALSE,NA
devtools,83da1ca1f31a36df6bf7866b84eefa6d,"`dev_help` will now use the RStudio help pane, if you're using a recent version of RStudio (#322)",1,480,FALSE,NA
devtools,6f283dc21e4486bd47970057b18e7a50,"Release is now a little bit smarter: if it's a new package, it'll ask you to read and agree to the CRAN policies; it will only ask about dependencies if it has any.",1,481,FALSE,NA
devtools,58705586c036e1fd4ebaf4c692c2b3a8,`source_url()` (and `source_gist()`) accept SHA1 prefixes.,1,482,FALSE,NA
devtools,d32aab956de7fc4818e8f2e12cf2715c,"`source_gist()` uses the GitHub API to reliably locate the raw gist. Additionally it now only attempts to source files with `.R` or `.r` extensions, and gains a `quiet` argument. (#348)",1,483,FALSE,NA
devtools,090b9e6c0a5a3e20552e4b439302eed4,"Safer installation of source packages, which were previously extracted directly into the temp directory; this could be a problem if directory names collide. Instead, source packages are now extracted into unique subdirectories.",1,484,FALSE,NA
devtools,ecf6ed16485e528a5ce9f8a8930542a3,"The documentation for many devtools functions has been considerably expanded, aiming to give the novice package developer more hints about what they should be doing and why.",1,485,FALSE,NA
devtools,f47e9d307c6ea78809d55774f206b0c0,"`load_all()` now defaults to `reset = TRUE` so that changes to the NAMESPACE etc. are incorporated. This makes it slightly slower (but hopefully not noticeably so), and generally more accurate, and a better simulation of the install + restart + reload cycle.",1,486,FALSE,NA
devtools,d25b09de1d1939ac0fc4dfa80f80d6af,"`test()` now looks in both `inst/test` and `tests/testthat` for unit tests. It is recommended to use `tests/testthat` because it allows users to choose whether or not to install test. If you move your tests from `inst/tests` to `tests/testthat`, you'll also need to change `tests/test-all.R` to run `test_check()` instead of `test_package()`. This change requires testthat 0.8 which will be available on CRAN shortly.",1,487,FALSE,NA
devtools,59078bf8f56b33d745cc5216ecfcb1e3,"New devtools guarantee: if because of a devtools bug, a CRAN maintainer yells at you, I'll send you a hand-written apology note. Just forward me the email and your address.",1,488,FALSE,NA
devtools,ad79632e14215c2959f1deb120487093,"New `install_local()` function for installing local package files (as zip, tar, tgz, etc.) (Suggested by landroni)",1,489,FALSE,NA
devtools,124526225745796cd9121f4d339ff5df,"`parse_deps()`, which parses R's package dependency strings, is now exported.",1,490,FALSE,NA
devtools,464f60cb2d42bac3f0e4b64b4d7d21e1,"All package and user events (e.g. load, unload, attach and detach) are now called in the correct place.",1,491,FALSE,NA
devtools,3e64e214fb7d7fe33d51bccdc6417d60,"`build()` gains `args` parameter allowing you to add additional arbitrary arguments, and `check()` gains similar `build_args` parameter.",1,492,FALSE,NA
devtools,0b435bdeaa985f7d194b56ee47c369a6,`install_git` gains `git_arg` parameter allowing you to add arbitrary additional arguments.,1,493,FALSE,NA
devtools,c4eb655881c756065ff7cacd2a6bdbb1,"Files are now loaded in a way that preserves srcreferences - this means that you will get much better locations on error messages, which should considerably aid debugging.",1,494,FALSE,NA
devtools,9406cc23de08866bdaea4dbc47d99cb1,Fixed bug in `build_vignettes()` which prevented files in `inst/doc` from being updated,1,495,FALSE,NA
devtools,3de285ee766263213c626006e28cad95,"`as.package()` no longer uses the full path, which should make for nicer error messages.",1,496,FALSE,NA
devtools,da63635eb50ac598b3aaf3c9c8f21424,More flexibility when installing package dependencies with the `dependencies` argument to `install_*()` (thanks to Martin Studer),1,497,FALSE,NA
devtools,89201524a1b6452d93f082e65a1146ac,The deprecated `show_rd()` function has now been removed.,1,498,FALSE,NA
devtools,0df67ec07ffe800846640f24b6c509df,`install_bitbucket()` gains `auth_user` and `password` params so that you can install from private repos (thanks to Brian Bolt),1,499,FALSE,NA
devtools,82a44139787ab8fc034bec4ba9822886,Better git detection on windows (thanks to Mikhail Titov),1,500,FALSE,NA
devtools,98b6e517cd10e917cd68f1066aedc05b,Fix bug so that `document()` will automatically create `man/` directory,1,501,FALSE,NA
devtools,8c6671db300ba09dafc4a37cf0a528a2,Default `DESCRIPTION` gains `LazyData: true`,1,502,FALSE,NA
devtools,a28d5a2b63d72631b8cb85d9f2adb15b,"`create_description()` now checks that the directory is probably a package by looking for `R/`, `data/` or `src/` directories",1,503,FALSE,NA
devtools,414430b5de0b784e5e06c72a9dd510f3,Rolled back required R version from 3.0 to 2.15.,1,504,FALSE,NA
devtools,c80eed23671cc018e510332a57402272,Add missing import for `digest()`,1,505,FALSE,NA
devtools,562c4911286c2cd3d0e61cb204ea88c5,"Bump max compatible version of R with RTools 3.0, and add details for RTools 3.1",1,506,FALSE,NA
devtools,c3bf1c06c59b4149160e1c16cf803238,"`install` gains a `local` option for installing the package from the local package directory, rather than from a built tar.gz. This is now used by default for all package installations. If you want to guarantee a clean build, run `local = FALSE`",1,507,FALSE,NA
devtools,6d471f936d1257c2c5a978ad210b0c09,`install` now uses option `devtools.install.args` for default installation arguments. This allows you to set any useful defaults (e.g. `--no-multiarch`) in your Rprofile.,1,508,FALSE,NA
devtools,5d7e5b4c2b8ce86728ee423d4411aadc,`install_git` gains `branch` argument to specify branch or tag (Fixes #255),1,509,FALSE,NA
devtools,a6036b8b74ac37624c7d7a318996c972,`run_examples` and `test` gain a `fresh` argument which forces them to run in a fresh R session. This completely insulates the examples/tests from your current session but means that interactive code (like `browser()`) won't work.(Fixes #258),1,510,FALSE,NA
devtools,ba68afeb6a9bd020f3d51f4a3de4a039,New functions `eval_clean` and `evalq_clean` make it easy to evaluate code in a clean R session.,1,511,FALSE,NA
devtools,61ccc0854347605fe00d11a877536e4e,`clean_source` loses the `vanilla` argument (which did not work) and gains a `quiet` argument,1,512,FALSE,NA
devtools,8b0f523712c1c8af61e2342043d06419,"`source_url` and `source_gist` now allow you to specify a sha, so you can make sure that files you source from the internet don't change without you knowing about it. (Fixes #259)",1,513,FALSE,NA
devtools,f7378b51583ce63ef12be2838bb2438c,"`build_vignettes` builds using `buildVignette()` and movies/copies outputs using the same algorithm as `R CMD build`. This means that `build_vignettes()` now exactly mimics R's regular behaviour, including building non-Sweave vignettes (#277), building in the correct directory (#231), using make files (if present), and copying over extra files.",1,514,FALSE,NA
devtools,957186c940dbbb263acb779999a97672,"devtools now sets best practice compiler flags: from `check()`, `-Wall -pedantic` and from `load_all()`, `-Wall -pedantic -g -O0 -UNDEBUG`. These are prefixed to existing environment variables so that you can override them if desired. (Fixes #257)",1,515,FALSE,NA
devtools,36fbe8919e3ab30a081feb0d4622c58f,"If there's no `DESCRIPTION` file present, `load_all()` will automatically create one using `create_description()`. You can set options in your `.Rprofile` to control what it contains: see `package?devtools` for more details.",1,516,FALSE,NA
devtools,b482f4df5c4c81dbbe5b6c5b75d52b2b,`check()` now also sets environment variable `_R_CHECK_CODE_DATA_INTO_GLOBALENV_` to TRUE (to match current `--as-cran` behaviour) (Fixes #256),1,517,FALSE,NA
devtools,e3a5be79f0f6ea326d04f74fd9c75e6e,"Improved default email sent by `release()`, eliminating `create.post()` boilerplate",1,518,FALSE,NA
devtools,2fb592d5fea086d78e1d2e954e7fcf53,`revdep` includes LinkingTo by default.,1,519,FALSE,NA
devtools,89adf5c339cf2eb61c2cd23b313f76f9,Fixed regular expression problem that caused RTools `3.0.*` to fail to be found on Windows.,1,520,FALSE,NA
devtools,6c3b0ccbbdcbaad15013c96a0c796401,`load_data()` got an overhaul and now respects `LazyData` and correctly exports datasets by default (Fixes #242),1,521,FALSE,NA
devtools,097d2c20a42380935383a66f34d3668d,"`with_envvar` gains the option to either replace, prefix or suffix existing environmental variables. The default is to replace, which was the previous behaviour.",1,522,FALSE,NA
devtools,9864e07fc283feeb6e41cfb7b1e8d47c,`check_cran` includes `sessionInfo()` in the summary output (Fixes #273),1,523,FALSE,NA
devtools,4208b59a6d1be057d849e3e06cdd7cec,`create()` gains a `check` argument which defaults to FALSE.,1,524,FALSE,NA
devtools,982a8c508f725669891e327efb7fe947,`with_env` will be deprecated in 1.2 and removed in 1.3,1,525,FALSE,NA
devtools,77a7c745ef6e280a4b7d35da95f8cc59,"When `load_all()` calls `.onAttach()` and `.onLoad()`, it now passes the lib path to those functions.",1,526,FALSE,NA
devtools,b859713e616b259c139f70863a9e9b39,`source_gist()` has been updated to accept new gist URLs with username. (Fixes #247),1,527,FALSE,NA
devtools,a81b39f7e78073e1b6f460f8798f1a39,"`test()` and `document()` now set environment variables, including NOT_CRAN.",1,528,FALSE,NA
devtools,43e0dba6e3ff5afe03226a1c2735d3f0,Test packages have been renamed to avoid conflicts with existing packages on CRAN. This bug prevented devtools 1.0 from passing check on CRAN for some platforms.,1,529,FALSE,NA
devtools,1aaf29acc2d6cd6057ff6e2cf5b3d8e6,"Catch additional case in `find_rtools()`: previously installed, but directory empty/deleted (Fixes #241)",1,530,FALSE,NA
devtools,399befd4b9c8ca53f280a540cc5ffba6,Rcpp attributes are now automatically compiled during build.,1,531,FALSE,NA
devtools,80c9d3376ccd28110bc13ad7e9564f38,"Packages listed in depends are `require()`d (Fixes #161, #178, #192)",1,532,FALSE,NA
devtools,8b39a5a609576f915ad0753dfab573b9,"`load_all` inserts a special version of `system.file` into the package's imports environment. This tries to simulate the behavior of `base::system.file` but gives modified results because the directory structure of installed packages and uninstalled source packages is different. (Fixes #179). In other words, `system.file` should now just work even if the package is loaded with devtools.",1,533,FALSE,NA
devtools,de21503f121affed10f69577b711899d,"Source files are only recompiled if they've changed since the last run, and the recompile will be clean (`--preclean`) if any exported header files have changed. (Closes #224)",1,534,FALSE,NA
devtools,6f02fa5013f53734e4d86ab9b080f2a8,The compilation process now performs a mock install instead of using `R CMD SHLIB`. This means that `Makevars` and makefiles will now be respected and generally there should be fewer mismatches between `load_all` and the regular install and reload process.,1,535,FALSE,NA
devtools,922cc31db8d8a8ad0650744e31c26455,S4 classes are correctly loaded and unloaded.,1,536,FALSE,NA
devtools,4079d1b1bfc5ea00b85a4db22cad402c,"Rtools detection on windows has been substantially overhauled and should both be more reliable, and when it fails give more information about what is wrong with your install.",1,537,FALSE,NA
devtools,f4f728bbeab3c746674863ab4e7cd04e,"If you don't have rtools installed, devtools now automatically sets the TAR environment variable to internal so you can still build packages.",1,538,FALSE,NA
devtools,e347585c242351097095116eed638a93,`check_cran` now downloads packages from cran.rstudio.com.,1,539,FALSE,NA
devtools,01dc3c621f54e97ecf52934a99e7d75e,"`check()` now makes the CRAN version check optional, and off by default. The `release()` function still checks the version number against CRAN.",1,540,FALSE,NA
devtools,b7390d73b5a5b0f09a78f385deb5680c,"In `check()`, it is optional to require suggested packages, using the `force_suggests` option.",1,541,FALSE,NA
devtools,bf7f481ddf6b5080c60e3866857da7c5,"When `check()` is called, the new default behavior is to not delete existing .Rd files from man/. This behavior can be set with the ""devtools.cleandoc"" option.",1,542,FALSE,NA
devtools,bd2192d4b6bcc1719f3da35246d31cbd,`install_bitbucket()` now always uses lowercase repo names. (Thanks to mnel),1,543,FALSE,NA
devtools,79bab8f3b371d286947a16f4c9188360,"New function `with_lib()`, which runs an expression code with a library path prepended to the existing libpaths. It differs slightly from `with_libpaths()`, which replaces the existing libpaths.",1,544,FALSE,NA
devtools,9fc3ab009f17d319f61fc2ab6e3c23f7,New function `install_git()` installs a package directly from a git repository. (Thanks to David Coallier),1,545,FALSE,NA
devtools,03ce79fb08b43a59b678b955964a6195,"If `pdflatex` isn't available, don't try to build vignettes with `install()` or `check()`. (Fixes #173)",1,546,FALSE,NA
devtools,ef98075adc0257fa2195a7872a1d20ce,"`install_github()` now downloads from a new URL, to reflect changes on how files are hosted on GitHub.",1,547,FALSE,NA
devtools,d088dd22cd37dc9b11b449b7210bc43c,`build()` now has a `vignettes` option to turn off rebuilding vignettes.,1,548,FALSE,NA
devtools,f2684fdaf4b855e26a3735b4d971f456,`install(quick=TRUE)` now builds the package without rebuilding vignettes. (Fixes #167),1,549,FALSE,NA
devtools,23e3dd9df4ebc95fafc8dd6666f90167,"All R commands called from `devtools` now have the environment variable `NOT_CRAN` set, so that you can perform tasks when you know your code is definitely not running on CRAN. (Closes #227)",1,550,FALSE,NA
devtools,77088c4968494bcf7524e3a91eb840de,Most devtools functions can a quiet argument that suppresses output. This is particularly useful for testing.,1,551,FALSE,NA
devtools,c95197b3b6fec0f304d04777a85e5586,Fixed path issue when looking for Rtools on windows when registry entry is not present. (Fixes #201),1,552,FALSE,NA
devtools,afc7ffc8a277aa877099fa77dec12f8b,Reloading a package that requires a forced-unload of the namespace now works.,1,553,FALSE,NA
devtools,b2a351ad7fd5ccf46fd12db99c98f68a,"When reloading a package that another loaded package depends on, if there was an error loading the code, devtools would print out something about an error in `unloadNamespace`, which was confusing. It now gives more useful errors.",1,554,FALSE,NA
devtools,4a1f6b3419af41cb1676c7961c915894,An intermittent error in `clear_topic_index` related to using `rm()` has been fixed. (Thanks to Gregory Jefferis),1,555,FALSE,NA
devtools,570c2b902ce097f51a77a69f6d8c38f2,"`revdep()` now lists ""Suggests"" packages, in addition to ""Depends"" and ""Imports"".",1,556,FALSE,NA
devtools,44db2353a87db7075e2bb49aec77214c,`revdep_check()` now correctly passes the `recursive` argument to `revdep()`.,1,557,FALSE,NA
devtools,edfa34232459b3898b3a9d2b46a51cf5,"The collection of check results at the end of `check_cran()` previously did not remove existing results, but now it does.",1,558,FALSE,NA
devtools,87327d787689b42609c10ca6e6973913,"When a package is loaded with `load_all()`, it now passes the name of the package to the `.onLoad()` function. (Thanks to Andrew Redd)",1,559,FALSE,NA
devtools,ed34e6ba0da1e5ca8cad4f85597b6536,`create` function makes it easier to create a package skeleton using devtools standards.,1,560,FALSE,NA
devtools,aa2da27b88e02f056df7c48d4493f3ae,`install_github()` can now install from a pull request -- it installs the branch referenced in the pull request.,1,561,FALSE,NA
devtools,c8be5fd2f59d212c4fdb01205e58f7f9,`install_github` now accepts `auth_user` and `password` arguments if you want to install a package in a private github repo. You only need to specify `auth_user` if it's not your package (i.e. it's not your `username`) (Fixes #116),1,562,FALSE,NA
devtools,9c71f9343fdc44e94295453851001aa1,new `dev_help` function replaces `show_rd` and makes it easy to get help on any topic in a development package (i.e. a package loaded with `load_all`) (Fixes #110),1,563,FALSE,NA
devtools,6bbb4e4713d59ed50f0e2cf8b95a0b52,`dev_example` runs the examples for one in-development package. (Fixes #108),1,564,FALSE,NA
devtools,9efd54dc290a8cbde55365fe51609b37,`build_vignettes` now looks in modern location for vignettes (`vignettes/`) and warn if vignettes found in old location (`inst/doc`). Building now occurs in a temporary directory (to avoid polluting the package with build artefacts) and only final pdf files are copied over.,1,565,FALSE,NA
devtools,6e3fda0494227db343d3d578c72a89dc,new `clean_vignettes` function to remove pdfs in `inst/doc` that were built from vignettes in `vignettes/`,1,566,FALSE,NA
devtools,7e54ed3681ac3f7f6834d472227b221d,`load_all` does a much better job at simulating package loading (see LOADING section). It also compiles and loads C/C++/Fortran code.,1,567,FALSE,NA
devtools,c763fd0a9045fc856732834cd758af1b,"`unload()` is now an exported function, which unloads a package, trying harder than just `detach`. It now also unloads DLLs. (Winston Chang. Fixes #119)",1,568,FALSE,NA
devtools,2a560c789110f2958482afd1c38a1dff,"`run_examples` now has parameters `show`, `test`, `run` to control which of `\dontrun{}`, `\dontshow{}`, `\donttest{}` and `\testonly{}` are commented out. The `strict` parameter has been removed since it is no longer necessary because `load_all` can respect namespaces. (Fixes #118)",1,569,FALSE,NA
devtools,6022d9881a5e3a321ec58669902cfd7d,"`build()`, `check()`, `install()` etc now run R in `--vanilla` mode which prevents it from reading any of your site or personal configuration files. This should prevent inconsistencies between the environment in which the package is run between your computer and other computers (e.g. the CRAN server) (Fixes #145)",1,570,FALSE,NA
devtools,54dcc14117a63ba736d210b16860b3e0,All system R command now print the full command used to make it easier to understand what's going on.,1,571,FALSE,NA
devtools,e30a04288c6faf53d38862d738e2946d,`as.package` no longer uses `~/.Rpackages`.,1,572,FALSE,NA
devtools,5650ecc37c163daf84694e7e8c42f7db,"`as.package` provides more informative error messages when path does not exist, isn't a directory, or doesn't contain a `DESCRIPTION` file.",1,573,FALSE,NA
devtools,f3cfabcc4bb721078193d03bb19b0a83,"New function `inst()` takes the name of a package and returns the installed path of that package. (Winston Chang. Fixes #130). This makes it possible to use `devtools` functions (e.g. `unload`) with regular installed packages, not just in-development source packages.",1,574,FALSE,NA
devtools,9a48e45263a671d7b5011a9042d4652b,New function `devtest()` returns paths to an internal testing packages in devtools.,1,575,FALSE,NA
devtools,6edf3e2ac2d2be4a6d7dd7fdcf44acf3,"Development packages are now loaded into a namespace environment, `<namespace:xxxx>`{=html}, and then the objects namespace are copied to the package environment, `<package:xxxx>`{=html}. This more accurately simulates how packages are normally loaded. However, all of the objects (not just the exported ones) are still copied to the package environment. (Winston Chang. Fixes #3, #60, and #125)",1,576,FALSE,NA
devtools,e780dffd85c826e902b425264ec7dd48,"Packages listed in Imports and Depends are now loaded into an imports environment, with name attribute ""imports:xxxx"", which is the parent of the namespace environment. The imports environment is in turn a child of the `<namespace:base>`{=html} environment, which is a child of the global environment. This more accurately simulates how packages are normally loaded. These packages previously were loaded and attached. (Winston Chang. Fixes #85)",1,577,FALSE,NA
devtools,d77cf5afdff119c420925c4ff1f50a50,"The NAMESPACE file is now used for loading imports, instead of the DESCRIPTION file. Previously, `load_all` loaded all objects from the packages listed in DESCRIPTION. Now it loads packages (and, when 'importFrom' is used, specific objects from packages) listed in NAMESPACE. This more closely simulates normal package loading. It still checks version numbers of packages listed in DESCRIPTION. (Winston Chang)",1,578,FALSE,NA
devtools,7f2cd21bb4cd07e1d90e54c9cf28d684,"`load_all` can now be used to properly reload devtools. It does this by creating a copy of the devtools namespace environment, and calling `load_all` from that environment. (Winston Chang)",1,579,FALSE,NA
devtools,281871722acfa0c680ae2ea846635ca5,"The `.onLoad` and `.onAttach` functions for a development package are now both called when loading a package for the first time, or with `reset=TRUE`, and the order more correctly simulates normal package loading (create the namespace, call `.onLoad`, copy objects to the package environment, and then call `.onAttach`). (Winston Chang)",1,580,FALSE,NA
devtools,3af2ab860ae425735c48051862e6c1cc,`load_all` will now throw a warning if a dependency package does not satisfy the version requirement listed in DESCRIPTION. (Winston Chang. Fixes #109),1,581,FALSE,NA
devtools,81a212d891d3541d8ef7d4fc6ddff379,"The package environment now has a 'path' attribute, similar to a package loaded the normal way. (Winston Chang)",1,582,FALSE,NA
devtools,6ffa8b35d39c57e3ad65ba421b88fa57,"`load_all` now has an option `export_all`. When set to TRUE, only the objects listed as exports in NAMESPACE are exported. (Winston Chang)",1,583,FALSE,NA
devtools,b3bd92ec88f044ccf98aafd41ad6e216,`load_all` now compiles C files in the /src directory. (Winston Chang),1,584,FALSE,NA
devtools,ad98264b2c921bf138af888cf52fa932,"New functions `compile_dll()` and `clean_dll()`, which compile C/C++/ Fortran source code, and clean up the compiled objects, respectively. (Winston Chang. Fixes #131)",1,585,FALSE,NA
devtools,729dbb78f0bb41020df73333bb4ed0b2,`load_code` now properly skips missing files. (Winston Chang),1,586,FALSE,NA
devtools,e935046c1db86ce694774ee094f41ac4,Add `--no-resave-data` to default build command.,1,587,FALSE,NA
devtools,9ababc1a265ccb5d4ba9a3b99e7e66c7,"The subject line of the email created by `release` is now ""CRAN submission \[package\] \[version\]"", per CRAN repository policy.",1,588,FALSE,NA
devtools,25a1a677ffeab82aadf269c57d317c1d,`install_bitbucket` properly installs zip files of projects stored in Mercurial repositories. (Winston Chang. Fixes #148),1,589,FALSE,NA
devtools,783bc6699048eac084308ff1c5019507,`build` now builds vignettes because `install` does not. (Fixes #155),1,590,FALSE,NA
devtools,60c7a581ed6c1a3d971e975cc48eacf5,"New function `loaded_packages()`, which returns the names of packages that are loaded and attached.",1,591,FALSE,NA
devtools,08dbbedd951ceb7db96d7ba63ef9a15b,"Packages loaded with `load_all` now store devtools metadata in their namespace environment, in a variable called `.__DEVTOOLS__`. This can be accessed with the `dev_meta` function. (Winston Chang. Fixes #128)",1,592,FALSE,NA
devtools,a8ea2d5f703b395f1b82326b802f46aa,`dev_mode` now stores the path it uses in option `dev_path`. That makes it easy for other applications to detect when it is on and to act accordingly.,1,593,FALSE,NA
devtools,37df4b8cbdaa42ad89ecef35d4abd1a4,"New function `parse_ns_file()`, which parses a NAMESPACE file for a package.",1,594,FALSE,NA
devtools,f23076051b94c1474a59e3f378c2dc3e,"New function `parenvs()`, which parents the parent environments of an object. (Winston Chang)",1,595,FALSE,NA
devtools,1288d2f53111e7bd8d7b90d923c6abcb,bump dependency to R 2.15,1,596,FALSE,NA
devtools,deba4d480c186118da0b12fb0ec49c1c,"`load_code` now also looks for files ending in `.q` - this is not recommended, but is needed for some older packages",1,597,FALSE,NA
devtools,e98ae577a45625522f7a057debcbc9d0,`install_bitbucket` installs R packages on bitbucket.,1,598,FALSE,NA
devtools,da04ed79cfba57fe28f5249e0e15a7ac,`install` now uses `--with-keep.source` to make debugging a little easier.,1,599,FALSE,NA
devtools,54cf70043b20586b26925b0ee1b8609f,All remote install functions give better error messages in the case of http errors (Fixes #82).,1,600,FALSE,NA
devtools,e712f8e6c2a7448fb478062689ee22b7,"`install` has new quick option to make package installation faster, by sacrificing documentation, demos and multi-architecture binaries. (Fixes #77)",1,601,FALSE,NA
devtools,45c3631e371215acc1eb46fb737a3368,"`install_url`, `install_github` and `install_gitorious` gain a subdir argument which makes it possible to install packages that are contained within a sub-directory of a repository or compressed file. (Fixes #64)",1,602,FALSE,NA
devtools,d1482fba17f537cf76880d718f66237f,`with_debug` function temporarily sets env vars so that compilation is performed with the appropriate debugging flags set. Contributed by Andrew Redd.,1,603,FALSE,NA
devtools,44ad9fa15aec2532951a053276412b97,"`revdep`, `revdep_maintainers` and `revdep_check` for calculating reverse dependencies, finding their maintainers and running `R CMD check`. (Fixes #78)",1,604,FALSE,NA
devtools,480aaabe746c39e5b8b8cf08ce7eed7a,"`check_cran` has received a massive overhaul: it now checks multiple packages, installs dependencies (in user specified library), and parse check output to extract errors and warnings",1,605,FALSE,NA
devtools,be0f8ea431991bbea2759f97ac071279,`check` uses new `--as-cran` option to make checking as close to CRAN as possible (fixes #68),1,606,FALSE,NA
devtools,1608b2802306dbcb1a51adace14c20a1,"devtools now uses options `devtools.path` to set the default path to use with devmode, and `github.user` to set the default user when installing packages from github.",1,607,FALSE,NA
devtools,358bebda14b84b520272f2bf59acb627,"if no package supplied, and no package has been worked with previously, all functions now will try the working directory. (Fixes #87)",1,608,FALSE,NA
devtools,f6d94626c6ba297b52c2dcfc76db1060,"on windows, devtools now looks in the registry to find where Rtools is installed, and does a better a job of locating gcc. (Contributed by Andrew Redd)",1,609,FALSE,NA
devtools,e66ef0e1e2364e5419a9e6c5bc3ac42f,`show_rd` passes `...` on to `Rd2txt` - this is useful if you're checking how build time `\Sexpr`s are generated.,1,610,FALSE,NA
devtools,7b06749bb0e598a82f1cd8ae1e9edee5,"A suite of `with` functions that allow you to temporarily alter the environment in which code is run: `in_dir`, `with_collate`, `with_locale`, `with_options`, `with_path`, ... (Fixes #89)",1,611,FALSE,NA
devtools,f623f593a86e71dadb52f368cc145f9f,`release` ask more questions and randomises correct answers so you really need to read them (Fixes #79),1,612,FALSE,NA
devtools,b9eb04e3dc083c2256918f020bb00fc9,"`source_gist` now accepts default url such as ""https://gist.github.com/nnn""",1,613,FALSE,NA
devtools,b017958b6786ce9c52ae5aee92e67191,"New system path manipulation functions, `get_path`, `set_path`, `add_path` and `on_path`, contributed by Andrew Redd.",1,614,FALSE,NA
devtools,d08c8158d0e98bd68413fc1ec391c2b4,"If you're on windows, `devtools` now suppresses the unimportant warning from CYGWIN about the dos style file paths",1,615,FALSE,NA
devtools,818d89e6eb0e2e45fd1f048a1c4ec5bc,`decompress` now uses target directory as defined in the function call when expanding a compressed file. (Fixes #84),1,616,FALSE,NA
devtools,47993ff6a6d778ed5bd8466b0b92a71a,`document` is always run in a C locale so that `NAMESPACE` sort order is consistent across platforms.,1,617,FALSE,NA
devtools,ddb9dad041dd211a712e2f9ee52cb1c9,`install` now quotes `libpath` and build path so paths with embedded spaces work (Fixes #73 and #76),1,618,FALSE,NA
devtools,bd12d76b024e9974e9c9e67fa537d1f1,`load_data` now also loads `.RData` files (Fixes #81),1,619,FALSE,NA
devtools,540a24b46502f8d0adaed1ab9878e50a,`install` now has `args` argument to pass additional command line arguments on to `R CMD install` (replaces `...` which didn't actually do anything). (Fixes #69),1,620,FALSE,NA
devtools,ad3d9cdbbc9b1fbaa92becad5e02fd76,`load_code` does a better job of reconciling files in DESCRIPTION collate with files that actually exist in the R directory. (Fixes #14),1,621,FALSE,NA
devtools,e56817e99b79a1c831623e11fd7bbad4,`test` function takes `filter` argument which allows you to restrict which tests are to be run,1,622,FALSE,NA
devtools,06ec592c4422b3236ad1d35d70adef13,"`check` runs with example timings, as is done on CRAN. Run with new param `cleanup = F` to access the timings.",1,623,FALSE,NA
devtools,92a6b8c53db1682aeb4f280ac1ca90e0,`missing_s3` function to help figure out if you've forgotten to export any s3 methods,1,624,FALSE,NA
devtools,70629fdddb4a6e37a40a1d7d8405c406,`check_cran` downloads and checks a CRAN package - this is useful to run as part of the testing process of your package if you want to check the dependencies of your package,1,625,FALSE,NA
devtools,5792276ce1dcc0d2e50ce255ca54ed4d,"`strict` mode for `run_examples` which runs each example in a clean environment. This is much slower than the default (running in the current environment), but ensures that each example works standalone.",1,626,FALSE,NA
devtools,9708aa4c34dee4f89a05b547464a03ee,`dev_mode` now updates prompt to indicate that it's active (Thanks to Kohske Takahashi),1,627,FALSE,NA
devtools,3af2614c281b040a92c8173eb842ba49,new `source_url` function for sourcing script on a remote server via protocols other than http (e.g. https or ftp). (Thanks to Kohske Takahashi),1,628,FALSE,NA
devtools,971cf9bff56d282948b0b2277e815e35,new `source_gist` function to source R code stored in a github gist. (Thanks to Kohske Takahashi),1,629,FALSE,NA
devtools,868b465e8c236da5eff0bac6a31940c7,`load_all` now also loads all package dependencies (including suggestions) - this works around some bugs in the way that devtools attaches the development environment into the search path in a way that fails to recreate what happens normally during package loading.,1,630,FALSE,NA
devtools,352a38facbf8560411666fbc63ac54cf,remote installation will ensure the configure file is executable.,1,631,FALSE,NA
devtools,a8ea5a163a4ed14d0a25fdeed682499c,all external package installation functions are vectorised so you can install multiple packages at time,1,632,FALSE,NA
devtools,106148b4879f51c8acaf5e390c6df95a,new `install_gitorious` function install packages in gitorious repos.,1,633,FALSE,NA
devtools,5249a774d6785954011683da25e6e0fd,new `install_url` function for installing package from an arbitrary url,1,634,FALSE,NA
devtools,695d1e73a6f5019689d840b7be693e66,include `install_version` function from Jeremy Stephens for installing a specific version of a CRAN package from the archive.,1,635,FALSE,NA
devtools,3d721e2ecfcf1f56e252ac68a5b125da,better check for OS type (thanks to Brian Ripley),1,636,FALSE,NA
devtools,37482fd3d15dab7c100aa6f7175e8e4c,better default paths for 64-bit R on windows (Fixes #35),1,637,FALSE,NA
devtools,3bf5b6fe61b496c304ee60244df28cd5,check to see if Rtools is already available before trying to mess with the paths. (Fixes #55),1,638,FALSE,NA
devtools,f2f131b14ace6f41808f300faac0ee9c,"if an error occurs when calling loading R files, the cache will be automatically cleared so that all files are loaded again next time you try (Fixes #55)",1,639,FALSE,NA
devtools,290f674695cc259d3af01c790265b14b,functions that run R now do so with `R_LIBS` set to the current `.libPaths()` - this will ensure that checking uses the development library if you are in development mode. `R_ENVIRON_USER` is set to an empty file to avoid your existing settings overriding this.,1,640,FALSE,NA
devtools,620a178863905e6d2a76f8b44d75f42f,`load_data` (called by `load_all`) will also load data defined in R files in the data directory. (Fixes #45),1,641,FALSE,NA
devtools,8e5711d1d7663aa87618607c5e644d9e,`dev_mode` performs some basic tests to make sure you're not setting your development library to a directory that's not already an R library. (Fixes #25),1,642,FALSE,NA
devtools,c86d02724691b3c84620cc010d14d6d6,Fix error in that was causing R commands to fail on windows.,1,643,FALSE,NA
devtools,c0e417069754a997fb29d8588d104863,new `show_rd` function that will show the development version of a help file.,1,644,FALSE,NA
devtools,cc23338b8424140fc990c57e28908b7f,"external R commands always run in locale `C`, because that's what the CRAN severs do.",1,645,FALSE,NA
devtools,f4582da91df270a7c9ed9027ffd67f8d,"`clean_source` sources an R script into a fresh R environment, ensuring that it can run independently of your current working environment. Optionally (`vanilla = T`), it will source in a vanilla R environment which ignores all local environment settings.",1,646,FALSE,NA
devtools,e04b4bc11769857a4bb719a8e472a4ee,"On windows, `devtools` will also add the path to `mingw` on startup. (Thanks to pointer from Dave Lovell)",1,647,FALSE,NA
devtools,8c616febcb664876340efa735570a4f4,new `wd` function to change the working directory to a package subdirectory.,1,648,FALSE,NA
devtools,80f5b3d7d8a084f441b53dca2560a5f1,"`check_doc` now checks package documentation as a whole, in the same way that `R CMD check` does, rather than low-level syntax checking, which is done by `roxygen2. DESCRIPTION checking has been moved into`load_all`.`check_rd\` has been removed.",1,649,FALSE,NA
devtools,2592fbaec1afe47a6bf68943c55ffc07,"`build` is now exported, and defaults to building in the package's parent directory. It also gains a new `binary` parameter controls whether a binary or a source version (with no vignettes or manuals) is built. Confusingly, binary packages are built with `R CMD INSTALL`.",1,650,FALSE,NA
devtools,1b876df26944014ddac739d9635591be,"`build_win` sends your package to the R windows builder, allowing you to make a binary version of your package for windows users if you're using linux or macOS (if you're using windows already, use `build(binary = T)`)",1,651,FALSE,NA
devtools,2e1941f15ccf87d0c377514cb4d474e5,"if using `.Rpackages` config file, default function is used last, not first.",1,652,FALSE,NA
devtools,ea3c1e29b51d8181ca1023b5bb5c03ee,"on Windows, `devtools` now checks for the presence of `Rtools` on startup, and will automatically add it to the path if needed.",1,653,FALSE,NA
devtools,e6b21a75a4ce20a08ceb240c6f0603f2,`document` uses `roxygen2` instead of `roxygen`. It now loads package dependency so that they're available when roxygen executes the package source code.,1,654,FALSE,NA
devtools,d718462fb61d06ac3171eeb979ed2ddd,`document` has new parameter `clean` which clears all roxygen caches and removes all existing man files. `check` now runs `document` in this mode.,1,655,FALSE,NA
devtools,a53fbbea124bad5b85411cb042e2aaf8,"`dev_mode` will create directories recursively, and complain if it can't create them. It should also work better on windows.",1,656,FALSE,NA
devtools,6b38c8cb85d3ea41b73dc6d448f08a7a,"`install_github` now allows you to specify which branch to download, and automatically reloads package if needed.",1,657,FALSE,NA
devtools,d64159adf4e93a9f2407637093416bb3,`reload` now will only reload if the package is already loaded.,1,658,FALSE,NA
devtools,3bccf71d3123f0dd5e4ad7f323bbf70f,`release` gains `check` parameter that allows you to skip package check (if you've just done it.),1,659,FALSE,NA
devtools,36b3668e07f37657a3bc2b85dfef823a,`test` automatically reloads code so you never run tests on old code,1,660,FALSE,NA
devtools,672d0fd15e65db3488d1d1ee4f60cff6,new `bash()` function that starts bash shell in package directory. Useful if you want to use git etc.,1,661,FALSE,NA
devtools,85973682552d8f2e1937eaefe53172fe,removed inelegant `update_src()` since now superseded by `bash()`,1,662,FALSE,NA
devtools,cfe7711ed150b87d486cf381ceb33648,fix bug in ftp upload that was adding extraneous space,1,663,FALSE,NA
devtools,202c298bb3e853a65d11f2fe9b4ee142,"`build` function builds package in specified directory. `install`, `check` and `release` now all use this function.",1,664,FALSE,NA
devtools,7d0cbcdc8c5f832283e867381f4301d9,"`build`, `install`, `check` and `release` better about cleaning up after themselves - always try to both work in session temporary directory and delete any files/directories that they create",1,665,FALSE,NA
devtools,5ad18dbe79caabea08e34431a7ad2d98,`install_github` now uses `RCurl` instead of external `wget` to retrieve package. This should make it more robust wrt external dependencies.,1,666,FALSE,NA
devtools,1a95bee58b581aa9589825a5c2354b2e,`load_all` will skip missing files with a warning (thanks to suggestion from Jeff Laake),1,667,FALSE,NA
devtools,8a925c6d0bcc70dedd9ca8ee99d6b9a3,`check` automatically deletes `.Rcheck` directory on successful completion,1,668,FALSE,NA
devtools,8f8e78ef349cda9331d78bb1a93eaa96,Quote the path to R so it works even if there are spaces in the path.,1,669,FALSE,NA
devtools,a31abdd8e0a57830ac71a7175d108fa1,Check for presence of `DESCRIPTION` when loading packages to avoid false positives,1,670,FALSE,NA
devtools,70aca3fbb587bfac8271ed103b67bdd8,`install` now works correctly with `devel_mode` to install packages in your development library,1,671,FALSE,NA
devtools,ab9696a161976ea6b4cfa9f526672c6d,`release` prints news so you can more easily check it,1,672,FALSE,NA
devtools,4bd10b1f7a7d00e0bb825e94d390910f,"All `R CMD xxx` functions now use the current R, not the first R found on the system path.",1,673,FALSE,NA
diffviewer,645e4f125d4c6c1615216f650491d792,"The diffviewer widget previously ignored some very minor pixel differences, but now it will show every difference (#9, #11).",1,1,FALSE,NA
diffviewer,f5a0e3e53115dd732e2ceb1ca82b5bf5,Added a `NEWS.md` file to track changes to the package.,1,2,FALSE,NA
fastmap,3cb8c561d7d981cc372755d006748cba,Changed `fastmap`'s `$has()` method to use C++ `contains()` method (which is new in hopscotch-map 2.3.0). (#30),1,1,FALSE,NA
fastmap,866147dabcecce3cf94c5b9223f10720,Updated hopscotch-map library to 2.3.0.,1,2,FALSE,NA
fastmap,b1468d529c86e7e62b64eaa7210a18ed,Closed #24: Added a `$clone()` method to `fastmap`. (#26),1,3,FALSE,NA
fastmap,49c6260076eee57c1f35b545b9414e24,"Fixed #27: If a `fastmap` object has no holes in the lists storing keys and values, and then it is serialized and then unserialized, the new `fastmap` would contain zero items. (#28)",1,4,FALSE,NA
fastmap,a6505e163b374a2a4239738c632b9886,Faster implementations of `fastmap` `$keys()` and `$as_list()` methods.,1,5,FALSE,NA
fastmap,defd1027d49d634a846a8c6758311238,Added `faststack()` and `fastqueue()`. (#15),1,6,FALSE,NA
fastmap,ef5ef9e10f6a2fce8433627028d32dc5,"Fixed #13: fastmap.cpp now explicitly includes the algorithm header, which is needed on some platforms to successfully compile.",1,7,FALSE,NA
fs,891b0ec2d1f21ac2f22c40130fc8712b,No user visible changes.,1,1,FALSE,NA
fs,b56541becd952ab5a26dbd57992b33d1,"`path_ext_set()` can now handle extensions that contain a `.`, e.g. `csv.gz` (@​mgirlich, #415).",1,2,FALSE,NA
fs,d7e05f8ef6c90cc6865d5dfa0ccf5773,"inputs to `path_real()` and `path_join()` are coerced to character for consistency with other functions (@​raymondben, #370)",1,3,FALSE,NA
fs,e8cc6aaa0b6ee352e4d2924159d03ccb,fs uses libuv 1.44.2 now.,1,4,FALSE,NA
fs,793f46337dbea8745694d0c5922fcbbf,"`file_create()` and `dir_create()` now return the correct path when `...` arguments are used (@​davidchall, #333).",1,5,FALSE,NA
fs,6f5c9e4c17c8cede75ee37269de20592,"`dir_create(recurse = FALSE)` now correctly handles `...` arguments (@​davidchall, #333).",1,6,FALSE,NA
fs,6a7bef846ad2dc9cd5a5c904dc7612f2,`file_exists()` now expands `~` again (#325).,1,7,FALSE,NA
fs,896d668f0371a03ca0893622d624137a,`dir_copy()` works when `path` has length \>1 (#360).,1,8,FALSE,NA
fs,9ecc9de1505e5313d90af133fd1eef03,Gábor Csárdi is now the maintainer.,1,9,FALSE,NA
fs,9bc0d2a47840f8a8c4b7932144006d01,fs is now licensed as MIT (#301).,1,10,FALSE,NA
fs,b0fa56c588e7d252451e90c3a695c180,`dir_create()` now restores the previous umask (#293),1,11,FALSE,NA
fs,9f8f63dc8ca91c07f2a67d5c81132113,`file_exists()` is now much faster (#295),1,12,FALSE,NA
fs,e31afc802c86e3f2c48fc83125e2cc13,"`options(fs.fs_path.shorten)` can now be used to control how paths are shortened in tibbles. The default value is ""front"", valid alternatives are ""back"", ""middle"" and ""abbreviate"". (#335)",1,13,FALSE,NA
fs,6668bd455b72d38e3719079a71310be8,`options(fs.use_tibble = FALSE)` can now be used to disable use of tibbles (#295).,1,14,FALSE,NA
fs,21ca244c2a1a9e6543fad91c95d739c9,"`path_tidy()` now works with non-UTF8 encoded paths (@​shrektan, #321).",1,15,FALSE,NA
fs,cb568c7813646bf19ad013f8a203ce1c,The libuv release used by fs was updated to 1.38.1,1,16,FALSE,NA
fs,ff4d023935f5a755935528a707fb29cc,`dir_create()` now consults the process umask so the mode during directory creation works like `mkdir` does (#284).,1,17,FALSE,NA
fs,de86a3ff2d719ee21ca77bf14a8b8720,"`fs_path`, `fs_bytes` and `fs_perms` objects are now compatible with vctrs 0.3.0 (#266)",1,18,FALSE,NA
fs,9a196f8a7e465aec78d74435756a8f38,`fs_path` objects now sort properly when there is a mix of ASCII and unicode elements (#279),1,19,FALSE,NA
fs,76302b9b602cbdaeefa61baf19585fd2,"`file_info(..., follow = TRUE)`, `is_dir()`, and `is_file()` follow relative symlinks in non-current directories (@​heavywatal, #280)",1,20,FALSE,NA
fs,60503e492d972221c5d6085259d11b53,"`dir_map()` now grows its internal list safely, the 1.4.0 release introduced an unsafe regression (#268)",1,21,FALSE,NA
fs,f630d39fc387395e01775006951a5265,"`file_info()` returns a tibble if the tibble package is installed, and subsets work when it is a `data.frame` (#265)",1,22,FALSE,NA
fs,cacb01f4424e23c089db9c66caf105a9,"`path_real()` always fails if the file does not exist. Thus it can no longer be used to resolve symlinks further up the path hierarchy for files that do not yet exist. This reverts the feature introduced in 1.2.7 (#144, #221, #231)",1,23,FALSE,NA
fs,2b7b2fd9b8e4a361e25deb9224c46fe2,Fix compilation on Solaris.,1,24,FALSE,NA
fs,013813675bf66277e8e08ec49aec9359,"`[[.fs_path`, `[[.fs_bytes` and `[[.fs_perms` now preserve their classes after subsetting (#254).",1,25,FALSE,NA
fs,c25f4697e1424014070df5c876d9e3ab,`path_has_parent()` now recycles both the `path` and `parent` arguments (#253).,1,26,FALSE,NA
fs,c6abbb2d1758eaa52f8f791efbb0e03d,`path_ext_set()` now recycles both the `path` and `ext` arguments (#250).,1,27,FALSE,NA
fs,cc1fda57b0c84dc4a49218250ddd3390,Internally fs no longer depends on Rcpp,1,28,FALSE,NA
fs,3bee115c6d016949c18000b9536ddd9c,"fs now passes along `CPPFLAGS` during compilation of libuv, fixing an issue that could prevent compilation from source on macOS Catalina. (@​kevinushey, #229)",1,29,FALSE,NA
fs,b3c011f46bdb43f0bf86b248838991f7,fs now compiles on alpine linux (#210),1,30,FALSE,NA
fs,07fd5220c6ac4782d7996364310bac49,`dir_create()` now works with absolute paths and `recurse = FALSE` (#204).,1,31,FALSE,NA
fs,b3e384f6d0aa40f12f7e1727a5987a34,"`dir_tree()` now works with paths that need tilde expansion (@​dmurdoch, @​jennybc, #203).",1,32,FALSE,NA
fs,3c436334f3f9c523d27a053891e933fb,"`file_info()` now returns file sizes with the proper classes (""fs_bytes"" and ""numeric""), rather than just ""fs_bytes"" (#239)",1,33,FALSE,NA
fs,41b5d8a66eae6a13326d1a0252f78573,"`get_dirent_type()` gains a `fail` argument (@​bellma-lilly, #219)",1,34,FALSE,NA
fs,7ced3e0f056bb3c5e56a21d40c5f6d0d,"`is_dir()`, `is_file()`, `is_file_empty()` and `file_info()` gain a `follow` argument, to follow links and return information about the linked file rather than the link itself (#198)",1,35,FALSE,NA
fs,dbb9dade5ef838f98b2c02522b3bfd9a,"`path()` now follows ""tidy"" recycling rules, namely only consistent or length 1 inputs are recycled. (#238)",1,36,FALSE,NA
fs,3765a6c9e0a36d8b35aaba3c6d239c77,`path()` now errors if the path given or constructed will exceed `PATH_MAX` (#233).,1,37,FALSE,NA
fs,0cfee47fd353a25a4c2f173a6c14f897,"`path_ext_set()` now works with multiple paths (@​maurolepore, #208).",1,38,FALSE,NA
fs,f5c650af67cdef19c863c7efb9b0e910,"Fix missed test with UTF-8 characters, which now passes on a strict Latin-1 locale.",1,39,FALSE,NA
fs,f04f7d753fb5c48caea6afe917d27efb,Fix undefined behavior when casting -1 to `size_t`.,1,40,FALSE,NA
fs,82b75c3cddf2fd3e3ae929081f0558fe,"`dir_ls()`, `dir_map()`, `dir_walk()`, `dir_info()` and `dir_tree()` gain a `recurse` argument, which can be either a `TRUE` or `FALSE` (as was supported previously) *or* a number of levels to recurse. The previous argument `recursive` has been deprecated.",1,41,FALSE,NA
fs,a77e76fd9c161467430837a9d19d34d4,"`dir_copy()` gains a `overwrite` argument, to overwrite a given directory (@​pasipasi123, #193)",1,42,FALSE,NA
fs,24a17fd16f4cce2ad3445b61e725dfbd,`dir_create()` now throws a more accurate error message when you try to create a directory in a non-writeable location (#196).,1,43,FALSE,NA
fs,734fd02aadb0a3f5392a7adb8de089f5,`fs_path` objects now always show 10 characters by default when printed in tibbles (#191).,1,44,FALSE,NA
fs,0ae45937165b71f0dd47fba53fc4bd0b,"`path_file()`, `path_dir()` and `path_ext()` now return normal character vectors rather than tidy paths (#194).",1,45,FALSE,NA
fs,23f633fa67b90e0212a14974c990a6f7,`path_package()` now works with paths in development packages automatically (#175).,1,46,FALSE,NA
fs,f849ab9e087d9267fa68cccc5326cc56,tests now pass successfully when run in strict Latin-1 locale,1,47,FALSE,NA
fs,74290f20c921c9cfcfd6b51540ea26c8,"`file_size()` function added as a helper for `file_info(""file"")$size` (#171)",1,48,FALSE,NA
fs,507a82e0e34c8002bbf44daf330e8f39,`is_file_empty()` function added to test for empty files\` (#171),1,49,FALSE,NA
fs,b27c02bbe0a0aeb85a097ebc0ff925ad,"`dir_tree()` function added to print a command line representation of a directory tree, analogous to the unix `tree` program (#82).",1,50,FALSE,NA
fs,4678addbda5b217d4c04798b54a2f095,"Add a comparison vignette to quickly compare base R, fs and shell alternatives (@​xvrdm, #168).",1,51,FALSE,NA
fs,26bf5786e39b453ab7022c391805540c,"`path_ext_set()` and `file_temp()` now treat extensions with a leading `.` and those without equally. e.g. `path_ext_set(""foo"", ext = ""bar"")` and `path_ext_set(""foo"", ext = "".bar"")` both result in ""foo.bar""",1,52,FALSE,NA
fs,2353a7289e06bfee5143061d91a9c7f3,Tidy paths are now always returned with uppercase drive letters on Windows (#174).,1,53,FALSE,NA
fs,022958e21cda48172993f71e04d92543,`format.bench_bytes()` now works with `str()` in R 3.5.1+ (#155).,1,54,FALSE,NA
fs,7b037fc44bc82d5629cc0a98a13dd8ce,"`path_ext()`, `path_ext_remove()`, and `path_ext_set()` now work on paths with no extension, and `file_temp()` now prepends a `.` to the file extension (#153).",1,55,FALSE,NA
fs,6e2799c37cdf9abe891e2a2ab09146c1,"Link with -pthread by default and fix on BSD systems (#128, #145, #146).",1,56,FALSE,NA
fs,663d9e6a8f33292bf70b2f361945c5b2,"`file_chown()` can now take a `group_id` parameter as character (@​cderv, #162).",1,57,FALSE,NA
fs,1f795785d8cbee2df31f58adb60c3732,"Parameter `browser` in `file_show()` now works as described in the documentation (@​GegznaV, #154).",1,58,FALSE,NA
fs,1af5d348a2588b8d6b74cbc0011a198f,"`path_real()` now works even if the file does not exist, but there are symlinks further up the path hierarchy (#144).",1,59,FALSE,NA
fs,a3b8031d99e6f446fff988565bb42635,`colourise_fs_path()` now returns paths uncolored if the colors argument / `LS_COLORS` is malformed (#135).,1,60,FALSE,NA
fs,ffd6a4493e1509a3440ef601ab2f8040,This is a small bugfix only release.,1,61,FALSE,NA
fs,fa07dd518fecc3c9a9679f9bbc4a713d,"`file_move()` now fall back to copying, then removing files when moving files between devices (which would otherwise fail) (#131, https://github.com/r-lib/usethis/issues/438).",1,62,FALSE,NA
fs,e1921f6e282c15a080fed91950aab8c8,Fix for a double free when using `warn = TRUE` (#132),1,63,FALSE,NA
fs,8ccdd0578d797b2f633d9bfad49f467a,Patch release to fix tests which left files in the R session directory,1,64,FALSE,NA
fs,5676563cf53e2c760983b7133cff9570,New `path_wd()` generates paths from the current working directory (#122).,1,65,FALSE,NA
fs,d44efe94aea9b0a86f51ddcf6157500c,New `path_has_parent()` determines if a path has a given parent (#116).,1,66,FALSE,NA
fs,16ffff4020c0f697b8bebde8926f1d69,New `file_touch()` used to change access and modification times for a file (#98).,1,67,FALSE,NA
fs,3379c64e09d07884d13ee57edbec414f,"`dir_ls()`, `dir_map()`, `dir_walk()`, `dir_info()` and `file_info()` gain a `fail` parameter, to signal warnings rather than errors if they are called on a path which is unavailable due to permissions or locked resources (#105).",1,68,FALSE,NA
fs,e46490f7141f5dbdd995b791919d3535,"`path_tidy()` now always includes a trailing slash for the windows root directory, e.g. `C:/` (#124).",1,69,FALSE,NA
fs,2aa9568016508af556b3de155fd78677,"`path_ext()`, `path_ext_set()` and `path_ext_remove()` now handle paths with non-ASCII characters (#120).",1,70,FALSE,NA
fs,c880fb8ef458fa0057c7fac5799cc184,`fs_path` objects now print (without colors) even if the user does not have permission to stat them (#121).,1,71,FALSE,NA
fs,4c12b18a086b39577193c9f45fe1b212,compatibility with upcoming gcc 8 based Windows toolchain (#119),1,72,FALSE,NA
fs,eab65375cc7548d4f52958d792de1c77,Experimental support for `/` and `+` methods for `fs_path` objects (#110).,1,73,FALSE,NA
fs,612d806016a471b4e3facd19fd4c16e7,"`file_create()` and `dir_create()` now take `...`, which is passed to `path()` to make construction a little nicer (#80).",1,74,FALSE,NA
fs,0b816c2f8180b1f0056dd5c4f9e728ec,"`path_ext()`, `path_ext_set()` and `path_ext_remove()` now handle paths with directories including hidden files without extensions (#92).",1,75,FALSE,NA
fs,b5680c6a2a71b16f07b2c776e36ae5fd,`file_copy()` now copies files into the directory if the target is a directory (#102).,1,76,FALSE,NA
fs,7c758f5017312f317d1871bb4d1c2b2c,"fs no longer needs a C++11 compiler, it now works with compilers which support only C++03 (#90).",1,77,FALSE,NA
fs,777003189ac0ffa5db63d502c445070d,`fs_path` `fs_bytes` and `fs_perm` objects now use `methods::setOldClass()` so that S4 dispatch to their base classes works as intended (#91).,1,78,FALSE,NA
fs,7570cb6452adbf3aa4007378315543a9,Fix allocation bug in `path_exists()` using `delete []` when we should have used `free()`.,1,79,FALSE,NA
fs,f8cf8c46d18810bb912c552a9cc4a7fd,"`path_abs()` gains a `start` argument, to specify where the absolute path should be calculated from (#87).",1,80,FALSE,NA
fs,473252a58f789b73e5711a8888f1ae06,`path_ext()` now returns `character()` if given 0 length inputs (#89),1,81,FALSE,NA
fs,0792695f8c7d7a12f2d027bb77f3c694,Fix for a memory issue reported by ASAN and valgrind.,1,82,FALSE,NA
fs,7b3a17a11e4a9ab6d6ef2a1c136f15b4,"`path_expand()` and `path_home()` now use `USERPROFILE` or `HOMEDRIVE`/`HOMEPATH` as the user home directory on Windows. This differs from the definition used in `path.expand()` but is consistent with definitions from other programming environments such as python and rust. This is also more compatible with external tools such as git and ssh, both of which put user-level files in `USERPROFILE` by default. To mimic R's (and previous) behavior there are functions `path_expand_r()` and `path_home_r()`.",1,83,FALSE,NA
fs,f424502d3907aa0d4d1470c05a327d64,"Handling missing values are more consistent. In general `is_*` functions always return `FALSE` for missing values, `path_*` functions always propagate NA values (NA inputs become NA outputs) and `dir_*` `file_*` and `link_*` functions error with NA inputs.",1,84,FALSE,NA
fs,2d297f8b3f8b889a34d9c8790a81a972,fs functions now preserve tildes in their outputs. Previously paths were always returned with tildes expanded. Users can use `path_expand()` to expand tildes if desired.,1,85,FALSE,NA
fs,a9f3ba2af9b8d6a7f90372e6ac0f1f93,"Fix crash when a files user or group id did not exist in the respective database (#84, #58)",1,86,FALSE,NA
fs,e9d352edb7587a102ada9a953ba80e7c,Fix home expansion on systems without readline (#60).,1,87,FALSE,NA
fs,6d1ce364b44dda1386a0dad440299ac5,Fix propagation of NA values in `path_norm()` (#63).,1,88,FALSE,NA
fs,fac2254821ac38cd2fc75b16490eff3c,`file_chmod()` is now vectorized over both of its arguments (#71).,1,89,FALSE,NA
fs,7e9b495a54504d456fe51081b003a87b,`link_create()` now fails silently if an identical link already exists (#77).,1,90,FALSE,NA
fs,32f2bb4544bce793ea1ce3d7fc4af1f2,`path_package()` function created as an analog to `system.file()` which always fails if the package or file does not exist (#75),1,91,FALSE,NA
fs,46f8ddf5691a83b2683af5b571d1e28a,Tidy paths no longer expand `~`.,1,92,FALSE,NA
fs,9be4e58bb85335f2732d710f056b740e,Filesystem modification functions now error for NA inputs. (#48),1,93,FALSE,NA
fs,eb300449255344d9c9eb3d6fda3d21a3,`path()` now returns 0 length output if given any 0 length inputs (#54).,1,94,FALSE,NA
fs,c191b66e151d224329b47c3af302f572,Removed the autotool system dependency on non-windows systems.,1,95,FALSE,NA
fs,a866d8a802ca8084ebe016c77ced8e80,`dir_delete()` now correctly expands paths (#47).,1,96,FALSE,NA
fs,36f67a43a9497bd8726d873bfd8c0444,`dir_delete()` now correctly deletes hidden files and directories (#46).,1,97,FALSE,NA
fs,e7ac7ce7041f61244b3a2590fe592793,"`link_path()` now checks for an error before trying to make a string, avoiding a crash (#43).",1,98,FALSE,NA
fs,f2eaa502a20421ed5e5182f8fdf40015,"libuv return paths now marked as UTF-8 strings in C code, fixing encoding issues on windows. (#42)",1,99,FALSE,NA
fs,0a08178cf392e4348af27bcb358f6586,`dir_copy()` now copies the directory inside the target if the target is a directory (#51).,1,100,FALSE,NA
fs,c1a3380c08058a9fc4b63ed4896a7ecc,`dir_copy()` now works correctly with absolute paths and no longer removes files when `overwrite = TRUE`.,1,101,FALSE,NA
fs,ebdca538589caf715e12a994415bd3a8,Removed the libbsd system dependency on linux,1,102,FALSE,NA
fs,1305539a84fe96537b4e27d6dc7fd802,Initial release,1,103,FALSE,NA
fs,96f7f2051b6a21be4558cc270efe130b,Added a `NEWS.md` file to track changes to the package.,1,104,FALSE,NA
gargle,5cf417fa418bfebed6841696a7409c51,Fixed a bug in an internal helper that validates input specifying a service account. The helper targets a common mistake where the JSON for an OAuth client is provided to an argument that is meant for a service account (#270).,1,1,FALSE,NA
gargle,9fadb1e4691a3e1d4e100d00961f3e36,"Completed some overlooked, unfinished work around the OAuth ""app"" to ""client"" transition that affected out-of-band auth (#263, #264).",1,2,FALSE,NA
gargle,e9e53fc8aa24b29dd5b342e002d3fe3c,The `secret_*()` functions are more discoverable via documentation.,1,3,FALSE,NA
gargle,658424b1b7c89e9c37fa275ea24abd6b,"gargle's existing unexported `secret_*()` functions are deprecated, in favor of new, exported `secret_*()` functions that are built on or inlined from httr2. The `vignette(""managing-tokens-securely"")` is updated to reflect the new, recommended strategy for encrypting secrets.",1,4,FALSE,NA
gargle,658424b1b7c89e9c37fa275ea24abd6b,• `secret_encrypt_json()` / `secret_decrypt_json()` are new gargle-specific functions.,2,5,FALSE,"gargle's existing unexported `secret_*()` functions are deprecated, in favor of new, exported `secret_*()` functions that are built on or inlined from httr2. The `vignette(""managing-tokens-securely"")` is updated to reflect the new, recommended strategy for encrypting secrets."
gargle,658424b1b7c89e9c37fa275ea24abd6b,"• `secret_write_rds()` / `secret_read_rds()`, `secret_make_key()`, and `secret_had_key()` are basically copies of their httr2 counterparts.",2,6,FALSE,"gargle's existing unexported `secret_*()` functions are deprecated, in favor of new, exported `secret_*()` functions that are built on or inlined from httr2. The `vignette(""managing-tokens-securely"")` is updated to reflect the new, recommended strategy for encrypting secrets."
gargle,658424b1b7c89e9c37fa275ea24abd6b,"• Legacy functions to move away from: `secret_pw_name()`, `secret_pw_gen()`, `secret_pw_exists()`, `secret_pw_get()`, `secret_can_decrypt()`, `secret_read()`, `secret_write()`.",2,7,FALSE,"gargle's existing unexported `secret_*()` functions are deprecated, in favor of new, exported `secret_*()` functions that are built on or inlined from httr2. The `vignette(""managing-tokens-securely"")` is updated to reflect the new, recommended strategy for encrypting secrets."
gargle,658424b1b7c89e9c37fa275ea24abd6b,• The new approach makes it much easier to use gargle functions to encrypt and decrypt credentials in a project that is *not* necessarily an R package.,2,8,FALSE,"gargle's existing unexported `secret_*()` functions are deprecated, in favor of new, exported `secret_*()` functions that are built on or inlined from httr2. The `vignette(""managing-tokens-securely"")` is updated to reflect the new, recommended strategy for encrypting secrets."
gargle,5f1f06f08e6d7b60902f59b9284ef50c,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:",1,9,FALSE,NA
gargle,5f1f06f08e6d7b60902f59b9284ef50c,• `init_AuthState(client =)` instead of `init_AuthState(app =)`,2,10,FALSE,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:"
gargle,5f1f06f08e6d7b60902f59b9284ef50c,• `AuthState$client` instead of `AuthState$app`,2,11,FALSE,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:"
gargle,5f1f06f08e6d7b60902f59b9284ef50c,• `AuthState$set_client()` instead of `AuthState$set_app()`,2,12,FALSE,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:"
gargle,5f1f06f08e6d7b60902f59b9284ef50c,• `gargle2.0_token(client =)` instead of `gargle2.0_token(app =)`,2,13,FALSE,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:"
gargle,5f1f06f08e6d7b60902f59b9284ef50c,• `credentials_user_oauth2(client =)` instead of `credentials_user_oauth2(app =)`,2,14,FALSE,"The transition from OAuth ""app"" to OAuth ""client"" is fully enacted now. This process tarted in v1.3.0, when the `""gargle_oauth_client""` class was introduced, to support the new pseudo-OOB auth flow. The deprecations are implemented to preserve backwards compatibility for some time. In this release, function, argument, and field names are all updated to the ""client"" terminology:"
gargle,2a11d21691887bd594ef1189d6c4e5b9,"A new `vignette(""oauth-client-not-app"")` explains how a wrapper package should adapt.",1,14,FALSE,NA
gargle,2273dd81f69e3200656049c1fcd63f67,"When the `""gargle_verbosity""` option is set to `""debug""`, there are more debugging messages around user credentials. Specifically, more information is available on the email, OAuth client, and scopes, with the goal of better understanding why a cached token is (or is not) being used.",1,15,FALSE,NA
gargle,a131742f71e3bd84d4f779b13079bdf3,`check_is_service_account()` is a new function for use in wrapper packages to throw a more informative error when a user provides JSON for an OAuth client to an argument that is expecting JSON for a service account.,1,16,FALSE,NA
gargle,5f2f48f69be0b8635cb8bfb289b0f3c0,`response_process()` has improved handling of responses that represent an HTTP error with HTML content (as opposed to the expected and preferred JSON) (#254).,1,17,FALSE,NA
gargle,a9d824eabc94046daf92212238b2cda2,"`response_process(call = caller_env())` is a new argument that is passed along to various helpers, which can improve error reporting for user-facing functions that call `response_process()` (#255).",1,18,FALSE,NA
gargle,a58d21e0329625527c228653cb0d8130,"`credentials_gce(scopes = NULL)` is now equivalent to `credentials_gce(scopes = ""https://www.googleapis.com/auth/cloud-platform"")`, i.e. there's an even stronger current towards the recommended ""cloud-platform"" scope.",1,19,FALSE,NA
gargle,77af0a25a15c98fd19db83aaa0c1b152,`credentials_gce(scopes =)` now includes those `scopes` in its request to the metadata server for an access token (#216). Note that the scopes for a GCE access token are generally pre-determined for the instance and its associated service account at creation/launch time and these requested `scopes` will have no effect. But this seems to do no harm and it is possible that there are contexts where this is useful.,1,20,FALSE,NA
gargle,dd263ed698c0baa7c1eaceb24579a5a2,"`credentials_gce()` now emits considerably more information when the `""gargle_verbosity""` option is set to `""debug""`. For example, it reports mismatches between requested scopes and instance scopes and between requested scopes and the access token's actual scopes.",1,21,FALSE,NA
gargle,eb0327e054db2054d6191afe2d5a9214,"`credentials_gce()` stores the actual scopes of the received access token, which can differ from the requested scopes. This is also noted when the `""gargle_verbosity""` option is set to `""debug""`.",1,22,FALSE,NA
gargle,a43d26cd6bd6f71ed52a92c5b6a7508a,The `GceToken` R6 class gains a better `$print()` method that is more similar to gargle's treatment of tokens obtained with other flows.,1,23,FALSE,NA
gargle,240bbbefc0b000903e4d421e3f3abfb3,"gargle is better able to detect when it's running on Posit Workbench or RStudio Server, e.g., in a subprocess.",1,24,FALSE,NA
gargle,7c91be30636fc7907c8055b7c6249fef,"`gargle_oauth_client_type()` is a new function that returns either ""installed"" or ""web"". It returns the value of the new global option by the same name (`""gargle_oauth_client_type""`), if defined. If the option is not defined, returns ""web"" on RStudio Server, Posit Workbench, Posit Cloud, or Google Colaboratory and ""installed"" otherwise. In the context of out-of-band (OOB) auth, an ""installed"" client type leads to the conventional OOB flow (only available for GCP projects in testing mode) and a ""web"" client leads to the new pseudo-OOB flow. The option and accessor have been added to cover contexts other than those mentioned above where it is helpful to request a ""web"" client.",1,25,FALSE,NA
gargle,5570e2fb9ed1099a4ed4eaf923206a0c,`credentials_user_oauth2()` now works in Google Colaboratory (#140).,1,26,FALSE,NA
gargle,dbb1747db958d702e307916d948d2c3b,"gargle now elicits user input via `readline()`, instead of via `utils::menu()`, which is favorable for interacting with the user in a Jupyter notebook (#242).",1,27,FALSE,NA
gargle,07ae47e593ab4aa0aed0a97520349d3b,"The roxygen templating functions that wrapper packages can use to generate standardized documentation around auth have been updated to reflect gargle's pivot from OAuth ""app"" to ""client"". Changes of note:",1,28,FALSE,NA
gargle,07ae47e593ab4aa0aed0a97520349d3b,"• `PREFIX_auth_configure_description()` crosslinks to `PREFIX_oauth_client()` now, not `PREFIX_oauth_app()`. So this assumes the package has indeed introduced the `PREFIX_oauth_client()` function (and, presumably, has deprecated `PREFIX_oauth_app()`).",2,29,FALSE,"The roxygen templating functions that wrapper packages can use to generate standardized documentation around auth have been updated to reflect gargle's pivot from OAuth ""app"" to ""client"". Changes of note:"
gargle,07ae47e593ab4aa0aed0a97520349d3b,• `PREFIX_auth_configure_params()` gains `client` argument.,2,30,FALSE,"The roxygen templating functions that wrapper packages can use to generate standardized documentation around auth have been updated to reflect gargle's pivot from OAuth ""app"" to ""client"". Changes of note:"
gargle,07ae47e593ab4aa0aed0a97520349d3b,"• `PREFIX_auth_configure_params()` deprecates the `app` argument and uses a lifecycle badge. It is assumed that the badge SVG is present, which can be achieved with `usethis::use_lifecycle()`.",2,31,FALSE,"The roxygen templating functions that wrapper packages can use to generate standardized documentation around auth have been updated to reflect gargle's pivot from OAuth ""app"" to ""client"". Changes of note:"
gargle,07ae47e593ab4aa0aed0a97520349d3b,"• `PREFIX_auth_configure_params()` crosslinks to `gargle::gargle_oauth_client_from_json()`. The wrapper package therefore needs to state a minimum version for gargle, e.g. `gargle (>= 1.3.0)` (or higher).",2,32,FALSE,"The roxygen templating functions that wrapper packages can use to generate standardized documentation around auth have been updated to reflect gargle's pivot from OAuth ""app"" to ""client"". Changes of note:"
gargle,ce96ae0c42d5a432d83a6fcb42fd7ea0,"`credentials_byo_oauth2()` works now for (variations of) service account tokens, as intended, not just for user tokens (#250). It also emits more information about scopes when the `""gargle_verbosity""` option is set to `""debug""`.",1,33,FALSE,NA
gargle,e2ca9a358a4f25ba756404cf976eb60d,"Using R via RStudio Server, Posit Workbench, or Posit Cloud.",1,34,FALSE,NA
gargle,fc701176f5cb2fca78c8b9bb2d93426a,"Using tidyverse packages such as googledrive, googlesheets4, or bigrquery.",1,35,FALSE,NA
gargle,fac219d7e59086388ebc20815017e82b,"Relying on the built-in OAuth client. Importantly, this client is associated with a GCP project that is in production mode.",1,36,FALSE,NA
gargle,fe19f2ac24c320792dc86c5020aa5d46,"To adjust to Google's deprecation of conventional OOB and to support gargle's new pseudo-OOB flow, it is helpful for gargle to know whether an OAuth client ID is of type ""Web application"" or ""Desktop app"". That means we need a Google- and gargle-specific notion of an OAuth client, so we can introduce a `type` field.",1,37,FALSE,NA
gargle,d34e1921f81fc22f8a5adb9a75c731d2,"A transition from httr to httr2 is on the horizon, so it makes sense to look more toward `httr2:oauth_client()` than to `httr::oauth_app()`. gargle's vocabulary is generally shifting towards ""client"" and away from ""app"".",1,38,FALSE,NA
gargle,9cdecf97e2d8fa2c486767ba1a5cc9cc,"The credential-fetcher `credentials_byo_oauth2()` has been moved to the very beginning of the default registry. The logic is that a user who has specified a non-`NULL` value of `token` must mean business and does not want automagic auth methods like ADC or GCE to be tried before using their `token` (#187, #225).",1,39,FALSE,NA
gargle,117e5cba5bede34ba2b6ba26d75edf75,The `...` in `cred_funs_all()` are now dynamic dots (#224).,1,40,FALSE,NA
gargle,8f01ace04ff55a933afed36e6f9d9e7c,Every registered credential function must have a unique name now. This is newly enforced by `cred_funs_add()` and `cred_funs_set()` (#224).,1,41,FALSE,NA
gargle,84e85e783be93e008da39e9ac848498c,`cred_funs_list_default()` is a new function that returns gargle's default list of credential functions (#226).,1,42,FALSE,NA
gargle,79711260ecf197614937ae697818eafb,`cred_funs_add(cred_fun = NULL)` is now available to remove a credential function from the registry (#224).,1,43,FALSE,NA
gargle,867cad4235aaf067acd1d5000afcb9d8,`with_cred_funs()` and `local_cred_funs()` are new helpers for making narrowly scoped changes to the registry (#226).,1,44,FALSE,NA
gargle,4c17a54433a290472a5577b93cb0358a,The `ls` argument of `cred_funs_set()` has been renamed to `funs` (#226).,1,45,FALSE,NA
gargle,9ed586ad7db4d2772a391cdc2961aea1,"In general, credential registry functions now return the current registry, invisibly (#224).",1,46,FALSE,NA
gargle,2c660b567b4099e5de41e4dd9d5b5675,"Help files below `man/` have been re-generated, so that they give rise to valid HTML5. (This is the impetus for this release, to keep the package safely on CRAN.)",1,47,FALSE,NA
gargle,85b2c613aa85104f9dcb3e8439745f0b,"We have switched to newer oauth2.googleapis.com-based OAuth2 URIs, moving away from the accounts.google.com and googleapis.com/oauth2 equivalents.",1,48,FALSE,NA
gargle,629b25747d15ceff146784d17b0f8f76,"`credentials_gce()` no longer validates the requested scopes against instance scopes. In practice, it's easy for this check to be more of a nuisance than a help (#161, #185 @​craigcitro).",1,49,FALSE,NA
gargle,cb99139cee6210a8ac30dfcf4e5a74dd,"`request_retry()` retries for an expanded set of HTTP codes: 408, 429, 500, 502, 503. Previously, retries were limited to 429 (#169).",1,50,FALSE,NA
gargle,e14e96aa5a80e37259480837a5e7d508,The minimum versions of rlang and testthat have been bumped. The motivation is to exploit and adapt to the changes to the display of error messages.,1,51,FALSE,NA
gargle,edd7d90892ce783321bd5d635eb45216,"The default cache location has moved, to better align with general conventions around where to cache user data. Here's how that looks for a typical user:",1,52,FALSE,NA
gargle,edd7d90892ce783321bd5d635eb45216,"• Typical before, macOS: `~/.R/gargle/gargle-oauth`",2,53,FALSE,"The default cache location has moved, to better align with general conventions around where to cache user data. Here's how that looks for a typical user:"
gargle,edd7d90892ce783321bd5d635eb45216,"• Typical after, macOS: `~/Library/Caches/gargle`",2,54,FALSE,"The default cache location has moved, to better align with general conventions around where to cache user data. Here's how that looks for a typical user:"
gargle,edd7d90892ce783321bd5d635eb45216,"• Typical before, Windows: `C:/Users/jane/.R/gargle/gargle-oauth`",2,55,FALSE,"The default cache location has moved, to better align with general conventions around where to cache user data. Here's how that looks for a typical user:"
gargle,edd7d90892ce783321bd5d635eb45216,"• Typical after, Windows: `C:/Users/jane/AppData/Local/gargle/gargle/Cache`",2,56,FALSE,"The default cache location has moved, to better align with general conventions around where to cache user data. Here's how that looks for a typical user:"
gargle,50b4556d8c6b8c9645f126c6b9d8c9d4,Tokens created with one of the built-in OAuth apps provided by the tidyverse packages are checked for validity. Tokens made with an old app are deleted. Note that we introduced a new OAuth app in gargle v1.0.0 and the previous app could be disabled at any time.,1,57,FALSE,NA
gargle,50b4556d8c6b8c9645f126c6b9d8c9d4,• Nickname of previous tidyverse OAuth app: `tidyverse-calliope`,2,58,FALSE,Tokens created with one of the built-in OAuth apps provided by the tidyverse packages are checked for validity. Tokens made with an old app are deleted. Note that we introduced a new OAuth app in gargle v1.0.0 and the previous app could be disabled at any time.
gargle,50b4556d8c6b8c9645f126c6b9d8c9d4,• Nickname of tidyverse OAuth app as of gargle v1.0.0: `tidyverse-clio`,2,59,FALSE,Tokens created with one of the built-in OAuth apps provided by the tidyverse packages are checked for validity. Tokens made with an old app are deleted. Note that we introduced a new OAuth app in gargle v1.0.0 and the previous app could be disabled at any time.
gargle,fc02ac4012cdf17c7a9663eee12ddf26,"""debug"", equivalent to the previous `gargle_quiet = FALSE`. Use for debugging and troubleshooting.",1,60,FALSE,NA
gargle,27307537e734a2d04e09a1d4676cb035,"""info"" (the default), basically equivalent to the previous `gargle_quiet = TRUE`. Since gargle is not a user-facing package, it has very little to say and only emits messages that end users really need to see.",1,61,FALSE,NA
gargle,74ad7c377b7e0a3518b63e80cd7f2f63,"""silent"", no previous equivalent and of little practical significance. But it can be used to suppress all gargle messages.",1,62,FALSE,NA
gargle,e61ca958788f73b5f46056b502838c88,"Better handling of `BadRequest` errors, i.e. more specifics are revealed.",1,63,FALSE,NA
gargle,46e1680ebeff04b4c8374c4ca62dbe86,"`oauth_app_from_json` now supports JSON files from the ""Web application"" client type (#155).",1,64,FALSE,NA
gargle,bfacf75dd2060257428df892f5cbd555,`request_retry()` is a drop-in substitute for `request_make()` that uses (modified) exponential backoff to retry requests that fail with error `429 RESOURCE_EXHAUSTED` (#63).,1,65,FALSE,NA
gargle,f1d95c8d41a2e6e79a0605c518d13d8d,"Credentials used in selected client packages have been rolled. Users of bigrquery, googledrive, and googlesheets4 can expect a prompt to re-authorize the ""Tidyverse API Packages"" when using an OAuth user token. This has no impact on users who use their own OAuth app (i.e. client ID and secret) or those who use service account tokens.",1,66,FALSE,NA
gargle,0dcd9b9fdc267e61f239ba7855baf211,Troubleshooting gargle auth is a new vignette.,1,67,FALSE,NA
gargle,501b8443c424871e8cd835b60ce098d8,"All user-facing messaging routes through `rlang::inform()`, which (as of rlang 0.4.2) prints to standard output in interactive sessions and to standard error in non-interactive sessions (#133). Messaging remains under the control of the `""gargle_quiet""` option, which defaults to `TRUE`.",1,68,FALSE,NA
gargle,c2045ef477543afb306dc9aeb990a1e7,"The `Gargle2.0` class gains its own `$refresh()` method, which removes a token from gargle's cache when it cannot be refreshed (#79).",1,69,FALSE,NA
gargle,b4ae25e130e96130ba6f576f65e04974,"`credentials_service_account()` and `credentials_app_default()` gain an optional `subject` argument, which can be used to pass a subject claim along to `httr::oauth_service_token()` (#131, @​samterfa).",1,70,FALSE,NA
gargle,425383b8cd832026d8b9a74b3598faff,"`request_make()` defaults to `encode = ""json""`, which differs from the httr default, but aligns better with Google APIs (#124).",1,71,FALSE,NA
gargle,28d4e932ea086a89e6a0d058a53f28d7,"`field_mask()` is a utility function for constructing a Protocol-Buffers-style, JSON-encoded field mask from a named R list.",1,72,FALSE,NA
gargle,ed91cde5e29b000d51592bf6e510ae6f,All R6 classes use the new documentation capabilities that appeared in roxygen2 7.0.0.,1,73,FALSE,NA
gargle,04933131f17bf5440c52a8fbee5213f3,"OAuth2 flow can only be initiated when `rlang::is_interactive()` is `TRUE`. If a new token is needed in a non-interactive session, gargle now throws an error (#113).",1,74,FALSE,NA
gargle,0887b59f522fc06d36c99a08e4245595,"The application default credentials path is fixed on non-Windows platforms (#115, @​acroz).",1,75,FALSE,NA
gargle,84599b90fbd81336a062bf8ab5b4fd46,`request_develop()` can accept a parameter that appears in both the path and the body (#123).,1,76,FALSE,NA
gargle,344d5c85a62343f60c3f3281a7232f9e,`response_process()` explicitly declares the UTF-8 encoding of the content in Google API responses tidyverse/googlesheets4#26.,1,77,FALSE,NA
gargle,529d76b5b1f310d4547da038f97c71cf,`response_process()` is able to expose details for a wider set of errors.,1,78,FALSE,NA
gargle,c802aa9c60383cbfd803f1b0aae6fec9,"Eliminated uninformative failure when OAuth tokens cached on R \<= 3.5 are re-loaded on R \>= 3.6. The change to the default serialization version (2 vs. 3) creates an apparent mismatch between a token's hash and its key. Instead of inexplicably failing, now we attempt to repair the cache and carry on (#109, tidyverse/googledrive#274.",1,79,FALSE,NA
gargle,dd5529ec1f8cebbb8ae766689a1ab15c,"In a non-interactive context, gargle will use a cached OAuth token, if it discovers (at least) one, even if the user has not given explicit instructions. We emit a recommendation that the user make their intent unambiguous and link to the vignette on non-interactive auth (#92).",1,80,FALSE,NA
gargle,3b11811b1eb9a61cad8356f3c7290041,"gargle consults the option `""httr_oob_default""`, if the option `""gargle_oob_default""` is unset. This is part of an effort to automatically detect the need for out-of-band auth in more situations (#102).",1,81,FALSE,NA
gargle,ebf33a0d737cf62e53fbfbf87eed5a45,"`credentials_service_account()` checks explicitly that `type` is `""service_account""`. This makes it easier to detect a common mistake, where the JSON for an OAuth client is provided instead of the JSON representing a service account (#93).",1,82,FALSE,NA
gargle,87488418d6f8f38c49ee4e6205eb04ae,"`credentials_gce()` gains `cloud-platform` as a default scope, assuming that the typical user wants to ""View and manage your data across Google Cloud Platform services"" (#110, @​MarkEdmondson1234).",1,83,FALSE,NA
gargle,0bf518143a6e287f86731383b05f0155,Non-interactive auth is a new vignette that serves as a guide for any client packages that use gargle for auth.,1,84,FALSE,NA
gargle,714e3f1aac34cf2960d9f7d64d3a1c33,"`credentials_gce()` might actually work now (#97, @​wlongabaugh).",1,85,FALSE,NA
gargle,cf81b06a9c1382e2e561adac8c9b6805,`credentials_app_default()` got a small bug fix relating to putting the token in the header (r-dbi/bigrquery#336),1,86,FALSE,NA
gargle,c356a7ce8f9132202611da2b076912fd,"`token_fetch()` silently catches warnings, in addition to errors, as it falls through the registry of credential-fetching methods (#89).",1,87,FALSE,NA
gargle,fcddeb4957551a5372d0c3da6db976ab,The yes/no asking if it's OK to cache OAuth tokens prints fully now (r-dbi/bigrquery#333).,1,88,FALSE,NA
gargle,0d461e322728dbae37b2179f8bd98bbb,The unexported functions available for generating standardized docs for `PKG_auth` functions in client packages have been updated.,1,89,FALSE,NA
gargle,7a4d2acef9054625091410a40108a1b6,"`token_userinfo()`, `token_email()`, and `token_tokeninfo()` are newly exported helpers that retrieve information for a token.",1,90,FALSE,NA
gargle,35ff6c61f1e1ef5d08c2cf91a48e4163,"`AuthState$set_app()` and `AuthState$set_api_key()` now allow setting a value of `NULL`, i.e. these fields are easier to clear.",1,91,FALSE,NA
gargle,7450dc543e27c37137f7f2fbaa9210be,"`credentials_byo_oauth2()` gains the ability to ingest a token from an object of class `httr::request`, i.e. to retrieve the `auth_token` component that holds an object of class `httr::Token2.0` that has been processed with `httr::config()`.",1,92,FALSE,NA
gargle,937ce7a255208cae10e6efe1d28c1a85,"All built-in API credentials have been rotated and are stored internally in a way that reinforces appropriate use. There is a new Privacy policy as well as a policy for authors of packages or other applications. This is related to a process to get the gargle project verified, which affects the OAuth2 capabilities and the consent screen.",1,93,FALSE,NA
gargle,5838ff38fac92f156648325cbef2fbb1,"New vignette on ""How to get your own API credentials"", to help other package authors or users obtain their own API key or OAuth client ID and secret.",1,94,FALSE,NA
gargle,604df7d9b4b6c2f165a363580ad2a171,`credentials_byo_oauth2()` is a new credential function. It is included in the default registry consulted by `token_fetch()` and is tried just before `credentials_user_oauth2()`.,1,95,FALSE,NA
gargle,326d2edd16939521b142b7952880846c,Initial CRAN release,1,96,FALSE,NA
gh,2459b47cbd7a47d53c3b9682f8eb40af,`gh()` gains a new `.max_rate` parameter that sets the maximum number of requests per second.,1,1,FALSE,NA
gh,5cb7aed58c3394e3eabf9191a922d8b9,"gh is now powered by httr2. This should generally have little impact on normal operation but if a request fails, you can use `httr2::last_response()` and `httr2::last_request()` to debug.",1,2,FALSE,NA
gh,12ff07e116230ca47d53719a7eff5f78,`gh()` gains a new `.max_wait` argument which gives the maximum number of minutes to wait if you are rate limited (#67).,1,3,FALSE,NA
gh,566d75a4ad0e6f89cfdbe5e7c27f3c3c,New `gh_rate_limits()` function reports on all rate limits for the active user.,1,4,FALSE,NA
gh,8f6d53dff40e0fe1f167f85d2ab82a90,"gh can now validate GitHub fine-grained personal access tokens (@​jvstein, #171).",1,5,FALSE,NA
gh,b5c0a01ebdb238483d9bdcc7f7add104,"gh now accepts lower-case methods i.e. both `gh::gh(""get /users/hadley/repos"")` and `gh::gh(""GET /users/hadley/repos"")` work (@​maelle, #167).",1,6,FALSE,NA
gh,f4c92865765b3d1c437c0a8301e6ca31,"Response headers (`""response_headers""`) and response content (`""response_content"")` are now returned in error conditions so that error handlers can use information, such as the rate limit reset header, when handling `github_error`s (@​gadenbuie, #117).",1,7,FALSE,NA
gh,77113b47795a39f6fcd89fa5837b8ea6,gh now shows the correct number of records in its progress bar when paginating (#147).,1,8,FALSE,NA
gh,6d5bbd0d21dbc79567c8d73bdae119a4,New `.params` argument in `gh()` to make it easier to pass parameters to it programmatically (#140).,1,9,FALSE,NA
gh,1fcad912f412f95f5b5cc3c88e125d39,"Token validation accounts for the new format announced 2021-03-04 and implemented on 2021-04-01 (#148, @​fmichonneau).",1,10,FALSE,NA
gh,6404ceb6daea0a8c499d3574d61ed337,`gh_gql()` now passes all arguments to `gh()` (#124).,1,11,FALSE,NA
gh,25ce8c89116d0e529972aebbaa343607,"gh now handles responses from pagination better, and tries to properly merge them (#136, @​rundel).",1,12,FALSE,NA
gh,a5486b9a6d7e497b0361e3729cf188ac,"gh can retrieve a PAT from the Git credential store, where the lookup is based on the targeted API URL. This now uses the gitcreds package. The environment variables consulted for URL-specific GitHub PATs have changed.",1,13,FALSE,NA
gh,a5486b9a6d7e497b0361e3729cf188ac,"• For ""https://api.github.com"": `GITHUB_PAT_GITHUB_COM` now, instead of `GITHUB_PAT_API_GITHUB_COM`",2,14,FALSE,"gh can retrieve a PAT from the Git credential store, where the lookup is based on the targeted API URL. This now uses the gitcreds package. The environment variables consulted for URL-specific GitHub PATs have changed."
gh,a5486b9a6d7e497b0361e3729cf188ac,"• For ""https://github.acme.com/api/v3"": `GITHUB_PAT_GITHUB_ACME_COM` now, instead of `GITHUB_PAT_GITHUB_ACME_COM_API_V3`",2,15,FALSE,"gh can retrieve a PAT from the Git credential store, where the lookup is based on the targeted API URL. This now uses the gitcreds package. The environment variables consulted for URL-specific GitHub PATs have changed."
gh,bf8acac46857877b602cd46a0932ea40,See the documentation of the gitcreds package for details.,1,15,FALSE,NA
gh,6d9a70aeb7eb64d885fa5ebfad04af13,"The keyring package is no longer used, in favor of the Git credential store.",1,16,FALSE,NA
gh,83452cc3e07b30fda86944374a48c257,The documentation for the GitHub REST API has moved to https://docs.github.com/rest and endpoints are now documented using the URI template style of RFC 6570:,1,17,FALSE,NA
gh,83452cc3e07b30fda86944374a48c257,• Old: `GET /repos/:owner/:repo/issues`,2,18,FALSE,The documentation for the GitHub REST API has moved to https://docs.github.com/rest and endpoints are now documented using the URI template style of RFC 6570:
gh,83452cc3e07b30fda86944374a48c257,• New: `GET /repos/{owner}/{repo}/issues`,2,19,FALSE,The documentation for the GitHub REST API has moved to https://docs.github.com/rest and endpoints are now documented using the URI template style of RFC 6570:
gh,59fd86b79f197da94092c6cb3c6d17a9,"gh accepts and prioritizes the new style. However, it still does parameter substitution for the old style.",1,19,FALSE,NA
gh,75cdc400a2fb586132258b3eeefa08e4,"Fixed an error that occurred when calling `gh()` with `.progress = FALSE` (@​gadenbuie, #115).",1,20,FALSE,NA
gh,0afbce56b6cc4aef1cd7d05bac861c3d,`gh()` accepts named `NA` parameters that are destined for the request body (#139).,1,21,FALSE,NA
gh,299e4d5849eaf038d19bc671efcf52cf,Raw responses from GitHub are now returned as raw vector.,1,22,FALSE,NA
gh,d4427274a4c4044edf78c0687833da34,Responses may be written to disk by providing a path in the `.destfile` argument.,1,23,FALSE,NA
gh,7e319a4e882f56260cc87682eecfb04b,"gh now sets `.Last.error` to the error object after an uncaught error, and `.Last.error.trace` to the stack trace of the error.",1,24,FALSE,NA
gh,732b30988a298763d7853e31ece411b2,"`gh()` now silently drops named `NULL` parameters, and throws an error for named `NA` parameters (#21, #84).",1,25,FALSE,NA
gh,459b62f24ccc3f635682420fd1af0851,"`gh()` now returns better values for empty responses, typically empty lists or dictionaries (#66).",1,26,FALSE,NA
gh,eb82edef85bdb10bb5bf238ea78d74dd,`gh()` now has an `.accept` argument to make it easier to set the `Accept` HTTP header (#91).,1,27,FALSE,NA
gh,e6ac5f9e5296310e34121b5f92765ef3,New `gh_gql()` function to make it easier to work with the GitHub GraphQL API.,1,28,FALSE,NA
gh,ea4c188671fbe09529702127efdbaf62,gh now supports separate personal access tokens for GitHub Enterprise sites. See `?gh_token` for details.,1,29,FALSE,NA
gh,426678b6cee534a4078b2d152e6c7e63,"gh now supports storing your GitHub personal access tokens (PAT) in the system keyring, via the keyring package. See `?gh_token` for details.",1,30,FALSE,NA
gh,202f917e75d316e0a479162cd85c2af8,"`gh()` can now POST raw data, which allows adding assets to releases (#56).",1,31,FALSE,NA
gitcreds,866386cd193b819b941723b1236f7185,No user visible changes.,1,1,FALSE,NA
gitcreds,3b68283b4deefae4c7aa28bec4258382,"gitcreds now works with older git versions on Windows. It should work without any configuration for git 2.12.1 or later, and with minimal configuration for git 2.9.2 - git 2.12.0. See `?gitcreds_get` for more.",1,2,FALSE,NA
gitcreds,ddbeda58786884c0f501e7435092dd38,"git errors have now better error messages, they include the output from git as well.",1,3,FALSE,NA
gitcreds,4f9fa085f1c9e0e55ab28275fcc8effc,"The `git-auth.R` file is now standalone, and can be embedded into other packages.",1,4,FALSE,NA
gmailr,5150d11e02d9c2c44293736f8af3c5af,Set up an OAuth client is a new non-vignette article with detailed instructions for creating and configuring an OAuth client.,1,1,FALSE,NA
gmailr,bdc84195744efc8884e0ac86f30b7b06,"`gm_default_oauth_client()` is a new helper that searches for the JSON file representing an OAuth client in a sequence of locations. The (file)path of least resistance is to place this file in the directory returned by `rappdirs::user_data_dir(""gmailr"")`. Another alternative is to record its filepath in the `GMAILR_OAUTH_CLIENT` environment variable. For backwards compatibility, the `GMAILR_APP` environment variable is still consulted, but generates a warning (#166).",1,2,FALSE,NA
gmailr,639b838d94c53e570aa5a5967b5a8915,"`gm_auth()` no longer checks for an OAuth client before calling `gargle::token_fetch()`. This allows other auth methods to work, which by and large don't need an OAuth client, such as `gargle::credentials_byo_oauth2()` (#160, #186).",1,3,FALSE,NA
gmailr,2f294ec5e7204c11a05852559493be79,"If `gm_auth()` fails to get a token and no OAuth client has been configured, it silently calls `gm_auth_configure()` to make one attempt at automatic client discovery. If an OAuth client is indeed discovered, `gm_auth()` tries one more time to get a token. Since the lack of an OAuth client undoubtedly remains the most common reason for `gm_auth()` to fail, its error message includes some specific content if no OAuth client has been configured.",1,4,FALSE,NA
gmailr,c54aa26658241693b81e7ac17bc4b30a,"`gm_token_write()` + `gm_token_read()` is a new matched pair of functions that make it much easier to explicitly store a token obtained in an interactive session then reuse that token elsewhere, such in CI or in a deployed product (#190).",1,5,FALSE,NA
gmailr,87b3c9249f8b3317a4dfd52e11adb18e,"The directory `system.file(""deployed-token-demo"", package = ""gmailr"")` contains a working demo of how to use `gm_token_write()` + `gm_token_read()` in a deployed Shiny app.",1,6,FALSE,NA
gmailr,02382203a5432fdc0946af667057d97a,"`vignette(""deploy-a-token"")` is a new vignette describing how to capture a token interactively, for later use in a non-interactive setting.",1,7,FALSE,NA
gmailr,779e59a8a97212c8ea33d90c37f7ca25,"`gm_oauth_client()` is a new function to replace the now-deprecated `gm_oauth_app()`. This is somewhat about a vocabulary change (""client"" instead of ""app""), but it's really connected to a more meaningful shift in gargle, which has a new appreciation for different OAuth client types (e.g., ""installed"" vs. ""web"").",1,8,FALSE,NA
gmailr,3927b5886c70d37d630e988ac62161dc,"`gm_oauth_client()` (and the function it's replacing, `gm_oauth_app()`) no longer error if there is no configured OAuth client.",1,9,FALSE,NA
gmailr,7303df7fb4393ce571742a17b101f523,`gm_auth_configure()` has an updated signature:,1,10,FALSE,NA
gmailr,7303df7fb4393ce571742a17b101f523,"• The first argument is now named `client`, which is morally equivalent to the previous `app`, i.e. this is essentially a name change.",2,11,FALSE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,"• The `key`, `secret`, `appname`, and `app` arguments are deprecated.",2,12,FALSE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,"• Our strong recommendation is to use the `path` argument, either explicitly::",2,13,FALSE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,"```
gm_auth_configure(path = ""path/to/my-oauth-client.json"")
```",2,14,TRUE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,or implicitly:,2,14,FALSE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,"```
gm_auth_configure()
```",2,15,TRUE,`gm_auth_configure()` has an updated signature:
gmailr,7303df7fb4393ce571742a17b101f523,which works because of the new default: `gm_auth_configure(path = gm_default_oauth_client())`.,2,15,FALSE,`gm_auth_configure()` has an updated signature:
gmailr,f932495df140884ccd569cbcd3aa3704,"`gm_auth(subject =)` is a new argument that can be used with `gm_auth(path =)`, i.e. when using a service account. The `path` and `subject` arguments are ultimately processed by `gargle::credentials_service_account()` and support the use of a service account to impersonate a regular user.",1,16,FALSE,NA
gmailr,edd6d5b834447e4481f738f0603b2cdf,"`gm_scopes()` can now take a character vector of scopes, each of which can be an actual scope or a short alias, e.g., `""gmail.readonly""`, which identifies a scope associated with the Gmail API. When called without arguments, `gm_scopes()` still returns a named vector of Gmail API-specific scopes, where the names are the associated short aliases.",1,17,FALSE,NA
gmailr,20cef3d83219c458bf0ceb940e650f60,"The deprecation process for legacy functions that lack the `gm_` prefix has been advanced. The functions are still present, but throw an error directing the user to switch to the prefixed version. The unexported helper `gmailr:::gm_convert_file(list.files(pattern = ""[.]R$"", recursive = TRUE))` can be used to convert all R files in the current directory to the new names (#95).",1,18,FALSE,NA
gmailr,3c3fc11a836019f01f0548848bbda826,"Legacy auth functions `clear_token()`, `gmail_auth()`, and `use_secret_file()` now throw an error.",1,19,FALSE,NA
gmailr,7462645e4cafa6bac8bdd19388b7f69f,"gmailr no longer `Imports` magrittr and no longer re-exports the magrittr pipe (`%>%`). gmailr is a very pipe-friendly package, so this was originally done for user convenience (#42). Since most users (those using R \>= 4.1) now have access to the base pipe (`|>`), that is now what is shown in gmailr's documentation. Those using R \< 4.1 can still use gmailr with `magrittr::%>%`, but they will need to do `library(magrittr)` for themselves. Any gmailr examples that use the base pipe will no longer work on R \< 4.1. On affected R versions, the examples are automatically converted to a regular section with a note that they might not work.",1,20,FALSE,NA
gmailr,cbf640a6fa915b19ece3a74853ec5507,Jenny Bryan is now the maintainer,1,21,FALSE,NA
gmailr,1c6b5ff7f22d4d6cd05acc19aa57b292,"All functions are now prefixed with `gm_*()` to avoid name conflicts with other packages (including the base package), the previous names have been deprecated and will be removed in future releases. Use `gmailr:::gm_convert_file(list.files(pattern = ""[.]R$"", recursive = TRUE))` to convert all R files in the current directory to the new names. (#95)",1,22,FALSE,NA
gmailr,44cb0e2f3457b99cfe52c02c870c0619,"New `gm_auth_configure()` and `gm_auth()` functions added conforming to the conventions in the gargle package. `gmail_auth()`, `clear_token()` and `use_secret_token()` are now deprecated and will be removed in a future release.",1,23,FALSE,NA
gmailr,a89bb9940e7629d87ff1f8c72605418a,"The google application bundled in previous gmailr releases has been removed, users will now need to create their own applications in order to use gmailr. See the Setup section in the readme for details. This was necessary to comply with stricter enforcement of the API terms of service.",1,24,FALSE,NA
gmailr,f671c8ca55637b883a91d952c548cc6b,"New `gm_attachements()` returns a data.frame of attachment information from a message or draft (#10, #24).",1,25,FALSE,NA
gmailr,3dcca85cdd70817dc151dd5b1e816797,New `gm_delete_draft()` added to delete a draft email without sending it to the trash.,1,26,FALSE,NA
gmailr,8423e8cede284a9a3191605be1449f56,New `gm_profile()` function to return the gmail profile of the currently logged in user (#114),1,27,FALSE,NA
gmailr,4d8a11d6c86c375aac5bb8310b652ff8,"New `gm_scopes()` function to list the available scopes, and gmailr now requests only the full scope by default (#90)",1,28,FALSE,NA
gmailr,89fc04d68776d1ef9fb53057ac043d51,"More detailed examples added to the README and the vignette, including adding and referencing attachments in HTML email.",1,29,FALSE,NA
gmailr,56a16dc3760ed04e1a08654855df6c36,"`gm_body()`, `gm_to()`, `gm_from()`, `gm_cc()`, `gm_bcc()` and `gm_subject()` now automatically mark their output as UTF-8 (#47, #86)",1,30,FALSE,NA
gmailr,1d2c02cd83503c57fa9595b76573ff57,Quoted-printable now works with smart quotes (#77),1,31,FALSE,NA
gmailr,fbfc26510c10a4d82f3aee44f4120393,"Unicode text can now be used in email headers, including the Subject and address fields, like To and Cc (#76, #78)",1,32,FALSE,NA
gmailr,11a3a355d8df7262db33a53bf873dd80,`print.gmail_message()` now only prints the parts of the message that are defined (#88) and now prints out the filenames of attachments (if any).,1,33,FALSE,NA
gmailr,86e43010c87b52caa8b511221d734e91,Bundle a application token and secret in gmailr so the average user won't need to create an application.,1,34,FALSE,NA
gmailr,887e74df145be22440a34c73b369ba64,Great number of bug fixes,1,35,FALSE,NA
gmailr,489a0f5b3663dbf16206382775053a2d,Reworking the print functions to provide more useful and easy to read output,1,36,FALSE,NA
gmailr,ef3e95c4c98175bd268002e62036c97b,Added check for null response to fix bug with DELETE requests (#79) @​josibake,1,37,FALSE,NA
gmailr,46b849dd5995386dece4d900538b2c16,"Added ability to create and send drafts and messages. (#5, #6)",1,38,FALSE,NA
gmailr,539c9fefd06b964f519a3d91ed2243c6,Added a number of tests for mime message creation derived from the Email::Stuffer perl module.,1,39,FALSE,NA
gmailr,a067775ce2716dec952691009b36a7e0,Namespace was not properly updated (#2),1,40,FALSE,NA
gmailr,2567902bc8c1aeb9c92dc1766d099c5a,added extraction functions for gmail_messages (#3),1,41,FALSE,NA
gmailr,8ee2c5681ffe1da9fcdde5ae7c7ef570,Initial release,1,42,FALSE,NA
lifecycle,4d4464e7bb7a184e730ae9cdfc3e6776,Repeated calls to `deprecate_soft()` and `deprecate_warn()` are faster thanks to some internal refactoring (#177).,1,1,FALSE,NA
lifecycle,40a946e8d6bde041c8d54e53a8b0cc8e,Switch from `expr_deparse()` to `deparse()`. This improves performance considerably and the cost of making some unusual function calls mildly less appealing (#167).,1,2,FALSE,NA
lifecycle,e84c0250e5c759de1f6f29966b448a86,"The `with` line is now an info bullet. The `details` lines are info bullets by default, unless the argument is named.",1,3,FALSE,NA
lifecycle,ad227bbc8bf4130e8a85408f39cf07a3,Indirect usages of deprecated features now mention the package that likely used the deprecated feature and recommends contacting the authors (#135).,1,4,FALSE,NA
lifecycle,88bd6080c7006a80a237d5be767f799a,"Indirect usages of `deprecate_warn()` no longer warn repeatedly, even if `always = TRUE` (#135).",1,5,FALSE,NA
lifecycle,eedd0ef137fbf3a2bc3ad1b7d95bf615,"In tests, `deprecate_soft()` will only warn if the deprecated function is called directly from the package being tested, not one of its dependencies. This ensures that you only see the warning when it's your responsibility to do something about it (#134).",1,6,FALSE,NA
lifecycle,a4eb495f644f32f6d0fb439af49680ec,Soft deprecations now only warn every 8 hours in non-package code (#134).,1,7,FALSE,NA
lifecycle,0dcc31f2440e0c0b6df1888c6cbf259f,You can now generate arbitrary text in a deprecation message by wrapping `what` or `with` in `I()` (#120).,1,8,FALSE,NA
lifecycle,d1fe0affb5c404a8e4d4bf54b082c2a2,"`deprecate_warn()` gains an `always = TRUE` argument to force warnings to occur every time, not every 8 hours. This adds an extra step in between `deprecate_warn()` and `deprecate_stop()` (#124).",1,9,FALSE,NA
lifecycle,313e1e6ddb2c5f3d70d3fc6d165ba3e4,`signal_stage()` now supports `with` (#116).,1,10,FALSE,NA
lifecycle,a3e74eaccd51bd893ec26b3f1bd8b074,`deprecate_soft()` now follows the verbosity option when called from the global environment (#113).,1,11,FALSE,NA
lifecycle,a1a2feece8b357243395050faac7f7a4,`last_warnings()` has been renamed to `last_lifecycle_warnings()` and `last_warning()` has been removed. This is for compatibility with the future `rlang::last_warnings()` function to be released in the next rlang version.,1,12,FALSE,NA
lifecycle,4148d087e6b999613b1973bd4f129a27,New vignettes:,1,13,FALSE,NA
lifecycle,4148d087e6b999613b1973bd4f129a27,"• `vignette(""stages"")` describes the lifecycle stages",2,14,FALSE,New vignettes:
lifecycle,4148d087e6b999613b1973bd4f129a27,"• `vignette(""manage"")` teaches you how to manage lifecycle changes in functions you *use*.",2,15,FALSE,New vignettes:
lifecycle,4148d087e6b999613b1973bd4f129a27,"• `vignette(""communicate"")` shows how to use lifecycle in functions that you *write*.",2,16,FALSE,New vignettes:
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:",1,17,FALSE,NA
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,• You can deprecate an argument with `foo(arg)` instead of `foo(arg =)` (#78). This syntax is similar in spirit to the formal arguments of function definitions.,2,18,FALSE,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:"
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,• You can deprecate R6 methods by using `class$method()` (#54).,2,19,FALSE,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:"
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,• A character vector `details` is now converted into a bulleted list (#55).,2,20,FALSE,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:"
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,"• Messages for non-prefix functions (like ""`x<-`()"" and ""`%>%`()"") look a little nicer (#95).",2,21,FALSE,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:"
lifecycle,c933ce59c7e60fa5b48b85daba2b4ea4,• Manually printed warnings now omit the advice footer (#68).,2,22,FALSE,"In `deprecate_soft()`, `deprecate_warn()`, and `deprecate_stop()`:"
lifecycle,f80bb2cb6e687980563543483d7cf2de,"Experimental `signal_stage()` can be used to signal that a function is experimental or superseded. These signals are not currently hooked up to any behaviour, but we'll add tools in a future release (#44).",1,23,FALSE,NA
lifecycle,c2aa728202c1c4b6a1a9289249ee2c27,`lifecycle_cnd_data()` has been removed; as far as I can tell it wasn't used by anyone.,1,24,FALSE,NA
lifecycle,8458d7aff83fda7408212f3ad0b1f38f,Lifecycle warnings are now displayed once every 8 hours.,1,25,FALSE,NA
lifecycle,2b4dfc14581d8d972c788e56086a88da,Added experimental `signal_experimental()` and `signal_superseded()` functions.,1,26,FALSE,NA
lifecycle,f6e96eff4b0f8a118a2d10c446cbeca5,"Added the ""superseded"" lifecycle stage to the documentation.",1,27,FALSE,NA
lifecycle,725bce25fd830ab1f3dbd422ca0a5f3b,`deprecate_stop()` now mentions that function is defunct (#28).,1,28,FALSE,NA
lifecycle,5a8ade976a11c017cb7bd0c5d7acf291,"New `expect_deprecated()` and `expect_defunct()` functions for testting lifecycle warnings and errors. `expect_deprecated()` automatically sets the `lifecycle_verbosity` option to `""warning""` to enforce warnings at each invokation rather than once per session.",1,29,FALSE,NA
lifecycle,6424ef5c653a1722f8693c4c95aa31e3,"New syntax `""foo(arg = 'can\\'t be a baz')""` to describe that specific inputs for an argument are deprecated (#30, @​krlmlr).",1,30,FALSE,NA
lifecycle,e637e7db186abfe0d4a455fa475f8ca1,New `is_present()` function to test whether the caller has supplied a `deprecated()` function.,1,31,FALSE,NA
lifecycle,fa2b8fd15b4aaec7968f411da663ff5b,Deprecated functions under the control of the developer now warn repeatedly in unit tests.,1,32,FALSE,NA
lifecycle,18ca3c34ab1ab6bd577ce771c36da445,"Deprecation warnings now record a backtrace. Call `lifecycle::last_lifecycle_warnings()` and `lifecycle::last_warning()` to print the warnings that occurred during the last command, along with their backtraces.",1,33,FALSE,NA
lifecycle,712444a4badaf1107cf138917c2a4393,The naming scheme of signaller functions has been simplified:,1,34,FALSE,NA
lifecycle,712444a4badaf1107cf138917c2a4393,• `signal_soft_deprecated()` is now `deprecate_soft()`.,2,35,FALSE,The naming scheme of signaller functions has been simplified:
lifecycle,712444a4badaf1107cf138917c2a4393,• `warn_deprecated()` is now `deprecate_warn()`.,2,36,FALSE,The naming scheme of signaller functions has been simplified:
lifecycle,712444a4badaf1107cf138917c2a4393,• `stop_defunct()` is now `deprecate_stop()`.,2,37,FALSE,The naming scheme of signaller functions has been simplified:
lifecycle,8dcec2a2d458f92a4c5a2a91be22da3a,The signaller functions now take a version and two descriptors for the deprecated feature and its replacement (the latter is optional). The deprecation message is built from these components. You can pass a `details` argument to append additional information to the generated deprecation message.,1,38,FALSE,NA
lifecycle,2bab81cd973f0f8e96d28cc728d71d27,Helpers from rlang's `compat-lifecycle.R` drop-in file are now exported in this package.,1,39,FALSE,NA
lintr,9c1b425a7abb3a796366b46c8b6d7d82,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.,1,1,FALSE,NA
lintr,9c1b425a7abb3a796366b46c8b6d7d82,• `source_file=` argument to `ids_with_token()` and `with_id()`.,2,2,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,"• Passing linters by name or as non-`""linter""`-classed functions.",2,3,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,• `linter=` argument of `Lint()`.,2,4,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,"• Linters `closed_curly_linter()`, `open_curly_linter()`, `paren_brace_linter()`, and `semicolon_terminator_linter()`..",2,5,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,• `with_defaults()`.,2,6,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,"• Linters `closed_curly_linter()`, `open_curly_linter()`, `paren_brace_linter()`, and `semicolon_terminator_linter()`.",2,7,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,9c1b425a7abb3a796366b46c8b6d7d82,• Helper `with_defaults()`.,2,8,FALSE,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release.
lintr,6b429c030378814b5f90c26be74161bf,"`all_linters()` has signature `all_linters(..., packages)` rather than `all_linters(packages, ...)` (#2332, @​MichaelChirico). This forces `packages=` to be supplied by name and will break users who rely on supplying `packages=` positionally, of which we found none searching GitHub.",1,9,FALSE,NA
lintr,8e0c01a18b6008f89b390490cb212457,"Adjusted various lint messages for consistency in readability (#1330, @​MichaelChirico). In general, we favor lint messages to be phrased like ""Action, reason"" to but the ""what"" piece of the message front-and-center. This may be a breaking change for code that tests the specific phrasing of lints.",1,10,FALSE,NA
lintr,e9431de4927fb93bb9d7abd59f95bec9,"`extraction_operator_linter()` is deprecated. Although switching from `$` to `[[` has some robustness benefits for package code, it can lead to non-idiomatic code in many contexts (e.g. R6 classes, Shiny applications, etc.) (#2409, @​IndrajeetPatil). To enable the detection of the `$` operator for extraction through partial matching, use `options(warnPartialMatchDollar = TRUE)`.",1,11,FALSE,NA
lintr,e01b797009636ec1e9682870dc5e0edc,`unnecessary_nested_if_linter()` is deprecated and subsumed into the new/more general `unnecessary_nesting_linter()`.,1,12,FALSE,NA
lintr,c6487e7c4d729fa9e7992d15425bd60e,"`object_name_linter()` no longer errors when user-supplied `regexes=` have capture groups (#2188, @​MichaelChirico).",1,13,FALSE,NA
lintr,429d8f5cd2553b43a1515ebfbfd5d479,"`.lintr` config validation correctly accepts regular expressions which only compile under `perl = TRUE` (#2375, @​MichaelChirico). These have always been valid (since `rex::re_matches()`, which powers the lint exclusion logic, also uses this setting), but the new up-front validation in v3.1.1 incorrectly used `perl = FALSE`.",1,14,FALSE,NA
lintr,cc81baaeccbff07c563e2f0da288a8a5,"New default linter `return_linter()` for the style guide rule that terminal returns should be left implicit (#1100, #2343, #2354, and #2356, @​MEO265 and @​MichaelChirico).",1,15,FALSE,NA
lintr,9d42504f86a3667524da580bae76c667,"More helpful errors for invalid configs (#2253, @​MichaelChirico).",1,16,FALSE,NA
lintr,22cd97c7e6e14028bec8605800c20616,`library_call_linter()` is extended,1,17,FALSE,NA
lintr,22cd97c7e6e14028bec8605800c20616,"• to encourage all packages to be attached with `library(symbol)`, not `library(""symbol"", character.only = TRUE)` or ""vectorized"" approaches looping over package names (part of #884, @​MichaelChirico).",2,18,FALSE,`library_call_linter()` is extended
lintr,22cd97c7e6e14028bec8605800c20616,"• to discourage many consecutive calls to `suppressMessages()` or `suppressPackageStartupMessages()` (part of #884, @​MichaelChirico).",2,19,FALSE,`library_call_linter()` is extended
lintr,f60de5f5fb9a53929084100be42fa2a8,`return_linter()` also has arguments for fine-tuning which functions get linted:,1,20,FALSE,NA
lintr,f60de5f5fb9a53929084100be42fa2a8,"• `return_style` (`""implicit""` by default) which checks that all functions confirm to the specified return style of `""implicit""` or `""explicit""` (#2271 and part of #884, @​MichaelChirico, @​AshesITR and @​MEO265).",2,21,FALSE,`return_linter()` also has arguments for fine-tuning which functions get linted:
lintr,f60de5f5fb9a53929084100be42fa2a8,"• `allow_implicit_else` (default `TRUE`) which, when `FALSE`, checks that all terminal `if` statements are paired with a corresponding `else` statement (part of #884, @​MichaelChirico).",2,22,FALSE,`return_linter()` also has arguments for fine-tuning which functions get linted:
lintr,f60de5f5fb9a53929084100be42fa2a8,"• `return_functions` to customize which functions are equivalent to `return()` as ""exit"" clauses, e.g. `rlang::abort()` can be considered in addition to the default functions like `stop()` and `q()` from base (#2271 and part of #884, @​MichaelChirico and @​MEO265).",2,23,FALSE,`return_linter()` also has arguments for fine-tuning which functions get linted:
lintr,f60de5f5fb9a53929084100be42fa2a8,"• `except` to customize which functions are ignored entirely (i.e., whether they have a return of the specified style is not checked; #2271 and part of #884, @​MichaelChirico and @​MEO265). Namespace hooks like `.onAttach()` and `.onLoad()` are always ignored.",2,24,FALSE,`return_linter()` also has arguments for fine-tuning which functions get linted:
lintr,f60de5f5fb9a53929084100be42fa2a8,"• `except_regex`, the same purpose as `except=`, but filters functions by pattern. This is motivated by {RUnit}, where test suites are based on unit test functions matched by pattern, e.g. `^Test`, and where explicit return may be awkward (#2335, @​MichaelChirico).",2,25,FALSE,`return_linter()` also has arguments for fine-tuning which functions get linted:
lintr,fcba1faabcc6e2d237ae1c619ac9c32c,"`unnecessary_lambda_linter` is extended to encourage vectorized comparisons where possible, e.g. `sapply(x, sum) > 0` instead of `sapply(x, function(x) sum(x) > 0)` (part of #884, @​MichaelChirico). Toggle this behavior with argument `allow_comparison`.",1,26,FALSE,NA
lintr,7c8832595641771e6230a7cfa972b26a,"`backport_linter()` is slightly faster by moving expensive computations outside the linting function (#2339, #2348, @​AshesITR and @​MichaelChirico).",1,27,FALSE,NA
lintr,d0718d6fecc06cb46f4ab9e59f271059,"`Linter()` has a new argument `linter_level` (default `NA`). This is used by `lint()` to more efficiently check for expression levels than the idiom `if (!is_lint_level(...)) { return(list()) }` (#2351, @​AshesITR).",1,28,FALSE,NA
lintr,e4eb84ae84af0e2e74b09d0abf018eca,"`string_boundary_linter()` recognizes regular expression calls like `grepl(""^abc$"", x)` that can be replaced by using `==` instead (#1613, @​MichaelChirico).",1,29,FALSE,NA
lintr,173e78ac348e390e2215b6b56411c1f5,"`unreachable_code_linter()` has an argument `allow_comment_regex` for customizing which ""terminal"" comments to exclude (#2327, @​MichaelChirico). `# nolint end` comments are always excluded, as are {covr} exclusions (e.g. `# nocov end`) by default.",1,30,FALSE,NA
lintr,10327e1f36f129081cd2466407234a83,"`format()` and `print()` methods for `lint` and `lints` classes get a new option `width` to control the printing width of lint messages (#1884, @​MichaelChirico). The default is controlled by a new option `lintr.format_width`; if unset, no wrapping occurs (matching earlier behavior).",1,31,FALSE,NA
lintr,d56b7856d19e710a2ca80bfece385ab2,"`implicit_assignment_linter()` gets a custom message for the case of using `(` to induce printing like `(x <- foo())`; use an explicit call to `print()` for clarity (#2257, @​MichaelChirico).",1,32,FALSE,NA
lintr,cf3029f8724665410c8642c5b7602d5e,"New function node caching for big efficiency gains to most linters (e.g. overall `lint_package()` improvement of 14-27% and core linting improvement up to 30%; #2357, @​AshesITR). Most linters are written around function usage, and XPath performance searching for many functions is poor. The new `xml_find_function_calls()` entry in the `get_source_expressions()` output caches all function call nodes instead. See the vignette on creating linters for more details on how to use it.",1,33,FALSE,NA
lintr,e53ce7a41034f440bd02de54f0b88ac7,"`todo_comment_linter()` has a new argument `except_regex` for setting *valid* TODO comments, e.g. for forcing TODO comments to be linked to GitHub issues like `TODO(#154)` (#2047, @​MichaelChirico).",1,34,FALSE,NA
lintr,0b91e02580377340d6f97e28e2e51d42,"`vector_logic_linter()` is extended to recognize incorrect usage of scalar operators `&&` and `||` inside subsetting expressions like `dplyr::filter(x, A && B)` (#2166, @​MichaelChirico).",1,35,FALSE,NA
lintr,337027e44f8f55251b4e65a75d8e9cde,"`any_is_na_linter()` is extended to catch the unusual usage `NA %in% x` (#2113, @​MichaelChirico).",1,36,FALSE,NA
lintr,dde8364982b5bba1f9bdfe9ee9f08dd2,"`condition_call_linter()` for ensuring consistent use of `call.` in `warning()` and `stop()`. The default `call. = FALSE` follows the tidyverse guidance of not displaying the call (#2226, @​Bisaloo)",1,37,FALSE,NA
lintr,d24cbcc3083ed23b95155e7a089831ec,"`sample_int_linter()` for encouraging `sample.int(n, ...)` over equivalents like `sample(1:n, ...)` (part of #884, @​MichaelChirico).",1,38,FALSE,NA
lintr,304cac0de194b2410c6f4608d351079f,"`stopifnot_all_linter()` discourages tests with `all()` like `stopifnot(all(x > 0))`; `stopifnot()` runs `all()` itself, and uses a better error message (part of #884, @​MichaelChirico).",1,39,FALSE,NA
lintr,73f04fd60b0b632bffca53fc65a8fd43,"`comparison_negation_linter()` for discouraging negated comparisons when a direct negation is preferable, e.g. `!(x == y)` could be `x != y` (part of #884, @​MichaelChirico).",1,40,FALSE,NA
lintr,854ba333f8e226a041e308cc8556ca48,"`nzchar_linter()` for encouraging `nzchar()` to test for empty strings, e.g. `nchar(x) > 0` can be `nzchar(x)` (part of #884, @​MichaelChirico).",1,41,FALSE,NA
lintr,42c9f7e5cea1ca2faeec0d1c91436bdf,"`terminal_close_linter()` for discouraging using `close()` to end functions (part of #884, @​MichaelChirico). Such usages are not robust to errors, where `close()` will not be run as intended. Put `close()` in an `on.exit()` hook, or use {withr} to manage connections with proper cleanup.",1,42,FALSE,NA
lintr,3545bbc164b4436a708a9f62f9d350d5,"`rep_len_linter()` for encouraging use of `rep_len()` directly instead of `rep(x, length.out = n)` (part of #884, @​MichaelChirico).",1,43,FALSE,NA
lintr,34a03a0fb38f53c48508ef8a8ce1020c,"`which_grepl_linter()` for discouraging `which(grepl(ptn, x))` in favor of directly using `grep(ptn, x)` (part of #884, @​MichaelChirico).",1,44,FALSE,NA
lintr,0a85d69cc3db5acbc383743f95a6e793,"`list_comparison_linter()` for discouraging comparisons on the output of `lapply()`, e.g. `lapply(x, sum) > 10` (part of #884, @​MichaelChirico).",1,45,FALSE,NA
lintr,256ab16eefe26c779fdd6d981e780d0f,"`print_linter()` for discouraging usage of `print()` on string literals like `print(""Reached here"")` or `print(paste(""Found"", nrow(DF), ""rows.""))` (#1894, @​MichaelChirico).",1,46,FALSE,NA
lintr,b3b4dacc77e50138a7c5e7862eaa098a,"`unnecessary_nesting_linter()` for discouraging overly-nested code where an early return or eliminated sub-expression (inside '{') is preferable (#2317 and part of #884, @​MichaelChirico).",1,47,FALSE,NA
lintr,3794cb64a07eaf9887053917b364a8e4,"`consecutive_mutate_linter()` for encouraging consecutive calls to `dplyr::mutate()` to be combined (part of #884, @​MichaelChirico).",1,48,FALSE,NA
lintr,aafde487da45569028ecbc93e0c78e8d,"`if_switch_linter()` for encouraging `switch()` over repeated `if`/`else` tests (#2322 and part of #884, @​MichaelChirico).",1,49,FALSE,NA
lintr,553c44bb9faf98234f92a6c85f1c9edc,"`nested_pipe_linter()` for discouraging pipes within pipes, e.g. `df1 %>% inner_join(df2 %>% select(a, b))` (part of #884, @​MichaelChirico).",1,50,FALSE,NA
lintr,a0850422ba0776104438cc3bcd4b5e31,"`nrow_subset_linter()` for discouraging usage like `nrow(subset(x, conditions))` in favor of something like `with(x, sum(conditions))` which doesn't require a full subset of `x` (#2313, #2314 and part of #884, @​MichaelChirico).",1,51,FALSE,NA
lintr,a9c3d30d0e0611f9f19bd0e6d53f0191,"`pipe_return_linter()` for discouraging usage of `return()` inside a {magrittr} pipeline (part of #884, @​MichaelChirico).",1,52,FALSE,NA
lintr,2f7677c62949847a3eac56fb28f2b5a3,"`one_call_pipe_linter()` for discouraging one-step pipelines like `x |> as.character()` (#2330 and part of #884, @​MichaelChirico).",1,53,FALSE,NA
lintr,c40f65a5e5f06ca2ac84b9fed126037e,"`object_overwrite_linter()` for discouraging re-use of upstream package exports as local variables (#2344, #2346 and part of #884, @​MichaelChirico and @​AshesITR).",1,54,FALSE,NA
lintr,5903ca798b33d23a5da1de75cb4c851b,"`unreachable_code_linter()` ignores reachable code in inline functions like `function(x) if (x > 2) stop() else x` (#2259, @​MEO265).",1,55,FALSE,NA
lintr,f4c2a462fe7bbe65700aff1ec7804b28,`unnecessary_lambda_linter()`,1,56,FALSE,NA
lintr,f4c2a462fe7bbe65700aff1ec7804b28,"• ignores extractions with explicit returns like `lapply(l, function(x) foo(x)$bar)` (#2258, @​MichaelChirico).",2,57,FALSE,`unnecessary_lambda_linter()`
lintr,f4c2a462fe7bbe65700aff1ec7804b28,"• ignores calls on the RHS of operators like `lapply(l, function(x) ""a"" %in% names(x))` (#2310, @​MichaelChirico).",2,58,FALSE,`unnecessary_lambda_linter()`
lintr,af47076170d49469e46b0b4bcfdd5acd,"`vector_logic_linter()` recognizes some cases where bitwise `&`/`|` are used correctly (#1453, @​MichaelChirico).",1,59,FALSE,NA
lintr,f0b25c3f8b63ddfae64d05faa26120b7,"`expect_comparison_linter()` ignores faulty usage like `expect_true(x, y > z)` (#2083, @​MichaelChirico). Note that `y > z` is being passed to the `info=` argument, so this is likely a mistake.",1,60,FALSE,NA
lintr,256845bc32950f217ebb2ea6c2f4390e,"`consecutive_assertion_linter()` ignores cases where a second asssertion follows assignment with `=` (#2444, @​MichaelChirico).",1,61,FALSE,NA
lintr,882b43a6a299bb149c4cf4d5f939059c,"`missing_argument_linter()` catches all missing arguments in calls with several, e.g. `foo(,,)` gives 3 lints instead of 2 (#2399, @​MichaelChirico).",1,62,FALSE,NA
lintr,96b2653c5741d31010c2e5c2392ee102,"`duplicate_argument_linter()` no longer misses cases with duplicate arguments where a comment comes between the argument name and `=` (#2402, @​MichaelChirico).",1,63,FALSE,NA
lintr,ef58ed73e8820e6264cd29db83626c43,"`infix_spaces_linter()` distinguishes `<-`, `:=`, `<<-` and `->`, `->>`, i.e. `infix_spaces_linter(exclude_operators = ""->"")` will no longer exclude `->>` (#2115, @​MichaelChirico). This change is breaking for users relying on manually-supplied `exclude_operators` containing `""<-""` to also exclude `:=` and `<<-`. The fix is to manually supply `"":=""` and `""<<-""` as well. We don't expect this change to affect many users, the fix is simple, and the new behavior is much more transparent, so we are including this breakage in a minor release.",1,64,FALSE,NA
lintr,858a66f58f1f6c6d5e14eb200ed1a686,Removed `find_line()` and `find_column()` entries from `get_source_expressions()` expression-level objects. These have been marked deprecated since version 3.0.0. No users were found on GitHub.,1,65,FALSE,NA
lintr,478a6a3d5482c95d4b062a7330a15721,"There is experimental support for writing config in plain R scripts (as opposed to DCF files; #1210, @​MichaelChirico). The script is run in a new environment and variables matching settings (`?default_settings`) are copied over. In particular, this removes the need to write R code in a DCF-friendly way, and allows normal R syntax highlighting in the saved file. We may eventually deprecate the DCF approach in favor of this one; user feedback is welcome on strong preferences for either approach, or for a different approach like YAML. Generally you should be able to convert your existing `.lintr` file to an equivalent R config by replacing the `:` key-value separators with assignments (`<-`). By default, such a config is searched for in a file named `.lintr.R`. This is a mildly breaking change if you happened to be keeping a file `.lintr.R` around since that file is given precedence over `.lintr`.",1,66,FALSE,NA
lintr,478a6a3d5482c95d4b062a7330a15721,"• We also validate config files up-front make it clearer when invalid configs are present (#2195, @​MichaelChirico). There is a warning for ""invalid"" settings, i.e., settings not part of `?default_settings`. We think this is more likely to affect users declaring settings in R, since any variable defined in the config that's not a setting must be removed to make it clearer which variables are settings vs. ancillary.",2,67,FALSE,"There is experimental support for writing config in plain R scripts (as opposed to DCF files; #1210, @​MichaelChirico). The script is run in a new environment and variables matching settings (`?default_settings`) are copied over. In particular, this removes the need to write R code in a DCF-friendly way, and allows normal R syntax highlighting in the saved file. We may eventually deprecate the DCF approach in favor of this one; user feedback is welcome on strong preferences for either approach, or for a different approach like YAML. Generally you should be able to convert your existing `.lintr` file to an equivalent R config by replacing the `:` key-value separators with assignments (`<-`). By default, such a config is searched for in a file named `.lintr.R`. This is a mildly breaking change if you happened to be keeping a file `.lintr.R` around since that file is given precedence over `.lintr`."
lintr,6c36e535eea827656f9bca4aed2063eb,"`sprintf_linter()` doesn't error in cases where whitespace in `...` arguments is significant, e.g. `sprintf(""%s"", if (A) """" else y)`, which won't parse if whitespace is removed (#2131, @​MichaelChirico).",1,68,FALSE,NA
lintr,ef31736d9b38302a4dfc7b55b5018d8c,"`assignment_linter()` lints the {magrittr} assignment pipe `%<>%` (#2008, @​MichaelChirico). This can be deactivated by setting the new argument `allow_pipe_assign` to `TRUE`.",1,69,FALSE,NA
lintr,c696d941eb0198b76fdcdae2590bb762,`object_usage_linter()`:,1,70,FALSE,NA
lintr,c696d941eb0198b76fdcdae2590bb762,"• assumes `glue()` is `glue::glue()` when `interpret_glue=TRUE` (#2032, @​MichaelChirico).",2,71,FALSE,`object_usage_linter()`:
lintr,c696d941eb0198b76fdcdae2590bb762,"• finds function usages, including infix usage, inside `glue()` calls to avoid false positives for ""unused objects"" (#2029 and #2069, @​MichaelChirico).",2,72,FALSE,`object_usage_linter()`:
lintr,841eb6175ba3dced37fc3b4f909e069d,"`object_name_linter()` no longer attempts to lint strings in function calls on the LHS of assignments (#1466, @​MichaelChirico).",1,73,FALSE,NA
lintr,3e377343eb5c3a675aa953d17d54708c,"`infix_spaces_linter()` allows finer control for linting `=` in different scenarios using parse tags `EQ_ASSIGN`, `EQ_SUB`, and `EQ_FORMALS` (#1977, @​MichaelChirico).",1,74,FALSE,NA
lintr,3a30aa7873ea6fbb785d646d40339131,"`equals_na_linter()` checks for `x %in% NA`, which is a more convoluted form of `is.na(x)` (#2088, @​MichaelChirico).",1,75,FALSE,NA
lintr,694d7c1f83094bff6acb2cb8a9e49c9a,"New exclusion sentinel `# nolint next` to signify the next line should skip linting (#1791, @​MichaelChirico). The usual rules apply for excluding specific linters, e.g. `# nolint next: assignment_linter.`. The exact string used to match a subsequent-line exclusion is controlled by the `exclude_next` config entry or R option `""lintr.exclude_next""`.",1,76,FALSE,NA
lintr,7329057735c3bf241c2ec0de794663b9,"New `xp_call_name()` helper to facilitate writing custom linters (#2023, @​MichaelChirico). This helper converts a matched XPath to the R function to which it corresponds. This is useful for including the ""offending"" function in the lint's message.",1,77,FALSE,NA
lintr,a6b51d8a5c397fe477e1b09a65e6ed8b,"New `make_linter_from_xpath()` to facilitate making simple linters directly from a single XPath (#2064, @​MichaelChirico). This is especially helpful for making on-the-fly/exploratory linters, but also extends to any case where the linter can be fully defined from a static lint message and single XPath.",1,78,FALSE,NA
lintr,e30f4b14bf55990fd05aeb970bb2f5da,"Toggle lint progress indicators with argument `show_progress` to `lint_dir()` and `lint_package()` (#972, @​MichaelChirico). The default is still to show progress in `interactive()` sessions. Progress is also now shown with a ""proper"" progress bar (`utils::txtProgressBar()`), which in particular solves the issue of progress `.` spilling well past the width of the screen in large directories.",1,79,FALSE,NA
lintr,f61a29c4f4e42100c57adcc331272750,"`lint()`, `lint_dir()`, and `lint_package()` fail more gracefully when the user mis-spells an argument name (#2134, @​MichaelChirico).",1,80,FALSE,NA
lintr,242dc073aaaac1bbfeaefb3788488ef3,"Quarto files (.qmd) are included by `lint_dir()` by default (#2150, @​dave-lovell).",1,81,FALSE,NA
lintr,1a1c6c7b945300cab4fec97197505216,"`library_call_linter()` can detect if all library/require calls are not at the top of your script (#2027, #2043, #2163, and #2170, @​nicholas-masel and @​MichaelChirico).",1,82,FALSE,NA
lintr,fc660d1e49d2147cb0e78ce6be9f6cac,"`keyword_quote_linter()` for finding unnecessary or discouraged quoting of symbols in assignment, function arguments, or extraction (part of #884, @​MichaelChirico). Quoting is unnecessary when the target is a valid R name, e.g. `c(""a"" = 1)` can be `c(a = 1)`. The same goes to assignment (`""a"" <- 1`) and extraction (`x$""a""`). Where quoting is necessary, the linter encourages doing so with backticks (e.g. `` x$`a b` `` instead of `x$""a b""`).",1,83,FALSE,NA
lintr,e871abf5d3f110b58213bf86de01fc92,"`length_levels_linter()` for using the specific function `nlevels()` instead of checking `length(levels(x))` (part of #884, @​MichaelChirico).",1,84,FALSE,NA
lintr,aeeb9185ab477a199651a13f9082b758,"`scalar_in_linter()` for discouraging `%in%` when the right-hand side is a scalar, e.g. `x %in% 1` (part of #884, @​MichaelChirico).",1,85,FALSE,NA
lintr,20c862ac5d7ad583514f5110980c55ec,"`if_not_else_linter()` for encouraging `if` statements to be structured as `if (A) x else y` instead of `if (!A) y else x` (part of #884, @​MichaelChirico).",1,86,FALSE,NA
lintr,7160171a596335aff4351fc177c1212d,"`repeat_linter()` for encouraging `repeat` for infinite loops instead of `while (TRUE)` (#2106, @​MEO265).",1,87,FALSE,NA
lintr,b717057980dd7ed4663cfbd4cee82c9b,"`length_test_linter()` detects the common mistake `length(x == 0)` which is meant to be `length(x) == 0` (#1991, @​MichaelChirico).",1,88,FALSE,NA
lintr,9d29d4c8768acd5dc6cfc309560505de,"`fixed_regex_linter()` gains an option `allow_unescaped` (default `FALSE`) to toggle linting regexes not requiring any escapes or character classes (#1689, @​MichaelChirico). Thus `fixed_regex_linter(allow_unescaped = TRUE)` would lint on `grepl(""[$]"", x)` but not on `grepl(""a"", x)` since the latter does not use any regex special characters.",1,89,FALSE,NA
lintr,b243f3f37a72b5ca6238463070aa6886,"`line_length_linter()` helpfully includes the line length in the lint message (#2057, @​MichaelChirico).",1,90,FALSE,NA
lintr,eb33fce23a14edc5a1fc47e76a5b219b,"`conjunct_test_linter()` also lints usage like `dplyr::filter(x, A & B)` in favor of using `dplyr::filter(x, A, B)` (part of #884; #2110 and #2078, @​salim-b and @​MichaelChirico). Option `allow_filter` toggles when this applies. `allow_filter = ""always""` drops such lints entirely, while `""not_dplyr""` only lints calls explicitly qualified as `dplyr::filter()`. The default, `""never""`, assumes all unqualified calls to `filter()` are `dplyr::filter()`.",1,91,FALSE,NA
lintr,43badce4675044fdcb88bb0532185892,"`sort_linter()` checks for code like `x == sort(x)` which is better served by using the function `is.unsorted()` (part of #884, @​MichaelChirico).",1,92,FALSE,NA
lintr,9ee8bb0a1ee12ab61ec0ec1a2e42ea71,"`paste_linter()` gains detection for file paths that are better constructed with `file.path()`, e.g. `paste0(dir, ""/"", file)` would be better as `file.path(dir, file)` (part of #884, #2082, @​MichaelChirico). What exactly gets linted here can be fine-tuned with the `allow_file_path` option (`""double_slash""` by default, with alternatives `""never""` and `""always""`). When `""always""`, these rules are ignored. When `""double_slash""`, paths appearing to construct a URL that have consecutive forward slashes (`/`) are skipped. When `""never""`, even URLs should be constructed with `file.path()`.",1,93,FALSE,NA
lintr,ac530e353dae4b22c3045975d2730a4a,"`seq_linter()` recommends `rev()` in the lint message for lints like `nrow(x):1` (#1542, @​MichaelChirico).",1,94,FALSE,NA
lintr,ffa7168b124c29faf4279210d9f48592,"`function_argument_linter()` detects usage of `missing()` for the linted argument (#1546, @​MichaelChirico). The simplest fix for `function_argument_linter()` lints is typically to set that argument to `NULL` by default, in which case it's usually preferable to update function logic checking `missing()` to check `is.null()` instead.",1,95,FALSE,NA
lintr,b43bb05a4a2fbe70ef09eb943ce64b43,"`commas_linter()` gains an option `allow_trailing` (default `FALSE`) to allow trailing commas while indexing. (#2104, @​MEO265)",1,96,FALSE,NA
lintr,e277d4fc7a0f36ba2a44ce31140e6059,`unreachable_code_linter()`,1,97,FALSE,NA
lintr,e277d4fc7a0f36ba2a44ce31140e6059,"• checks for code inside `if (FALSE)` and other conditional loops with deterministically false conditions (#1428, @​ME0265).",2,98,FALSE,`unreachable_code_linter()`
lintr,e277d4fc7a0f36ba2a44ce31140e6059,"• checks for unreachable code inside `if`, `else`, `for`, `while`, and `repeat` blocks, including combinations with `break` and `next` statements. (#2105, @​ME0265).",2,99,FALSE,`unreachable_code_linter()`
lintr,a9b3e7de528883df9388c9296786d7c7,"`implicit_assignment_linter()` gains an argument `allow_lazy` (default `FALSE`) that allows optionally skipping lazy assignments like `A && (B <- foo(A))` (#2016, @​MichaelChirico).",1,100,FALSE,NA
lintr,5e0efe1b9bd4e46cfd8de8912cdb2db9,"`unused_import_linter()` gains an argument `interpret_glue` (default `TRUE`) paralleling that in `object_usage_linter()` to toggle whether `glue::glue()` expressions should be inspected for exported object usage (#2042, @​MichaelChirico).",1,101,FALSE,NA
lintr,6d13e9d64564ce1ff53f9070501abe6a,"`default_undesirable_functions` is updated to also include `Sys.unsetenv()` and `structure()` (#2192 and #2228, @​IndrajeetPatil and @​MichaelChirico).",1,102,FALSE,NA
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico).",1,103,FALSE,NA
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,• `brace_linter()`,2,104,FALSE,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico)."
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,• `pipe_call_linter()`,2,105,FALSE,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico)."
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,• `pipe_continuation_linter()`,2,106,FALSE,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico)."
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,• `unnecessary_concatenation_linter()`,2,107,FALSE,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico)."
lintr,c8a3d89ac192d2e0d53dda6e2f8b1bb0,• `unnecessary_placeholder_linter()`,2,108,FALSE,"Linters with logic around the magrittr pipe `%>%` consistently apply it to the other pipes `%!>%`, `%T>%`, `%<>%` (and possibly `%$%`) where appropriate (#2008, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico).",1,109,FALSE,NA
lintr,efb862376a026f719272a0c978823796,• `brace_linter()`,2,110,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `function_left_parentheses_linter()`,2,111,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `indentation_linter()`,2,112,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `object_length_linter()`,2,113,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `object_name_linter()`,2,114,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `package_hooks_linter()`,2,115,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `paren_body_linter()`,2,116,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `unnecessary_lambda_linter()`,2,117,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,efb862376a026f719272a0c978823796,• `unreachable_code_linter()`,2,118,FALSE,"Linters with logic around function declarations consistently include the R 4.0.0 shorthand `\()` (#2190, @​MichaelChirico)."
lintr,7606c99bb24c5aef6cc031f5daa4d4d4,`fixed_regex_linter()`,1,119,FALSE,NA
lintr,7606c99bb24c5aef6cc031f5daa4d4d4,"• Is pipe-aware, in particular removing false positives around piping into {stringr} functions like `x |> str_replace(fixed(""a""), ""b"")` (#1811, @​MichaelChirico).",2,120,FALSE,`fixed_regex_linter()`
lintr,7606c99bb24c5aef6cc031f5daa4d4d4,"• Ignores non-string inputs to `pattern=` as a keyword argument (#2159, @​MichaelChirico).",2,121,FALSE,`fixed_regex_linter()`
lintr,686a8bbc8896bbc915ea449212c180c9,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico).",1,122,FALSE,NA
lintr,686a8bbc8896bbc915ea449212c180c9,• `T_and_F_symbol_linter()`,2,123,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `for_loop_index_linter()`,2,124,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `literal_coercion_linter()`,2,125,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `object_name_linter()`,2,126,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `undesirable_function_linter()`,2,127,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `unreachable_code_linter()`,2,128,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,686a8bbc8896bbc915ea449212c180c9,• `yoda_test_linter()`,2,129,FALSE,"Several linters avoiding false positives in `$` extractions get the same exceptions for `@​` extractions, e.g. `S4@​T` will no longer throw a `T_and_F_symbol_linter()` hit (#2039, @​MichaelChirico)."
lintr,439139a9702cb268d3383568a30cafe6,"`sprintf_linter()` is pipe-aware, so that `x %>% sprintf(fmt = ""%s"")` no longer lints (#1943, @​MichaelChirico).",1,130,FALSE,NA
lintr,3c690242b2796c9fb2060e22dfed0c05,"`condition_message_linter()` ignores usages of extracted calls like `env$stop(paste(a, b))` (#1455, @​MichaelChirico).",1,131,FALSE,NA
lintr,efc1401ef95ba70d27a0bcb071bbaa9e,"`inner_combine_linter()` no longer throws on length-1 calls to `c()` like `c(exp(2))` or `c(log(3))` (#2017, @​MichaelChirico). Such usage is discouraged by `unnecessary_concatenation_linter()`, but `inner_combine_linter()` *per se* does not apply.",1,132,FALSE,NA
lintr,43bb27b23c0a8527e073f5b42e9580c5,"`sort_linter()` only lints on `order()` of a single vector, excluding e.g. `x[order(x, y)]` and `x[order(y, x)]` (#2156, @​MichaelChirico).",1,133,FALSE,NA
lintr,c456e912b01f377b3d9907a430531681,"`redundant_ifelse_linter()` is aware of `dplyr::if_else()`'s `missing=` argument, so that `if_else(A, TRUE, FALSE, missing = FALSE)` doesn't lint, but `if_else(A, TRUE, FALSE, NA)` does (#1941, @​MichaelChirico). Note that `dplyr::coalesce()` or `tidyr::replace_na()` may still be preferable.",1,134,FALSE,NA
lintr,9a294d50e0468f14599712e8632a7430,"`unreachable_code_linter()` finds unreachable code even in the presence of a comment or semicolon after `return()` or `stop()` (#2127, @​MEO265).",1,135,FALSE,NA
lintr,25170568674bffc0b346f652e42e1f65,`implicit_assignment_linter()`,1,136,FALSE,NA
lintr,25170568674bffc0b346f652e42e1f65,"• finds assignments in call arguments besides the first one (#2136, @​MichaelChirico).",2,137,FALSE,`implicit_assignment_linter()`
lintr,25170568674bffc0b346f652e42e1f65,"• finds assignments in parenthetical expressions like `if (A && (B <- foo(A))) { }` (#2138, @​MichaelChirico).",2,138,FALSE,`implicit_assignment_linter()`
lintr,982eb9f0d0df7d41b267f0195ca36780,"`unnecessary_lambda_linter()` checks for cases using explicit returns, e.g. `lapply(x, \(xi) return(sum(xi)))` (#1567, @​MichaelChirico).",1,139,FALSE,NA
lintr,982eb9f0d0df7d41b267f0195ca36780,"• thanks to @​Bisaloo and @​strengejacke for detecting a regression in the original fix (#2231, #2247).",2,140,FALSE,"`unnecessary_lambda_linter()` checks for cases using explicit returns, e.g. `lapply(x, \(xi) return(sum(xi)))` (#1567, @​MichaelChirico)."
lintr,d11051d4c23beaab29cab671c36949b6,"`.lintr` files can now be kept in the directory `.github/linters` for better compatibility with Super-Linter. Note that this may be a breaking change if you already have a config in `.github/linters` inside a subdirectory as well as in your R project's root, since the former will now be discovered first where it was ignored before. Please see `vignette(""lintr"")` for details on how configs are discovered (#1746, @​tonyk7440 and @​klmr).",1,141,FALSE,NA
lintr,6ba820c5f6af77ee26496f62dbd33bb3,"`single_quotes_linter()` is deprecated in favor of the more generalizable `quotes_linter()` (#1729, @​MichaelChirico).",1,142,FALSE,NA
lintr,a6f7418454e1af4daf904628560a0ee2,"`unneeded_concatentation_linter()` is deprecated in favor of `unnecessary_concatenation_linter()` for naming consistency (#1707, @​IndrajeetPatil).",1,143,FALSE,NA
lintr,589a140aa2f5cd2144982175786dacb0,"`consecutive_stopifnot_linter()` is deprecated in favor of the more general (see below) `consecutive_assertion_linter()` (#1604, @​MichaelChirico).",1,144,FALSE,NA
lintr,9f03ccf41f1a31b0573a5ec4d775da4d,"`no_tab_linter()` is deprecated in favor of `whitespace_linter()` for naming consistency and future generalization (#1954, @​MichaelChirico).",1,145,FALSE,NA
lintr,6257584b2b447618c43346f483e98d57,"`available_linters()` prioritizes `tags` over `exclude_tags` in the case of overlap, i.e., tags listed in both arguments are included, not excluded. We don't expect many people to be affected by this, and the old behavior was not made explicit in the documentation, but make note of it here since it required changing a test in lintr's own suite where `linters_with_tags()` implicitly assumed this behavior.",1,146,FALSE,NA
lintr,0e0b95c02493805e96c724c04b6b398a,"`lint()`, `lint_dir()`, and `lint_package()` no longer accept certain arguments (`cache=` for `lint()`, `relative_path=` for the latter two) positionally. The `warning()` since 3.0.0 has been upgraded to an error.",1,147,FALSE,NA
lintr,55f0fdb2f3ce1fd7e1d3d995d2c6f7ac,"`linters_with_tags()` now includes the previously missing spaces around ""and"" when listing missing linters advertised by `available_linters()`. This error message may appear e.g. when you update lintr to a version with new linters but don't restart your R session (#1946, @​Bisaloo)",1,148,FALSE,NA
lintr,d897878a59132bea27dcc60378c9f663,"`fixed_regex_linter()` is more robust to errors stemming from unrecognized escapes (#1545, #1845, @​IndrajeetPatil).",1,149,FALSE,NA
lintr,c107f449b1e5f79fb7d2384f73a40f7f,"`get_source_expressions()` can handle Sweave/Rmarkdown documents with reference chunks like `<<ref_file>>` (#779, @​MichaelChirico). Note that these are simply skipped, rather than attempting to retrieve the reference and also lint it.",1,150,FALSE,NA
lintr,731e52ad7cee1eef78e49f8c473754fc,"`assignment_linter()` no longer lints assignments in braces that include comments when `allow_trailing = FALSE` (#1701, @​ashbaldry)",1,151,FALSE,NA
lintr,ce89e4f76dedc5be294ec868e0ca2e36,`object_usage_linter()`,1,152,FALSE,NA
lintr,ce89e4f76dedc5be294ec868e0ca2e36,"• No longer silently ignores usage warnings that don't contain a quoted name (#1714, @​AshesITR)",2,153,FALSE,`object_usage_linter()`
lintr,ce89e4f76dedc5be294ec868e0ca2e36,"• No longer fails on code with comments inside a multi-line call to `glue::glue()` (#1919, @​MichaelChirico)",2,154,FALSE,`object_usage_linter()`
lintr,b9a0f1d8532fc51f1ee5485a6932e6f0,"`namespace_linter()` correctly recognizes backticked operators to be exported from respective namespaces (like `` rlang::`%||%` ``) (#1752, @​IndrajeetPatil)",1,155,FALSE,NA
lintr,8cde2075b456220e48bb351f4aea140f,"`lint_package()` correctly finds a package from within a subdir if the `path` points to anywhere within the package (#1759, @​AshesITR)",1,156,FALSE,NA
lintr,9aa0166fb394021eb1b53aadd3c3f165,"Improved error behavior in `Lint()`, `lint()` and `xml_nodes_to_lints()` (#1427, #763, @​AshesITR)",1,157,FALSE,NA
lintr,9aa0166fb394021eb1b53aadd3c3f165,"• `Lint()` validates its inputs more thoroughly, preventing errors during `print.Lints` like ""Error in rep.int(character, length) : invalid 'times' value:"".",2,158,FALSE,"Improved error behavior in `Lint()`, `lint()` and `xml_nodes_to_lints()` (#1427, #763, @​AshesITR)"
lintr,9aa0166fb394021eb1b53aadd3c3f165,"• `lint()` no longer tries to create an expression tree with unexpected end of input errors, because they can be broken.",2,159,FALSE,"Improved error behavior in `Lint()`, `lint()` and `xml_nodes_to_lints()` (#1427, #763, @​AshesITR)"
lintr,9aa0166fb394021eb1b53aadd3c3f165,• `xml_nodes_to_lints()` warns if it can't find lint locations and uses dummy locations as a fallback.,2,160,FALSE,"Improved error behavior in `Lint()`, `lint()` and `xml_nodes_to_lints()` (#1427, #763, @​AshesITR)"
lintr,d81e77b216782d6bfd16997e68259bca,"`linters_with_defaults()` no longer erroneously marks linter factories as linters (#1725, @​AshesITR).",1,161,FALSE,NA
lintr,c089b6ca4f7d0c6dd78b8050d759d3b8,"Row names for `available_linters()` data frame are now contiguous (#1781, @​IndrajeetPatil).",1,162,FALSE,NA
lintr,b628b6dc7af841f17bb718585cfab1e9,"`object_name_linter()` allows all S3 group Generics (see `?base::groupGeneric`) and S3 generics defined in a different file in the same package (#1808, #1841, @​AshesITR)",1,163,FALSE,NA
lintr,035f69bcf3de32628888338bcf7875bc,`object_usage_linter()` improves identification of the exact source of a lint,1,164,FALSE,NA
lintr,035f69bcf3de32628888338bcf7875bc,"• for undefined variables in expressions with where the variable is used as a symbol in a usual way, for example in a formula or in an extraction with `$` (#1914, @​MichaelChirico).",2,165,FALSE,`object_usage_linter()` improves identification of the exact source of a lint
lintr,035f69bcf3de32628888338bcf7875bc,"• for general usage warnings without location info (#1986 and #1917, @​AshesITR)",2,166,FALSE,`object_usage_linter()` improves identification of the exact source of a lint
lintr,cebdf0670a1f93358bf9b6f0cfce3ca2,"`function_left_parentheses_linter()` produces a more specific lint (and no longer fails) when the opening parenthesis is on a different line than `function` or the call name (#1953, @​MichaelChirico). Thanks also to @​IndrajeetPatil and @​lorenzwalthert for identifying a regression in the initial fix, #1963.",1,167,FALSE,NA
lintr,35422c7fa0dfc8640ab4ec119d9537e6,"Set the default for the `except` argument in `duplicate_argument_linter()` to `c(""mutate"", ""transmute"")`. This allows sequential updates like `x |> mutate(a = b + 1, a = log(a))` (#1345, @​IndrajeetPatil).",1,168,FALSE,NA
lintr,d2e36e95e4d612dfe98621ac7ba88c0a,`object_usage_linter()`,1,169,FALSE,NA
lintr,d2e36e95e4d612dfe98621ac7ba88c0a,"• gains `skip_with` argument to skip code in `with()` expressions. To be consistent with `R CMD check`, it defaults to `TRUE` (#941, #1458, @​IndrajeetPatil).",2,170,FALSE,`object_usage_linter()`
lintr,d2e36e95e4d612dfe98621ac7ba88c0a,"• Handles backticked symbols inside {glue} expressions correctly, e.g. `` glue(""{`x`}"") `` correctly determines `x` was used (#1619, @​MichaelChirico)",2,171,FALSE,`object_usage_linter()`
lintr,d2e36e95e4d612dfe98621ac7ba88c0a,"• Detects problems inside R4.1.0+ lambda functions (`\(...)`) (#1933, @​MichaelChirico)",2,172,FALSE,`object_usage_linter()`
lintr,07820ff6fda3367d83f0640b2453b0b3,"`spaces_inside_linter()` allows terminal missing keyword arguments (e.g. `alist(arg = )`; #540, @​MichaelChirico)",1,173,FALSE,NA
lintr,eec57cf268213b49cb20c124aca0560b,"`brace_linter()` allows empty braced expression on the same line (e.g. `while (updating_condition()) { }`) regardless of `allow_single_line` to match the corresponding behavior in {styler}. This is an expedient while the style guide on handling this case awaits clarification: https://github.com/tidyverse/style/issues/191. (#1346, @​MichaelChirico)",1,174,FALSE,NA
lintr,c733c67c66e06b7d698e2728027b4a3e,"`undesirable_function_linter()` and `undesirable_operator_linter()` now produce an error if empty vector of undesirable functions or operators is provided (#1867, @​IndrajeetPatil).",1,175,FALSE,NA
lintr,a7ae30eaa6a92558668b1382f4e05d12,"New linters which are also included as defaults (see ""New linters"" for more details):",1,176,FALSE,NA
lintr,a7ae30eaa6a92558668b1382f4e05d12,• `indentation_linter()`,2,177,FALSE,"New linters which are also included as defaults (see ""New linters"" for more details):"
lintr,a7ae30eaa6a92558668b1382f4e05d12,• `quotes_linter()`,2,178,FALSE,"New linters which are also included as defaults (see ""New linters"" for more details):"
lintr,a7ae30eaa6a92558668b1382f4e05d12,• `unnecessary_concatenation_linter()`,2,179,FALSE,"New linters which are also included as defaults (see ""New linters"" for more details):"
lintr,a7ae30eaa6a92558668b1382f4e05d12,• `whitespace_linter()`,2,180,FALSE,"New linters which are also included as defaults (see ""New linters"" for more details):"
lintr,32d5342169ff9166bea7fe898b6578da,"`lint_package()` also looks for files in `exec/` (#1950, @​jmaspons).",1,181,FALSE,NA
lintr,537c7c8e05b19787dd183604cd2de9de,"New `get_r_string()` helper to get the R-equivalent value of a string, especially useful for R-4-style raw strings. Previously an internal `lintr` helper, now exported to facilitate writing custom linters (#1493, @​MichaelChirico).",1,182,FALSE,NA
lintr,52ebcd04a2ca62d65270be6801a55396,"`object_usage_linter()` improves lint metadata when detecting undefined infix operators, e.g. `%>%` or `:=` (#1497, @​MichaelChirico)",1,183,FALSE,NA
lintr,443de32d7e092dc293b3a8c3bb16ea7d,"`unused_import_linter()` can detect datasets from imported packages and no longer warns when a package is imported only for its datasets (#1545, @​IndrajeetPatil).",1,184,FALSE,NA
lintr,a129af77bdb21b6c0da416c3b8546e6b,"When a linter triggers an error, `lint()` will provide a more actionable summary of where the error occurred, particularly useful for cases like `lint_package()` where both the responsible file and the responsible linter would be unknown (@​MichaelChirico). Typically, linters should not themselves cause R to stop -- syntax errors lead to error lints, for example. Please report such failures as they are likely bugs.",1,185,FALSE,NA
lintr,532fe98cb3e3ae86f33cafab76bef4da,"`pipe_continuation_linter()` recognizes violations involving the native R pipe `|>` (#1609, @​MichaelChirico)",1,186,FALSE,NA
lintr,c6615ed0da62848bebe4152ddaf6ad3f,"`paste_linter()` also catches usages like `paste(rep(""*"", 10L), collapse = """")` that can be written more concisely as `strrep(""*"", 10L)` (#1108, @​MichaelChirico)",1,187,FALSE,NA
lintr,40744e7558538336d808b9cd53ba5241,"`spaces_inside_linter()` produces lints for spaces inside `[[` (#1673, @​IndrajeetPatil).",1,188,FALSE,NA
lintr,a23edde9f0624261a1054809f85c03e9,"`sprintf_linter()` also applies to `gettextf()` (#1677, @​MichaelChirico)",1,189,FALSE,NA
lintr,df0a433b562f8781bd1b5d04184b04d7,"Documentation for all linters contains examples of code that does and does not produce lints (#1492, @​IndrajeetPatil).",1,190,FALSE,NA
lintr,df66f1c8d5b7b2afa6cebd9dcf19bed6,"`implicit_integer_linter()` gains parameter `allow_colon` to skip lints on expressions like `1:10` (#1155, @​MichaelChirico)",1,191,FALSE,NA
lintr,f5c396c4cc8aacab7a6521094f1e4218,"`infix_spaces_linter()` supports the native R pipe `|>` (#1793, @​AshesITR)",1,192,FALSE,NA
lintr,9d36ada42dc1136c6dfe699ee508d5a8,"`unnecessary_concatenation_linter()` (f.k.a. `unneeded_concatenation_linter()`) no longer lints on `c(...)` (i.e., passing `...` in a function call) when `allow_single_expression = FALSE` (#1696, @​MichaelChirico)",1,193,FALSE,NA
lintr,3bcf43b4c59d040f3e2917c51a083786,"`object_name_linter()` gains parameter `regexes` to allow custom naming conventions (#822, #1421, @​AshesITR)",1,194,FALSE,NA
lintr,7c5a331e9f84962bf25204d0dd44586e,"`literal_coercion_linter()` reports a replacement in the lint message, e.g. code like `as.integer(1)` will suggest using `1L` instead, and code like `as.numeric(NA)` will suggest using `NA_real_` instead (#1439, @​MichaelChirico)",1,195,FALSE,NA
lintr,b9bd184ed4734b7f7d5e92b89a967d61,"Added `format()` functions for `lint` and `lints` (#1784, @​AshesITR)",1,196,FALSE,NA
lintr,d57bcf54db7c810f8a0b8d100aaabb9b,"`all_linters()` function provides an easy way to access all available linters (#1843, @​IndrajeetPatil)",1,197,FALSE,NA
lintr,c64ac3a277165a94872f41b863a8cf76,"`missing_argument_linter()` allows missing arguments in `quote()` calls (#1889, @​IndrajeetPatil).",1,198,FALSE,NA
lintr,3f78ff9d3de2ba42dd951feebbb35369,"`get_source_expressions()` correctly extracts indented code chunks from R Markdown documents, which helps avoid spurious lints related to whitespace (#1945, @​MichaelChirico). The convention taken is that, within each chunk, all code is anchored relative to the leftmost non-whitespace column.",1,199,FALSE,NA
lintr,cf4427bcee78abb89205058e703a066c,"`available_linters()` gives priority to `tags` over `exclude_tags` in the case of overlap. In particular, this means that `available_linters(tags = ""deprecated"")` will work to return deprecated linters without needing to specify `exclude_tags` (#1959, @​MichaelChirico).",1,200,FALSE,NA
lintr,38e16171c66fe0d458b5af3d2ae0b950,"The {lintr} configuration file is now searched in the system's user configuration path; the lintr config filename can also be configured explicitly by setting the environment variable `R_LINTR_LINTER_FILE` (#460, @​klmr)",1,201,FALSE,NA
lintr,3dbee02b7139dcb1d114549be86ce56e,"Errors in the {lintr} configuration file now produce more informative error messages (#886, @​AshesITR)",1,202,FALSE,NA
lintr,0ec5bd3019741443502b94d53750001c,"`matrix_apply_linter()` recommends use of dedicated `rowSums()`, `colSums()`, `colMeans()`, `rowMeans()` over `apply(., MARGIN, sum)` or `apply(., MARGIN, mean)`. The recommended alternative is much more efficient and more readable (#1869, @​Bisaloo).",1,203,FALSE,NA
lintr,f1481432954fe3e9eb3e2685a706ffee,"`unnecessary_lambda_linter()`: detect unnecessary lambdas (anonymous functions), e.g. `lapply(x, function(xi) sum(xi))` can be `lapply(x, sum)` and `purrr::map(x, ~quantile(.x, 0.75, na.rm = TRUE))` can be `purrr::map(x, quantile, 0.75, na.rm = TRUE)`. Naming `probs = 0.75` can further improve readability (#1531, #1866, @​MichaelChirico, @​Bisaloo).",1,204,FALSE,NA
lintr,d9873716ff6944fb9ffaa89e64d8198a,"`redundant_equals_linter()` for redundant comparisons to `TRUE` or `FALSE` like `is_treatment == TRUE` (#1500, @​MichaelChirico)",1,205,FALSE,NA
lintr,7e260e3946c2b8508cffe7568be9911f,"`lengths_linter()` for encouraging usage of `lengths(x)` instead of `sapply(x, length)` (and similar)",1,206,FALSE,NA
lintr,8b3596ab38e0989830bb3dffa3ec418f,"`function_return_linter()` for handling issues in function `return()` statements. Currently handles assignments within the `return()` clause, e.g. `return(x <- foo())` (@​MichaelChirico)",1,207,FALSE,NA
lintr,bc9f2edcaa83a06ce2959e4c94a7aee9,"`boolean_arithmetic_linter()` for identifying places where logical aggregations are more appropriate, e.g. `length(which(x == y)) == 0` is the same as `!any(x == y)` or even `all(x != y)` (@​MichaelChirico)",1,208,FALSE,NA
lintr,a1c168c2844206db9b3e72c91f1e09cd,`for_loop_index_linter()` to prevent overwriting local variables in a `for` loop declared like `for (x in x) { ... }` (@​MichaelChirico),1,209,FALSE,NA
lintr,d793b6d7e5864b24b572edb7a84a920f,"`is_numeric_linter()` for redundant checks equivalent to `is.numeric(x)` such as `is.numeric(x) || is.integer(x)` or `class(x) %in% c(""numeric"", ""integer"")` (@​MichaelChirico)",1,210,FALSE,NA
lintr,7d5c5a2e70fe6e8720c57fa790d4dd7a,`empty_assignment_linter()` for identifying empty assignments like `x = {}` that are more clearly written as `x = NULL` (@​MichaelChirico),1,211,FALSE,NA
lintr,b0b70a5ec28a82fe7127ee2b4230907d,`unnecessary_placeholder_linter()` for identifying where usage of the {magrittr} placeholder `.` could be omitted (@​MichaelChirico),1,212,FALSE,NA
lintr,84682dbc43084116133f71b7af205c6f,`routine_registration_linter()` for identifying native routines that don't use registration (`useDynLib` in the `NAMESPACE`; @​MichaelChirico),1,213,FALSE,NA
lintr,1cf125def152e537e9aeb8586ea7e7c0,"`indentation_linter()` for checking that the indentation conforms to 2-space Tidyverse-style (@​AshesITR and @​dgkf, #1411, #1792, #1898).",1,214,FALSE,NA
lintr,30fb2a31c66f3d385650169f62c95b0c,"`unnecessary_nested_if_linter()` for checking unnecessary nested `if` statements where a single `if` statement with appropriate conditional expression would suffice (@​IndrajeetPatil and @​AshesITR, #1778).",1,215,FALSE,NA
lintr,8e6bc88106b80b60814f57c859fb83c7,"`implicit_assignment_linter()` for checking implicit assignments in function calls (@​IndrajeetPatil and @​AshesITR, #1777).",1,216,FALSE,NA
lintr,057f34eb68ee64fd7ba231f68e0247d7,"`quotes_linter()` is a generalized version of (now deprecated) `single_quotes_linter()`. It accepts an argument `delimiter` to specify whether `""` or `'` should be the accepted method for delimiting character literals. The default, `""`, reflects the Tidyverse style guide recommendation and matches the behavior of `single_quotes_linter()`.",1,217,FALSE,NA
lintr,9bd2b5b45f971f4541f05388753bcd97,"`unnecessary_concatenation_linter()` is simply `unneeded_concatenation_linter()`, renamed.",1,218,FALSE,NA
lintr,9f95c59c2618cfef9910a7d1fada7dc1,"`consecutive_assertion_linter()` (f.k.a. `consecutive_stopifnot_linter()`) now lints for consecutive calls to `assertthat::assert_that()` (as long as the `msg=` argument is not used; #1604, @​MichaelChirico).",1,219,FALSE,NA
lintr,d735ce899d88bd7c1bede3d055fd0cca,"`whitespace_linter()` is simply `no_tab_linter()`, renamed. In the future, we plan to extend it to work for different whitespace preferences.",1,220,FALSE,NA
lintr,bb694a65c381e0017a4db785cc5f0588,"{lintr} now depends on R version 3.5.0, in line with the tidyverse policy for R version compatibility.",1,221,FALSE,NA
lintr,3d2eda54c101a69b87a6bce22c8ed85e,"`lint()` continues to support Rmarkdown documents. For users of custom .Rmd engines, e.g. `marginformat` from {tufte} or `theorem` from {bookdown}, note that those engines must be registered in {knitr} prior to running `lint()` in order for {lintr} to behave as expected, i.e., they should be shown as part of `knitr::knit_engines$get()`. For {tufte} and {bookdown} in particular, one only needs to load the package namespace to accomplish this (i.e., minimally `loadNamespace(""tufte"")` or `loadNamespace(""bookdown"")`, respectively, will register those packages' custom engines; since `library()` also runs `loadNamespace()`, running `library()` will also work). Note further that {tufte} only added this code to their `.onLoad()` recently after our request to do so (see https://github.com/rstudio/tufte/issues/117). Therefore, ensure you're using a more recent version to get the behavior described here for {tufte}. More generally, there is no requirement that `loadNamespace()` will register a package's custom {knitr} engines, so you may need to work with other package authors to figure out a solution for other engines. Thanks to Yihui and other developers for their helpful discussions around this issue (#797, @​IndrajeetPatil).",1,222,FALSE,NA
lintr,c92954925396c8a2fd3d5a5e240452c0,"The output of `lint()` and `Lint()` gain S3 class `""list""` to assist with S3 dispatch (#1494, @​MichaelChirico)",1,223,FALSE,NA
lintr,c92954925396c8a2fd3d5a5e240452c0,"• As a corollary, we now register an `as_tibble` method for class `lints`, conditional on {tibble} availability, to avoid dispatching to the `list` method which does not work with `lint()` output (#1997, @​MichaelChirico)",2,224,FALSE,"The output of `lint()` and `Lint()` gain S3 class `""list""` to assist with S3 dispatch (#1494, @​MichaelChirico)"
lintr,dde073be54777677bdecf0c29b0eabe6,"`object_usage_linter()` gives a more helpful warning when a `glue()` expression fails to evaluate (#1985, @​MichaelChirico)",1,225,FALSE,NA
lintr,62809246306be3ee882120b01b082144,"The documentation of `object_name_linter()` now describes how `""symbols""` works when passed to the `styles` parameter (#1924, @​hedsnz).",1,226,FALSE,NA
lintr,854f840fed3bec51ce939e9d117f3086,Fix test to avoid leaving behind cache files in the global cache directory.,1,227,FALSE,NA
lintr,3cfec43027840dc12fec41fd905754ed,Skip multi-byte tests in non UTF-8 locales (#1504),1,228,FALSE,NA
lintr,d01ca3c4194b4bbacf9f1dac3a8a4782,"`modify_defaults()` no longer uses the mistaken `""lintr_function""` S3 class, instead applying the `""linter""` class also common to `Linter()`. `Linter()` also includes `""function""` in the S3 class of its output to facilitate S3 dispatch to `function` methods where appropriate (#1392, @​MichaelChirico).",1,229,FALSE,NA
lintr,b503a4dec7b13c770c9e8e4ccfddccc4,"`brace_linter()` allows opening curly braces on a new line when there is a comment ending the preceding line (#1433 and #1434, @​IndrajeetPatil).",1,230,FALSE,NA
lintr,d4d1e4312bfbef1d510f37494c1d50f3,"`seq_linter()` produces lint for `seq(...)`, since it also cannot properly handle empty edge cases (#1468, @​IndrajeetPatil).",1,231,FALSE,NA
lintr,f059a86b08dc1c8bd81ba224fc2b5159,"`seq_linter()` additionally lints on `1:n()` (from {dplyr}) and `1:.N` (from {data.table}) (#1396, @​IndrajeetPatil).",1,232,FALSE,NA
lintr,cf4d140b8efbf7b8d64d1e36efe40cb6,"`literal_coercion_linter()` lints {rlang}'s atomic vector constructors (i.e., `int()`, `chr()`, `lgl()`, and `dbl()`) if the argument is a scalar (#1437, @​IndrajeetPatil).",1,233,FALSE,NA
lintr,8ec6b568db6b1992dbcbdf8ec052f3df,"`redundant_ifelse_linter()`'s lint message correctly suggests negation when the `yes` condition is `0` (#1432, @​IndrajeetPatil).",1,234,FALSE,NA
lintr,402d880221d431aebc1feb741dfd826e,"`seq_linter()` provides more specific replacement code in lint message (#1475, @​IndrajeetPatil).",1,235,FALSE,NA
lintr,b36150d9ff40653a00c16fb4de7494de,"New `sort_linter()` to detect `x[order(x)]` and recommend the faster and clearer alternative: `sort(x)` (#1528, @​Bisaloo)",1,236,FALSE,NA
lintr,677215d06481d03db8f3310099035b92,"`unreachable_code_linter()` ignores trailing comments if they match a closing nolint block (#1347, @​AshesITR).",1,237,FALSE,NA
lintr,06578badaf075c4d86a90187bcde13e7,"New `function_argument_linter()` to enforce that arguments with defaults appear last in function declarations, see the Tidyverse design guide (#450, @​AshesITR).",1,238,FALSE,NA
lintr,ad472972830d22643d33766f277684dc,"New `allow_trailing` argument added to `assignment_linter()` to check when assignment operators are at the end of a line, and the value is on the following line (#1491, @​ashbaldry)",1,239,FALSE,NA
lintr,c4e4d93e07fe254ee950e4feacacf932,"New `sarif_output()` function to output lints to SARIF output (#1424, @​shaopeng-gh)",1,240,FALSE,NA
lintr,9f1f6a9e7077e40d3fa5db4f111c96b1,"`commented_code_linter()` now lints commented argument code, containing a trailing comma, as well (#386, @​AshesITR). For example a comment containing `# na.rm = TRUE,` now triggers a lint.",1,241,FALSE,NA
lintr,89905f9c9e628920397555f0383cb494,"`object_length_linter()` does not fail in case there are dependencies with no exports (e.g. data-only packages) (#1424, #1509, @​IndrajeetPatil).",1,242,FALSE,NA
lintr,e7294c1b969fe462ced6d3620b96b310,"`get_source_expressions()` no longer fails on R files that match a knitr pattern (#743, #879, #1406, @​AshesITR).",1,243,FALSE,NA
lintr,a83de4de15f1bf3f4dcf9cf7e4405b38,"Parse error lints now appear with the linter name `""error""` instead of `NA` (#1405, @​AshesITR).\ Also, linting no longer runs if the `source_expressions` contain invalid string data that would cause error messages in other linters. in other linters.",1,244,FALSE,NA
lintr,915661a26d94b8b325b278d95ee36c11,"Prevent `lint()` from hanging on Rmd files with some syntax errors (#1443, @​MichaelChirico).",1,245,FALSE,NA
lintr,b87f881e2c4820a83bd6c6b0a94ba3eb,"`get_source_expressions()` no longer omits trailing non-code lines from knitr files (#1400, #1415, @​AshesITR).\ This fixes the location information for `trailing_blank_lines_linter()` in RMarkdown documents without terminal newlines.",1,246,FALSE,NA
lintr,30eb63eb0e57f13dd002cb1f3ab85567,"The `vignette(""lintr"")` incorrectly cited `exclude` as the key for setting file exclusions in `.lintr` when it is actually `exclusions`. (#1401, @​AshesITR)",1,247,FALSE,NA
lintr,7602cd6d3ae648a8a5a04a44de28d92b,"Fixed file exclusion detection in `lint_dir()` so it no longer errors if there are multiple exclusions or no global exclusions configured for a single file (#1413, #1442, @​AshesITR).",1,248,FALSE,NA
lintr,97cac7bd4d45e12fb017c6ff2786b824,"The minimum needed version for soft dependency `{withr}` has been bumped to `2.5.0` (#1404, @​IndrajeetPatil).",1,249,FALSE,NA
lintr,35cd61e0ffead3b11b73170e0394aacf,"Changed the deprecation warning for `with_defaults()` to also mention `modify_defaults()` (#1438, @​AshesITR).",1,250,FALSE,NA
lintr,6ab50981ce5130104f291f30e11caadf,"Quarto files (`.qmd`) were supported out of the box. The documentation and the testing infrastructure are updated to reflect this (#1486, @​IndrajeetPatil).",1,251,FALSE,NA
lintr,2cb0f7084a6a0056fe797ce2122172ca,"All linters are now function factories (i.e., functions that return functions) for consistency. Previously, only linters with customizable parameters were factories (#245, @​fangly, @​AshesITR, and @​MichaelChirico). This means that usage such as `lint(""file.R"", seq_linter)` should be updated to `lint(""file.R"", seq_linter())`, and the following update for custom linters:",1,252,FALSE,NA
lintr,2cb0f7084a6a0056fe797ce2122172ca,"```
my_custom_linter <- function(source_expression) { ... }

# becomes
my_custom_linter <- function() Linter(function(source_expression) { ... })
```",1,253,TRUE,NA
lintr,e5ab69448d1ea519b700cf288ea12057,"Exclusions specified in the `.lintr` file are now relative to the location of that file and support excluding entire directories (#158, #438, @​AshesITR).",1,254,FALSE,NA
lintr,18c2b1132b4b36f2145e377c243a00ae,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):,1,255,FALSE,NA
lintr,18c2b1132b4b36f2145e377c243a00ae,• `absolute_paths_linter()`,2,256,FALSE,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):
lintr,18c2b1132b4b36f2145e377c243a00ae,• `camel_case_linter()`,2,257,FALSE,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):
lintr,18c2b1132b4b36f2145e377c243a00ae,• `multiple_dots_linter()`,2,258,FALSE,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):
lintr,18c2b1132b4b36f2145e377c243a00ae,• `snake_case_linter()`,2,259,FALSE,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):
lintr,18c2b1132b4b36f2145e377c243a00ae,• `trailing_semicolons_linter()`,2,260,FALSE,Removed long-deprecated linters (they've been marked as deprecated since v1.0.1 in 2017):
lintr,cd14aa6b7c0e9329654b560a8063e531,"Removed `return()` from `all_undesirable_functions` because early returns (which often improve readability and reduce code complexity) require explicit use of `return()`. Follow #1100 for an upcoming `return_linter()` to lint unnecessary `return()` statements (#1146, @​AshesITR). Note that you can replicate old behavior by supplying `return` as a custom undesirable function: `undesirable_function_linter(c(all_undesirable_functions, list(return = NA)))`",1,261,FALSE,NA
lintr,22dded188253677d78e31098714c8e82,"Lints are now marked with the name of the `linter` that caused them instead of the name of their implementation function. Deprecated the obsolete `linter` argument of `Lint()` (#664, #673, #746, @​AshesITR). Downstream custom linters should follow suit.",1,262,FALSE,NA
lintr,44c0097b1c9bf21ada89af4d072d440f,"Renamed `semicolon_terminator_linter()` to `semicolon_linter()` for better consistency. `semicolon_terminator_linter()` survives but is marked for deprecation. The new linter also has a new signature, taking arguments `allow_compound` and `allow_trailing` to replace the old single argument `semicolon`, again for signature consistency with other linters.",1,263,FALSE,NA
lintr,48ecffe3bf901a57e6ea72cdd39009f8,The following linters were subsumed into `brace_linter()` and are now deprecated; see the item on `brace_linter()` below:,1,264,FALSE,NA
lintr,48ecffe3bf901a57e6ea72cdd39009f8,• `closed_curly_linter()`,2,265,FALSE,The following linters were subsumed into `brace_linter()` and are now deprecated; see the item on `brace_linter()` below:
lintr,48ecffe3bf901a57e6ea72cdd39009f8,• `open_curly_linter()`,2,266,FALSE,The following linters were subsumed into `brace_linter()` and are now deprecated; see the item on `brace_linter()` below:
lintr,48ecffe3bf901a57e6ea72cdd39009f8,• `paren_brace_linter()`,2,267,FALSE,The following linters were subsumed into `brace_linter()` and are now deprecated; see the item on `brace_linter()` below:
lintr,5d8ffc363f39c9a8495d682c8571b88a,"The `...` argument for `lint()`, `lint_dir()`, and `lint_package()` has been promoted to an earlier position to better match the Tidyverse design principle of data-\>descriptor-\>details. This change enables passing objects to `...` without needing to specify non-required arguments, e.g. `lint_dir(""/path/to/dir"", linter())` now works without the need to specify `relative_path`. This affects some code that uses positional arguments (#935, @​MichaelChirico).",1,268,FALSE,NA
lintr,5d8ffc363f39c9a8495d682c8571b88a,"• For `lint()`, `...` is now the 3rd argument, where earlier this was `cache`.",2,269,FALSE,"The `...` argument for `lint()`, `lint_dir()`, and `lint_package()` has been promoted to an earlier position to better match the Tidyverse design principle of data-\>descriptor-\>details. This change enables passing objects to `...` without needing to specify non-required arguments, e.g. `lint_dir(""/path/to/dir"", linter())` now works without the need to specify `relative_path`. This affects some code that uses positional arguments (#935, @​MichaelChirico)."
lintr,5d8ffc363f39c9a8495d682c8571b88a,"• For `lint_dir()` and `lint_package()`, `...` is now the 2nd argument, where earlier this was `relative_path`.",2,270,FALSE,"The `...` argument for `lint()`, `lint_dir()`, and `lint_package()` has been promoted to an earlier position to better match the Tidyverse design principle of data-\>descriptor-\>details. This change enables passing objects to `...` without needing to specify non-required arguments, e.g. `lint_dir(""/path/to/dir"", linter())` now works without the need to specify `relative_path`. This affects some code that uses positional arguments (#935, @​MichaelChirico)."
lintr,4d3192ce92a92130921b6cbecccaa2cb,"Deprecated argument `source_file` to exported functions `with_id()` and `ids_with_token()`. It has been renamed to `source_expression` to better reflect that this argument is typically the output of `get_source_expressions()`. For now, the old argument `source_file` can still be used (with warning). The now-private functional versions of many linters also underwent the same renaming (`source_file` -\> `source_expression`). This has no direct effect on packages importing lintr, but is mentioned in case custom linters imitating `lintr` style had also adopted the `source_file` naming and want to adapt to keep in sync.",1,271,FALSE,NA
lintr,aa4c9413ff32944a28c7738db3914760,"Deprecated `with_defaults()` in favor of `linters_with_defaults()`, and add `modify_defaults()` which is intended to be used more generally to modify (i.e., extend, trim, and/or update) a list of defaults. Note that the argument corresponding to `with_defaults()`'s `default=` is called `defaults=` (i.e., pluralized) in both of these, and that usage like `with_defaults(default = NULL, ...)` should be converted to `linters_with_defaults(defaults = list(), ...)` (#1029, #1336, #1361, @​AshesITR and @​michaelchirico).",1,272,FALSE,NA
lintr,8ceaef0e63bfb3300950c949fa129877,"Deprecated the `find_line()` and `find_column()` helpers from the item-level `expressions` returned with `get_source_expressions()`. These helpers were typically associated with regex-based logic for building linters, which is rarely needed and prone to false positives; now that lintr almost exclusively uses XPath-based logic for linters, these are no longer necessary (#1373, @​MichaelChirico).",1,273,FALSE,NA
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):",1,274,FALSE,NA
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"• `closed_curly_linter()`; both now also allow `}]` in addition to `})` and `},` as exceptions, i.e., `}` doesn't need to be on its own line if paired with a closing square bracket, a closing parenthesis, or a comma. Also improved lint metadata so that source markers land at the closing brace instead of the closing parenthesis to improve the experience of fixing the lint (#583, @​AshesITR).",2,275,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"• `open_curly_linter()`; both also no longer lint unnecessary trailing whitespace (use `trailing_whitespace_linter()` for this) and also allow `(`, `,`, and `%>%` on preceding lines as exceptions, i.e., `{` can be alone on a line if the previous line is terminated with an opening parenthesis, a comma, or a pipe (`%>%`) (#487, #1028, @​AshesITR).",2,276,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,• `paren_brace_linter()`; `brace_linter()` also lints `if`/`else` and `repeat` with missing whitespace.,2,277,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"• `brace_linter()` also newly enforces the following rules surrounding curly braces (originally Google linters, see below):",2,278,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"‣ Require `else` to come on the same line as the preceding `}`, if present (#884, @​MichaelChirico).",3,279,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"‣ Require functions spanning multiple lines to use curly braces (#987, @​MichaelChirico).",3,280,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,cd7bb408ba09bbe3efea9bc21ae24e3b,"‣ Require balanced usage of `{}` in `if`/`else` conditions, i.e., if the `if` branch uses braces, then so must the `else` branch, and *vice versa* (#983, @​MichaelChirico).",3,281,FALSE,"New `brace_linter()` which combines several curly brace related linters, deprecating the following predecessors (#1041, @​AshesITR):"
lintr,eb9667d379a476b8ef3dde0e7cd3c6ad,"New `paren_body_linter()` checks that there is a space between a right parenthesis and a body expression (#809, @​kpagacz).",1,282,FALSE,NA
lintr,1738d5abae12a399c6d80d37888b6b62,"Added `semicolon_linter()` as a default because it enforces a tidyverse style guide rule (#683, @​AshesITR).",1,283,FALSE,NA
lintr,cfd5326fa30143c6941e631e1a3afa13,"`assignment_linter()` (#915, @​MichaelChirico):",1,284,FALSE,NA
lintr,cfd5326fa30143c6941e631e1a3afa13,• Right assignments are now linted by default (`->` and `->>`).,2,285,FALSE,"`assignment_linter()` (#915, @​MichaelChirico):"
lintr,cfd5326fa30143c6941e631e1a3afa13,• New argument `allow_cascading_assign` (`TRUE` by default) toggles whether to lint `<<-` and `->>`.,2,286,FALSE,"`assignment_linter()` (#915, @​MichaelChirico):"
lintr,cfd5326fa30143c6941e631e1a3afa13,• New argument `allow_right_assign` (`FALSE` by default) toggles whether to lint `->` and `->>`.,2,287,FALSE,"`assignment_linter()` (#915, @​MichaelChirico):"
lintr,7473434f3c64c757f2425afe252f7895,"`commented_code_linter()`: use the parse tree to find comments, eliminating some false positives (#451, @​AshesITR).",1,288,FALSE,NA
lintr,11c4fd167d9b498fd9fa66429651a438,"`equals_na_linter()` (#545, @​MichaelChirico):",1,289,FALSE,NA
lintr,11c4fd167d9b498fd9fa66429651a438,"• Extended to lint `x != NA` (before, only `==` was caught) and `NA == x` (before, only `NA` on RHS was caught).",2,290,FALSE,"`equals_na_linter()` (#545, @​MichaelChirico):"
lintr,11c4fd167d9b498fd9fa66429651a438,"• Extended to skip usages in comments like `is.na(x) # use is.na(x), not x == NA`.",2,291,FALSE,"`equals_na_linter()` (#545, @​MichaelChirico):"
lintr,40ef0796f413eb9065d0d5bd34173374,"`function_left_parentheses_linter()`: improved location information (#1266, #1267, @​AshesITR).",1,292,FALSE,NA
lintr,95485da2090440f8765844bfac39220c,`infix_spaces_linter()`:,1,293,FALSE,NA
lintr,95485da2090440f8765844bfac39220c,"• Added argument `allow_multiple_spaces` (`TRUE` by default) which toggles whether to generate a lint for operators used with multiple spaces, e.g. `x + 2`. The default setting allows extra spacing to be used to increase line-to-line alignment (#940, @​f-ritter and @​MichaelChirico).",2,294,FALSE,`infix_spaces_linter()`:
lintr,95485da2090440f8765844bfac39220c,"• Extended so that usages like `a~b` and `function(a=1) { ... }` are linted (#930, #michaelchirico).",2,295,FALSE,`infix_spaces_linter()`:
lintr,95485da2090440f8765844bfac39220c,"• Added argument `exclude_operators` to disable lints on selected infix operators. By default, all ""low-precedence"" operators throw lints; see `?infix_spaces_linter` for an enumeration of these. (#914, @​MichaelChirico).",2,296,FALSE,`infix_spaces_linter()`:
lintr,95485da2090440f8765844bfac39220c,"• Add an exception for `/` usage in `box::use()` declarations (#1087, @​klmr).",2,297,FALSE,`infix_spaces_linter()`:
lintr,df93f56eb300dc7acdfc7ba05efd606f,"`line_length_linter()`: place the source marker at the margin of the affected line to improve user experience during de-linting -- just press `<kbd>`{=html}Return`</kbd>`{=html} (#735, @​AshesITR).\*",1,298,FALSE,NA
lintr,77d6759ace44a425ca3792d7c5ac3257,"`no_tab_linter()`: use more reliable matching (e.g., excluding matches found in comments; #441, @​russHyde).",1,299,FALSE,NA
lintr,8f0d32ed2643b6613139cfde888b90ac,"`object_length_linter()`: correctly detect generics and only count the implementation class towards the length. This prevents false positive lints in the case of long generic names, e.g. `very_very_very_long_generic_name.short_class` no longer produces a lint (#871, @​AshesITR).",1,300,FALSE,NA
lintr,84099078ee5581a0721077e1648f52f4,`object_name_linter()`:,1,301,FALSE,NA
lintr,84099078ee5581a0721077e1648f52f4,"• Improved generic detection -- in user-defined method `my_method.upstream.class`, `upstream.class` no longer throws a lint because the generic (`my_method`) properly uses `snake_case` (#737, @​AshesITR).",2,302,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"• Exclude special R namespace hook functions such as `.onLoad()` (#500, #614, @​AshesITR and @​MichaelChirico).",2,303,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"• Correctly detect imported functions when linting packages (#642, @​AshesITR).",2,304,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"• Correctly detect assignment generics like `names<-.class_name` (#843, @​jonkeane).",2,305,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"• Added new styles `""symbols""` and `""SNAKE_CASE""` (#494, #495, #615, #670, @​MichaelChirico and @​AshesITR).",2,306,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"‣ `""symbols""` is a new default style which won't lint all-symbol object names. In particular, that means operator names like `%+%` are allowed.",3,307,FALSE,`object_name_linter()`:
lintr,84099078ee5581a0721077e1648f52f4,"• No longer lints names used in `$` extractions (#582, @​AshesITR).",2,308,FALSE,`object_name_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,`object_usage_linter()`:,1,309,FALSE,NA
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Detect global variables if there are top-level dollar-assignments (#666, @​AshesITR).",2,310,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Report usage warnings spanning multiple lines (#507, @​AshesITR).",2,311,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Detect usages inside `glue::glue()` constructs (#942, @​AshesITR).",2,312,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Extended to include functions assigned with `=` instead of `<-` (#1081, @​MichaelChirico).",2,313,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Detect functions exported by packages that are explicitly attached using `library()` or `require()` calls (#1127, @​AshesITR).",2,314,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Improved location information in some cases where the previous regex-based approach didn't work, e.g. unicode characters in variable names (#1285, @​AshesITR).",2,315,FALSE,`object_usage_linter()`:
lintr,6a4a41c9afaa5f2591de25787b038d80,"• Correctly detect functions declared within `assign()` and `setMethod()` (#1322, @​AshesITR).",2,316,FALSE,`object_usage_linter()`:
lintr,852bb72a9ebc0fd48220850f4715b3ab,"`spaces_inside_linter()`: ignore spaces preceding trailing comments (#636, @​MichaelChirico).",1,317,FALSE,NA
lintr,f17eabef8614b4040b934e005b89a950,`T_and_F_symbol_linter()`:,1,318,FALSE,NA
lintr,f17eabef8614b4040b934e005b89a950,"• Added as a default because it enforces a tidyverse style guide rule (#517, @​AshesITR).",2,319,FALSE,`T_and_F_symbol_linter()`:
lintr,f17eabef8614b4040b934e005b89a950,"• No longer lint occurrences of `T` and `F` when used for subsetting, and give a better message when used as variable names (#657, @​AshesITR).",2,320,FALSE,`T_and_F_symbol_linter()`:
lintr,c245fe10fb2e159db2c876a75111fb7f,`trailing_blank_lines_linter()`:,1,321,FALSE,NA
lintr,c245fe10fb2e159db2c876a75111fb7f,"• Extended to lint files without a terminal newline (#675, @​AshesITR).",2,322,FALSE,`trailing_blank_lines_linter()`:
lintr,c245fe10fb2e159db2c876a75111fb7f,"• Also, running `lint()` on a file without a terminal newline no longer throws a `warning()`.",2,323,FALSE,`trailing_blank_lines_linter()`:
lintr,cb5eecbfdb8cc980e89c9b9f5ea62fec,`trailing_whitespace_linter()`:,1,324,FALSE,NA
lintr,cb5eecbfdb8cc980e89c9b9f5ea62fec,"• Extended to also lint completely blank lines by default (#1044, @​AshesITR).",2,325,FALSE,`trailing_whitespace_linter()`:
lintr,cb5eecbfdb8cc980e89c9b9f5ea62fec,• Added argument `allow_empty_lines` (`FALSE` by default) to toggle this behavior.,2,326,FALSE,`trailing_whitespace_linter()`:
lintr,cb5eecbfdb8cc980e89c9b9f5ea62fec,"• Improved so that trailing whitespace inside string literals does not trigger a lint (#1045, @​AshesITR).",2,327,FALSE,`trailing_whitespace_linter()`:
lintr,cb5eecbfdb8cc980e89c9b9f5ea62fec,• Added argument `allow_in_strings` (`TRUE` by default) to toggle this behavior.,2,328,FALSE,`trailing_whitespace_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,`undesirable_function_linter()`:,1,329,FALSE,NA
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,"• Added new functions to `default_undesirable_functions` related to debugging (#876, @​MichaelChirico):",2,330,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `browser()`,3,331,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `debug()`,3,332,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `debugcall()`,3,333,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `debugonce()`,3,334,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `trace()`,3,335,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,‣ `untrace()`,3,336,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,"• No longer lints `library()` and `require()` calls attaching a package with an undesired name, e.g. `library(foo)` (#814, @​kpagacz and @​MichaelChirico).",2,337,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,"• No longer lints undesirable symbols if they are used as names in `$` extractions (#1050, @​AshesITR).",2,338,FALSE,`undesirable_function_linter()`:
lintr,6cae4f02850b7e4cf9d74c3dd8b2372b,"• Added more explanation why certain functions might be undesirable and what alternatives to use; ditto for `undesirable_operator_linter()` (#1133, #1146, #1159, @​AshesITR).",2,339,FALSE,`undesirable_function_linter()`:
lintr,52975310074cb2c1b7c6f972f48fb85a,"`cyclocomp_linter()`: set the default `complexity_limit` to 15. This brings the default into sync with what is enforced via `default_linters` (#693, @​AshesITR).",1,340,FALSE,NA
lintr,e647f3fe70aaed13009db9a66abf0f74,"`lint_package()` now lints files in the `demo` directory by default (#703, @​dmurdoch).",1,341,FALSE,NA
lintr,f1c13145f840c49627db33f826deea81,"Moved the default lintr cache directory from `~/.R/lintr_cache` (which was a violation of CRAN policy) to `R_user_dir(""lintr"", ""cache"")`. Note that 3.0.0 is a major version update and invalidates the old cache anyway, so it can be safely deleted (#1062, @​AshesITR).",1,342,FALSE,NA
lintr,23afad9c090022562fe86996a8abc11d,"`backport_linter()` for detecting mismatched R version dependencies (#506, #1316, #1318, #1319, @​MichaelChirico and @​AshesITR).",1,343,FALSE,NA
lintr,adb4685a8a530ff07c34eeb2396321b2,"`duplicate_argument_linter()` similarly checks that there are no duplicate arguments supplied to function calls (#850, @​renkun-ken).",1,344,FALSE,NA
lintr,16a087438b359dbb2364f1de35217732,"`missing_argument_linter()` to check for empty (missing) arguments in function calls (#563, #1152, @​renkun-ken and @​AshesITR).",1,345,FALSE,NA
lintr,4944b81cd9a0f2ba9851e5c47a8064f4,"`missing_package_linter()` to check if packages in calls to `library()` and friends are missing (#536, #1037, @​renkun-ken and @​MichaelChirico).",1,346,FALSE,NA
lintr,aeff22504ae6fdaaf5536166180f6410,"`namespace_linter()` to check for common mistakes in `pkg::symbol` usages (#548, @​renkun-ken).",1,347,FALSE,NA
lintr,3a717185958a11b2f6afa2351d7a771f,"`package_hooks_linter()` to run a series of checks also done by `R CMD check` on the `.onLoad()`, `.onAttach()`, `.Last.lib()` and `.onDetach()` hooks (#882, @​MichaelChirico).",1,348,FALSE,NA
lintr,8afca6d52e2dc1b8f338189b9528143e,"`pipe_call_linter()` to enforce that all steps of `magrittr` pipelines use explicit calls instead of symbols, e.g. `x %>% mean()` instead of `x %>% mean` (#801, @​MichaelChirico).",1,349,FALSE,NA
lintr,ecf0c6bfdb1e458e39c19268575f98c7,"`sprintf_linter()` to check for common mistakes in `sprintf()` usage (#544, #624, @​renkun-ken and @​AshesITR).",1,350,FALSE,NA
lintr,5eb47822b2dc4d467b9e49e4f9b6f068,"`unused_import_linter()` to detect unnecessary `library()` calls in R scripts (#239, @​jimhester, @​AshesITR).",1,351,FALSE,NA
lintr,855842efdb2750ce4d58bfd7091a6812,`any_duplicated_linter()` Require usage of `anyDuplicated(x) > 0L` over `any(duplicated(x))` and similar.,1,352,FALSE,NA
lintr,7d1f3b5af1e687a7c89792078212ef62,`any_is_na_linter()` Require usage of `anyNA(x)` over `any(is.na(x))`.,1,353,FALSE,NA
lintr,556c6611796325c415ed9e60f124bc71,"`class_equals_linter()` Prevent comparing `class(x)` with `==`, `!=`, or `%in%`, where `inherits()` is typically preferred.",1,354,FALSE,NA
lintr,052d5674fd796fbf52b6ee735835828d,`condition_message_linter()` Prevent condition messages from being constructed like `stop(paste(...))` (where just `stop(...)` is preferable).,1,355,FALSE,NA
lintr,7f23f3299138a3251136f89c6037364f,`conjunct_test_linter()` Require usage of `expect_true(x); expect_true(y)` over `expect_true(x && y)` and similar.,1,356,FALSE,NA
lintr,a945e730e32505d8785a3225f81856a1,`consecutive_stopifnot_linter()` Require consecutive calls to `stopifnot()` to be unified into one.,1,357,FALSE,NA
lintr,a70d670e212943c94ca70b6a49afbef5,"`expect_comparison_linter()` Require usage of `expect_gt(x, y)` over `expect_true(x > y)` and similar.",1,358,FALSE,NA
lintr,490153a5d5af7d82c358e4a6aacde224,"`expect_identical_linter()` Require usage of `expect_identical()` by default, and `expect_equal()` only by exception.",1,359,FALSE,NA
lintr,ce628e33bc384082c9e805e5b0131526,"`expect_length_linter()` Require usage of `expect_length(x, n)` over `expect_equal(length(x), n)` and similar.",1,360,FALSE,NA
lintr,f7b6dbcfe89ffa3c3ba896f11f28d3bf,"`expect_named_linter()` Require usage of `expect_named(x, n)` over `expect_equal(names(x), n)` and similar.",1,361,FALSE,NA
lintr,1551a8a7982266e26cfc58355ef30111,"`expect_not_linter()` Require usage of `expect_false(x)` over `expect_true(!x)`, and *vice versa*.",1,362,FALSE,NA
lintr,91290e4eb131e35db88226486ca277dc,"`expect_null_linter()` Require usage of `expect_null(x)` over `expect_equal(x, NULL)` and similar.",1,363,FALSE,NA
lintr,6355564f5b543cd09ffbbc3753775d31,"`expect_s3_class_linter()` Require usage of `expect_s3_class(x, k)` over `expect_equal(class(x), k)` and similar.",1,364,FALSE,NA
lintr,2a311f8b4700eaca735b2ffda80e1447,"`expect_s4_class_linter()` Require usage of `expect_s4_class(x, k)` over `expect_true(methods::is(x, k))`.",1,365,FALSE,NA
lintr,6ede628c2fb77620c6a840a547e2efb9,"`expect_true_false_linter()` Require usage of `expect_true(x)` over `expect_equal(x, TRUE)` and similar.",1,366,FALSE,NA
lintr,c1140e324713267c8ea063c878064aa8,"`expect_type_linter()` Require usage of `expect_type(x, t)` over `expect_equal(typeof(x), t)` and similar.",1,367,FALSE,NA
lintr,16139799fb5b4348fe524906e6d9923b,"`fixed_regex_linter()` Require `fixed = TRUE` or `stringr::fixed()` for regular expressions that can be expressed statically, e.g. `strsplit(x, ""[.]"")` can be `strsplit(x, ""."", fixed = TRUE)`.",1,368,FALSE,NA
lintr,16139799fb5b4348fe524906e6d9923b,"• Added parameter `allow_grepl` (default `FALSE`) to toggle whether `grepl()` usages should be linted. These might be treated separately because `grepl(""^x"", NA)` is `FALSE`; the `startsWith()` equivalent to get `FALSE` for missing input is clunkier, but more explicit: `!is.na(x) & startsWith(x, string)` (#1376, @​MichaelChirico).",2,369,FALSE,"`fixed_regex_linter()` Require `fixed = TRUE` or `stringr::fixed()` for regular expressions that can be expressed statically, e.g. `strsplit(x, ""[.]"")` can be `strsplit(x, ""."", fixed = TRUE)`."
lintr,0014f024812f9c508b3365b1b1def8af,"`ifelse_censor_linter()` Require usage of `pmax()` / `pmin()` where appropriate, e.g. `ifelse(x > y, x, y)` is `pmax(x, y)`.",1,370,FALSE,NA
lintr,19a3330a71c692eddff5a3aa11c8cfe0,"`inner_combine_linter()` Require inputs to known-vectorized functions to be combined first rather than later, e.g. `as.Date(c(x, y))` over `c(as.Date(x), as.Date(y))`.",1,371,FALSE,NA
lintr,f8e0a89aa317bfeaed0229c566ded89b,"`literal_coercion_linter()` Require using correctly-typed literals instead of direct coercion, e.g. `1L` instead of `as.numeric(1)`.",1,372,FALSE,NA
lintr,afd22b5c23685b47343cfbc6b9d44f36,"`nested_ifelse_linter()` Prevent nested calls to `ifelse()` like `ifelse(A, x, ifelse(B, y, z))`, and similar.",1,373,FALSE,NA
lintr,46a4436041cbce032582ade7caf8ab5d,"`numeric_leading_zero_linter()` Require a leading `0` in fractional numeric constants, e.g. `0.1` instead of `.1`.",1,374,FALSE,NA
lintr,a24a77a0bb2d2d73e8639aa15243919c,`outer_negation_linter()` Require usage of `!any(x)` over `all(!x)` and `!all(x)` over `any(!x)`.,1,375,FALSE,NA
lintr,fdeba47a7dd1ba662d11e399c096046f,`paste_linter()` lint for common mis-use of `paste()` and `paste0()`:,1,376,FALSE,NA
lintr,fdeba47a7dd1ba662d11e399c096046f,"• `paste0()` encouraged instead of `paste(sep = """")`.",2,377,FALSE,`paste_linter()` lint for common mis-use of `paste()` and `paste0()`:
lintr,fdeba47a7dd1ba662d11e399c096046f,"• `toString()` or `glue::glue_collapse()` encouraged instead of `paste(x, collapse = "", "")`.",2,378,FALSE,`paste_linter()` lint for common mis-use of `paste()` and `paste0()`:
lintr,fdeba47a7dd1ba662d11e399c096046f,• Lint `sep=` passed to `paste0()` -- typically a mistake.,2,379,FALSE,`paste_linter()` lint for common mis-use of `paste()` and `paste0()`:
lintr,b8b8e87013ca983a2808700be332b81f,"`redundant_ifelse_linter()` Prevent usage like `ifelse(A & B, TRUE, FALSE)` or `ifelse(C, 0, 1)` (the latter is `as.numeric(!C)`).",1,380,FALSE,NA
lintr,aa210e974a8c755f89b78fc6f8aecc98,"`regex_subset_linter()` Require usage of `grep(ptn, x, value = TRUE)` over `x[grep(ptn, x)]` and similar.",1,381,FALSE,NA
lintr,0053c2370f0be8f4d09497444c297daa,"`string_boundary_linter()` Require usage of `startsWith(x, ptn)` over `grepl(""^ptn"", x)` or `substr(x, 1, 3) == ptn` and similar.",1,382,FALSE,NA
lintr,703da6ad2f92233e8bbd3d96d30b5c5a,`strings_as_factors_linter()` Check for code designed to work before and after the `stringsAsFactors = FALSE` default change in R 4.0 by examining code for `data.frame()` usages susceptible to assumptions about the default value of `stringsAsFactors=`.,1,383,FALSE,NA
lintr,79d77627face0c78e8adbe0a7cdccd97,"`system_file_linter()` Prevent usage like `file.path(system.file(""A"", package = ""pkg""), ""B"")` where simply `system.file(""A"", ""B"", package = ""pkg"")` is more concise and readable.",1,384,FALSE,NA
lintr,250d1677299ce8526360fd3fd5068be9,"`unreachable_code_linter()` Prevent code after `return()` and `stop()` statements that will never be reached (extended for #1051 thanks to early user testing, thanks @​bersbersbers!).",1,385,FALSE,NA
lintr,3c1e2feee530e6cba40e4e8ade144823,`vector_logic_linter()` Require use of scalar logical operators (`&&` and `||`) inside `if()` conditions and similar.,1,386,FALSE,NA
lintr,7902ff6a54e5e3e9388994b7d3a6fbf6,"`yoda_test_linter()` Require usage of `expect_identical(x, 1L)` over `expect_equal(1L, x)` and similar.",1,387,FALSE,NA
lintr,91b3e1b4298c14af551a6a778821a4b6,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR).",1,388,FALSE,NA
lintr,91b3e1b4298c14af551a6a778821a4b6,• Each linter has its own help page.,2,389,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,91b3e1b4298c14af551a6a778821a4b6,"• `?linters` also links to tag help pages, collecting linters with a similar goal.",2,390,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,91b3e1b4298c14af551a6a778821a4b6,• Each linter can have multiple tags.,2,391,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,91b3e1b4298c14af551a6a778821a4b6,• `available_linters()`: new function to list available linters and their tags. This feature is extensible by package authors providing add-on linters for {lintr}.,2,392,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,91b3e1b4298c14af551a6a778821a4b6,• `available_tags()`: new function to list available tags.,2,393,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,91b3e1b4298c14af551a6a778821a4b6,• `linters_with_tags()`: new function to help build a list of linters using tags.,2,394,FALSE,"**Documentation**: Reorganize linter documentation into new tag-based Rd pages (#888, #1015, @​AshesITR)."
lintr,7873d4154eef24db20e06cb92c2eef6a,"**Encodings**: lintr now supports non-system character Encodings. The correct encoding is auto-detected from .Rproj or DESCRIPTION files in your project. Override the default in the `encoding` setting of lintr (#752, #782, @​AshesITR).",1,395,FALSE,NA
lintr,cf8bb9cf646051b5482620bf3ba5d9af,"**Jenkins CI**: Support for writing comments to GitHub repo when running in Jenkins CI (#488, @​fdlk).",1,396,FALSE,NA
lintr,0ed1decb1c68495a6b4810e91b9781bd,"**Performance**: Optimized performance-critical functions in lintr, such as `get_source_expressions()` resulting in about 2x speedup in our test suite and even more for complex files (#1169, #1197, #1200, #1201, #1214, @​MichaelChirico and @​AshesITR). Average `lint_package()` execution time is down about 30% and the median package sees about 40% improvement.",1,397,FALSE,NA
lintr,daf243cd051a9555ad6602f8ecab1514,"**Raw strings**: Several linters tightened internal logic to allow for raw strings like `R""( a\string )""` (#1034, #1285, @​MichaelChirico and @​AshesITR).",1,398,FALSE,NA
lintr,dbbb81f73be08759beb19033bdf27d24,"**Selective exclusion syntax**: New syntax to exclude only selected linters from certain lines or passages. Use `# nolint: linter_name, linter2_name.` or `# nolint start: linter_name, linter2_name.` in source files or named lists of line numbers in `.lintr`. Note the terminal `.` is required. Also allows for partial matching as long as the supplied prefix is unique, e.g. `# nolint: infix_spaces.` works to exclude `infix_spaces_linter` (#605, #872, @​AshesITR).",1,399,FALSE,NA
lintr,dbbb81f73be08759beb19033bdf27d24,"• Added the linter name to lintrs output to facilitate discovery of the correct name (#1357, @​AshesITR).",2,400,FALSE,"**Selective exclusion syntax**: New syntax to exclude only selected linters from certain lines or passages. Use `# nolint: linter_name, linter2_name.` or `# nolint start: linter_name, linter2_name.` in source files or named lists of line numbers in `.lintr`. Note the terminal `.` is required. Also allows for partial matching as long as the supplied prefix is unique, e.g. `# nolint: infix_spaces.` works to exclude `infix_spaces_linter` (#605, #872, @​AshesITR)."
lintr,9d98dc8d835e59961b5f88588af6c7ad,"Improved S3 generic detection for non-standard S3 generics where `UseMethod()` is called after several preceding expressions (#846, @​jonkeane).",1,401,FALSE,NA
lintr,a8cb9269a7f1e5a0f2fdbc18b51f2a7a,"`extraction_operator_linter()`: no longer lint `x[NULL]` (#1273, @​AshesITR).",1,402,FALSE,NA
lintr,a9c35c7869647a72c81e9805251fbe93,"`is_lint_level()`: new exported helper for readably explaining which type of expression is required for a custom linter. Some linters are written to require the full file's parse tree (for example, `single_quotes_linter()`). Others only need single expressions, which is more cache-friendly (most linters are written this way to leverage caching) (#921, @​MichaelChirico).",1,403,FALSE,NA
lintr,3845bd3d35ca844e782dd8f712227091,"`lint_dir()` excludes the `renv` and `packrat` directories by default (#697, @​AshesITR).",1,404,FALSE,NA
lintr,791899a15e2f646dde96807ce1d6cc84,"`lint()`: new optional argument `text` for supplying a line or lines directly, e.g. if the file is already in memory or linting is being done *ad hoc* (#503, @​renkun-ken).",1,405,FALSE,NA
lintr,932ccf32ef32cb51d6f2fa79d573762f,"`seq_linter()`: improve lint message to be clearer about the reason for linting (#522, @​MichaelChirico).",1,406,FALSE,NA
lintr,a188bc7a48fffd76385d46f0f892396c,`unneeded_concatenation_linter()`:,1,407,FALSE,NA
lintr,a188bc7a48fffd76385d46f0f892396c,"• Correctly considers arguments in pipelines (`%>%` or `|>`; #573, #1270, @​michaelquinn32 and @​AshesITR).",2,408,FALSE,`unneeded_concatenation_linter()`:
lintr,a188bc7a48fffd76385d46f0f892396c,"• New argument `allow_single_expression`, default `TRUE`, toggling whether `c(x)` should be linted, i.e., a call to `c()` with only one entry which is not a constant. In some such cases, `c()` can simply be dropped, e.g. `c(a:b)`; in others, the parentheses are still needed, e.g. `-c(a:b)` should be `-(a:b)`; and in still others, `c()` is used for the side-effect of stripping attributes, e.g. `c(factor(letters))` or `c(matrix(1:10, 5, 2))`. In this last case, `c()` can (and should) in most cases be replaced by `as.vector()` or `as.integer()` for readability. In fact, we suspect it is *always* preferable to do so, and may change the default to `allow_single_expression = FALSE` in the future. Please report your use case if `as.vector()` does not suit your needs (#1344, @​MichaelChirico).",2,409,FALSE,`unneeded_concatenation_linter()`:
lintr,0c1539565c7e4f398bdad50b4fdc8401,"`use_lintr()`: new exported helper for creating a minimal `.lintr` configuration (#902, @​AshesITR).",1,410,FALSE,NA
lintr,46d27f58264f9b982761d159f1cb07ff,"`xml_nodes_to_lints()`: new exported helper for converting `xml_node` objects obtained using linter logic expressed in XPath into `Lint` objects (#1124, #1216, #1234, @​MichaelChirico and @​AshesITR).",1,411,FALSE,NA
lintr,381cc892af2327e5f83bd8244e061ff1,"**RStudio**: Source markers are cleared when there are no lints (#520, @​AshesITR).",1,412,FALSE,NA
lintr,29ed5a274de61b57e25f45caeb95bf3f,"Error message for mismatched starts and ends of exclusion ranges is now more helpful. (#571, #860, @​AshesITR and @​danielinteractive).",1,413,FALSE,NA
lintr,8be5534b8dcd1d186dcc4ac7d1fda02a,"Improved location information for R parse errors (#894, #892, @​renkun-ken and @​AshesITR).",1,414,FALSE,NA
lintr,43b0e056057b3fc70229e1b06987726f,`get_source_expressions()`:,1,415,FALSE,NA
lintr,43b0e056057b3fc70229e1b06987726f,"• Fix possible error on invalid XML produced by `xmlparsedata::xml_parse_data()` (#559, @​renkun-ken).",2,416,FALSE,`get_source_expressions()`:
lintr,43b0e056057b3fc70229e1b06987726f,"• Fix handling zero-length variable name error (#566, @​renkun-ken).",2,417,FALSE,`get_source_expressions()`:
lintr,43b0e056057b3fc70229e1b06987726f,"• Malformed Rmd files now cause a lint instead of an error (#571, @​AshesITR).",2,418,FALSE,`get_source_expressions()`:
lintr,43b0e056057b3fc70229e1b06987726f,"• No longer fails if `getParseData()` returns a truncated (invalid) Unicode character as parsed text (#815, @​leogama).",2,419,FALSE,`get_source_expressions()`:
lintr,43b0e056057b3fc70229e1b06987726f,"• Fixes the `text` value for `STR_CONST` nodes involving 1- or 2-width octal escapes (e.g. `""\1""`) to account for an R parser bug (https://bugs.r-project.org/show_bug.cgi?id=18323; #1056, @​MichaelChirico).",2,420,FALSE,`get_source_expressions()`:
lintr,43b0e056057b3fc70229e1b06987726f,"• Handle Rmd inputs containing unevaluated code blocks with named format specifiers (#472, @​russHyde).",2,421,FALSE,`get_source_expressions()`:
lintr,8953240cc769e53f579ec4902fc8ab42,"`line_length_linter()`: fix a bug causing duplicate lints for lines containing multiple expressions (#681, @​AshesITR).",1,422,FALSE,NA
lintr,b861b2b23d609e9037bb835771146f4b,`lint_package()`:,1,423,FALSE,NA
lintr,b861b2b23d609e9037bb835771146f4b,"• Warns and returns `NULL` if no package is found (instead of giving a peculiar error message; #776, @​MichaelChirico).",2,424,FALSE,`lint_package()`:
lintr,b861b2b23d609e9037bb835771146f4b,"• Stricter about what is considered to be a package -- folders named `DESCRIPTION` are ignored (#702, @​MichaelChirico).",2,425,FALSE,`lint_package()`:
lintr,0bf3a2b1f0b64b1886000370e933c5e8,`linters_with_defaults()` (formerly `with_defaults()`):,1,426,FALSE,NA
lintr,0bf3a2b1f0b64b1886000370e933c5e8,"• No longer duplicates the `lintr_function` class when it is already present (#511, @​AshesITR).",2,427,FALSE,`linters_with_defaults()` (formerly `with_defaults()`):
lintr,0bf3a2b1f0b64b1886000370e933c5e8,"• Warns if a named argument is `NULL` but its name is not in `defaults` (#1049, @​AshesITR).",2,428,FALSE,`linters_with_defaults()` (formerly `with_defaults()`):
lintr,ef8eefd388ce3e8efcb37fa81a129892,"`linters_with_defaults()` handles automatic naming of very long arguments correctly (#774, @​MichaelChirico).",1,429,FALSE,NA
lintr,25e4aea4a79b48120a7f7e3da1468b1b,"`save_cache()` will now recursively create the cache directory; this avoids errors that could arise if any parent directories do not exist (#60, @​dankessler).",1,430,FALSE,NA
lintr,554990b89853dc7faf61c80ee92eb91a,"`spaces_left_parentheses_linter()`: fix a bug causing warnings like ""In `parent == parent[before_operator_idx]` longer object length is not a multiple of shorter object length"" in nested expressions (#654, @​AshesITR).",1,431,FALSE,NA
lintr,d4e01bfd4f9ff9984f875ffa6bd9261d,"Added a new, more restrictive test workflow - `test-package` - that fails on warnings emitted by tests (#1263, #1272, @​AshesITR).",1,432,FALSE,NA
lintr,395ede6053cf7940d8c3e11993f62105,"Added a secondary, more restrictive lint workflow - `lint-changed-files` - for newly written / modified code (#641, @​dragosmg).",1,433,FALSE,NA
lintr,36d0a093917fe3886ed26600a64930da,"Several optional `Imported` packages have become `Suggested` dependencies: `httr`, `testthat`, and `rstudioapi`. This should allow snappier CI builds for usages not relying on some more ""peripheral"" features of the package.",1,434,FALSE,NA
lintr,a46b1075e125053e1d9e88f82945f18e,Special thanks to @​bersbersbers for early testing on the 3.0.0 changes.,1,435,FALSE,NA
lintr,4fc62babe916fc0adce6d8ebc3273e05,"Switched CI from Travis to GitHub Actions, using the full tidyverse recommended `R CMD check`. Code coverage and linting are implemented using separate GitHub Actions workflows (#572, @​dragosmg).",1,436,FALSE,NA
lintr,77f96d6ecd2752e54f5ae5300fd2596e,"Updated R CMD GitHub Actions workflow to check for R 3.6 on Ubuntu, instead of R 3.3, and for R 4.0 on Windows, instead of R 3.6 (#803, @​ dragosmg).",1,437,FALSE,NA
lintr,2a960c10ef634e8c5b6f3b057a72ba97,"`lintr` now uses the 3rd edition of `testthat` (@​MichaelChirico, @​AshesITR, #910, #967).",1,438,FALSE,NA
lintr,32f7d94c8ec39fbc6079ca25c4d64d5d,lintr now supports GitHub Actions and will print the lints as warning messages if lints are printed during an action.,1,439,FALSE,NA
lintr,5e6f50235754623dd70a5ccd5260ca5d,"`lint_package()` will now lint vignettes and data-raw by default (#447, @​AshesITR).",1,440,FALSE,NA
lintr,4b37b1db164045ae28703235ba56398f,`lint_dir()` will now include Rmd and Rnw files by default (@​AshesITR).,1,441,FALSE,NA
lintr,9d4daca1ee5269c9cfe65ef3af01c739,"`single_quote_linter()` no longer causes a print issue when open quote appears at a column \> than close quote (#457, @​jamieRowen)",1,442,FALSE,NA
lintr,b66b3eb29738aa0ae96d4601fd521cfa,"`absolute_path_linter()` and `nonportable_path_linter()` now handle file-paths that are wrapped with double-quotes (#433, #437, @​russHyde).",1,443,FALSE,NA
lintr,4d170bf6cc1bb53d5ad6901d7b06a9fa,"`get_source_expressions()` has been changed to handle `expr_or_assign_or_help` tokens arising when parsing code containing equals-assignments in R-devel (#403, #456, @​russHyde).",1,444,FALSE,NA
lintr,fdd85c9de39f0f4a23dc5219962f349d,"`object_usage_linter` has been changed to ensure lint-position is indicated relative to the start of the file, rather than the start of a defining function (#432, @​russHyde).",1,445,FALSE,NA
lintr,d3bad1541ddfda974ac7a6d5782772bb,"`commas_linter` now allows spaces to come before a comma when used to denote a fall-through in a switch statement (#499, @​MrMallIronmaker)",1,446,FALSE,NA
lintr,174d3cdb494e86b13fc630c2d2fa99b4,"Deprecated `camel_case_linter()`, `snake_case_linter()` and `multiple_dots_linter()` in favor of `object_name_linter()` which enforce the given style: snake_case, dotted.case, lowerCamelCalse, UpperCamelCase, alllowercase or ALLUPPERCASE (#59, @​fangly).",1,447,FALSE,NA
lintr,49379570177ec4054561da1a6a68e381,"Deprecated absolute_paths_linter() in favor of the new `absolute_path_linter()`, with a lax mode for fewer false positive lints (#199, @​fangly).",1,448,FALSE,NA
lintr,e12e59129f9bf807d07222c3b4b67f87,"New `cyclocomp_linter()` identifies overly complex functions (#361, @​fabian-s)",1,449,FALSE,NA
lintr,fe727dde1c9dd61685777b54750f42c6,"New `equals_na_linter()` (#143, #326, @​jabranham)",1,450,FALSE,NA
lintr,44b46c1b210388ca666cd887e69ca7f6,"New `extraction_operator_linter()` checks that the `[[` operator is used when extracting a single element from an object, not `[` (subsetting) nor `$` (interactive use) (@​fangly).",1,451,FALSE,NA
lintr,3fa49ca4bae6c5163908dd854f4eab80,"New `function_left_parentheses_linter()` to check that there is no space between a function name and its left parentheses (#204, @​jrnold).",1,452,FALSE,NA
lintr,3be883e0a075549933228303898a90e4,"New `implicit_integer_linter()` detects round numbers not declared as integers, i.e. 1 instead of 1L (@​fangly).",1,453,FALSE,NA
lintr,fd7d6680ac4d8fab04800db1eecf4390,New `nonportable_path_linter()` identifies paths constructed without file.path() (@​fangly).,1,454,FALSE,NA
lintr,84d96686a806ee891b5d8cb1430978f9,"New `paren_brace_linter()` checks that there is a space between right parenthesis and an opening curly brace (@​bfgray3, #242).",1,455,FALSE,NA
lintr,fcd5e44dbf308eb1e0d4d5ad9ba9b613,New `pipe_continuation_linter()` to ensure there is a space before %\>% and newline afterwards (#216).,1,456,FALSE,NA
lintr,d18e0634c86bf0f6287eeff7f2c843bf,"New `semicolon_terminator_linter()` reports semicolons at the end of a line (#147, 1) and between expressions (#181, @​fangly).",1,457,FALSE,NA
lintr,1e47637d6f3f8b567b11ed1814912adf,"New `seq_linter()`, finds `1:length(...)` (and similar) expressions (#155, 1)",1,458,FALSE,NA
lintr,8b40b57fa7d17ee22981704e6bd3183f,New `todo_comment_linter()` lints TODOs (@​fangly).,1,459,FALSE,NA
lintr,4e8358427fd072e28b658d20c7f2cf57,New `T_and_F_symbol_linter()` warns when using T and F instead of TRUE and FALSE (@​fangly).,1,460,FALSE,NA
lintr,44f92ae23a786420c9c4affa89aa722b,"New `undesirable_operator_linter()` and `undesirable_function_linter()` lint uses of user-specified functions and operators (#48, #149, @​fangly).",1,461,FALSE,NA
lintr,d71c35ed94d6a06be17ec854b5e7c9e1,New `unneeded_concatenation_linter()` lints uses of c() with a constant or no arguments (@​fangly).,1,462,FALSE,NA
lintr,2d8336c07b54121f5526513bcde633e1,"Export `expect_lint()` (#178, #210)",1,463,FALSE,NA
lintr,f71b6096172948a7d748b38a61b8313c,Export `ids_with_token()` and `with_id()` (#297 @​stufield),1,464,FALSE,NA
lintr,1e9d84f1bc629b80e547dea0ca26ec76,"linters can use the XML parse tree as well now, via the https://github.com/MangoTheCat/xmlparsedata package (#154, 1)",1,465,FALSE,NA
lintr,3fdd45b736ff45b037f8f063d560c3ae,"New `lint_dir()` function to lint files under a given directory (@​arekbee, #360)",1,466,FALSE,NA
lintr,034240c761fae59182d0031391afd273,"New `summary.lints()` function to summarize the linter results (#260, #262, @​wlandau).",1,467,FALSE,NA
lintr,c9e995bf19216a3f7cdcdb96118542dd,"New `checkstyle_output()` function to output lints to checkstyle XML output (#156, @​joshkgold)",1,468,FALSE,NA
lintr,9f2246980ae565df603cad1784ddda88,"`closed_curly_linter()` now allows closing parenthesis or comma after closing curly brace (#167, @​Enchufa2)",1,469,FALSE,NA
lintr,d604e0cbd535beb4aa03d97ac1bdf87d,`commas_linter()` now handles missing arguments calls properly (#145),1,470,FALSE,NA
lintr,bfa181a1a58f092d155ab3c55e544c98,"`commented_code_linter()` now relaxed, it no longer lints comments within roxygen blocks and does not consider ""-"" an R operator to avoid too many false positives.",1,471,FALSE,NA
lintr,acc4a1b31ea95e99c248de436653a3a3,`function_left_parentheses_linter()` now allows spaces if a function starts with a left parenthesis (#311),1,472,FALSE,NA
lintr,5d97d52740d9ec4c4f300f5d428ff1b4,"`no_tab_linter()` now reports proper line in all cases (#134, @​fangly)",1,473,FALSE,NA
lintr,ac3f8fca0bf23ea1b6d26f292fcd9f00,`object_length_linter()` argument `length` now defaults to 30 for consistency (#325 @​DragosMG),1,474,FALSE,NA
lintr,ee9561acf52b1d701d1431e30a02fbeb,"`object_name_linter()` now works when passed multiple styles (#341, @​infotroph)",1,475,FALSE,NA
lintr,dbbab27d89efccf18747350b7b9204de,"`object_usage_linter()` has been changed to better detect lexical scoping of global variables (#27, #336, #91, #382)",1,476,FALSE,NA
lintr,380c567989b4d546cdce0ad8f544a3ac,"`object_usage_linter()` now respects `utils::globalVariables()`, so it can be used to avoid false positive warnings due to non-standard evaluation (#352)",1,477,FALSE,NA
lintr,35df4709c61b097514ad416603bf89a1,`object_usage_linter()` now ignores top level calls that contain function definitions (#26).,1,478,FALSE,NA
lintr,e3e2d5cbd54d51fa7792a2912f1e59c7,"`object_linter*()`s now only lint objects declared in the current file (#76, #108, #136, #191, #194, #201, @​fangly).",1,479,FALSE,NA
lintr,7622c4ff74ea5b5926b3a5a3d8a4770a,`open_curly_linter()` and `closed_curly_linter()` now do not lint double curly syntax (#388),1,480,FALSE,NA
lintr,7744f3ac94371725087133b6b277ba10,`open_curly_linter()` now allows comments after the curly braces (#188),1,481,FALSE,NA
lintr,6ed814f7ba8f8d3aff7aec4843d0ed80,"`pipe_continuation_linter()` now behaves better in nested expressions, functions etc. (#366 @​russHyde)",1,482,FALSE,NA
lintr,3aeb190cbdfc9a6d96f220c76a32c956,"`space_inside_linter()` now reports proper line and column numbers (#203, @​fangly)",1,483,FALSE,NA
lintr,e6ec6e7f929c21d595b7606a1bd597d1,"`expect_lint()` now no longer shows Rstudio markers and error messages are correctly preserved (#180, #211, @​fangly)",1,484,FALSE,NA
lintr,a47854405a4bd2bbfde3df555a93f4cf,"`Lint()` / `as.data.frame()` error now fixed (#179, @​fangly).",1,485,FALSE,NA
lintr,5b025b1fe572c71e0129a40fe1f0a071,`lint()` no longer errors with inline `\\Sexpr` (#127).,1,486,FALSE,NA
lintr,e16ef8a5dfd0647ab12cadc8529d9d2b,`lint()` no longer errors with '\<% %\>' constructs (#185).,1,487,FALSE,NA
lintr,b3699d7e2591e47f323ffe78b5507066,"`lint_package()` now works with the cache, as intended (#146, @​schloerke)",1,488,FALSE,NA
lintr,ef93e772a61e39e5a11d5bd715ac7ca1,`lint_package()` now excludes `R/RcppExports.R` by default (#282),1,489,FALSE,NA
lintr,f49603c1f13f9eeefcb9d9fbbe3a76c4,`lint_package()` now removes fully excluded files as soon as possible,1,490,FALSE,NA
lintr,058ab6ef5daab4fa0f18de0a1a5f049d,"lintr now looks up its configuration in any parent directories as well as the package directory (#238, #345)",1,491,FALSE,NA
lintr,29d4abad820b41c95760dc1075264300,`seq_linter` is now one of the default linters (#316).,1,492,FALSE,NA
lintr,26390e6d5f5df13ecb7a00ce71c1db99,"Fix issue in lintr's compatibility with R-devel, due to to a new version of the PCRE library (#411.)",1,493,FALSE,NA
lintr,857e460159e372488359b9c062196af8,"`read_settings()` now has a better error message when the config file does not end with a newline (#160, #189)",1,494,FALSE,NA
lintr,4481637058e83eab53826e8579d8ced8,`expect_lint_free()` is now automatically skipped when run on covr (#287),1,495,FALSE,NA
lintr,0df5adbfafea099001b659954016fc07,Now lintr only tries to generate comments if running in wercker or travis CI (#166),1,496,FALSE,NA
lintr,d7c7e3e72a9a5c82b4a65d7072459ca0,"Add support for overriding GitHub API Token via `GITHUB_TOKEN` environment variable (#63, @​mattyb)",1,497,FALSE,NA
lintr,6904a1e1f1844aaed0b3f91e0a248a99,"Config files are now also searched for in the users' home directory (#266, @​randy3k)",1,498,FALSE,NA
lintr,056924ad916ad5e850a5d5309d0b213f,"Fixed crash caused by ambiguous cache file paths (#212, @​fangly).",1,499,FALSE,NA
lintr,55c7f68be402d9577abce53b812baa33,"RStudio addins to lint current source and project (fixes #264, @​JhossePaul)",1,500,FALSE,NA
lintr,f60324a20f4393a50e99e469c5cebef4,"Added proper handling of tab characters (fixes #44, @​fangly)",1,501,FALSE,NA
lintr,8504504d65e13da8ea7ad7aa94e677a2,"lintr does not need the igraph package any more (#152, 1)",1,502,FALSE,NA
lintr,1b3c46a5ab80e88a5d68d3c6ea04b030,"Fixed cache not saved in a directory other than requested (#213, @​fangly) avoid reading and pre-processing of ignored files (@​mwaldstein)",1,503,FALSE,NA
lintr,a8c19397392eee095fd39ed3bdeb3b8e,"Allow for any number of `#` to start a comment. Useful in ESS (#299, @​prosoitos)",1,504,FALSE,NA
lintr,caffd710833ceb837613d0e84b644a79,R Markdown files that do not contain chunks are no longer treated as code (#370).,1,505,FALSE,NA
lintr,ad3c93810fc76ffbf9bef331324f9632,"Fixed plain-code-block bug in Rmarkdown (#252, @​russHyde)",1,506,FALSE,NA
lintr,a38cd4e75e912aa6307a79ea488896f0,"Fixed bug where non-R chunks using {lang} `engine format` were parsed from R-markdown (#322, @​russHyde)",1,507,FALSE,NA
lintr,a7250f8b89e5e8b3eccaad8b9e50aa71,"Ensured `lintr` runs / installs / tests on R-3.6: pinned to github `xmlparsedata`; ensure vectors are length-1 when compared using `&&` and `||` (#363 #377 #384 #391, @​russHyde).",1,508,FALSE,NA
lintr,5980109dae91bb3af6d4fa41d12f5798,Fix tests to work with changes in the parser in R 3.6,1,509,FALSE,NA
lintr,142613c75c2231c9736a7bf9dbf1f6a1,Fix tests to work with upcoming testthat release.,1,510,FALSE,NA
lintr,896b64f5a5b1e3b00f510b9956b14b40,bugfix to work with knitr 1.16.7,1,511,FALSE,NA
lintr,d13254453d00774f32b7e93b0ff97954,"`expect_lint_free()` now is always skipped on CRAN. This is necessary because the non-binary R source may not be available when running tests on CRAN, and those tests may not be run in the package directory.",1,512,FALSE,NA
lintr,cfd06b8c2f18a8d17e4d2bf69c9fe014,bugfix to work with testthat 1.0.0,1,513,FALSE,NA
lintr,89b7a33732a6c327af366754d2601980,"infix_spaces_linter now properly checks `=` in named arguments. (#130, @​saurfang).",1,514,FALSE,NA
lintr,8a312b3a4e62fa7ee2874e3953921d1f,"commas_linter now properly recognizes lints when preceded by a blank line and points to the missing space rather than the comma (#111, #129, @​saurfang).",1,515,FALSE,NA
lintr,4f9339aa59e5216bcd79d7956ea67d52,"Make spaces_left_parentheses_linter more robust when determining `(` type (#128, @​saurfang)",1,516,FALSE,NA
lintr,602a4aaef44e2c98f3a83fa7023a561d,"commented_code_linter (#83, @​jackwasey)",1,517,FALSE,NA
lintr,ec5fc54dc603b3e5b4030dbecef2fbf1,"Now trims long comments (#55, reported by @​paulstaab)",1,518,FALSE,NA
lintr,29cb25574e8437391806869f77d08a00,Automatic commenting of Github commits and pull requests when linting on Travis-CI,1,519,FALSE,NA
lintr,e413e4dfbe01c45671e6821ada31b1ea,expect_lint_free expectation can be added to testthat unit tests.,1,520,FALSE,NA
lintr,927a4da398aad7bca5499c14a288db28,Robust configuration system and exclusion logic,1,521,FALSE,NA
lintr,f306105509d42b18cb8fa6524c8ba18f,Emacs and Sublime Text 3 plugins now available from their respective package repositories.,1,522,FALSE,NA
lintr,1df5c4c8d65599768f1428293d051eb2,"add `names.lints`, `split.lints` (#49, @​ttriche)",1,523,FALSE,NA
lintr,9631d3fb72828547ec334dd93999c0f9,"Fixed bug that caused vim syntastic plugin not to work properly in windows (#46, @​abossenbroek)",1,524,FALSE,NA
lintr,14e9d52facf73cf0640c47b0dc21d834,allow lintr customization per project using `.lintr` config files.,1,525,FALSE,NA
lintr,c03932d6c53486003dd4b26747eab20c,use `globalenv()` instead of `baseenv()` for default parent environment so that `methods` will be included.,1,526,FALSE,NA
lintr,3f39c1653ecc93e763b09b529acdb955,"do not check object usage if eval fails. Fixes (#24, reported by @​fabian-s)",1,527,FALSE,NA
lintr,106d3513170ce0546fe267f11ff679bd,`trailing_whitespace_linter` was reporting the incorrect line number,1,528,FALSE,NA
lintr,7507d15ee6aa688a2497cb1d9ef4e7a2,"Use RStudio source marker API to display lints (#37, @​jjallaire)",1,529,FALSE,NA
lintr,1d4838dfa7fb702e5beda9b12d196b2e,"Permit single quotes if they quote literal double quotes (#28, @​jackwasey)",1,530,FALSE,NA
lintr,ebe62bf68a2a610ace941fd0b821a5ae,"`# nolint` comments are respected with caching (#68, @​krlmlr)",1,531,FALSE,NA
lintr,01295dd87fd0f18df882528e74ddacc0,Properly handle all knitr document formats,1,532,FALSE,NA
lintr,6807627640732379e6e3060c9cc610c7,"Allow for (( when linting (#259, @​nathaneastwood)",1,533,FALSE,NA
lintr,e5af53e40aa661bd8440dcc571143d08,"Remove \^ from infix spaces to conform with tidyverse. (#302, @​nathaneastwood)",1,534,FALSE,NA
lintr,a3287ebacfbb622040c0490ba8d45c24,Initial release,1,535,FALSE,NA
memoise,dad55afbf7874385914df3f544c1f196,"`omit_args` now also works for default arguments (@​mgirlich, #145).",1,1,FALSE,NA
memoise,2bf1d88f5b5b7ed787e2979127265582,Winston Chang is now the maintainer.,1,2,FALSE,NA
memoise,73d82872794e0b70770a72b5a0d9c918,The default value for the `hash` argument of `memoise()` is now taken with an indirection in case `memoise()` is called at the top-level of a namespace (r-lib/rlang#1177).,1,3,FALSE,NA
memoise,5a529db4df312439bd7b66592ca8d698,Fixed a bug in `has_cache()` that caused it to get the value unnecessarily. (#123),1,4,FALSE,NA
memoise,0d19685c855773fa5d5aa435cc22a8c2,"Memoise now uses caching objects from the cachem package by default. These caches support automatic pruning, so that they won't grow indefinitely. The older-style cache objects in the memoise package are still supported, but we suggest using new-style caches from cachem. (#115)",1,5,FALSE,NA
memoise,ff4dafbe4aac3ecfadb1aa46e0e60003,"Name clashes between function arguments and variables defined when memoising no longer occur (@​egnha, #43).",1,6,FALSE,NA
memoise,5f8ce8b25d034e1ebbdb9274a6ef9b7d,"Add Google Cloud Storage support via `cache_gcs()` (@​MarkEdmondson1234, #59)",1,7,FALSE,NA
memoise,ba508fa6f03d7f60a1de3b2659f70222,"Add `compress` option for non-memory caches (@​coolbutuseless, #71).",1,8,FALSE,NA
memoise,8f8d65e0e282e9962c397069584c04fb,"Use absolute path in cache file system backend, so user can change working directory after using relative path (@​xhdong-umd, #51, #65)",1,9,FALSE,NA
memoise,f2f48d5077ed959b0d821ca443e306cd,"Add `drop_cache()` to drop the cached result for particular arguments (@​richardkunze, #78)",1,10,FALSE,NA
memoise,b52c3bbdb31e8039a1e0ebcf61c0ec97,"Suppress messages of `aws.s3::head_object` within `cache_s3`'s `cache_has_key` to avoid printing of 404 messages for new keys (@​stelsemeyer, #96).",1,11,FALSE,NA
memoise,ca36fdebb1f5b8679df586c26b49229f,"Caches now hash the function body along with the arguments, to ensure functions with identical arguments use a separate file-system cache. (#38)",1,12,FALSE,NA
memoise,c14e75c24e32ddd195fb39b51cf0be7f,Handle missing arguments in memoised functions for simple cases not using non-standard-evaluation (#19).,1,13,FALSE,NA
memoise,bf59fdac6fdd909f1f96d63e7679b6f3,"`memoise()` gains a `cache=` argument to specify an external cache. Two types of caches are available, `cache_s3()` for amazon S3 and `cache_filesystem()` for a file system cache (#25, @​danielecook).",1,14,FALSE,NA
memoise,dd0dd2da7de7d8497b17e713f45d554b,"`memoise()` now signals an error if an already memoised function is used as input (#4, @​richierocks).",1,15,FALSE,NA
memoise,001114ffbc3960327ca9df5a0a1e8d33,"`has_cache()` function added which returns a boolean depending on if the given call is cached or not (#10, @​dkesh).",1,16,FALSE,NA
memoise,12999b292a2e355f0a68b3e9b15b5d2a,"Memoised functions now have a print method which displays the original function definition, rather than the memoisation code (#15, @​jimhester).",1,17,FALSE,NA
memoise,d7c113ec4de85a0015f8a5baccf792a2,"A memoised function now has the same interface as the original function, if the original function is known when `memoise` is called. (Otherwise, the old behavior is invoked, with a warning.) (#14, @​krlmlr)",1,18,FALSE,NA
memoise,1ac9618ee8e0e90acf5d83348a2dcbb5,"The enclosing environment of the memoised function is specified explicitly, defaults to `parent.frame()`.",1,19,FALSE,NA
memoise,3da4a29690416b54cf77cc708fbcc33b,`is.memoised` now checks if the argument is a function.,1,20,FALSE,NA
memoise,2b2f6e3a0dbf50add4bcd20a16c61313,"Testing infrastructure, full test coverage.",1,21,FALSE,NA
memoise,415565f2a915f31c38cdab1d3fdf1e87,Update to fix outstanding R CMD check issues.,1,22,FALSE,NA
memoise,5b9308901c3a56081f6c6a566675a255,"Memoised functions now have an attribute memoised=TRUE, and is.memoised() tests whether a function is memoised. (Contributed by Sietse Brouwer.)",1,23,FALSE,NA
memoise,77ef33d9612102832a660e38d9cb4789,"Documentation is now more elaborate, and hopefully more accessible to newcomers. Thanks to Sietse Brouwer for the verbosity.",1,24,FALSE,NA
mockery,12434671bae1ae270c02a61a0ea76608,Fixes for `R CMD check`,1,1,FALSE,NA
mockery,ad8b93686b96d67e420f59b97671c90f,Hadley Wickham is now the maintainer.,1,2,FALSE,NA
mockery,4467dcfd928b50a265ba26f8e2fb2a99,"`stub()` now unlocks/relocks locked bindings as required (@​sambrightman, #30).",1,3,FALSE,NA
mockery,20a238624644a0f17e97645e7c101e8d,"The R6 package has been added to Suggests, as requested by CRAN.",1,4,FALSE,NA
mockery,624e3322bb94d2f8648965111564398a,"`stub()` now works if the function being stubbed contains assignment functions (@​jimhester, #23).",1,5,FALSE,NA
mockery,59dc666f24f6ef8d778cd8e7c91c13d4,Fix bug whereby functions that begin with `.` don't have things mocked out in them.,1,6,FALSE,NA
mockery,1e7cf09769e5c488a3208aaedd7a6e7b,Add support for stubbing depth greater than 1.,1,7,FALSE,NA
mockery,e212d1538ef7f3d853cebb301c757dbf,Add support for nested R6 classes.,1,8,FALSE,NA
pak,b6e51ebe50a85e782c826d6c841e06c0,pak can now handle the case when `Config/Needs/*` dependencies are requested for package from a repository.,1,1,FALSE,NA
pak,216a434a4685234d65c82fac4f93f041,pak uses safer `*printf()` format strings now.,1,2,FALSE,NA
pak,aad479b5ab5817327ccd4664d3b5a96a,"pak now correctly handles the latest GitHub release with the `@​*release` notation (@​pawelru, https://github.com/r-lib/pkgdepends/pull/321)",1,3,FALSE,NA
pak,d1399bd13d150f3de4ec82cfe881e78f,"pak now correctly handles having multiple instances of the same package in the metadata, with different R version requirements (#534, #538, https://github.com/r-lib/pkgdepends/pull/331).",1,4,FALSE,NA
pak,f7def12a652b441331b77c1a94d49d45,"`git::` package references work better now for Azure DevOps (@​jameslairdsmith, https://github.com/r-lib/pkgdepends/pull/333, https://github.com/r-lib/pkgdepends/pull/342).",1,5,FALSE,NA
pak,137506ccd1b78eda4599a13a31a617b1,"pak now does a better job at accepting installed packages, and avoids reinstalling more packages than needed when using a lock file (https://github.com/r-lib/actions/issues/759, https://github.com/r-lib/pkgdepends/pull/338).",1,6,FALSE,NA
pak,1b6b195d98a8057bb2fa226ab533f04b,pak now requires R \>= 3.5.0.,1,7,FALSE,NA
pak,6ca0c2449f069f081ed011d25c5d17b7,Many improvements in system requirements support:,1,8,FALSE,NA
pak,6ca0c2449f069f081ed011d25c5d17b7,• New functions:,2,9,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,‣ `pkg_sysreqs()`: calculate system requirements of packages.,3,10,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,"‣ `sysreqs_db_list()`, `sysreqs_db_match()`, `sysreqs_db_update()`: query the system requirements database.",3,11,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,"‣ `sysreqs_list_system_packages()`, `sysreqs_check_installed()`, `sysreqs_fix_installed()`: query and install missing system packages.",3,12,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,‣ `sysreqs_platforms()`: list supported platforms.,3,13,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,"• The installation proposal, printed before installation, now includes required and missing system packages, on supported platforms.",2,14,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,• New `sysreqs_platform` configuration option to override the auto-detected platform.,2,15,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,"• Faster, asynchronous system requirements lookup.",2,16,FALSE,Many improvements in system requirements support:
pak,6ca0c2449f069f081ed011d25c5d17b7,"• pak now does not reinstall system requirements by default, if they are already installed. (You can force a reinstall/upgrade with the `sysreqs_update` configuration option.)",2,17,FALSE,Many improvements in system requirements support:
pak,0726f261f49fd2df3d0baa7ed74c380d,New `gitlab::` package source to install packages from GitLab (https://github.com/r-lib/pkgdepends/pull/315).,1,18,FALSE,NA
pak,926d3404e8ec57f80a9272349b397288,pak now correctly parses multiple `git::` packages at once (https://github.com/r-lib/pkgdepends/issues/318).,1,19,FALSE,NA
pak,143fe9c050b17ed3c44fd26755dc691b,`git::` package sources now support version 1 of the git protocol. E.g. the Bioconductor git repositories now work: `git::https://git.bioconductor.org/packages/limma` (https://github.com/r-lib/pkgdepends/issues/314).,1,20,FALSE,NA
pak,2101221f49dae7636eb5d0342ef83a39,The `platforms` config parameter now works correctly with `deps::` package sources (#522).,1,21,FALSE,NA
pak,8240f8682d5b0f47b52c34af989a8484,"New `include_linkingto` config parameter to always include `LinkingTo` packages in the solution, even for binaries (https://github.com/r-lib/pkgdepends/issues/485).",1,22,FALSE,NA
pak,72987988477c37ba0b17d01afd98c3ca,"`pkg_name_check()` now does not include Acromine results, because the web site was unstable.",1,23,FALSE,NA
pak,5670eb968bd94ba88099e3ec5519c04d,"In `repo_add()` and `repo_resolve()` the `MRAN@​` prefix is now deprecated and resolves to PPM, because MRAN will be retired soon. See more at https://posit.co/blog/migrating-from-mran-to-posit-package-manager/.",1,24,FALSE,NA
pak,b7a3bb280889d01dbc7d68919edfbedc,The metadata cache now has `SystemRequirements` information for Bioconductor packages.,1,25,FALSE,NA
pak,5672e9ada4880efa86183ea3d4aa5215,No user visible changes.,1,26,FALSE,NA
pak,db05b40a9aa2f18c1d259e1c12c49fe1,"The `meta_*()` functions now consider the `platforms`, `cran_mirror` and `r_versions` config entries, see `?""pak-config""`.",1,27,FALSE,NA
pak,0c8d288ae181d9102f717186d956fc3d,"Better Posit Package Manager (PPM) support. New `+ppm_has_binaries()`, `ppm_r_versions()`, `ppm_repo_url()`, `ppm_snapshots()` and `ppm_platforms()` functions to help interacting with PPM. See the new 'pkgcache and Posit Package Manager on Linux' article at https://r-lib.github.io/pkgcache. (r-lib/pkgcache#47 and r-lib/pkgdepends#186).",1,28,FALSE,NA
pak,94bee26f490844b3fcc8de7845dcf080,New `system_r_platform()` and `system_r_platform_data()` functions to query the current platform.,1,29,FALSE,NA
pak,dc66f244eaa997f2cddbd726fd9ecf54,pak now support git repositories as package references. E.g. `git::https://github.com/r-lib/pak.git`.,1,30,FALSE,NA
pak,6c064888a43244c359c794fc495d8bcd,"pak now supports versioned CRAN packages, e.g. `dplyr@​1.1.1` will always install dplyr 1.1.1. Note that only CRAN packages are supported, Bioconductor packages are not (yet).",1,31,FALSE,NA
pak,785bf1a7fb186d876b95300a8e3b763f,"pak now has an alternative system requirements lookup implementation. It supports Fedora and Debian systems as well, in addition to Debian, Ubuntu, SUSE and RedHat derivatives. You can switch to this implementation by setting the `R_PKG_SYSREQS2` environment variable to `true`.",1,32,FALSE,NA
pak,a586c9c7ec04729747cab0931b65b21f,"pak now does a better job looking up dependencies for hand-selected dependency types. E.g. `dependencies = ""LinkingTo""`.",1,33,FALSE,NA
pak,a684d4314def4f5d37214b230044f2dd,"pak now removes `?ignore`-d packages from dependencies, and uses the correct version comparison for `?ignore-before.r` (https://github.com/r-lib/actions/issues/708).",1,34,FALSE,NA
pak,5e27abddfbd00394722f099619520302,pak now does not fail for circular soft dependencies (#306).,1,35,FALSE,NA
pak,505cfcceee3cbfab3f3aada7e3889fcd,"pak now reports dependency solver failures better in some cases (#305, https://github.com/r-lib/pak/issues/474).",1,36,FALSE,NA
pak,df55afc1af47a81f69804d43deb3208f,"pak now uses locally built CRAN binaries from the cache. Use the `?nocache` parameter to opt out from this, or `cache_delete(package = ...)` to remove a package from the cache.",1,37,FALSE,NA
pak,7a49f7e8999a8331d726773f5d6e2c1c,"pak has much improved and more informative error messages now. This work is not yet finished, so if you find an unclear error message, please open an issue. Thank you!",1,38,FALSE,NA
pak,2f5cf80648f2c3d152c92372c519154e,The solver is now more robust for non-canonical input (e.g. `DESCRIPTION` files) (https://github.com/r-lib/pak/issues/423).,1,39,FALSE,NA
pak,0c15708d013f6eecc6a2e04e21b4a79b,Better installation output. Standard output and error are now collected together (https://github.com/r-lib/pkgdepends/commit/0669f0f8c).,1,40,FALSE,NA
pak,d5441a7cd62c2c50a41f39a074d16079,The solver is now doing a better job when multiple versions of the same package are present in the same repository (https://github.com/r-lib/actions/issues/559).,1,41,FALSE,NA
pak,af11dc0f0aff311e0774bf839fc34f96,"`pkg_name_check()` now works again, it needed a fix after changes at https://crandb.r-pkg.org.",1,42,FALSE,NA
pak,313380d5e8d0133ac1ad094439c4ca35,"Explicit package names in local and URL package sources, as in `package=local::...` or `package=url::...` are now parsed correctly in dependencies.",1,43,FALSE,NA
pak,0fea9f3b93372a26e35c730fe4ae9c7b,pak is now more robust to `Archs` fields missing from the CRAN metadata for packages with compiled code (https://github.com/r-lib/pak/issues/448).,1,44,FALSE,NA
pak,ee15db48349312dc1d9b091914d02715,"`url::` packages now always work correctly, even if the digest package is not installed (https://github.com/r-lib/pak/issues/433).",1,45,FALSE,NA
pak,f767437d0b0b1075e6dfa13c542ff978,"pak is now more robust when installing packages from subdirectories of GitHub repositories (https://github.com/r-lib/pak/issues/431, @​paleolimbot).",1,46,FALSE,NA
pak,8051339b0b9ed27de95c2c121c2e29c1,"Parameters `?reinstall`, `?source` and `?ignore` now work correctly when specified in the `package=?parameter` format (#294).",1,47,FALSE,NA
pak,9fab42955a85437befa87ee974bdb3cc,The `?ignore` parameter works correctly now.,1,48,FALSE,NA
pak,e3cc25757e9f60e9695267e17004ecd1,Dependency resolution now does not fail if a package is not found.,1,49,FALSE,NA
pak,171d2143916c9d6617de58872666a3dc,pak can now install `url::` remotes from GitHub.,1,50,FALSE,NA
pak,fb09d736fc96aaeac90cd703feb903f2,"pak now does not fail when the package of a `.tar.gz` GitHub snapshot is in a subdirectory, or in a subdirectory of a subdirectory.",1,51,FALSE,NA
pak,ec868a7d0fba737e2b4a8f3d826261d7,pak now errors early if it cannot deduce the name of the package from a `Remotes` or `Config/Needs/*` entry.,1,52,FALSE,NA
pak,f5e1d7f083d4f4fc16d9899c4d673f06,Solver failures now include details in some cases where previously they did not.,1,53,FALSE,NA
pak,21bbaef082ae250e11a5fc7597cae01d,pak can now update packages in Docker containers where the old version was installed in the different Docker later (https://github.com/r-lib/pak/issues/251),1,54,FALSE,NA
pak,aafc1815eb475830e6beadc231cbcfcf,Update R version -\> Bioconductor version mapping. R 4.2.x now maps to Bioconductor 3.16.,1,55,FALSE,NA
pak,5dd99a624bbb7ec383611ee04460a70c,The `?ignore` parameter works correctly now.,1,56,FALSE,NA
pak,484bfec1451379d70f1bc216c54b86f3,Dependency resolution now does not fail if a package is not found.,1,57,FALSE,NA
pak,534b8636f2d2b1876ea2de1cd5f6f5dc,pak can now install `url::` remotes from GitHub.,1,58,FALSE,NA
pak,9be606a6126b4cf4f45754d54b445565,"pak now does not fail when the package of a `.tar.gz` GitHub snapshot is in a subdirectory, or in a subdirectory of a subdirectory.",1,59,FALSE,NA
pak,8a9bf4a5444e98740e35a61567a0847d,pak now errors early if it cannot deduce the name of the package from a `Remotes` or `Config/Needs/*` entry.,1,60,FALSE,NA
pak,72a2ed14cd23e5ad7b699675ae716263,Solver failures now include details in some cases where previously they did not.,1,61,FALSE,NA
pak,352662c7d6a46960c34445cfc21ee486,pak can now update packages in Docker containers where the old version was installed in the different Docker later (#251),1,62,FALSE,NA
pak,32ac36f89cabe4b02972b3ac2ae39078,pak errors are now user friendlier and better formatted.,1,63,FALSE,NA
pak,e4043db9f14a3798eb12b24b72539729,"pak now does not load tibble and its dependencies in the pak subprocess, so their dlls are not locked by the pak subprocess on Windows.",1,64,FALSE,NA
pak,9c212aa5a869b6801a69a5d4cdd6042d,pak now does not fail when installing a package that uses a non-UTF-8 encoding on R 4.3.x and later (#404).,1,65,FALSE,NA
pak,12959c0efc87c4bea15689e524a965ca,"pak functions that used to return tibbles return data frames now. While data frames and tibbles are very similar, they are not completely compatible. To convert the outputs of pak functions to tibbles call the `tibble::as_tibble()` function on them. If the pillar package is loaded, it improves the printing of the returned data frames. Relatedly, `pak::pak_install_extra()` installs pillar now, instead of tibble.",1,66,FALSE,NA
pak,99ff7a6959251938ce00b5165fb23ea5,pak now supports `file://` repositories.,1,67,FALSE,NA
pak,27c5eb63993bc7c088976f8af8b4d08f,"pak now uses HTTP 1.1 to download packages on Linux, in addition to macOS. This fixes HTTP issues with some servers (#358).",1,68,FALSE,NA
pak,c0980dfa3723d79ce58232e6942c6bb3,New `?ignore-before-r` parameter to ignore optional dependencies that need a newer R version (https://github.com/r-lib/pkgdepends/issues/243).,1,69,FALSE,NA
pak,50c6d157d6c2fd1644412517943164e2,New `?ignore` parameter to ignore an optional dependency.,1,70,FALSE,NA
pak,4890b8a1d9a57fb510c0133d076c13b5,Allow specifying downstream package parameters with the `package=?param` syntax.,1,71,FALSE,NA
pak,da6e9276899bbc9c8efb8fe5406caf30,"`lockfile_install()` now works better for `any::` refs, and pak always install the version it has planned for.",1,72,FALSE,NA
pak,7aa02a84adf499303278bb431bf0b0f6,System requirement installation is now more robust and works for Unix shell expressions (#347).,1,73,FALSE,NA
pak,5ce9c965ead590192fa5196ccebb1136,CRAN-like resolution is more robust now if a repository is missing the usual metadata.,1,74,FALSE,NA
pak,b401f9362315b0d35e325a84e0d58a94,The lock file is pretty JSON now.,1,75,FALSE,NA
pak,0e40fe99283afce1a7ba26604741764f,"pak now handles all version requirement types properly: '\<', '\<=', `==`, `>=`, `>`.",1,76,FALSE,NA
pak,36cbaddc29c7284e428ec51f0b713257,The dependency solver now uses better heuristics and does not (effectively) freeze if multiple repositories have multiple versions of the same packages (e.g. RSPM and CRAN) (https://github.com/r-lib/pkgdepends/pull/277),1,77,FALSE,NA
pkgdown,20146e96b370fdad4684483478ea69aa,Correct parse usage for S3 methods with non-syntactic class names (#2384).,1,1,FALSE,NA
pkgdown,e5aec6152946180a344829051f739904,Deprecated `build_favicon()` was removed (`build_favicons()` remains).,1,2,FALSE,NA
pkgdown,b1211e174f475a53b13b12ded92a4386,Use cli to provide interactive feedback.,1,3,FALSE,NA
pkgdown,5562ada59bfcc2fe4cf5b363bc33325c,"Preserve Markdown code blocks with class rmd from roxygen2 docs (@​salim-b, #2298).",1,4,FALSE,NA
pkgdown,af31608812d6d02517fb22e262078caf,"Avoid unwanted linebreaks from parsing `DESCRIPTION` (@​salim-b, #2247).",1,5,FALSE,NA
pkgdown,b4d92acc63f4e91b1adf825d06b5dbcc,"Remove redundant entries in the documentation index when multiple explicit `@​usage` tags are provided (@​klmr, #2302)",1,6,FALSE,NA
pkgdown,bb3bab6c602cb59f35f4a2e529e3d955,"The article index now sorts vignettes and non-vignette articles alphabetically by their filename (literally, their `basename()`), by default (@​jennybc, #2253).",1,7,FALSE,NA
pkgdown,769ea9707d942ef7e2dee66b5e821c3a,"Add Catalan translation (@​jmaspons, #2333)",1,8,FALSE,NA
pkgdown,2bb100dc6caae95fb8cf79c093d8c8f6,"Set RNG seed for htmlwidgets IDs. This reduces noise in pkgdown reference HTML output when examples generate htmlwidgets (@​salim-b, #2294).",1,9,FALSE,NA
pkgdown,597997e7ab5c977227bc2f5a83f2990b,"Fix BS5 navbar template to get `navbar.type: dark` to work with bslib 0.6+ / Bootstrap 5.3+ (@​tanho63, #2388)",1,10,FALSE,NA
pkgdown,8b0ee7ecbc5d2ac3bd44d90c11c5744e,"Fix topic match selection when there is an unmatched selection followed by a matched selection (@​bundfussr, #2234)",1,11,FALSE,NA
pkgdown,3f2a74c88f8b22ef1be9aed44561d98e,"Fix highlighting of nested not R code blocks (for instance, example of R Markdown code with chunks) (@​idavydov, #2237).",1,12,FALSE,NA
pkgdown,a81acb1e870615b0907cf6ea3a6b431c,"Tweak German translation (@​krlmlr, @​mgirlich, @​lhdjung, #2149, #2236)",1,13,FALSE,NA
pkgdown,378a00b041eb9d361eea2decf8cbf8e5,"Remove mention of (defunct) Twitter card validator, provide alternatives (@​Bisaloo, #2185)",1,14,FALSE,NA
pkgdown,9fc4b62e338da52f11120f38038e513e,"Fix `keywords` typo in `check_missing_topics()` message (@​swsoyee, #2178).",1,15,FALSE,NA
pkgdown,2271b9b007bc236dc49caf8f4faed986,"Use jsdeliver CDN for bootstrap-toc (@​GregorDeCillia, #2207).",1,16,FALSE,NA
pkgdown,a2db9df6ab07970200cd5745b8b04e52,"If you're using an RStudio daily, output file names are now clickable, previewing the generated HTML in the browser (#2157).",1,17,FALSE,NA
pkgdown,da851daf1d8b0a5618f42dab439664aa,Getting started vignette no longer needs to be included in the articles index (#2150).,1,18,FALSE,NA
pkgdown,20d80fdaaeeb80c08d7d859bf6e633ea,"If there aren't any functions in the `\usage{}` block, then pkgdown will now shows all aliases on the reference index, rather than just the topic name (#1624).",1,19,FALSE,NA
pkgdown,da30422c4a0708c321f16d767d9b0c63,Correctly generate downlit link targets for topics that have a file name ending in `.` (#2128).,1,20,FALSE,NA
pkgdown,bc931e5cc176c8abd5fd557d2b89b1a5,"`build_articles()`: if build fails because the index doesn't include all articles, you're now told what articles are missing (@​zkamvar, #2121).",1,21,FALSE,NA
pkgdown,1fbc76ab848467f5fc9b15e941ef47e4,`build_home()` now escapes angle brackets in author comments(#2127).,1,22,FALSE,NA
pkgdown,0af1727af999a42659be8924ea2ff735,"`build_home()` will automatically render and link `.github/SUPPORT.md` (@​IndrajeetPatil, #2124).",1,23,FALSE,NA
pkgdown,6d635b248542bd507ccf02d2ab818467,`build_news()` once again fails to link `@​username` at start of bullet. I had to reverted #2030 because of #2122.,1,24,FALSE,NA
pkgdown,5979e4a56d148995e83dd36a7299f0f4,`build_reference()`: restore accidentally nerfed `has_keyword()` and `has_concept()` reference selectors (#2126) and add tests.,1,25,FALSE,NA
pkgdown,8f72ce4cc80b12ba0ac21bd001eee4bc,New `check_pkgdown()` provides a lightweight way to check that your `_pkgdown.yml` is valid without building the site (#2056). Invalid `_pkgdown.yml` now consistently generates errors both locally and on CI (#2055).,1,26,FALSE,NA
pkgdown,2392dc6c3518598412d5511bab89b15d,`build_article()` now supports inline markdown in the `title` (#2039).,1,27,FALSE,NA
pkgdown,868878f649ec309fedf472b42688adae,`build_home()` no longer shows development status badges on the released version of the site (#2054).,1,28,FALSE,NA
pkgdown,f6ee58012e9ef0c9c7cd74879d171cb8,`build_news()` support automated `@​username` links in more places (#2030).,1,29,FALSE,NA
pkgdown,6da0ee1b51904423296c5ae121d91324,`build_reference()`:,1,30,FALSE,NA
pkgdown,6da0ee1b51904423296c5ae121d91324,• You can once again exclude topics from the reference index with `-` (#2040).,2,31,FALSE,`build_reference()`:
pkgdown,6da0ee1b51904423296c5ae121d91324,• Inline markdown in `title`s and `subtitle`s is now supported(#2039).,2,32,FALSE,`build_reference()`:
pkgdown,6da0ee1b51904423296c5ae121d91324,• Package logos will be automatically stripped from the `.Rd` you don't end up with two on one page. (#2083).,2,33,FALSE,`build_reference()`:
pkgdown,6da0ee1b51904423296c5ae121d91324,• `\figure{file}{alternative text}` with multiline alt text is now parsed correctly (#2080),2,34,FALSE,`build_reference()`:
pkgdown,6da0ee1b51904423296c5ae121d91324,"• roxygen 7.2.0 output for generic code blocks (#2092, @​jabenninghoff) is processed correctly.",2,35,FALSE,`build_reference()`:
pkgdown,bf3551896b01b82eee5fea95b3e362b2,Front end changes:,1,36,FALSE,NA
pkgdown,bf3551896b01b82eee5fea95b3e362b2,"• Automatically added links in code blocks are now styled less aggressively, so they occupy less visual weight on the page (#2007).",2,37,FALSE,Front end changes:
pkgdown,bf3551896b01b82eee5fea95b3e362b2,• All article pages are given class `col-md-9` for consistency with other pages (#2045).,2,38,FALSE,Front end changes:
pkgdown,bf3551896b01b82eee5fea95b3e362b2,"• Fixed width HTML widgets are sized correctly (@​dmurdoch, #2062).",2,39,FALSE,Front end changes:
pkgdown,bf3551896b01b82eee5fea95b3e362b2,"• Footnotes work with more contents, including code (@​banfai, #2042).",2,40,FALSE,Front end changes:
pkgdown,bf3551896b01b82eee5fea95b3e362b2,"• Navbar components now accept `target` argument (#2089, @​JSchoenbachler).",2,41,FALSE,Front end changes:
pkgdown,cbfe2e1cb80996e6e93bb1f294f8c295,"New syntax highlighting themes a11y-light, a11y-dark, monochrome-light, monochrome-dark, and solarized",1,42,FALSE,NA
pkgdown,abdffbe8ef5356b45d8a0c528a72fae1,Fixes for R CMD check,1,43,FALSE,NA
pkgdown,235e4358caff25aa026efa9938138179,New Korean (`ko`) translation thanks to @​mrchypark and @​peremen (#1944). New Danish (`dk`) translation thanks to @​LDalby.,1,44,FALSE,NA
pkgdown,1481a5cc78d0a495877f962bc05844ae,"`build_articles()` now adjusts the heading levels of vignettes/articles that use `<h1>` as section headings to ensure that there's one top-level heading (#2004). This ensures that there's one `<h1>`, the title, on each page, and makes the TOC in the sidebar work correctly.",1,45,FALSE,NA
pkgdown,2ee7112807beefeac44105b9c0bb1b01,"`build_home_index()` no longer spuriously complains about missing images if you use plots in your `README.Rmd` (#1980, #1977). It no longer tweaks the `src` path for `<img>` tags with absolute paths (#1955).",1,46,FALSE,NA
pkgdown,161427e6be18e10147b209a93d82d5fc,`build_news()` once again works if `NEWS.md` uses `<h1>` headings (#1947).,1,47,FALSE,NA
pkgdown,40ca272ac66665c5837637fba9dc12fa,`build_reference()` now correctly interprets `title: internal`: it removes the section from the reference index *and* it doesn't list the topics in that section as missing (#1958).,1,48,FALSE,NA
pkgdown,6eee575b0ddcae6e3af4f9d7df23baab,"`build_reference()` now gives a correct hint when the reference index YAML is not formatted correctly (e.g. empty item, or item such as ""n"" that needs to be escaped with quotes to not be interpreted as Boolean) (#1995).",1,49,FALSE,NA
pkgdown,ef3f848597651f6ecf42c4605752bea4,"`deploy_to_branch()` gains a `subdir` argument, allowing you to deploy the site to a subdirectory (@​gadenbuie, #2001).",1,50,FALSE,NA
pkgdown,c503c70c5db5465ef9ff987815eb1731,Front end changes:,1,51,FALSE,NA
pkgdown,c503c70c5db5465ef9ff987815eb1731,"• The navbar gets a little more space after the version number, and aligns the baseline with rest of the navbar (#1989).",2,52,FALSE,Front end changes:
pkgdown,c503c70c5db5465ef9ff987815eb1731,"• Long lines in code output once again scroll, rather than being wrapped. While this is different to what you'll see in the console, it's a better fit for web pages where the available code width varies based on the browser width (#1940).",2,53,FALSE,Front end changes:
pkgdown,c503c70c5db5465ef9ff987815eb1731,"• scrollspy (which highlights the ""active"" heading in the sidebar) now computes the offset dynamically which makes it work better on sites with taller navbars (#1993).",2,54,FALSE,Front end changes:
pkgdown,c503c70c5db5465ef9ff987815eb1731,"• Fixed js issues that occurred on pages without a table of contents (@​gadenbuie, #1998).",2,55,FALSE,Front end changes:
pkgdown,c503c70c5db5465ef9ff987815eb1731,"• When htmlwidgets with jQuery or Bootstrap dependencies are used in examples or articles, pkgdown's versions of jQuery and Boostrap will take precedence over the versions used by the htmlwidget (@​gadenbuie, #1997).",2,56,FALSE,Front end changes:
pkgdown,207259eeea6d71a5cc348bf42ef5b0e9,"pkgdown no longer includes bundled author metadata for Hadley Wickham, RStudio, or the RConsortium, since there are now ways to include this meta data in template packages, and special casing these three entities feels increasingly weird (#1952).",1,57,FALSE,NA
pkgdown,fa825fa21f6571afc6988c5b2fc89066,Fix CRAN failures.,1,58,FALSE,NA
pkgdown,1ff55b9a85ddcd78607579e833957e7d,Reference sections are de-duplicated correctly (#1935).,1,59,FALSE,NA
pkgdown,407bfebd53d8433ebc55a409cca88270,Usage sections only generated for topics that have them; usage correctly displayed with BS3 (#1931),1,60,FALSE,NA
pkgdown,89bffec2a5fdd9602680e85e8a717e21,Empty `\value{}` no longer errors (#1930).,1,61,FALSE,NA
pkgdown,a6895993a5f0636edb72237470d53870,"pkgdown can style your site with Bootstrap 5 (with help from @​jayhesselberth, @​apreshill, @​cpsievert). Opt-in by setting `boostrap` version in your `_pkgdown.yml`:",1,62,FALSE,NA
pkgdown,a6895993a5f0636edb72237470d53870,"```
``` yaml
template:
  bootstrap: 5
```",1,63,TRUE,NA
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):",1,64,FALSE,NA
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,• Default font is larger and links are always underlined.,2,65,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,• Heading anchors use `aria-hidden` to reduce noise for screenreader users.,2,66,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,• Navbar dropdowns has improved `aria-labelledby`.,2,67,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,"• The default GitHub/GitLab links gain an `aria-label`; use for other icons is now supported, and encouraged in the docs.",2,68,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,"• Syntax highlighting uses a new more accessible colour scheme, designed by Alison Hill (#1536)",2,69,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,5c6b9f042cfb0769cc369b4e196b4f23,• A skip link makes it easier to get directly to the page contents (#1827).,2,70,FALSE,"We reviewed site accessibility and made a number of small improvements: (#782, #1553):"
pkgdown,113ab12ee62b08b23fda9ca32052259c,In-line footnotes mean you can read asides next to the text they refer to.,1,71,FALSE,NA
pkgdown,0081b23ccb655b70e76ab4bc8d80984a,"Articles support tabsets, as in R Markdown. (@​JamesHWade, #1667).",1,72,FALSE,NA
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,Other minor styling improvements:,1,73,FALSE,NA
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,"• The active item in TOC is indicated with background colour, rather than a border.",2,74,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,"• If present, the package logo is shown on all pages near the header.",2,75,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,• Section anchors now appear on the right (making them usable on mobile phones) (#1782).,2,76,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,• The TOC is scrollable independently of the main content. This makes it more useful on long pages with many headings (#1610).,2,77,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,• The sidebar is shown at the bottom of the page on narrow screens.,2,78,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,"• Function arguments and the reference index (#1822) use definition lists (`<dl>`) instead of tables. This gives more room for long argument names/lists of function and detailed descriptions, and displays better on mobile.",2,79,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,• Links on the homepage no longer show the full url in the text.,2,80,FALSE,Other minor styling improvements:
pkgdown,30db3b282cbbb2a8fa8a3b784d9caa2c,• The default navbar no longer includes a home icon - this took up precious horizontal space and wasn't very useful since there was already a link to the home page immediately to its left (#1383).,2,81,FALSE,Other minor styling improvements:
pkgdown,82b51c6555e93592869198c108702a90,"pkgdown now supports local searching (i.e. searching without an external service), and is enabled by default for Bootstrap 5 sites since no set-up is needed (#1629, with help from @​gustavdelius in #1655 and @​dieghernan & @​GregorDeCillia in #1770).",1,82,FALSE,NA
pkgdown,14396f0fb5e81d5ab577dbf069f74bd3,pkgdown builds a more exhaustive `sitemap.xml` even for websites built with Bootstrap 3. This might change Algolia results if you use Algolia for search (#1629).,1,83,FALSE,NA
pkgdown,ab2ddf1654a4de1b94ed82d283808305,"New `vignette(""customise"")` documents all the ways you can customise your site, including the new options described below (#1573).",1,84,FALSE,NA
pkgdown,692d7ed8460fa0e777dcce8cf38845f6,"Sites can be easily themed with either bootswatch themes or by selectively overriding the `bslib` variables used to generate the CSS. pkgdown now uses scss for its own Bootstrap css tweaks, which means that you can customise more of the site from within `_pkgdown.yml`.",1,85,FALSE,NA
pkgdown,ae7f88e3b69c9018f370b8f719ed5eb8,You can pick from a variety of built-in syntax highlighting themes (#1823). These control the colours (and background) of code in `<pre>` tags.,1,86,FALSE,NA
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"pkgdown can now translate all the text that it generates (#1446): this means that if you have a package where the docs are written in another language, you can match all the pkgdown UI to provide a seamless experience to non-English speakers. Activate the translations by setting the `lang` in `_pkgdown.yml`:",1,87,FALSE,NA
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"```
``` yaml
lang: fr
```",1,88,TRUE,NA
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,pkgdown includes translations for:,1,88,FALSE,NA
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `es`, Spanish, thanks to @​edgararuiz-zz, @​dieghernan, @​rivaquiroga.",2,89,FALSE,pkgdown includes translations for:
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `de`, German, thanks to @​hfrick.",2,90,FALSE,pkgdown includes translations for:
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `fr`, French, thanks to @​romainfrancois, @​lionel-, @​jplecavalier, and @​maelle.",2,91,FALSE,pkgdown includes translations for:
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `pt`, Portuguese, thanks to @​rich-iannone.",2,92,FALSE,pkgdown includes translations for:
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `tr`, Turkish, thanks to @​mine-cetinkaya-rundel.",2,93,FALSE,pkgdown includes translations for:
pkgdown,35652bfa91bdad5c2e9ef41a7660f5b0,"• `zh_CN`, simplified Chinese, thanks to @​yitao.",2,94,FALSE,pkgdown includes translations for:
pkgdown,0bcd85f1e8af6a09e6757a290dc7fafb,If you're interested in adding translations for your language please file an issue and we'll help you get started.,1,94,FALSE,NA
pkgdown,67d98e808977f4fa6da1013240380853,"Template packages can now provide `inst/pkgdown/_pkgdown.yml` which is used as a set of defaults for `_pkgdown.yml`. It can be used to (e.g.) provide author definitions, select Bootstrap version and define bslib variables, and customise the sidebar, footer, navbar, etc. (#1499).",1,95,FALSE,NA
pkgdown,5380890cf28f5e5e58c132b198da5d5f,"New `includes` parameters `in-header`, `before-body`, and `after-body` make it easy to add arbitrary HTML to every page. Their content will be placed at the end of the `<head>` tag, right below the opening `<body>` tag, and before the closing tag `</body>` respectively (#1487). They match the bookdown options `in_header`, `before_body` and `after_body`. Additionally, you can use `before_title`, `before_navbar`, and `after_navbar` to add arbitrary HTML into the navbar/page header; they will appear to the left of the package name/version, and to the left and right of the navigation links respectively (#1882).",1,96,FALSE,NA
pkgdown,63d2734dec69614bfd155dc538d01e3c,Authors configuration is more flexible (#1516). You can now:,1,97,FALSE,NA
pkgdown,63d2734dec69614bfd155dc538d01e3c,• Choose the roles used for filtering authors for the sidebar and footer.,2,98,FALSE,Authors configuration is more flexible (#1516). You can now:
pkgdown,63d2734dec69614bfd155dc538d01e3c,• Choose the text before authors in the footer.,2,99,FALSE,Authors configuration is more flexible (#1516). You can now:
pkgdown,63d2734dec69614bfd155dc538d01e3c,• Add text before and after the authors list in the sidebar.,2,100,FALSE,Authors configuration is more flexible (#1516). You can now:
pkgdown,63d2734dec69614bfd155dc538d01e3c,• Add text before and after the authors list of the authors page.,2,101,FALSE,Authors configuration is more flexible (#1516). You can now:
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:",1,102,FALSE,NA
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,• Change the order of sidebar elements.,2,103,FALSE,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:"
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,• Add custom sidebar sections (with Markdown/HTML `text`).,2,104,FALSE,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:"
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,• Add a table of contents to the home page.,2,105,FALSE,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:"
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,• Completely suppress the sidebar.,2,106,FALSE,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:"
pkgdown,dd1073afbd8ee83f4f3dd7beccce92b6,• Provide your own HTML for the navbar.,2,107,FALSE,"Sidebar specification is more flexible (#1443, #1488, #1502). You can now:"
pkgdown,eaa0f4ba259aae678fe0302491e28dd8,Footer specification is more flexible (#1502). You can now:,1,108,FALSE,NA
pkgdown,eaa0f4ba259aae678fe0302491e28dd8,• Change the placement of elements on the left and right.,2,109,FALSE,Footer specification is more flexible (#1502). You can now:
pkgdown,eaa0f4ba259aae678fe0302491e28dd8,• Add text to the left and right (or even remove/replace default text),2,110,FALSE,Footer specification is more flexible (#1502). You can now:
pkgdown,a773ce0c33100bbc04660a17349a22fc,You can now exclude all default components from the navbar (#1517).,1,111,FALSE,NA
pkgdown,86e1d17b4757b6597e0e0d43983fe60c,"Expert users can now override layout templates provided by pkgdown or template packages by placing template files in `pkgdown/templates` (@​gadenbuie, #1897).",1,112,FALSE,NA
pkgdown,854af829b0f854cf54ba08447b1e63d9,"pkgdown now supports redirects (#1259, @​lorenzwalthert). The following yaml demonstrates the syntax, with old paths on the left and new paths/URLs on the right.",1,113,FALSE,NA
pkgdown,854af829b0f854cf54ba08447b1e63d9,"```
``` yaml
redirects:
  - [""articles/old-vignette-name.html"", ""articles/new-vignette-name.html""]
  - [""articles/another-old-vignette-name.html"", ""articles/new-vignette-name.html""]
  - [""articles/yet-another-old-vignette-name.html"", ""https://pkgdown.r-lib.org/dev""]
```",1,114,TRUE,NA
pkgdown,3f792cab098a4b34710c82485a6fec26,Use HTML classes `pkgdown-devel` or `pkgdown-release` to declare that certain content should appear only on the devel or release site. Use the class `pkgdown-hide` for content that should only appear only on GitHub/CRAN (#1299).,1,115,FALSE,NA
pkgdown,7a45514493fbc4dc880c4068692fd38f,New `pkgdown_sitrep()` function reports whether the site is set up correctly; in particularly it currently reports if auto-linking will work (#1478).,1,116,FALSE,NA
pkgdown,0b86e56c23fd9c959b41d6afe42dd74d,"Styling for errors, warnings, and messages has been tweaked. Messages are now displayed the same way as output, and warnings and errors are bolded, not coloured. This is part of a suite of changes that aim to give package authors greater control over the appearance of messages, warnings, and errors.",1,117,FALSE,NA
pkgdown,50de589ecfba555ad7460c70735de362,"Long lines in code output are now wrapped, rather than requiring scrolling. This better matches `rmarkdown::html_document()` and what you see in the console.",1,118,FALSE,NA
pkgdown,992e16f7f83f19b7ecb2ea8adc71502d,`build_reference()` now allows linking to topics from other packages (either function names e.g. `rlang::is_installed` or topic names e.g. `sass::font_face`). (#1664),1,119,FALSE,NA
pkgdown,ea94c983fe8de7fc8c60cfcdd98b3067,"`build_reference()` now runs examples with `options(rlang_interactive = FALSE)` (ensuring non-interactive behaviour in functions that use `rlang::is_interactive()`), `options(cli.dynamic = FALSE)`, `Sys.setenv(RSTUDIO = NA)` and `Sys.setLocale(""LC_COLLATE"", ""C"")` (#1693). It also runs `pkgdown/pre-reference.R` before and `pkgdown/post-reference.R` after examples. These allow you to do any setup or teardown operations you might need (#1602).",1,120,FALSE,NA
pkgdown,f7b03ea3db3a077dcfe0973567d0b90c,"A reference index section with `title: internal` is now silently dropped, allowing you to suppress warnings about topics that are not listed in the index (#1716).",1,121,FALSE,NA
pkgdown,b49d153c958b45c83f31b9c14159ef3c,"Code blocks are now highlighted according to their declared language (e.g. `yaml`) if the documentation was built with roxygen2 7.1.2 or later (#1690, #1692).",1,122,FALSE,NA
pkgdown,0326717f23ae04da3cb2e4b2ca6d267a,"New `pkgdown_print()` allows you to control how your objects are rendered in examples. It includes built-in handling for htmlwidgets and ""browseable"" HTML so pkgdown output now more closely resembles what you see in RStudio. Added extension points to make HTML widgets (and RGL in particular) work in rendered examples (@​dmurdoch).",1,123,FALSE,NA
pkgdown,b303d960b5f616797229abcb354d27e5,You can globally set the `width` of code output (in reference and articles) with,1,124,FALSE,NA
pkgdown,b303d960b5f616797229abcb354d27e5,"```
``` yaml
code:
  width: 50
```",1,125,TRUE,NA
pkgdown,2d58b18064560a3ac98442ee7f708bd7,Articles now render output styles created by cli/crayon (#1556).,1,126,FALSE,NA
pkgdown,252f2e9b80933790e65a2fdb37d4b87d,"When copy and pasting code blocks, lines containing output (e.g. `#>`) are automatically omitted (#1675).",1,127,FALSE,NA
pkgdown,63164a0fd1c64fd31efb51976836084d,Auto-linking improvements:,1,128,FALSE,NA
pkgdown,63164a0fd1c64fd31efb51976836084d,"• Links to inherited R6 methods now work correctly for both internal (#1173, @​vandenman) and external (#1476) parent classes.",2,129,FALSE,Auto-linking improvements:
pkgdown,63164a0fd1c64fd31efb51976836084d,• Linking no longer fails if a package contains duplicated Rd aliases.,2,130,FALSE,Auto-linking improvements:
pkgdown,63164a0fd1c64fd31efb51976836084d,"• Correctly link to reference pages when the `\name{}` entry doesn't match the file name (@​dmurdoch, #1586; #1676).",2,131,FALSE,Auto-linking improvements:
pkgdown,ebfd3c73fb1cbbd3093d1c42e5343092,"Article subtitle, author and date (specified in the YAML frontmatter) are now correctly omitted from the article table of contents in the sidebar (@​maxheld83, #1428).",1,132,FALSE,NA
pkgdown,d52e39ccb7efa13fb3d15f57e8db252d,"Support for `as_is: true` and non-default output formats for vignettes/ articles has been somewhat improved. Support is fundamentally limited due to the challenges of integrating HTML from output formats that pkgdown doesn't know about, but it should be a little more reliable and a little better documented (#1757, #1764).",1,133,FALSE,NA
pkgdown,c099feb417f704f2c154e3522d3c24fb,`build_articles()` no longer fails if you have a directory underneath vignettes with a `.Rmd` extension (#1425).,1,134,FALSE,NA
pkgdown,275920185d1ab85d0f1af4fd77164d0c,`build_articles()` now correctly handles links to images in `man/figures` (which have the form `../man/figures`) (#1472).,1,135,FALSE,NA
pkgdown,c95cec991482bb7f25322d408cf5960a,`build_articles()` again sets the `theme` argument of the document format to `NULL` when `as_is: true` but lets users override this via the `theme` argument of the output format.,1,136,FALSE,NA
pkgdown,331ae32aca11f7afffe3e758b53462dc,"`build_articles()` and `build_home()` now warn if you have images that won't render on the website because they're in unsupported directories (#1810). Generally, it's only safe to refer to figures in `man/figures` and `vignettes`.",1,137,FALSE,NA
pkgdown,23cec17436f9e46d5df0e58e1c3a6752,"Articles stored in `vignettes/articles` are moved up one level so that they appear in `articles/` on the website. Previously, they would appear in `articles/articles`, so `build_redirects()` automatically adds redirects for any articles in the `vignettes/articles` directory (@​gadenbuie #1911).",1,138,FALSE,NA
pkgdown,c79e0869943178ba19bdd048d55bea8b,"New `template` option `trailing_slash_redirect` that allows adding a script to redirect `your-package-url.com` to `your-package-url.com/` (#1439, @​cderv, @​apreshill).",1,139,FALSE,NA
pkgdown,edcf0107d03eb7aecbba53a70851fb1b,"External links now get the class `external-link`. This makes them easier to style with CSS (#881, #1491).",1,140,FALSE,NA
pkgdown,bd1b9f1bbb0983ab345e81f123190348,Duplicated section ids are now de-duplicated; this makes pkgdown work better with the documentation of R6 classes.,1,141,FALSE,NA
pkgdown,b161f6f9e49ea4f36cb69871cc0f298e,Updated CSS styles from pandoc to improve styling of reference lists (#1469).,1,142,FALSE,NA
pkgdown,7187c02c7223e180482f9c55c89217c7,"`build_site_github_pages()` has been extracted out of `deploy_site_github()` to make it easier to decouple building and deployment, and so we can take advantage of standard deployment actions (#1756).",1,143,FALSE,NA
pkgdown,9d18389511252bcce10197f54f1a3144,"`deploy_to_branch()` now calls `git remote set-branches` with `--add` to avoid overwriting the existing `remote.{remote}.fetch` value (@​kyleam, #1382). It also now cleans out the website directory by default; revert to previous behaviour with `clean = FALSE` (#1394).",1,144,FALSE,NA
pkgdown,16c1fde50b553717f323c5dc09f524a0,"`build_reference()` will error if envar `CI` is `true` and there are missing topics (@​ThierryO, #1378).",1,145,FALSE,NA
pkgdown,f50f7b84bf4ff4d86bfeaef391049941,You can override the `auto` development mode detected from the package version by setting env var `PKGDOWN_DEV_MODE` to `release` or `devel`. This is useful if your package uses a different convention to indicate development and release versions (#1081).,1,146,FALSE,NA
pkgdown,d49e75ac5f33a2221e6b763bf81fbbd3,"`\special{}` tags with complex contents are rendered correctly (@​klmr, #1744).",1,147,FALSE,NA
pkgdown,3bcbc3b14b73c495162ef6684927f0e0,`\arguments{}` and `\value{}` do a better job of handling mingled items and text (#1479). The contents of `\value{}` are now shown immediately after `\arguments{}`.,1,148,FALSE,NA
pkgdown,90b660484b601e5bcfcab9dd14b159ed,"The default ""branch"" for linking to the file sources is `HEAD`, which will work regardless of whether your default branch is called ""main"" or ""master"".",1,149,FALSE,NA
pkgdown,10f86bf827d274dbb2de528c2d1fd65b,"Non-ORCID comments in `Authors@​R` are now more usable: if such comments exist, the sidebar gains a link to the authors page, where they are displayed (#1516).",1,150,FALSE,NA
pkgdown,69ad4850a6e38a8474c17de409d767fe,"Citations with and without text versions are better handled, and text citations are correctly escaped for HTML (@​bastistician, #1507).",1,151,FALSE,NA
pkgdown,97e7cbe06941a30c228693fe9c0dcd52,README badges in a single paragraph placed between `<!-- badges: end -->`and `<!-- badges: end -->` comments are again detected (#1603).,1,152,FALSE,NA
pkgdown,2302a793410d954c052a8918ea77f2ca,The 404 page (default or from `.github/404.md`) is no longer built in the development mode (see `?build_site`) as e.g. GitHub pages only uses the `404.html` in the site root (#1622).,1,153,FALSE,NA
pkgdown,0a29c5c6e1b026d13103194eab3aafcd,"All links on the 404 pages (navbar, scripts, CSS) are now absolute if there is an URL in the configuration file (#1622).",1,154,FALSE,NA
pkgdown,b8a58fcd92abac869af679df736d85cb,The version tooltip showed in the top navbar is now only set if you've explicitly set the `development.mode` in `_pkgdown.yml` (#1768).,1,155,FALSE,NA
pkgdown,c65d8e48ef0f068bcd277446a9cc71c1,"All heading (e.g. headings on the reference index page, and the arguments heading on the reference pages) now get anchors (#1747).",1,156,FALSE,NA
pkgdown,e2f8272a43fff7998e51d974f24c83be,"Use `autolink_bare_uris` for Pandoc above version 2.0 (@​marcosmolla, #1618).",1,157,FALSE,NA
pkgdown,3b407c59f6089ae065b77f55b0798734,"pkgdown now recognizes GitLab URLs to the source repository and adds the corresponding icon to the navbar (#1493). It also supports GitLab subgroups (@​salim-b, #1532).",1,158,FALSE,NA
pkgdown,d9f09ba39a62787184ee4f9cbb0d05e2,"Links for GitHub Enterprise and GitLab Enterprise repositories are detected by assuming such host address begin with `github.` or `gitlab.` (@​ijlyttle, #1452).",1,159,FALSE,NA
pkgdown,22976ac09ddb3fc0df7347517d886979,"The rules drawn by the CLI (as for example, in `build_site()`) are protected against very narrow terminal windows (@​maxheld83, #1435).",1,160,FALSE,NA
pkgdown,b75960bd64d84d2e2496a28f2a7fb16d,Google Site Verification (https://support.google.com/webmasters/answer/9008080?hl=en) can now be configured for pkgdown sites.,1,161,FALSE,NA
pkgdown,ce6507852366b08735030fc82fd6574a,"`build_rmarkdown_format` sets `html_document(anchor_sections = FALSE)` to avoid needless dependencies (@​atusy, #1426).",1,162,FALSE,NA
pkgdown,b2f3cf3246f6c12920debd8dcb90cf13,"Jira issues in NEWS can be automatically linked by setting your project name (s) with `repo: jira_projects: [...]` and specifying a custom issue URL with `repo: url: issue: ...` in `_pkgdown.yml` (@​jonkeane, #1466).",1,163,FALSE,NA
pkgdown,c04241a6a5ae61ca3da1e2d9acd5e65a,"`build_home()` always creates citation information for the authors page, using metadata from `DESCRIPTION` when there is no `inst/CITATION` file, and links to this from the sidebar (#1904).",1,164,FALSE,NA
pkgdown,23f3cc29361fbd7dcf3dca34bc175aef,"`build_news()` no longer breaks with URLs containing numeric fragments (@​krassowski, #1456), recognises more styles of release heading (#1437), and generate stable IDs using a the combination of the heading slug and package number. (@​Bisaloo, #1015)",1,165,FALSE,NA
pkgdown,c65d39f39380baf90e1d694061ede40f,The article index (used for autolinking vignettes across packages) once again works (#1401).,1,166,FALSE,NA
pkgdown,bcecc6348a15f60a181d55dc8c531ccd,"pkgdown now uses the new downlit package for all syntax highlighting and autolinking (in both reference topics and vignettes). There should be very little change in behaviour because the code in downlit was extracted from pkgdown, but this makes it easier to use pkgdown's nice linking/highlighting in more places (#1234).",1,167,FALSE,NA
pkgdown,a75215289db920f0f094d1f852ac15f2,pkgdown now uses the `ragg::agg_png()` device to generate example figures. This should be a little faster and produce higher quality output. Learn more at https://ragg.r-lib.org (#1320).,1,168,FALSE,NA
pkgdown,2ac95deb190ef63bb49e8acf1665a381,"`\special{}` support inside `\usage{}` added to allow non-standard R usage syntax (@​klmr, #1345).",1,169,FALSE,NA
pkgdown,6dc9b197e93e0a80c0e21ac8cae08a1c,"`#ifdef` and `#ifndef` are now supported; the ""current"" OS is hard coded to ""unix"" to ensure reproducible output regardless of where you build the website (#1384).",1,170,FALSE,NA
pkgdown,842312ce77be8b7c1926c3fa2662ca18,"Nested `\subsection{}`s now generate appropriate heading levels (h3, h4, h5 etc) (#1377), and get anchor links (#1389).",1,171,FALSE,NA
pkgdown,fa8090d83fd7f37515830ba8ce2076ed,`\preformatted{}` no longer double escapes its contents (#1311).,1,172,FALSE,NA
pkgdown,09f41a5adfda9afae6fdc3f52b858ba3,"`build_articles()` no longer sets the `theme` argument of the document format to `NULL` when `as_is: true`. This should allow it to work with a wider range of output formats including `bookdown::html_vignette2()` and friends (@​GegznaV, #955, #1352).",1,173,FALSE,NA
pkgdown,2cbd3c0a094d2f454de9f4bd7c0373cb,"When `build_article()` fails, it gives the complete failure message (#1379).",1,174,FALSE,NA
pkgdown,6278202748f073c9ffc3d41890f8ed58,"Markdown header attributes are now processed in all markdown files (@​jonkeane, #1343)",1,175,FALSE,NA
pkgdown,63f7ed766745034f08cbe109c4cbe6e3,"The branch used for source linking can be configured by setting `repo: branch: branch_name` in `_pkgdown.yml` (@​jonkeane, #1355):",1,176,FALSE,NA
pkgdown,63f7ed766745034f08cbe109c4cbe6e3,"```
``` yaml
repo:
  branch: main
```",1,177,TRUE,NA
pkgdown,f0761161edae0377943a6f993fea3a45,`autolink_html()` is (soft) deprecated. Please use `downlit::downlit_html_path()` instead.,1,178,FALSE,NA
pkgdown,1e00b74e93963993a7a2faf9c9c41353,Highlighting of empty expressions works once more (#1310).,1,179,FALSE,NA
pkgdown,1746cd9620d32aff4291364e22c942bf,"New `deploy$install_metadata` option in `_pkgdown.yml`. Setting it to `true` will store site metadata in the package itself, allowing offline access for packages that to autolink to the package's website (@​mstr3336, #1336).",1,180,FALSE,NA
pkgdown,89da4032cdfa0b4ac64cfa50fa300056,"You can now control the background colour of plots with the `figures.bg` option (it is transparent by default, and given a white background by css). See `?build_reference` for an example.",1,181,FALSE,NA
pkgdown,22f73137e3c5cd773ecd00f643ca5f90,HTML is automatically stripped from the page title (#1318).,1,182,FALSE,NA
pkgdown,fc0d57da125f5aafd86396838025fa1c,Suppressing CRAN dates in news file now actually works.,1,183,FALSE,NA
pkgdown,36c9adc0de52859f39fa6d65edd0aac5,"All HTTP requests are now retried upon failure (@​jameslamb, #1305).",1,184,FALSE,NA
pkgdown,e93ed8c64aa0e6af849338d77b8ce4b4,Setting `clean = TRUE` in `deploy_site_github()` removes old files from the deployed site before building a new one (#1297).,1,185,FALSE,NA
pkgdown,4fc362c4322752976ab88fc897362328,Syntax highlighting works on Windows once more (#1282).,1,186,FALSE,NA
pkgdown,9866af53b3f6cb5cb0da8c9786a14363,pkgdown no longer fails if your `.Rd` files have duplicated `\aliases` as were produced by an older version of roxygen2 (#1290).,1,187,FALSE,NA
pkgdown,8b573ff8fab8d8a7850bc5583dc2cb4e,Rendering empty `.md` file now returns empty string (#1285).,1,188,FALSE,NA
pkgdown,ed6417733d9b2bc99caa1f5503821d8d,`build_articles_index()` is now exported to rapidly rebuild the index (#1281),1,189,FALSE,NA
pkgdown,764abc97013de8e0f6967f27524e1933,"`deploy_site_github()` now accepts a `host` argument to specify alternate hosts (e.g., Github enterprise) (@​dimagor, #1165) and once again works as intended on Travis-CI (@​jimhester, #1276).",1,190,FALSE,NA
pkgdown,b68ecf0fb6f4d9fbd145f8ae042c5726,The articles index page and navbar have been overhauled. There are two major new features in this release:,1,191,FALSE,NA
pkgdown,b68ecf0fb6f4d9fbd145f8ae042c5726,"• The articles index page now displays article `description`s, taken from YAML metadata belonging to each article. This lets you provide more context about each article and describe why one might want to read it (#1227).",2,192,FALSE,The articles index page and navbar have been overhauled. There are two major new features in this release:
pkgdown,b68ecf0fb6f4d9fbd145f8ae042c5726,"• The articles navbar is now also controlled by the `articles` section in `_pkgdown.yml`. The ordering of the sections, and articles within them, control the order of the articles in the navbar, and you can use the new `navbar` field to control whether or not each section appears in the navbar (#1101, #1146).",2,193,FALSE,The articles index page and navbar have been overhauled. There are two major new features in this release:
pkgdown,b664a9d0310234615fb634199726d8a3,The reference index now has two levels of heading hierarchy: `title` and `subtitle` (#327).,1,194,FALSE,NA
pkgdown,ae905a7e578a9fd1e464ec4bed00b411,Tables of contents in sidebars now use bootstrap-toc; this considerably improves navigation for long articles and reference pages.,1,195,FALSE,NA
pkgdown,b3dad1de2efc4c64ae261406d659107d,"You can now control the links to source files (in reference pages and articles) and issues and users (in the NEWS) with new `repo$url` config option (#1238). This makes it easier to use pkgdown with GitHub enterprise, packages in subdirectories, and other source hosts (like bitbucket).",1,196,FALSE,NA
pkgdown,b3dad1de2efc4c64ae261406d659107d,"```
``` yaml
repo:
  url:
    home: https://github.com/r-lib/pkgdown/
    source: https://github.com/r-lib/pkgdown/blob/main/
    issue: https://github.com/r-lib/pkgdown/issues/
    user: https://github.com/
```",1,197,TRUE,NA
pkgdown,b3dad1de2efc4c64ae261406d659107d,"The individual components (e.g. path, issue number, username) are pasted on the end of these urls so they should have trailing `/`s. You don't need to set these links for GitLab, as pkgdown now detects GitLab urls automatically (since they use the same structure as GitHub) (#1045).",1,197,FALSE,NA
pkgdown,59f3ec9832e62cebfde4c9be810c6f6e,"There's much richer control over Open Graph and Twitter metadata for the whole site and for individual articles. See new `vignette(""metadata"")` for details (@​gadenbuie, #936).",1,198,FALSE,NA
pkgdown,70678d1767670c407c3dfde354531d85,"New `deploy_to_branch()` function to build and deploy a site to a branch, defaulting to `gh-pages` for use with GitHub Pages. This is used in our recommended GitHub action workflow for automatically building and deploying pkgdown sites for packages on GitHub (@​jimhester, #1221).",1,199,FALSE,NA
pkgdown,b2c484224b6d9d8c0226fec7aebef347,Updated JS libraries: jquery 3.3.1 -\> 3.4.1; bootswatch 3.3.7 -\> 3.4.0; bootstrap 3.3.7 -\> bootstrap 3.4.1; docsearch 2.6.1 -\> 2.6.3; fontawesome 5.11.1 -\> 5.12.1; headroom.js 0.9.44 -\> 0.11.0; clipboard.js 2.0.4 -\> 2.0.6 (@​jayhesselberth).,1,200,FALSE,NA
pkgdown,d483cc9024f3a75a48f24355595ea30d,Examples and Rmd now use exactly the same syntax highlighting strategy.,1,201,FALSE,NA
pkgdown,1bdb962deb131f87f5e7fb0e8bafee20,"In examples and Rmd, calls of the form `current_package::foo` now get a local link (#1262).",1,202,FALSE,NA
pkgdown,faf8949b3f79b81d59216778179d3417,`\preformatted{}` blocks are now highlighted and linked if they parse as R code (#1180).,1,203,FALSE,NA
pkgdown,a86b508c5441b9abf6b29b354a314877,"`library(pkgdown)` is now automatically linked to the reference index for ""pkgdown"" not the documentation for `library()` (#1161).",1,204,FALSE,NA
pkgdown,8973151b7e55c0e7e181d51d4cace834,"`help(""topic"")` is now automatically linked to the documentation for ""topic"", not to the documentation for `help()` (#1210)",1,205,FALSE,NA
pkgdown,2fc4eb456544e93d19e89e393d34b201,`build_home()` no longer uses (unrendered) `README.Rmd` or `index.Rmd` if corresponding `.md` files are not found.,1,206,FALSE,NA
pkgdown,3ca1e22392f9c8b9fcc41fb86a115653,`build_article()` failures now print more information to help you debug the problem (#952).,1,207,FALSE,NA
pkgdown,e82975b05ac3b66b1c6ed09969970c6e,"The name of the vignette mapped to the ""Get started"" entry in the navbar is now more flexible. You can use an article (e.g `articles/{pkgname}`) and if your package has a `.` in its name you can replace it with `-` to generate a valid article name (e.g. the get started vignette for `pack.down` would be `pack-down`) (#1166).",1,208,FALSE,NA
pkgdown,6b44631bd811c13b8643a8e6e7411412,"`deploy_to_branch()` now correctly captures the commit SHA on GitHub Actions (@​coatless, #1252).",1,209,FALSE,NA
pkgdown,a160aa586969ec245767ce66aa85895c,`deploy_to_branch(github_pages = TRUE)` generates a `.nojekyll` to prevent jekyll ever executing (#1242).,1,210,FALSE,NA
pkgdown,bcfe57494874bd7a0edc2e4c20ec6120,"`CNAME` is no longer generated by `init_site()`, but is instead conditionally by `deploy_to_branch()` when `github_pages = TRUE`. This is a better a fit because the `CNAME` file is only needed by GitHub pages (#969).",1,211,FALSE,NA
pkgdown,15a6740c363ca7535cdbec94b0b9c50b,"`deploy_site_github()` argument `repo_slug` has been deprecated and is no longer needed or used. (@​jimhester, #1221)",1,212,FALSE,NA
pkgdown,d3c016c1bc78dd411a4d75ca8283f2c5,You can optionally suppress the CRAN release dates added to the news page (#1118).,1,213,FALSE,NA
pkgdown,d54d82b2b20eaccbcd4bdb0c152335ef,Multi-page news style gets a better yaml specification (the old style will continue to work so no need to change existing YAML).,1,214,FALSE,NA
pkgdown,1124a64442d8bcf38f6612c1308f5ade,A topic named `index` will not longer clobber the reference index (#1110).,1,215,FALSE,NA
pkgdown,508f022053f97802643636674a81359c,Topic names/aliases on reference index are now escaped (#1216).,1,216,FALSE,NA
pkgdown,5dffeec9f5e9a29968d5e300e5f3039b,`build_reference()` gives better warnings if your `_pkgdown.yml` is constructed incorrectly (#1025).,1,217,FALSE,NA
pkgdown,9a678c7cfd71efbd6d74f752ced0e35e,"New `has_keyword()` topic selector for `reference`. `has_keyword(""datasets"")` is particularly useful for selecting all data documentation (#760).",1,218,FALSE,NA
pkgdown,97b653b8b633aa6f5cac00662de27d54,"New `lacks_concepts()` can select topics that do not contain any of a number of specified concepts. (@​mikldk, #1232)",1,219,FALSE,NA
pkgdown,ec7befa54c0897495666514dd45af67c,"pkgdown now escapes html and linkifies links in comments in author info from DESCRIPTION (@​maelle, #1204)",1,220,FALSE,NA
pkgdown,dd421a4e9ffa75aba59a4181148bb044,"pkgdown now uses the ORCiD logo included in Font Awesome 5.11 instead of querying it from members.orcid.org (@​bisaloo, #1153)",1,221,FALSE,NA
pkgdown,821daa00e6ae44a320db6133803dfd55,badges are now extracted from everything between `<!--badges: start-->` and `<!--badges: end-->`. They used to be extracted only if they were direct children of the first `<p>` after `<!--badges: start-->`.,1,222,FALSE,NA
pkgdown,7112a79a56fa56f4335ddbef14414398,"`build_home()` now looks for `pkgdown/index.md` in addition to the top-level `index` or `README` files (@​nteetor, #1031)",1,223,FALSE,NA
pkgdown,1a067d3cfb82212d86cffbe9b696f805,"pkgdown now formats the package version displayed in the navbar the same way as it has been specified in the DESCRIPTION file. In particular, version separators (e.g. `.` and `-`) are preserved. (#1170, @​kevinushey)",1,224,FALSE,NA
pkgdown,c3219a6193e8a179cf03a2fe29f06831,"add support for navbar submenus: you can create submenus following the convention established in rstudio/rmarkdown#721 (@​ijlyttle, @​wendtke, #1213)",1,225,FALSE,NA
pkgdown,9d4413a10e0a1be7bfe2c131a06b5e8b,Updated JS libraries: jquery 3.3.1 -\> 3.4.1; bootswatch 3.3.7 -\> 3.4.0; bootstrap 3.3.7 -\> bootstrap 3.4.1; docsearch 2.6.1 -\> 2.6.3 (@​jayhesselberth).,1,226,FALSE,NA
pkgdown,9547bc3a132dbfd7f74b89362a55149e,Markdown conversion now explicitly allows markdown inside of HTML blocks; this was previously accidentally disabled (#1220).,1,227,FALSE,NA
pkgdown,1a92c76db7fbbe913a242ef2d7bbdd43,A timestamp for the last site build is reported in `pkgdown.yml` (#1122).,1,228,FALSE,NA
pkgdown,93b29cd67a480e696699a35b5d48490f,Don't install test package in user library (fixes CRAN failure).,1,229,FALSE,NA
pkgdown,381288e32d3bc8c8ab9101ebfcd687f3,"build citation as specified by the `textVersion` argument of `citEntry` in the `CITATION` file (#1096, @​yiluheihei)",1,230,FALSE,NA
pkgdown,d311acd22ed3abe7eacb42fad0ee3c5a,"`build_site()`, `build_reference()` and `build_home()` gain a parameter `devel` which controls whether you're in deployment or development mode. It generalises and replaces (with deprecation) the existing `document` argument. Development mode is optimised for rapid iteration and is the default for `build_reference()`. It uses `pkgload::load_all()` to load code directly from disk in order. Deployment mode is slower, but guarantees correct results, and is the default for `build_site()`. It installs the package into a temporary library, and runs examples/articles in a new process.",1,231,FALSE,NA
pkgdown,2c70e92859ee475d1ccd9e33b7ad107b,`build_reference()` no longer runs `devtools::document()` (#1079) and `build_home()` no longer re-builds `README.Rmd` or `index.Rmd`. This makes the scope of responsibility of pkgdown more clear: it now only creates/modifies files in `doc/`.,1,232,FALSE,NA
pkgdown,b945bf26185a7ccd00fbd2c4f106a040,"`build_home()` now strips quotes from `Title` and `Description` fields when generating page metadata. Additionally, you can now override the defaults via the `title` and `description` fields in the `home` section of `_pkgdown.yml` (#957, @​maelle).",1,233,FALSE,NA
pkgdown,9bbfaac139a00f9e507f47568ece92fa,"`vignette(""linking"")` describes how pkgdown's automatic linking works, and how to ensure that cross-package links point to the right place.",1,234,FALSE,NA
pkgdown,b9560ebdb7c46eb605f271c60353459e,"`\examples{}` rendering has been completely overhauled so it now first converts the entire mixed Rd-R block to R prior, and then evaluates the whole thing. This considerably improves the fidelity of the translation at a small cost of no longer being able to remove `\donttest{}` and friends (#1087).",1,235,FALSE,NA
pkgdown,97c9d04c798af23780444868d3426605,`\item{}`s in `\describe{}` containing whitespace are translated correctly (#1117).,1,236,FALSE,NA
pkgdown,38c595f7be371239e7c097e7f9d8b258,"`\dots` and `\ldots` are translated to `...` instead of the ellipsis, since they're often found in code (#1114).",1,237,FALSE,NA
pkgdown,6e20c9d2722a36e80055421d544e1000,"`\tabular{}` translation handles code better (@​mitchelloharawild, #978).",1,238,FALSE,NA
pkgdown,c5709792b2f5b3fe4db62b052834fb2d,"`\subsection{}` contents are now treated as paragraphs, not inline text (#991).",1,239,FALSE,NA
pkgdown,fc9ef3160c7b4f1235ec9a66095f868d,`\preformatted{}` blocks preserve important whitespace (#951).,1,240,FALSE,NA
pkgdown,dbbaeff218b731e3fdec87625b5dcabc,"Links to online documentation for functions in code chunks are no longer displayed when printing (#1135, @​bisaloo).",1,241,FALSE,NA
pkgdown,5b0470778fe5917d306d3fe5a5e1bcb1,"Updated fontawesome to v5.7.1. fontawesome 5 deprecated the `fa` prefix. If you have used custom icons in your navbar, you'll should update them from (e.g.) `fa fa-home` to `fas fa-home`. Brands now have a separate prefix so `fa fa-github` becomes `fab fa-github` (#953).",1,242,FALSE,NA
pkgdown,98b2eb554b6da70e6380b8b4856a5459,The navbar is now automatically hidden with headroom.js.,1,243,FALSE,NA
pkgdown,895f08c13324abc7bddbc6300f8668ed,"The sticky behaviour of the navbar is now implemented in pure CSS instead of relying a the 3rd party javascript library (#1016, @​bisaloo)",1,244,FALSE,NA
pkgdown,e0d6089ff4b89cca2aaff07f12f47087,Favicons are now automatically built from a package logo (#949).,1,245,FALSE,NA
pkgdown,9561925040c07d0056d7ef404987d155,"Infix operators (e.g., `%in%` and `%*%`) are now linked to their documentation (#1082).",1,246,FALSE,NA
pkgdown,5ad323d52d7b8609ae337fb761ad541a,Function names can now be included in headers without spurious auto-linking (#948).,1,247,FALSE,NA
pkgdown,3b445800b8fdeeb9eef9e7aa0016b822,Links to external documentation now point to rdrr.io (#998).,1,248,FALSE,NA
pkgdown,c0719352a50bb45ac53a4765eb45fbf9,"News page recognises more version specifications (including the\ ""(development version)"" now used by usethis) (#980).",1,249,FALSE,NA
pkgdown,81cc8506a6f34019b7bf8aeecb0078fd,"Subdirectories are supported for assets (#939, @​ijlyttle).",1,250,FALSE,NA
pkgdown,04c9a8b70929b8a364278570abe96dc6,"A default 404 page (`404.html`) is built, unless a custom `.github/404.md` is provided (#947).",1,251,FALSE,NA
pkgdown,4bdcb67aa99506d7b9d34ce223aa6d3d,"`build_article()` now uses the raw vignette title as page `<title>` and `og:title` (@​maelle, #1037).",1,252,FALSE,NA
pkgdown,0cf6b25e26c258e1f25de7d8a79e5331,`build_home()` now looks for license files spelled either as LICENSE or LICENCE (#972).,1,253,FALSE,NA
pkgdown,e72a7134cb448fad95951f03e82cb969,"`build_home()` can find badges in paragraph coming after the comment `<!-- badges: start -->` (#670, @​gaborcsardi, @​maelle).",1,254,FALSE,NA
pkgdown,47c38a0f75d24a0f43c80054b648332d,"`build_home()` will add a community section to the sidebar if there is either a code of conduct (`.github/CODE_OF_CONDUCT.md`) or a contributing guide (`.github/CONTRIBUTING.md`) (#1044, @​maelle).",1,255,FALSE,NA
pkgdown,a1d40ed28d0e0d10bb9df4218db66d6a,`build_reference()` gains a `topics` argument which allows you to re-build only specified topics.,1,256,FALSE,NA
pkgdown,a35fc34d285f5eeaad67a47ecd963e02,"`build_site(new_process = TRUE)` gains a timeout, `options(pkgdown.timeout = 10)`, that can be used to prevent stalled builds.",1,257,FALSE,NA
pkgdown,82ea2e10a6aa2a6f8f7232d54282f9b5,`deploy_site_github(install = FALSE)` makes it possible to opt out of installation.,1,258,FALSE,NA
pkgdown,5a6e7790739b5224b4d6070d1fe84405,`dev_mode()` now recognises `0.1.9000` as a development version of a package (this is an emerging standard we use for packages with backward incompatible changes) (#1101).,1,259,FALSE,NA
pkgdown,1e1f827f2f2c0187341514202f9487de,Restore accidentally deleted `build_logo()` function so that logos are once more copied to the website.,1,260,FALSE,NA
pkgdown,7cfd7b60d736a4dadf45aa85ba386941,Fix to `pkgdown.css` so page header has correct amount of top margin.,1,261,FALSE,NA
pkgdown,7b530a93dae47d7f7e2a38ce1a609c09,"`content-home.html` template is no longer used when the homepage is an `.Rmd` (Reverts #834. Fixes #927, #929)",1,262,FALSE,NA
pkgdown,ee2ff900a95af5db53073b47f91f8b29,"`deploy_site_github()` now passes parameters to `build_site()` (@​noamross, #922), and the documentation gives slightly better advice.",1,263,FALSE,NA
pkgdown,174d0f0932468f0c123f662467a35f7d,Correct off-by-one error in navbar highlighting javascript; now no navbar is highlighted if none match the current path (#911).,1,264,FALSE,NA
pkgdown,6eb129c0db11cb4181fd36772ec0e907,"Tweaking of HTML table classes was fixed (@​yonicd, #912)",1,265,FALSE,NA
pkgdown,9726a93ec3b664bb8994999f8294f4e3,Restore accidentally removed `docsearch.css` file.,1,266,FALSE,NA
pkgdown,d675e93fd12ab157f1b804ad04d956d4,`deploy_site_github()` can be used from continuous integration systems (like travis) to automatically deploy your package website to GitHub Pages. See documentation for how to set up details (@​jimhester).,1,267,FALSE,NA
pkgdown,625c1d157ad44d8d81425b55eb45e635,"`build_favicon()` creates high resolution favicons from the package logo, and saves them in `pkgdown/`. They are created using the https://realfavicongenerator.net/ API, and are better suited for modern web usage (e.g. retina display screens, desktop shortcuts, etc.). This also removes the dependency on the magick package, making automated deployment a little easier (@​bisaloo, #883).",1,268,FALSE,NA
pkgdown,6c0556adcd3ce8ac0ec2087ecb611fa0,"Users with limited internet connectivity can explicitly disable internet usage by pkgdown by setting `options(pkgdown.internet = FALSE)` (#774, #877).",1,269,FALSE,NA
pkgdown,2573212477ffce0cfb33fd2993940e2c,`rd2html()` is now exported to facilitate creation of translation reprexes.,1,270,FALSE,NA
pkgdown,8709e7e82bdb4440d13907268369ca9b,"`\Sexpr{}` conversion supports multiple arguments, eliminating `x must be a string or a R connection` errors when using `\doi{}` (#738).",1,271,FALSE,NA
pkgdown,00d5659efa13bee8c2b88113c7c39b09,`\tabular{}` conversion better handles empty cells (#780).,1,272,FALSE,NA
pkgdown,30ccc471fcce821897385e677d4a95f8,`\usage{}` now supports qualified functions eliminating\ `Error in fun_info(x) : Unknown call: ::` errors (#795).,1,273,FALSE,NA
pkgdown,f422136196806f2fdf68e6946f02ec19,"Invalid tags now generate more informative errors (@​BarkleyBG, #771, #891)",1,274,FALSE,NA
pkgdown,62f9ad2fcaf2c4ec316394d85aa15520,The default footer now displays the version of pkgdown used to build the site (#876).,1,275,FALSE,NA
pkgdown,3a396846c73f398ca2b696d0ec06dc6c,"All third party resources are now fetched from a single CDN and are give a SRI hash (@​bisaloo, #893).",1,276,FALSE,NA
pkgdown,92d95637b831d59e3cd9f6d0889079ba,"The navbar version now has class ""version"" so you can more easily control its display (#680).",1,277,FALSE,NA
pkgdown,06786b99bcdd24a4ea2f21a971f3d656,The default css has been tweaked to ensure that icons are visible on all browsers (#852).,1,278,FALSE,NA
pkgdown,ba2b25f53a1898eb490a5f242a5edb3d,Can now build sites for older packages that don't have a `Authors@​R` field (#727).,1,279,FALSE,NA
pkgdown,248b90059d9997794deda7f1cc2c6180,Remote urls ending in `.md` are no longer tweaked to end in `.html` (#763).,1,280,FALSE,NA
pkgdown,7b53b94803f62b40c7c541f0390ce040,"Bug report link is only shown if there's a ""BugReports"" field (#855).",1,281,FALSE,NA
pkgdown,7abd5103e9c5ee5ccf39f9aa4156df16,"`content-home.html` template is now used when the homepage is an `.Rmd` (@​goldingn, #787).",1,282,FALSE,NA
pkgdown,7d4b99f54529bc1fdf6b791a0779ef9c,A link to the source `inst/CITATION` was added to the authors page (#714).,1,283,FALSE,NA
pkgdown,57ca677cfc93ccdcdb4dd388500fb1ef,Uses stricter regular expression when linking to GitHub authors (#902).,1,284,FALSE,NA
pkgdown,9a16efa439e52b84024607b760a03361,Unexported functions and test helpers are no longer loaded (#789).,1,285,FALSE,NA
pkgdown,1a8c9a23f89684cf0fa5f3b9b8a33961,"Selectors that do not match topics now generate a warning. If none of the specified selectors have a match, no topics are selected (#728).",1,286,FALSE,NA
pkgdown,c14c9bc9cac3fb9e6373c1e5ff7cec5c,The display depth of vignette tables of contents can be configured by setting `toc: depth` in `_pkgdown.yml` (#821):,1,287,FALSE,NA
pkgdown,c14c9bc9cac3fb9e6373c1e5ff7cec5c,"```
``` yaml
toc:
  depth: 2
```",1,288,TRUE,NA
pkgdown,f1f4be54480e9ea613b485e0aa76d9ec,`init_site()` now creates a CNAME file if one doesn't already exist and the site's metadata includes a `url` field.,1,289,FALSE,NA
pkgdown,a4fe4d9e584d7758ab76431385c36edc,`build_site()` loses vestigal `mathjax` parameter. This didn't appear to do anything and no one could remember why it existed (#785).,1,290,FALSE,NA
pkgdown,c3653461085d47966c0472d41b1f9756,`build_site()` now uses colours even if `new_process = TRUE` (@​jimhester).,1,291,FALSE,NA
pkgdown,c2b8102175164f4ea8e8269af5932016,"`build_reference()` and `build_site()` get new `document` argument. When `TRUE`, the default, will automatically run `devtools::document()` to ensure that your documentation is up to date.",1,292,FALSE,NA
pkgdown,caadae9c9d3d487ffb0a719eca7828a1,"`build_site()` gains a `new_process` argument, which defaults to `TRUE`. This will run pkgdown in a separate process, and is recommended practice because it improves reproducibility (#647).",1,293,FALSE,NA
pkgdown,5dea5b660baa365765ee05d2dc8f51e5,"Improved display for icons: icons must be 30px and stored in top-level `icons/` directory. They are embedded in a separate column of reference index table, instead of being inside a comment (!) (#607).",1,294,FALSE,NA
pkgdown,8983908b2a0ed6fc3c4250ba574b6c37,Added a keyboard shortcut for searching. Press `shift` + `/` (`?`) to move focus to the search bar (#642).,1,295,FALSE,NA
pkgdown,7f1afd7c5606399035dbc7877541814f,The Algolia logo is correctly shown in the search results (#673).,1,296,FALSE,NA
pkgdown,bd8c733a99e23f6464dd15d248921407,Navbar active tab highlighting uses a superior approach (suggested by 1) which should mean that the active page is correctly highlighted in all scenarios (#660).,1,297,FALSE,NA
pkgdown,90185e5703ab74c20f32650fb486faf2,`pkgdown.js` is better isolated so it should still work even if you load html widgets that import a different version of jquery (#655).,1,298,FALSE,NA
pkgdown,63f7d88ab3127f284a42a70a5a776a9d,"`vignette()` calls that don't link to existing vignettes silently fail to link instead of generating an uninformative error messages (#652). Automatic linking works for re-exported objects that are not functions (@​gaborcsardi, #666).",1,299,FALSE,NA
pkgdown,13f9bb8c59dabdaf685c33cdbd16bf4e,"Empty `\section{}`s are ignored (#656). Previously, empty sections caused error `Error in rep(TRUE, length(x) - 1)`.",1,300,FALSE,NA
pkgdown,3e481422c0d9607b54900d7d7c721526,"`\Sexpr{}` supports `results=text`, `results=Rd` and `results=hide` (#651).",1,301,FALSE,NA
pkgdown,f2ad3ca421efa82927322e41d6a2724e,"`\tabular{}` no longer requires a terminal `\cr` (#664, #645).",1,302,FALSE,NA
pkgdown,10a440f974a1ef554ea3f270cbc1b347,Add `inst/pkgdown.yml` as a possible site configuration file so that packages on CRAN can be built without needing the development version (#662).,1,303,FALSE,NA
pkgdown,1139304f6c2ffb52a1e59b7b27d4f176,"Default navbar template now uses site title, not package name (the package name is the default title, so this will not affect most sites) (#654).",1,304,FALSE,NA
pkgdown,db80d5ae9002e43183642fdadbcc4ef5,You can suppress indexing by search engines by setting `noindex: true` `pkgdown.yml` (#686),1,305,FALSE,NA
pkgdown,db80d5ae9002e43183642fdadbcc4ef5,"```
``` yaml
template:
  params:
    noindex: true
```",1,306,TRUE,NA
pkgdown,d1b78c61a82b1bee52bf2cd10564fe14,`build_article()` sets `IN_PKGDOWN` env var so `in_pkgdown()` works (#650).,1,307,FALSE,NA
pkgdown,61b670059b9f63abf7a79cbdb8dafb58,"`build_home()`: CITATION files with non-UTF-8 encodings (latin1) work correctly, instead of generating an error. For non-UTF-8 locales, ensure you have e.g. `Encoding: latin1` in your `DESCRIPTION`; but best practice is to re-enode your CITATION file to UTF-8 (#689).",1,308,FALSE,NA
pkgdown,172cc7f9981088ab74896be9ce9251f2,"`build_home()`: Markdown files (e.g., `CODE_OF_CONDUCT.md`) stored in `.github/` are copied and linked correctly (#682).",1,309,FALSE,NA
pkgdown,ccf80fb5bdb0e8c2a9472dfa66555cae,`build_news()`: Multi-page changelogs (generated from `NEWS.md` with `news: one_page: false` in `_pkgdown.yml`) are rendered correctly.,1,310,FALSE,NA
pkgdown,0719e82812dd7f4b12f6fbf6cfd5e7e7,"`build_reference()`: reference index shows infix functions (like `%+%`) as `` `%+%` ``, not `` `%+%`() `` on (#659).",1,311,FALSE,NA
pkgdown,a8b502ab18b6f7291f1fdfe71cfc4e31,"Major refactoring of path handling. `build_` functions no longer take `path` or `depth` arguments. Instead, set the `destination` directory at the top level of `pkgdown.yml`.",1,312,FALSE,NA
pkgdown,6faa1e338fddcd5b6f3f69695377132b,"Similarly, `build_news()` no longer takes a `one_page` argument; this should now be specified in the `_pkgdown.yml` instead. See the documentation for an example.",1,313,FALSE,NA
prettycode,bf7369560ef896e35ae5ff2bd510c677,Printing primitive functions excludes their `NULL` environment (#11 @​mdequeljoe),1,1,FALSE,NA
prettycode,7334fe3b83f825e4ce0513f1ab4525a6,`highlight()` supports long strings and symbols (#21 @​moodymudskipper),1,2,FALSE,NA
prettycode,dbce3bfe78dc05f05c1bdf3255d39d73,Use the colors of the current theme in RStudio.,1,3,FALSE,NA
prettycode,be200470a073b4e33b4d83aa43fc3da1,"Color matching brackets to help distinguish between scopes (#8, @​mdequeljoe).",1,4,FALSE,NA
prettycode,d208000fcbb8b9d70f3eb2720704a172,"The withr package is now a development dependency, it is not needed for regular use.",1,5,FALSE,NA
prettycode,673208cf4196cee149204cdc669846ba,Add `prettycode::prettycode()`. Call this function to turn on pretty-printing of function objects. This is needed to work around the new S3 method search limits in R 3.5.x.,1,6,FALSE,NA
prettycode,2f68d56d674d0a0b0026c9f4520ba193,"If prettycode fails to highlight a function, it falls back to `base::print.function()` now (#3).",1,7,FALSE,NA
prettycode,712aab222ed66bc25a1242e0db99810d,Avoid registering the `print.function` S3 method. This is needed to avoid a new `R CMD check` check,1,8,FALSE,NA
prettyunits,4fc65cebe29c93a2082675613ddf42ef,"New `pretty_num()` function with all the BIPM agreed unit prefix (#26, @​cregouby).",1,1,FALSE,NA
prettyunits,1b55e60522a1a5136a7968efb1d75e1d,"New `pretty_round()` and `pretty_signif()` functions preserve the requested number of digits as character strings (#14, @​billdenney).",1,2,FALSE,NA
prettyunits,9266c94bbf8c2a727a450181ac705192,"New `pretty_p_value()` function to convert p-values to character strings where small values are shown like ""\<0.0001"" (#13, @​billdenney).",1,3,FALSE,NA
prettyunits,94afa5f53a73684a6cb4e02ef826c96c,"New `pretty_color()` functionm converts a color to a named color (#12, @​billdenney).",1,4,FALSE,NA
prettyunits,40d0522e0cfb93f8748a6a7046fd746c,Fix spurious zero fractions in `pretty_bytes()` when formatting vectors of sizes (#23).,1,5,FALSE,NA
prettyunits,cb5f215120fdf292336876df73e39dbf,"`pretty_dt()`, `pretty_ms()` and `pretty_sec()` now handle `NA` values properly, and return `NA_character_` for them (#10, @​petermeissner).",1,6,FALSE,NA
prettyunits,63aeb51143df40919fd8742b9bb07413,"`pretty_bytes()` now formats quantities just below the units better. E.g. 1MB - 1B is formatted as `""1 MB""` instead of `""""1000 kB""` (#18).",1,7,FALSE,NA
prettyunits,fe7771e729d788b9c299c8baff95d62b,"`pretty_bytes()` now has multiple styles. In particular, a fixed width style is useful for progress bars. Another style avoids the left-padding with spaces.",1,8,FALSE,NA
prettyunits,5a82fb73ffefc12a547c1564e1bf70eb,The new low level `compute_bytes()` function can be used to create custom formatters for bytes.,1,9,FALSE,NA
prettyunits,1e51c0570f4617e6a32a39d9636ac658,"`pretty_bytes()` always uses two fraction digits for non-integers. This looks nicer in a progress bar, as the width of string does not change so much.",1,10,FALSE,NA
prettyunits,b775b373ac2359552fa70f00028e1d0a,Get rid of `R CMD check` notes.,1,11,FALSE,NA
R6,947de740a9aa4e6f36f9575b20d4110e,The deprecated `lock` parameter has been removed.,1,1,FALSE,NA
R6,c7ae278aca47daba2fe282527373040f,`R6Class()` now prints a message when a `finalize` method is public instead of private.,1,2,FALSE,NA
R6,dc46c26355872b2b940d9d48b6cf3309,"When a superclass is not cloneable, then subclasses cannot be cloneable (@​IndrajeetPatil, #247).",1,3,FALSE,NA
R6,7fb12c291a2d9863166bc0aff927dd2e,"Fixed #253: Errors could occur when deep cloning if a member object was an environment with a class that had a `$` method. Deep cloning now uses `get0()` instead of `$`. R6 now requires R \>= 3.2. (@​zeehio, #274)",1,4,FALSE,NA
R6,735d797b0a5599a4fecc183d1f4063cb,Removed unused packages from `Suggests` section in DESCRIPTION.,1,5,FALSE,NA
R6,34fcc128f4f6839328898be876fd129c,Resolved #195: Slightly clearer message when there is an error in the `initialize()` method.,1,6,FALSE,NA
R6,a6ef095b21a7245b8b9e71c4203348b5,"Fixed #214: When a non-portable object inheritance was cloned, methods that were inherited (and not overridden) had the wrong environment. (#215, #217)",1,7,FALSE,NA
R6,0ecb8e6ec8bd38506082bdb1e668ddb8,"Printing R6 objects, no longer includes `.__active__`.",1,8,FALSE,NA
R6,8434978638ec6361a255e989c48f8e42,"Cloning active bindings previously relied on buggy behavior in `as.list.environment()`, which would return the active binding's function definition rather than the value from invoking the function. In R 4.0, the behavior will chang so that it returns the value. R6 now no longer relies on this buggy behavior. (#192)",1,9,FALSE,NA
R6,0ebd73f4bed429c05c9926e6e9b5722c,Fixed #146: Finalizers can now be private methods. (#181),1,10,FALSE,NA
R6,9e67f9106bd20cdc00d9a8aef9cb0af0,Fixed #167: Finalizers now run on cloned objects. (#180),1,11,FALSE,NA
R6,56a26896625031219331122b7a54cfd9,Vignettes are no longer included as part of the source package because of their large size. Documentation is now at https://r6.r-lib.org/.,1,12,FALSE,NA
R6,9c3ed399f9fe4c0391f07cd1ae8ed2ef,Fixed #125: The `print.R6` method now always returns the object that was passed to it.,1,13,FALSE,NA
R6,ee64e6d7d2b7aa1354bcd6e3e67a6d6e,"Fixed #155: In some cases, a cloned object's methods could refer to the wrong `super` object. (#156)",1,14,FALSE,NA
R6,528142b11214252c6daeaa3f8a58a5f6,"Fixed #94, #133: When cloning an object which contained a function that is *not* a method, the corresponding function in the new object would have its environment changed, as though it were a method. Now it no longer has a changed environment. (#156)",1,15,FALSE,NA
R6,415a5c17f483afb8c4f9ac3961f354c8,"Fixed #121: If a `finalize` method was present, it would prevent objects passed to `initialize` from getting GC'd.",1,16,FALSE,NA
R6,3a5b2c5b641c8c9d9823eab5dc4d8322,"Fixed #158: If a `$set` method of an R6 generator object is given the value `NULL`, it previously removed the named item. Now it adds the named item with the value `NULL`.",1,17,FALSE,NA
R6,500a4edc2e6bb799fc55818d7d2f8444,Fixed #159: Printing an R6 object containing a large vector was slow.,1,18,FALSE,NA
R6,2ede7540ef1f30b0a92bbd05a06d285b,"Fixed #108: When an object with a `super` object and an active binding in the `super` object was cloned, the new object's `super` object did not get the active binding -- it was a normal function.",1,19,FALSE,NA
R6,2698937bbdfe879ced8d99cd4f754a61,"Fixed #119: When a class had two levels of inheritance, an instance of that class's `super` object could contain methods that had an incorrect enclosing environment.",1,20,FALSE,NA
R6,f6fdd99567153441e24d2f3c38336a14,"Vignettes now only try use the microbenchmark package if it is present. This is so that the package builds properly on platforms where microbenchmark is not present, like Solaris.",1,21,FALSE,NA
R6,1b6ff90b56d601e0e6aa762e07319d41,Fixed ending position for `trim()`.,1,22,FALSE,NA
R6,6d7aa6bba97e8a24b039d5ffb52f27e9,"Classes can define finalizers explicitly, by defining a public `finalize` method. (#92, #93)",1,23,FALSE,NA
R6,b9ff26373e08faa293658438d5bfd14a,Added function `is.R6()` and `is.R6Class()`. (#95),1,24,FALSE,NA
R6,ece986c3de6b4eb3f31fd5866f588b0b,Fixed #96: R6 now avoids using `$` and `[[` after the class has been assigned to the object. This allows the user to provide their own methods for `$` and `[[` without causing problems to R6's operation.,1,25,FALSE,NA
R6,4ddea126bb14f154e90bf41e538024d4,The `plot` S3 method for R6 objects will call `$plot` on the object if present. (#77),1,26,FALSE,NA
R6,53f6612a1d0255c4db2a11a389d2cd43,Fixed printing of members that are R6 objects. (#88),1,27,FALSE,NA
R6,1f40f6f6b06ef9ee8268083131c95e13,Fixed deep cloning for non-portable classes. (#85),1,28,FALSE,NA
R6,33315f9561f4a30cf043da3dba668771,Added `as.list.R6` method. (#91),1,29,FALSE,NA
R6,2b85ab6b48ecce52784fe442e10927e3,"Implemented `format.R6()` and `format.R6ClassGenerator`, the former calls a public `format` method if defined. This might change the functionality of existing classes that define a public `format` method intended for other purposes (#73. Thanks to Kirill Müller)",1,30,FALSE,NA
R6,17332a866d46a18b7c742f0c2c692244,"Functions are shown with their interface in `print` and `format`, limited to one line (#76. Thanks to Kirill Müller)",1,31,FALSE,NA
R6,009d9958d6efef812f6981e96c71d61a,R6 objects and generators print out which class they inherit from. (#67),1,32,FALSE,NA
R6,7cad57b35230be2df97e7751d96ddb42,Fixed a bug with printing R6 objects when a `[[` method is defined for the class. (#70),1,33,FALSE,NA
R6,7e6934d33ec83b4e4039c5fdff11f787,Fixed cloning of objects that call a `super` method which accesses `private`. (#72),1,34,FALSE,NA
R6,de6769bc349b12cfb243cccdd3abc238,Added support for making clones of R6 objects with a `clone()` method on R6 objects. The `deep=TRUE` option allows for making clones that have copies of fields with reference semantics (like other R6 objects). (#27),1,35,FALSE,NA
R6,d3bc20b65623fa2f6d338b6027f2a943,Allow adding public or private members when there were no public or private members to begin with. (#51),1,36,FALSE,NA
R6,45306c6164cc7733b1bc76f12a63a605,"Previously, when an R6 object was printed, it accessed (and called) active bindings. Now it simply reports that a field is an active binding. (#37, #38. Thanks to Oscar de Lama)",1,37,FALSE,NA
R6,6a992e7c9d80cf46fe684a0c7c76a3e0,Printing private members now works correctly for portable R6 objects. (#26),1,38,FALSE,NA
R6,723d0d10cb0da08927fc05d3da2c4645,"The 'lock' argument has been renamed to 'lock_objects'. Also, there is a new argument, 'lock_class', which can prevent changes to the class. (#52)",1,39,FALSE,NA
R6,319a440bb04da68dd67dfafe87c5339f,Fixed printing of NULL fields.,1,40,FALSE,NA
R6,cb59dd05968749a766f867826a879837,"A superclass is validated on object instantiation, not on class creation.",1,41,FALSE,NA
R6,7c2b9c8b2194553d0900367f6ebc96f2,Added `debug` and `undebug` methods to generator object.,1,42,FALSE,NA
R6,179bd0218a9cd49e97189f810e73beaa,"\[BREAKING CHANGE\] Added `portable` option, which allows inheritance across different package namespaces, and made it the default.",1,43,FALSE,NA
R6,21dbede1d9ddc71c623490f7a8698708,"Added `set()` method on class generator object, so new fields and methods can be added after the generator has been created.",1,44,FALSE,NA
R6,2068fc7070332ea41800a1f83c3d79e8,"All of the functions involved in instantiating objects are encapsulated in an environment separate from the R6 namespace. This means that if a generator is created with one version of R6, saved, then restored in a new R session that has a different version of R6, there shouldn't be any problems with compatibility.",1,45,FALSE,NA
R6,9aceb068c2a1b6124ede0acc9f04b1e5,Methods are locked so that they can't be changed. (Fixes #19),1,46,FALSE,NA
R6,85e8e4684f42963eb52b6479202a3512,"Inheritance of superclasses is dynamic; instead of reading in the superclass when a class is created, this happens each time an object is instantiated. (Fixes #12)",1,47,FALSE,NA
R6,fa24f4fcb0b9b903a839fe0db3087f6d,Added trailing newline when printing R6 objects. (Thanks to Gabor Csardi),1,48,FALSE,NA
R6,0f79bf3130f5ade3396cd415b1041250,The `print` method of R6 objects can be redefined. (Thanks to Gabor Csardi),1,49,FALSE,NA
R6,a6c6e8d3482604a60104a13a65a56af8,First release on CRAN.,1,50,FALSE,NA
R6,b377bee7c651379489f5ca57ad224754,Removed pryr from suggested packages.,1,51,FALSE,NA
R6,2042fc87c3061d8f2dc1054d2397956f,First release,1,52,FALSE,NA
ragg,7e50fbdc47ecc21c380a8ece3c5d4a31,Fix a stack imbalance bug,1,1,FALSE,NA
ragg,ff55ac8bf37347e740b4284690e4f3d7,Fix symbol rendering bug on windows (#132),1,2,FALSE,NA
ragg,a0cf2bdff5c54ba735a85bfa6157d8ca,Add support for `dev.capabilities()` (#105),1,3,FALSE,NA
ragg,58e216d37e6b606d51feeab1faf24c5d,Prepare for Arm Windows,1,4,FALSE,NA
ragg,3834cd08ab84669cbc128dc1154933dc,Fix a bug when rendering glyphs from a colour font that also provide greyscale glyphs (#105),1,5,FALSE,NA
ragg,10da81096717f45d794d2599dbb440e5,Move `sprintf()` to `snprintf()` in the AGG source code to comply with Arm64 deprecation,1,6,FALSE,NA
ragg,9fc9589dc85614168c0bc347e3eb4269,Better guard against bad input (#116),1,7,FALSE,NA
ragg,7d47a563a938ce2f3b9625fa5d439889,Fixed a regression that turned off line mitre support (#119),1,8,FALSE,NA
ragg,556feeb76cb9b4b712da13a83d72b14a,"Second attempt at rendering jpegs with transparent background. Now, the buffer is filled with solid white before any drawing happens.",1,9,FALSE,NA
ragg,d0c4ef50cf0710623f5991eea39d76aa,Fixed a bug that resulted in newlines being rendered as missing glyphs on some Linux versions (#111),1,10,FALSE,NA
ragg,f22dd0d654739ead13f3b63c60bb4b38,MacOS: configure script now uses the local system dependencies provided by CRAN via pkg-config. Autobrew libs are used as fallback on non-cran servers only.,1,11,FALSE,NA
ragg,a6cb7065978844d7b05b0a89ff163870,Fix bug that caused R to crash when writing tiff files with transparent background (#97),1,12,FALSE,NA
ragg,95349a0dafc8ed98177067438270d070,Add support for new graphic engine features:,1,13,FALSE,NA
ragg,95349a0dafc8ed98177067438270d070,• Arbitrary clipping paths,2,14,FALSE,Add support for new graphic engine features:
ragg,95349a0dafc8ed98177067438270d070,• Alpha masks,2,15,FALSE,Add support for new graphic engine features:
ragg,95349a0dafc8ed98177067438270d070,• Linear and radial gradients,2,16,FALSE,Add support for new graphic engine features:
ragg,95349a0dafc8ed98177067438270d070,• Tiling patterns,2,17,FALSE,Add support for new graphic engine features:
ragg,6d80c4d9c3a236f51c20567f1a5ba5bc,Use white as background when passing in a fully transparent background colour to devices that doesn't support alpha (notably jpeg) (#91),1,18,FALSE,NA
ragg,2e7e076b28bca6477b758884cf5ace14,ragg now defers symbol font resolving to systemfonts which makes it possible to register alternative symbol fonts using `register_font()` (#90),1,19,FALSE,NA
ragg,de4df0654cbc8e676c1ab9bb6d2d8c6f,Filenames in UTF-8 are now treated correctly on Windows (#87),1,20,FALSE,NA
ragg,ff7e33d978c9d358ae002af599d4e221,Fix size selection of non-scalable fonts when the requested size is bigger than the available,1,21,FALSE,NA
ragg,3d41cb34da3a9669f30f29eff576c1cf,Use int32_t instead of int32 in old code,1,22,FALSE,NA
ragg,92687f408f0b28b09ee12f8a72fd9114,Prepare for UCRT,1,23,FALSE,NA
ragg,e31e0f13802c6d76921b8ccc04502718,Better error message when failing to allocate memory for the buffer (#82),1,24,FALSE,NA
ragg,8ea432e8acc5cf088008d6d556f21896,Increase storage size limits for paths (#80),1,25,FALSE,NA
ragg,c06f07df3a6f81f4f1d3e107d783a8b6,Fix bug in `agg_capture()` that resulted in premultiplied colour values being returned,1,26,FALSE,NA
ragg,08c4361c4657ec271e4bd048b87248a3,Fix a bug in glyph dimension lookup that could cause system crashes,1,27,FALSE,NA
ragg,67004af5a1056e9dea1a4048da6acd42,Fix bug in font caching when multiple ragg devices are used simultaneously,1,28,FALSE,NA
ragg,c294a3eb26a9f5e5bf39d9b016a11b56,Major version release to signify the much improved text support that includes full support for right-to-left scripts and bidirectional text (mix of RtL and LtR scripts). It further adds full support for OpenType features and non-scalable fonts.,1,29,FALSE,NA
ragg,0d72c3392add4ff8e8a2aebbb829f021,"Re-exporting `register_font()`, `register_variant()`, and `font_feature()` from systemfonts",1,30,FALSE,NA
ragg,d01fe10122b01e04bb96b1b0a4e3e137,Re-exporting `get_font_features()` from textshaping,1,31,FALSE,NA
ragg,13fd11a5c0fa04eb9273c6a39592e5ef,Use new textshaping API and handle font fallback correctly,1,32,FALSE,NA
ragg,789a753c737126aa8ec954fc349d48ab,Add support for rendering colour fonts (#1),1,33,FALSE,NA
ragg,187cad0bd299df0eed1ff6e0c1b177c7,Skip text tests on CRAN as no text is plottet on the CRAN solaris machine,1,34,FALSE,NA
ragg,ddddbab8d1c7eafcba8b9627fdd26c01,"Fixed a bug resulting in system crash on certain systems, as well as clang-ASAN error. (#59)",1,35,FALSE,NA
ragg,c6ef3cfe9d0feac7148fdefa988ea5d0,ragg now requires the Harfbuzz and Fribidi libraries to be available when installing from source due to their dependency in the textshaping package.,1,36,FALSE,NA
ragg,4f304148bc4add73ed59d5aa956ae790,Move text shaping to the new textshaping package.,1,37,FALSE,NA
ragg,ea40f5496402f655d0d4320e7562dc85,"Fix `agg_capture()` on big endian systems (#49, @​QuLogic)",1,38,FALSE,NA
ragg,d06f06bac17be15bf51ed0ab58890c8b,Fix use of symbol font on Windows by moving to Segoe UI Symbol which has a Unicode charmap (#51),1,39,FALSE,NA
ragg,3090aa62f1c4f2b4a2b953a28eff6948,Better compatibility with knitr and `ggplot2::ggsave()`,1,40,FALSE,NA
ragg,928e4c50402f809eb51c0099b62e63f7,Roll back support for new clipping options in the graphic engine as it was buggy.,1,41,FALSE,NA
ragg,7897033a5f5a77b22f8bd5cf8ce728d8,Fix a bug when plotting partially transparent raster (#44),1,42,FALSE,NA
ragg,b6b95986573ed2a1f27432a717b42ac0,Add a `scaling` argument to all devices allowing you to change relative scaling of output.,1,43,FALSE,NA
ragg,d541e21089e5346f646d5dd39e9bfd09,Horizontal and vertical text are now snapped to the pixel grid in order to improve rendering quality.,1,44,FALSE,NA
ragg,8cb26ca3bb3cb81cc890b5504bc595d5,Internal changes to prepare for coming updates to the graphic engine,1,45,FALSE,NA
ragg,0b9ee85c62f1eb4fa0696574d8455fc7,Fix compilation on R \<= 3.3 by including Rdynload.h explicitly,1,46,FALSE,NA
ragg,ad5596d426c0c44ef2601f472486b314,Fix a performance regression when plotting text (#33),1,47,FALSE,NA
ragg,0cbb3a0be1c9bb03f06d016a0cc5fa2a,Fix erroneous width calculations of strings starting with a space on windows (#32),1,48,FALSE,NA
ragg,acd54d1b2896a125a2b4f561a257b4da,Fix a bug in `agg_capture()` where the output became mangled if device height != width,1,49,FALSE,NA
ragg,8d8e726f9c8d738f3de6b0cd911d8e8b,"Fix a bug in raster support where raster data did not get premultiplied before rendering (#38, @​yixuan)",1,50,FALSE,NA
ragg,6ab51d36e2a729438927bed437bfeea1,Fix an integer overflow issue in the AGG source code,1,51,FALSE,NA
ragg,279f73162b79a1f135f4c7b12419ee15,Fix compilation on macOS,1,52,FALSE,NA
ragg,2940d4ac933d1004a8f170bd3ea5d637,Fix a bug in AGG's font manager that ignored the font index when it stored and retrieved cached faces,1,53,FALSE,NA
ragg,cb533846481b8721d248159a25576df2,Fix bug preventing ragg from displaying 50% transparent black,1,54,FALSE,NA
ragg,b6daf0d3833b723d19a98835cfa428ac,Another attempt at fixing compilation on mac build machines,1,55,FALSE,NA
ragg,99262fc5ca2a1442f09b42f27615ccb1,"Fix compilation on certain Linux systems by preferring dynamic libraries over static ones (#25, @​jimhester).",1,56,FALSE,NA
ragg,c7822e750b3d093ae21757131a1e43b0,Avoid a bug when the call to start a device included too many characters (#16),1,57,FALSE,NA
ragg,5772f99097fec0e299b35bc191fdfbb8,"Fix integer overflow runtime errors in agg source code (`agg_scanline_storage_aa.h`), by changing storage to `long`",1,58,FALSE,NA
ragg,257740e429c7feb64b78d9623307ed62,Remove benchmarking vignettes as it was causing too much trouble on stripped down systems... They are still available on https://ragg.r-lib.org,1,59,FALSE,NA
ragg,31827adc9e6658919e53c4ab93eaedd4,Better build setup to properly build on all macOS systems,1,60,FALSE,NA
ragg,534d0ae6725a48cdc08f9d80add739b8,"Basic setup of package. png, tiff, ppm, and buffer capture support",1,61,FALSE,NA
ragg,f8a6aca56b9b960caecc99e42274cbbd,Added a `NEWS.md` file to track changes to the package.,1,62,FALSE,NA
rcmdcheck,c099660b16e2aaae723129c837bfa2bb,Update pkgdown template and move url to https://rcmdcheck.r-lib.org.,1,1,FALSE,NA
rcmdcheck,dfdf46413078748cfd6ebc9e22d97ab4,"`cran_check_results()` now downloads results in parallel, so it is much faster.",1,2,FALSE,NA
rcmdcheck,58e2a94ccec6980bbc0b366c60fe49ee,"`rcmdcheck_process` now redirects the standard error to the standard output, to make sure that they are correctly interleaved (#148).",1,3,FALSE,NA
rcmdcheck,77cadb3623801a1f324fbf6197998708,"rcmdcheck now puts Rtools on the PATH, via pkgbuild (#111).",1,4,FALSE,NA
rcmdcheck,209544994147aaebd14965749ed5fdf2,"rcmdcheck now builds the manual when building the package, if it is needed for `\Sexpr{}` expressions (#137).",1,5,FALSE,NA
rcmdcheck,129ed8790ed37ca933277059441bc36c,This version fixes a rare race condition that made rcmdcheck fail (#139).,1,6,FALSE,NA
rcmdcheck,21e8086aad3b3e72a334c8fd4a5851c0,rcmdcheck now safeguards against R deleting the user's home directory via an `R CMD build` bug (#120).,1,7,FALSE,NA
rcmdcheck,3503d184f2feb11b2c82277257d3a2a6,"rcmdcheck can now ignore files in `inst/doc` when building a package. See the `Config/build/clean-inst-doc` package option in `?""rcmdcheck-config""` (#130).",1,8,FALSE,NA
rcmdcheck,1d13cf960386bc88cec57db8535558df,"It is now possible to turn on/off ANSI colors for rcmdcheck only, without affecting the checked package. See `?""rcmdcheck-config"" and the`RCMDCHECK_NUM_COLORS`environment variable and the`rcmdcheck.num_colors\` option (#119, @​jimhester).",1,9,FALSE,NA
rcmdcheck,01b8e95cf47356ec29bfaf6f18fc0c8d,"`print.rcmdcheck()` now has a `test_output` argument and `rcmdcheck.test_output` global option, to control whether to print the full test output or not. (#121)",1,10,FALSE,NA
rcmdcheck,ee5113da00b07b043d80ff87ddb0cb2f,"RStudio's Pandoc is now on the path during `rcmdcheck()` and `rcmdcheck_process` (#109, #132, @​dpprdan).",1,11,FALSE,NA
rcmdcheck,e291684d1357b3edb22e2e5cb3c33d4d,"`rcmdcheck()` now errors if the check process crashes (#110, #163).",1,12,FALSE,NA
rcmdcheck,16c52d1310e59ec0c3726f63cb65365e,"`rcmdcheck()` prints the check ouptut better interactively, especially when the package has multiple test files (#145, #161).",1,13,FALSE,NA
rcmdcheck,c06b92c2c8d19fa52181776f7ca24ad7,"rcmdcheck can now ignore `NOTE`s, if requested, see `?rcmdcheck` for details (#12, #160).",1,14,FALSE,NA
rcmdcheck,2ac6f5d8ab2329c5c97b576b6fbf826b,rcmdcheck now always converts its output to UTF-8 from the native encoding. It also handles parsing check output in a non-native encoding better (#152).,1,15,FALSE,NA
rcmdcheck,a75ece43d14b2d006352ca5d43df1199,rcmdcheck now ignored time stamps when comparing two check results (#128).,1,16,FALSE,NA
rcmdcheck,92fce4c8f50696dec92ccd06c2bb99f5,rcmdcheck now does not print extra empty lines in the interactive output on GitHub Actions.,1,17,FALSE,NA
rcmdcheck,b3bd1e707934170ddebf697b531a755b,rcmdcheck now uses a more robust implementation to extract the session info from the check process (#164).,1,18,FALSE,NA
rcmdcheck,fb1f55948230232b43c68f812a519f1b,"`cran_check_results()` has now a `quiet` argument, and the download progress bars are shown if it is set to `FALSE` (#17).",1,19,FALSE,NA
rcmdcheck,dc71561ff24b5b3f526e82ef948703f3,"Fix output when standard output does not support `\r`, typically when it is not a terminal (#94).",1,20,FALSE,NA
rcmdcheck,1b1fdbd8fc7e7814f2eb6c95f41f5c32,"Fix standard output and standard error mixup in the test cases, (#88, #96).",1,21,FALSE,NA
rcmdcheck,c813cdd4be52d2dad9c2ea9f71c27455,"Fix parsing test failures when multiple architectures are checked, (#97).",1,22,FALSE,NA
rcmdcheck,5d5ba1f455787fca183d823e155a2733,"`rcmdcheck()` has now better colors. WARNINGs are magenta, and NOTEs are blue (#103, @​hadley).",1,23,FALSE,NA
rcmdcheck,bfb854c412d4cddb9830b68e90f3302e,`rcmdcheck()` now correctly overwrites existing tarballs if they already exist in the check directory. This time for real.,1,24,FALSE,NA
rcmdcheck,0f045ea1de308685658de1f1b5b8dbf3,`rcmdcheck()` now correctly overwrites existing tarballs if they already exist in the check directory (#84 @​jimhester).,1,25,FALSE,NA
rcmdcheck,10a355ed5f61cee21837bc08dc7a3751,rcmdcheck now uses `sessioninfo::session_info()` to query session information for the check.,1,26,FALSE,NA
rcmdcheck,2a1821a76afa174b07290298e9b2f218,New `rcmdcheck_process` class to run `R CMD check` in the background.,1,27,FALSE,NA
rcmdcheck,4f62ba5e9e6d75094d1dc21b65d3d3da,`rcmdcheck()` now supports timeouts (default is 10 minutes).,1,28,FALSE,NA
rcmdcheck,2f391202f9090b193901683c2c88a87f,Checks now capture and print installation and test failures.,1,29,FALSE,NA
rcmdcheck,02f8a0e2df460b6c24a2e1a720da3b04,Checks now record and print the duration of the check.,1,30,FALSE,NA
rcmdcheck,4ed0f16f1adaa95f87f848fbcf35f4eb,Checks now record and print session information from the check session (#22).,1,31,FALSE,NA
rcmdcheck,c69f7e5bba49c68e4a0fba649a3aac3e,"`rcmdcheck()` new keep files until the returned check object is deleted, if check was run in a temporary directory (the default) (#23).",1,32,FALSE,NA
rcmdcheck,2029b6a6473f002fe2daa148bc171ce0,New `xopen()` to show the check file in a file browser window (#61).,1,33,FALSE,NA
rcmdcheck,f343c24144b1fea6039db0c298740af5,"Checks now save `install.out` and also `DESCRIPTION` in the result, and save the standard error and the exit status as well.",1,34,FALSE,NA
rcmdcheck,639c80ded37b56a741c4e0aec8847e56,`rcmdcheck()` printing is now better: the message from the check that is actually *being performed* is shown on the screen.,1,35,FALSE,NA
rcmdcheck,15222a5364b5bfc33ea37d65169a9e5f,`rcmdcheck()` now shows a spinner while running check.,1,36,FALSE,NA
rcmdcheck,6293cc08e12fd75355a7526ec683acae,`rcmdcheck()` results now have a `summary()` method for check comparisons.,1,37,FALSE,NA
rcmdcheck,474273303c06306769050867e2278e6a,"`rcmdcheck()` results now have a new `check_details()` method, to query the check results programmatically. (No need to use `$errors`, `$warnings`, etc. directly.)",1,38,FALSE,NA
rcmdcheck,a19b610914684d8abbd21d4736135adc,Checks now find package root automatically (#18).,1,39,FALSE,NA
rcmdcheck,285f1cb3a3f4f7e1a4f88e7e7f9eaa36,`rcmdcheck()` now has an `error_on` argument to throw an error on an `R CMD check` failure (#51).,1,40,FALSE,NA
rcmdcheck,ed00a6112c823aa2663f797a31060789,"`rcmdcheck()` result printing is now better, the colors are consistent (#54).",1,41,FALSE,NA
rcmdcheck,c6144091dd4534378c4bee1387d2a019,Compare two check results with `compare_checks` or compare check results to CRAN with `compare_to_cran`.,1,42,FALSE,NA
rcmdcheck,748dbf4ee3e255023adb89aaaaa48f75,"The result object has more metadata: package name, version, R version and platform.",1,43,FALSE,NA
rcmdcheck,f7ccf42eab1f5d7d4b83c60e459e12a7,Refined printing of the result.,1,44,FALSE,NA
rcmdcheck,5ca28722434d2d898c4ebf019608b7d5,`rcmdcheck()` works on tarballs build via `R CMD build` now.,1,45,FALSE,NA
rcmdcheck,e60abf1ba41e4e4899549177e5295e49,"Parse `R CMD check` results: `parse_check`, `parse_check_url`.",1,46,FALSE,NA
rcmdcheck,e726d446706d834bc743d639d99f96f1,Download and parse check results for CRAN packages.,1,47,FALSE,NA
rcmdcheck,3437c4a5f72b94c1d217ea7e22ef3002,"Report errors during the build, typically vignette errors.",1,48,FALSE,NA
rcmdcheck,36633f6c00fce90b361be00bbd74b039,Use the `callr` package (https://github.com/r-lib/callr) for running `R CMD` commands.,1,49,FALSE,NA
rcmdcheck,322bee9c36e1f39be021a4e0ec594baa,New arguments `libpath` and `repos` to set the library path and the default CRAN repository,1,50,FALSE,NA
rcmdcheck,cf0afc52708a13873dbc096770a36fa2,Do not run tests on CRAN.,1,51,FALSE,NA
remotes,3980dee20f5dd694b3b011c04abe6c73,"`install_github()` now uses credentials from the git credential store, if `GITHUB_PAT` and `GITHUB_TOKEN` are not set.",1,1,FALSE,NA
remotes,813ea0bfa77cae91187edd91b01e2de6,"Remotes field accepts explicit package names: `<pkgname>=<type>::<username>/<repo>` (#719, @​heavywatal).",1,2,FALSE,NA
remotes,e533f9b4f61816aa06e777fae983b0ab,"Add `remote_precedence` parameter to `dev_package_deps()` which allows user to choose whether remote sources should have a priority over cran sources. (#732, @​maksymiuks)",1,3,FALSE,NA
remotes,4a07c1e37d29d6b1a7a33ea4a22ce03e,"`dev_package_deps()` now works for packages with `Enhances` dependencies (#711, @​maksymiuks).",1,4,FALSE,NA
remotes,597b59b3d51569e8cf70a6fd4891a537,Gábor Csárdi is now the maintainer.,1,5,FALSE,NA
remotes,8cfc2b40fe72c46a8bed2f4b595964a2,"`bioc_version()` now points to the most recent (2021-10-27) Bioconductor release, `v3.14` (@​stufield, #664).",1,6,FALSE,NA
remotes,e39f6216b3b85be7f884b1d4e7b10279,"Fix regex to handle user names in URL in `git_remote`, add regression tests (@​achimgaedke, #646).",1,7,FALSE,NA
remotes,14a8cde628da32dfffb920fa05dc531d,pkgbuild is no longer accidentally loaded even in standalone mode (#548),1,8,FALSE,NA
remotes,32f4cc3c73da0051ebba90b7d40c9778,The internal GitHub token used to increase rate limits has been regenerated.,1,9,FALSE,NA
remotes,2e56f71daaa6f2d9ac9bebd27b9c6b91,"Using `remote_package_name.git2r_remote` now passes credentials when looking up the package `DESCRIPTION` (#633, @​rnorberg)",1,10,FALSE,NA
remotes,8b489cc3459021bc746b10836121607f,"Using `remote_package_name.git2r_remote` and `remote_package_name.xgit_remote`, http responses returning an invalid `DESCRIPTION` or that redirect to another page will now fallback to return `NA` instead of throwing an error when trying to parse the unexpected content (#628, @​dgkf).",1,11,FALSE,NA
remotes,a86acabc671ae268857ea90657dc284f,Fix regex that breaks git protocol in `git_remote` (@​niheaven #630).,1,12,FALSE,NA
remotes,d716c21f63c92fbde2255bcab9eff205,Clarify `github_pull()` documentation (@​ms609 #640).,1,13,FALSE,NA
remotes,7b00e94f064d2e93ef0a4766cc6e0572,Re-license as MIT. (#551),1,14,FALSE,NA
remotes,8eef61f8ba800c8cd00e956ef5fc0fbc,"Fix bug in install_bioc() when using version='devel'. The code will now pull from the git HEAD, not a branch named 'HEAD' (@​bbimber, #612).",1,15,FALSE,NA
remotes,70e36dee9b8125eeb0404592fcd6e26e,"skip tests for `download.file(method = ""internal"")`, on R \> 4.1, since that method is now defunct on those versions.",1,16,FALSE,NA
remotes,394cde7895825cd96e162ce6062c778e,"`system_requirements()` now works as intended if only the `os` argument is used (@​mdneuzerling, #609)",1,17,FALSE,NA
remotes,59bbca704d2fba6944d455237dad2ff1,"`remote_package_name.git2r_remote` and `remote_package_name.xgit_remote` now get correct package name from HTTP(S) git repo's `DESCRIPTION` file, and thus package's `DESCRIPTION` file's `Remotes` field could have `git::http(s)://<host>/<username>/<repo>[.git][@​ref]` items that install remote packages using git via HTTP(S) protocol (@​niheaven, #603).",1,18,FALSE,NA
remotes,eec69d19e9c158b6804336f02b63711b,`install_*()` functions will no longer fail by default if there warnings from `install.packages()`. Concretely the default value of `R_REMOTES_NO_ERRORS_FROM_WARNINGS` has changed to `true` from the previous value of `false`. (#403),1,19,FALSE,NA
remotes,6f55530ec4444bca7c11869b2549bfa9,"`install_bioc()` now respects the environment variable R_BIOC_VERSION, and will use the git branch corresponding to this Bioconductor version (@​bbimber, #580).",1,20,FALSE,NA
remotes,53323ac2b30178c4f51c85039aa936f8,"remotes without package names are now unconditionally installed (#532, @​jakubkovac)",1,21,FALSE,NA
remotes,ecf375e835abe113b636e75700ccffa3,"It is now possible to specify a custom host for dependencies listed in the `DESCRIPTION` file with `Remotes: <type>[@​host]::<username>/<repo>[@​ref]`. The `ref` now supports `/` in it for `GitLab` repositories as it did for `GitHub`repositories. (@​dagola, #448)",1,22,FALSE,NA
remotes,0f9c5f561bf519a944b22a245bfab1d2,Internal `package2remote()` function now supports local remotes created by pak.,1,23,FALSE,NA
remotes,eae9d1152a77ab67e557f48ef05c5d8a,`github_pat()` will now check if `GITHUB_TOKEN` is set if it cannot find `GITHUB_PAT`. (@​coatless),1,24,FALSE,NA
remotes,1ba927394c64c56455d5100e61f9af8d,`system_requirements()` now supports querying released packages as well as development dependencies (#545),1,25,FALSE,NA
remotes,bf7adc98985976a530a6e3e6a0a7a1d9,"`system_requirements()` now supports OS name + version in the `os` argument (#549, @​krlmlr).",1,26,FALSE,NA
remotes,e3e0da36971f4af04408cf0639d8fb09,New `system_requirements()` function to query the Public RStudio Package Manager for system requirements for a package (and its dependencies),1,27,FALSE,NA
remotes,409fd94c2973d06d0b9f93d35cd85fd3,"Remotes functions can now install dependencies from additional DESCRIPTION fields, e.g. passing `dependencies = ""Config/Needs/website""` will install the dependencies listed in the `Config/Needs/website:` field in the package's DESCRIPTION. Prefixing fields with `Config/Needs` allows them to pass `R CMD check` without a NOTE, so it is the recommended format for these extra dependencies.",1,28,FALSE,NA
remotes,dcf89d46a97a33075c79fb3960bb3550,"`install_*()` family of functions now use the default branch in the repository, not the `master` branch (@​MyKo101,#508).",1,29,FALSE,NA
remotes,983ad596f2b867191523afcf8ae0ba7e,"Internal functions `remote_download()`, `remote_metadata()`, `remote_package_name()` and `remote_sha()` are now exported, so 3rd party packages could provide methods for new remote types (#509, #56)",1,30,FALSE,NA
remotes,3ff27a03fd1d749d94b590844bc8292b,"Internal functions `add_metadata()`, `github_remote()` are now exported. They are mainly for 3rd party extensions and should not be used by most users (#485).",1,31,FALSE,NA
remotes,43741edd89e24968ddc4418ef9c9ebed,"`install_version()` now keeps searching subsequent repositories for the requested version, rather than failing if the version it finds in an early repository is unsuitable. (#305, @​kenahoo)",1,32,FALSE,NA
remotes,f0943800ac4698034cf2b52dccd60b37,"`install_version()` now understands specifications like '\>= 1.0' or '\>= 1.12.0, \< 1.14' to install the first version of the package it can find that satisfies the criteria. (#305, @​kenahoo)",1,33,FALSE,NA
remotes,6425490484db72509392292e3e01d8e3,"`install_version()` now avoids use of `base::url()`, as prior to R 3.6.2 it had a bug when downloading large files (#463)",1,34,FALSE,NA
remotes,56e4abedee68359ed70a8e42f1f0d493,"`parse_submodules()` internal regular expression is now PCRE 2 compatible (#502, @​jan-glx)",1,35,FALSE,NA
remotes,fa76ef1bb386c8f78b376508d9dec0d1,`update_packages()` argument `force` has been deprecated and no longer has any effect (#521),1,36,FALSE,NA
remotes,f593c49ed4d6b94429cd750b6fd8472a,"Another fix for the mixed binary and source dependency issue, it should hopefully be fully squashed now (#296)",1,37,FALSE,NA
remotes,a1da8e7fe9ba757cb90327e005e2c7b7,The upgrade menu is now interruptible in RStudio (#489).,1,38,FALSE,NA
remotes,da2d7fe382f87675c23172c19a62d81f,"Internal GitHub functions now correctly handle cases when characters are not representable in the default locale, but are representable in UTF-8 (#492).",1,39,FALSE,NA
remotes,d2220b582f1979f6b6a4fa70d1988537,Installing mixed binary and source dependencies when the latest versions of some packages do not have binaries yet should now install dependencies in the correct order to prevent load failures (#296),1,40,FALSE,NA
remotes,87a0c67774e9d1d27abf1741cac985b0,"`github_error()` now also works when a GitHub (Enterprise) server does not return information about the rate limit (@​dpprdan, #396, #413).",1,41,FALSE,NA
remotes,8ab93734720b992da95ae5b662a333bf,"`install_gitlab` passes the `quiet` argument on to `gitlab_pat` (@​michaelchirico, #437)",1,42,FALSE,NA
remotes,b349889cf4874ad6faab20d1433c0e83,"`remotes` is now resilient against installed packages that declare `RemoteType: standard` but do not include a `RemoteRepos` or `RemotePkgType` field. In such a case, the values for `getOption(""repos"")` and `getOption(""pkgType"")` will be used (respectively).",1,43,FALSE,NA
remotes,419524d04f6453f8f0b442286f403212,"`install_gitlab()` now installs from repositories in subgroups and with dots in their name. `subdir` is now an explicit argument instead of implicit in `repo` (@​robertdj, #259, #420).",1,44,FALSE,NA
remotes,3071263751c94fdde62b3677bc924958,"`install()` now passes the ellipsis `...` to `install_deps()` (@​Neil-Schneider, #411)",1,45,FALSE,NA
remotes,78664d15a3a2f255957cc67bbdf1d111,The tests have been updated to work with newer versions of callr and R 4.0,1,46,FALSE,NA
remotes,a22f251a091ae9c871c6e6cf23fb7c70,`install_*()` functions gain `build_manual` and `build_vignette` arguments that previously existed in devtools versions \< 2.0 (#353).,1,47,FALSE,NA
remotes,16cea9a7e6d696913730ac0cd2f5cfcd,The interactive menu has been modified to provide more clear instructions on the skipping behavior (#207),1,48,FALSE,NA
remotes,7aa00cd739f57ee6949049572fbd1141,"Credentials are now passed via HTTP headers, to reduce exposure when requests fail (#391).",1,49,FALSE,NA
remotes,54ebcfa52f9fd01c63c3bd73dace9921,`download()` with the external curl download method now always uses `-L` to follow redirects. (#350),1,50,FALSE,NA
remotes,19bd6c1484c02717ed3c4a44add1654d,"`update_packages()` now has a more informative error message when the update fails (#223, #232)",1,51,FALSE,NA
remotes,c4a571f0b355d89f4144a83cd59f957c,`install_git()` now can take credentials from the global option `remotes.git_credentials` (#378).,1,52,FALSE,NA
remotes,b2bd25421ae1206e3fd4dda99f2b951d,`install_git()` now works with SHA references and external git (#389).,1,53,FALSE,NA
remotes,46266d3ceb0343da2dd3d45929600f4c,GitHub remotes that point to branches no longer fail when the branch is later deleted (#274).,1,54,FALSE,NA
remotes,757917e37589849fe4e71077d25b539e,Local remotes whose original location has been moved will no longer error when updating (#370).,1,55,FALSE,NA
remotes,7931a4fc1acd04e39a596c77f889d309,"`update_deps()` no longer sorts the dependencies alphabetically (#296, #301)",1,56,FALSE,NA
remotes,e26dd8b10326da5aba39cbe1421f05c4,`github_resolve_ref()` now takes a `host` parameter (#284),1,57,FALSE,NA
remotes,a0ada891fd66e74210f0f4cf64c367c1,Remotes specific environment variables now accept 0 and 1 as valid values (#238),1,58,FALSE,NA
remotes,71ab7d054e0d859d94742714a4687259,"remotes now uses locking by default when installing binary packages, which avoids issues when installing binaries that are already open in other R processes (#368)",1,59,FALSE,NA
remotes,31115b96d17da486a22ffbb1b28ae933,`update_deps()` no longer fails if a local package no longer exists (#289),1,60,FALSE,NA
remotes,ffa19557f6e2149ba022bc3cec51f4ea,`install_version()` now errors with a more informative message when `type` is not 'source' (#323),1,61,FALSE,NA
remotes,6affaaf1e9dcb8dac6bd9bb735f4ac58,Bioc `remote_sha()` now always returns a character result (#379),1,62,FALSE,NA
remotes,de836a7a51386ae32e29d487deff42bd,"Fix API call for private repositories in `install_gitlab` (@​aornugent, #359, #363)",1,63,FALSE,NA
remotes,046084ace541f07e4795a5f51d6afb1f,"git submodules now work if the submodule file is empty (@​muschellij2, #234)",1,64,FALSE,NA
remotes,2af765b94f7d1ae10bcf6393bc586904,"git submodules now work if the R package is stored in a subfolder (@​pommedeterresautee, #233)",1,65,FALSE,NA
remotes,bd6cb451a9443943e3fab7e4cbdd7597,"`install_gitlab()` no longer adds the access token twice to the request (@​aornugent, #363).",1,66,FALSE,NA
remotes,481f19cbac0fbe011d21afd288514a47,"Bitbucket dependencies now actually use the `BITBUCKET_USER` and `BITBUCKET_PASSWORD` environment variables (@​antoine-sachet, #347).",1,67,FALSE,NA
remotes,ef06245a1f6586bec295ab3b31e54c32,"`parse_deps()` now ignores trailing whitespaces around comparison operators in DESCRIPTION fields (@​LiNk-NY, #366)",1,68,FALSE,NA
remotes,1b14df1fbab7595a626cadd0cd48dd41,"`update.package_dependencies()` now uses the pkg_type for the cran remote rather than a global type attribute, fixing errors when this global attribute is lost (#291, #304).",1,69,FALSE,NA
remotes,107d1d08df8131017538c1f268d6fce9,"Credentials are no longer passed to dependencies, as this breaks dependencies which use different credentials or hosts. If you have relied on this behavior a more robust way to provide the credentials is using the appropriate environment variables, e.g. `GITHUB_PAT`, `BITBUCKET_USER` etc. (@​antoine-sachet, #345).",1,70,FALSE,NA
remotes,222094ab4999dadb109a09eaea74bf10,"The hash of bitbucket hosts is now correctly retrieved (@​antoine-sachet, #344)",1,71,FALSE,NA
remotes,620f55d8eba37eaaf0df459864f1f5ab,"Fix parsing of Additional_Repositories which have a leading newline (@​tmelliott, #251).",1,72,FALSE,NA
remotes,2c2b5666c2ded67252a5b03eea3ae68f,"The order of choices for `upgrade = ""ask""` now puts the stable ones 'All', 'CRAN only', 'none' first, so they always have the same numbers (#287).",1,73,FALSE,NA
remotes,8b209ea8307f7ff884886b156da14ba4,"`update_submodules()` now works with empty .gitmodules files (@​jsilve24, #329).",1,74,FALSE,NA
remotes,21d8183d74ea7dd9ab55fa3acf058d6e,"remotes now understands the ""standard"" remote type, as produced by packages installed from CRAN using `pak` (#309)",1,75,FALSE,NA
remotes,7c05faba4ac0f29df14161984aa669b6,"`install_dev()` now supports ref/pull format, e.g. `install_dev('shiny@​v1.2-rc')` (@​mkearney, #279).",1,76,FALSE,NA
remotes,70c5bf65ba4165d888961b3602786e8e,Fix return type of `install_remote()` when there is a circular dependency (#225),1,77,FALSE,NA
remotes,3742ada7a3a40131e19bb18f57a6a95c,`remote_package_name.github_remote()` now works properly on Windows (#248),1,78,FALSE,NA
remotes,46c04539502cd230e78f38a590c843ab,`install_bioc()` repositories now updated for the Bioconductor 3.8 release. (#239),1,79,FALSE,NA
remotes,39392d0007a8aa864fc7cc5a30d1a843,"`install_*` functions now set the `R_LIBS*` environment variables for child processes correctly on Windows (@​HenrikBengtsson, #253)",1,80,FALSE,NA
remotes,64c7deddac4f69c6abef3b1649037688,"`install_*` functions now support the `R_REMOTES_UPGRADE` environment variable, to set the default for the `upgrade` argument. See README for details (@​kevinushey, #240).",1,81,FALSE,NA
remotes,366261346fe6bbacff88f55321a94426,`install_*` functions perform basic HTTP authentication using HTTP headers now. This fixes an issue with `install_bitbucket()` and private repos (#255).,1,82,FALSE,NA
remotes,02e32d0868b92e5f9e05c379b2b34e98,"`install_*` functions now respect the `download.file.method` option, if `download_file()` is used for HTTP.",1,83,FALSE,NA
remotes,8e5267d8cc59df7398ab1038c8b91e41,"`install_*` functions now use the *libcurl* method, if the `download.file.method` option is not set to a different one, and libcurl is available. Before, the *wininet* method was preferred on Windows. If you rely on the proxy configuration of *wininet*, then you might want to set the `download.file.method` option, or use another way to set up proxies, see `?download.file`.",1,84,FALSE,NA
remotes,2428f0f3dbe65a40b047a18483cbdff9,Remotes without package names are now unconditionally installed (#246).,1,85,FALSE,NA
remotes,7f82cd28a11b61bcbddafd8efc74c659,"`install_github()` now includes a more informative error message when the status code is 404, asking the user to check that they have spelled the repo owner and repo correctly (included in the error message), and that they have the required permissions to access the repository.",1,86,FALSE,NA
remotes,ddefb86d3caa1d9038f82c2695bfe8f5,"`install_*` functions (via the underlying private `install` function) now set `RGL_USE_NULL=""TRUE""` in order to avoid errors when running headless and installing any package using `rgl` (@​jefferis, ##333)",1,87,FALSE,NA
remotes,2b955a317730b2c37437d65900628c9b,"`install_deps()` now installs un-installed remotes packages even when `upgrade = ""never""` (@​ankane, #227)",1,88,FALSE,NA
remotes,18bc4b795e3d85de7cc611c8b5ba9582,`install_version()` now removes metadata added as a byproduct of using `install_url()` internally() (#224),1,89,FALSE,NA
remotes,11829cc51e9e3c5603ba0bd0f9c2aa32,`install()` now avoids converting warnings to errors if `R_REMOTES_NO_ERRORS_FROM_WARNINGS` is unset and `_R_CHECK_FORCE_SUGGESTS_=false`. This avoids failures due to Suggested packages potentially being missing.,1,90,FALSE,NA
remotes,9386fb7cd287e16dad7ff388714840bf,`install_bitbucket()` now works properly with packages in subdirectories (#220),1,91,FALSE,NA
remotes,be65e7f23e2f7f1fba0b44e0d6136459,"`install_deps()` now installs un-installed packages even when `upgrade = ""never""` (#218)",1,92,FALSE,NA
remotes,f408a13f2fdad45f2111c9ff6f19a08f,`install_github()` now bundles a GitHub PAT which is used on Travis to avoid hitting the rate limit too frequently. It also contains a more informative error message when the rate limit is hit on how to setup a GitHub personal access token.,1,93,FALSE,NA
remotes,ffcd7c72a5ddeb5696c42612136f2d7d,"The dialog when `upgrade = ""ask""` now has a 'CRAN only' option, to update only CRAN packages.",1,94,FALSE,NA
remotes,de68ed7e066fac22b31ae98e0b53b06d,No longer include project specific .Rprofile code in the temporary .Rprofile when `R_REMOTES_NO_ERRORS_FROM_WARNINGS=false` (the default).,1,95,FALSE,NA
remotes,02eb6b8e01bad213483adb0ad55338d1,"`update.package_deps()` no longer prompts to install uninstalled dependencies, they are always installed (#203).",1,96,FALSE,NA
remotes,67b3a2f9d2a9ca04e5a83ff986319c86,"`available_packages()`, `available_packages_set()` and `available_packges_reset()` added to allow caching of the `available.packages()` database.",1,97,FALSE,NA
remotes,f663181cbdde7dd286455f81aa1720e8,`install_github()`'s previously deprecated `username` argument has been removed. (#142),1,98,FALSE,NA
remotes,18d91c9c95aa99cb213052866283a90b,"`install_deps()`'s `threads` argument has been removed, use the `Ncpus` argument instead (#153, #154)",1,99,FALSE,NA
remotes,99c8cb6a00207ed74457a1cd2c42de7f,`install_git()`'s `branch` argument has been renamed to `ref` and `branch` has been deprecated.,1,100,FALSE,NA
remotes,b9a3c2a43c520c78069f7d6a481fcef8,"remotes now builds packages by default before installing them. This step uses the pkgbuild package, if available. If not, it calls `R CMD build` directly.",1,101,FALSE,NA
remotes,f2b763937c81de60e23497845c5be636,"New `install_dev()` to install the development version of a CRAN package, based on the URL and BugReports fields in the DESCRIPTION file (#144).",1,102,FALSE,NA
remotes,330411ec7ada6721428d03fa532f0f2c,"`install_()*` functions now temporally put Rtools on the PATH when necessary, as long as the pkgbuild package is installed.",1,103,FALSE,NA
remotes,7ea2b3f8f9bd5cc4827542972017b131,"remotes can be forced to use only its internal code by setting the environment variable `R_REMOTES_STANDALONE` = ""true"". This is useful when installing optional dependencies of remotes on Windows, such as curl or git2r (#147)",1,104,FALSE,NA
remotes,909cc5547b29784fd2a08fe5868e260a,"When installing, remotes now errors on warnings, to catch cases where packages are only partially installed. This often happens on windows when the package dll is opened in another R process (#113).",1,105,FALSE,NA
remotes,1eb9f174a855ddeebc16de4bef5bbca0,"`install_()` functions now pass arguments, including authentication information and upgrade down to dependencies (#53, #86, #87).",1,106,FALSE,NA
remotes,fd8d4ef1fd8a9b1bd51699d4986c4aab,"`install_()` functions allow the selection of a subset of packages to upgrade, in interactive mode, when `upgrade = ""ask""`.",1,107,FALSE,NA
remotes,c874032cbd6ba7ed7747828dc30decf6,"`install_git()` now supports passing credentials, when it is used with `git = ""git2r""` (#106)",1,108,FALSE,NA
remotes,5564dbefbbd0bbb9d855265adc05ba7f,`install_()` functions now return the name of the package(s) which were installed (#55).,1,109,FALSE,NA
remotes,c17a078c514882fbb53465e0ba42c8e2,"git submodules are now installed if they exist and a git client is available (#138, #133, #103, #82).",1,110,FALSE,NA
remotes,34e14a61c900660353b3db0850deb817,"New `install_gitlab()` and `install_bioc()` functions, to install `gitlab` and `bioc` remote types.",1,111,FALSE,NA
remotes,b5ef41c64c61b7d9d38dad82ce1bd203,"remotes now uses the same SHA updating logic for remotes as devtools, including checking if the SHA of the remote has changed since the last installation. (#135)",1,112,FALSE,NA
remotes,8a70f05dc13881dbe7aa1a70983743aa,`install_url()` can now install package binaries on windows (r-lib/devtools#1765),1,113,FALSE,NA
remotes,a72dfe4569bfaeb59564de2d76488fcb,`install_deps()` et al. now do not rewrite the `type` argument from `both` to `binary` to allow falling back to `source`. This fixes various installation failures.,1,114,FALSE,NA
remotes,f5fe36906b6a99a3dfa431de1bf8e6f8,"remotes now looks up GitHub package names locally, if possible, and uses the GitHub REST API (if the curl package is available, and not in standalone mode). This makes the remote lookup about 10x faster when the remote package has not changed since the last install.",1,115,FALSE,NA
remotes,5f695c9a6592474a3e9fab1789e3e136,Using a GITHUB_PAT no longer prints diagnostic messages by default (r-lib/devtools#1752).,1,116,FALSE,NA
remotes,94e010c15dca45303f7ecf8e88e5a333,"remotes now always uses https URLs for R versions that support them (@​ankane, #139)",1,117,FALSE,NA
remotes,dc846b6a9e6bdbb0d09ce88fd5b07a82,"Do not include the BioCextra repository in versions after it was deprecated (R 3.5+, Bioc 3.6+).",1,118,FALSE,NA
remotes,a6a05eaaf19bba29b7ae4d583cf35f2c,`install_()` functions now download tarballs (.tar.gz) files rather than zip archives (.zip). This results in generally smaller files and avoids issues with script permissions being lost and strange behavior of some external unzip programs on Windows (#96).,1,119,FALSE,NA
remotes,a1aeb9e80e909183313dda3cf82d1a4a,Dependency parsing is now more robust to whitespace around the dependency specifications (#73).,1,120,FALSE,NA
remotes,c56639ddb59d921107ff1cfc0c8e6477,"`standardise_dep()` exported, for use in devtools.",1,121,FALSE,NA
remotes,616813d2e8fd10bf6390607d488f8898,`install_local()` now defaults to the current directory.,1,122,FALSE,NA
remotes,c7ec6fb956efbcd4688ddcb2e1db995e,"`install_bitbucket()` now correctly supports authentication, and the `subdir` argument.",1,123,FALSE,NA
remotes,f0f3be0f0f8eddfbe9c7e00d0f3f4b38,"`install_()` functions give a helpful warning when the package has long path names, on Windows. In this case building the package usually fails. (#84, #178).",1,124,FALSE,NA
remotes,c84e1cb6234efbe146b7a5862de92aa1,`install_()` functions have now a more robust way of handling various tar programs on Windows (#172).,1,125,FALSE,NA
remotes,8a4e5f50b839395c20261019145253ee,"`install_()` functions now give a helpful warning on older R versions, on Windows, if `R.home()` contains a space character. Installation usually fails in this case.",1,126,FALSE,NA
remotes,d481323edfc93247fbbdc601c0436e47,"GitHub API errors now give better error messages, including data about the API rate limits.",1,127,FALSE,NA
remotes,9f8358ab675d8ae2bd9c97d2d7aed943,"Accept HTTPS, SSH, or various browser URLs in GitHub repo specification, @​jennybc, #90, #109, #112",1,128,FALSE,NA
remotes,4169a13acd2a2c4375aba12bd03d6e8e,"URL encode GitHub references, to allow installing from non-alphanumeric branch or tags, @​krlmlr #38",1,129,FALSE,NA
remotes,b6be61e996d29c24a654202d0857ac0f,"Better cooperation with proxy servers, and better download method selection on Windows, @​cderv, #45, #46",1,130,FALSE,NA
remotes,33df735bf441b833f4a92e93a0e3e490,"`install_deps()` supports tar balls, #47",1,131,FALSE,NA
remotes,e905114495ebe611945e859aba71e213,"Allow training slash in GitHub repo specification, #54",1,132,FALSE,NA
remotes,3927664aedc85efbba1a4f697aae8c6a,"Work around on some Linux systems, where unzip is set to the empty string, @​HenrikBengtsson, #57",1,133,FALSE,NA
remotes,72ea7695932a356237709be6583435ca,"Check for circular dependencies while installing, #31",1,134,FALSE,NA
remotes,4eb3c2a4c94c1cce8528f25734077777,Updated Bioconductor repo URLs for newer BioC versions,1,135,FALSE,NA
rex,56e636950b88bd268084b17bb67e3b10,Kevin Ushey is now the maintainer,1,1,FALSE,NA
rex,6f938e79999541ff901e386197025cf8,`%>%` is no longer imported and then re-exported from rex,1,2,FALSE,NA
rex,7bf426885b092927d61a588cb4556ce2,Updating tests to work with testthat version 1.0.2.9000.,1,3,FALSE,NA
rex,1950f14e785c2ab8e3fe4b5281aa23ee,"Add `m`, `matches` and `s`, `substitutes` aliases for `re_matches` and `re_substitutes`.",1,4,FALSE,NA
rex,4da33de9be09a6c71031bf20b10cb5c9,Vignette tweak for ggplot2 2.0.0,1,5,FALSE,NA
rex,7c9d3fce7b7b6ce660c8b1a08a141dad,Only print startup message some of the time.,1,6,FALSE,NA
rex,d7301da414829da8e19ccde8c38eda8b,Move register for magrittr pipe to `.onLoad()`,1,7,FALSE,NA
rex,6ea945aa30f5a871c116b9a0dcb529d0,Work around ggplot2 bug with windows fonts,1,8,FALSE,NA
rex,4b39697da684244ee9b9aea6d8d1e8a1,Include the capture results even if `locations = TRUE`,1,9,FALSE,NA
rex,7664e15d9f02a8b03af31c76e3c76217,Add `:` operator for character ranges,1,10,FALSE,NA
rex,8f6f8e870ed913e56c68024abb0a76b6,Remove duplicate regex functino,1,11,FALSE,NA
rex,75ffc23a85bc364a14d07ffeb8164142,Don't re-compute missing names,1,12,FALSE,NA
rex,9920998d37d2844545a731777d9dd62e,Reduce code duplication,1,13,FALSE,NA
rex,cff801792afed852d45e477c935748c6,Add examples for lookarounds,1,14,FALSE,NA
rex,04904550eefce27f547e4171bac04bff,Add a newline shortcut,1,15,FALSE,NA
rex,663d38a25c1f8c51053a5cdadfa58b5c,add register_shortcuts to allow use of rex in external packages without spurious NOTES.,1,16,FALSE,NA
rex,db469bcaec543cfe11b8e58b30e6501f,"re_matches now has a ""locations"" argument, which returns the start and end locations of the match or capture(s).",1,17,FALSE,NA
rex,dafbb86f72ec047d3d17871e70f74a5b,Simplify regular expressions generated from 'some_of' functions.,1,18,FALSE,NA
rex,290a3b0eda457521643621d250b4235e,"backslashes (""\\"") are now properly escaped.",1,19,FALSE,NA
rex,728281837ed9bd8a2b64a4319078f5f0,Improve Rex mode documentation (#21 @​Ironholds),1,20,FALSE,NA
rex,b92d6bffcc900d88aa613ffdc4cb94b9,"Improve Log parsing Vignette copy and Title (#18, #20 @​Ironholds)",1,21,FALSE,NA
rex,1e7013d9fbf2a54e3871e07f9079f99b,Add links to GitHub and issues page in DESCRIPTION,1,22,FALSE,NA
roxygen2,1e42e54b6a84123a65195188635060ca,S3 method export warning no longer fails if class contains `{` or `}` (#1575).,1,1,FALSE,NA
roxygen2,c698ce9cb2d728510450a83ba30c7d34,"`@​family` lists are now ordered more carefully, ""foo1"" comes after ""foo"" (#1563, @​krlmlr).",1,2,FALSE,NA
roxygen2,8f39cfc9b3fe2231d1a8b4efc1894943,"`@​importFrom` works again for quoted non-syntactic names, e.g. `@​importFrom magrittr ""%>%""` or `` @​importFrom rlang `:=` `` (#1570, @​MichaelChirico). The unquoted form `@​importFrom magrittr %>%` continues to work. Relatedly, `@​importFrom` directives matching no known functions (e.g. `@​importFrom utils plot pdf`) produce valid NAMESPACE files again.",1,3,FALSE,NA
roxygen2,b046d5828d34e45bb2490fbbbe09c386,"Multi-line `@​rawNamespace` no longer break re-runs of `namespace_roclet()` (#1572, @​MichaelChirico).",1,4,FALSE,NA
roxygen2,05bd2d029ade5aa67747045d35b09f28,"`@​docType package` now works more like documenting `""_PACKAGE""`, creating a `{packagename}-package` alias and clearly suggesting that you should switch to `""_PACKAGE""` instead (#1491).",1,5,FALSE,NA
roxygen2,34d0cd37f4a5d8d6ff01bce84514e3c3,`_PACKAGE` will no longer generate an alias for your package name if a function of the same name exists (#1160).,1,6,FALSE,NA
roxygen2,b5d8d33f972be75fc941cd05fa063f57,"The NAMESPACE roclet now reports if you have S3 methods that are missing an `@​export` tag. All S3 methods need to be `@​export`ed (which confusingly really registers the method) even if the generic is not. This avoids rare, but hard to debug, problems (#1175). You can suppress the warning with `@​exportS3Method NULL` (#1550).",1,7,FALSE,NA
roxygen2,3b6f8521b2f12b25c91e0fa179cbff20,"The `NAMESPACE` roclet once again regenerates imports *before* loading package code and parsing roxygen blocks. This has been the goal for a long time (#372), but we accidentally broke it when adding support for code execution in markdown blocks. This resolves a family of problems where you somehow bork your `NAMESPACE` and can't easily get out of it because you can't re-document the package because your code doesn't reload.",1,8,FALSE,NA
roxygen2,ded87f495bf5c72770a4403904c17b9f,"If you document a function from another package it is automatically imported. Additionally, if you set `@​rdname` or `@​name` you can opt out of the default `reexports` topic generation and provide your own docs (#1408).",1,9,FALSE,NA
roxygen2,98e1513ccb6602d8c64e0ae72b2ad241,Generate correct usage for S4 methods with non-syntactic class names.,1,10,FALSE,NA
roxygen2,4c7c851134197c219329e2b588ce898f,The `ROXYGEN_PKG` env var provides the name of the package being documented (#1517).,1,11,FALSE,NA
roxygen2,548de1ba7e97d5887fa1432677299365,`@​describeIn foo` now suggests that you might want `@​rdname` instead (#1493). It also gives a more informative warning if you use it with an unsupported type (#1490).,1,12,FALSE,NA
roxygen2,7f06775ee9e789304f04ecad382a9508,"In `DESCRIPTION`, URLs containing escapes in `URL` and `BugReports` are now correctly handled (@​HenningLorenzen-ext-bayer, #1415). Authors can now have multiple email addresses (@​jmbarbone, #1487).",1,13,FALSE,NA
roxygen2,eceede791a07d98d0b9924e5f0cbc00d,`escape_examples()` is now exported (#1450).,1,14,FALSE,NA
roxygen2,83c07bf2a055d6a7db95a860cff3458d,"`@​exportS3Method` provides the needed metadata to generate correct usage for S3 methods, just like `@​method` (#1202).",1,15,FALSE,NA
roxygen2,7471fd5c2e3d5939fb1e614737d829eb,`is_s3_generic()` now ignores non-function objects when looking for a candidate function. I believe this is closer to how R operates.,1,16,FALSE,NA
roxygen2,b24bbe5157b40ccae0c772f50153c1dd,`@​import` and friends are now ignored if they try to import from the package being documented. This is useful to add self-dependencies in standalone files meant to be used in other packages (r-lib/usethis#1853).,1,17,FALSE,NA
roxygen2,09bedbd83e1a22e4e7b1a57dbabac579,"`@​importFrom` throws a friendlier error if you try and import a non-existing functions (@​MichaelChirico, #1409).",1,18,FALSE,NA
roxygen2,77bc16c73f85cdae64eab92e51867d31,`@​include` now gives an informative warning if you use a path that doesn't exist (#1497).,1,19,FALSE,NA
roxygen2,274d281d045abe4ae5b8e0a015f2caf2,`@​inherit` can now also inherit from `@​format` (#1293).,1,20,FALSE,NA
roxygen2,d417cb77635f64d486dad60bddbc1e2b,roxygen2 now supports HTML blocks in markdown. They are only included in the HTML manual. They can also be produced as the output of code chunks.,1,21,FALSE,NA
roxygen2,ae6329bfc719d251feb9f116c0590713,Improved support for RStudio IDE.,1,22,FALSE,NA
roxygen2,08d7c6374cec62c839058e1b83042f47,`@​includeRmd` calls `local_reproducible_output()` to make code run in included `.Rmd`s more consistent with other sources (#1431).,1,23,FALSE,NA
roxygen2,2eb0348092b236b1be5cba2d5c00db0c,Fix duplicated argument in `roxy_block()` to avoid CRAN removal.,1,24,FALSE,NA
roxygen2,c052ab4d72969fe25f1c7b3d31982852,"All built-in tags are now documented so that you can do (e.g.) `?""@​param""` to get a basic description of `@​param` and a pointer where to learn more (#1165). This is powered by a new `tags_list()` lists all tags defined by roxygen2 and `tags_metadata()` provides some useful information about them for use by (e.g.) IDEs (#1375).",1,25,FALSE,NA
roxygen2,e05f076967742647e0904f483ed51ba7,"`@​describeIn` can now be used to combine more types of functions (generics, methods and other functions) into a single topic. The resulting section organises the functions by type (#1181) and displays methods like function calls. Methods are recognized only if they extend the generic in the destination,or if the destination can heuristically be identified as a constructor.",1,26,FALSE,NA
roxygen2,241c516088e63e79cd6ceeadfb482a05,Code evaluated in inline markdown code chunks and `@​eval`/`@​evalRd`/ `@​evalNamespace` is now evaluated in an environment designed to be more reproducible and to suppress output that won't work in Rd (e.g. turning off colour and unicode support in cli) (#1351). They now also set knitr options `comment = #>` (#1380) and `collapse = TRUE` (#1376).,1,27,FALSE,NA
roxygen2,e230f387a9bc1ae3fe057e57c78efbce,"`@​export` will now export both the class and constructor function when applied to expressions like `foo <- setClass(""foo"")` (#1216).",1,28,FALSE,NA
roxygen2,2587027a693284fe36a4a72da8b4bb13,`@​includeRmd` now gives better feedback when it fails (#1089).,1,29,FALSE,NA
roxygen2,364c13bbc73e99540558dcfede409869,New `knitr_chunk_options` option (in the `Roxygen` entry of `DESCRIPTION` or in `man/roxygen/meta.R`) is added to the knitr chunk options that roxygen2 uses for markdown code blocks and inline code (#1390).,1,30,FALSE,NA
roxygen2,df8a02c5a3cfb1598c9c933112fdf415,"PDF figures are only included the PDF manual, and SVG figures are only included in the HTML manual (#1399).",1,31,FALSE,NA
roxygen2,9121bb8e5f91d49d9efc90ec2611faed,You can now use alternative knitr engines in markdown code blocks (#1149).,1,32,FALSE,NA
roxygen2,73cc09f80252b5db94535b0b4e2a22d8,"Generated HTML for code blocks never includes ""NA"" for language (#1251).",1,33,FALSE,NA
roxygen2,6f628361557545d012716cbb346c2bfc,Using a level 1 heading in the wrong tag now gives a more useful warning (#1374).,1,34,FALSE,NA
roxygen2,dcec09a7f29d5a5aee8f0dc0c048b3f9,Fix bug interpolating the results of indented inline RMarkdown (#1353).,1,35,FALSE,NA
roxygen2,be08cfdb0739e7cbbe70203322da5a45,"If you have a daily build of RStudio, the lists of changed Rd files are now clickable so you can immediately see the rendered development documentation (#1354).",1,36,FALSE,NA
roxygen2,67941d9601ab015dbfe4766198ab9bba,"R6 documentation no longer shows inherited methods if there aren't any (#1371), and only links to superclass docs if they're actually available (#1236).",1,37,FALSE,NA
roxygen2,889a8a627be1de1562fa37ed055c6ace,Automated usage no longer mangles nbsp in default arguments (#1342).,1,38,FALSE,NA
roxygen2,28a6e165573a5da44d011f839aa06399,"The NAMESPACE roclet now preserves all existing non-import directives during it's first pre-processing pass. This eliminates the ""NAMESPACE has changed"" messages and reduces the incidence of namespace borking (#1254).",1,39,FALSE,NA
roxygen2,8e1c3d4e7ab84a6007b0b8c734bd2a30,"`@​inheritParams` now only inherits exact multiparameter matches, so if you're inheriting from a function with `@​param x,y` you'll only get the parameter documentation if your function needs docs for both x and y (#950).",1,40,FALSE,NA
roxygen2,3aa2cae644e19435e03afa361077088d,"All warning messages have been reviewed to be more informative and actionable (#1317). `@​title` now checks for multiple paragraphs. `@​export` gives a more informative warning if it contains too many lines. (#1074). All tags warn now if only provide whitespace (#1228), and problems with the first tag in each block are reported with the correct line number (#1235).",1,41,FALSE,NA
roxygen2,a0473a0b113a4a97ebbb3014ff273933,"If you have a daily build of RStudio, roxygen2 warnings will now include a clickable hyperlink that will take you directly to the problem (#1323). This technology is under active development across the IDE and the cli package but is extremely exciting.",1,42,FALSE,NA
roxygen2,c153a4f8b084b941bb49de0426a142b2,roxygen2 can once again read UTF-8 paths on windows (#1277).,1,43,FALSE,NA
roxygen2,7688cb606bde18dc611e00bb40794c3d,"`@​author`s are de-duplicated in merged documentation (@​DanChaltiel, #1333).",1,44,FALSE,NA
roxygen2,b1affcb1c7c7bace5508ca06b9dbe807,`@​exportS3method pkg::generic` now works when `pkg::generic` isn't imported by your package (#1085).,1,45,FALSE,NA
roxygen2,3545dacf1710ec23491d1cfaa0f3f999,`@​includeRmd` is now adapted to change in rmarkdown 2.12 regarding math support in `github_document()` (#1304).,1,46,FALSE,NA
roxygen2,2592c161996947f8746894d7f13135fd,"`@​inherit` and friends perform less aggressive link tweaking, eliminating many spurious warnings. Additionally, when you do get a warning, you'll now always learn which topic it's coming from (#1135). Inherited `\ifelse{}{}{}` tags are now inserted correctly (without additional `{}`) (#1062).",1,47,FALSE,NA
roxygen2,7d2197208c269c75217fce3d7d7b4bbf,"`@​inherit` now supports inheriting ""Notes"" with `@​inherit pkg::fun note` (@​pat-s, #1218)",1,48,FALSE,NA
roxygen2,37e3ac443e5559caa3c96e82a2442d27,Automatic `@​usage` now correctly wraps arguments containing syntactically significant whitespace (e.g anonymous functions) (#1281) and non-syntactic values surrounded by backticks (#1257).,1,49,FALSE,NA
roxygen2,d7413e9a34d8845dcf9f432c36a3afb0,Markdown:,1,50,FALSE,NA
roxygen2,d7413e9a34d8845dcf9f432c36a3afb0,"• Code blocks are always wrapped in `<div class=""sourceCode"">` even if the language is unknown (#1234).",2,51,FALSE,Markdown:
roxygen2,d7413e9a34d8845dcf9f432c36a3afb0,• Links with markup (e.g. `` [foo `bar`][target] ``) now cause an informative warning instead of generating invalid Rd.,2,52,FALSE,Markdown:
roxygen2,d7413e9a34d8845dcf9f432c36a3afb0,• Curly braces in links are now escaped (#1259).,2,53,FALSE,Markdown:
roxygen2,d7413e9a34d8845dcf9f432c36a3afb0,"• Inline R code is now powered by knitr. Where available, (knit) print methods are applied (#1179). This change alters outputs and brings roxygen in line with console and R markdown behavior. `x <- ""foo""` no longer inserts anything into the resulting documentation, but `x <- ""foo""; x` will. This also means that returning a character vector will insert commas between components, not newlines.",2,54,FALSE,Markdown:
roxygen2,546af7ec54472549451b58794605ab6f,roxygen2 no longer generates invalid HTML (#1290).,1,55,FALSE,NA
roxygen2,e281830b984860fdd33a913e0d3e07b8,"DOIs, arXiv links, and urls in the `Description` field of the `DESCRIPTION` are now converted to the appropriate Rd markup (@​dieghernan, #1265, #1164). DOIs in the `URL` field of the `DESCRIPTION` are now converted to Rd's special `\doi{}` tag (@​ThierryO, #1296).",1,56,FALSE,NA
roxygen2,6af64e5765ab20373d028d44d12667d7,The new `@​examplesIf` tag can be used to create conditional examples. These examples only run if a specified condition holds (#962).,1,57,FALSE,NA
roxygen2,57b1a96db523828eb46e359b64934e24,roxygen2 is now licensed as MIT (#1163).,1,58,FALSE,NA
roxygen2,3cd7c7efa13d9a87e41418502e5d468c,Bug fix for upcoming stringr 2.0.0 release.,1,59,FALSE,NA
roxygen2,f565f0fde4f851e493d4ac69518c2c2d,Code blocks with language now add `sourceCode` to the generated div; this makes syntax highlighting more consistent across downlit/pandoc/knitr/roxygen2.,1,60,FALSE,NA
roxygen2,868bfff042f3ac6a48bb657632354fa7,"Percent signs in markdown link targets, e.g. `[text](https://foo/ba%20r)` are now handled correctly (#1209).",1,61,FALSE,NA
roxygen2,2ac67b1522e9a613668b9f6365aa0fdd,"When processing cross package markdown links (e.g. `[pkg::fun()]`), roxygen2 now looks up the file it needs to link to, instead of linking to the topic, to avoid ""Non-file package-anchored links"" `R CMD check` warnings.",1,62,FALSE,NA
roxygen2,9229eb346a78ad66544844bcb770896a,R6 methods and re-exported functions are always sorted in the C locale; this ensures they're always sorted the same way in every environment (#1077).,1,63,FALSE,NA
roxygen2,1665a0f79979a628dc0ce654e17dfb30,roxygen2 now supports inline markdown code and code chunks inside Rd tags. In particular in `\out{}` (#1115).,1,64,FALSE,NA
roxygen2,91199e0482d30e922830c046dccdcca8,"roxygen2 now supports inline markdown code and also code chunks, using the same notation as the knitr package. For example:",1,65,FALSE,NA
roxygen2,91199e0482d30e922830c046dccdcca8,"```
#' This manual was generated at: `r Sys.time()`.
#' ...
#' `mtcars` is a data frame with `r ncol(mtcars)` columns, here
#' is a summary of them:
#'
#' ```{r}
#' summary(mtcars)
#' ```
```",1,66,TRUE,NA
roxygen2,91199e0482d30e922830c046dccdcca8,"See `vignette(""rd-formatting"")` for details.",1,66,FALSE,NA
roxygen2,f7db0edb327549358981e8710fa54702,"roxygen2 now keeps using Windows (CR LF) line endings for files that already have CR LF line endings, and uses LF for new files (#989).",1,67,FALSE,NA
roxygen2,88348244bd2311b0ee575df25e1bb190,Auto-generated package documentation can now handle author ORCID comments containing full url (#1040).,1,68,FALSE,NA
roxygen2,3fa1a9b1936072a559ad9b150e0a811c,Hyperlinks to R6 methods are also added in the PDF manual (#1006).,1,69,FALSE,NA
roxygen2,a8d7af8f6215b5256e3cbc7bf91d4ab3,Empty annotations (alternate text) for figures added via markdown are now omitted. This caused issues when generating pkgdown web sites (#1051).,1,70,FALSE,NA
roxygen2,5b3aab0531829b7ae1d55f08bf2bbd9e,"Roxygen metadata can now have a `packages` element, giving a character vector of package names to load. This makes it easier to use extension package that provide new tags for existing roclets (#1013). See `?load_options` for more details.",1,71,FALSE,NA
roxygen2,5b3aab0531829b7ae1d55f08bf2bbd9e,"```
``` yaml
Roxygen: list(markdown = TRUE, packages = ""roxygenlabs"")
```",1,72,TRUE,NA
roxygen2,7eb06211bee6fa964efb2633c0b7123b,`@​evalNamespace()` works again (#1022).,1,73,FALSE,NA
roxygen2,93ad74986c7f913fd427f194c17c747f,"`@​description NULL` and `@​details NULL` no longer fail; instead, these tags are ignored, except for `@​description NULL` in package level documentation, where it can be used to suppress the auto-generated Description section (#1008).",1,74,FALSE,NA
roxygen2,5bca8afcd59f04efd736088a5651462f,Multiple `@​format` tags are now combined (#1015).,1,75,FALSE,NA
roxygen2,dac2a8edc9f4294c058848654a167778,"The warning for `@​section` titles spanning multiple lines now includes a hint that you're missing a colon (@​maelle, #994).",1,76,FALSE,NA
roxygen2,a6669b3a07a7b45af7a1133d82b33045,Can now document objects created with `delayedAssign()` by forcing evaluation at documentation time (#1041),1,77,FALSE,NA
roxygen2,82e90a376b92adc4aea2d99d93289458,`\example{}` escaping has been improved (again!) so that special escapes within strings are correctly escaped (#990).,1,78,FALSE,NA
roxygen2,983258bf787c5e726c5e7368819b8c3d,"`@​includeRmd` has now an optional second argument, the top level section the included file will go to. It defaults to the details section (#970). Code chunks are now evaluated in a child of the global environment (#972).",1,79,FALSE,NA
roxygen2,e873dc924a0aa6e87168034a1c79bc00,`@​inheritParams` does a better job of munging links. Links of the form `\link[=topic]{text}` are now automatically converted to `\link[pkg:topic]{text}` when inherited from other packages (#979). Internal `has_topic()` helper has a better implementation; this means that links should no longer be munged unnecessarily (#973).,1,80,FALSE,NA
roxygen2,6d75e54bdfa35c400b986ae900d2b7a8,"`\example{}` escaping has been considerably simplified (#967), and is now documented in `escape_example()`.",1,81,FALSE,NA
roxygen2,62bd9d11776ab74b3c52ad1d7e50553e,"In `\usage{}`, S3/S4 methods are no longer double-escaped (#976).",1,82,FALSE,NA
roxygen2,9ad94b6e0f5d58a547a7020a9003f1fd,Markdown tables with cells that contain multiple elements (e.g. text and code) are now rendered correctly (#985).,1,83,FALSE,NA
roxygen2,1e9a858de9cc9194e1f06b133be23e09,"Markdown code blocks containing operators and other special syntax (e.g. `function`, `if`, `+`) now converted to `\code{}` not `\verb{}` (#971).",1,84,FALSE,NA
roxygen2,a37cd4be0706f2ea2be7e264d9b50933,"`@​includeRmd {path.Rmd}` converts an `.Rmd`/`.md` file to `.Rd` and includes it in the manual page. This allows sharing text between vignettes, `README.Rmd`, and the documentation. See `vignette(""rd"")` for details (#902).",1,85,FALSE,NA
roxygen2,da4d80af21acfd8837158fed1c6182ea,"`@​order {n}` tag controls the order in which blocks are processed. You can use it to override the usual ordering which proceeds from the top of each file to the bottom. `@​order 1` will be processed before `@​order 2`, and before any blocks that don't have an explicit order set (#863).",1,86,FALSE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,"`@​exportS3Method` tag allows you to generate `S3method()` namespace directives (note the different in capitalisation) (#796). Its primary use is for ""delayed"" method registration, which allows you to define methods for generics found in suggested packages (available in R 3.6 and greater). For example,",1,87,FALSE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,"```
#' @​exportS3Method package::generic
generic.foo <- function(x, ...) {

}
```",1,88,TRUE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,will generate,1,88,FALSE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,"```
S3method(package::generic, foo)
```",1,89,TRUE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,(See `vctrs::s3_register()` you need a version that works for earlier versions of R). It also has a two argument form allows you generate arbitrary `S3method()` directives:,1,89,FALSE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,"```
#' @​exportS3Method generic class
NULL
```",1,90,TRUE,NA
roxygen2,9293cb7102ae7a1d11513e0787dff761,"```
S3method(generic, class)
```",1,91,TRUE,NA
roxygen2,b3d0e3dd7e5f8ad7286f3d13f5e09eae,New `@​returns` is an alias for `@​return` (#952).,1,92,FALSE,NA
roxygen2,8e32f1e6ff132809c72c38d3935200c3,Rd comments (`%`) are now automatically escaped. You will need to replace any existing uses of `\%` with `%` (#879).,1,93,FALSE,NA
roxygen2,b08759535139583edd0eae78ad549734,"Markdown headings are supported in tags like `@​description`, `@​details`, and `@​return` (#907, #908). Level 1 headings create a new top-level `\section{}`. Level 2 headings and below create nested `\subsections{}`.",1,94,FALSE,NA
roxygen2,b9a7a2693e0f99b775b1c87f049b7e53,Markdown tables are converted to a `\tabular{}` macro (#290). roxygen2 supports the GFM table syntax which looks like this:,1,95,FALSE,NA
roxygen2,b9a7a2693e0f99b775b1c87f049b7e53,"```
``` md
| foo | bar |
| --- | --- |
| baz | bim |
```",1,96,TRUE,NA
roxygen2,1116857b4d9a53d8602d3335b8b3513d,"Markdown code (`` `foofy` ``) is converted to to either `\code{}` or `\verb{}`, depending on whether it not it parses as R code. This better matches the description of `\code{}` and `\verb{}` macros, solves a certain class of escaping problems, and should make it easier to include arbitrary ""code"" snippets in documentation without causing Rd failures (#654).",1,97,FALSE,NA
roxygen2,239ae381bc5b77f73f6a4e31e30b79a4,"Markdown links can now contain formatting, e.g. `[*mean*][mean]` will now generate `\link[=mean]{\emph{mean}}`.",1,98,FALSE,NA
roxygen2,82af8b635c78788cb0f1ba2b3d79f868,"Use of unsupported markdown features (e.g. blockquotes, inline HTML, and horizontal rules) generates informative error messages (#804).",1,99,FALSE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,"The default formatting for function usage that spans multiple lines has now changed. Previously, the usage was wrapped to produce the smallest number of lines, e.g.:",1,100,FALSE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,"```
parse_package(path = ""."", env = env_package(path), 
  registry = default_tags(), global_options = list())
```",1,101,TRUE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,Now it is wrapped so that each argument gets its own line (#820):,1,101,FALSE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,"```
parse_package(
  path = ""."",
  env = env_package(path),
  registry = default_tags(),
  global_options = list()
)
```",1,102,TRUE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,If you prefer the old behaviour you can put the following in your `DESCRIPTION`:,1,102,FALSE,NA
roxygen2,769e7fc82d2ca284f675ce86e575798e,"```
Roxygen: list(old_usage = TRUE)
```",1,103,TRUE,NA
roxygen2,8693ad5a1a9e14b9b327de76bcec1682,"`load_pkgload()`, the default, uses pkgload. Compared to the previous release, this now automatically recompiles your package if needed.",1,104,FALSE,NA
roxygen2,b70fa5a49847ae8be23f143d89b7d22c,"`load_source()` attaches required packages and `source()`s all files in `R/`. This is a cruder simulation of package loading than pkgload (and e.g. is unreliable if you use S4 extensively), but it does not require that the package be compiled. Use if the default strategy (used in roxygen2 6.1.0 and above) causes you grief.",1,105,FALSE,NA
roxygen2,db6748097a12d98d9db1e753fbce80be,`load_installed()` assumes you have installed the package. This is best used as part of a bigger automated workflow.,1,106,FALSE,NA
roxygen2,bce7e7dc0e1aa63746c84d830ebc8444,As well as storing roxygen options in the `Roxygen` field of the `DESCRIPTION` you can now also store them in `man/roxygen/meta.R` (#889). The evaluation of this file should produce a named list that maps option names to values.,1,107,FALSE,NA
roxygen2,130e05240678cfcdb959e1f58b009831,roxygen now also looks for templates in `man/roxygen/templates` (#888).,1,108,FALSE,NA
roxygen2,43c6759acc73bc841dd2183993288ff7,"New `rd_family_title` option: this should be a named list, and is used to overrides the default ""Other family:"" prefix that `@​family` generates. For example, to override the prefix generated by `@​family foo` place `rd_family_title <- list(foo = ""Custom prefix: "")` in `man/roxygen/meta.R` (#830, @​kevinushey).",1,109,FALSE,NA
roxygen2,be58eaa4b684839e13792b372b1df83f,Rd comments (`%`) are automatically escaped in markdown formatted text. This is a backward incompatible change because you will need to replace existing uses of `\%` with `%` (#879).,1,110,FALSE,NA
roxygen2,3108b96259e8ace1ee2af720f6021461,"Using `@​docType package` no longer automatically adds `-name`. Instead document `_PACKAGE` to get all the defaults for package documentation, or use `@​name` to override the default file name.",1,111,FALSE,NA
roxygen2,5685d044809bdd55e7aa3d8ff9c8ca8a,"`@​S3method` has been removed. It was deprecated in roxygen2 4.0.0 released 2014-05-02, over 5 years ago.",1,112,FALSE,NA
roxygen2,4b6bc815a03994b7d2605e1ad9c691a0,"Using the old `wrap` option will now trigger a warning, as hasn't worked for quite some time. Suppress the error by deleting the option from your `DESCRIPTION`.",1,113,FALSE,NA
roxygen2,0ce957b32f0c496c364ddbc65e9ca492,The previously internal data structures used to represent blocks and tags have been overhauled. They are now documented and stable. See `roxy_block()` and `roxy_tag()` for details.,1,114,FALSE,NA
roxygen2,f97bf6fffe307909134f63f4bc700675,"`roclet_tags()` is no longer used; instead define a `roxy_tag_parse()` method. For example, if you create a new `@​mytag` tag, it will generate a class of `roxy_tag_mytag`, and will be parsed by `roxy_tag_parse.roxy_tag_mytag()` method. The method should return a new `roxy_tag()` object with the `val` field set. This means that the `registry` argument is no longer needed and has been removed.",1,115,FALSE,NA
roxygen2,ab01f6497bf9b2800b1a4b8cb7d96f92,`rd_section()` and `roxy_tag_rd()` are now exported so that you can more easily extend `rd_roclet()` with your own tags that generate output in `.Rd` files.,1,116,FALSE,NA
roxygen2,22f8506fa9afbeb43138ab23f7d8854d,"`global_options` is no longer passed to all roclet methods. Instead, use `roxy_meta_get()` to retrieve values stored in the options (#918).",1,117,FALSE,NA
roxygen2,fc1d60bc936d9d01068d41df5246c3ed,"`tag_two_part()` and `tag_words()` are now simple functions, not function factories.",1,118,FALSE,NA
roxygen2,a0c31fa77565bbef1f93ae294b4916db,`tag_markdown_restricted()` has been removed because it did exactly the same thing as `tag_markdown()`.,1,119,FALSE,NA
roxygen2,92a34b3a36dcbabb9d399eb298aedbd0,Empty roxygen2 lines at the start of a block are now silently removed (#710).,1,120,FALSE,NA
roxygen2,406ed1d34a672e4ffa96242caa3f4133,Whitespace is automatically trimmed off the `RoxygenNote` field when comparing the installed version of roxygen2 to the version used to generate the documentation (#802).,1,121,FALSE,NA
roxygen2,76542e609aaf85871940a2367e6f5815,"Files generated on Windows systems now retain their existing line endings, or use unix-style line endings for new files (@​jonthegeek, @​jimhester, #840).",1,122,FALSE,NA
roxygen2,5789f5ee546a30e36512fa3d7327b654,"roxygen2 now recognises fully qualified S4 functions like `methods::setGeneric()`, `methods::setClass()` and `methods::setMethod()` (#880).",1,123,FALSE,NA
roxygen2,a6ac59779ed111a034b7412a8a2f9806,"Package documentation now converts ORCIDs into a useful link (#721). The package logo (if found at `man/images/logo.png`) is now scaled to 120px wide (@​peterdesmet, #834).",1,124,FALSE,NA
roxygen2,c7e753b1b2b943313bb2074213482e7e,Documenting an S4 method that has a `.local()` wrapper no longer fails with an obscure error message (#847).,1,125,FALSE,NA
roxygen2,0ce0a7d6d80f0e7a1af7336377b62b87,Functions documented in `reexports` are now sorted alphabetically by package (#765).,1,126,FALSE,NA
roxygen2,07daf3c15bb0df74a327c53546d2581c,"`@​describeIn` can now be used with any combination of function types (#666, #848).",1,127,FALSE,NA
roxygen2,0edb234a8f0ca65a3b2cb8a22251784c,"`@​description` and `@​detail` tags are automatically generated from the leading description block, and now have correct line numbers (#917).",1,128,FALSE,NA
roxygen2,87e128bf351a57a78575b8d8aa791682,`@​example` and `@​examples` are interwoven in the order in which they appear (#868).,1,129,FALSE,NA
roxygen2,e2d24b6b0ca3a29e250499b504a2c76c,"In `@​examples`, escaped `'` and `""` in strings are no longer doubly escaped (#873).",1,130,FALSE,NA
roxygen2,ba7e577b5688deee970b5e001e54a3b6,"`@​family` automatically adds `()` when linking to functions (#815), and print each link on its own line (to improve diffs).",1,131,FALSE,NA
roxygen2,4658f6fc70a6aac3ef34a25ff14fadb1,"When `@​inherit`ing from external documentation, `\link{foo}` links are automatically transformed to `\link{package}{foo}` so that they work in the generated documentation (#635). `\href{}` links in external inherited are now inserted correctly (without additional `{}`) (#778).",1,132,FALSE,NA
roxygen2,e3816ab0a91c1ed207d87b2a46be9065,`@​inherit`ing a a function with no arguments no longer throws a confusing error message (#898).,1,133,FALSE,NA
roxygen2,cdf8c66085559e41776f5c72d85cf7f6,"`@​inheritDotParams` automatically ignores arguments that can't be inherited through `...` because they are used by the current function (@​mjskay, #885).",1,134,FALSE,NA
roxygen2,50c19d7da6c9310e081ba8e9a1910e24,"`@​inheritDotParams` includes link to function and wraps parameters in `\code{}` (@​halldc, #842).",1,135,FALSE,NA
roxygen2,d8bab05799b1b1a6dd9ab3c4aae4c80e,"`@​inheritDotParams` can be repeated to inherit dot docs from multiple functions (@​gustavdelius, #767).",1,136,FALSE,NA
roxygen2,31f45303eb3d9c8f3b0c9e6f4fbf19da,"`@​inheritDotParams` avoids multiple `...` arguments (@​gustavdelius, #857).",1,137,FALSE,NA
roxygen2,774a70caa967331d7c0245dde3ed9d62,`@​inheritParams` ignores leading dots when comparing argument names (#862).,1,138,FALSE,NA
roxygen2,58aea2de35625d44f980d233205ed354,`@​inheritParams` warns if there are no parameters that require documentation (#836).,1,139,FALSE,NA
roxygen2,89185c3da919ca1fd82fd4d51442c7f3,`@​param` containing only whitespace gives a clear warning message (#869).,1,140,FALSE,NA
roxygen2,e124efc4a545fac431a52d061cb40300,"Multiple `@​usage` statements in a single block now generate a warning. Previously, the first was used without a warning.",1,141,FALSE,NA
roxygen2,7255b43a5712bfbed56a2e3a30a1e24f,"Now specifically imports recent version of desc package (\>= 1.2.0) to fix various parsing issues (@​crsh, #773, #777, #779). Multi-line DESCRIPTION collate directives now correctly parsed on windows (@​brodieG, #790).",1,142,FALSE,NA
roxygen2,b04b0fdfe68a009142255e99d477c93a,`roxygenise()` no longer recompiles packages containing src code (#784).,1,143,FALSE,NA
roxygen2,9a6f4f863103bb237579e8decfb5b193,"`roxygenise()` now stops with an informative error message when run in a directory that's not the package root (@​mikmart, #704).",1,144,FALSE,NA
roxygen2,a2d907af4f16fe3a00bef7d3803acfd4,The `NAMESPACE` roclet now works in two passes - it first generates the `NAMESPACE` containing only import directives because this can be generated without evaluating the code in the package. This alleviates a problem where it was previously possible to get into a state that you could only get out of by carefully editing the `NAMESPACE` by hand (#372).,1,145,FALSE,NA
roxygen2,87ab23f54f573bcb41ff1b4d6c0f7660,`@​evalRd foo()` evaluates `foo()` defined in the package namespace and inserts the results into the current block (#645). The code should return a character vector with one entry for each line (and they should not start with `#'`). There are two small limitations to the current implementation: 1. The generated roxygen will not affect the `@​md`/`@​noMd` status 2. `@​evalRd` does not work inside templates.,1,146,FALSE,NA
roxygen2,00921c727da499a90a8aa7f1945fec98,"`@​evalNamespace` does for `NAMESPACE` what `@​evalRd` does for Rd files: you give it R code that produces a literal entry in `NAMESPACE` when run. This should make it easier to export functions that are generated by other functions in your package (#531, @​egnha).",1,147,FALSE,NA
roxygen2,b321003ce94a3df7a36e731da963523a,`@​inherits` can now inherit examples (#588).,1,148,FALSE,NA
roxygen2,0d22e340185e2e277bee181a5c9118ec,"`vignette(""rd"")` received a thorough updating for current best-practices. The vignette still needs more work so pull requests are greatly appreciated (#650).",1,149,FALSE,NA
roxygen2,9bb08a25d641fdd528ce7e5de6c5ff37,"`roxygenise()` uses `pkgload::load_all()` instead of a home grown solution to simulate package loading (this is needed because roxygen2 uses run-time information to generate the documentation). This should reduce S4 related problems and ensures that `devtools::document()` and `roxygenise()` always have exactly the same behaviour (#568, #595).",1,150,FALSE,NA
roxygen2,7b270560000abee9c41809d7c7e4b437,"If an inherited section cannot be found, the warning contains the help page from which that section was requested (#732, @​krlmlr).",1,151,FALSE,NA
roxygen2,7300e1d283d0dd7d8a1018ab7397951f,"roxygen2 now always reads and writes using UTF-8 encoding. If used with a package that does not have `Encoding: UTF-8` in the DESCRIPTION, you'll now get a warning (#564, #592).",1,152,FALSE,NA
roxygen2,6fd53845aa5e37bd733e38019d3028e5,Roxygen blocks now have an official structure as encoded in `roxy_block()`. It is a named list containing the tags with attributes providing other metadata.,1,153,FALSE,NA
roxygen2,f5be0458c9983797fff919f102300679,The `parsed` argument to `roclet_process()` have been replaced with separate `blocks` and `env` arguments.,1,154,FALSE,NA
roxygen2,28f6bcdc6de6b66dbda3630587e97bf2,New `roclet_preprocess()` generic makes it possible for roclets to perform actions before code is evaluated.,1,155,FALSE,NA
roxygen2,0432d68adea9728317a2edad3d9935ab,"`parse_package()`, `parse_file()` and `parse_code()` provide an exported API that allows you to use roxygen's parsing code independently of creating roclets.",1,156,FALSE,NA
roxygen2,896771617ed6391aa40558ca0f7eabf3,"All tags (including `@​alias`) are now de-duplicated and consistently sorted. This reduces spurious diffs (#586, @​flying-sheep).",1,157,FALSE,NA
roxygen2,d956bb4317b9567c08881119cac00518,`@​concept` now generates one `\concept` per tag (#611).,1,158,FALSE,NA
roxygen2,40a0a6783df748b159b1c9e46d7894e1,The default `@​description` (i.e. the title) is now added much later in the process. That means that `@​inherit description` now works when you have specified a title for the inheritor (#629) and the default description is slightly nicer when merging multiple blocks.,1,159,FALSE,NA
roxygen2,46a484312d28d2b9755038646031805d,`@​family` automatically adds its value to concepts (#611).,1,160,FALSE,NA
roxygen2,fffb73f538e7cf7c05fd563d903922da,`@​inherits`: The mechanism for extracting inherited Rd does a better job of preserving escapes (#624),1,161,FALSE,NA
roxygen2,547a302294d3b3a29b5466029c13e40c,Empty `.Rbuildignore` now handled correctly (#576).,1,162,FALSE,NA
roxygen2,fd5e804e2863fd2a6f9e860d8120b492,Stricter regular expression ensures only files ending with `.R` or `.r` are parsed for roxygen comments (#625).,1,163,FALSE,NA
roxygen2,5252b0ab6b408ab846cd9fc51092e105,Objects with names starting with a dot are now by default documented in files with prefix 'dot-'.,1,164,FALSE,NA
roxygen2,d46e02d34a516208a8a09e9097915d13,Roclets can now access global options as designed. This allows templates to use markdown formatting if set globally (#594).,1,165,FALSE,NA
roxygen2,bdf8a18676a8f2c1702b828e6f1251e4,You can now autogenerate package documentation even if you don't have `Authors@​R` (#606).,1,166,FALSE,NA
roxygen2,afc4d2303faeccc40a2bac47ff8fee13,"Multiple given and/or family names are now supported in the `Authors@​R` field of the DESCRIPTION file (#672, @​sgibb).",1,167,FALSE,NA
roxygen2,380f4b76e16941a7946a9462e05b4b27,If a package logo exists (`man/figures/logo.png`) it will be automatically included in generated package docs (#609).,1,168,FALSE,NA
roxygen2,af7ef36d4d279a19e5babf985057b87d,"Usage for data objects now correctly generated, avoiding double escaping other components of usage (#562).",1,169,FALSE,NA
roxygen2,bee21c893a50d9c82b3892b45791768a,Improvements to markdown translation:,1,170,FALSE,NA
roxygen2,bee21c893a50d9c82b3892b45791768a,"• Code in link text is now properly rendered as code (#620, @​egnha).",2,171,FALSE,Improvements to markdown translation:
roxygen2,bee21c893a50d9c82b3892b45791768a,"• Whitespace between words in link text is now preserved as single space for links of the form `[text][fcn]` and `[text](URL)` (#628, #754, #760, @​egnha and @​jennybc).",2,172,FALSE,Improvements to markdown translation:
roxygen2,bee21c893a50d9c82b3892b45791768a,"• `%` in inline code (#640), code blocks (@​nteetor, #699) and links (#724) is now automatically escaped.",2,173,FALSE,Improvements to markdown translation:
roxygen2,bee21c893a50d9c82b3892b45791768a,"• Parsing of markdown links has been tweaked to reduce false positives (#555). If you still get a false positive, you can now put `\\` in front of the `[` to avoid it being converted to a link (#720). Links can no longer be followed by `{` to avoid spurious matches to Rd commands like `\Sexpr{}`.",2,174,FALSE,Improvements to markdown translation:
roxygen2,bee21c893a50d9c82b3892b45791768a,• Unsupported markdown features now generate a mildly helpful warning instead of throwing an utterly useless error (#560).,2,175,FALSE,Improvements to markdown translation:
roxygen2,103eb805e46c560f14009d2073ad6d1a,"`person()` now supports all MARC Relator role codes (#662, @​publicus).",1,176,FALSE,NA
roxygen2,fbeafa1d75d612381cb1b513e7c47928,"`topic_add_usage()` now outputs formatted ""Usage"" section with max width of 80 characters thanks to a now more flexible `wrap_string()` (@​JoshOBrien, #719).",1,177,FALSE,NA
roxygen2,8a7e3e459ce1816a5b957a7e517e92ad,"Allowing empty lines in .Rbuildignore. Previously, empty lines caused all files to be ignored. (#572, @​jakob-r)",1,178,FALSE,NA
roxygen2,772030aff781723ad4f15c084eac9202,"Automatically generating a usage section for an infix function containing ""\<-"" no longer removes ""\<-"" from the function name (#554).",1,179,FALSE,NA
roxygen2,b5680a9ff2cf32f4805a696d4196df40,"Most fields can now be written using Markdown markup instead of the traditional Rd language. You can turn on Markdown globally by adding `Roxygen: list(markdown = TRUE)` to `DESCRIPTION`. The `@​md` / `@​noMd` tags turn Markdown parsing on / off for the given block. See `vignette(""markdown"")` for more details (#364, #431, #499, #506, #507), by @​gaborcsardi",1,180,FALSE,NA
roxygen2,b182aef01f6c55336c2e0f1e50171212,"New `@​inheritDotParams` allows you to automatically generate parameter documentation for `...` for the common case where you pass `...` on to another function (#512). Because you often override some arguments, it comes with a flexible specification for argument selection:",1,181,FALSE,NA
roxygen2,b182aef01f6c55336c2e0f1e50171212,• `@​inheritDotParams foo` takes all parameters from `foo()`,2,182,FALSE,"New `@​inheritDotParams` allows you to automatically generate parameter documentation for `...` for the common case where you pass `...` on to another function (#512). Because you often override some arguments, it comes with a flexible specification for argument selection:"
roxygen2,b182aef01f6c55336c2e0f1e50171212,"• `@​inheritDotParams foo a b e:h` takes parameters `a`, `b`, and all parameters between `e` and `h`",2,183,FALSE,"New `@​inheritDotParams` allows you to automatically generate parameter documentation for `...` for the common case where you pass `...` on to another function (#512). Because you often override some arguments, it comes with a flexible specification for argument selection:"
roxygen2,b182aef01f6c55336c2e0f1e50171212,• `@​inheritDotParams foo -x -y` takes all parameters except for `x` and `y`.,2,184,FALSE,"New `@​inheritDotParams` allows you to automatically generate parameter documentation for `...` for the common case where you pass `...` on to another function (#512). Because you often override some arguments, it comes with a flexible specification for argument selection:"
roxygen2,28e4e2bbbb2ff139cc4d9a945a2eeea7,The documentation generated is similar to the style used in `?plot` and will eventually be incorporated in to RStudio's autocomplete.,1,184,FALSE,NA
roxygen2,7db4d0fdac3b5adb486a7044a0bce087,"New `@​inherit` generalises `@​inheritParams`, and allows to you inherit parameters, return, references, title, description, details, sections, and seealso. The default `@​inherit my_fun` will inherit all, you can document an object entirely by specifying only the `@​inherit` tag. Alternatively, you can select specific tags to inherit with `@​inherit my_fun return params` (#384).",1,185,FALSE,NA
roxygen2,bbd8319bf5312c1d0f8e87abc54d2a34,New `@​inheritSection fun title` allows you to inherit the contents of a single section from another topic (#513).,1,186,FALSE,NA
roxygen2,110da614df021dbe62ba9877f1397327,"`@​inheritParams` now works recursively, so that you can inherit parameters from a function that inherited its parameters from somewhere else. It also better handles `\dots` as an alias for `...` (#504).",1,187,FALSE,NA
roxygen2,d0b25bea645426d3a25027b92f4517a6,"`@​aliases` are no longer sorted alphabetically, but instead match the order of their usage. This gives you more control in pkgdown.",1,188,FALSE,NA
roxygen2,ec66e8b9542079d7df576ace4e227027,`@​describeIn` now escapes special characters in function names (#450).,1,189,FALSE,NA
roxygen2,d1a9debb988b06970d19ad4c6325997c,"`@​family` see alsos are added in the same order they appear, not alphabetically (#315). Fixed an issue where `.`s were sometimes added between words within a `@​family` tag (#477, @​kevinushey).",1,190,FALSE,NA
roxygen2,6cc31322ddb29b129eedd86dca0c9477,`@​author` is rendered after `@​seealso`.,1,191,FALSE,NA
roxygen2,fec905ecb981ecbc9d4b0ccab9f55b4d,"`@​example` gives a nice warning message if you accidentally use it instead of `@​examples` (#494). Multiple `@​examples` sections are merged (#472, @​krlmlr).",1,192,FALSE,NA
roxygen2,cdaaf57a42a1c4b8f8a0eed724d78d1d,"Roxygen will no longer write out topics that don't have a name or title, and will instead generate a warning. This makes it easier to detect if you've accidentally used `@​rdname` with an incorrect value (#474).",1,193,FALSE,NA
roxygen2,0921d149456deb7c38ce6ec5c1c5cdad,"Non-primitive, internal S3 generics (e.g. 'rbind', 'cbind') are now properly detected as S3 generics. (#488, @​kevinushey)",1,194,FALSE,NA
roxygen2,b16ae42c71d7768801c76d762eb56884,Ensure that `functions` with S3 class are still treated as functions (#455).,1,195,FALSE,NA
roxygen2,7e7c7f2ec03f1634cd88acfaea43252d,"S3 method declarations via `R.methodS3::setMethodS3()` and function declarations via `R.oo::setConstructorS3()` are now supported (@​HenrikBengtsson, #525).",1,196,FALSE,NA
roxygen2,2319f9222a2b6c3cec0fcf8f477ff0d3,You can now document `setClassUnion()`s (#514).,1,197,FALSE,NA
roxygen2,23921da1d7f059dffb8ae915e4b0b9f0,The default alias for S4 method now re-adds trailing ANY signatures that are sometimes dropped (#460).,1,198,FALSE,NA
roxygen2,b5a49e035bd421828897d69fe1c5500c,"Back references are now wrapped over multiple lines, if long (#493, @​LiNk-NY).",1,199,FALSE,NA
roxygen2,ce41db0e57b95cab3f3311f97b1791dd,"`""_PACKAGE""` documentation now generates a default `@​seealso` combining the `URL` and `BugReport` fields, and a default `@​author` field generated from the `Authors@​R` field (#527). It now works from `roxygenise()`; before it only worked from `devtools::document()` (#439, @​krlmlr).",1,200,FALSE,NA
roxygen2,c2a019264ef031024aeda00b3684f41a,"Manually created `NAMESPACE` or documentation files are never overwritten, even if using `roxygen2` for the first time (@​krlmlr, #436).",1,201,FALSE,NA
roxygen2,e6616cb1810a00210d94394c8babfea3,Changes to DESCRIPTION (i.e. `Collate:` and `RoxygenNote`) now use the desc package. This will minimise spurious changes (#430).,1,202,FALSE,NA
roxygen2,c65a2e5732e817dc4423b7927cb5e2f0,`default_data_format()` has been renamed to `object_format()`.,1,203,FALSE,NA
roxygen2,8050314c758b95889d60b457e9f6c356,"New `roclet_find()` provides a more flexible way to specify roclets: as roclet name (e.g. ""rd_roclet""), in an package (""foo::roclet_bar""), or with options (""foo::roclet_bar(baz = TRUE)"").",1,204,FALSE,NA
roxygen2,b53bd485d817cd882ff7dd63be56aef9,The usage of replacement functions uses non-breaking spaces so that `<-` will never get put on its own line (#484).,1,205,FALSE,NA
roxygen2,79bc5f8d2e70dde60e7cd47b8146ecd1,"Roxygen now parses nonASCII documentation correctly (as long as UTF-8 encoded or specified Encoding in DESCRIPTION) (#532, @​shrektan), and ignores files listed in `.Rbuildignore` (#446, @​fmichonneau).",1,206,FALSE,NA
roxygen2,2439a4fffa5b09388ebcab907c867ced,Deprecated `register.preref.parser()` and `register.preref.parsers()` have been removed. `register_tags()` has also been removed in favour of a new `roclet_tags()` generic.,1,207,FALSE,NA
roxygen2,c1547e8268b13bb21d3e3848b418302c,"`roclet()` (the constructor), `roclet_tags()`, `roclet_process()` `roclet_output()`, `roc_clean()` and now exported making it possible to create roclets in other packages. Helper functions `roxy_tag()` and `roxy_tag_warning()` are also exported.",1,208,FALSE,NA
roxygen2,80848955a56781fd319b7a59a63f419c,`new_roclet()` is no longer exported - use `roclet()` instead.,1,209,FALSE,NA
roxygen2,a33af82311cb71edf917c8a656311e22,"Use `ls()`, not `names()` to list elements of environment: fixes R 3.1.0 incompatibility (#422, @​kevinushey).",1,210,FALSE,NA
roxygen2,3eb64d7ad3ca5e3d67c9a3837107acb7,`@​export` again allows trailing new line (#415).,1,211,FALSE,NA
roxygen2,b5d28aa1ee6ac1631583ab5d7f782226,"Fixed bug in `@​noRd`, where usage would cause error (#418).",1,212,FALSE,NA
roxygen2,e65e3ad663e31a3131145734f985639e,Roxygen now records its version in a single place: the `RoxygenNote` field in the `DESCRIPTION` (#338). This will be the last time an roxygen2 upgrade changes every file in `man/`.,1,213,FALSE,NA
roxygen2,ece2660dc8242ee597b55d81be083ac5,You can now easily re-export functions that you've imported from another package:,1,214,FALSE,NA
roxygen2,ece2660dc8242ee597b55d81be083ac5,"```
#' @​export
magrittr::`%>%`
```",1,215,TRUE,NA
roxygen2,ece2660dc8242ee597b55d81be083ac5,"All imported-and-re-exported functions will be documented in the same file (`rexports.Rd`), containing a brief description and links to the original documentation (#376).",1,215,FALSE,NA
roxygen2,3bcc350fba70ab5aa409076ba3b005ad,"You can more easily generate package documentation by documenting the special string ""\_PACKAGE"" (@​krlmlr, #349):",1,216,FALSE,NA
roxygen2,3bcc350fba70ab5aa409076ba3b005ad,"```
#' @​details Details
""_PACKAGE""
```",1,217,TRUE,NA
roxygen2,3bcc350fba70ab5aa409076ba3b005ad,The title and description will be automatically filled in from the `DESCRIPTION`.,1,217,FALSE,NA
roxygen2,b5eb664a9f2a40a05f2802fce5e79092,"New tags `@​rawRd` and `@​rawNamespace` allow you to insert raw (unescaped) in Rd and the `NAMESPACE` (this is useful for conditional imports). `@​evalRd()` is similar, but instead of literal Rd, you give it R code that produces literal Rd code when run. This should make it easier to experiment with new types of output (#385).",1,218,FALSE,NA
roxygen2,5386991918f22a8d3628f795fb129422,"roxygen2 now parses the source code files in the order specified in the `Collate` field in `DESCRIPTION`. This improves the ordering of the generated documentation when using `@​describeIn` and/or `@​rdname` split across several `.R` files, as often happens when working with S4 (#323, #324).",1,219,FALSE,NA
roxygen2,0f6d61737a5cf9a10094104ac4a446ad,"The contents of documented functions are now also parsed for roxygen comments. This allows, e.g., documenting a parameter's type close to where this type is checked, or documenting implementation details close to the source, and simplifies future extensions such as the documentation of R6 classes (#397, @​krlmlr).",1,220,FALSE,NA
roxygen2,d4e99fab18b1ac77894ffa76893e86fb,"Data objects get a simpler default `@​format` that describes only the object's class and dimensions. The former default, generated by generated by `str()`, didn't usually produce useful output and was quite slow. The new S3 generic `default_data_format()` generates the format and can be overridden to generate a custom format (#410, @​krlmlr).",1,221,FALSE,NA
roxygen2,4270cb338a6fde825869c973002001fd,The roxygen parsers has been completely rewritten in C++ (#295). This gives a nice performance boost and gives:,1,222,FALSE,NA
roxygen2,4270cb338a6fde825869c973002001fd,"• Better error messages: you now get the exact the line number of the tag, not just the start of the block.",2,223,FALSE,The roxygen parsers has been completely rewritten in C++ (#295). This gives a nice performance boost and gives:
roxygen2,4270cb338a6fde825869c973002001fd,"• The parser has been simplified a little: tags now must always start on a new line. This is recommended practice anyway, and it means that escaping inline `@​` (with `@​@​`) is now optional. (#235)",2,224,FALSE,The roxygen parsers has been completely rewritten in C++ (#295). This gives a nice performance boost and gives:
roxygen2,4270cb338a6fde825869c973002001fd,"• Unknown tags now emit a warning, rather than an error.",2,225,FALSE,The roxygen parsers has been completely rewritten in C++ (#295). This gives a nice performance boost and gives:
roxygen2,4c265bc7b299485b32d130b975db8079,`@​examples` no longer complains about non-matching braces inside strings (#329).,1,226,FALSE,NA
roxygen2,3d2af1b7d352c7666cefe3a164818adf,"`@​family` now cross-links each manual page only once, instead of linking to all aliases (@​gaborcsardi, #283, #367).",1,227,FALSE,NA
roxygen2,fcc8056cd70e8e182faa553f6dd66d66,"The special `@​include` parser has also been rewritten in C++, giving a performance boost for larger packages (#401). This is particularly important because it's also called from `devtools::load_all()`. Additionally, a space before `@​include` is no longer necessary (@​krlmlr, #342).",1,228,FALSE,NA
roxygen2,83d594443933d5fe1cabfe676bf2a3c6,`@​inheritParams foo::bar` ensures that `%` remains escaped (#313).,1,229,FALSE,NA
roxygen2,575b65eb201b4cd8524d627235e71cfd,"If you document multiple arguments with one `@​param`, (e.g. `@​param a,b,c`) each parameter will get a space after it so it can be wrapped in the generated Rd file (#373).",1,230,FALSE,NA
roxygen2,a79a041bd1eb5ea28157d4108765337b,"`@​section`s with identical titles are now merged together, just like `@​description` and `@​details`. This is useful in conjunction with the `@​rdname` tag. (@​krlmlr, #300).",1,231,FALSE,NA
roxygen2,1225ec5d8f89b08cbf48279029bbe950,"Automatic `@​usage` is now correctly generated for functions with string arguments containing `""\""""` (#265).",1,232,FALSE,NA
roxygen2,5ba4f3aece106fb1e4cb0490a9816e48,`load_options()` is now exported so `devtools::document()` doesn't have to run `update_collate()` twice (#395).,1,233,FALSE,NA
roxygen2,59cd9dde9beaab70cfff133cb7ffae2c,"`update_collate()` only rewrites the `Collate` entry in the DESCRIPTION file when it changes (#325, #723).",1,234,FALSE,NA
roxygen2,dbaa1b14701c25dbcaaf8147ecdad66f,"An empty `NAMESPACE` file is written if it is maintained by `roxygen2` (@​krlmlr, #348).",1,235,FALSE,NA
roxygen2,3930e1f6b3bf871286fc0757b6c5df64,"Data that is not lazy-loaded can be documented (@​krlmlr, #390).",1,236,FALSE,NA
roxygen2,8c07d465c3de83dcc65ec2db50624fb5,`register.preref.parser()` and `register.preref.parsers()` have been deprecated - please use `register_tags()` instead.,1,237,FALSE,NA
roxygen2,85925add969f7145d7b219811580a9c5,"Parser callbacks registered with `register_tags()` are now called for fields parsed from the ""introduction"" (the text before the first tag) (@​gaborcsardi, #370).",1,238,FALSE,NA
roxygen2,7d32eafc29c398feeb71242bda6f3049,"Formatting of the `Authors@​R` field in the DESCRIPTION file is now retained (@​jranke, #330).",1,239,FALSE,NA
roxygen2,2e0be0e8a11a52f6332091bfa6aae554,The collate roclet falls back to `base::strwrap()` when generating the collate field. This makes roxygen2 compatible with the next version of stringr.,1,240,FALSE,NA
roxygen2,c398aefac47c1f32c258c251fddb5037,"New ""vignette"" roclet. This vignette automatically rebuilds all out of date vignettes (#314).",1,241,FALSE,NA
roxygen2,d0f4d644608c2df160d1be70b706542f,An off-by-one error in the C++ Roxygen preparser was fixed.,1,242,FALSE,NA
roxygen2,f87ebd685f35bcf78357e48e511a7272,"The new `@​backref` tag makes it possible to override the sourceref for R code generators like `Rcpp` (@​krlmlr, #291, #294).",1,243,FALSE,NA
roxygen2,e81b4ee765fed652a97dde24a89de526,The source of the documentation is added to autogenerated `.Rd` files.,1,244,FALSE,NA
roxygen2,69404bd5f894eec4f847d052543ff2d0,"If there are no `@​include` tags, roxygen2 leaves the collate field alone. This makes it easier to convert an existing project that uses a predefined collate, but if you start with `@​include` and later remove them, you'll need to also remove the collate field (#302, #303).",1,245,FALSE,NA
roxygen2,8ae043774b6ecd88d4401f242ff18de8,Protected a `dir()` with `sort_c()` - If you'd noticed an inconsistency in ordering between `devtools::document()` and `devtools::check()` this was the cause of that.,1,246,FALSE,NA
roxygen2,d975936ca9067f832441a344d405b1d5,Fixed broken regular expression that caused problems with stringr 1.0.0.,1,247,FALSE,NA
roxygen2,8952aaba919946cf8bb40f50327aa2e9,"The `Authors@​R` field in `DESCRIPTION` is now longer wrapped(@​krlmlr, #284).",1,248,FALSE,NA
roxygen2,3d0a21017e7647a6ff5b6bfdabebbd02,"`@​describeIn` with plain functions now correctly includes the function name and can be applied to data documentation. (@​jimhester, #285, #288).",1,249,FALSE,NA
roxygen2,e943d9e59b43a660308cb6d7a63342f1,"Works again when called from `Rscript` and `methods` is not loaded (@​krlmlr, #305).",1,250,FALSE,NA
roxygen2,ceedcf9d26d28b1d5aae7832997edfe3,"If you don't use `@​exports` or other namespace directives, your namespace file will not be touched (#276).",1,251,FALSE,NA
roxygen2,c6aaf85e4e17b757563c5f7e9fd6caa3,Methods no longer automatically attempt to inherit parameters from their generic. It's too fraught with difficulty (#261).,1,252,FALSE,NA
roxygen2,fa79947ec0a87e6a73f764b1f48b1d4e,Roxygen now understands what to do with `setReplaceMethod()` (#266).,1,253,FALSE,NA
roxygen2,4e1ded56883a680f715d54404bdaad26,"Parameter documentation is ordered according to the order of the formals, if possible (@​krlmlr, #63).",1,254,FALSE,NA
roxygen2,24f17dc336fbff2deafc8b4b1fee485c,Export `is_s3_method()`.,1,255,FALSE,NA
roxygen2,dfa20306c1623ed476403314cf020026,Roxygen no longer fails when run in non-UTF-8 locales on windows.,1,256,FALSE,NA
roxygen2,d0e3429673dcdaf6a894080a2c13ba45,Explicit `updateRoxygen()` is no longer needed - `roxygenize()` does the right thing the first time it is run.,1,257,FALSE,NA
roxygen2,0f7b4c79ccc773f84316d7f763d9c7d2,Exporting a S4 generic works (#246).,1,258,FALSE,NA
roxygen2,941220d965f3b27405958a5507a43e87,`roxygenise()` no longer complains about absence of `wrap` field because it's so unlikely that anyone wants the old behaviour (#245).,1,259,FALSE,NA
roxygen2,795447520aa5e2a82723ac0b46bec394,"Six vignettes provide a comprehensive overview of using roxygen2 in practice. Run `browseVignettes(""roxygen2"")` to access.",1,260,FALSE,NA
roxygen2,bff6c1ee462f1b3ed0400f347018aac6,"`@​describeIn` makes it easier to describe multiple functions in one file. This is especially useful if you want to document methods with their generic, or with a common class, but it's also useful if you want to document multiple related functions in one file (#185).",1,261,FALSE,NA
roxygen2,7fabf0717e1220e34243e9bacc310ce7,`@​field` documents the fields on a reference class (#181). It works the same way as `@​slot` for S4 classes.,1,262,FALSE,NA
roxygen2,21361e41cc34c5412f4c44899c347c34,"You can now document objects defined elsewhere (like datasets) by documenting their name as a string (#221). For example, to document an dataset called `mydata`, you can do:",1,263,FALSE,NA
roxygen2,21361e41cc34c5412f4c44899c347c34,"```
#' Mydata set
#'
#' Some data I collected about myself
""mydata""
```",1,264,TRUE,NA
roxygen2,caa28781cd148628ac08bcda9a72b4e5,"roxygen2 now adds a comment to all generated files so that you know they've been generated, and should not be hand edited.",1,265,FALSE,NA
roxygen2,c9b0688575b6fe1f7aaa79c949736262,"roxygen2 no longer wraps the text in Rd files by default, i.e. the default option is `wrap = FALSE` now. To override it, you have to specify a field `Roxygen: list(wrap = TRUE)` in `DESCRIPTION` (#178).",1,266,FALSE,NA
roxygen2,a5611d96d49b7ab88ea3f7036e097f8b,Roxygenise automatically deletes out-of-date Rd files in `man/`.,1,267,FALSE,NA
roxygen2,632645daa4f6eeca4ac5c9a50e041fb2,"roxygen2 will never overwrite a file that was not generated by roxygen2. This means that the first time you use this version of roxygen, you'll need to delete all existing Rd files. `roxygenise()` gains a clean argument that will automatically remove any files previously created by roxygen2.",1,268,FALSE,NA
roxygen2,cf483e0d10ea0653f4fbd487a7097db9,Parsing is stricter: many issues that were previously warnings are now errors. All errors should now give you the line number of the roxygen block associated with the error.,1,269,FALSE,NA
roxygen2,d85414d30ed9f94e13b2f51d5215e1c4,Every input is now checked to make sure that you have matching braces (e.g. every `{` has a matching `}`). This should prevent frustrating errors that require careful reading of `.Rd` files (#183).,1,270,FALSE,NA
roxygen2,1761d2db781b2f8a65714839cedc3e3c,`@​section` titles and `@​export` tags can now only span a single line to prevent common bugs.,1,271,FALSE,NA
roxygen2,9a9dfdad6380d529a7b267576f6ef918,`@​S3method` is deprecated - just use `@​export` (#198).,1,272,FALSE,NA
roxygen2,be6c6766d742a2b13fff1dbbe39686fe,Namespace tags now throw parsing errors if you give them bad inputs (#220).,1,273,FALSE,NA
roxygen2,62ed1ff01ad113f498ea4d799eda7c0d,"Better error message if you try to document something other than NULL, an assignment, a class, a generic or a method (#194).",1,274,FALSE,NA
roxygen2,944d483aac28be7da1364b1775fa0e29,Better parsing of non-syntactic function names in other packages when used in `@​inheritParams` (#236).,1,275,FALSE,NA
roxygen2,5f64e047d675677165d77f61c0fe87f3,"Deprecated arguments to `roxygenise()` (`roxygen.dir`, `copy.package`, `overwrite`, `unlink.target`) removed.",1,276,FALSE,NA
roxygen2,a43189525b78d10af9f2953022292269,Remove unneeded codetools and tools dependencies.,1,277,FALSE,NA
roxygen2,e2c6505947a33cce9a35e9d2b141ec4e,"Bump required Rcpp version to 0.11.0, and remove custom makefiles.",1,278,FALSE,NA
roxygen2,865e33e0ef97c81b1be035109c0de383,Non-syntactic argument names (like `_x`) are now surrounded by back-ticks in the usage (#191).,1,279,FALSE,NA
roxygen2,576bc005094f33c999938680f92041a7,The internal parsers are no longer part of the public roxygen2 interface.,1,280,FALSE,NA
roxygen2,57b4a76aaac19cda85fa27d27e7ea1ee,Usage statements in generated roxygen statements non-longer contain non-ASCII characters and will be wrapped if long (#180).,1,281,FALSE,NA
roxygen2,d1e3da3b4284ca8f86c460788780e1a5,"By default, reference classes now only document their own methods, not their methods of parents (#201).",1,282,FALSE,NA
roxygen2,bfbbefde0e7d4cf7589f612876864e79,"Default aliases always include the original name of the object, even if overridden by `@​name`. This also means that `A <- setClass(""A"")` will get two aliases by default: `A` and `A-class` (#202). Use `@​aliases NULL` to suppress default alias.",1,283,FALSE,NA
roxygen2,7ad73995d2bb0597a201956df342a04c,Non-syntactic class names (like `<-`) are now escaped in the usage section of S4 methods (#205).,1,284,FALSE,NA
roxygen2,53085fe834fe1a94cd399b078aa82d03,Eliminated two more cases where wrapping occurred even when `wrap = FALSE`.,1,285,FALSE,NA
roxygen2,6bc249649dc9cdfd2f1e61a52a377b04,Fixes for Rcpp 0.11.0 compatibility.,1,287,FALSE,NA
roxygen2,7c908ae6dad22c629152ed97d6fce3a6,`roxygenise()` now invisible returns a list of all files generated by individual roclets. This is useful for tools that want to figure out if there are extra files in the `man/` directory.,1,288,FALSE,NA
roxygen2,35ca0acd628a852d5b5475cac601ddee,`is_s3_generic()` now recognises group generics (#166).,1,289,FALSE,NA
roxygen2,3913bb2fa96731c53fbe96f845d75d15,Don't try and add parameters for data objects (#165).,1,290,FALSE,NA
roxygen2,07f421d3407b4a53475fca0645ca1f8c,Sort output of families using C locale (#171).,1,291,FALSE,NA
roxygen2,97b3d1587900975003d3856a3c70aeab,`@​family` now escapes function names in references (#172).,1,292,FALSE,NA
roxygen2,98831beab0791d134268105dad393caa,"The default usage definitions are much better, generating the correct usage for data sets (#122), S3 methods (without additional `@​method` tag), S4 generics, S4 methods, and for replacement (#119) and infix functions. Backslashes in function arguments in are correctly escaped. Usage statements also use a more sophisticated line wrapping algorithm so that they should cause fewer problems with the R CMD check line limit. (#89, #125).",1,293,FALSE,NA
roxygen2,27aad76a6939ef8b71f99978fac5795f,"S4 classes, S4 methods, and RC classes are given better default topics, and the file names corresponding to those topics are shorter.",1,294,FALSE,NA
roxygen2,c28d6a450263baaada622cabc789fdf5,S4 methods will automatically inherit parameter documentation from their generic.,1,295,FALSE,NA
roxygen2,38bccbaa2141b03b268a907f0fede598,`@​slot name description` allows you to document the slots of a S4 class.,1,296,FALSE,NA
roxygen2,56c5ef5b26352c5a18bd166353650caf,Turn off Rd re-wrapping with adding `Roxygen: list(wrap = FALSE)`,1,297,FALSE,NA
roxygen2,c9a28694418671de35ddcc8a28e0d375,"Change the default roclets by specifying `Roxygen: list(roclets = c(""collate"", ""rd""))`",1,298,FALSE,NA
roxygen2,2f0dcaf8348b4bba1c128fe7fe5bbd83,"Infix functions are now escaped correctly in the `NAMESPACE`. (Thanks to @​crowding, #111)",1,299,FALSE,NA
roxygen2,43cc5c889cdd2c759556b777ee274d53,"`roxygenise()` now works more like `devtools::document()` and only ever works in the current directory. The arguments `roxygen.dir`, `overwrite`, `copy.package` and `unlink.target` have been deprecated due to potential data loss problems.",1,300,FALSE,NA
roxygen2,3ec4c4c2d0d22970608eaa533b19bdf4,"The collate roclet is no longer a roclet: it processes R files using custom code (only statically, not dynamically) and is designed to be executed before the code is sourced. Run `update_collate()` to update the Collate directive based on `@​include` tags - if there are none present, a collate directive will not be generated.",1,301,FALSE,NA
roxygen2,137772a332865fadbbebfb03f418fd3e,"`@​useDynLib` now works with more possible specifications - if you include a comma in the tag value, the output will be passed as is. This means that `@​useDynLib mypackage, .registration = TRUE` will now generate `useDynLib(mypackage, .registration = TRUE)` in the `NAMESPACE`. (#124)",1,302,FALSE,NA
roxygen2,798bd57a7309667e8b73a8533508d3c7,`inst` directory not created by default (#56).,1,303,FALSE,NA
roxygen2,654bfe59ab0f866836d0024861c0cfb0,Explicitly depend on `utils` and `methods` packages to make roxygen compatible with `Rscript` (#72). Import `digest` package instead of depending on it.,1,304,FALSE,NA
roxygen2,cbeef724f15e495d2ac1635450c6628f,Always use C locale when sorting `NAMESPACE` file or tags in `.Rd` files. This ensures a consistent ordering across systems (#127).,1,305,FALSE,NA
roxygen2,128764fe66223c6393916e50529e34c3,"Templates with extension `.r` are supported on case-sensitive file systems (#115). Template variables now actually work (#160, thanks to @​bronaugh).",1,306,FALSE,NA
roxygen2,a5628c09bf01f27ac5a0d080b726022d,"Suppress default aliases, format and usage with `@​aliases NULL`, `@​format NULL` and `@​usage NULL`.",1,307,FALSE,NA
roxygen2,e130740f106569eb7a75578ab8b4e3d1,Correctly use keyword `datasets` not `dataset` (Fixes #60),1,308,FALSE,NA
roxygen2,00eff0a9854a5ddac5caed0b0ba5b1c0,Reference classes no longer given incorrect docType (data).,1,309,FALSE,NA
roxygen2,7758ffb1519bbac228cbb3ac89a0f6df,Use unicode escapes in test files so tests pass on all platforms.,1,310,FALSE,NA
roxygen2,3ebb1f323e306f45e6351e42ebfd2c7c,Work around bug in `gsub` in C locale by manually specifying `Encoding()`.,1,311,FALSE,NA
roxygen2,be8eba56810297bef4614a568ccfb8bb,"Package docType will automatically add package alias, if needed. (Fixes #4)",1,312,FALSE,NA
roxygen2,99cd8b948f87e5518c19285a90c213ff,"Data docType will automatically add `datasets` keyword, default usage, and default format. (Fixes #5). Data docType automatically added to data objects.",1,313,FALSE,NA
roxygen2,91b185ab02b7e607e2df053917b4a304,New `@​encoding` tag for manually setting non-ASCII encodings when needed. (Fixes #7),1,314,FALSE,NA
roxygen2,e48b890acf19d1b72deaa631e19ff56d,`write.description()` now tries much harder to respect users' original DESCRIPTION field formatting instead of forcibly re-wrapping certain fields at 60 characters.,1,315,FALSE,NA
roxygen2,93355cf27a27f843f769f3541fb0c3b3,`@​details` and `@​description` now work correctly,1,316,FALSE,NA
roxygen2,6bce80aa25563e94d0efe75f34126d0b,`@​useDynLib` now works correctly:,1,317,FALSE,NA
roxygen2,6bce80aa25563e94d0efe75f34126d0b,"```
@​useDynLib packageName routine1 routine2
```",1,318,TRUE,NA
roxygen2,6bce80aa25563e94d0efe75f34126d0b,produces,1,318,FALSE,NA
roxygen2,6bce80aa25563e94d0efe75f34126d0b,"```
useDynLib(packageName, routine1)
useDynLib(packageName, routine2)
```",1,319,TRUE,NA
roxygen2,6bce80aa25563e94d0efe75f34126d0b,"in the `NAMESPACE` file, instead of separate (wrong) useDynLib statements as before.",1,319,FALSE,NA
roxygen2,bdec54a3f7b6aa46dd20e95b4ad5b110,"All namespace import directives now behave in the same way as the export directives, producing multiple single directives instead one multiple directive: `@​importClassesFrom pkg a b` now produces `importClassesFrom(pkg, a)` and `importClassesFrom(pkg, b)`",1,320,FALSE,NA
roxygen2,8bbd0f18fb8df9d4e688b56e697a00b6,"In example files included with `@​example` you can now use infix operators (e.g. %\*%) or other things with %, because they will be preceded by a backslash in the Rd file. This behaviour was already in place for examples directly included with `@​examples`.",1,321,FALSE,NA
roxygen2,42769d6d27ad0518d53dbd8b47eb8f10,"Aliases are no longer quoted, and % is escaped with a backslash (Fixes #24). Names also have % escaped (Fixes #50)",1,322,FALSE,NA
roxygen2,fcb0b06943ad409a8cf371209c8f86dd,Replacement functions (e.g. `foo<-`) now get correct usage statements: `foo() <- value` instead of `foo()<-value`. (Fixes #38),1,323,FALSE,NA
roxygen2,ae23ba07c9ed33222f191d4fbec2b075,Functions with no arguments now correctly get usage statements (Fixes #35),1,324,FALSE,NA
roxygen2,82da0c3edcc10a035d2fb9fba74e0dd1,Indentation in examples now preserved (Fixes #27),1,325,FALSE,NA
roxygen2,4821bb4283b098bf0ecf25ab865ef5c2,"roxygen2 will replace characters that are not valid in filenames with a character substitute, e.g. `[]` becomes `sub`, `<-` becomes `set` (Fixes #6)",1,326,FALSE,NA
roxygen2,e74413d49f8a5d10da366964e69401bc,"Usage strings use non-breaking spaces to prevent string default values containing whitespace to be split across multiple lines. This may cause problems in the unlikely event that you have default value containing a non-breaking space (\`""`\uA0`{=tex}""') (Fixes #21)",1,327,FALSE,NA
roxygen2,fbb78a354e33167dc6fd119631095b22,Functions with quoted names now get correct usage statements (Fixes #41),1,328,FALSE,NA
roxygen2,9c0b7c221a1dc7a6c070c852ad3eca66,Objects that no longer exist are not documented (Fixes #42),1,329,FALSE,NA
roxygen2,a7bdaadb710ad3dd22aa58d0ba547d5b,Errors now display file name and line number of roxygen block to help you find the problem. Thanks to code contributions from Renaud Gaujoux. (Fixes #13),1,330,FALSE,NA
roxygen2,99595f8d24f7932098832c511c3321e4,"Documentation with no untagged text but with `@​title`, `@​description` and `@​details` tags now produces correct output.",1,331,FALSE,NA
roxygen2,4fd537f52198d622ec26c4136810e4ce,package dependencies loaded automatically,1,332,FALSE,NA
roxygen2,c289a2c3faf99d1d1e902b4955bd8342,added support for the `@​source` tag,1,333,FALSE,NA
roxygen2,2135a9578fdad79c3dff644b7e75fbb7,`NAMESPACE` file no longer needs to exist,1,334,FALSE,NA
roxygen2,9f1f034d27c3125379d7f405dc7fe02e,`Collate` field in `DESCRIPTION` no longer needs to exist,1,335,FALSE,NA
roxygen2,1b0f0557315005387735d386df462361,`=` now recognised as way of assigning functions,1,336,FALSE,NA
roxygen2,d4e3588a32a2cc0f5f9d0bcb7bc2e126,`x$y <- function() {...}` no longer causes error,1,337,FALSE,NA
roxygen2,20603fa7407a6b4c1d2fd892fc4e1a43,`@​example` no longer added extra new-lines.,1,338,FALSE,NA
roxygen2,01f2426a77704b7caac42d32787d27d6,Correct directory normalisation under windows fixes broken test.,1,339,FALSE,NA
roxygen2,9de2859988103d34b3380b15120ed43e,A special thanks goes to Yihui Xie who contributed all of the fixes and improvements (bar one) in this version!,1,340,FALSE,NA
roxygen2,c8af7be461411dc5c0a28a3e2a89b818,"now works with run-time details to give more accurate output. This requires that the source code that roxygen is documenting be loaded prior to documentation. roxygen will attempt to do so, but you need to ensure required packages are loaded. Run-time data fixes some long standing bugs where roxygen couldn't correctly figure out function usage. We are not aware of any cases where you still need to use the `@​usage` tag.",1,341,FALSE,NA
roxygen2,04a5d237a716c87d9971d9d8322b5bca,"written in idiomatic R, and uses S3 instead of a homegrown class system.",1,342,FALSE,NA
roxygen2,c078d23127768d66d824d957f9b94860,"roclets build up an internal data structure instead of writing to disk directly. This means that you can now use the `@​rdname` tag to merge documentation for multiple functions into one file, and that only unique namespace directives are written to `NAMESPACE` (which makes `@​importFrom` much more useful).",1,343,FALSE,NA
roxygen2,58f66538586e28c9c134a9b2e86107f6,"some features have been removed, and may or may not (based on your feedback) be reincluded. These include the callgraph roclet, and `R CMD roxygen`, which only worked on some systems.",1,344,FALSE,NA
roxygen2,dba0778130b72604c15e4aed791999d3,a templating system: use the `@​template` tag to insert a `brew` template stored in `man-roxygen`. Template variables can be set using `@​templateVar name value` and retrieved from within the template with `<%= name %>`,1,345,FALSE,NA
roxygen2,710a37567828b8e58d07987a4622d352,"extensive use of caching to make repeated runs as fast as possible. To clear caches and guarantee a complete rebuild, use `clear_caches()`.",1,346,FALSE,NA
roxygen2,81456d597f515f1525f75becd2e7b5bd,"parsing of ""introduction"" (the text before the first tag) has changed. Now the title consists of the first paragraph (i.e. all text before the first empty line), the second paragraph is the description and all others are put in the details. Any component can be overridden with `@​title`, `@​description` and `@​details` as appropriate.",1,347,FALSE,NA
roxygen2,6f4da52cdce32005e7e80e1d624de5da,"`@​name` is always output as an alias, even if `@​aliases` are used.",1,348,FALSE,NA
roxygen2,1cf5d47eef600064768bf61e867cdc75,`@​export` correctly uses `@​method` to generate `S3method` namespace directive,1,349,FALSE,NA
roxygen2,e875dec528cf1e1802aa7226fb69a27f,`@​rdname filename` sets the output filename (without extension). Use for functions non-alphanumeric functions (e.g. `[<-`) or if you want to document multiple functions in one file,1,350,FALSE,NA
roxygen2,e59e4658f75efcf4fbe67d948897e811,`@​template templatename` includes a documentation template (see above),1,351,FALSE,NA
roxygen2,87d1a72d826723c8496ba28d737e098f,`@​section Section title: contents` includes a section with any title. Don't forget the colon! That separates the title of the section from its contents.,1,352,FALSE,NA
roxygen2,62fb2676bec2a116efa31f9e501f7fdd,`@​description` and `@​details` tags allow you to specify description and details components in a template,1,353,FALSE,NA
roxygen2,997fe6d8d316f5646edc1f20a7a5864a,`@​family family name` automatically adds see-also cross-references between all functions in a family. A function can belong to multiple families.,1,354,FALSE,NA
roxygen2,b1df105b58f05ac4027ccee3b8235e5f,"`@​inheritParams name` allows you to inherit the documentation for parameters from another function, either within the current package (`function`) or in any other installed package (`package:function`). Currently only supports single inheritance (i.e. you can't inherit from a function that inherits from another function), but you can have multiple @​inheritParams tags.",1,355,FALSE,NA
roxygen2,e3c5af998f0c0e83e5ac84f78c50f2f2,`@​format` has been implemented; it existed in the roxygen package but was actually ignored,1,356,FALSE,NA
scales,2082ac5ca1e81c17795d7b7c047b4108,"`rescale(I(x), ...)` and `rescale_mid(I(x), ...)` return `I(x)` unaltered (@​teunbrand, #403).",1,1,FALSE,NA
scales,c0534f607c1f4355301f611ea7be524a,Add a rescale method for `difftime` objects (#382),1,2,FALSE,NA
scales,cb3d1695936605158574bdb2648a2610,"Add better support for `difftime` objects. `label_timespan()` adds functionality for adding correct unit suffix to timespan data, `breaks_timespan()` adds functionality for finding pleasant breakpoints across the various bases in time units, while `transform_timespan()` wraps it all together and provides an alternative to `transform_hms()` (#212)",1,3,FALSE,NA
scales,4f4b62d1ce65702022010ddbd3e80750,"`train_continuous()` coerces `new` to numeric before calculating range (@​teunbrand, #369).",1,4,FALSE,NA
scales,c6e9a89abcc56d9383465ec60b61f3ea,Training on factor data no longer sorts the range after multiple training passes if the new `fct` argument of `train_discrete()` is used (#383),1,5,FALSE,NA
scales,d1ccfc9118ac822e87c1c82d0d1f59a5,The `DiscreteRange` class now keeps track on whether it has been trained on factor data.,1,6,FALSE,NA
scales,ab6909232969a547b0509c8e2a4a8698,Attempt to make the sort behavior of the range consistent for character vectors during training. Mixing of character and factor data will make the factor level order take precedence no matter if the training starts with a charactor vector,1,7,FALSE,NA
scales,4c22cdc03853573bbca53836c3f1aa31,"Transformation function have been renamed to `transform_*`-prefixed names instead of `*_trans`-suffixed names. This allows for a better tab-completion search of transformations. The S3 class of transformations has been renamed from `""trans""` to `""transform""`. `new_transform()` replaces `trans_new()` and `trim_to_domain()` replaces `trans_range()`. All old functions are kept for posterity.",1,8,FALSE,NA
scales,bd5aeb8e8e16ac86b4cccd555dde97d8,`transform_sqrt()` no longer returns an inverse for values outside of its domain (#214),1,9,FALSE,NA
scales,f4fd6d8537188c06d38d48e82d6febbe,"Add an inverse (area) hyperbolic sine transformation `transform_asinh()`, which provides a logarithm-like transformation of a space, but which accommodates negative values (#297)",1,10,FALSE,NA
scales,6acbf229bf01c19b75920b439444f800,"Correct the domain calculation for `transform_compose()` (@​mjskay, #408).",1,11,FALSE,NA
scales,9610fafa6a2f0bd8014fce7df0027dd3,"Transformation objects can optionally include the derivatives of the transform and the inverse transform (@​mjskay, #322).",1,12,FALSE,NA
scales,840feac50121ab67406f08fbfc56d43c,The `scale_cut` argument in `number()` now works as advertised for values below the lowest cut value (#346),1,13,FALSE,NA
scales,98603143892522be4ed12d7e411270c7,`scale_cut` will now choose a more appropriate cut in the case of the first cut creating an irrational-ish number.,1,14,FALSE,NA
scales,adc4ee2b83232766d356b798a4894575,"Added a new option to the `style_positive` argument in `label_*()` functions. Setting this to `""space""` will add a figure space in front of the number to make it easier to align positive and negative values as figure space takes up the same amount of space as `-` (#366)",1,15,FALSE,NA
scales,ddc315752183aec93e96ecd3ba971704,`label_dollar()` has been superseeded by `label_currency()` for clarity (#344),1,16,FALSE,NA
scales,40697023c74ffa95ddc90ad168224d53,Palette functions now have the `pal_`-prefix. The old `_pal`-suffixed versions are kept for backward compatibility.,1,17,FALSE,NA
scales,4993b80daf2d0e23cef96b0ff199e4b6,Re-document to fix HTML issues in `.Rd`.,1,18,FALSE,NA
scales,17486e11594c4ce4a430b47897ec181b,`label_number()`:,1,19,FALSE,NA
scales,17486e11594c4ce4a430b47897ec181b,"• New `style_positive` and `style_negative` argument control how positive and negative numbers are styled (#249, #262).",2,20,FALSE,`label_number()`:
scales,17486e11594c4ce4a430b47897ec181b,"• The `prefix` comes after the negative sign, rather than before it, yielding (e.g) the correct `-$1` instead of `$-1`.",2,21,FALSE,`label_number()`:
scales,17486e11594c4ce4a430b47897ec181b,"• New `scale_cut` argument enables independent scaling of different parts of the range. This is useful in `label_dollar()` to support scaling of large numbers by suffix (e.g. ""M"" for million, ""B"" for billion). It can be used with `cut_short_scale()` when billion = thousand million and `cut_long_scale()` when billion = million million (initial implementation provided by @​davidchall). Additionally, the accuracy is now computed per scale category, so rescaled values can have different numbers of decimal places (#339).",2,22,FALSE,`label_number()`:
scales,17486e11594c4ce4a430b47897ec181b,"• `label_number_si()` is deprecated because it previously used short scale abbreviations instead of the correct SI prefixes. You can mimic the previous results with `label_number(scale_cut = cut_scale_short())` or get real SI labels with `label_number(scale_cut = cut_SI(""m""))` (#339, with help from @​davidchall).",2,23,FALSE,`label_number()`:
scales,3961f612d0d143aec1f8e0a63b49b446,"`label_bytes()` now correctly accounts for the `scale` argument when choosing auto units (@​davidchall, #235).",1,24,FALSE,NA
scales,b26f7bd6ea78184a543d597638fea8ee,`label_date()` and `label_time()` gain a `locale` argument that allows you to set the locale used to generate day and month names (#309).,1,25,FALSE,NA
scales,845bcf750c925d2d8f5248a6194c7a48,"New `label_log()` displays the base and a superscript exponent, for use with logarithmic axes (@​davidchall, #312).",1,26,FALSE,NA
scales,4b66ea86a76c354007e9cac6fc232c71,"New `compose_trans()` allows arbitrary composition of transformers. This is mostly easily achieved by passing a character vector whenever you might previously have passed the name of a single transformer. For example, `scale_y_continuous(trans = c(""log10"", ""reverse""))` will create a reverse log-10 scale (#287).",1,27,FALSE,NA
scales,d94c390457ed01acfc2bf0a099b3da99,"`breaks_width()` now supports units like `""3 months""` in the `offset` argument.",1,28,FALSE,NA
scales,b130767bbfbeae90e3f634488be279ca,`col_quantile()` no longer errors if data is sufficiently skewed that we can't generate the requested number of unique colours (#294).,1,29,FALSE,NA
scales,ec28891c1bc38c9d2c61fdeee3f1fa77,"`dollar(negative_parens)` is deprecated in favour of `style_negative = ""parens""`.",1,30,FALSE,NA
scales,be4ad4d4c420d6fd1ebaaf83229d72e9,`hue_pal()` respects `h.start` once again (#288).,1,31,FALSE,NA
scales,48baf8005004f8175cb61d1247ff633f,"`label_number_auto()` correctly formats single numbers that are greater than 1e+06 without an error (@​karawoo, #321)",1,32,FALSE,NA
scales,a18a43a1fd5d89aac925768090ed9888,"`manual_pal()` now always returns an unnamed colour vector, which is easy to use with `ggplot2::discrete_scale()` (@​yutannihilation, #284).",1,33,FALSE,NA
scales,eb160284655c9317382c31516ee3e66c,`time_trans()` and `date_trans()` have `domains` of the correct type so that they can be transformed without error (#298).,1,34,FALSE,NA
scales,2bd6758e5ffa7e20d0aea68bc87ce754,"Internal `precision()`, used when `accuracy = NULL`, now avoids displaying unnecessary digits (@​davidchall, #304).",1,35,FALSE,NA
scales,3fd76a23c168ffd5d6043e273ad98bc8,"`breaks_width()` now handles `difftime`/`hms` objects (@​bhogan-mitre, #244).",1,36,FALSE,NA
scales,2f8ddb628b328c8bf19fbb9ff7d7b927,"`hue_pal()` now correctly inverts color palettes when `direction = -1` (@​dpseidel, #252).",1,37,FALSE,NA
scales,6cd7df6ec199dca89a3c16b9c9a10e14,"Internal `precision()`, used when `accuracy = NULL`, now does a better job when duplicate values are present (@​teunbrand, #251). It also does a better job when there's a mix of finite and non-finite values (#257).",1,38,FALSE,NA
scales,e9d02586aa3e7f2bb1f3d6c93a46e9c0,"New `oob_keep()` to keep data outside range, allowing for zoom-limits when `oob_keep` is used as `oob` argument in scales. Existing out of bounds functions have been renamed with the `oob_`-prefix to indicate their role (@​teunbrand, #255).",1,39,FALSE,NA
scales,c47a5a57cb28bc087ba559dc00850f73,"`ordinal_french()` gains `plural` and `gender` arguments (@​stephLH, #256).",1,40,FALSE,NA
scales,d87000d4753eaf28ce2aabb6f3d9c89a,Axis breaks and labels have a new naming scheme: functions that generate breaks from limits are called `breaks_`; functions that generate labels from breaks are called `labels_` (#226).,1,41,FALSE,NA
scales,05e653bacf10107cf89f55c9373b903b,"All breaks and labels examples have been overhauled to use new `demo_continuous()`, `demo_discrete()`, and `demo_log10()`, so you can see how to use scales functions with ggplot2.",1,42,FALSE,NA
scales,dea2bb3a6870ae3b5de37babcba186c2,"All label functions preserve names (#202) and keep `NA`s as `NA`s instead of trying to convert to `""NA""` (@​clauswilke, #187).",1,43,FALSE,NA
scales,470be91f9d0c9a27756fb3ce10f8547c,"New `label_bytes()` replaces `number_bytes_format()` with a more convenient interface. It takes a single `unit` argument which can either be an SI unit (e.g. ""kB""), a binary unit (e.g. ""kIB""), or an automatic unit (either ""auto_si"" or ""auto_binary""). It always uses ""B"" as the symbol for bytes (#174), and checks that `units` are valid. Additionally, auto units are now used to determine the symbol separately for each value (@​mikmart):",1,44,FALSE,NA
scales,470be91f9d0c9a27756fb3ce10f8547c,"```
label_bytes(""auto_binary"")(1024^(1:3))
#> [1] ""1 kiB"" ""1 MiB"" ""1 GiB""
```",1,45,TRUE,NA
scales,0ab63a053557d9a9cbf1320b4d68bb59,"New `label_date_short()` creates labels for a date axis that only show the components of the date that have changed since the previous label. For example, if you have Jan 10, Jan 20, Jan 30, and Feb 1, `label_date_short()` will use labels Jan 10, 20, 30, Feb 1 (#209).",1,46,FALSE,NA
scales,c55da97b53c951dc8d9644e7209dc7d4,`label_dollar()` now correctly formats negative numbers as (e.g.) -\$200 (#216).,1,47,FALSE,NA
scales,937ec6449433e7a23c3d529cae62d1f5,"`label_math()` now returns an expression vector, and doesn't coerce inputs to names.",1,48,FALSE,NA
scales,c85310f5004b9e34b5b533ad4a8e9668,"`label_number()` takes `scale` into account when computing `accuracy`, if not supplied. This means that `label_percent()` should have better default accuracy in many cases (#192).",1,49,FALSE,NA
scales,5c0d94d7ca2991a6934f1341c1b68399,`label_number()` now picks the accuracy automatically by default. The underlying heuristic has been improved to use the distance between adjacent breaks (rather than the total range of the break).,1,50,FALSE,NA
scales,309b29670eea781e7d1175bd433ccb49,"New `label_number_auto()` automatically picks between `number_format()` and `scientific_format()` based on the range of the input. It should produce nice output over a very wide range of inputs (@​paleolimbot, #208).",1,51,FALSE,NA
scales,adcfb6e4df462e862bea41c8bae970ee,"New `label_number_si()` formats numeric vectors with limited SI units. Individual values are scaled and labelled with abbreviations ""K"", ""M"", ""B"", or ""T"" dependent on magnitude (@​dpseidel, #83).",1,52,FALSE,NA
scales,c8522f80e1653504e14dd68e4eca0549,"`label_parse()` now generates an expression object that can be used to display formatted labels in ggplot2 (@​agila5, #203).",1,53,FALSE,NA
scales,fe80d787a4a1e7d59343b2830c66f81d,"`label_pvalue()` now reports values close to 1 (as determined by `accuracy`) as (e.g.) ""\>0.99"". You can control the prefixes used with the new `prefix` argument (#213).",1,54,FALSE,NA
scales,9f4bde4c94fdbb692bb7fd324bd8ee23,"The built in breaks functions now returns a function that takes both a range and a desired number of breaks, making it possible to overwrite the defaults number of desired breaks given in the constructor call (@​thomasp85).",1,55,FALSE,NA
scales,6882fe742d16c1404e5f02e37f40ea9c,"`breaks_log()` has nicer behaviour when there are no finite inputs (#210). It also provides usable breaks even with very small ranges (@​billdenney, #168)",1,56,FALSE,NA
scales,626c467a0d4f195e5955ef997e948208,New `breaks_width()` which allows you to specify a fixed distance between breaks (along with optional offset).,1,57,FALSE,NA
scales,fc1a86397b7ed652eab77151fc828233,"New `yj_trans()` implements the Yeo-Johnson transformation (@​zamorarr, #196)",1,58,FALSE,NA
scales,168ba030e6cce9f5a0eb7237fe6a5a39,"`trans` objects gets methods for `plot()` and `lines()`, and all numeric transformations get an example showing the transformation.",1,59,FALSE,NA
scales,363ec6dae33f742384c52a97dbb86afa,"`boxcox_trans()` no longer throws an error when given NA values (@​sflippl, #181).",1,60,FALSE,NA
scales,e874e9a567ab7c6496c22755a0c45095,scales now uses the farver package for colour manipulation instead of a combination of grDevices and hand-rolled C++ code (#223).,1,61,FALSE,NA
scales,4ba6bc73a47fd005e3f2cf16a461546b,"`alpha()` now preserves element names (@​wibeasley, #195)",1,62,FALSE,NA
scales,62424f1a8e330b61838e531d567cad0f,`ContinuousRange` and `DiscreteRange` methods now properly inherit and are fully mutable (@​dpseidel).,1,63,FALSE,NA
scales,bc04ddf30fd368839f07cb6cf1acd7cb,"`col_numeric()`, `col_bin()`, `col_quantile()`, and `col_factor()` now support viridis colors. Just pass a palette name (`""magma""`, `""inferno""`, `""plasma""`, or `""viridis""`) as the `palette` argument (@​jcheng5, #191).",1,64,FALSE,NA
scales,79849a61476d81579ee4bb22be18e93a,"`col_numeric()`, `col_bin()`, `col_quantile()`, and `col_factor()` now have a `reverse` parameter, to apply color palettes in the opposite of their usual order (i.e. high-to-low instead of low-to-high) (@​jcheng5, #191).",1,65,FALSE,NA
scales,1fcc8a1fe97ac9ebfc91d27de8147bd7,"`col_bin()` and `col_quantile()` now take a `right` argument, which is passed to `base::cut()`; it indicates whether the bin/quantile intervals should be closed on the right (and open on the left), or vice versa (@​jcheng5, #191).",1,66,FALSE,NA
scales,05bd7a37c1b8c202ea1a2bdebf419cab,"`col_factor()` now tries to avoid interpolating qualitative RColorBrewer palettes. Instead, it attempts to assign a palette color to each factor level. Interpolation will still be used if there are more factor levels than available colors, and a warning will be emitted in that case (@​jcheng5, #191).",1,67,FALSE,NA
scales,a55e260fb6953b1eb748b1bf8179c10a,"`dichromat_pal()` documentation now builds without requiring suggested `dichromat` package to be installed (@​dpseidel, #172).",1,68,FALSE,NA
scales,5c37b520e32119504fa8ae5540eb2a84,"`date_breaks()` now supports subsecond intervals (@​dpseidel, #85).",1,69,FALSE,NA
scales,2ca9cb6c2f73128ccd1e682d333897f9,"`comma_format()`, `percent_format()` and `unit_format()` gain new arguments: `accuracy`, `scale`, `prefix`, `suffix`, `decimal.mark`, `big.mark` (@​larmarange, #146).",1,70,FALSE,NA
scales,3865ce2daaae328a72110bc40be87147,"`dollar_format()` gains new arguments: `accuracy`, `scale`, `decimal.mark`, `trim` (@​larmarange, #148).",1,71,FALSE,NA
scales,60220d531364aa14a566308115d2bd9d,"New `number_bytes_format()` and `number_bytes()` format numeric vectors into byte measurements (@​hrbrmstr, @​dpseidel).",1,72,FALSE,NA
scales,7852226a51b827d8bc4a9d0621e67a7a,"New `number_format()` provides a generic formatter for numbers (@​larmarange, #142).",1,73,FALSE,NA
scales,a32e3200ecab62ce3e502e546e802827,"New `pvalue_format()` formats p-values (@​larmarange, #145).",1,74,FALSE,NA
scales,5c3cdc1e75303b87b8938cc7f8ef1251,"`ordinal_format()` gains new arguments: `prefix`, `suffix`, `big.mark`, `rules`; rules for French and Spanish are also provided (@​larmarange, #149).",1,75,FALSE,NA
scales,25186545b1a2f1ef1cc943a8efb5e8ee,"`scientific_format()` gains new arguments: `scale`, `prefix`, `suffix`, `decimal.mark`, `trim` (@​larmarange, #147).",1,76,FALSE,NA
scales,2c72130bc2301a87fee200c5fcbc2f5c,"New `time_format()` formats `POSIXt` and `hms` objects (@​dpseidel, #88).",1,77,FALSE,NA
scales,edf73d1dd23b662c861ef12c78661b74,"`boxcox_trans()` is now invertible for `x >= 0` and requires positive values. A new argument `offset` allows specification of both type-1 and type-2 Box-Cox transformations (@​dpseidel, #103).",1,78,FALSE,NA
scales,1e6d0733d6ea0c5c9743cbbb0341c2b9,"`log_breaks()` returns integer multiples of integer powers of base when finer breaks are needed (@​ThierryO, #117).",1,79,FALSE,NA
scales,7a3c93041102a9e07abc49f9966f1cc0,New function `modulus_trans()` implements the modulus transformation for positive and negative values (@​dpseidel).,1,80,FALSE,NA
scales,94d4036cb3a9d4233c443a4e9af26808,"New `pseudo_log_trans()` for transforming numerics into a signed logarithmic scale with a smooth transition to a linear scale around 0 (@​lepennec, #106).",1,81,FALSE,NA
scales,a7703e217e483c6ae8c11a5bb254c613,"scales functions now work as expected when it is used inside a for loop. In previous package versions if a scales function was used with variable custom parameters inside a for loop, some of the parameters were not evaluated until the end of the loop, due to how R lazy evaluation works (@​zeehio, #81).",1,82,FALSE,NA
scales,055e20c481949175fe377385561a5f80,"`colour_ramp()` now uses `alpha = TRUE` by default (@​clauswilke, #108).",1,83,FALSE,NA
scales,cc42382524b4eaec89f3ed5bd8305e2f,"`date_breaks()` now supports subsecond intervals (@​dpseidel, #85).",1,84,FALSE,NA
scales,aeebafde48931c9d27aba575245bd5cf,"Removes `dichromat` and `plyr` dependencies. `dichromat` is now suggested (@​dpseidel, #118).",1,85,FALSE,NA
scales,c1db5861bb41450e9d1a169b35cc3ace,"`expand_range()` arguments `mul` and `add` now affect scales with a range of 0\ (@​dpseidel, ggplot2-2281).",1,86,FALSE,NA
scales,b641ea35101b3f24d3250a243086ab85,"`extended_breaks()` now allows user specification of the `labeling::extended()` argument `only.loose` to permit more flexible breaks specification (@​dpseidel, #99).",1,87,FALSE,NA
scales,1c4c0bf72034eeb84a1881d302530fea,"New `rescale()` and `rescale_mid()` methods support `dist` objects (@​zeehio, #105).",1,88,FALSE,NA
scales,771285a9bb807510061e00fcdb5435fc,"`rescale_mid()` now properly handles NAs (@​foo-bar-baz-qux, #104).",1,89,FALSE,NA
scales,cca878bff7718282e33ba2fc878e907f,New function `regular_minor_breaks()` calculates minor breaks as a property of the transformation (@​karawoo).,1,90,FALSE,NA
scales,d644629da50dc18d9328278d785af051,Adds `viridis_pal()` for creating palettes with color maps from the viridisLite package (@​karawoo).,1,91,FALSE,NA
scales,1bc2ad69edf7a8586a1a5a95dc4439a2,Switched from reference classes to R6 (#96).,1,92,FALSE,NA
scales,1bb2b5fcf5f044cfc25f1f7a8d1c0ad0,"`rescale()` and `rescale_mid()` are now S3 generics, and work with `numeric`, `Date`, `POSIXct`, `POSIXlt` and `bit64::integer64` objects (@​zeehio, #74).",1,93,FALSE,NA
scales,e34390af9cd30b37f1dd6c4e5d9fd545,`extended_breaks()` no longer fails on pathological inputs.,1,94,FALSE,NA
scales,d166f98e7604cd74f11cd7eb709c1f12,New `hms_trans()` for transforming hms time vectors.,1,95,FALSE,NA
scales,6c93d1aae9475474fb757a078d66af5f,`train_discrete()` gets a new `na.rm` argument which controls whether `NA`s are preserved or dropped.,1,96,FALSE,NA
scales,d948726214f83092a8a4ff5bfe757e97,Switched from `NEWS` to `NEWS.md`.,1,97,FALSE,NA
scales,58fb2516364d650250d6358ce88c107b,"`manual_pal()` produces a warning if n is greater than the number of values in the palette (@​jrnold, #68).",1,98,FALSE,NA
scales,78dcfeb44971cf093482e109247ca486,"`precision(0)` now returns 1, which means `percent(0)` now returns 0% (#50).",1,99,FALSE,NA
scales,c71f7b83e53a0520d702e29575b798a7,`scale_continuous()` uses a more correct check for numeric values.,1,100,FALSE,NA
scales,70b38675b0fa34c30ea90facb23791fe,NaN is correctly recognised as a missing value by the gradient palettes (ggplot2-1482).,1,101,FALSE,NA
scales,80945c92b2c2b90107a8cf9c8b1323ca,`rescale()` preserves missing values in input when the range of `x` is (effectively) 0 (ggplot2-985).,1,102,FALSE,NA
scales,bd871ffedb6001e624eb02b635e89c25,"Continuous colour palettes now use `colour_ramp()` instead of `colorRamp()`. This only supports interpolation in Lab colour space, but is hundreds of times faster.",1,103,FALSE,NA
scales,e57c157d2b8044f918a3a3d2e518c0d2,`date_format()` gains an option to specify time zone (#51).,1,104,FALSE,NA
scales,5d076aa168c84511bd1c270f29d7361d,"`dollar_format()` is now more flexible and can add either prefixes or suffixes for different currencies (#53). It gains a `negative_parens` argument to show negative values as `($100)` and now passes missing values through unchanged (@​dougmitarotonda, #40).",1,105,FALSE,NA
scales,0e86d942aa82237bd72e89d41d9b665b,"New `ordinal_format()` generates ordinal numbers (1st, 2nd, etc) (@​aaronwolen, #55).",1,106,FALSE,NA
scales,147649ab8ca11b75d24f8e5c21d7cf75,"New `unit_format()` makes it easier to add units to labels, optionally scaling (@​ThierryO, #46).",1,107,FALSE,NA
scales,d712baccb131fad0262e2b2ae34c064a,"New `wrap_format()` function to wrap character vectors to a desired width. (@​jimhester, #37).",1,108,FALSE,NA
scales,04c7d2a695b8fbdd14466a29a1d72f1f,"New color scaling functions `col_numeric()`, `col_bin()`, `col_quantile()`, and `col_factor()`. These functions provide concise ways to map continuous or categorical values to color spectra.",1,109,FALSE,NA
scales,db9ea2655c3a3a410eff348dfb6b077f,"New `colour_ramp()` function for performing color interpolation in the CIELAB color space (like `grDevices::colorRamp(space = 'Lab')`, but much faster).",1,110,FALSE,NA
scales,c932091dbe3ca38f44090bc4e01b0156,`boxcox_trans()` returns correct value when p is close to zero (#31).,1,111,FALSE,NA
scales,8121f0e693a5a8e2c6bb8b9d1124f664,"`dollar()` and `percent()` both correctly return a zero length string for zero length input (@​BrianDiggs, #35).",1,112,FALSE,NA
scales,21de9ef0f1817acea9d7c9f6da2706ae,"`brewer_pal()` gains a `direction` argument to easily invert the order of colours (@​jiho, #36).",1,113,FALSE,NA
scales,0254b372215ce450e03fd8f9e923025c,"`show_col()` has additional options to showcase colors better (@​jiho, #52).",1,114,FALSE,NA
scales,0bf8ff19583b2019a59ec4a38e987eb0,Relaxed tolerance in `zero_range()` to `.Machine$double.eps * 1000` (#33).,1,115,FALSE,NA
scales,e6f8fb83e63811b1d3b4ae3de1afbcd2,Eliminate stringr dependency.,1,116,FALSE,NA
scales,1fb3dd26dbcae628052cd1ad736abb9e,Fix outstanding errors in R CMD check.,1,117,FALSE,NA
scales,438f8c8c11a54f1144bbda112c60beb3,"`floor_time()` calls `to_time()`, but that function was moved into a function so it was no longer available in the scales namespace. Now `floor_time()` has its own copy of that function (Thanks to Stefan Novak).",1,118,FALSE,NA
scales,f539c12c9be4740cbde6eaa53b463dbd,Color palettes generated by `brewer_pal()` no longer give warnings when fewer than 3 colors are requested (@​wch).,1,119,FALSE,NA
scales,663d4cd6d3aa0e904ea553295b0f153b,"`abs_area()` and `rescale_max()` functions have been added, for scaling the area of points to be proportional to their value. These are used by `scale_size_area()` in ggplot2.",1,120,FALSE,NA
scales,b29b02e7eb6228d1ad34a8a34140f62a,`zero_range()` has improved behaviour thanks to Brian Diggs.,1,121,FALSE,NA
scales,4f8d3b414814431ea2bae2a0f0591389,"`brewer_pal()` complains if you give it an incorrect palette type. (Fixes #15, thanks to Jean-Olivier Irisson).",1,122,FALSE,NA
scales,9d6706b6dcf0193bdb402a895c8ada9c,"`shape_pal()` warns if asked for more than 6 values. (Fixes #16, thanks to Jean-Olivier Irisson).",1,123,FALSE,NA
scales,3f9c8e82ee97fb4f307af5614fe64722,"`time_trans()` gains an optional argument `tz` to specify the time zone to use for the times. If not specified, it will be guess from the first input with a non-null time zone.",1,124,FALSE,NA
scales,30a58b0e2265d42c2f2316fde780b0ab,`date_trans()` and `time_trans()` now check that their inputs are of the correct type. This prevents ggplot2 scales from silently giving incorrect outputs when given incorrect inputs.,1,125,FALSE,NA
scales,76d3078bfe0592caf04e009388e82f3b,"Change the default breaks algorithm for `cbreaks()` and `trans_new()`. Previously it was `pretty_breaks()`, and now it's `extended_breaks()`, which uses the `extended()` algorithm from the labeling package.",1,126,FALSE,NA
scales,16b7c3d5f79283aa14fd3390dcf73f94,fixed namespace problem with `fullseq()`.,1,127,FALSE,NA
scales,f90fb8e451ab619e443e52711eab106c,`suppressWarnings` from `train_continuous()` so zero-row or all infinite data frames don't potentially cause problems.,1,128,FALSE,NA
scales,7c20aec9af477c3b9d4d686132d53944,check for zero-length colour in `gradient_n_pal()`.,1,129,FALSE,NA
scales,791f3f9df93d0f036d7d063492b34773,"added `extended_breaks()` which implements an extension to Wilkinson's labelling approach, as implemented in the `labeling` package. This should generally produce nicer breaks than `pretty_breaks()`.",1,130,FALSE,NA
scales,157dada16227771e20477f87f9a58621,`alpha()` can now preserve existing alpha values if `alpha()` is missing.,1,131,FALSE,NA
scales,0ca36cfcc84f2b875e3ead1452afd741,"`log_breaks()` always gives breaks evenly spaced on the log scale, never evenly spaced on the data scale. This will result in really bad breaks for some ranges (e.g 0.5-0.6), but you probably shouldn't be using log scales in that situation anyway.",1,132,FALSE,NA
scales,2b325e6805e2d788a24cd319c29ee030,"`censor()` and `squish()` gain `only.finite` argument and default to operating only on finite values. This is needed for ggplot2, and reflects the use of Inf and -Inf as special values.",1,133,FALSE,NA
scales,7185c1a8aa387da4809965e242d441e3,`bounds` functions now `force` evaluation of range to avoid bug with S3 method dispatch inside primitive functions (e.g. `[`).,1,134,FALSE,NA
scales,916b4eeee2afac4753b8ce6e94d82eb3,"Simplified algorithm for `discrete_range()` that is robust to `stringsAsFactors` global option. Now, the order of a factor will only be preserved if the full factor is the first object seen, and all subsequent inputs are subsets of the levels of the original factor.",1,135,FALSE,NA
scales,c7e80162a96d97f7e0a0badad2673294,`scientific()` ensures output is always in scientific format and off the specified number of significant digits. `comma()` ensures output is never in scientific format (Fixes #7).,1,136,FALSE,NA
scales,35a52f9cfc9e4921e97c758ef10ac277,Another tweak to `zero_range()` to better detect when a range has zero length (Fixes #6).,1,137,FALSE,NA
sessioninfo,faf82c0ce6d83698f0bf16b7eb987005,Update pkgdown url to sessioninfo.r-lib.org,1,1,FALSE,NA
sessioninfo,c8a7a959ebee21338db3c59fa11e620a,"`session_diff()` now accepts the URL to a GitHub Actions log as the source for `new` and/or `old` (@​jennybc, #68).",1,2,FALSE,NA
sessioninfo,9a6256642e9d12063a72d80cb63aa107,`session_info()` output now includes an explanation for symbol highlighting packages attached to the search path (@​IndrajeetPatil).,1,3,FALSE,NA
sessioninfo,ec5a26ba25d516562a64dbcf247a84d1,This version does not add an emoji hash to the output.,1,4,FALSE,NA
sessioninfo,c7cc552734562b2522e6f8e213b88e39,"The `source` column of the output data frame of `package_info()` (also part of `session_info()`), now contains the full SHA for packages installed from GitHub, instead of only the first seven characters. This makes it easier to use the SHA programmatically. Note that this does not affect formatting and printing, which still use the abbreviated SHA. (@​muschellij2, #61).",1,5,FALSE,NA
sessioninfo,cef15c3ab0390602e764ab21c5bc2a83,"RStudio Package Manager (RSPM) and other repository sources are now shown in the `source` column, if they set the `Repository` field in `DESCRIPTION`.",1,6,FALSE,NA
sessioninfo,d343ac7af40498be5fab90ba6684b1b6,`package_info()` and `session_info()` now do not fail if the version number of an installed package is invalid.,1,7,FALSE,NA
sessioninfo,dd71a9114fd1d7a38a97f8e0b6cd59b6,"Better aliases for the list of attached, loaded and installed packages in `package_inf()` and `session_info()`.",1,8,FALSE,NA
sessioninfo,37dbb656a564caa921b0a1f3f5b131e6,"New function `external_info()`, information about external software. It can be also requested with the new `info` argument of `session_info()` (@​llrs).",1,9,FALSE,NA
sessioninfo,3392474989a613aef2e5e056a6dd09ae,"New function `python_info()`, information about Python configuration. It is automatically included in `session_info()` if the reticulate package is loaded and Python is available. You can also request it manually via the new `info` argument of `session_info()` (#33).",1,10,FALSE,NA
sessioninfo,6cc52a3a23281892b3675ce09cfb2d7d,"The output of `session_info()` now has an emoji hash, consisting of three emojis. This allows quick comparison of two session infos (#26).",1,11,FALSE,NA
sessioninfo,51d9118a77a0af5e32c298b92202a262,"All `*_info()` functions use ANSI colors on systems that support them. In particular, it highlights unusual package versions and sources, and possible package problems (#3).",1,12,FALSE,NA
sessioninfo,5339cb250e87c0818d7c5999df564e85,"New `session_diff()` function, to compare two session infos from various sources (#6).",1,13,FALSE,NA
sessioninfo,133286ee0922688e079fb08c421d926a,"`session_info()` has a new argument named `info`, to select which parts of the session information should be printed.",1,14,FALSE,NA
sessioninfo,946bcab9d13ea72b7b409968979a211e,"`session_info()` now has a `to_file` argument, to write the output to a file (#30).",1,15,FALSE,NA
sessioninfo,1b7db7049c609657d21cec6e8c99f0c5,"`session_inf()` has a `dependencies` argument now, and passes it to `package_info()`.",1,16,FALSE,NA
sessioninfo,471ddc1387247eae6f66b701115e8804,"`package_info()` and `session_info()` can now list the attached or installed packages, see the `pkgs` argument in the manual for details (#42).",1,17,FALSE,NA
sessioninfo,784b520ef6f795261a0c552701c20a5c,`platform_info()` and `session_info()` now include the Windows build number in the output (#40).,1,18,FALSE,NA
sessioninfo,8ad77a5d2e16ff7e06dbd3cbd342d7b2,sessioninfo now never wraps the output if the screen is too narrow (#31).,1,19,FALSE,NA
sessioninfo,77bf194fdaf23da97fd1d684bbdcb999,All `*_info()` functions have a `format()` S3 method now.,1,20,FALSE,NA
sessioninfo,ed383d7de2413b2957066bb5e6e677e5,`platform_info()` and `session_info()` now include the RStudio version if the R session is in RStudio (#29).,1,21,FALSE,NA
sessioninfo,c114795fb1a1b0708387d015b7bf8b41,The `source` column of the package list is now more informative.,1,22,FALSE,NA
sessioninfo,f0e7e8aed10563c8f7b6c4d66f40ac37,"`package_info()` and `session_info()` now detect locally installed packages correctly if they have an empty `biocViews` field in \`DESCRIPTION (@​llrs, #25)",1,23,FALSE,NA
sessioninfo,babd46fbb7b3a6e2f4ee5baecc88bbfc,`package_info()` and `session_info()` now handle the case when a loaded package was removed from the disk.,1,24,FALSE,NA
sessioninfo,83682e15e6ce42b0b9a458fb80aa164d,"`package_info()` now has a `dependencies` argument, to filter the type of dependent packages in the output (#22).",1,25,FALSE,NA
sessioninfo,8cdca19601bd49b0cde5155e4f7149f4,"`session_info()` and `package_info()` now show the library search path, and also which library each package was loaded from. They also warn if the on-disk version of the package has a different path than the loaded version (#9, #20).",1,26,FALSE,NA
sessioninfo,2d10df5a61bf7c819d0ce550db39d4db,`package_info()`'s `ondiskversion` entry is now correct.,1,27,FALSE,NA
sessioninfo,2925791d5b886c7fe9a072c620c70993,"`session_info()` and `package_info()` now verify the MD5 hashes of DLL files on Windows, and warns for micmatches, as these are usually broken packages (#12, #16).",1,28,FALSE,NA
sessioninfo,ad1d6c799f77be025f5a634adf15472b,"We use now the cli package, instead of clisymbols, and this fixes printing bugs in LaTeX documents (#14).",1,29,FALSE,NA
sessioninfo,1e70916056ce4165b9cc30e0896c84a1,"`session_info()` and `platform_info()` now include the `LC_CTYPE` locale category (@​patperry, #11)",1,30,FALSE,NA
sessioninfo,6697f726c06399af3aaeb48a3468f3f4,"`session_info()` and `package_info()` now print source of the CRAN packages in uppercase, always, even if they were installed by devtools.",1,31,FALSE,NA
sessioninfo,93de99b06ffc8eaa6befe1e6beb61511,"`session_info()` and `platform_info()` now handle the case when `utils::sessionInfo()$running` is `NULL` (@​HenrikBengtsson, #7).",1,32,FALSE,NA
sessioninfo,8b4a3a2231f1ea903e49ab369feb027a,`session_info()` and `package_info()` now only list loaded versions for namespaces which are already loaded. This only makes a difference if the `pkgs` argument is given (#4).,1,33,FALSE,NA
sessioninfo,1a558af6ddfd4ebf626544efaf42be6c,"Do not consult the `max.print` option, for platform and package info (@​jennybc, #13).",1,34,FALSE,NA
slider,ee3fe322d9ad4cdf14eeb74453509d28,Fixed tests that failed under valgrind due to `NA` vs `NaN` peculiarities (#198).,1,1,FALSE,NA
slider,34f9b1a18ef2c8a415bfb7209717ce38,"Bumped required versions of vctrs, cli, and rlang to their current CRAN versions.",1,2,FALSE,NA
slider,5e7a5ce214dab0ca30ae497597919763,Bumped required R version to \>= 3.6.0.,1,3,FALSE,NA
slider,d1db62b8d47b0ead668d68574537c48f,"Improved reported error calls and error messages throughout the package, and switched from glue to cli (#168, #188).",1,4,FALSE,NA
slider,bf1c4cee350ef14c4418d891a9983316,Index (`.i`) types that aren't explicitly understood by vctrs are now handled slightly better (#182).,1,5,FALSE,NA
slider,da436d90f23a43c5ab8bd5f799ca5efe,"The `slide_index_*()` and `hop_index_*()` families now use `vctrs::vec_rank()` internally to compute a dense rank, which should be a little faster than the previous home grown approach (#177).",1,6,FALSE,NA
slider,247e40907aa3b650fe51c86b63aa3286,New `slider_plus()` and `slider_minus()` developer facing helpers that allow package authors to register custom double dispatch methods to override the default computation of `.i - .before` and `.i + .after` when generating index bounds internally. This is intended to allow the clock and almanac packages to register methods so their custom types can be used natively in slider (#91).,1,7,FALSE,NA
slider,f0fc06d4c8b362bab5ad003a30a33f5d,Removed ellipsis in favor of using the equivalent functions in rlang (#185).,1,8,FALSE,NA
slider,9240612584adfa36204a4c89ae9a942d,Removed `R_forceAndCall()` fallback now that R \>=3.4.0 is required (#172).,1,9,FALSE,NA
slider,418c54ed7430f14e12ad99d80b2b5797,Fixed `-Wstrict-prototypes` warnings as requested by CRAN (#173).,1,10,FALSE,NA
slider,cfa87bd8b33d99a1a2bf2600693f5e18,Bumped minimal version of R to \>=3.4.0 to align with tidyverse standards.,1,11,FALSE,NA
slider,3b8a824d278bd9a725c99cd9486ed64e,"Bumped minimal version of rlang to \>=1.0.6 and vctrs to \>=0.5.0 (#165, #174).",1,12,FALSE,NA
slider,8423ed9bf1f9d5f67f7561d81710d917,Fixed redirecting URLs.,1,13,FALSE,NA
slider,0a737b7868439b84e46c4b6cef1eee2f,Updated internal usage of `vec_order()` to prepare for a breaking change in vctrs (#153).,1,14,FALSE,NA
slider,740c9e9954a86092c2c32d44af7f1f77,Fixed a C alignment issue detected by CRAN's USBAN machine related to allocating vectors of `long double`.,1,15,FALSE,NA
slider,ecf3bce0a803378450271486dc9d5ec6,"Fixed a test that relied too strongly on the size of the C type, `long double`, which can vary across platforms (#147).",1,16,FALSE,NA
slider,f88eac9a90a0f95ae86b2a35db8f9315,Fixed an out of sync vignette entry (#148).,1,17,FALSE,NA
slider,245f942dd808e52b7afdbbb68d82c061,New family of very fast specialized sliding functions:,1,18,FALSE,NA
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_sum()`, `slide_index_sum()`: for rolling sums",2,19,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_mean()`, `slide_index_mean()`: for rolling averages",2,20,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_prod()`, `slide_index_prod()`: for rolling products",2,21,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_min()`, `slide_index_min()`: for rolling minimums",2,22,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_max()`, `slide_index_max()`: for rolling maximums",2,23,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_any()`, `slide_index_any()`: for rolling any",2,24,FALSE,New family of very fast specialized sliding functions:
slider,245f942dd808e52b7afdbbb68d82c061,"• `slide_all()`, `slide_index_all()`: for rolling all",2,25,FALSE,New family of very fast specialized sliding functions:
slider,a08a76b33a0a46212950b150e3fa5af6,"The `slide_index_*()` family now allows `.before` and `.after` to be functions of 1 argument (the index) that compute the boundaries of the sliding window. This can be extremely useful when the default, which computes `.i - .before` and `.i + .after`, is not applicable or correct for your needs. One use case is to set `.before = ~.x %m-% months(1)` rather than `.before = months(1)` to perform a 1 month rolling window in a way that won't generate `NA` values on invalid dates (like 1 month before 2019-03-31) (#139).",1,26,FALSE,NA
slider,a641c4eb52108b6832fc11e01294db02,"The `slide_index_*()` family has undergone some internal changes to make it more compatible with custom vctrs classes that could be provided as the index (`.i`), such as the date-time classes in the clock package (#133, #130).",1,27,FALSE,NA
slider,224bb7e96cb23cf2fbcb8c588db78c63,"For the `slide_index_*()` family, it is now required that `.i - .before` and `.i + .after` be castable to `.i` by `vctrs::vec_cast()`. Similarly, for the `hop_index_*()` family, `.starts` and `.stops` must both be castable to `.i` (#132).",1,28,FALSE,NA
slider,b624bd2ddf4ad261765a4dbeb21c5f24,"New vignette, `vignette(""tsibble"")`, explaining how to transition from tsibble to slider (#128).",1,29,FALSE,NA
slider,bcc34babe177b7e0d9cf53697f16ed17,"`vignette(""rowwise"")` has been updated to use `cur_data()` from dplyr 1.0.0, which makes it significantly easier to do rolling operations on data frames (like rolling regressions) using slider in a dplyr pipeline.",1,30,FALSE,NA
slider,b6ada02af1ea4468b414b4e0c9c83ab7,`slide_period()` and friends have slightly better handling of size zero input when `.complete = TRUE` (#111).,1,31,FALSE,NA
slider,1034c4f32d3b6302c1d53d3c4362682c,"Better error messages for `NA` input with `.before`, `.after`, `.step` and `.complete` have been added (#110).",1,32,FALSE,NA
slider,b7b4f0d93a5c7f0db9ff5469fbf92644,A few instances of possibly unsafe C protection usage have been fixed (#112).,1,33,FALSE,NA
slider,73cc35725bf432512336294326690ac7,Tests have been updated to use only numeric values in the `vctrs::new_date()` constructor (#113).,1,34,FALSE,NA
slider,b46220bb53961dd2559863d19bbac2c8,"As a followup to a change in slider 0.1.3, edge cases with size zero input in `hop()` have also been fixed.",1,35,FALSE,NA
slider,ad3db3378bc41c5eb49617bbdd01f956,C code has been refactored to be less reliant on vctrs internals.,1,36,FALSE,NA
slider,5188f211381bd6c612a17d2c80e8f2d7,Updated to stay compatible with vctrs 0.3.0.,1,37,FALSE,NA
slider,2061033aa18955bc8d83b7c95e6fb294,A few edge cases with size zero input in the index functions have been fixed.,1,38,FALSE,NA
slider,db839d634660ebfd3eb85f2990eb6ba6,"The default for the `.names_to` argument of `*_dfr()` variants has been updated to `rlang::zap()` to match the default of the function it is passed on to, `vctrs::vec_rbind()`.",1,39,FALSE,NA
slider,9aefd72aefdfe5457cbac5da9b27a13b,"All `*_vec()` variants now maintain size stability when auto-simplifying (i.e. when `.ptype = NULL`) (#78, #93).",1,40,FALSE,NA
slider,6ce5cf5b610c0829f977412df90d55e8,"`hop()` and its variants no longer place the names of `.x` on the output. Because there is no *size* guarantee on the output, the size of `.x` can be different than the size of the output, meaning that the names might not line up. This also affects `slide_period()`, which is implemented using a `hop()` variant (#75).",1,41,FALSE,NA
slider,b6250c8a432598613d4745839b7c4175,"With data frames containing row names, `slide()` and its variants now copy those row names onto the output. This is an implicit benefit from vctrs gaining better support for data frame row names.",1,42,FALSE,NA
slider,fe7b2e78b4d0eaefc84d78945bf64a7b,Updated to stay compatible with the latest version of vctrs.,1,43,FALSE,NA
slider,c0a2aaad2db24d962a9e8cb050a4d377,"Fixed a ""multiple definition"" C issue when compiling with gcc10.",1,44,FALSE,NA
slider,d0c740bcc2f9197a1dd42bffae0547d4,Added a `NEWS.md` file to track changes to the package.,1,45,FALSE,NA
styler,0b60816ec89715070410912753db18a8,Use cli messaging for cache (#1127).,1,1,FALSE,NA
styler,255f86f9eec6901d0f1b9271fbb9b24e,Use latest (and stable!) pre-commit (#1144).,1,2,FALSE,NA
styler,4c5022cf7fdde56f5f22052f6c589667,Fix CRAN warning on invalid numeric version inputs (#1143).,1,3,FALSE,NA
styler,d7e836556db14cdc92b5d66e700fd9f2,Bump JamesIves/github-pages-deploy-action from 4.4.2 to 4.4.3 (#1139).,1,4,FALSE,NA
styler,a40def92e86b473a73b033b0386fd9a9,fix pre-commit (#1132).,1,5,FALSE,NA
styler,e4c73ec7c870f6cbde057c17c6ab1815,Don't require dplyr anywhere (#1131).,1,6,FALSE,NA
styler,a3538952d06dec67c92a9b137e8ff55b,Code quality improvements (#1122).,1,7,FALSE,NA
styler,d3ee7123dba313ed468ed70d8b3f4f52,Bump JamesIves/github-pages-deploy-action from 4.4.1 to 4.4.2 (#1123).,1,8,FALSE,NA
styler,599ecd4aaa2fb00c5bf3fdae34ed3dc8,Require at least R 3.6 (#1101).,1,9,FALSE,NA
styler,59db7faa0dfe56af55665bbec6a2b68e,Prefer {vctrs} functions over slower {base} equivalents (#1114).,1,10,FALSE,NA
styler,84c67e5a14aad0fa2e452745838aa8f3,Replace deprecated use of `rlang::with_handlers()` (#1103).,1,11,FALSE,NA
styler,6d04809257dc11d41b0b29eb984089bc,Remove tail recursion in favor of `repeat` (#1113).,1,12,FALSE,NA
styler,4f7a18f890a93c3553887dde204f6e22,split `test-public_api.R` for better sharding (#1109).,1,13,FALSE,NA
styler,43f830361882e4ada846c1836af0f535,0-pad filenames for sharding (#1110),1,14,FALSE,NA
styler,09225d2e911d512e97664a262db6aeff,add missing {testthat} snapshots (#1115).,1,15,FALSE,NA
styler,15346ccac35ac75cbd5edb0a1690beae,"Bump {touchstone} config (#1104, #1107).",1,16,FALSE,NA
styler,9e2c097dedc39eb6001d46d0ff051355,Bump `actions/checkout` to version 3 in GitHub Actions (#1098).,1,17,FALSE,NA
styler,fb64a7c425810825776a63c349c4a5ba,Fix interaction between cache and stylerignore that could produce invalid code (#1072).,1,18,FALSE,NA
styler,58cf753c8d304508577755b6636d6acc,Don't remove line break around `{{` and comments that can yield invalid code (#1070).,1,19,FALSE,NA
styler,b932908b1b944e6ce227e1562489bc89,Styling empty roxygen code examples don't cause errors anymore (#1096).,1,20,FALSE,NA
styler,38425bca6e3468156d2d40b34a4773e8,Double indent is also kept if there is only one argument (#1094).,1,21,FALSE,NA
styler,5977b3786c8846b245943d001a182d8a,Improved blank lines handling for roxygen examples (#1085).,1,22,FALSE,NA
styler,444ad712c24bc1d935c3713f767f3725,style roxygen examples even if nothing comes after (#1089).,1,23,FALSE,NA
styler,39b4f018c92f4a4130a4ef9055ba3854,"Document `""qmd""` as a valid `filetype` (#1091).",1,24,FALSE,NA
styler,8587315c0c74e993c31012accd78ac60,"The tidyverse recently introduced double-indention for function declarations that don't fit on one line. It indents two levels, i.e. 4 spaces if you `indent_by` two spaces.",1,25,FALSE,NA
styler,67e18655e8dc2478211eee005065e316,Previously styled code that is now stylerignored should always be formatted correctly. It boils down to the requirement that stylerignore sequences must always be in the same block (#1082).,1,27,FALSE,NA
styler,7e49b5b768650792b087882ee3804631,styling around `{{` and comments now yields parsable output (#1088).,1,28,FALSE,NA
styler,1d5509e77f0c73e0c311b089e43c5a5e,trailing blank lines in roxygen code examples are removed (#1085).,1,29,FALSE,NA
styler,b0712c95f66fff7b04769e0c6ec76759,roxygen code examples that don't have any code following after them are now also styled (#1067).,1,30,FALSE,NA
styler,0a5fb4627aefad30dae7bf9d02b38a7f,Less noisy communication if R option `styler.cache_root` is not set (#1063).,1,31,FALSE,NA
styler,c0ac3c43657b3117b7bbaab252cd42d0,"use {lintr} config (#1057, #1059) and pre-commit hook (#1064).",1,32,FALSE,NA
styler,da3decec5ff08bf7ce1f0017c79c0c46,"use new {pkgdown} hook, check for parsable yaml and mixed line ending (#1080, #1081).",1,33,FALSE,NA
styler,29468ec18378f79c286822bed1196e6b,update GitHub Actions workflow versions one time (#1073) and add dependabot for the future (#1974).,1,34,FALSE,NA
styler,a8afc178e0c4fb874b05841b63a07520,bdr test for additional examples (#1068).,1,35,FALSE,NA
styler,80347855fa512a9f0f2a754f42130a47,"check for link rot regularly (#1077, #1086).",1,36,FALSE,NA
styler,1f32fcda3a5e2e25712b051bc9eb0551,replace retired `purrr::when()` with `if` statements (#1066).,1,37,FALSE,NA
styler,a22277d7da2e004896d944d692eb296b,more integer literals (#1054).,1,38,FALSE,NA
styler,008f71219754d701145ac54090a4a628,Consistently use `@​examplesIf` for conditionally running examples (#1071).,1,39,FALSE,NA
styler,170a87b977d8f609ac86d63dad14d0a0,document imports in a single file (#1060).,1,40,FALSE,NA
styler,b55a623654f3e444bf91717c398df22b,format YAML files (#1061).,1,41,FALSE,NA
styler,cbc5effe606ab5676a7fcbb5a0bb670a,"Expose internals used with other style guides (@​Robinlovelace + collaborators, #1043, #1052).",1,42,FALSE,NA
styler,cd3d119e753b56431e80946857dcabcf,Bump minimal version requirement on {withr} as `...` in `withr::local_options()` was introduced only in v.2.3.0 (#1051).,1,43,FALSE,NA
styler,5ad63d2339d87b6a1c64b3aed217f28e,"Rename internal function `set_linebreak_after_ggplot2_plus()` to `set_line_break_after_ggplot2_plus()` for consistency (@​Polkas, #1049).",1,44,FALSE,NA
styler,2532edb05404d9c0e33c9f0e68d8521c,Reformat contributing guidelines (#1047).,1,45,FALSE,NA
styler,fe4a846977dc23a0732123de4644ed49,Improve YAML formatting for pkgdown (#1042).,1,46,FALSE,NA
styler,55cf5cf969782ca8dc6e766886bc2470,Simplify caching internal's conditionals with `rlang::%||%` (#1041).,1,47,FALSE,NA
styler,50e42e38f930def71eab8ed3963d34f4,Only run {pkgapi} if available (#1039).,1,48,FALSE,NA
styler,e048487d6468169922dd74f85f461d50,"Typos (@​MichaelChirico, #1038)",1,49,FALSE,NA
styler,cdfb6fbe18371e6d55b990018029c19c,"`style_dir()` and `style_pkg()` now default to styling all supported file formats (`.R`, `.Rmd`, `.Rmarkdown`, `.Rnw`, and `.qmd`) in the (package) directory (#965, #931, #1033).",1,50,FALSE,NA
styler,e54e39690e0d612216ed8d0917af0e83,`style_pkg()` now excludes the auto-generated `R/cpp11.R` file (#977).,1,51,FALSE,NA
styler,f8c87d58894bc552a991daf13f3fe741,minimum needed R version is now bumped to `3.5` (#986).,1,52,FALSE,NA
styler,cd5adf224b297127cd91611ed5c50802,alignment is now detected for function declaration in a similar way as for function calls (#968).,1,53,FALSE,NA
styler,e9c8eb738167e52674476b8141f6988e,new R option `styler.ignore_alignment` controls if alignment should be detected (and preserved) or not (#932).,1,54,FALSE,NA
styler,d2c598d7dce32639131db7d71245d1d4,alignment is detected in `tibble::tribble()` (and similar) calls with more than 3 columns when left aligned (#945).,1,55,FALSE,NA
styler,d6deb300315a885cae571c7822c83494,"fix alignment detection for one column, mixed named/unnamed (#1035).",1,56,FALSE,NA
styler,0346303e5124c14648e2271b7b7962f2,"if there are only empty lines in a code chunk, they are all removed (#936).",1,57,FALSE,NA
styler,78a47b76ca8949b535566d126555e7a9,apply rules for \[ to \[\[ and its closing counterpair (#1030),1,58,FALSE,NA
styler,50b7c96ef7717a475578102acee50c29,"there is now at most one line break after `{` and before `#` (#952, #1022).",1,59,FALSE,NA
styler,64783237d07030c3a979986f3f136854,line breaks may be added to function calls to ensure indention symmetry for round braces (#975).,1,60,FALSE,NA
styler,5cbb5f180709357093dc5fedae3993a8,the cache is also invalidated on changing the stylerignore markers (#932).,1,61,FALSE,NA
styler,ffc11844f367c3c2ced36fe0509dfcf5,`{` is not put on a new line after `=` and in `function() {` for some edge cases (#939).,1,62,FALSE,NA
styler,3e8920b1fbe1f2f4312e9180eb6ab9dc,`while ({})` statements are now handled the same way as function statements with regards to breaking lines (#967).,1,63,FALSE,NA
styler,77eb794eaa807405768118dee0132462,parsing of {roxygen2} example comments now also works for edge cases when there is no literal code immediately following after the end of the example section (#940).,1,64,FALSE,NA
styler,4c55f1b56fc4300f45b54cddb39ab08b,files with no tokens in it are now transformed into zero-byte files (#962).,1,65,FALSE,NA
styler,c32c132805c9e24c392891a824dc3842,"old (and outdated) vignettes have been removed (#955). To access them, do `git checkout v1.0.0`.",1,66,FALSE,NA
styler,562abe15891816d2416efdbfa17430e0,minor improvements to the documentation (#958).,1,67,FALSE,NA
styler,d2bee9e9f1cc2eb161259be5d859f358,"turned off `styler.colored_print.vertical` in vignettes so ANSI output of {prettycode} not messing with {pkgdown} (#956, #957).",1,68,FALSE,NA
styler,64f30dcf07a4a7135cfcfb9631154ac0,use integer literals and avoid coercions where needed (#994).,1,69,FALSE,NA
styler,a901cfa202dc562f3986120d89f44dc9,don't preserve names for `unlist()` (#998).,1,70,FALSE,NA
styler,fb433baa899da20726d5d410e5ea96c8,remove unused variables (#999).,1,71,FALSE,NA
styler,ccfe9acb8ade45ad93f785add3dff15d,get rid of lints with performance implications (#1000).,1,72,FALSE,NA
styler,2b9d6e6c9dd137cc7eff0ab09cb3f8d6,use more efficient match() alternative (#1001).,1,73,FALSE,NA
styler,e436e4ec5eb6e699e1f2bba8aad21ba3,don't use `nrow` arg in `new_tibble()` calls (#1003).,1,74,FALSE,NA
styler,d949830d54f832466695d1583c4010b1,performance improvements with `if()` + `else()` instead of `ifelse()` (#1006).,1,75,FALSE,NA
styler,7fbb0e53a8a7dac4696d5d1a3ee19a54,replace tibbles with data frames to improve performance (#1007).,1,76,FALSE,NA
styler,fdaee2b06aac6622efbceba5068fad3a,simplify `styler_df()` signature (#1009).,1,77,FALSE,NA
styler,102704270e8c99443c9893f36ec841a8,minor cleanup (#1016).,1,78,FALSE,NA
styler,09fd2924cb18ee617db063be6f389370,non-exported and unused functions `odd()` and `even()` were removed (#989).,1,79,FALSE,NA
styler,1d7ce42b61bc2d1a5c99fb492ef9b391,all (R)md files in this project's source code are now formatted with default pandoc markdown formatter. This conversion is required when using the visual mode in RStudio (#941).,1,80,FALSE,NA
styler,9817775e6b4b1102a992433289a984e2,"improved code quality by fixing {lintr} warnings (#960, #1028).",1,81,FALSE,NA
styler,1168e7c180a43427840881599a74f96c,don't import entire tibble package (#1007).,1,82,FALSE,NA
styler,d738abfb5122ec52a0ab3d33861ad805,drop {rematch2} dependency (#1011).,1,83,FALSE,NA
styler,d69c5323202143afe5709b456abb06cc,upgrade testing infra to testthat 3e (#949).,1,84,FALSE,NA
styler,9a874966d7e4cd32da4e648c49f94069,run tests in parallel (#978).,1,85,FALSE,NA
styler,71b4cc653eab5f666e4ae82433443bf0,run some tests sequentially (#1031),1,86,FALSE,NA
styler,cc2da9b3ae0f7e413ed02d932571a12c,"better stack tracing for profiling (#979, #980).",1,87,FALSE,NA
styler,fa9f8d27330300256711aaad966f51d6,add flags to skip code coverage for zzz.R (#1005).,1,88,FALSE,NA
styler,978fb28e3fc97d530161663f003c247c,error now on R CMD note (#987).,1,89,FALSE,NA
styler,48777850b61a4af9dba1ec1939bf7b95,test on latest Ubuntu instead of Ubuntu 18.04 (#982).,1,90,FALSE,NA
styler,88de6fdebb654d254a276f88bd5702c4,use latest GitHub Actions for R (#1034).,1,91,FALSE,NA
styler,25b34b58a0e61873668bdd2252a92bdc,"update {pkgdown} action to always build, but only deploy on default branch (#946).",1,92,FALSE,NA
styler,5927ceed597df3ef08981a646642e467,remove pre-commit push hook for news entry (#1023).,1,93,FALSE,NA
styler,730e7e3ff58f5525a1c96e8456d19cfd,"if `else` follows directly after `if`, line breaks are removed (#935).",1,94,FALSE,NA
styler,8f788d29b12206e0f757af7eec660d2b,"new R option `styler.cache_root` (defaulting to `""styler""`) that determines the sub-directory under the {R.cache} cache directory that {styler} uses. Non- default caches won't be cleaned up by {styler}. We suggest `""styler-perm""` (also used by {precommit}).",1,95,FALSE,NA
styler,e7659aa4c474d47f2cf35b92cc4339ca,"stylerignore markers are now interpreted as regular expressions instead of comments that must match exactly. This allows to specify multiple markers in one regular expression for `styler.ignore_start` and `styler.ignore_stop`, e.g. to use markers for lintr and styler on the same line, you can use `options(styler.ignore_start = ""nolint start|styler: off""`:",1,96,FALSE,NA
styler,e7659aa4c474d47f2cf35b92cc4339ca,"```
# nolint start, styler: off
1 +1
# nolint end
# styler: on
```",1,97,TRUE,NA
styler,e7659aa4c474d47f2cf35b92cc4339ca,"As a consequence of this approach, the defaults for `styler.ignore_start` and `styler.ignore_stop` omit the `#` (#849).",1,97,FALSE,NA
styler,b2a250aa7b9446deeca302274d60f352,"{styler} can be ran via GitHub Actions using `usethis::use_github_action(""style"")` (#914).",1,98,FALSE,NA
styler,054e7197dfc8f9dd41bdeab1ec286b40,added guarantee that styled code is parsable (#892).,1,99,FALSE,NA
styler,7f8a8256f6c463ea44f78c4133c7cd43,Developers can now create style guides with indention characters other than spaces (#916).,1,100,FALSE,NA
styler,2dfa37927dda5051943890e3d16f54fb,"Add vignette on distributing style guide (#846, #861).",1,101,FALSE,NA
styler,ec032b44685902d1f3133e4a703fbe72,Fix argument name `filetype` in Example for `style_dir()` (#855).,1,102,FALSE,NA
styler,32673266ab1953a78c8cd4735c1ceebf,"Piped function without brackets `substitute(x %>% y)` don't get `()` added anymore for one level deep (not more yet, see #889), as this can change outcome of the code (#876).",1,103,FALSE,NA
styler,4e11e368cf1504334686afc18d60f0ed,`.onLoad()` method no longer broken with {cli} \>= 3.1 (#893).,1,104,FALSE,NA
styler,f6b4b50e5e487182c66524ca2486a1f4,Function calls containing `+` should no longer give any error on styling when there are comments and line breaks under certain circumstances (#905).,1,105,FALSE,NA
styler,8dd4f7d74d2421ed4d2382ab3b16bb80,rules that add tokens don't break stylerignore sequences anymore (#891).,1,106,FALSE,NA
styler,61d320ce38848d3210cf4198f5782a2d,Alignment detection respects stylerignore (#850).,1,107,FALSE,NA
styler,dc6beaf35dafa5d7dbe48e460d6dbd51,"Unaligned expressions with quoted key (e.g. `c(""x"" = 2)`) are now correctly detected (#881).",1,108,FALSE,NA
styler,532874ac85d49d004e40e17391b1f09b,"`~` causes now indention, like `+`, `-`, `|` etc. (#902).",1,109,FALSE,NA
styler,cfea98c66430859ef41f9fdf28f7c1c1,`Warning: Unknown or uninitialised column:` was fixed (#885).,1,110,FALSE,NA
styler,926403c2124f8b91754698b71635e47e,function calls with unequal number of token on different lines are no longer deemed aligned if there are arbitrary spaces around the tokens on the lines with most tokens (#902).,1,111,FALSE,NA
styler,9dba4662367c4df7b085ee9362511408,"if a line starts with `EQ_SUB` (`=`), the corresponding key is moved to that line too (#923).",1,112,FALSE,NA
styler,29e0ec2cba1608b4f43faab24e5e6a3a,ensure a trailing blank line also if the input is cached (#867).,1,113,FALSE,NA
styler,526a73870c044b303530064ea09957b1,Preserve trailing blank line in roxygen examples to simplify concatenation of examples (#880).,1,114,FALSE,NA
styler,d81fb855554b89f538d66006e8698dfd,`indenty_by` is now also respected when curly braces are added to an if statement by {styler} (#915).,1,115,FALSE,NA
styler,1ac4cba1c34649fb01ebef96dc498b99,An error is now thrown on styling if input unicode characters can't be correctly parsed for Windows and R \< 4.2 (#883).,1,116,FALSE,NA
styler,ff47954b395e378daa485289ab62e231,styling of text does not error anymore when the R option `OutDec` is set to a non-default value (#912).,1,117,FALSE,NA
styler,593b81725a0abb2e1f51409efcc193d7,Remove dependency on {xfun} (#866).,1,118,FALSE,NA
styler,b00406fe2c20e25bbd0b112fd5b24e45,Remove {glue} dependency that was only used by {touchstone} script and is declared as a dependency already in the respective action (#910).,1,119,FALSE,NA
styler,2b977cd0ac8736c55d69ddddd9ef3a4a,"Bump minimal R requirement to 3.4 in line with the tidyverse, which allowed to remove the dependency at {backports} and some exception handling.",1,120,FALSE,NA
styler,95bc4fd93f56cf72a3a9454fd421229b,rename default branch to main (#859).,1,121,FALSE,NA
styler,1f3263bbaeb635f650c87df06e87f642,the built package size has been reduced by \~50% by listing `*-in_tree` files in `.Rbuildignore` (#879).,1,122,FALSE,NA
styler,f6a86c091331423f12f931605c7d2d6a,Enable pre-commit.ci (#843).,1,123,FALSE,NA
styler,74275857abedfe82614c360eb32857e5,use pre-commit via GitHub Actions (#872).,1,124,FALSE,NA
styler,1a6e1af4f56e9adabfba259c4c1fa7d5,terminate running jobs on new push to save resources (#888).,1,125,FALSE,NA
styler,a6bdd84c48433e60531459089fdc1bc1,Use the {touchstone} GitHub Action instead of the literal script (#889).,1,126,FALSE,NA
styler,7365b92cd5db9777671276b5ff9dd83f,upgrade R CMD check Github Actions to use `v2`.,1,127,FALSE,NA
styler,da237e98747ff637735aa17dee5ae9ff,{styler} test are relaxed to not assume a specific error message on the wrong usage of `_` (#929).,1,128,FALSE,NA
styler,d6120d0b11578a60a1c6ad8bc8c3fe83,clean up cache files older than one week (#842).,1,129,FALSE,NA
styler,67935240ad94f90043f4bcadb567a868,Files with `.Rmarkdown` extension are now recognized as an R markdown files in `style_file()` and friends (#824).,1,130,FALSE,NA
styler,5960017dec8efcb2e63b3fc8c9a31aaf,Don't break line before comments in pipes (#822).,1,131,FALSE,NA
styler,0e9469d33325ed77a85040b717c2ac31,Ordinary comments (starting with `#`) that break a roxygen code example block (starting with `#'`) are now recognized and preserved (#830).,1,132,FALSE,NA
styler,0afc66bf5d420ab2109843b68c8e4d92,`@​examplesIf` conditions longer than one line after styling throw an error for compatibility with {roxygen2} (#833).,1,133,FALSE,NA
styler,1971a448a1bbb8f2d178418e339d12b9,R Markdown chunk headers are no longer required to be parsable R code (#832).,1,134,FALSE,NA
styler,8c29ff349af83ff2e90e1c79daffacd8,Break the line between `%>%` and `{` inside and outside function calls (#825).,1,135,FALSE,NA
styler,b274544f040bccd572ad406e81b56da3,Add language server to third-party integration vignette (#835).,1,136,FALSE,NA
styler,7638a5d2c801d83030db4f65454b8019,improved test setup with fixtures and similar (#798).,1,137,FALSE,NA
styler,a8d6ca936c1a658864013e920bb66725,"Code with left alignment after `=` in function calls is now recognized as aligned and won't be reformatted (#774, #777).",1,138,FALSE,NA
styler,a8d6ca936c1a658864013e920bb66725,"```
# already detected previously
call(
  x  = 12345,
  y2 =    17
)

# newly detected
call(
  x  = 12345,
  y2 = 17
)
```",1,139,TRUE,NA
styler,77d2b2174896937e18a68edf7176533f,"Similarly, left aligned after comma is now detected (#785, #786).",1,140,FALSE,NA
styler,77d2b2174896937e18a68edf7176533f,"```
# previously detected
call(
  x  = 12345, ""It's old"",
  y2 = 17,      ""before""
)

tribble(
  ~x,             ~y,
  ""another"",     1:3,
  ""b"",       1211234
)

# newly detected
call(
  x = 2,           p = ""another"",
  y = ""hhjkjkbew"", x = 3
)


tribble(
  ~x,        ~y,
  ""another"", 1:3,
  ""b"",       1211234
)
```",1,141,TRUE,NA
styler,77d2b2174896937e18a68edf7176533f,"Also see `vignette(""detect-alignment"")`.",1,141,FALSE,NA
styler,86b5654af35ad1d14543cb084a1f5dd3,The base R pipe as introduced in R 4.1.0 is now styled the same way the magrittr pipe is (#803).,1,142,FALSE,NA
styler,c95bb201e8a5950e5f61dd286629fd35,"code chunks with explicit `tidy = FALSE` in an Rmd or Rnw code header are not styled anymore. This can be handy when the code can't be parsed, e.g. within a learnr tutorial (#790).",1,143,FALSE,NA
styler,a5bc0c9d71e54f831a01414ff07f9629,`#>` is recognized as an output marker and no space is added after `#` (#771).,1,144,FALSE,NA
styler,ebad41c074b02de47be10b7a75c90fc0,"No curly braces are added to else statements if they are within a pipe, as this can change evaluation logic of code involving the magrittr dot in rare cases (#816).",1,145,FALSE,NA
styler,cc9fbb73fa794b03bcc3e86ba9bf8cb9,Line breaks between `}` and `else` are removed (#793).,1,146,FALSE,NA
styler,e963e74b9fd6f76d3c3f8c5a01502131,"In function calls, code after `= #\n` is indented correctly (#814).",1,147,FALSE,NA
styler,415f1e86c24a68d65a31c83c74c4a0cc,Multi-expressions containing multiple assignments no longer remove line breaks if they are not causing blank lines (#809).,1,148,FALSE,NA
styler,e2071a43b139175bcfb0754439798820,`exclude_dirs` in `style_pkg()` is now properly respected if it is a sub-directory of a directory that is scheduled for styling (e.g. `test/testthat/some/dir`) (#811).,1,149,FALSE,NA
styler,5c76201befb4bbf9a8a2cbbe902e1f05,The user is not prompted anymore to confirm the creation of a permanent cache as R.cache \>= 0.15.0 uses a standard location in line with CRAN policies (#819).,1,150,FALSE,NA
styler,cb2a0716ab669e7a07724bc0572a7bf4,"R code chunks in nested non-R chunks in R markdown don't yield an error anymore when document is styled, chunks are still not styled (#788, #794).",1,151,FALSE,NA
styler,213081afd378328f6fc534e3c44499a6,`cache_activate()` and `cache_deactivate()` now respect the R option `styler.quiet` (#797).,1,152,FALSE,NA
styler,7a7ea845f1e2a330df63c556ae2c5208,"`multi_line` attribute in parse table is now integer, not boolean (#782).",1,153,FALSE,NA
styler,c95911e76d9ea63c33bfcb7c6e4bb855,The style guide used in Addin is verified when set via R option (#789).,1,154,FALSE,NA
styler,b8225807ae23225e1fc783afdbdadb90,Improve pkgdown author URLs (#775).,1,155,FALSE,NA
styler,4814e8120406f60e387e359abe5e1fff,"Upgrade touchstone infra (#799, #805).",1,156,FALSE,NA
styler,9a03ec0689cc853affb169554965871d,Don't test on R 3.3 anymore as tidyverse supports only four previous releases (#804).,1,157,FALSE,NA
styler,76defbe3d6a0e7c2e568b0fa654c3146,Update Github Actions workflow (#810).,1,158,FALSE,NA
styler,8c1d2e852533fdcfe5cce488e6be8532,fix interaction between cache and `base_indention`. This also fixes the Addin for styling a selection with base indention repeatedly (#764).,1,159,FALSE,NA
styler,a846b0510ede75ee6fef55aa1c38f7c0,add more examples to `styler_*` helpfiles (#762).,1,160,FALSE,NA
styler,460da0eeddaf55f3918ce9a8991f19af,hexadecimal integers now preserve the trailing `L` when styled (#761).,1,161,FALSE,NA
styler,64fcd511aa5d975e4acad6eea30f8fd6,add a pre-push hook to make sure news bullets are added to each PR (#765).,1,162,FALSE,NA
styler,e3f25a7955551c7fef4d452216030386,`style_file()` and friends gain argument `dry` to control if changes should be applied to files or not (#634).,1,163,FALSE,NA
styler,bc3c5810683ad4ae05b78a447b5def84,"`style_file()` and friends gain argument `base_indention` (defaulting to 0) to control by how much the output code is indented (#649, #692). The Addin for styling a selection picks that up, e.g. you can style a function body and indention is preserved (#725).",1,164,FALSE,NA
styler,2b780057f0cf5418ac7345b1883f12d8,added an option for disabling all communication when using the package (`styler.quiet`) (#640).,1,165,FALSE,NA
styler,0c7e2e6b9c835ad5d8326d153f6ea8c6,"`scope` in `tidyverse_style()` can now be specified with higher granularity through `I()`, e.g. `I(c('spaces', 'tokens'))` allows us to style spaces and tokens without styling line breaks and indention. Previously, only a string was allowed and all less invasive scopes were included, e.g. if you wanted to style tokens, you had to always also style spaces, indention, line breaks as well (#705, #707).",1,166,FALSE,NA
styler,68e06edf5ecf04d108641bddb1d61838,added an option (`styler.test_dir_writeable`) that changes test behavior to not directly modify test files in the current directory (#548).,1,167,FALSE,NA
styler,d720eb29e26e5e8bfdbeeba4f2ef024f,New argument `transformers_drop` in `create_style_guide()` to be populated with new helper function `specify_transformers_drop()` for specifying conditions under which transformers are not going to be used and can therefore be omitted without effecting the result of styling (#711).,1,168,FALSE,NA
styler,8154ad9ad76ede9390ea6c51a9ea899e,"The environment variable `save_after_styling` is deprecated in favor of the R option `styler.save_after_styling` to control if a file is saved after styling with the RStudio Addin. Note than in RStudio \>= 1.3.0, you can auto-save edits in general (Code -\> Saving -\> Auto-Save), e.g. on idle editor or focus loss, so this feature becomes less relevant (#631, #726).",1,169,FALSE,NA
styler,ec68bd2a126ff0fe91ded4d10349aad2,styler is now distributed under the MIT license (#751).,1,170,FALSE,NA
styler,f791c29f43d254379c426ca7bf44b246,"Documentation overhaul: New README, new ""Get started"" pkgdown page, new vignettes on `strict = FALSE`, `Adoption` renamed to `Third-party integrations` (#741), adding search to pkgdown (#623), group functions in pkgdown reference page (#625), minor other doc improvements (#643, #618, #614, #677, #651, #667, #672, #687, #752, #754).",1,171,FALSE,NA
styler,8f3a2e7664999fef2d6148b5cdf60826,`@​exampleIsf` roxygen tag for conditional examples is now supported (#743).,1,172,FALSE,NA
styler,4643dd15361d091d527ad2fb601ec352,"blank lines in function calls and headers are now removed, for the former only when there are no comments before or after the blank line (#629, #630, #635, #723).",1,173,FALSE,NA
styler,c1cfe5f4477832ac6e27a08a684090be,"speed improvements: 15% faster on new code, 70% on repeated styling of compliant code (The latter is not so relevant because it was almost instantaneous already). Most relevant contributions were #679, #691, #681, #711, #739.",1,174,FALSE,NA
styler,5187d106a7f6af3002749187a22027e6,`#<<` is now recognized as the xaringan marker and no space is added after`#` (#700).,1,175,FALSE,NA
styler,58247cc4e1da5074a5fee03bdb09a0f2,`style_dir()` and `style_pkg()` now apply directory exclusion recursively with `exclude_dirs` (#676).,1,176,FALSE,NA
styler,f2998de216be0511f98ade24b298e1d5,"`switch()` now has line breaks after every argument to match the tidyverse style guide (#722, #727).",1,177,FALSE,NA
styler,11dfd6ed56617b848693669769cde59e,"unary `+` before a function call does not give an error anymore, as before version 1.3.0 (#697).",1,178,FALSE,NA
styler,6b5641259328df372a71957e4b749d16,certain combinations of `stylerignore` markers and cached expressions now don't give an error anymore (#738).,1,179,FALSE,NA
styler,0a1da86a0f18b6c4a883c64aa3b2a74c,cache is now correctly invalidated when style guide arguments change (#647).,1,180,FALSE,NA
styler,a0372c69a4fc89694ed8bc77e45d9894,"empty lines are now removed between pipes and assignments (#645, #710).",1,181,FALSE,NA
styler,728ae8cd1d547926a6ae732e070cdd79,multiple `@​examples` roxygen tags in a code block of `#'` are no longer squashed (#748).,1,182,FALSE,NA
styler,d68f4568ee4d28d7ec47128eff3fbaa6,roxygen code examples starting on the same line as the `@​examples` tag are no longer moved to the next line (#748).,1,183,FALSE,NA
styler,8d98a2e3f2829be58d47f7516905c8ed,always strip trailing spaces and make cache insensitive to it (#626).,1,184,FALSE,NA
styler,c8d06888c6122c648a5babca060a9893,"`style_text()` can now style all input that `is.character()`, not just if it inherits from classes `character`, `utf8` or `vertical` (#693).",1,185,FALSE,NA
styler,9c595df81e62f058a2c0712f1a949a11,logical operators within square braces are now moved from the start of a line to the end of the previous line (#709).,1,186,FALSE,NA
styler,3c7102f5b0e68edf70ad2a50a0590a7b,spaces are now removed before `[` and `[[` (#713).,1,187,FALSE,NA
styler,5905af80119362c69922d21e9168b483,The internal `create_tree()` only used in testing of styler now works when the cache is activated (#688).,1,188,FALSE,NA
styler,cbd213ea111b37f6d528e079f08ff18c,simplification of internals (#692).,1,189,FALSE,NA
styler,86024bb982ad41faa8511722ad28bc36,"switched from travis and AppVeyor to GitHub Actions (#653, #660).",1,190,FALSE,NA
styler,d415f63ef3a51494f9659467f3e246be,"Added basic continuous benchmarking with lorenzwalthert/touchstone (#674, #684, #698).",1,191,FALSE,NA
styler,b7d21ad35802b5fba43a283fccbf66dc,include `test-*` files in styling pre-commit hook (#724).,1,192,FALSE,NA
styler,ebb34f7c4181ade9067be52c39fbfe17,"Add search and reference sections to pkgdown webpage (#623, #625).",1,193,FALSE,NA
styler,73fca2dcd156c6ac15681d0788f06609,"various fixes to handle special cases for caching and stylerignore and their interaction (#611, #610, #609, #607, #602, #600).",1,194,FALSE,NA
styler,7350eac359533feab04536406db89140,also test on macOS (#604).,1,195,FALSE,NA
styler,42260852abe7e92677bec6621b4e35f3,skip timing tests on CRAN as requested by CRAN team because they did not pass on all machines (#603).,1,196,FALSE,NA
styler,f868c99619b7cfd90b23fc0a45a75b1c,"`style_pkg()` and `style_dir()` gain a new argument `exclude_dirs` to exclude directories from styling, by default `renv` and `packrat`. Note that the defaults won't change the behavior of `style_pkg()` because it does anyways does not style these directories and they were set for consistency.",1,198,FALSE,NA
styler,40a5890193a76b07d3c7a4450a93fd64,"`style_file()` and friends now strip `./` in file paths returned invisibly, i.e. `./script.R` becomes `script.R` (#568).",1,199,FALSE,NA
styler,3ec994d8486d20db3b0cbccdf50e41c9,"ignore certain lines using `# styler: off` and `#styler: on` or custom markers, see `?stylerignore` (#560).",1,200,FALSE,NA
styler,d16103750bd799d6fb3aceef8e9bb94b,"styler caches results of styling, so applying styler to code it has styled before will be instantaneous. This brings large speed boosts in many situations, e.g. when `style_pkg()` is run but only a few files have changed since the last styling or when using the styler pre-commit hook. Because styler caches by expression, you will also get speed boosts in large files with many expressions when you only change a few of them. See `?caching` for details (#538, #578).",1,201,FALSE,NA
styler,a5f27a7c11894c9a2be7866073792bd3,"`create_style_guide()` gains two arguments `style_guide_name` and `style_guide_version` that are carried as meta data, in particular to version third-party style guides and ensure the proper functioning of caching. This change is completely invisible to users who don't create and distribute their own style guide like `tidyverse_style()` (#572).",1,202,FALSE,NA
styler,5d75d381e546a96201636c00ea905cbc,lines are now broken after `+` in `ggplot2` calls for `strict = TRUE` (#569).,1,203,FALSE,NA
styler,17cda42f42709c537fad59ef44364b54,function documentation now contains many more line breaks due to roxygen2 update to version 7.0.1 (#566).,1,204,FALSE,NA
styler,6858ad04b4ac90339e5b836a4a9b5e3a,spaces next to the braces in subsetting expressions `[` and `[[` are now removed (#580).,1,205,FALSE,NA
styler,cc44d136eb9295f56c785879fca21d60,Adapt to changes in the R parser to make styler pass R CMD check again. (#583).,1,206,FALSE,NA
styler,f5b152212bcf2c3f0fc47eee5f9e2a74,"`style_file()` now correctly styles multiple files from different directories. We no longer display the file name of the styled file, but the absolute path. This is also reflected in the invisible return value of the function (#522).",1,207,FALSE,NA
styler,2ef78f897353407a9e3e992bea11d76c,`style_file()` and friends do not write content back to a file when styling does not cause any changes in the file. This means the modification date of styled files is only changed when the content is changed (#532).,1,208,FALSE,NA
styler,ce896f1ae0337338fd62c89a5017e845,Aligned function calls are detected and remain unchanged if they match the styler definition for aligned function calls (#537).,1,209,FALSE,NA
styler,f8770115f5f213cf74384cb2bbc75778,"curly-curly (`{{`) syntactic sugar introduced with rlang 0.4.0 is now explicitly handled, where previously it was just treated as two consecutive curly braces (#528).",1,210,FALSE,NA
styler,de56504f9056820e976f3ac58b611b78,"`style_pkg()`, `style_dir()` and the Addins can now style `.Rprofile`, and hidden files are now also styled (#530).",1,211,FALSE,NA
styler,31e0841e6a6e3c616c71013f1e0b6bc0,"Roxygen code examples: leverage `roxygen2` for correct escaping of expressions that contain `\`, in particular in `dontrun{}` and friends, allow quoted braces that are not matched (#729).",1,212,FALSE,NA
styler,4678baf950b576520aa230250423bb1f,Brace expressions in function calls are formatted in a less compact way to improve readability. Typical use case: `tryCatch()` (#543).,1,213,FALSE,NA
styler,531f95e13d220d3095f0087e4a5133db,Arguments in function declarations in a context which is indented multiple times should now be correct. This typically affects `R6::R6Class()` (#546).,1,214,FALSE,NA
styler,fcee7899cfad45ef5c1cfd7b10f79ab9,Escape characters in roxygen code examples are now correctly escaped (#512).,1,215,FALSE,NA
styler,a33212007009a194aca3411a2f43ff5d,Special characters such as `\n` in strings are now preserved in text and not turned into literal values like a line break (#554).,1,216,FALSE,NA
styler,27e313df6d3fa4c6d2b8121e362edd5f,Style selection Addin now preserves line break when the last line selected is an entire line (#520).,1,217,FALSE,NA
styler,1ba520ee2b6a69d88dd57ffcd9b21f57,Style file Addin can now properly handle cancelling (#511).,1,218,FALSE,NA
styler,f2cfee0865c61a73338fe9405a8bc146,The body of a multi-line function declaration is now indented correctly for `strict = FALSE` and also wrapped in curly braces for `strict = TRUE` (#536).,1,219,FALSE,NA
styler,0d77e1d3831eed469c9dfe470ba587b7,Advice for contributors in `CONTRIBUTING.md` was updated (#508).,1,220,FALSE,NA
styler,2ee0c19e917566be60fb85290b9e4475,styler is now available through the pre-commit hook `style-files` in https://github.com/lorenzwalthert/precommit.,1,221,FALSE,NA
styler,25d82405c8087641303158dd5cd7baaf,"Users can now control style configurations for styler Addins (#463, #500), using the `Set style` Addin. See `?styler::styler_addins` for details.",1,222,FALSE,NA
styler,c432a4bd8e1fa0e0b61c77193b58cd4f,`return()` is now always put in braces and put on a new line when used in a conditional statement (#492).,1,223,FALSE,NA
styler,f76d004787d239366a5bf8ce9327addf,`%>%` almost always causes a line break now for `strict = TRUE` (#503).,1,224,FALSE,NA
styler,e49ab426cb9a21364dca1922bec7605a,"`style_pkg()` now also styles the ""demo"" directory by default (#453).",1,225,FALSE,NA
styler,d1e5a5c8ebbe7985db696e11883304ab,multi-line strings are now styled more consistently (#459).,1,226,FALSE,NA
styler,214773cca828af25403952a67e82976a,indention in roxygen code example styling (#455) and EOF spacing (#469) was fixed.,1,227,FALSE,NA
styler,6b644bff8c8f736940f37a644954950c,indention for for loop edge case (#457) and comments in pipe chain (#482) were fixed.,1,228,FALSE,NA
styler,0676cd75e951b9276c802b01b2a0e556,line-break styling around comma is improved (#479).,1,229,FALSE,NA
styler,c1b312ff2d5030374e0e35f71b11606f,bug that can cause an error when the variable `text` in any name space before styler on the search path was defined and did not have length 1 is fixed (#484).,1,230,FALSE,NA
styler,1031a1c7a1cc894ccbf0e2e589de7403,slightly confusing warning about empty strings caused with roxygen code examples and Rmd was removed.,1,231,FALSE,NA
styler,b98bc9c2189121de8c4a8800e66a4271,"right apostrophe to let package pass R CMD Check in strict Latin-1 locale was removed (#490, reason for release).",1,232,FALSE,NA
styler,a0194e07cb415e3a5ca426aa86b65263,`usethis::use_tidy_style()` styles your project according to the tidyverse style guide.,1,233,FALSE,NA
styler,aae4bef449494f62fc4754c497cbbfb9,"`reprex::reprex(style = TRUE)` to prettify reprex code before printing. To permanently use `style = TRUE` without specifying it every time, you can add the following line to your `.Rprofile` (via `usethis::edit_r_profile()`): `options(reprex.styler = TRUE)`.",1,234,FALSE,NA
styler,99619984630aa5978bc346f21026f370,"you can pretty-print your R code in RMarkdown reports without having styler modifying the source. This feature is implemented as a code chunk option in knitr. use `tidy = ""styler""` in the header of a code chunks (e.g. ```` ```{r name-of-the-chunk, tidy = ""styler""} ````), or `knitr::opts_chunk$set(tidy = ""styler"")` at the top of your RMarkdown script.",1,235,FALSE,NA
styler,fa5726dd258e84d5226402a9bee7abe1,pretty-printing of drake workflow data frames with `drake::drake_plan_source()`.,1,236,FALSE,NA
styler,2c39795f7601010868c05d1893900dfc,Adding styler as a fixer to the ale Plug-in for VIM.,1,237,FALSE,NA
styler,d54085a83210c448969fb88f111601c7,styler can now style roxygen code examples in the source code of package (#332) as well as Rnw files (#431).,1,238,FALSE,NA
styler,8e863b605eb0d6bb63727c7d6e5a22a9,"the print method for the output of `style_text()` (`print.vertical()`) now returns syntax-highlighted code by default, controllable via the option `styler.colored_print.vertical` (#417).",1,239,FALSE,NA
styler,5547e979dd69a70271f7b1dede8ba08e,the README was redesigned (#413).,1,240,FALSE,NA
styler,03c63527f33a80dded33379b788aa287,semi-colon expression that contained multiple assignments was fixed (#404).,1,241,FALSE,NA
styler,6b0142cacbf6b5dfecc10546c09bd60e,cursor position is remembered for styling via Addin (#416).,1,242,FALSE,NA
styler,80083e7ebb5a85b9c879ad829efbf0e3,adapt spacing around tilde for multi-token expressions(#424) and brace edge case (#425).,1,243,FALSE,NA
styler,9be711444d886338ed6ad6ed77e0b51c,only add brackets to piped function call if RHS is a symbol (#422).,1,244,FALSE,NA
styler,cf75a8f4926947ddcaa0ce17f9a6820b,increase coverage again to over 90% (#412).,1,245,FALSE,NA
styler,8696a79f1a5aa023f16796debaa40510,move rule that turns single quotes into double quotes to token modifier in \`tidyverse_style_guide() (#406).,1,246,FALSE,NA
styler,f36507466b95db388a1503c137ea2a49,remove line-breaks before commas (#405).,1,247,FALSE,NA
styler,e05654e19bd80407d43c796f87d693eb,removed package dependency enc in favor of xfun (#442).,1,248,FALSE,NA
styler,5262d144fb1092015902cdbf7399b4b7,Fixed indention for named multi-line function calls (#372).,1,249,FALSE,NA
styler,ec70b114ba8296d719e025351face281,Non-R code chunks in `.Rmd` files are now respected and won't get styled (#386).,1,250,FALSE,NA
styler,a2d93eb301e1c6baee3ae67afe047186,"Fixing an edge case in which, if very long strings were present in the code, tokens could be replaced with wrong text (#384).",1,251,FALSE,NA
styler,0fe7f40477d9c36c8c285b1ba4013355,Spacing around tilde in formulas depends now on whether there is a LHS in the formula (#379).,1,252,FALSE,NA
styler,ea3bc853732db8448e97cef71318af46,Spaces are now also added around `EQ_SUB` (`=`) (#380).,1,253,FALSE,NA
styler,5522fe9f338bf9dd0a517efa612a6299,Added `CONTRIBUTING.md` to outline guidelines for contributing to styler.,1,254,FALSE,NA
styler,77c8a30950ad68578f99b008c1ee2fa0,"More informative error messages for parsing problems (#401, #400).",1,255,FALSE,NA
styler,527f33675d5afebea1e800772eafdbb7,Improved documentation (#387).,1,256,FALSE,NA
styler,f311d7eaccd084a5dbc8e7d43e515bea,"Removed implicit `dplyr` dependency via `purrr:::map_dfr()` (thanks @​jimhester, #324).",1,257,FALSE,NA
styler,a8f433a9c8edfcde812b0238c95a788e,Added required minimal version dependency for purr (`>= 0.2.3`) (#338).,1,258,FALSE,NA
styler,422af4721e4ca85c4f33313a20440c0b,"We rely on the tibble package which was optimized for speed in `v1.4.2` so styler should run \~2x as fast (#348). For that reason, styler now depends on `tibble >= 1.4.2`.",1,259,FALSE,NA
styler,9c335e08735ee1904920d4d9c5015db0,"In the dependency `enc`, a bug was fixed that removed/changed non-ASCII characters. Hence, styler now depends on `enc >= 0.2` (#348).",1,260,FALSE,NA
styler,e7f93902b87b1b3af50a94841a081e1d,"We're now recognizing and respecting more DSLs used in R comments: rplumber (`#*`, #306), shebang `#/!` (#345), knitr chunk headers for spinning (`#+` / `#-`, #362).",1,261,FALSE,NA
styler,dde4e997863f10cb1fa7b5c045c022d4,Named arguments can stay on the first line if call is multi-line (#318).,1,262,FALSE,NA
styler,7f29278e82b2be5ac26bde70282ec12e,"No space anymore with `tidyverse_style()` after `!!` since with `rlang 0.2`, `!!` now binds tighter (#322), spacing around `~` (#316), no space anymore around `^` (#308).",1,263,FALSE,NA
styler,1024ba1d01f85e3187e4115ea5d1f25a,Code chunks in Rmd documents that don't use the R engine are no longer formatted (#313).,1,264,FALSE,NA
styler,57d494f1a03def8fd229aae766f68ba1,Various bug fixes and edge case improvements.,1,265,FALSE,NA
testthat,4889acb2869a85ce7ad80b6939a618a5,Fix incorrect format string detected by latest R-devel. Fix thanks to Tomas Kalibera.,1,1,FALSE,NA
testthat,51c55821f726a754fd7fe00d88648679,"`expect_snapshot()` handles unexpected errors like errors outside of snapshots, i.e. they terminate the entire test and get a traceback (#1906).",1,2,FALSE,NA
testthat,c14bcdcf16546a69e159584904a3966a,"`JunitReporter()` now uses ensures numeric values are saved the xml file with `.` as decimal separator. (@​maksymiuks, #1660)",1,3,FALSE,NA
testthat,2c6b9fdbeb9c85898ce348084903c72a,"`local_mocked_bindings()` can now mock any object, not just functions (#1896).",1,4,FALSE,NA
testthat,d55401da2fdc883085010b6a1ca3f1a5,"`skip_if_offline()` now uses `captive.apple.com` by default. This is the hostname that Apple devices use to check that they're online so it should have a higher reliability than `r-project.org` (@​jdblischak, #1890).",1,5,FALSE,NA
testthat,7fddd6385e25fc92f6008735a06fdaa4,`test_file(desc = )` will now find `describe()` tests as well as `test_that()` tests (#1903).,1,6,FALSE,NA
testthat,8114e7d070338c6e8c43469481f281f7,`is_informative_error()` and the `wrap` argument to `test_dir()` and friends are now defunct.,1,7,FALSE,NA
testthat,9a7550217e8b0ac535c46fd10f1be359,"`expect_no_error()`, `expect_no_warning()`, `expect_no_message()`, `expect_no_condition()`, `local_mocked_bindings()`, and `with_mocked_bindings()` are now stable, not experimental.",1,8,FALSE,NA
testthat,4d9a9e38c323cb87a7939ae4ae910217,"All packages, regardless of whether or not they use rlang 1.0.0, now use the new snapshot display for errors, warnings, and messages (#1856). This no longer shows the class name, instead focussing on a display that more closely mimics what you'll see interactively, including showing the error call.",1,9,FALSE,NA
testthat,07ff24e52b3709075f846a2506dcb078,testthat uses an improved algorithm for finding the srcref associated with an expectation/error/warning/skip. It now looks for the most recent call that has known source and is found inside the `test_that()` call. This generally gives more specific locations than the previous approach and gives much better locations if an error occurs in an exit handler.,1,10,FALSE,NA
testthat,95387b0c2071cb54b2810ac9acda4f00,Helpers are no longer run twice.,1,11,FALSE,NA
testthat,b7fda4071280f0d05e4b6fe45b792246,`expect_setequal()` correctly displays results when only one of actual and expected is missing elements (#1835).,1,12,FALSE,NA
testthat,9a5d0d16194bd0e86ae93536e4cc5230,`expect_snapshot()` and friends no longer create a temporary file on every invocation.,1,13,FALSE,NA
testthat,e790abc1542f07a1fa22f436076f8c5b,`expect_snapshot_file()` now generates clickable links to review changes (#1821).,1,14,FALSE,NA
testthat,1d668938adf98c8ed10486091168a753,`expect_snapshot_value()` has an improved error if the object can't be safely serialized using the specified `style` (#1771).,1,15,FALSE,NA
testthat,94f984521421e8458eb861fab75e2655,`options(rlang_interactive = TRUE)` no longer causes `skip_on_cran()` to not run on CRAN (#1868).,1,16,FALSE,NA
testthat,e23cdf846880c7dd9244253434be455b,`skip_if_offline()` now errors if you don't have curl installed (#1854).,1,17,FALSE,NA
testthat,4470c3297a97eb8527c965781ca19e9a,`StopReporter` gains the ability to suppress praise when a test passes.,1,18,FALSE,NA
testthat,01f295c03fa7e16714ca1013d1cf3631,"`ProgressReporter` now uses is a two characters wide skip column in order to have a consistent width when 10 or more tests are skipped in a single file (@​mgirlich, #1844).",1,19,FALSE,NA
testthat,a9b9d7960d881a07f498d6ddc4a1a898,`test_file()` gains a `desc` argument which allows you to run a single test from a file (#1776).,1,20,FALSE,NA
testthat,21cbf6414c842226bafd9c968e0e9130,Fix for upcoming R-devel release.,1,21,FALSE,NA
testthat,31c0010a8d2d59a7aa427a84e6476b28,`testthat` now sets the `_R_CHECK_BROWSER_NONINTERACTIVE_` environment variable when running tests. This should ensure that left-over `browser()` statements will trigger an error if encountered while running tests. This functionality is only enabled with R (\>= 4.3.0). (#1825),1,22,FALSE,NA
testthat,2373e1f1f89cfa6692ea01e6e537c4a6,New `expect_contains()` and `expect_in()` that works similarly to `expect_true(all(expected %in% object))` or `expect_true(all(object %in% expected))` but give more informative failure messages (#1346).,1,23,FALSE,NA
testthat,1140e9dd311ee8b0b1e1b130cc2b6fa4,New `is_snapshot()` returns `TRUE` if code is running inside a snapshot test (#1796) and `is_checking()` returns `TRUE` if test is running inside of `R CMD check` (#1795),1,24,FALSE,NA
testthat,73f6dd9e3b601ea3739b5c567d2a4ab0,"`ProgressReporter` only reports the run time of test files that take longer than 1s, rather than 0.1s. (#1806) and re-displays all failures at the end of the results. Skips are now only shown at the end of reporter summaries, not as tests are run. This makes them less intrusive in interactive tests while still allowing you to verify that the correct tests are skipped (#1801). When using parallel tests, links to failed tests (#1787) and links to accept/review snapshot (#1802) now work.",1,25,FALSE,NA
testthat,63f33794ed6b80ad223cb3c91c039d39,"`set_state_inspector()` allows to to register a function that's called before and after every test, reporting on any differences. This is very useful for detecting if any of your tests have made changes to global state (like options, env vars, or connections) (#1674). This function was inspired by renv's testing infrastructure.",1,26,FALSE,NA
testthat,fac2f9063af45c77ce2bd656892bc875,`skip_on_cran()` no longer skips (errors) when run interactively.,1,27,FALSE,NA
testthat,4d18c44c2ee690fa6ef1510f6433108b,`teardown_env()` works in more cases.,1,28,FALSE,NA
testthat,f5c29affe26b1490920b3b8d53ab43d4,testthat no longer truncates tracebacks and uses rlang's default tree display.,1,29,FALSE,NA
testthat,50c5cc606621630a1b9e483097569a1b,`expect_snapshot()` differences no longer use quotes.,1,30,FALSE,NA
testthat,50555b3be2cea6a49306fc8e2a5e4523,"`expect_error()`, `expect_warning()`, and `expect_message()` now correctly enforce that the condition is of the expected base class (e.g. error, warning, message) even when the `class` argument is used (#1168).",1,31,FALSE,NA
testthat,78a1d5654db7849d280408767ef66ec7,"`it()` now calls `local_test_context()` so that it behaves more similarly to `test_that()` (#1731), and is now exported so that you can more easily run BDD tests interactively (#1587)",1,32,FALSE,NA
testthat,a0552ccb531dbc280ad2867ffbb9cc67,`skip_on_bioc()` now uses the documented environment variable (`IS_BIOC_BUILD_MACHINE`) (#1712).,1,33,FALSE,NA
testthat,ffab2fa8403958421a6117562a7682e6,"`source_file()`, which is used by various parts of the helper and setup/teardown machinery, now reports the file name in the case of errors (#1704).",1,34,FALSE,NA
testthat,01de52ca9e0075489fe6a1161a50da77,`test_path()` now works when called within helper files (#1562).,1,35,FALSE,NA
testthat,1bb62bbd99db73c001b2906a95cb9c37,"New `vignette(""special-files"")` describes the various special files that testthat uses (#1638).",1,36,FALSE,NA
testthat,c172030bcf2807aefe35e44c1a95c345,"`with_mocked_bindings()` and `local_mocked_bindings()` now also bind in the imports namespace and can mock S3 methods. These changes make them good substitutes for the deprecated functions `with_mock()` and `local_mock()`, so those older functions now recommend switching to the newer equivalents instead of using the mockr or mockery packages.",1,37,FALSE,NA
testthat,bba3bb8b35ce92db254068b29f165737,`expect_setequal()` gives more actionable feedback (#1657).,1,38,FALSE,NA
testthat,d40d4d46db63622b391530e97dffe069,`expect_snapshot()` no longer elides new lines when run interactively (#1726).,1,39,FALSE,NA
testthat,08ca085733a215f82498123c27b2f8c4,Experimental new `with_mocked_bindings()` and `local_mocked_bindings()` (#1739).,1,40,FALSE,NA
testthat,ec1f1f2ae5af13861981151d74b9832d,The embedded version of Catch no longer uses `sprintf()`.,1,41,FALSE,NA
testthat,44c97b51961b8edd10b6204c362d026a,"Deprecation warnings are no longer captured by `expect_warning(code, NA)`, `expect_no_warning(code)`, or `expect_silent(code)`. This ensures that they bubble up to the top level so that you can address them (#1680). If you want to assert that code does not throw a deprecation warning, use `expect_no_condition(code(), class = ""lifecycle_warning_deprecation"")`.",1,42,FALSE,NA
testthat,fe7a2a7d7d300f9d0c173ac46819cf1c,"New experimental `expect_no_error()`, `expect_no_warning()`, `expect_no_message()`, and `expect_no_condition()` for asserting the code runs without an error, warning, message, or condition (#1679).",1,43,FALSE,NA
testthat,b80b4eb63811366d4eff139821797149,Fixed a warning in R \>=4.2.0 on Windows that occurred when using the C++ testing infrastructure that testthat provides (#1672).,1,44,FALSE,NA
testthat,da6a97137638df4513e52a4df31a5175,"Fixed an issue that could prevent compilation of Catch unit tests with LLVM 15. In the interim, packages needing a local workaround can set `PKG_CPPFLAGS = -DCATCH_CONFIG_CPP11_NO_SHUFFLE` in their `src/Makevars`. (2, #1687)",1,45,FALSE,NA
testthat,18a5701cc6a20302398e6b44ed1d4d3e,Improve way `capture_output()` handles encoding thanks to suggestion from Kurt Hornik (#1693). This means that snapshots using UTF-8 encoded text on windows work once again.,1,46,FALSE,NA
testthat,845f69e7662c73ec5e39e1869aac0056,"`local_reproducible_output()` will no longer attempt to set the local language when `LANG='C'` is set or an R version is used that was not compiled with natural language support (NLS), which would previously emit non-test-related warnings during testing (@​dgkf, #1662; @​heavywatal, #1689).",1,47,FALSE,NA
testthat,f9d875aae67dd5372dd7df4ab899b164,`test_check()` now suppresses hyperlinks since they'll take you to the wrong places (#1648).,1,48,FALSE,NA
testthat,fd570a3c3366282175cb6fff0e7b1d41,New `set_max_fails()` helper to make it easier to set the maximum number of failures before stopping the test suite. And the advice to set to Inf is now clickable (#1628).,1,49,FALSE,NA
testthat,e34c99d46e1b09d28792fd633cbea7ea,"You can now configure the behaviour of the implicit `devtools::load_all()` call performed by `devtools::test()` in your package DESCRIPTION file (#1636). To disable exports of internal functions and of testthat helpers, use:",1,50,FALSE,NA
testthat,e34c99d46e1b09d28792fd633cbea7ea,"```
Config/testthat/load-all: list(export_all = FALSE, helpers = FALSE)
```",1,51,TRUE,NA
testthat,e34c99d46e1b09d28792fd633cbea7ea,Helpers are now attached on the search path by default after calling `devtools::test()`.,1,51,FALSE,NA
testthat,80974adb56a8e4722507106a6fdafd9e,Minor tweaks to output for latest cli (#1606).,1,52,FALSE,NA
testthat,8145ce2627c2f110714972ece1e39bad,"Package that explicitly depend on rlang in their description file are now opting into a new snapshot display for errors, warnings, and messages. Previously this only concerned packages that explicitly depended on rlang \>= 1.0.0. This display will eventually become the default for all packages. Changes include:",1,53,FALSE,NA
testthat,8145ce2627c2f110714972ece1e39bad,"• Condition classes are no longer included in the snapshot by default. This is to avoid snapshot noise when upstream code adds or changes a class. For instance, r-devel has added classes to base errors.",2,54,FALSE,"Package that explicitly depend on rlang in their description file are now opting into a new snapshot display for errors, warnings, and messages. Previously this only concerned packages that explicitly depended on rlang \>= 1.0.0. This display will eventually become the default for all packages. Changes include:"
testthat,8145ce2627c2f110714972ece1e39bad,"• Warnings and errors are now printed with rlang, including the `call` field. This makes it easy to monitor the full appearance of warning and error messages as they are displayed to users. This change is part of a push towards mentioning the useful context of an error as part of messages, see the release notes of rlang 1.0.0 for more about this.",2,55,FALSE,"Package that explicitly depend on rlang in their description file are now opting into a new snapshot display for errors, warnings, and messages. Previously this only concerned packages that explicitly depended on rlang \>= 1.0.0. This display will eventually become the default for all packages. Changes include:"
testthat,9ccf96378f2f83ca498fbc4bf66875fe,Test results show hyperlinks to failed expectation when supported (#1544).,1,56,FALSE,NA
testthat,72a86c2714fc6dcdcca7ff3d13e41dd0,"testthat now uses brio for all reading and writing (#1120). This ensures that snapshots always use ""`\n`{=tex}"" to separate lines (#1516).",1,57,FALSE,NA
testthat,1c66ae597e008abb673e182a649065cc,`expect_snapshot()` no longer inadvertently trims trailing new lines off of errors and messages (#1509).,1,58,FALSE,NA
testthat,36abc15a062f4713dc2c4a9b79f2c23f,"If `expect_snapshot()` generates a snapshot with different value but still compares as equal (e.g. because you've set a numeric tolerance), the saved values no longer update if another snapshot in the same file changes.",1,59,FALSE,NA
testthat,8298220c2e2c387f82a22859577a5cb1,"`expect_snapshot()` now only adds a `.new` file for the variants that actually changed, not all variants, while `expect_snapshot_file()` with variant with no longer immediately deletes `.new` files (#1468).",1,60,FALSE,NA
testthat,b0673077bd4a93aa52dcfa7501d43411,"`expect_snapshot_file()` gains a `transform` argument to match `expect_snapshot()` (#1474). `compare` now defaults to `NULL`, automatically guessing the comparison type based on the extension.",1,61,FALSE,NA
testthat,71283bf6947c16e3bba140c1e0c51fad,"`expect_snapshot_file()` now errors if the file being snapshot does not exist; `SnapshotReporter` also now treats the file directory as an absolute path (#1476, @​malcolmbarrett)",1,62,FALSE,NA
testthat,37dd5df6afe4067b1cbf1bb06a276bb7,New `expect_snapshot_warning()` to match `expect_snapshot_error()` (#1532).,1,63,FALSE,NA
testthat,0d05cd495aa9a78533d3b1657f3cc5b0,"`JUnitReporter` now includes skip messages/reasons (@​rfineman, #1507)",1,64,FALSE,NA
testthat,c791cc679c906ef4953930f3859e4495,`local_reproducible_output()` gains a `lang` argument so that you can optionally override the language used to translate error messages (#1483). It also sets the global option `cli.num_colors` in addition to `crayon.enabled`.,1,65,FALSE,NA
testthat,61eddb85620c2b92aa9972edc7e97d3e,`test_that()` no longer inappropriately skips when calling `expect_equal()` when you've temporarily set the locale to non-UTF-8 (#1285).,1,66,FALSE,NA
testthat,3f224a6f75556c562e4082c8f15281b0,`skip_if_offline()` now automatically calls `skip_on_cran()` (#1479).,1,67,FALSE,NA
testthat,52c1f876d2a73828c695804b99a62499,"`snapshot_accept()` and `snapshot_review()` now work with exactly the same file specification which can be a snapshot name, a file name, or a directory (#1546). They both work better with variants (#1508). Snapshot cleanup also removes all empty directories (#1457).",1,68,FALSE,NA
testthat,6a66a3354b98915ad095547bc5c262a3,"When a snapshot changes the hint also mentions that you can use `snapshot_review()` (#1500, @​DanChaltiel) and the message tells you what variant is active (#1540).",1,69,FALSE,NA
testthat,5f0a5be8ddddc8328c964b81d675fb4f,"JUnit reporter now includes skip messages/reasons (@​rfineman, #1507).",1,70,FALSE,NA
testthat,93202217e84899c68cf62b3432d9ed9e,Condition expectations like `expect_error()` now match across the ancestry of chained errors (#1493). You can disable this by setting the new `inherit` argument to `FALSE`.,1,71,FALSE,NA
testthat,109589cb67a5aeb887270e46019fc72c,"Added preliminary support for rlang 1.0 errors. It is disabled by default for the time being. To activate it, specify `rlang (>= 1.0.0)` in your `DESCRIPTION` file (or `>= 0.99.0.9001` if you're using the dev version). Once activated, snapshots will now use rlang to print error and warning messages, including the `Error:` and `Warning:` prefixes. This means the `call` field of conditions is now displayed in snapshots if present. Parent error messages are also displayed. Following this change, all snapshots including error and warning messages need to be revalidated. We will enable the new rlang 1.0 output unconditionally in a future release.",1,72,FALSE,NA
testthat,c9b487d37563949c02d3904e3df8b3aa,"`expect_snapshot()` gains a new argument `cnd_class` to control whether to show the class of errors, warnings, and messages. The default is currently unchanged so that condition classes keep being included in snapshots. However, we plan to change the default to `FALSE` in an upcoming release to prevent distracting snapshot diffing as upstream packages add error classes. For instance, the development version of R is currently adding classes to basic errors, which causes spurious snapshot changes when testing against R-devel on CI. If you depend on rlang 1.0 (see above), the default is already set to `FALSE`.",1,73,FALSE,NA
testthat,7dd6c66d06a5875133d6c3302044a7c9,`expect_snapshot()` no longer processes rlang injection operators like `!!`.,1,74,FALSE,NA
testthat,13969b0ef5ba21ec928543380e3af7a5,Fixed bug in expectations with long inputs that use `::` (#1472).,1,75,FALSE,NA
testthat,60856d807decebcba708f8e5cdb1a643,`expect_snapshot()` is no longer experimental.,1,76,FALSE,NA
testthat,78cdae607943b563777d5e497e53487f,`expect_snapshot()` and friends gets an experimental new `variant` argument which causes the snapshot to be saved in `_snaps/{variant}/{test}.md` instead of `_snaps/{test}.md`. This allows you to generate (and compare) unique snapshots for different scenarios like operating system or R version (#1143).,1,77,FALSE,NA
testthat,eee3a9f9211c2731b521ab529f51796a,"`expect_snapshot()` gains a `transform` argument, which should be a function that takes a character vector of lines and returns a modified character vector of lines. This makes it easy to remove sensitive (e.g. API keys) or stochastic (e.g. random temporary directory names) from snapshot output (#1345).",1,78,FALSE,NA
testthat,b12bb41717d80991b47b5d3af7c229ae,`expect_snapshot_file()` now replaces previous `.new` snapshot if code fails again with a different value.,1,79,FALSE,NA
testthat,872e4b3525c8ffc339885a75f19a8f62,"`expect_snapshot_value()` now has an explicit `tolerance` argument which uses the testthat default, thus making it more like `expect_equal()` rather than `expect_identical()`. Set it to `NULL` if you want precise comparisons (#1309). `expect_snapshot_value(style = ""deparse"")` now works with negative values (#1342).",1,80,FALSE,NA
testthat,ccfb6bc9462d4bfe93021bb86d4d9c7a,"If a test containing multiple snapshots fails (or skips) in between snapshots, the later snapshots are now silently restored. (Previously this warned and reset all snapshots, not just later snapshots).",1,81,FALSE,NA
testthat,8baa536c7ad20cf6d37cf386dccb96d6,"If you have multiple tests with the same name that use snapshots (not a good idea), you will no longer get a warning. Instead the snapshots will be aggregated across the tests.",1,82,FALSE,NA
testthat,23615381a768b84b02c17b4ba89f6ccb,"Condition expectations now consistently return the expected condition instead of the return value (#1371). Previously, they would only return the condition if the return value was `NULL`, leading to inconsistent behaviour. This is a breaking change to the 3rd edition. Where you could previously do:",1,83,FALSE,NA
testthat,23615381a768b84b02c17b4ba89f6ccb,"```
expect_equal(expect_warning(f(), ""warning""), ""value"")
```",1,84,TRUE,NA
testthat,23615381a768b84b02c17b4ba89f6ccb,You must now use condition expectations on the outside:,1,84,FALSE,NA
testthat,23615381a768b84b02c17b4ba89f6ccb,"```
expect_warning(expect_equal(f(), ""value""), ""warning"")

# Equivalently, save the value before inspection
expect_warning(value <- f(), ""warning"")
expect_equal(value, ""value"")
```",1,85,TRUE,NA
testthat,23615381a768b84b02c17b4ba89f6ccb,"This breaking change makes testthat more consistent. It also makes it possible to inspect both the value and the warning, which would otherwise require additional tools.",1,85,FALSE,NA
testthat,b9cd90cf73312042d797e35d70edebe3,Errors in test blocks now display the call if stored in the condition object (#1418). Uncaught errors now show their class (#1426).,1,86,FALSE,NA
testthat,87b0be112707782f9ba2d4b6eff3664f,Multi-line skips only show the first line in the skip summary.,1,87,FALSE,NA
testthat,8496f5b5fe6607bf8f121468e4da92f4,"`expr_label()`, which is used to concisely describe expressions used in expectations, now does a better job of summarising infix function (#1442).",1,88,FALSE,NA
testthat,0ce8871a3d99f217cf3f5f4e78b4f71e,"`local_reproducible_output()` now sets the `max.print` option to 99999 (the default), so your tests are unaffected by any changes you might've made in your `.Rprofile` (1367).",1,89,FALSE,NA
testthat,fef197afaa52670c1f5fccf1bb576aa1,"`ProgressReporter` (the default only) now stops at the end of a file; this ensures that you see the results of all related tests, and ensures that snapshots are handled consistently (#1402).",1,90,FALSE,NA
testthat,0b68c179eda692f978e8dbda3fbb49d5,"`ProgressReporter` now uses an env var to adjust the maximum number of failures. This makes it easier to adjust when the tests are run in a subprocess, as is common when using RStudio (#1450).",1,91,FALSE,NA
testthat,654aa1ec4d0657a4bc88ec4d61708a0c,`skip_on_os()` gains an `arch` argument so you can also choose to skip selected architectures (#1421).,1,92,FALSE,NA
testthat,89faa1dbe2e2eaccf17d7828c5e9c2c8,`test_that()` now correctly errors when an expectation fails when run interactively (#1430).,1,93,FALSE,NA
testthat,73beab3065887f51f01e337a54e4a5b0,"`test_that()` now automatically and correctly generate an ""empty test"" skip if it only generates warnings or messages (and doesn't contain any expectations).",1,94,FALSE,NA
testthat,c99ad526fe195d5761278102a098af03,`testthat_tolerance()` no longer has an unused argument.,1,95,FALSE,NA
testthat,7490ea1c3ba076ec5d8193e06343b894,The vendored Catch code used for `use_catch()` now uses a constant value for the stack size rather than relying on SIGSTKSZ. This fixes compatibility for recent glibc versions where SIGSTKSZ is no longer a constant.,1,96,FALSE,NA
testthat,6c1fc1af2a58797bce2219db361f225d,Fixed an issue that caused errors and early termination of tests on R \<= 3.6 when a failing condition expectation was signalled inside a snapshot.,1,97,FALSE,NA
testthat,146a108d40d42777433afa213573b77a,"`expect_snapshot_file()` gains a `compare` argument (#1378, @​nbenn). This is a customisation point for how to compare old and new snapshot files. The functions `compare_file_binary()` and `compare_file_text()` are now exported from testthat to be supplied as `compare` argument. These implement the same behaviour as the old `binary` argument which is now deprecated.",1,98,FALSE,NA
testthat,9dea2a206ffa6feb1109e98ab3b9b262,`expect_snapshot()` no longer deletes snapshots when an unexpected error occurs.,1,99,FALSE,NA
testthat,a83b352af8f91bb2f317cbaa57a119df,New `announce_snapshot_file()` function for developers of testthat extensions. Announcing a snapshot file allows testthat to preserve files that were not generated because of an unexpected error or a `skip()` (#1393). Unannounced files are automatically deleted during cleanup if the generating code isn't called.,1,100,FALSE,NA
testthat,abbe92d71f5b714d3cadb9c609fc3193,"New expectation: `expect_no_match()`. It complements `expect_match()` by checking if a string **doesn't match** a regular expression (@​michaelquinn32, #1381).",1,101,FALSE,NA
testthat,68fe92f094fa11b466a1251708a29d53,"Support setting the testthat edition via an environment variable (`TESTTHAT_EDITION`) as well (@​michaelquinn32, #1386).",1,102,FALSE,NA
testthat,38d94f29aa38efe0218083d1380f4fb8,Failing expectations now include a backtrace when they're not called directly from within `test_that()` but are instead wrapped in some helper function (#1307).,1,103,FALSE,NA
testthat,b820aa6d2d30358ed12541b6cf25e432,`CheckReporter` now only records warnings when not on CRAN. Otherwise failed CRAN revdep checks tend to be cluttered up with warnings (#1300). It automatically cleans up `testthat-problems.rds` left over from previous runs if the latest run is successful (#1314).,1,104,FALSE,NA
testthat,395d2038463abca17f7d4e2b34fca80a,`expect_s3_class()` and `expect_s4_class()` can now check that an object *isn't* an S3 or S4 object by supplying `NA` to the second argument (#1321).,1,105,FALSE,NA
testthat,692bd674e44594e980a444b3d12c8ce1,`expect_s3_class()` and `expect_s4_class()` format class names in a less confusing way (#1322).,1,106,FALSE,NA
testthat,ae663482a121a7005e5c713859a84982,"`expect_snapshot()` collapses multiple adjacent headings of the same, so that, e.g., if you have multiple lines of code in a row, you'll only see one ""Code:"" heading (#1311).",1,107,FALSE,NA
testthat,da2a399a8f6087cce8851fd92e601a7c,"New `testthat.progress.verbose_skips` option. Set to `FALSE` to stop reporting skips as they occur; they will still appear in the summary (#1209, @​krlmlr).",1,108,FALSE,NA
testthat,c45f5566a11e13312e1bc7ab24eb110c,"`CheckReporter` results have been tweaked based on experiences from running R CMD check on many packages. Hopefully it should now be easier to see the biggest problems (i.e. failures and errors) while still having skips and warnings available to check if needed (#1274). And now the full test name is always shown, no matter how long (#1268).",1,109,FALSE,NA
testthat,05b0a64179ed783ba71950ba3abdca35,Catch C++ tests are no longer reported multiple times (#1237) and are automatically skipped on Solaris since Catch is not supported (#1257). `use_catch()` makes it more clear that your package needs to suggest xml2 (#1235).,1,110,FALSE,NA
testthat,7d4c3c835e1c85a3b0aa71438ace636c,"`auto_test_package()` works once again (@​mbojan, #1211, #1214).",1,111,FALSE,NA
testthat,40f69d76e2d7544c00cd46f0d47e545f,"`expect_snapshot()` gains new `error` argument which controls whether or not an error is expected. If an unexpected error is thrown, or an expected error is not thrown, `expect_snapshot()` will fail (even on CRAN) (#1200).",1,112,FALSE,NA
testthat,bf4c67a65198d1b92369bc0104534aa8,"`expect_snapshot_value(style = ""deparse"")` handles more common R data structures.",1,113,FALSE,NA
testthat,9481d234bee79833ceba98f6d1d9d587,`expect_snapshot_value()` now passes `...` on to `waldo::compare()` (#1222).,1,114,FALSE,NA
testthat,8ab09aa7a5a3d4f98ec4139cbbd0c2eb,"`expect_snapshot_file()` gives a hint as to next steps when a failure occurs in non-interactive environments (with help from @​maelle, #1179). `expect_snapshot_*()` gives a more informative hint when you're running tests interactively (#1226).",1,115,FALSE,NA
testthat,4e63462a8a0ee56e3e58bac3c109479b,"`expect_snapshot_*()` automatically removes the `_snaps` directory if it's empty (#1180). It also warns if snapshots are discarded because tests have duplicated names (#1278, @​krlmlr).",1,116,FALSE,NA
testthat,02aecd64bedde2983821bdd7e2e9df90,"`local_reproducible_output()` now sets the LANGUAGE env var to ""en"". This matches the behaviour of R CMD check in interactive settings (#1213). It also now unsets RSTUDIO envvar, instead of setting it to 0 (#1225).",1,117,FALSE,NA
testthat,661c211b3e71c7eef83959772e5d81d4,`RstudioReporter` has been renamed to `RStudioReporter`.,1,118,FALSE,NA
testthat,00a5b9ac5b5227678f24b61b491a8ec0,"`skip_if_not()` no longer appends ""is not TRUE"" to custom messages (@​dpprdan, #1247).",1,119,FALSE,NA
testthat,0f997ceb15a59ab40fe2a54bdf151d35,"`test_that()` now warns (3e only) if code doesn't have braces, since that makes it hard to track the source of an error (#1280, @​krlmlr).",1,120,FALSE,NA
testthat,f3bd2fb1625f005fe70e5a92c0409a2f,`context()` is deprecated.,1,121,FALSE,NA
testthat,76e21b3e89a02f2eede66b55432ad9ad,"`expect_identical()` and `expect_equal()` use `waldo::compare()` to compare actual and expected results. This mostly yields much more informative output when the actual and expected values are different, but while writing it uncovered some bugs in the existing comparison code.",1,122,FALSE,NA
testthat,1fe9a49919617ebe3c1449e3d4d1dae0,"`expect_error()`, `expect_warning()`, `expect_message()`, and `expect_condition()` now all use the same underlying logic: they capture the first condition that matches `class`/`regexp` and allow anything else to bubble up (#998/#1052). They also warn if there are unexpected arguments that are never used.",1,123,FALSE,NA
testthat,879b733cef58428c3fde970f37e874eb,"The `all` argument to `expect_message()` and `expect_warning()` is now deprecated. It was never a particularly good idea or well documented, and is now superseded by the new condition capturing behaviour.",1,124,FALSE,NA
testthat,6f28c7f5e6087be2fab06c80d8e14815,"`expect_equivalent()`, `expect_reference()`, `expect_is()` and `expect_that()` are deprecated.",1,125,FALSE,NA
testthat,1b4b9ac29ab9a62f2744fb892bae112d,"Messages are no longer automatically silenced. Either use `suppressMessages()` to hide unimportant messages, or `expect_message()` to catch important messages (#1095).",1,126,FALSE,NA
testthat,011863622a95f926653916e9a8b49beb,"`setup()` and `teardown()` are deprecated in favour of test fixtures. See `vignette(""test-fixtures"")` for more details.",1,127,FALSE,NA
testthat,dec1d113a74eefa971b361f93ed81632,"`expect_known_output()`, `expect_known_value()`, `expect_known_hash()`, and `expect_equal_to_reference()` are all deprecated in favour of `expect_snapshot_output()` and `expect_snapshot_value()`.",1,128,FALSE,NA
testthat,ea6dc783a4bf315a2bb6220dc154f908,"`test_that()` now sets a number of options and env vars to make output as reproducible as possible (#1044). Many of these options were previously set in various places (in `devtools::test()`, `test_dir()`, `test_file()`, or `verify_output()`) but they have now been centralised. You can use in your own code, or when debugging tests interactively with `local_test_context()`.",1,129,FALSE,NA
testthat,dc2bde874d467371df0c6ece4b44e2f9,`with_mock()` and `local_mock()` are deprecated; please use the mockr or mockery packages instead (#1099).,1,130,FALSE,NA
testthat,d6b637108059bd10ee9ef4e61299cbda,"`CheckReporter` (used inside R CMD check) now prints out all problems (i.e. errors, failures, warnings and skips; and not just the first 10), lists skips types, and records problems in machine readable format in `tests/testthat-problems.rds` (#1075).",1,131,FALSE,NA
testthat,a9a779bda53b8f67825d8416eb7590d9,"New `CompactProgressReporter` tweaks the output of `ProgressReporter` for use with a single file, as in `devtools::test_file()`. You can pick a different default by setting `testthat.default_compact_reporter` to the name of a reporter.",1,132,FALSE,NA
testthat,259576235bfcfc3122fdc749b6670535,"`ProgressReporter` (the default reporter) now keeps the stack traces of an errors that happen before the before test, making problems substantially easier to track down (#1004). It checks if you've exceeded the maximum number of failures (from option `testthat.progress.max_fails`) after each expectation, rather than at the end of each file (#967). It also gains new random praise options that use emoji, and lists skipped tests by type (#1028).",1,133,FALSE,NA
testthat,1d54845a0fc8abd0828e0cbd916fd8fb,"`StopReporter` adds random praise emoji when a single test passes (#1094). It has more refined display of failures, now using the same style as `CompactProgressReporter` and `ProgressReporter`.",1,134,FALSE,NA
testthat,6d86cc0deb457d1123f12b97530012cf,"`SummaryReporter` now records file start, not just context start. This makes it more compatible with modern style which does not use `context()` (#1089).",1,135,FALSE,NA
testthat,36815ca6867e700d1a3dd1dd83dd50d7,All reporters now use exactly the same format when reporting the location of an expectation.,1,136,FALSE,NA
testthat,988ac9684f4b2f588a0b5c200624ef49,"Warnings now include a backtrace, making it easier to figure out where they came from.",1,137,FALSE,NA
testthat,bcfe2ba58d87ef2a5a52e76ad3b5bbe2,"Catch C++ tests now provide detailed results for each test. To upgrade existing code, re-run `testthat::use_catch()` (#1008).",1,138,FALSE,NA
testthat,215f99e848f7b1fc09c041fead91c667,"Many reporters (e.g. the check reporter) no longer raise an error when any tests fail. Use the `stop_on_failure` argument to `devtools::test()` and `testthat::test_dir()` if your code relies on this. Alternatively, use `reporter = c(""check"", ""fail"")` to e.g. create a failing check reporter.",1,139,FALSE,NA
testthat,bc88a0cfcf8a1adb66f5d9f1f970224e,"New `vignette(""test-fixtures"")` describes test fixtures; i.e. how to temporarily and cleanly change global state in order to test parts of your code that otherwise would be hard to run (#1042). `setup()` and `teardown()` are superseded in favour of test fixtures.",1,140,FALSE,NA
testthat,50c799e9482afea490128d1bcef52fab,New `teardown_env()` for use with `withr::defer()`. This allows you to run code after all other tests have been run.,1,141,FALSE,NA
testthat,020b2afce962b6330ceee3c29cea9e10,"New `vignette(""skipping"")` gives more general information on skipping tests, include some basics on testing skipping helpers (#1060).",1,142,FALSE,NA
testthat,077cd36490efe6cdc5934b26228b1761,"`ProgressReporter()` and `CheckReporter()` list the number of skipped tests by reason at the end of the reporter. This makes it easier to check that you're not skipping the wrong tests, particularly on CI services (#1028).",1,143,FALSE,NA
testthat,146ec2393908946c6b15556465fa0a4c,"`test_that()` no longer triggers an error when run outside of tests; instead it produces a more informative summary of all failures, errors, warnings, and skips that occurred inside the test.",1,144,FALSE,NA
testthat,a748e31eed62ab8d09c2dbcd0e0e3e68,`test_that()` now errors if `desc` is not a string (#1161).,1,145,FALSE,NA
testthat,1646f49e48d82cfc174e2400e34a0016,"`test_file()` now runs helper, setup, and teardown code, and has the same arguments as `test_dir()` (#968). Long deprecated `encoding` argument has been removed.",1,146,FALSE,NA
testthat,746fbe7c5c7679beefde1a8d842ca263,`test_dir()` now defaults `stop_on_failure` to `TRUE` for consistency with other `test_` functions. The `wrap` argument has been deprecated; it's not clear that it should ever have been exposed.,1,147,FALSE,NA
testthat,b625c15b2178182700923cc9707912d7,New `test_local()` tests a local source package directory. It's equivalent to `devtools::test()` but doesn't require devtools and all its dependencies to be installed (#1030).,1,148,FALSE,NA
testthat,3ba29f55dfaec9784a2cff763e809335,testthat no longer supports tests stored in `inst/tests`. This has been deprecated since testthat 0.11.0 (released in 2015). `test_package()` (previously used for running tests in R CMD check) will fail silently if no tests are found to avoid breaking old packages on CRAN (#1149).,1,149,FALSE,NA
testthat,524a455a3561f5a5020819cb75543772,`capture_output()` and `verify_output()` use a new `testthat_print()` generic. This allows you to control the printed representation of your object specifically for tests (i.e. if your usual print method shows data that varies in a way that you don't care about for tests) (#1056).,1,150,FALSE,NA
testthat,ec535c28aebc5bfd30a75bc651a10618,"`context_start_file()` is now exported for external reporters (#983, #1082). It now only strips first instance of prefix/suffix (#1041, @​stufield).",1,151,FALSE,NA
testthat,d7ac81fe709454d40e701b20217f5bff,`expect_error()` no longer encourages you to use `class`. This advice removes one type of fragility at the expense of creating a different type (#1013).,1,152,FALSE,NA
testthat,8c661d29057af73d50374fe148d3ee28,"`expect_known_failure()` has been removed. As far as I can tell it was only ever used by testthat, and is rather fragile.",1,153,FALSE,NA
testthat,48ec0c0fbbaf60cc4a535ff8f565efb2,"`expect_true()`, `expect_false()`, and `expect_null()` now use waldo to produce more informative failures.",1,154,FALSE,NA
testthat,b06cec167f9070f4c1005c1575cc7d3e,"`verify_output()` no longer always fails if output contains a carriage return character (""`\r""`{=tex}) (#1048). It uses the `pdf()` device instead of `png()` so it works on systems without X11 (#1011). And it uses `waldo::compare()` to give more informative failures.",1,155,FALSE,NA
testthat,0beeea28351f06407f128d01cc91ff60,Fix R CMD check issues,1,156,FALSE,NA
testthat,d175ecf00f0b17cb7afaefac84daf05e,"The last version of testthat introduced a performance regression in error assertions (#963). To fix it, you need to install rlang 0.4.2.",1,157,FALSE,NA
testthat,9d5b1a3d63cea9e38359739f7b8317a7,Fixed error assertions with rJava errors (#964).,1,158,FALSE,NA
testthat,cf19fd9012f8126fe575ef2ac8fbda88,Fixed issue where error and warning messages were not retrieved with `conditionMessage()` under certain circumstances.,1,159,FALSE,NA
testthat,57c22a056d396b7a3f9985438a07e5a7,Unexpected errors are now printed with a simplified backtrace.,1,160,FALSE,NA
testthat,0a0c8d0b8a4e24d488c40d7e69c2e8b5,`expect_error()` and `expect_condition()` now display a backtrace when the error doesn't conform to expectations (#729).,1,161,FALSE,NA
testthat,2bb6244a685888cb9c889e41ddfb903c,"`expect_error()`, `expect_warning()` and `expect_message()` now call `conditionMessage()` to get the condition message. This generic makes it possible to generate messages at print-time rather than signal-time.",1,162,FALSE,NA
testthat,b8cd0d1637776f72846b5115b08df9dc,`expect_error()` gets a better warning message when you test for a custom error class with `regexp`.,1,163,FALSE,NA
testthat,96b4bbd476f8f86a36f7b65e6f3b88d8,"New `exp_signal()` function is a condition signaller that implements the testthat protocol (signal with `stop()` if the expectation is broken, with a `continue_test` restart).",1,164,FALSE,NA
testthat,9dc2e84369a552a23fdcdec7e02213ad,Existence of restarts is first checked before invocation. This makes it possible to signal warnings or messages with a different condition signaller (#874).,1,165,FALSE,NA
testthat,30f4aebab9f8e8a0e535dc7a7250bbe0,"`ListReporter` now tracks expectations and errors, even when they occur outside of tests. This ensures that `stop_on_failure` matches the results displayed by the reporter (#936).",1,166,FALSE,NA
testthat,ee2e0acbaf21dbf2afa7104b11d8985d,"You can silence warnings about untested error classes by implementing a method for `is_uninformative_warning()`. This method should be lazily registered, e.g. with `vctrs::s3_register()`. This is useful for introducing an experimental error class without encouraging users to depend on the class in their tests.",1,167,FALSE,NA
testthat,d8275a459334778f64fb9935ce87a728,Respect options(warn = -1) to ignore all warnings (@​jeroen #958).,1,168,FALSE,NA
testthat,ba482a31cd767b498c6b6abe953d144c,Expectations can now be explicitly subclassed with `new_expectation()`. This constructor follows our new conventions for S3 classes and takes an optional subclass and optional attributes.,1,169,FALSE,NA
testthat,3cdfb1d7867342962c7b073bb3a8c71d,Unquoted inputs no longer potentially generate multiple test messages (#929).,1,170,FALSE,NA
testthat,909988a0757115cbdb23ddc0e5c82436,"`verify_output()` no longer uses quasiquotation, which fixes issues when verifying the output of tidy eval functions (#945).",1,171,FALSE,NA
testthat,ec90f91a685f22ddbbe2f4147ea12d4d,`verify_output()` gains a `unicode` parameter to turn on or off the use of Unicode characters by the cli package. It is disabled by default to prevent the tests from failing on platforms like Windows that don't support UTF-8 (which could be your contributors' or your CI machines).,1,172,FALSE,NA
testthat,d454fc5eba25aa7aea2e568c119e17b4,`verify_output()` now correctly handles multi-line condition messages.,1,173,FALSE,NA
testthat,722543e3b232f7bbda1d6ea9a29f886c,"`verify_output()` now adds spacing after condition messages, consistent with the spacing added after normal output.",1,174,FALSE,NA
testthat,fd1dfc9b01218b55468a5933be120ecf,"`verify_output()` has a new syntax for inserting headers in output files: insert a `""# Header""` string (starting with `#` as in Markdown) to add a header to a set of outputs.",1,175,FALSE,NA
testthat,b27ff1f95dd3b5bcf92fd95646795400,`compare.numeric()` uses a more sophisticated default tolerance that will automatically skip tests that rely on numeric tolerance if long doubles are not available (#940).,1,176,FALSE,NA
testthat,ee630ff187e3e282c3e1be26e7857d46,`JunitReporter` now reports tests in ISO 8601 in the UTC timezone and uses the maximum precision of 3 decimal places (#923).,1,177,FALSE,NA
testthat,da770e294fb9c070837571cff7138256,Repair regression in `test_rd()` and add a couple of tests to hopefully detect the problem earlier in the future.,1,178,FALSE,NA
testthat,ad68e7107266704211c706aa5e1fcc75,"New `verify_output()` is designed for testing output aimed at humans (most commonly print methods and error messages). It is a regression test that saves output in a way that makes it easy to review. It is automatically skipped on CRAN (#782, #834).",1,179,FALSE,NA
testthat,111343da47cbc7deb0c4f81a5b39085e,"`as.data.frame.testthat_results()` now always returns a data frame with 13 columns (@​jozefhajnala, #887).",1,180,FALSE,NA
testthat,21fef986461e2a86ca32fef24b8c64f8,"`auto_test_package()` now correctly handles helper files (`tests/testthat/helper-*.R`), automatically reloading all code and rerunning all tests (@​CorradoLanera, #376, #896).",1,181,FALSE,NA
testthat,69bc5a6768ffd99418f6addf0bc9032f,`expect_match()` now displays `info` even when match length is 0 (#867).,1,182,FALSE,NA
testthat,3f7f8a8752748ab9f45ae8878fa7cf22,"`expect_s3_class()` gains new `exact` argument that allows you to check for an exact class match, not just inheritance (#885).",1,183,FALSE,NA
testthat,3220364ac6b33973cee776eacd23ba2c,"`fail()` and `succeed()` gain `info` argument, which is passed along to `expect()`.",1,184,FALSE,NA
testthat,221119f6f291ef99d2b1eff4c69c18ab,"`test_examples()` gets some minor fixes: it now returns the results invisibly, doesn't assume that examples should contain tests, and documents that you shouldn't be using it routinely (#841).",1,185,FALSE,NA
testthat,7260e930708bb91b048c1cbed35b5177,"`test_file()` only calls `Reporter$end_context()` if a context was started, fixing an error in `TeamcityReporter` (@​atheriel, #883).",1,186,FALSE,NA
testthat,0dd72468d3f88dc7ca54a434fd6608d3,"`skip()` now reports reason for skipping as: `Reason: {skip condition}` (@​patr1ckm, #868).",1,187,FALSE,NA
testthat,45bbfda09850cfd5db29537f49e64b90,"`skip_if()` and `skip_if_not()` now report `Reason: {skip condition} is TRUE` and `Reason: {skip condition} is not TRUE` respectively (@​ patr1ckm, #868).",1,188,FALSE,NA
testthat,f51480baf23d4adf281bb802cacc4d7d,"`skip_if_translated()` now tests for translation of a specific message. This is more robust than the previous approach because translation happens message-by-message, not necessarily for the entire session (#879) (and in general, it's impossible to determine what language R is currently using).",1,189,FALSE,NA
testthat,c87653cac2041ebe4362296b03fb0181,"`skip_on_covr()` allows you to skip tests when covr is running. (@​ianmcook, #895)",1,190,FALSE,NA
testthat,8c216c90988b752b5149d40d9cde1978,"`expect_known_value()` gains a new serialisation `version` argument, defaulting to 2. Prevents the `.rds` files created to hold reference objects from making a package appear to require R \>= 3.5 (#888 @​jennybc).",1,191,FALSE,NA
testthat,5b390d89a43f03f616f69c25be54daad,Fix test failures in strict latin1 locale,1,192,FALSE,NA
testthat,4a109fa2e34858b57e76e239332806f4,New `expect_visible()` and `expect_invisible()` make it easier to check if a function call returns its result visibly or invisibly (#719).,1,193,FALSE,NA
testthat,d046cb87d8f561017def8ae7ecf5566d,"New `expect_mapequal(x, y)` checks that `x` and `y` have the same names, and the same value associated with each name (i.e. they compare the values of the vector standardising the order of the names) (#863).",1,194,FALSE,NA
testthat,20b2ae22a00120b357a0f5e3f3de1145,New `expect_vector()` is a wrapper around `vctrs::vec_assert()` making it easy to test against the vctrs definitions of prototype and size (#846). (Currently requires development version of vctrs.),1,195,FALSE,NA
testthat,1078ec51ad770ac1031d56d3c26b29df,All expectations give clearer error messages if you forget the `object` or `expected` arguments (#743).,1,196,FALSE,NA
testthat,c3ba6e3f129009a3b548f82515d871e7,`expect_equal()` now correctly compares infinite values (#789).,1,197,FALSE,NA
testthat,e3e833aa61732afd0c3095d52d0dabee,"In `expect_equal_to_reference()`, the default value for `update` is now `FALSE` (@​BrodieG, #683).",1,198,FALSE,NA
testthat,4c95be6a01a1fee9f5be0a660cd719b4,`expect_error()` now returns the error object as documentated (#724). It also now warns if you're using a classed expectation and you're not using the `class` argument. This is good practice as it decouples the error object (which tends to be stable) from its rendering to the user (which tends to be fragile) (#816).,1,199,FALSE,NA
testthat,85c72364ca2e605ddc7e08ab73141a3a,`expect_identical()` gains a `...` argument to pass additional arguments down to `identical()` (#714).,1,200,FALSE,NA
testthat,cb91956397007180d83a892a487828f5,"`expect_lt()`, `expect_lte()`, `expect_gt()` `expect_gte()` now handle `Inf` and `NA` arguments appropriately (#732), and no longer require the inputs to be numeric.",1,201,FALSE,NA
testthat,b7dea5f3b57fe98ee70fc56bde696adc,"`expect_output()` gains a `width` argument, allowing you to control the output width. This does not inherit from `getOption(""width"")`, ensuring that tests return the same results regardless of environment (#805).",1,202,FALSE,NA
testthat,e2dc7ce843fc7ace0e1153a867e91d67,"`expect_setequal()` now works with more vector types (including lists), because it uses `%in%`, rather than `sort()`. It also warns if the inputs are named, as this suggests that your mental model of how `expect_setequal()` works is wrong (#750).",1,203,FALSE,NA
testthat,c68c191a9c552a5d9976091cc46e5fd2,`is_true()` and `is_false()` have been deprecated because they conflict with other functions in the tidyverse.,1,204,FALSE,NA
testthat,41cfb847d460edae08782cf509a329e3,Reporter documentation has been considerably improved (#657).,1,205,FALSE,NA
testthat,340ed5961776e294a273da5aca04072e,"`CheckReporter`, used by R CMD check, now includes a count of warnings.",1,206,FALSE,NA
testthat,a7c0a4d3050b80654172bd230b507b95,"`JUnitReporter` no longer replaces `.` in class names (#753), and creates output that should be more compatible with Jenkins (#806, @​comicfans).",1,207,FALSE,NA
testthat,c6efeecc4f5f58e359cce79786e438e4,`ListReporter` now records number of passed tests and original results in new columns (#675).,1,208,FALSE,NA
testthat,3d76d723abe5a9da9e31fcf51418c2da,"`ProgressReporter`, the default reporter, now:",1,209,FALSE,NA
testthat,3d76d723abe5a9da9e31fcf51418c2da,"• Automatically generates a context from the file name. We no longer recommend the use of `context()` and instead encourage you to delete it, allowing the context to be autogenerated from the file name. This also eliminates the error that occurred if tests can before the first `context()` (#700, #705).",2,210,FALSE,"`ProgressReporter`, the default reporter, now:"
testthat,3d76d723abe5a9da9e31fcf51418c2da,"• Gains a `update_interval` parameter to control how often updates are printed (default 0.1 s). This prevents large printing overhead for very fast tests. (#701, @​jimhester)",2,211,FALSE,"`ProgressReporter`, the default reporter, now:"
testthat,3d76d723abe5a9da9e31fcf51418c2da,"• Uses a 3 character wide column to display test successes, so up to 999 successful tests can be displayed without changing the alignment (#712).",2,212,FALSE,"`ProgressReporter`, the default reporter, now:"
testthat,b52be879d21f9eb68022fa6eb9cbd786,`reporter$end_reporter()` is now only called when testing completes successfully. This ensures that you don't get unnecessary output when the test fails partway through (#727).,1,213,FALSE,NA
testthat,7fd9a89af10d6502a6b7882c161e8346,`skip_if_offline()` skips tests if an internet connection is not available (#685).,1,214,FALSE,NA
testthat,926ba4370249e8f23d6fb4ca5fc5dbb8,"`skip_on_ci()` skips tests on continuous integration systems (@​mbjoseph, #825) by looking for a `CI` env var..",1,215,FALSE,NA
testthat,fe3bacc389dc77ffab265cd053e57ca2,New `testthat_examples()` and `testthat_example()` make it easy to access new test files bundled with the package. These are used in various examples to make it easier to understand how to use the package.,1,216,FALSE,NA
testthat,84c9387398d3a5034eb354142ab97542,New `local_mock()` which allows you to mock a function without having to add an additional layer of indentation as with `with_mock()` (#856).,1,217,FALSE,NA
testthat,932b860b932609b8c91d5b43b0a7cab1,`auto_test_package()` works better with recent devtools and also watches `src/` for changes (#809).,1,218,FALSE,NA
testthat,18a31a65c79e5f0744f455b692d32acb,"`expect_s3_class()` now works with unquoting (@​jalsalam, #771).",1,219,FALSE,NA
testthat,882185f269439b194eb87ae7608037e0,"`expectation` objects now contain the failure message, even when successful (#836)",1,220,FALSE,NA
testthat,326ec78978646a3a91b41fe91520e8b0,`devtools::test()` no longer fails if run multiple times within the same R session for a package containing Catch tests. (devtools #1832),1,221,FALSE,NA
testthat,7ee06bed4ab5271b40b7c696169e4f40,New `testing_package()` retrieves the name of the package currently being tested (#699).,1,222,FALSE,NA
testthat,4f62d94a7a0a35e9b30a810b9aaa3202,`run_testthat_tests` C entrypoint is registered more robustly.,1,223,FALSE,NA
testthat,6dc1ab5e5b66c0f4f8f630dd802d9d50,"`skip()` now always produces a `message` of length 1, as expected elsewhere in testthat (#791).",1,224,FALSE,NA
testthat,6d708cb7fc57393ffb1c93c43e09e3c5,"Warnings are passed through even when `options(warn = 2)` is set (@​yutannihilation, #721).",1,225,FALSE,NA
testthat,88579eb783dc61b33f33678ad55377a0,Fix failing tests with devtools 2.0.0,1,226,FALSE,NA
testthat,8f68dcf19f7e1cdd7a6adeb71b36008d,"""Can't mock functions in base packages"": You can no longer use `with_mock()` to mock functions in base packages, because this no longer works in R-devel due to changes with the byte code compiler. I recommend using mockery or mockr instead.",1,227,FALSE,NA
testthat,13b6d60de9a59f401f03b7b11bd87851,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:",1,228,FALSE,NA
testthat,13b6d60de9a59f401f03b7b11bd87851,• 'what' must be a character vector,2,229,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,• 'check.attributes' must be logical,2,230,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,• 'tolerance' should be numeric,2,231,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,• argument is not interpretable as logical,2,232,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,• threw an error with unexpected class,2,233,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,"• argument ""quo"" is missing, with no default",2,234,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,13b6d60de9a59f401f03b7b11bd87851,"• argument is missing, with no default",2,235,FALSE,"The order of arguments to `expect_equivalent()` and `expect_error()` has changed slightly as both now pass `...` on another function. This reveals itself with a number of different errors, like:"
testthat,680bf17668e29495213d4c35f8273838,"If you see one of these errors, check the number, order, and names of arguments to the expectation.",1,235,FALSE,NA
testthat,2108bcbabaad1cbed0acd5af0589ca1e,"""Failure: (unknown)"". The last release mistakenly failed to test bare expectations not wrapped inside `test_that()`. If you see ""(unknown)"" in a failure message, this is a failing expectation that you previously weren't seeing. As well as fixing the failure, please also wrap inside a `test_that()` with an informative name.",1,236,FALSE,NA
testthat,612e6a766bb75829ee696a81eae72ade,"""Error: the argument has already been evaluated"": the way in which expectations now need create labels has changed, which caused a couple of failures with unusual usage when combined with `Reduce`, `lapply()`, and `Map()`. Avoid these functions in favour of for loops. I also recommend reading the section below on quasiquotation support in order to create more informative failure messages.",1,237,FALSE,NA
testthat,ded9bb385385f1effa8f0a720355e64f,"`expect_condition()` works like `expect_error()` but captures any condition, not just error conditions (#621).",1,238,FALSE,NA
testthat,bbf1fd077251fed617e23f1e6730cd30,`expect_error()` gains a `class` argument that allows you to make an assertion about the class of the error object (#530).,1,239,FALSE,NA
testthat,830d6c3ddaaabeca72372bf20ef51b2a,`expect_reference()` checks if two names point to the same object (#622).,1,240,FALSE,NA
testthat,82b29657437155ff8f31ea817e654bca,"`expect_setequal()` compares two sets (stored in vectors), ignoring duplicates and differences in order (#528).",1,241,FALSE,NA
testthat,702565524e59dca615f61d16f0246f20,"`skip_if()` makes it easy to skip a test when a condition is true (#571). For example, use `skip_if(getRversion() <= 3.1)` to skip a test in older R versions.",1,242,FALSE,NA
testthat,4760cd3740bd49dfa9567fb44d1f8bae,`skip_if_translated()` skips tests if you're running in an locale where translations are likely to occur (#565). Use this to avoid spurious failures when checking the text of error messages in non-English locales.,1,243,FALSE,NA
testthat,ee97bf71bf91a870fca8d8a6ed81d075,"`skip_if_not_installed()` gains new `minimum_version` argument (#487, #499).",1,244,FALSE,NA
testthat,472958527470f8a6bacc316b6e070a46,"`expect_known_output()` replaces `expect_output_file()`, which has been soft-deprecated. It now defaults to `update = TRUE` and warn, rather than failing on the first run. It gains a `print` argument to automatically print the input (#627). It also sets the width option to 80 to ensure consistent output across environments (#514)",1,245,FALSE,NA
testthat,af3382742848bb0a67cc1ee47c16cddc,"`expect_known_value()` replaces `expect_equal_to_reference()`, which has been soft-deprecated. It gains an update argument defaulting to `TRUE`. This changes behaviour from the previous version, and soft-deprecated `expect_equal_to_reference()` gets `update = FALSE`.",1,246,FALSE,NA
testthat,df341057d24c635aa0a32e84ac94fd2a,`expect_known_failure()` stored and compares the failure message from an expectation. It's a useful regression test when developing informative failure messages for your own expectations.,1,247,FALSE,NA
testthat,14738fc32e26272b94dd9520f3d038a2,New `setup()` and `teardown()` functions allow you to run at the start and end of each test file. This is useful if you want to pair cleanup code with the code that messes up state (#536).,1,250,FALSE,NA
testthat,b0a41d67630ffdb29b9e88b33e2d8919,Two new prefixes are recognised in the `test/` directory. Files starting with `setup` are run before tests (but unlike `helpers` are not run in `devtools::load_all()`). Files starting with `teardown` are run after all tests are completed (#589).,1,251,FALSE,NA
testthat,0fbeaa30ec14465cf33578506746d438,"All files are now read and written as UTF-8 (#510, #605).",1,252,FALSE,NA
testthat,b4c9b8f5ad338c801e1410ac4f35aff9,`is_testing()` allows you to tell if your code is being run inside a testing environment (#631). Rather than taking a run-time dependency on testthat you may want to inline the function into your own package:,1,253,FALSE,NA
testthat,b4c9b8f5ad338c801e1410ac4f35aff9,"```
is_testing <- function() {
  identical(Sys.getenv(""TESTTHAT""), ""true"")
}
```",1,254,TRUE,NA
testthat,b4c9b8f5ad338c801e1410ac4f35aff9,It's frequently useful to combine with `interactive()`.,1,254,FALSE,NA
testthat,2ed28999d9c20c194baa462105bcfaf7,"Output colours have been tweaked to be consistent with clang: warnings are now in magenta, and skips in blue.",1,255,FALSE,NA
testthat,83f7b9aadff9a58e81d2ef9677d119b6,New `default_reporter()` and `check_reporter()` which returns the default reporters for interactive and check environments (#504).,1,256,FALSE,NA
testthat,d1af42071726f458d6ae8be391ad7cd5,"New `DebugReporter` that calls a better version of `recover()` in case of failures, errors, or warnings (#360, #470).",1,257,FALSE,NA
testthat,bc00f9772404de75fec01fa14caf66d7,"New `JunitReporter` generates reports in JUnit compatible format.\ (#481, @​lbartnik; #640, @​nealrichardson; #575)",1,258,FALSE,NA
testthat,b13a842c43650f7c0262121a21696a0e,New `LocationReporter` which just prints the location of every expectation. This is useful for locating segfaults and C/C++ breakpoints (#551).,1,259,FALSE,NA
testthat,23a0c85f562d946a0912294b3e2059ba,`SummaryReporter` received a number of smaller tweaks,1,260,FALSE,NA
testthat,23a0c85f562d946a0912294b3e2059ba,• Aborts testing as soon the limit given by the option `testthat.summary.max_reports` (default 10) is reached (#520).,2,261,FALSE,`SummaryReporter` received a number of smaller tweaks
testthat,23a0c85f562d946a0912294b3e2059ba,• New option `testthat.summary.omit_dots = TRUE` hides the progress dots speeding up tests by a small amount (#502).,2,262,FALSE,`SummaryReporter` received a number of smaller tweaks
testthat,23a0c85f562d946a0912294b3e2059ba,• Bring back random praise and encouragement which I accidentally dropped (#478).,2,263,FALSE,`SummaryReporter` received a number of smaller tweaks
testthat,d3b63ffe99157906f4f2738c4c40da03,"New option `testthat.default_check_reporter`, defaults to `""check""`. Continuous Integration system can set this option before evaluating package test sources in order to direct test result details to known location.",1,264,FALSE,NA
testthat,073cb60cfd029a1499c6ffe6a85ddcd3,"All reporters now accept a `file` argument on initialization. If provided, reporters will write the test results to that path. This output destination can also be controlled with the option `testthat.output_file` (#635, @​nealrichardson).",1,265,FALSE,NA
testthat,f1fea9ef2c07d32d126263b02a558938,`is_null()` and `matches()` have been deprecated because they conflict with other functions in the tidyverse (#523).,1,266,FALSE,NA
testthat,298f01705f23086eb3481926411d8692,Updated Catch to 1.9.6. `testthat` now understands and makes use of the package routine registration mechanism required by CRAN with R \>= 3.4.0. (1),1,267,FALSE,NA
testthat,80d26ea40b4d5781f4c8ee1057b6e4b1,"Better reporting for deeply nested failures, limiting the stack trace to the first and last 10 entries (#474).",1,268,FALSE,NA
testthat,0f661b0a72922bbe7826c285ac326b75,"Bare expectations notify the reporter once again. This is achieved by running all tests inside `test_code()` by default (#427, #498). This behaviour can be overridden by setting `wrap = FALSE` in `test_dir()` and friends (#586).",1,269,FALSE,NA
testthat,1aa696b6f74c92a5a91ff5959a3b5da3,"`auto_test()` and `auto_test_package()` provide `hash` parameter to enable switching to faster, time-stamp-based modification detection (#598, @​katrinleinweber). `auto_test_package()` works correctly on windows (#465).",1,270,FALSE,NA
testthat,9894ab8ef3d630c144d1dfcb79865134,`capture_output_lines()` is now exported (#504).,1,271,FALSE,NA
testthat,1962d152d4333140e5fd1c68e564081a,"`compare.character()` works correctly for vectors of length \> 5 (#513, @​brodieG)",1,272,FALSE,NA
testthat,f05ddedcb765547647ead89a0dcfa5c9,`compare.default()` gains a `max_diffs` argument and defaults to printing out only the first 9 differences (#538).,1,273,FALSE,NA
testthat,b5baca7f91f46b76c20ecb45d26707c0,`compare.numeric()` respects `check.attributes()` so `expect_equivalent()` correctly ignores attributes of numeric vectors (#485).,1,274,FALSE,NA
testthat,3ae03bf9a9fc3e4bf348a589e22008fb,"Output expectations (`expect_output()`, `expect_message()`, `expect_warning()`, and `expect_silent()`) all invisibly return the first argument to be consistent with the other expectations (#615).",1,275,FALSE,NA
testthat,c76b0ca60a971c0d64127a45e9e8bea3,"`expect_length()` works with any object that has a `length` method, not just vectors (#564, @​nealrichardson)",1,276,FALSE,NA
testthat,0ffd5777d43cb5ccd1f0ba597b24ec76,"`expect_match()` now accepts explicit `perl` and `fixed` arguments, and adapts the failure message to the value of `fixed`. This also affects other expectations that forward to `expect_match()`, like `expect_output()`, `expect_message()`, `expect_warning()`, and `expect_error()`.",1,277,FALSE,NA
testthat,c4e472d5af9e4a10ce2f442d44951a29,"`expect_match()` escapes special regular expression characters when printing (#522, @​jimhester).",1,278,FALSE,NA
testthat,50bfca2364219e2b2045125c02c12d6e,"`expect_message()`, `expect_warning()` and `expect_error()` produce clearer failure messages.",1,279,FALSE,NA
testthat,92b63e8f2ee1073de565725be106733a,"`find_test_scripts()` only looks for `\.[rR]` in the extension (#492, @​brodieG)",1,280,FALSE,NA
testthat,fef16b3c25a986373144278c723bfb47,"`test_dir()`, `test_package()`, `test_check()` unset the `R_TESTS` env var (#603)",1,281,FALSE,NA
testthat,abfe1d5d5ada04b294a51cb7533bd7cb,"`test_examples()` now works with installed packages as well as source packages (@​jimhester, #532).",1,282,FALSE,NA
testthat,7bc94a7b6963e111b3d60d9a5e0065a7,"`test_dir()`, `test_package()`, and `test_check()` gain `stop_on_failure` and `stop_on_waring` arguments that control whether or not an error is signalled if any tests fail or generate warnings (#609, #619).",1,283,FALSE,NA
testthat,bcfb40836323ae3fa2da3cc970839bf6,`test_file()` now triggers a `gc()` after tests are run. This helps to ensure that finalisers are run earlier (#535).,1,284,FALSE,NA
testthat,60edc396e923ca71972efc31f943f832,`test_path()` now generates correct path when called from within `tools::testInstalledPackage()` (#542).,1,285,FALSE,NA
testthat,71e8dd6b400d58365d6f5a79242a5ab6,`test_path()` no longer assumes that the path exists (#448).,1,286,FALSE,NA
testthat,c5a132d263a86f062abb888442c11cb9,`test_that()` calls without any expectations generate a default `skip()` (#413).,1,287,FALSE,NA
testthat,3f34d0fe798c478fb58d5310280573a1,`test_dir()` gains `load_helpers` argument (#505).,1,288,FALSE,NA
testthat,4d3e68c679cb872056ebde307529bd4d,`show_failures()` simply prints a failure if it occurs. This makes it easier to show failures in examples.,1,289,FALSE,NA
testthat,998b04d5a2cd8d80463bd2bf039bd591,"`with_mock()` disallows mocking of functions in base packages, because this doesn't work with the current development version of R (#553).",1,290,FALSE,NA
testthat,d5a2f38fad78ddb5dfab41b310ec1deb,"Ensure `std::logic_error()` constructed with `std::string()` argument, to avoid build errors on Solaris.",1,291,FALSE,NA
testthat,fe1e032f23eead0ecee4810446d1d393,"New `expect_output_file()` to compare output of a function with a text file, and optionally update it (#443, @​krlmlr).",1,292,FALSE,NA
testthat,1dd292b4d398aecb6be9f72af801342a,"Properly scoped use + compilation of C++ unit testing code using Catch to `gcc` and `clang` only, as Catch includes code that does not strictly conform to the C++98 standard. (2)",1,293,FALSE,NA
testthat,1248078fea0ba5d598ddd3d2060501a6,Fixed an out-of-bounds memory access when routing Catch output through `Rprintf()`. (2),1,294,FALSE,NA
testthat,06670cd38fd6d433f6012db95a6648f3,Ensure that unit tests run on R-oldrel (remove use of `dir.exists()`). (2),1,295,FALSE,NA
testthat,d51df53c5dd756ff0c9928749eeb0f58,"Improved overriding of calls to `exit()` within Catch, to ensure compatibility with GCC 6.0. (@​krlmlr)",1,296,FALSE,NA
testthat,609546a0d51f3de16209f536405fe6e1,"Hardened formatting of difference messages, previously the presence of `%` characters could affect the output (#446, @​krlmlr).",1,297,FALSE,NA
testthat,cc7082f773c9fdf3218e8cf9302cfef1,"Fixed errors in `expect_equal()` when comparing numeric vectors with and without attributes (#453, @​krlmlr).",1,298,FALSE,NA
testthat,c77bd20775e8ad288241a9e642723864,"`auto_test()` and `auto_test_package()` show only the results of the current test run and not of previously failed runs (#456, @​krlmlr).",1,299,FALSE,NA
testthat,1507b95209176c23a464841d4a635106,"`expect_type()` checks the *type* of the object (#316), `expect_s3_class()` tests that an object is S3 with given class, `expect_s4_class()` tests that an object is S4 with given class (#373). I recommend using these more specific expectations instead of the more general `expect_is()`.",1,301,FALSE,NA
testthat,21f8ac446462144e1b81db7efc7817f5,`expect_length()` checks that an object has expected length.,1,302,FALSE,NA
testthat,fa0c882cb5a8f01e975cb21189275d90,`expect_success()` and `expect_failure()` are new expectations designed specifically for testing other expectations (#368).,1,303,FALSE,NA
testthat,cf5dc6367ecef4b0e1e947230d6a1aa6,`expect_more_than()` and `expect_less_than()` have been deprecated. Please use `expect_gt()` and `expect_lt()` instead.,1,304,FALSE,NA
testthat,7753cc4c32e433ba67f69080d5012249,`takes_less_than()` has been deprecated.,1,305,FALSE,NA
testthat,77816bae1a0b0cef8372213dab2b8e23,"`not()` has been deprecated. Please use the explicit individual forms `expect_error(..., NA)` , `expect_warning(.., NA)` and so on.",1,306,FALSE,NA
testthat,35c1f1a65ab9db0415c56a03fbd7ad14,Reporters classes are now R6 classes instead of Reference Classes.,1,307,FALSE,NA
testthat,d65f7b5ae27a0457392bd5b3a5289d74,Each callbacks receive the full context:,1,308,FALSE,NA
testthat,d65f7b5ae27a0457392bd5b3a5289d74,• `add_results()` is passed context and test as well as the expectation.,2,309,FALSE,Each callbacks receive the full context:
testthat,d65f7b5ae27a0457392bd5b3a5289d74,• `test_start()` and `test_end()` both get the context and test.,2,310,FALSE,Each callbacks receive the full context:
testthat,d65f7b5ae27a0457392bd5b3a5289d74,• `context_start()` and `context_end()` get the context.,2,311,FALSE,Each callbacks receive the full context:
testthat,3aad05e4d651e613eaaf06d9950c8a09,Warnings are now captured and reported in most reporters.,1,312,FALSE,NA
testthat,a4fedca7d0e64a8e91d45457d3a9ccfd,"The reporter output goes to the original standard output and is not affected by `sink()` and `expect_output()` (#420, @​krlmlr).",1,313,FALSE,NA
testthat,ce9575d94194bf86f779174efc39a20c,"The default summary reporter lists all warnings (#310), and all skipped tests (@​krlmlr, #343). New option `testthat.summary.max_reports` limits the number of reports printed by the summary reporter. The default is 15 (@​krlmlr, #354).",1,314,FALSE,NA
testthat,c20f3268d6b6a5836115422b32a11532,`MinimalReporter` correct labels errors with E and failures with F (#311).,1,315,FALSE,NA
testthat,ecbfc958c154091e2134959229f2c2e7,"New `FailReporter` to stop in case of failures or errors after all tests (#308, @​krlmlr).",1,316,FALSE,NA
testthat,e41d1ea6711a23a0a8a334270d6fb98a,"New functions `capture_output()`, `capture_message()`, and `capture_warnings()` selectively capture function output. These are used in `expect_output()`, `expect_message()` and `expect_warning()` to allow other types out output to percolate up (#410).",1,317,FALSE,NA
testthat,f7d9fc85fb9f0887017d40a1deec0a8d,`try_again()` allows you to retry code multiple times until it succeeds (#240).,1,318,FALSE,NA
testthat,6a4018046c07c9fd9391b5a0b21c333a,"`test_file()`, `test_check()`, and `test_package()` now attach testthat so all testing functions are available.",1,319,FALSE,NA
testthat,ea4101cf88c221dfd44ac80915bdbd1b,`source_test_helpers()` gets a useful default path: the testthat tests directory. It defaults to the `test_env()` to be consistent with the other source functions (#415).,1,320,FALSE,NA
testthat,adb4d6e3d6e1f26f016ea4daa464ef94,`test_file()` now loads helpers in the test directory before running the tests (#350).,1,321,FALSE,NA
testthat,4fe03c9800c0b485c07e052fdbcac4aa,`test_path()` makes it possible to create paths to files in `tests/testthat` that work interactively and when called from tests (#345).,1,322,FALSE,NA
testthat,54b26a2461905cb347e425113285024a,Add `skip_if_not()` helper.,1,323,FALSE,NA
testthat,c4688ea8133700726162940d8f7e3b2d,Add `skip_on_bioc()` helper (@​thomasp85).,1,324,FALSE,NA
testthat,97bd337c1c718eedf39675c2cdb190ab,`make_expectation()` uses `expect_equal()`.,1,325,FALSE,NA
testthat,508a942a41e850737a133f53ed5e6056,"`setup_test_dir()` has been removed. If you used it previously, instead use `source_test_helpers()` and `find_test_scripts()`.",1,326,FALSE,NA
testthat,50cd41d90c4cac4279683aa215a4501c,`source_file()` exports the function testthat uses to load files from disk.,1,327,FALSE,NA
testthat,f18c9127fa238f03d34e82920a56b5a4,"`test_that()` returns a `logical` that indicates if all tests were successful (#360, @​krlmlr).",1,328,FALSE,NA
testthat,80f6a69fe9c2cb7b4fc8c4d465b45142,"`find_reporter()` (and also all high-level testing functions) support a vector of reporters. For more than one reporter, a `MultiReporter` is created (#307, @​krlmlr).",1,329,FALSE,NA
testthat,e5224a0722132d84ebb52a4b4f76eddc,"`with_reporter()` is used internally and gains new argument `start_end_reporter = TRUE` (@​krlmlr, 355).",1,330,FALSE,NA
testthat,a30f553236c54a820115904a3a66bcb4,"`set_reporter()` returns old reporter invisibly (#358, @​krlmlr).",1,331,FALSE,NA
testthat,d1e851a0ab8f9fef3f8e3b2dc2bca2ef,"Comparing integers to non-numbers doesn't raise errors anymore, and falls back to string comparison if objects have different lengths. Complex numbers are compared using the same routine (#309, @​krlmlr).",1,332,FALSE,NA
testthat,f0f5f5b6ca9bb7d081177b37279657d9,"`compare.numeric()` and `compare.character()` received another overhaul. This should improve behaviour of edge cases, and provides a strong foundation for further work. Added `compare.POSIXt()` for better reporting of datetime differences.",1,333,FALSE,NA
testthat,f8a8b6a54acbe849631ab2be41944cd6,"`expect_identical()` and `is_identical_to()` now use `compare()` for more detailed output of differences (#319, @​krlmlr).",1,334,FALSE,NA
testthat,d48acf66e6f59b56f430f0c219681446,Added Catch v1.2.1 for unit testing of C++ code. See `?use_catch()` for more details. (2),1,335,FALSE,NA
testthat,1d9dabb342a2fc12be44f5f2e7e4ca9c,Handle skipped tests in the TAP reporter (#262).,1,336,FALSE,NA
testthat,0efe67eecccfb745ff0ab58d46e53c43,"New `expect_silent()` ensures that code produces no output, messages, or warnings (#261).",1,337,FALSE,NA
testthat,7421a4ef42d8dcff898502f2da8b5b4d,"New `expect_lt()`, `expect_lte()`, `expect_gt()` and `expect_gte()` for comparison with or without equality (#305, @​krlmlr).",1,338,FALSE,NA
testthat,f3f94128a8a1eaf552a611cc95712a68,"`expect_output()`, `expect_message()`, `expect_warning()`, and `expect_error()` now accept `NA` as the second argument to indicate that output, messages, warnings, and errors should be absent (#219).",1,339,FALSE,NA
testthat,712a63c3439a08c405382b3a146048b2,"Praise gets more diverse thanks to the praise package, and you'll now get random encouragement if your tests don't pass.",1,340,FALSE,NA
testthat,710406f4ae7707976cb6dfbd9397c409,"testthat no longer muffles warning messages. If you don't want to see them in your output, you need to explicitly quiet them, or use an expectation that captures them (e.g. `expect_warning()`). (#254)",1,341,FALSE,NA
testthat,bb9d17c69a0fafb3cc7ac1d8b8ec5ec8,Use tests in `inst/tests` is formally deprecated. Please move them into `tests/testthat` instead (#231).,1,342,FALSE,NA
testthat,1e2cb67e6068f4ffc735cc8d6f76db86,"`expect_match()` now encodes the match, as well as the output, in the expectation message (#232).",1,343,FALSE,NA
testthat,8eb228b54c2cdbd101485b96dab1ced6,"`expect_is()` gives better failure message when testing multiple inheritance, e.g. `expect_is(1:10, c(""glm"", ""lm""))` (#293).",1,344,FALSE,NA
testthat,2d4604bf3147ed384d3338836dd89764,Corrected argument order in `compare.numeric()` (#294).,1,345,FALSE,NA
testthat,1461b62756b504b3575999a80c203bc8,"`comparison()` constructure now checks its arguments are the correct type and length. This bugs a bug where tests failed with an error like ""values must be length 1, but FUN(X\[\[1\]\]) result is length 2"" (#279).",1,346,FALSE,NA
testthat,772ba7d5e6ce6e6feabf7f11426e1b79,"Added `skip_on_os()`, to skip tests on specified operating systems (2).",1,347,FALSE,NA
testthat,4cf67c2c479b2ac317c0e5fe956bee47,"Skip test that depends on `devtools` if it is not installed (#247, @​krlmlr)",1,348,FALSE,NA
testthat,e2d011c27ebda0f440ee849786e41eee,Added `skip_on_appveyor()` to skip tests on Appveyor (@​lmullen).,1,349,FALSE,NA
testthat,fad1f664e83f7dbb8aea91ac60cd4aea,"`compare()` shows detailed output of differences for character vectors of different length (#274, @​krlmlr).",1,350,FALSE,NA
testthat,0ab27cdaf5912041662c4749e0031aca,"Detailed output from `expect_equal()` doesn't confuse expected and actual values anymore (#274, @​krlmlr).",1,351,FALSE,NA
testthat,87eb33d20feebe3da741bcf36559b4d8,Failure locations are now formatted as R error locations.,1,352,FALSE,NA
testthat,4dc6a8a6eaa353994d263ccd2bda4d99,"Add an 'invert' argument to `find_tests_scripts()`. This allows one to select only tests which do *not* match a pattern. (#239, @​jimhester).",1,353,FALSE,NA
testthat,01f6489b7ffbf7b88b156b4f2417267d,Deprecated `library_if_available()` has been removed.,1,354,FALSE,NA
testthat,f433bc376733f370880c2e96ae310be7,"test (`test_dir()`, `test_file()`, `test_package()`, `test_check()`) functions now return a `testthat_results` object that contains all results, and can be printed or converted to data frame.",1,355,FALSE,NA
testthat,49fdde11fc8c42dd7b9fc7d0f8dd7c81,"`test_dir()`, `test_package()`, and `test_check()` have an added `...` argument that allows filtering of test files using, e.g., Perl-style regular expressions,or `fixed` character filtering. Arguments in `...` are passed to `grepl()` (@​leeper).",1,356,FALSE,NA
testthat,f724992c2fc0b7b1b825579b42abb803,"`test_check()` uses a new reporter specifically designed for `R CMD check`. It displays a summary at the end of the tests, designed to be \<13 lines long so test failures in `R CMD check` display something more useful. This will hopefully stop BDR from calling testthat a ""test obfuscation suite"" (#201).",1,357,FALSE,NA
testthat,f8c6a6363ed06326602c5e636e4851f9,`compare()` is now documented and exported. Added a numeric method so when long numeric vectors don't match you'll see some examples of where the problem is (#177). The line spacing in `compare.character()` was tweaked.,1,358,FALSE,NA
testthat,9a60eb5c36f6f453fffb5cd90cadc002,`skip_if_not_installed()` skips tests if a package isn't installed (#192).,1,359,FALSE,NA
testthat,c486bd69a6c53920bb6d30bec8b35f06,"`expect_that(a, equals(b))` style of testing has been soft-deprecated. It will keep working, but it's no longer demonstrated any where, and new expectations will only be available in `expect_equal(a, b)` style. (#172)",1,360,FALSE,NA
testthat,743adcf7c205848fe0cf2c90408d94cf,"Once again, testthat suppresses messages and warnings in tests (#189)",1,361,FALSE,NA
testthat,68495bf1f35ca6d302d17f6628762ccf,New `test_examples()` lets you run package examples as tests. Each example counts as one expectation and it succeeds if the code runs without errors (#204).,1,362,FALSE,NA
testthat,16589af6a07e6c199e0369657f4ae5d0,New `succeed()` expectation always succeeds.,1,363,FALSE,NA
testthat,1daae83af094f710365d84b5d90e2ed1,`skip_on_travis()` allows you to skip tests when run on Travis CI. (Thanks to @​mllg),1,364,FALSE,NA
testthat,8bf298ccf17337d33bdcc9b7fb7a1c45,"`colourise()` was removed. (Colour is still supported, via the `crayon` package.)",1,365,FALSE,NA
testthat,69a3b804d248f3b516be8a04258cb6e2,"Mocks can now access values local to the call of `with_mock` (#193, @​krlmlr).",1,366,FALSE,NA
testthat,2d9dfe675440f4bef101d057de448bd0,All equality expectations are now documented together (#173); all matching expectations are also documented together.,1,367,FALSE,NA
testthat,c0b256632bd932a643068fa46f1ced3a,Bump R version dependency,1,368,FALSE,NA
testthat,91666af82742a0605db846315656ed6d,"BDD: testhat now comes with an initial behaviour driven development (BDD) interface. The language is similar to RSpec for Ruby or Mocha for JavaScript. BDD tests read like sentences, so they should make it easier to understand the specification of a function. See `?describe()` for further information and examples.",1,369,FALSE,NA
testthat,a890e428698bbee1319ba6be5472e718,"It's now possible to `skip()` a test with an informative message - this is useful when tests are only available under certain conditions, as when not on CRAN, or when an internet connection is available (#141).",1,370,FALSE,NA
testthat,66886d4f8529ed680987b77078319637,"`skip_on_cran()` allows you to skip tests when run on CRAN. To take advantage of this code, you'll need either to use devtools, or run `Sys.setenv(NOT_CRAN = ""true""))`",1,371,FALSE,NA
testthat,d8367f5e8981f3dfbf034eda127b9549,"Simple mocking: `with_mock()` makes it easy to temporarily replace functions defined in packages. This is useful for testing code that relies on functions that are slow, have unintended side effects or access resources that may not be available when testing (#159, @​krlmlr).",1,372,FALSE,NA
testthat,907e03b5009a9ee3618faba03166da6b,"A new expectation, `expect_equal_to_reference()` has been added. It tests for equality to a reference value stored in a file (#148, @​jonclayden).",1,373,FALSE,NA
testthat,6f779910f11db3e3efb7d17377a3fce7,"`auto_test_package()` works once more, and now uses `devtools::load_all()` for higher fidelity loading (#138, #151).",1,374,FALSE,NA
testthat,29cf16ac335ab82dd1f3c1f43ab1e292,"Bug in `compare.character()` fixed, as reported by Georgi Boshnakov.",1,375,FALSE,NA
testthat,02d93639c59206ae903c63fc0c65635c,"`colourise()` now uses option `testthat.use_colours` (default: `TRUE`). If it is `FALSE`, output is not colourised (#153, @​mbojan).",1,376,FALSE,NA
testthat,e873b058ee79bb8e1454a5aab31f27d0,`is_identical_to()` only calls `all.equal()` to generate an informative error message if the two objects are not identical (#165).,1,377,FALSE,NA
testthat,3c1c42684ec4726ac7845067d6bc6883,"`safe_digest()` uses a better strategy, and returns NA for directories (#138, #146).",1,378,FALSE,NA
testthat,bb6ff7d8796edc0518914734d94ab586,Random praise is renabled by default (again!) (#164).,1,379,FALSE,NA
testthat,f8779c652697bab2b21946e6d86a62cd,"Teamcity reporter now correctly escapes output messages (#150, @​windelinckx). It also uses nested suites to include test names.",1,380,FALSE,NA
testthat,29ce7ed63a2765712da6552032f27d4a,`library_if_available()` has been deprecated.,1,381,FALSE,NA
testthat,84fe7eb6ba5da55afb0b3c95912ac093,Better default environment for `test_check()` and `test_package()` which allows S4 class creation in tests,1,382,FALSE,NA
testthat,86ce3fa4ab4ceb9f613b54e15cd81e17,`compare.character()` no longer fails when one value is missing.,1,383,FALSE,NA
testthat,e536fe1926ed13345e3298e1a10a2e3c,"`MultiReporter`, which combines several reporters into one. (Thanks to @​kforner)",1,384,FALSE,NA
testthat,4f6ab1ceea231f503618e795c8054ed0,"`ListReporter`, which captures all test results with their file, context, test and elapsed time. `test_dir`, `test_file`, `test_package` and `test_check` now use the `ListReporter` to invisibly return a summary of the tests as a data frame. (Thanks to @​kforner)",1,385,FALSE,NA
testthat,15f7ca4f356acf73ef58b21b75666178,`TeamCityReporter` to produce output compatible with the TeamCity continuous integration environment. (Thanks to @​windelinckx),1,386,FALSE,NA
testthat,2803f3f69503c67e92b11a5eeb9e428c,"`SilentReporter` so that `testthat` can test calls to `test_that`. (Thanks to @​craigcitro, #83)",1,387,FALSE,NA
testthat,36b5ee7c2bdbd80dda6c5917975ef00c,`expect_null()` and `is_null` to check if an object is NULL (#78),1,388,FALSE,NA
testthat,8105871a16aa43a8b7b2db3164b1c497,`expect_named()` and `has_names()` to check the names of a vector (#79),1,389,FALSE,NA
testthat,88efba9a3ba5bbd76e836c4b655031b7,"`expect_more_than()`, `is_more_than()`, `expect_less_than()`, `is_less_than()` to check values above or below a threshold. (#77, thanks to @​jknowles)",1,390,FALSE,NA
testthat,c6b4452d2da0ffb58f82311a9ed73a8f,"`expect_that()` (and thus all `expect_*` functions) now invisibly return the expectation result, and stops if info or label arguments have length \> 1 (thanks to @​kforner)",1,391,FALSE,NA
testthat,c4daf280916685d568bab0ebde7440c2,"fixed two bugs with source_dir(): it did not look for the source scripts at the right place, and it did not use its `chdir` argument.",1,392,FALSE,NA
testthat,1b7453fb7c2949acd4c613fc23e9f599,"When using `expect_equal()` to compare strings, the default output for failure provides a lot more information, which should hopefully help make finding string mismatches easier.",1,393,FALSE,NA
testthat,ba4a856a02974c0ec9b3fea968d0f027,`SummaryReporter` has a `max_reports` option to limit the number of detailed failure reports to show. (Thanks to @​crowding),1,394,FALSE,NA
testthat,f5dd2eac031cf358ce166717575c231e,Tracebacks will now also contain information about where the functions came from (where that information is available).,1,395,FALSE,NA
testthat,9dcc1835c5b85212005b65174b0fd29c,"`matches` and `expect_match` now pass additional arguments on to `grepl` so that you can use `fixed = TRUE`, `perl = TRUE` or `ignore.case = TRUE` to control details of the match. `expect_match` now correctly fails to match NULL. (#100)",1,396,FALSE,NA
testthat,fb80af30d64b5270cc476101566a9eba,"`expect_output`, `expect_message`, `expect_warning` and `expect_error` also pass ... on to `grepl`, so that you can use `fixed = TRUE`, `perl = TRUE` or `ignore.case = TRUE`",1,397,FALSE,NA
testthat,4fdd1d2a7cbc7436cf5659976e01128f,Removed `stringr` and `evaluate` dependencies.,1,398,FALSE,NA
testthat,5ff44087a537ce8808d59625a0e42598,"The `not()` function makes it possible to negate tests. For example, `expect_that(f(), not(throws_error()))` asserts that `f()` does not throw an error.",1,399,FALSE,NA
testthat,6495f3a69f4a248d29cd177f94d8d6f1,"Make `dir_state` less race-y. (Thanks to @​craigcitro, #80)",1,400,FALSE,NA
testthat,028821a897b98d876a49bd27e9ebbf85,"`auto_test` now pays attention to its 'reporter' argument (Thanks to @​crowding, #81)",1,401,FALSE,NA
testthat,bee35df0be8caa7cedad31e9349012cc,"`get_reporter()`, `set_reporter()` and `with_reporter()` are now exported (#102)",1,402,FALSE,NA
testthat,e870cb2b816159bec4da03cba07d6805,Ignore attributes in `is_true` and `is_false` (#49),1,403,FALSE,NA
testthat,f1259bc695d329c68fd7228eee1e17ff,`make_expectation` works for more types of input (#52),1,404,FALSE,NA
testthat,2ed807fb9b90118e46fcf0d94e27d337,Now works better with evaluate 0.4.3.,1,405,FALSE,NA
testthat,5f856127aaa7a81589bd91cfb835ef5f,new `fail()` function always forces a failure in a test. Suggested by Richie Cotton (#47),1,406,FALSE,NA
testthat,3bc9754c6dd3b0ec26a17d5840f1fe3e,"Added `TapReporter` to produce output compatible with the ""test anything protocol"". Contributed by Dan Keshet.",1,407,FALSE,NA
testthat,77c97fa7790da680de94d343337d6099,Fixed where `auto_test` would identify the wrong files as having changed. (Thanks to Peter Meilstrup),1,408,FALSE,NA
testthat,686733614b3f89a7e043c41aa42729d7,`SummaryReporter`: still return informative messages even if no tests defined (just bare expectations). (Fixes #31),1,409,FALSE,NA
testthat,fd5d5bdcfbf6d6d72c94c1be9fa3afe5,Improvements to reference classes (Thanks to John Chambers),1,410,FALSE,NA
testthat,ded2fe75c04b530c00b439c86f3a5778,Bug fixes for when nothing was generated in `gives_warning` / `shows_message`. (Thanks to Bernd Bischl),1,411,FALSE,NA
testthat,fe0d37f7c0f2676c6fbd69c4bb83901e,New `make_expectation` function to programmatically generate an equality expectation. (Fixes #24),1,412,FALSE,NA
testthat,3a504bdc2b322174b678206b81ab6432,`SummaryReporter`: You don't get praise until you have some tests.,1,413,FALSE,NA
testthat,89c241f28f858af7c7e3ae828c2b0f4c,Depend on `methods` rather than requiring it so that testthat works when run from `Rscript`,1,414,FALSE,NA
testthat,5a6d19c7014e46d72dae47d3846b7126,"`auto_test` now normalises paths to enable better identification of file changes, and fixes bug in instantiating new reporter object.",1,415,FALSE,NA
testthat,568c43211e1ee2dc08928762ed524b66,All `mutatr` classes have been replaced with ReferenceClasses.,1,416,FALSE,NA
testthat,6a24369f938fa4bb390d9cdb8be61947,Better documentation for short-hand expectations.,1,417,FALSE,NA
testthat,945fd333e7c17ac28cc19f620a27a108,`test_dir` and `test_package` gain new `filter` argument which allows you to restrict which tests are run.,1,418,FALSE,NA
testthat,56c1c77024f1acb2deed0a044211c929,bare expectations now correctly throw errors again,1,419,FALSE,NA
testthat,48166f5c8db054443dce0fc40c2fbb2c,autotest correctly loads code and executes tests in same environment,1,420,FALSE,NA
testthat,930b2d2fe5dffc07f9dc6383a5278a7f,"contexts are never closed before they are opened, and always closed at the end of file",1,421,FALSE,NA
testthat,8aa8798b25520f0852837c8c67f41f84,fixed small bug in `test_dir` where each test was not given its own environment,1,422,FALSE,NA
testthat,592e95fc6d6b53255f5f4f03f43ac8e5,"all `expect_*` short cut functions gain a label argument, thanks to Steve Lianoglou",1,423,FALSE,NA
testthat,b615d684fcf9426f3dd6f8c45f080877,"all expectations now have a shortcut form, so instead of expect_that(a, is_identical_to(b)) you can do expect_identical(a, b)",1,424,FALSE,NA
testthat,6207d8d5e14040f908f8c67f534aa209,new shows_message and gives_warning expectations to test warnings and messages,1,425,FALSE,NA
testthat,eb1daad41a4d06b46c413c4d0cf407df,"expect_that, equals, is_identical_to and is_equivalent to now have additional label argument which allows you to control the appearance of the text used for the expected object (for expect_that) and actual object (for all other functions) in failure messages. This is useful when you have loops that run tests as otherwise all the variable names are identical, and it's difficult to tell which iteration caused the failure.",1,426,FALSE,NA
testthat,9d1926c9ac9eec38469fde3ee32fc2aa,executing bare tests gives nicer output,1,427,FALSE,NA
testthat,e8a790a8618e6fab9a04291a74fad442,all expectations now give more information on failure to make it easier to track down the problem.,1,428,FALSE,NA
testthat,cc6f24d046556177a82e96882e606e9d,test_file and test_dir now run in code in separate environment to avoid pollution of global environment. They also temporary change the working directory so tests can use relative paths.,1,429,FALSE,NA
testthat,a3123f7ba0ca9bbbd3aa8d7c1c3516b8,"test_package makes it easier to run all tests in an installed package. Code run in this manner has access to non-exported functions and objects. If any errors or failures occur, test_package will throw an error, making it suitable for use with R CMD check.",1,430,FALSE,NA
testthat,9328f9fe9a83f0f149e6644cb389a493,colourise also works in screen terminal,1,431,FALSE,NA
testthat,a23e32a0365e91540b33ead5c3a68a4e,equals expectation provides more information about failure,1,432,FALSE,NA
testthat,92b3605e40aed22cba69660707ff87c2,expect_that has extra info argument to allow you to pass in any extra information you'd like included in the message - this is very helpful if you're using a loop to run tests,1,433,FALSE,NA
testthat,3b167b5716a08a0263ed4643cd330f60,is_equivalent_to: new expectation that tests for equality ignoring attributes,1,434,FALSE,NA
testthat,c5c191c747e19f49ff728332cfa8ef1f,library_if_available now works! (thanks to report and fix from Felix Andrews),1,435,FALSE,NA
testthat,01c3bd491eb4ca2a546edebdedea1786,specify larger width and join pieces back together whenever deparse used (thanks to report and fix from Felix Andrews),1,436,FALSE,NA
testthat,f1c0f59a961c83fbc5371320b7a074b6,test_dir now looks for any files starting with test (not test- as before),1,437,FALSE,NA
tidyselect,b6635ced7007d21d0ec8fc28f07c1fcf,"`eval_select()` out-of-bounds errors now use the verb ""select"" rather than ""subset"" in the error message for consistency with `dplyr::select()` (#271).",1,1,FALSE,NA
tidyselect,faf70988f16e4ae2332ea333230c0ac6,New `tidyselect_data_proxy()` and `tidyselect_data_has_predicates()` allows tidyselect to work with custom input types (#242).,1,2,FALSE,NA
tidyselect,7ef4faa4d9781cfb6ca6cb8f6ff8956f,New `eval_relocate()` for moving a selection. This powers `dplyr::relocate()` (#232).,1,3,FALSE,NA
tidyselect,3aaddfa0fee199a7bdd573a493cdc0e5,Using `all_of()` outside of a tidyselect context is now deprecated (#269). In the future it will error to be consistent with `any_of()`.,1,4,FALSE,NA
tidyselect,b7c1935b4fd5c64e36bbc3249c0386c8,"Use of `.data` in tidyselect expressions is now deprecated to more cleanly separate tidy-select from data-masking. Replace `.data$x` with `""x""` and `.data[[var]]` with `all_of(var)` (#169).",1,5,FALSE,NA
tidyselect,9af3d42950a80b17ca405233a385c475,Use of bare predicates (not wrapped in `where()`) and indirection (without using `all_of()`) have been formally deprecated (#317).,1,6,FALSE,NA
tidyselect,ceee4666f79f958f041cac23990f2535,Selection language:,1,7,FALSE,NA
tidyselect,ceee4666f79f958f041cac23990f2535,• `any_of()` generates a more informative error if you supply too many arguments (#241).,2,8,FALSE,Selection language:
tidyselect,ceee4666f79f958f041cac23990f2535,"• `all_of()` (like `any_of()`) returns an integer vector to make it easier to combine in functions (#270, #294). It also fails when it can't find variables even when `strict = FALSE`.",2,9,FALSE,Selection language:
tidyselect,ceee4666f79f958f041cac23990f2535,"• `matches()` recognises and correctly uses stringr pattern objects (`stringr::regex()`, `stringr::fixed()`, etc) (#238). It also now works with named vectors (#250).",2,10,FALSE,Selection language:
tidyselect,ceee4666f79f958f041cac23990f2535,• `num_range()` gains a `suffix` argument (#229).,2,11,FALSE,Selection language:
tidyselect,ceee4666f79f958f041cac23990f2535,"• `where()` is now exported, like all other select helpers (#201), and gives more informative errors (#236).",2,12,FALSE,Selection language:
tidyselect,4d55b809e3e88c6537bfa6afb7f51fb6,`eval_select()` with `include` now preserves the order of the variables if they're present in the selection (#224).,1,13,FALSE,NA
tidyselect,8c903817eb1c358268505291ab26e441,"`eval_select()` always returns a named vector, even when renaming is not permitted (#220).",1,14,FALSE,NA
tidyselect,f50e51c80972448ec6965034ff0f71c4,`eval_select()` and `eval_relocate()` gain new `allow_empty` argument which makes it possible to forbid empty selections with `allow_empty = FALSE` (#252).,1,15,FALSE,NA
tidyselect,327eaa0f59aa1b78c5a54d3dc530be61,"`eval_select(allow_rename = FALSE)` no longer fails with empty selections (#221, @​eutwt) or with predicate functions (#225). It now properly fails with partial renaming (#305).",1,16,FALSE,NA
tidyselect,d748cb970edb5378f5acbfb38ff0036f,`peek_var()` error now generates hyperlink to docs with recent RStudio (#289).,1,17,FALSE,NA
tidyselect,42607a2efe27e81519ab1fb21330c6fa,"`vars_pull()` generates more informative error messages (#234, #258, #318) and gains `error_call` and `error_arg` arguments.",1,18,FALSE,NA
tidyselect,e7beec5cc1ac3c8473c088d0697431b7,"Errors produced by tidyselect should now be more informative. Evaluation errors are now chained, with the child error call is set to the `error_call` argument of `eval_select()` and `eval_rename()`. We've also improved backtraces of base errors, and done better at propagating the root `error_call` to vctrs input checkers.",1,19,FALSE,NA
tidyselect,c4f2ea8365c3eaa8b59751368d52a2e5,`tidyselect_verbosity` is no longer used; deprecation messaging is now controlled by `lifecycle_verbosity` like all other packages (#317).,1,20,FALSE,NA
tidyselect,88a56f4af2f36f1dfe25a4d19da187fb,Fix for CRAN checks.,1,21,FALSE,NA
tidyselect,af002b2e157b518a9a0c469f4c10aed6,Better compatibility with rlang 1.0.0 errors. More to come soon.,1,22,FALSE,NA
tidyselect,4d98e8a3062adbbc66e7ce87810672be,Fix for CRAN checks.,1,23,FALSE,NA
tidyselect,7ff58253f9c504f8fed90a1030d71c04,tidyselect has been re-licensed as MIT (#217).,1,24,FALSE,NA
tidyselect,986c6f2d6acea8dfc7f7c0bab2ac4d3d,Predicate functions must now be wrapped with `where()`.,1,25,FALSE,NA
tidyselect,986c6f2d6acea8dfc7f7c0bab2ac4d3d,"```
iris %>% select(where(is.factor))
```",1,26,TRUE,NA
tidyselect,986c6f2d6acea8dfc7f7c0bab2ac4d3d,We made this change to avoid puzzling error messages when a variable is unexpectedly missing from the data frame and there is a corresponding function in the environment:,1,26,FALSE,NA
tidyselect,986c6f2d6acea8dfc7f7c0bab2ac4d3d,"```
# Attempts to invoke `data()` function
data.frame(x = 1) %>% select(data)
```",1,27,TRUE,NA
tidyselect,986c6f2d6acea8dfc7f7c0bab2ac4d3d,Now tidyselect will correctly complain about a missing variable rather than trying to invoke a function. For compatibility we will support predicate functions starting with `is` for 1 version.,1,27,FALSE,NA
tidyselect,c7922a52352ec89bf7fca28904c6120b,"`eval_select()` gains an `allow_rename` argument. If set to `FALSE`, renaming variables with the `c(foo = bar)` syntax is an error. This is useful to implement purely selective behaviour (#178).",1,28,FALSE,NA
tidyselect,4ca5ce79e6e4cc5ca08b539f3bb5f6be,"Fixed issue preventing repeated deprecation messages when `tidyselect_verbosity` is set to `""verbose""` (#184).",1,29,FALSE,NA
tidyselect,2c7c60ef2e3b6171703ccc5d5bb902fe,`any_of()` now preserves the order of the input variables (#186).,1,30,FALSE,NA
tidyselect,0a95aca4f2f8b945068c0d240ce4f237,"The return value of `eval_select()` is now always named, even when inputs are constant (#173).",1,31,FALSE,NA
tidyselect,d36e14a42a8acaa1d2d1ae63bed6c8ca,"New Get started vignette for client packages. Read it with `vignette(""tidyselect"")` or at https://tidyselect.r-lib.org/articles/tidyselect.html.",1,32,FALSE,NA
tidyselect,bb42195fc03f9d788c4c04cb984a2262,The definition of the tidyselect language has been consolidated. A technical description is now available: https://tidyselect.r-lib.org/articles/syntax.html.,1,33,FALSE,NA
tidyselect,3110400c1e8ca6c5821f77b838f01117,Selecting non-column variables with bare names now triggers an informative message suggesting to use `all_of()` instead. Referring to contextual objects with a bare name is brittle because it might be masked by a data frame column. Using `all_of()` is safe (#76).,1,34,FALSE,NA
tidyselect,72ffed4cc2f8fc0eb8f893e0f121cc72,Out-of-bounds errors are thrown when a name doesn't exist or a location is too large for the input.,1,35,FALSE,NA
tidyselect,c605308c903db12193a992f43cd5c41b,Logical vectors now fail properly.,1,36,FALSE,NA
tidyselect,4a01595f81caab7ab80e9fecf3254474,Selected variables now must be unique. It was previously possible to return duplicate selections in some circumstances.,1,37,FALSE,NA
tidyselect,21006791d697b0f854603237b9b26889,The input names can no longer contain `NA` values.,1,38,FALSE,NA
tidyselect,de128dc1b4b5c580f6e1d09e5ee37579,The boolean operators can now be used to create selections (#106).,1,39,FALSE,NA
tidyselect,de128dc1b4b5c580f6e1d09e5ee37579,• `!` negates a selection.,2,40,FALSE,The boolean operators can now be used to create selections (#106).
tidyselect,de128dc1b4b5c580f6e1d09e5ee37579,• `|` takes the union of two selections.,2,41,FALSE,The boolean operators can now be used to create selections (#106).
tidyselect,de128dc1b4b5c580f6e1d09e5ee37579,• `&` takes the intersection of two selections.,2,42,FALSE,The boolean operators can now be used to create selections (#106).
tidyselect,203313d7e7d6145a588017596e17c2c5,"These patterns can currently be achieved using `-`, `c()` and `intersect()` respectively. The boolean operators should be more intuitive to use. Many thanks to Irene Steves (@​isteves) for suggesting this UI.",1,42,FALSE,NA
tidyselect,a9df525af44c6af50c04b6cff6c38439,You can now use predicate functions in selection contexts:,1,43,FALSE,NA
tidyselect,a9df525af44c6af50c04b6cff6c38439,"```
iris %>% select(is.factor)
iris %>% select(is.factor | is.numeric)
```",1,44,TRUE,NA
tidyselect,a9df525af44c6af50c04b6cff6c38439,This feature is not available in functions that use the legacy interface of tidyselect. These need to be updated to use the new `eval_select()` function instead of `vars_select()`.,1,44,FALSE,NA
tidyselect,0d7890e015643581c761f737caa17cc4,Unary `-` inside nested `c()` is now consistently syntax for set difference (#130).,1,45,FALSE,NA
tidyselect,d05b20761009e78c7034c2e7ec28fb03,"Improved support for named elements. It is now possible to assign the same name to multiple elements, if the input data structure doesn't require unique names (i.e. anything but a data frame).",1,46,FALSE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"The selection engine has been rewritten to support a clearer separation between data-expressions (calls to `:`, `-`, and `c`) and env-expressions (anything else). This means you can now safely use expressions of the type:",1,47,FALSE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"```
data %>% select(1:ncol(data))
data %>% pivot_longer(1:ncol(data))
```",1,48,TRUE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"Even if the data frame `data` contains a column also named `data`, the subexpression `ncol(data)` is still correctly evaluated. The `data:ncol(data)` expression is equivalent to `2:3` because `data` is looked up in the relevant context without ambiguity:",1,48,FALSE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"```
data <- tibble(foo = 1, data = 2, bar = 3)
data %>% dplyr::select(data:ncol(data))
#> # A tibble: 1 x 2
#>    data   bar
#>   <dbl> <dbl>
#> 1     2     3
```",1,49,TRUE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"While this example above is a bit contrived, there are many realistic cases where these changes make it easier to write safe code:",1,49,FALSE,NA
tidyselect,50993931688ecb7c86ec8299a3b9dead,"```
select_from <- function(data, var) {
  data %>% dplyr::select({{ var }} : ncol(data))
}
data %>% select_from(data)
#> # A tibble: 1 x 2
#>    data   bar
#>   <dbl> <dbl>
#> 1     2     3
```",1,50,TRUE,NA
tidyselect,d6a105ba09e6896642ea25920c6e1f4f,"The new selection helpers `all_of()` and `any_of()` are strict variants of `one_of()`. The former always fails if some variables are unknown, while the latter does not. `all_of()` is safer to use when you expect all selected variables to exist. `any_of()` is useful in other cases, for instance to ensure variables are selected out:",1,51,FALSE,NA
tidyselect,d6a105ba09e6896642ea25920c6e1f4f,"```
vars <- c(""Species"", ""Genus"")
iris %>% dplyr::select(-any_of(vars))
```",1,52,TRUE,NA
tidyselect,d6a105ba09e6896642ea25920c6e1f4f,"Note that `all_of()` and `any_of()` are a bit more conservative in their function signature than `one_of()`: they do not accept dots. The equivalent of `one_of(""a"", ""b"")` is `all_of(c(""a"", ""b""))`.",1,52,FALSE,NA
tidyselect,dd26a4c7694b46398c07cd749168ebd1,"Selection helpers like `all_of()` and `starts_with()` are now available in all selection contexts, even when they haven't been attached to the search path. The most visible consequence of this change is that it is now easier to use selection functions without attaching the host package:",1,53,FALSE,NA
tidyselect,dd26a4c7694b46398c07cd749168ebd1,"```
# Before
dplyr::select(mtcars, dplyr::starts_with(""c""))

# After
dplyr::select(mtcars, starts_with(""c""))
```",1,54,TRUE,NA
tidyselect,dd26a4c7694b46398c07cd749168ebd1,It is still recommended to export the helpers from your package so that users can easily look up the documentation with `?`.,1,54,FALSE,NA
tidyselect,019e2c8b202f78ff881e0d0ac3e76cdc,"`starts_with()`, `ends_with()`, `contains()`, and `matches()` now accept vector inputs (#50). For instance these are now equivalent ways of selecting all variables that start with either `""a""` or `""b""`:",1,55,FALSE,NA
tidyselect,019e2c8b202f78ff881e0d0ac3e76cdc,"```
starts_with(c(""a"", ""b""))
starts_with(""a"") | starts_with(""b"")
```",1,56,TRUE,NA
tidyselect,a06866fe69000ecc62631ecee38e021e,"`matches()` has new argument `perl` to allow for Perl-like regular expressions (@​fmichonneau, #71)",1,57,FALSE,NA
tidyselect,db654d1f2edae15de77ea08f9b20a53a,"Better support for selecting with S3 vectors. For instance, factors are treated as characters.",1,58,FALSE,NA
tidyselect,8d204bd466e2a58bd71e0f07c868a33c,Take the full data rather than just names. This makes it possible to use function predicates in selection context.,1,59,FALSE,NA
tidyselect,aa0d79f0a757618e99fbf48cd09dd276,"Return a numeric vector of locations rather than a vector of names. This makes it possible to use tidyselect with inputs that support duplicate names, like regular vectors.",1,60,FALSE,NA
tidyselect,3bdcbfca878e0a9fb7480f0ccccbe314,The `.strict` argument of `vars_select()` now works more robustly and consistently.,1,61,FALSE,NA
tidyselect,31890f164f261546ed6470998ed6b87b,Using arithmetic operators in selection context now fails more informatively (#84).,1,62,FALSE,NA
tidyselect,a37d633cbc5c0950d89eb364b38e1289,"It is now possible to select columns in data frames containing duplicate variables (#94). However, the duplicates can't be part of the final selection.",1,63,FALSE,NA
tidyselect,c34bd59c50ecb3e158d1b476db1f504d,`eval_rename()` no longer ignore the names of unquoted character vectors of length 1 (#79).,1,64,FALSE,NA
tidyselect,cd6aa3aae2a7f857701c10a8cbeb43b3,`eval_rename()` now fails when a variable is renamed to an existing name (#70).,1,65,FALSE,NA
tidyselect,19b1c61cbcaa636b148faaebf6cc2f20,`eval_rename()` has better support for existing duplicates (but creating new duplicates is an error).,1,66,FALSE,NA
tidyselect,35c4fa6a70056d20b4641a1bfec529d9,"`eval_select()`, `eval_rename()` and `vars_pull()` now detect missing values uniformly (#72).",1,67,FALSE,NA
tidyselect,0a7a2e86ed06db8c659344bc0e36edd6,`vars_pull()` now includes the faulty expression in error messages.,1,68,FALSE,NA
tidyselect,5a66f4e2e846e7b3c3078f59209780b2,"The performance issues of `eval_rename()` with many arguments have been fixed. This make `dplyr::rename_all()` with many columns much faster (@​zkamvar, #92).",1,69,FALSE,NA
tidyselect,1e216aeaccf4cfd53301df935581ed81,"tidyselect is now much faster with many columns, thanks to a performance fix in `rlang::env_bind()` as well as internal fixes.",1,70,FALSE,NA
tidyselect,4972dee0a76492782fe84b3fd9e64f5c,`vars_select()` ignores vectors with only zeros (#82).,1,71,FALSE,NA
tidyselect,6a7586ecaae8615e5b6a9113ebbe17c7,Fixed a warning that occurred when a vector of column positions was supplied to `vars_select()` or functions depending on it such as `tidyr::gather()` (#43 and tidyverse/tidyr#374).,1,72,FALSE,NA
tidyselect,c3f5650158a329192145d79934eab1c1,Fixed compatibility issue with rlang 0.2.0 (#51).,1,73,FALSE,NA
tidyselect,2ac3e76471abafb713eb6e4febcc1d95,Internal fixes in prevision of using `tidyselect` within `dplyr`.,1,74,FALSE,NA
tidyselect,798c4c1da72facfe3ed3e0b0f4eb24ae,`vars_select()` and `vars_rename()` now correctly support unquoting character vectors that have names.,1,75,FALSE,NA
tidyselect,84310e0388bf675f5afcfac73a738ed9,`vars_select()` now ignores missing variables.,1,76,FALSE,NA
tidyselect,b831888e4f65b75663d58173c0cd9ae6,`dplyr` is now correctly mentioned as suggested package.,1,77,FALSE,NA
tidyselect,33175339eafd2564f1052052702eeda6,`-` now supports character vectors in addition to strings. This makes it easy to unquote column names to exclude from the set:,1,78,FALSE,NA
tidyselect,33175339eafd2564f1052052702eeda6,"```
vars <- c(""cyl"", ""am"", ""disp"", ""drat"")
vars_select(names(mtcars), - !!vars)
```",1,79,TRUE,NA
tidyselect,f6a123fe4d13125b9afd169b92024aff,`last_col()` now issues an error when the variable vector is empty.,1,80,FALSE,NA
tidyselect,3072ada08f6c1e8540dbd17b3bea66db,`last_col()` now returns column positions rather than column names for consistency with other helpers. This also makes it compatible with functions like `seq()`.,1,81,FALSE,NA
tidyselect,682143b07318f13cb4c11fea72b0b7da,`c()` now supports character vectors the same way as `-` and `seq()`. (#37 @​gergness),1,82,FALSE,NA
tidyselect,86a81e159852e8fac503e70ff121b5ac,"The new select helper `last_col()` is helpful to select over a custom range: `vars_select(vars, 3:last_col())`.",1,87,FALSE,NA
tidyselect,2b6d9346b8f10199f2d7750f0717d2ce,`:` and `-` now handle strings as well. This makes it easy to unquote a column name: `(!!name) : last_col()` or `- !!name`.,1,88,FALSE,NA
tidyselect,b94fc17a5d83db058f3786fe7ac27650,"`vars_select()` gains a `.strict` argument similar to `rename_vars()`. If set to `FALSE`, errors about unknown variables are ignored.",1,89,FALSE,NA
tidyselect,073cbb420492a6a17841ee8ae61f95d3,`vars_select()` now treats `NULL` as empty inputs. This follows a trend in the tidyverse tools.,1,90,FALSE,NA
tidyselect,cee6f2252ca4e6e7008d4ef925e16d81,`vars_rename()` now handles variable positions (integers or round doubles) just like `vars_select()` (#20).,1,91,FALSE,NA
tidyselect,95611a3b5c80525b4d7e6fdb8b289d30,"`vars_rename()` is now implemented with the tidy eval framework. Like `vars_select()`, expressions are evaluated without any user data in scope. In addition a variable context is now established so you can write rename helpers. Those should return a single round number or a string (variable position or variable name).",1,92,FALSE,NA
tidyselect,70a75f717df4fcd530a12473d39b06a5,`has_vars()` is a predicate that tests whether a variable context has been set (#21).,1,93,FALSE,NA
tidyselect,abc7f6df1363971e34a4ee5f23d92424,The selection helpers are now exported in a list `vars_select_helpers`. This is intended for APIs that embed the helpers in the evaluation environment.,1,94,FALSE,NA
tidyselect,2eb39ddf4163893f4f562bdbece03221,`one_of()` argument `vars` has been renamed to `.vars` to avoid spurious matching.,1,95,FALSE,NA
tidyselect,c326a14203a328d8ef34aa898dbe4695,"`select_vars()` and `rename_vars()` are now `vars_select()` and `vars_rename()`. This follows the tidyverse convention that a prefix corresponds to the input type while suffixes indicate the output type. Similarly, `select_var()` is now `vars_pull()`.",1,96,FALSE,NA
tidyselect,dc32e1d94c7c91cded1ca067ca7a534c,"The arguments are now prefixed with dots to limit argument matching issues. While the dots help, it is still a good idea to splice a list of captured quosures to make sure dotted arguments are never matched to `vars_select()`'s named arguments:",1,97,FALSE,NA
tidyselect,dc32e1d94c7c91cded1ca067ca7a534c,"```
vars_select(vars, !!! quos(...))
```",1,98,TRUE,NA
tidyselect,ccb7b14f044bd093db234464a4b92862,"Error messages can now be customised. For consistency with dplyr, error messages refer to ""columns"" by default. This assumes that the variables being selected come from a data frame. If this is not appropriate for your DSL, you can now add an attribute `vars_type` to the `.vars` vector to specify alternative names. This must be a character vector of length 2 whose first component is the singular form and the second is the plural. For example, `c(""variable"", ""variables"")`.",1,99,FALSE,NA
tidyselect,27509be5f6762d8a4c3f7391b824aa90,`scoped_vars()` sets up a variable context along with an an exit hook that automatically restores the previous variables. It is the preferred way of changing the variable context. `with_vars()` takes variables and an expression and evaluates the latter in the context of the former.,1,100,FALSE,NA
tidyselect,4ff4432f3aa6422dd0ad6b375568b315,`poke_vars()` establishes a new variable context. It returns the previous context invisibly and it is your responsibility to restore it after you are done. This is for expert use only. `current_vars()` has been renamed to `peek_vars()`. This naming is a reference to peek and poke from legacy languages.,1,101,FALSE,NA
usethis,c9dce4acb0e1377f549f3f0717093127,Patch release with changes to `.Rd` files requested by CRAN.,1,1,FALSE,NA
usethis,6530f8fef5fd33f313fc44cf48ff4909,Implicit usage of `numeric_version()` via comparison now always provides character input. This is in response to a request from CRAN to anticipate future solutions to https://bugs.r-project.org/show_bug.cgi?id=18548.,1,2,FALSE,NA
usethis,4342b3e6f22972089f8245217833f035,"Internal helper `cran_version()`, used in functions such as `use_release_checklist()` and `use_news_md()`, is more resilient to situations where no CRAN mirror has been set (#1857).",1,3,FALSE,NA
usethis,57b53cf7e67775fbd1ab15fe82233dc2,"Internal usage of `numeric_version()` now always provides character input, rather than relying on implicit `as.character()` coercion. This is in response to a request from CRAN to anticipate future solutions to https://bugs.r-project.org/show_bug.cgi?id=18548 (#1869).",1,4,FALSE,NA
usethis,6dfac3a815609a31b49b3d97d8ec9c0f,"`use_author()` is a new function to introduce a new person into the `Authors@​R` field of DESCRIPTION (@​avalcarcel9, #833).",1,5,FALSE,NA
usethis,af3d715b750e3e138f61f7e8e8bda336,`use_rstudio_preferences()` lets you set RStudio preferences programmatically (#1518),1,6,FALSE,NA
usethis,ccb6f749ab3ee0cfb45c3d95dcf8dc43,"`use_standalone()` is a new function that makes it easier to use standalone files provided by various low-level tidyverse packages, like rlang (#1654).",1,7,FALSE,NA
usethis,89897fd4d9d4d55f7849ef8b604584f7,"`use_upkeep_issue()` is a new function to facilitate regular maintenance of your package. Similar to `use_release_issue()`, it opens an issue in your repo with a checklist of maintenance tasks. It will include additional bullets if your package includes an `upkeep_bullets()` function that returns a character vector (#1794).",1,8,FALSE,NA
usethis,4ff96e99b12609816b75ed5b0b1e9080,"Although nested projects are discouraged, they can be useful in development contexts. `create_package()` now sets the correct package name and returns the correct package path for a package nested inside a project (#1647).",1,9,FALSE,NA
usethis,2feb65a1a5e7bd85c6fa7b59c6cbcf61,"`use_article()` no longer adds the rmarkdown package to `Suggests`. Instead, if rmarkdown is not already a dependency, it's added to `Config/Needs/website`. This means that a package that only uses articles (vs. vignettes) won't gain an unnecessary dependency on rmarkdown (#1700).",1,10,FALSE,NA
usethis,3335909035cabda909a901cf92caa5f7,"`use_data()` now sets the appropriate minimal R version in `DESCRIPTION`, depending on which serialization format `version` you choose (@​dpprdan, #1672).",1,11,FALSE,NA
usethis,a0563dfdc1ac990fa6cc94a1d7b9132e,"`use_github_links()` by default now appends the GitHub url to existing urls in in the `URL` field of DESCRIPTION, rather than replacing existing urls (#1805).",1,12,FALSE,NA
usethis,baef8bf04a0f80b0802a5b0be4840e5a,`use_latest_dependencies()` no longer affects `Suggests` since those dependencies are not enforced (#1749).,1,13,FALSE,NA
usethis,3d8f72b28c5e28d8201d977701be9cf3,"`use_news_md()` now places ""(development version)"" in the header of `NEWS.md` if there is a development version number in `DESCRIPTION`. It also sets the first bullet to ""Initial CRAN submission"" when it looks like a ""new"" package (#1708).",1,14,FALSE,NA
usethis,aae3febfebfd2ddef3ba3004ce0c1e5e,"`use_coverage()` no longer adds covr to `Suggests`, since the `test-coverage` GitHub Actions workflow takes care of installing covr (@​Bisaloo, #1851).",1,15,FALSE,NA
usethis,1e70488be7af09d12e52893642961c1c,"`use_release_issue()` will now remind you to run `use_github_links()` if necessary (@​Bisaloo, #1754)",1,16,FALSE,NA
usethis,249d7205115eae9034d8d8fc1e5549f7,"`use_release_issue()` now encourages the creation of `NEWS.md` prior to submission, instead of after (#1755).",1,17,FALSE,NA
usethis,fe4dada9e8d8a47bef92ba5e487c0f29,"`use_github_release()` now automatically pushes to GitHub (if safe) and automatically publishes the release, rather than requiring you to edit and publish the draft (#1385).",1,18,FALSE,NA
usethis,d6e548b09c19c987776b42dbe51df4c7,`use_github_release()` no longer fails in the absence of `NEWS.md` (#1755).,1,19,FALSE,NA
usethis,c9436f4cd6d480634f8d093995d22895,"`use_release_issue()` will now remind you to check/close the milestone corresponding to the release, if it exists (#1642).",1,20,FALSE,NA
usethis,658a3d6067eaa33b69d2d97ccdf05f05,`use_version()` and `use_dev_version()` gain a `push` argument to optionally push the result after committing. This is used to eliminate a manual step from the `use_release_issue()` checklist (#1385).,1,21,FALSE,NA
usethis,fdeb8ac8e3dae25ffa081e7517721237,"`use_revdep()` no longer places an email template, because these days we are more likely to communicate with other maintainers about breaking changes via GitHub issues and pull requests (#1769).",1,22,FALSE,NA
usethis,229eb6b9bc31f209354e3ba8a7d27464,`rename_files()` now also affects files in `src/` (#1585).,1,23,FALSE,NA
usethis,b41387bb5d29462e2434ed4bd6482ce7,"`use_r()` and `use_test()` now work with all active files in `R/`, `src/`, and `tests/testthat/` (#1566).",1,24,FALSE,NA
usethis,9feaba742d9e696085cc90c3d551e383,`use_r()` and `use_test()` now work with files containing `.` (#1690).,1,25,FALSE,NA
usethis,6ea7c80bd4d01130b7bd5eeb3270353a,"`use_rcpp()`, `use_c()` and friends now work the same way as `use_r()` and `use_test()`: they'll take the default file name from the file you currently have open in RStudio (#1730).",1,26,FALSE,NA
usethis,41cf50f05be4d20f0b0cef15b9a6cd3b,"`create_from_github()` will now use an existing `.Rproj` file if it exists anywhere in the repo, not just the root directory. This is useful if you're working with repos that contain tools for multiple languages (#1680).",1,27,FALSE,NA
usethis,6e15c7be7770761e57e26364268e114d,"`git_sitrep()` gains two arguments: `tool` and `scope`, which enables you to limit the report to, for example, `tool = ""git""` or `scope = ""user""`. The default remains to provide a full report. Also, provides more feedback if git user's information is not set, and checks global git-email against user-level GitHub PAT (@​ijlyttle, #1732, #1714, #1706).",1,28,FALSE,NA
usethis,3ceb3d11d6edd17735aa19eaf782a254,"`git_vaccinated()` now treats a path configured as `core.excludesFile` like other user-supplied paths; in particular, any use of the `~/` home directory shortcut is expanded via `fs::path_expand()` (@​dpprdan, #1560).",1,29,FALSE,NA
usethis,645538db06f68bc734127a50f1338ca4,`use_github_action()` now suggests possible actions when called without arguments (#1724).,1,30,FALSE,NA
usethis,f6f11063484e436afce2f92e045ddb93,"`use_github_actions()`, `use_github_action_check_standard()`, `use_github_action_check_release()`, and `use_github_action_pr_commands()` have been deprecated in favour of the new interactive powers of `use_github_action()` (#1724).",1,31,FALSE,NA
usethis,7e4af651d5084cbcadedf59c518337b5,Links to the R Packages book have been updated to the second edition of the book (#1689).,1,32,FALSE,NA
usethis,925741b020b45c580913d91f55728850,"The SVG badges placed by `use_lifecycle()` have improved accessibility features, i.e. they advertise the lifecycle stage via the `aria-label` attribute (#1554, https://github.com/r-lib/lifecycle/issues/117).",1,33,FALSE,NA
usethis,810ecf6c0597667bebb8a5a96cb27230,"`use_rscloud_badge()` has been deprecated in favour of `use_posit_cloud_badge()`, and both functions now accept the updated url format of Posit Cloud projects (#1670).",1,34,FALSE,NA
usethis,605d7ef3659e52626b1d2ae53b75aa74,"`use_rstudio()` gains a `reformat` argument which omits `.Rproj` settings that enforce file formatting conventions, e.g. around whitespace.\ `create_from_github()` uses this option when it introduces an `.Rproj` to a project that lacks one, making it easier to follow the project's existing conventions (#1679).",1,35,FALSE,NA
usethis,1590eb82a9aa9a9757c7bae15ce1661f,`write_over()` and `use_github_file()` gain an overwrite argument (#1748).,1,36,FALSE,NA
usethis,748c223b9adc1da7d17b7542b485fde6,"`use_release_issue()` now uses internal `release_extra_revdeps()` to add extra revdep sources. Currently only use for internal Posit tooling, but we hope to extend to all users in the future (#1610).",1,37,FALSE,NA
usethis,1a8b1d2ddae90f9e9c46be6eabb9e80a,`use_tidy_logo()` is a new function that calls `use_logo()` on the appropriate hex sticker PNG file at https://github.com/rstudio/hex-stickers (#1871).,1,38,FALSE,NA
usethis,a087051ebba083fea476665385426472,`use_tidy_eval()` is now defunct because it imports and re-exports a large number of functions that are no longer needed in order to do tidy evaluation (#1656).,1,39,FALSE,NA
usethis,665f4024398e93ff1699fa69a0109c3a,"`use_travis()`, `use_pkgdown_travis()`, `browse_travis()`, and `use_appveyor()` are now defunct because we no longer recommend Travis or Appveyor. We recommend GitHub actions instead (#1517).",1,40,FALSE,NA
usethis,1b097d6e1eaa0081e6a1463c98d66fda,"`use_github_action()` and friends gain a `ref` argument, which defaults to the tag of the latest release in https://github.com/r-lib/actions (#1541).",1,41,FALSE,NA
usethis,c62d13c922feae19d610243829d77b85,"`use_github_actions_badge()` now uses the same URLs as GitHub does via the ""Create status badge"" helper in the browser (#1525). This changes the significance of the `name` argument; now it really must be the name of the workflow configuration file.",1,42,FALSE,NA
usethis,4ec000864fa54351f49109983776c8ea,"All functions error more clearly when the requested operation is not supported for the ""theirs"" remote configuration (#1588).",1,43,FALSE,NA
usethis,70e6806700c4fca448afb082591114ec,`use_roxygen_md()` gains an `overwrite` argument (#1599).,1,44,FALSE,NA
usethis,4d5c674dc7be5ed72a5c86225ebf9233,"`use_rscloud_badge()` is a new function that creates a README badge indicating the repository can be launched in an RStudio Cloud project (@​gvelasq, #1584).",1,45,FALSE,NA
usethis,0bf4da14660e69b1fc70d7d73b480df5,"`use_data()` gains an `ascii` argument, which is passed along to `save()` (@​JosiahParry, #1625).",1,46,FALSE,NA
usethis,b71359d667146a519eaf2229faa02e54,"`use_code_of_conduct()` has been updated to version 2.1 of the Contributor Covenant (@​batpigandme, #1591).",1,47,FALSE,NA
usethis,022b7d55acafe79a38d81196be8a399a,"pkgdown-related functions no longer automatically strip a trailing slash from the pkgdown site URL, in order to play more nicely with CRAN's URL checks (#1526).",1,48,FALSE,NA
usethis,70c3ea140981438d9d7c627688a23f92,"`edit_pkgdown_config()` is a new function that opens the pkgdown YAML configuration file for the current Project, if such a file exists.",1,49,FALSE,NA
usethis,9ea6b53deaa3c4b6d3888055a88d0d86,"The error thrown when reporting an unsupported GitHub configuration has been fixed for forward compatibility with a future version of rlang, i.e. what is anticipated to be rlang v1.0.0.",1,50,FALSE,NA
usethis,0cf7df8189a5450193bdef3cac41d692,Version 2.1.4 was never released. Version was advanced from 2.1.4 to 2.1.5 strictly for CRAN (re-)submission purposes.,1,51,FALSE,NA
usethis,2f09c69eb46ad2d09fdf1dbb64563513,Modified a test to ensure that intermittent GitHub rate limiting does not lead to ungraceful failure on CRAN.,1,52,FALSE,NA
usethis,8c5bff2c75ccedadb040c697dedee54f,"`git_default_branch_rename()` no longer errors on repos where README exists, but has no badge block.",1,53,FALSE,NA
usethis,48b0aaaa9aaeafe7ca4e735541efb99e,"`git_default_branch_rediscover()` prunes the defunct remote ref to the old default branch, e.g. `origin/master`.",1,54,FALSE,NA
usethis,0931060518b4936f48fb877cc6c3e471,Version 2.1.1 was never released. Version was advanced from 2.1.1 to 2.1.2 strictly for CRAN (re-)submission purposes.,1,55,FALSE,NA
usethis,2536a6f77b3a8d37ff74b195145458bf,"`git_branch_default()` has been renamed to `git_default_branch()`, to place it logically in the new family of functions. The old name still works, but that won't be true forever.",1,56,FALSE,NA
usethis,a87bcd5e1d1641cb07f731fd4f5867c8,"`git_default_branch()` is much more diligent about figuring out the default branch. Instead of only consulting the local repo, now we integrate local info with the default branch reported by the `upstream` or `origin` remote, if applicable.",1,57,FALSE,NA
usethis,a87bcd5e1d1641cb07f731fd4f5867c8,• This is intended to surface the case where a project has renamed its default branch and the local repo needs sync up with that.,2,58,FALSE,"`git_default_branch()` is much more diligent about figuring out the default branch. Instead of only consulting the local repo, now we integrate local info with the default branch reported by the `upstream` or `origin` remote, if applicable."
usethis,757d82a3df0006275427bc3970821f3e,"`git_default_branch_rediscover()` is a new function that helps contributors update their local repo (and personal fork, if applicable) when a project/repo renames its default branch.",1,59,FALSE,NA
usethis,998d77f703b5269a193104225c6fbe41,`git_default_branch_rename()` is a new function that helps a repo owner rename the default branch (both on GitHub and locally).,1,60,FALSE,NA
usethis,625083b1dbf290c56d4f95ebd192f4a6,"`git_default_branch_configure()` is a new function to set the new Git configuration option `init.defaultBranch`, which controls the name of the initial branch of new local repos.",1,61,FALSE,NA
usethis,408df413797c17a3506fd013bf5fc9f5,`git_sitrep()` exposes `init.defaultBranch` and surfaces the more sophisticated analysis of `git_default_branch()`.,1,62,FALSE,NA
usethis,231e7a7c23e79e0961b1303c5e369adc,"`git_sitrep()` and `gh_token_help()` try even harder to help people get on the happy path with respect to their GitHub PAT (#1400, #1413, #1488, #1489, #1497).",1,63,FALSE,NA
usethis,d085c7089a1dade07c344819c90232ff,"The minimum version of gh has been bumped to help / force more people to upgrade to the gh version that supports current GitHub PAT formats (@​ijlyttle, #1454).",1,64,FALSE,NA
usethis,e6c0a94d18827bb85d9107520397c5d1,"`use_github_file()` is a new function related to `use_template()`. Instead of starting from a local file, `use_github_file()` grabs the contents of an arbitrary file on GitHub that the user has permission to read. It supports targeting a specific branch, tag, or commit and can follow a symlink (#1407). `use_github_file()` now powers `use_github_action()` and friends.",1,65,FALSE,NA
usethis,d9b8269f5f230fa7a1083e9a0f5ba741,"`use_github_release()` is much more diligent about using any information left behind by `devtools::submit_cran()` or `devtools::release()`. Specifically, this applies to determining which SHA is to be tagged in the release. And this SHA, in turn, determines the consulted versions of DESCRIPTION (for package version) and NEWS.md (for release notes) (#1380).",1,66,FALSE,NA
usethis,7c3a1136cb96870ae7e65c3db9ea1ca0,"`use_release_issue()` also takes bullets from `release_questions()`, for compatibility with `devtools::release()`.",1,67,FALSE,NA
usethis,511d2ced2780df1a0250566630c8ca3a,"`git_vaccinate()`, `edit_git_ignore()`, and `git_sitrep()` are more careful to consult, reveal, and set the `core.excludesFile` setting in user's Git configuration (#1461).",1,68,FALSE,NA
usethis,c9a5bfe6f743f439f48563caae5028d6,"`use_github_action_check_full()` has been removed. It's overkill for the majority of R packages, which are better off with `use_github_actions()` or `use_github_action_check_standard()` (#1490).",1,69,FALSE,NA
usethis,1b90f720286f22081d78a99524dcab20,"`use_github_pages()` and `use_pkgdown_github_pages()` use a new method for creating an empty, orphan `gh-pages` branch. This is necessary due to new GitHub behaviour, where it has become essentially impossible to refer to the empty tree (#1472).",1,70,FALSE,NA
usethis,b61bb4bf13e16d50b5f55f6fa261f16c,"`use_github()` can create repositories with `""internal""` visibility, a feature that exists within GitHub Enterprise products (#1505).",1,71,FALSE,NA
usethis,9e5f55ce418460e3ea5d308aed5f5304,"`use_readme_rmd()` and `use_readme_md()` no longer include CRAN installation instructions in the initial template; instead, we only include GitHub-based install instructions or otherwise prompt the user to update instructions (#1507).",1,72,FALSE,NA
usethis,c4b0b29d1445670f0b3ae8c675558e31,"`use_import_from()` is a new function that puts `@​importFrom pkg fun` directives into a package in a consistent location (@​malcolmbarrett, #1377).",1,73,FALSE,NA
usethis,78d139c2305ed589e340e88ed2ac8ea4,"`DESCRIPTION` files generated by usethis no longer include `LazyData` by default, as per new CRAN checks; instead, `LazyData` is now added the first time you use `use_data()` (@​malcolmbarrett, #1404).",1,74,FALSE,NA
usethis,cea6a03a51201e662ade6639b5d2bf0b,"`use_tidy_eval()` has been updated to reflect current recommendations for using (and therefore exposing) tidy eval in other packages (@​lionel-, #1445).",1,75,FALSE,NA
usethis,6c4ac87f63d42f303edbb962093b0d7a,`use_pkgdown()` automatically uses Bootstrap 5 if the pkgdown version supports it (anticipated for pkgdown 2.0.0).,1,76,FALSE,NA
usethis,491eadb26cf7f90f750cffefc29b4af7,`use_lifecycle()` now imports `lifecycle::deprecated()` (#1419).,1,77,FALSE,NA
usethis,2cd15f8ab5cec3989e60ae15980d6395,`use_code_of_conduct()` now requires a `contact` argument to supply contact details for reporting CoC violations (#1269).,1,78,FALSE,NA
usethis,b5da77020a79286be36ea613f88896da,"`use_package()` no longer guides the user on how to use a dependency when no change was made (@​malcolmbarrett, #1384).",1,79,FALSE,NA
usethis,2f26dbfb1ce2efee09544696960c6011,"`use_tidy_dependencies()` is a new function that sets up standard dependencies used by all tidyverse packages, except those that are designed to be dependency free (#1423).",1,80,FALSE,NA
usethis,06d2b83dae1d0fb1ccb328161f0b0f0e,`use_tidy_upkeep_issue()` is a new function similar to `use_release_issue()` that creates a checklist-style issue to prompt various updates (#1416).,1,81,FALSE,NA
usethis,d96cd2b218a1df3a1d7d4452ba08fcd4,"`use_tidy_release_test_env()` has been deleted since we no longer recommend including test environments in `cran-comments.md`. There's no evidence that CRAN finds it useful, and it's annoying to keep up-to-date (#1365).",1,82,FALSE,NA
usethis,8c81afe1d673e8dec70218053736b9de,`use_tidy_github_labels()` is the new name for `use_tidy_labels()` (#1430).,1,83,FALSE,NA
usethis,482410651e6d66394bd4f00af09b05c0,"`use_tidy_github_actions()` takes over for `use_tidy_ci()`, which is now deprecated.",1,84,FALSE,NA
usethis,57e6a6505c3fd91d97bacc3252e9baf6,"`""usethis.overwrite""` is a new option. When set to `TRUE`, usethis overwrites an existing file without asking for user confirmation if the file is inside a Git repo. The normal Git workflow makes it easy to see and selectively accept/discard any proposed changes. This behaviour is strictly opt-in (#1424).",1,85,FALSE,NA
usethis,deb9d48a07a07e684ae1351b1733d543,"Functions that provide code to load packages in your `.Rprofile` now use `rlang::check_installed()` to make sure the package is installed locally (@​malcolmbarrett, #1398).",1,86,FALSE,NA
usethis,f935a64264bcb968828c603ef42673f6,"`edit_rstudio_prefs()` and `edit_rstudio_snippets()` should work now on case-sensitive OSes, due to a path fix re: the location of RStudio's config files (@​charliejhadley, #1420).",1,87,FALSE,NA
usethis,88d678f0703d9ce2273900f48f3bd4e4,All functions that require a package now ask you if you'd like to install it.,1,88,FALSE,NA
usethis,4e8a1d5d21f740d521ffff942b2b5d52,"Added `edit_template()` for opening and creating files in `inst/templates` (for use with `use_template()`) (@​malcolmbarrett, #1319).",1,89,FALSE,NA
usethis,2f064f6b2a5e7070fc32a082e3a8fb30,`use_article()` now creates the file in the `vignettes/articles/` (#548).,1,90,FALSE,NA
usethis,f84927fa51324bb5ebf0fefaa544ee2a,`use_lifecycle()` has been updated for changes in our lifecycle workflow (#1323).,1,91,FALSE,NA
usethis,068342725259236a19658fc5a0fd0de5,"`use_tidy_pkgdown()` has been renamed to `use_pkgdown_github_pages()` since the function is useful for anyone who wants to automatically publish to GitHub pages, not just the tidyverse team (#1308).",1,92,FALSE,NA
usethis,2615f3977e38eee300039c20774f18dd,"`use_release_issue()` includes a bunch of minor improvements. Most importantly, for initial CRAN release we now include a number of common things that CRAN checks for that aren't in `R CMD check`.",1,93,FALSE,NA
usethis,f253770494c10f900682e92d5e19173a,"`use_readme_rmd()`, `use_readme_md()`, `use_tidy_contributing()`, and `use_tidy_support()` use updated logic for determining the `OWNER/REPO` spec of the target repo (#1312).",1,94,FALSE,NA
usethis,2b179b0fa8873d34b5439e896375ede5,gert uses the credentials package (https://docs.ropensci.org/credentials/),1,95,FALSE,NA
usethis,d05d6f14bc1341b7dd79ebe98ea241ab,gh uses the gitcreds package (https://gitcreds.r-lib.org/),1,96,FALSE,NA
usethis,3a897881d02c386403a23607e3809d34,usethis should discover and use the same credentials as command line Git.,1,97,FALSE,NA
usethis,e6232bffdc40d35afc5de5fe068871d9,"usethis should be able to work with any GitHub deployment. While github.com is the default, GitHub Enterprise deployments are fully supported. The target GitHub host is determined from the current project's configured GitHub remotes, whenever possible.",1,98,FALSE,NA
usethis,1eb567efad9de431251259f50ebc2e48,Deprecated functions:,1,99,FALSE,NA
usethis,1eb567efad9de431251259f50ebc2e48,• `use_git_credentials()`,2,100,FALSE,Deprecated functions:
usethis,1eb567efad9de431251259f50ebc2e48,• `git_credentials()`,2,101,FALSE,Deprecated functions:
usethis,1eb567efad9de431251259f50ebc2e48,• `github_token()`,2,102,FALSE,Deprecated functions:
usethis,cf87656606eba280919733a0b979aff7,Functions with (deprecated arguments):,1,103,FALSE,NA
usethis,cf87656606eba280919733a0b979aff7,"• `create_from_github()` (`auth_token`, `credentials`)",2,104,FALSE,Functions with (deprecated arguments):
usethis,cf87656606eba280919733a0b979aff7,"• `use_github()` (`auth_token`, `credentials`)",2,105,FALSE,Functions with (deprecated arguments):
usethis,cf87656606eba280919733a0b979aff7,"• `use_github_links()` (`host`, `auth_token`)",2,106,FALSE,Functions with (deprecated arguments):
usethis,cf87656606eba280919733a0b979aff7,"• `use_github_labels()` (`repo_spec`, `host`, `auth_token`)",2,107,FALSE,Functions with (deprecated arguments):
usethis,cf87656606eba280919733a0b979aff7,"• `use_tidy_labels()` (`repo_spec`, `host`, `auth_token`)\",2,108,FALSE,Functions with (deprecated arguments):
usethis,cf87656606eba280919733a0b979aff7,"• `use_github_release()` (`host`, `auth_token`)",2,109,FALSE,Functions with (deprecated arguments):
usethis,dc112e364296f310b463a75820a7e12f,Which GitHub repositories `origin` and `upstream` point to,1,110,FALSE,NA
usethis,b1ce479303a75a52e5993dbcfaec86e4,Whether you can push to them,1,111,FALSE,NA
usethis,a285b85c63051738a795e3d1ea8ddfbd,"How they relate to each other, e.g. fork-parent relationship",1,112,FALSE,NA
usethis,0a17ed0e085ea475718c922f535b77f6,"`use_github_links()` is a bit more clever about remotes (e.g. `origin` vs. `upstream`), which makes it easier to make a PR that adds GitHub links for a package you've forked.",1,113,FALSE,NA
usethis,29043b8098f2f4e41e67cbc37d86bf22,`use_pkgdown()` now `.gitignore`s the destination directory and only adds the destination directory to the config file if it departs from the default (which is `docs/`).,1,114,FALSE,NA
usethis,4a1b6052a4db426ce293e82c1590d8a2,`use_tidy_ci()` is now deprecated in favour of `use_tidy_github_actions()` (#1098).,1,115,FALSE,NA
usethis,e3b150e47c6ad9131520e39088f7d6be,"`use_github_action_check_standard()` is a new intermediate workflow that checks on more platforms than `_release`, but is less exhaustive than `_full` (@​jimhester).",1,116,FALSE,NA
usethis,6d5f80cd79e345033905b774fc1f685b,"`create_tidy_package()` now uses an MIT license (@​topepo, #1096).",1,117,FALSE,NA
usethis,af008a75bb61b6793c437571fe06fdf7,"New `use_github_actions()`, `use_github_action_check_release()`, `use_github_action_check_full()`, `use_github_action_pr_commands()`, to set up GitHub Actions for a package (@​jimhester).",1,118,FALSE,NA
usethis,aa27f1c9cddac2c1d79d61ba18c3d54b,"We now recommend GitHub Actions instead of Travis-CI or AppVeyor, and strongly recommend upgrading your packages.",1,119,FALSE,NA
usethis,5f840da69e571d6a033698fc1133a438,"Fix `use_github_action()` URL parameter to ensure custom URLs are allowed. (@​coatless, #1065).",1,120,FALSE,NA
usethis,fa42a138d61804b48c6968acb5a7713a,"`create_package()` gains a `roxygen` argument. If `TRUE` (the default), it adds a `RoxygenNote` field to the `DESCRIPTION` (which means the first run of `devtools::check()` will re-document the package, #963), and creates an empty `NAMESPACE` (which means you'll always need an explicit `@​export` if you want to export functions, #927). It also turns markdown processing on by default (#911).",1,121,FALSE,NA
usethis,b977d16ffc2e3cafc98b2d1671d17d2f,"`use_rstudio()` now sets the `LineEndingConversion` to `Posix` so that packages created using usethis always use LF line endings, regardless of who contributes to them (#1002).",1,122,FALSE,NA
usethis,a0d8291a67013dbc9bfe5fed7c4b4c69,"In the `usethis.description` option, you can now set `Authors@​R = person()` directly, without having to wrap in additional layer of quotes. If setting this in your `.Rprofile`, you'll need to use `utils::person()` since the utils package isn't loaded until after your profile is executed.",1,123,FALSE,NA
usethis,a5d34c9133b20c26a429b691267a3b12,"A new article Pull request helpers demonstrates how to use the `pr_*()` functions (@​mine-cetinkaya-rundel, #802).",1,124,FALSE,NA
usethis,080fae49a23a3e87e522781f0b032388,"`pr_finish()` checks that you don't have any local changes (#805), and can optionally finish any PR, not just the current (#1040).",1,125,FALSE,NA
usethis,79fc9931e226eab3c45c692127ef68fa,"`pr_pause()` and `pr_fetch()` now automatically pull to get latest changes (#959, #960) and refresh RStudio's git pane (#706).",1,126,FALSE,NA
usethis,e3dbf7d658f1f4eb9a235fc931ec1cfc,"`pr_push()` now works for a repository with no open pull requests (@​maurolepore, #990).",1,127,FALSE,NA
usethis,0a5cd27a6ebf2101bffc3f48f1b05e1c,`pr_pull()` gives more information about which files have merge conflicts and automatically opens conflicted files for editing (#1056).,1,128,FALSE,NA
usethis,941259269170aa53f4df6cfa4429fcb1,New `rename_files()` makes it easy to rename paired `R/` and `test/` files (#784).,1,129,FALSE,NA
usethis,92dd9c864ed3bbbeaedb8e19feb8e2cb,New `ui_silence()` makes it easier to selectively silence some UI output.,1,130,FALSE,NA
usethis,47c79e41b78b1c076f3bd030cda8a85b,"New `use_agpl3_license()` (@​pachamaltese, #870).",1,131,FALSE,NA
usethis,a3258036bf563344448f7f188940bbf1,"New `use_data_table()` to set up a package for Import-ing `data.table` (@​michaelchirico, #897).",1,132,FALSE,NA
usethis,5af9090de285b18a1a34ced1451ceeba,`use_latest_dependencies()` replaces `use_tidy_version()` as the new name better reflect its usage (#771).,1,133,FALSE,NA
usethis,d0b84ddb9ebc19a815a063bcade99f80,New `use_lifecycle()` helper to import the lifecycle badges for functions and arguments in your package. Learn more at https://lifecycle.r-lib.org/.,1,134,FALSE,NA
usethis,9c6b5121b5ea001acd013231d3c41770,`use_release_issue()` will include additional bullets if your package includes `release_bullets()` function which returns a character vector (and the package has been loaded with `load_all()`) (#941).,1,135,FALSE,NA
usethis,99064725c242f649216f7ed5c65fd42c,"When writing files, usethis now respects line endings. Default line endings are taken from the `.Rproj` file (if available), otherwise the `DESCRIPTION`, otherwise the first file found in `R/`, then all else failing to your platform default (#767). It should do a better job of preserving UTF-8 files on windows (#969).",1,136,FALSE,NA
usethis,951bbb399eee3dc7d670e63099bd13f2,"`browse_github()` now always goes to the canonical GitHub site: `https://github.com/user/repo`. This is slightly worse than the current behaviour but makes the function more consistent across packages, and considerably simplifies the implementation.",1,137,FALSE,NA
usethis,ec353019c2026aaafd4158a4dac2a12b,`browse_circle()` opens the project dashboard on Circle CI.,1,138,FALSE,NA
usethis,089f5eaf57c4130d574772981c9d3f70,"`create_download_url()` is a new helper for making ""ZIP file download"" URLs suitable for use with `use_course()` and `use_zip()`, starting with the URLs that mere mortals can usually get their hands on in a browser (@​fmichonneau, #406).",1,139,FALSE,NA
usethis,750e4ba2c158fcd1ff25da56db8414a0,`create_package()` no longer fails partway through if you have a malformed `usethis.description` option (#961).,1,140,FALSE,NA
usethis,ae9f132f826033b9ef8899fa8f1869de,`create_package()` will now create a package in a symlink to a directory (#794).,1,141,FALSE,NA
usethis,eb0c33fb6479820beb58b6c7345fd077,"`create_package()` and `use_description()` gain a `check_name` argument to control whether to check for package names invalid for CRAN (@​noamross, #883).",1,142,FALSE,NA
usethis,1b1bc0b1dc9131cac2a21bb67798a7ed,`edit_file()` and `use_test()` gain an `open` parameter that allows you to control whether or not the function is opened for editing by the user (#817).,1,143,FALSE,NA
usethis,5e92e26f35fece47baa4a937044322aa,"`edit_rstudio_snippets()` makes it more clear which snippet types are allowed and that user's snippets mask the built-in snippets (@​GegznaV, #885).",1,144,FALSE,NA
usethis,8d7336f7b434f12ef8cac466c4157543,"`git_sitrep()` now reports project-specific user name and email, if set (#837), and email(s) associated with your GitHub account (@​dragosmg, #724).",1,145,FALSE,NA
usethis,801f544f2d9721cf83b26585c0e86736,"`ui_yeah()` and `ui_nope()` allow you to override the default ""yes"" and ""no"" strings and to opt-out of shuffling (@​rundel, #796).",1,146,FALSE,NA
usethis,8e8469641e75ae81fc016d2190477b7d,"`use_circleci()` uses correct delimiters in template (@​jdblischak, #835).",1,147,FALSE,NA
usethis,2031243050049044ca8933bb34776eb4,"`use_circleci_badge()` is now exported (@​pat-s, #920).",1,148,FALSE,NA
usethis,2f7e0b207c2f6866ba772755d82f12ea,`use_code_of_conduct()` now generates an absolute link to code of conduct on pkgdown website or original source to avoid R CMD check issues (#772).,1,149,FALSE,NA
usethis,3c3fd08e73d3f300b1a55371e441e703,"`use_course()` and `use_zip()` are now equipped with some retry capability, to cope with intermittent failure or the need for a longer connect timeout (#988).",1,150,FALSE,NA
usethis,5d70d1edb1311cb3a3ab8d507b306ae0,`use_data()` automatically bumps R dependency to 2.10 (#962).,1,151,FALSE,NA
usethis,d4310ea18b3b936242f5273a844a0d88,"`use_data_raw()` template quotes the dataset name correctly (#736, @​mitchelloharawild).",1,152,FALSE,NA
usethis,6042d96844e5113baa3dc2e6b5f73461,`use_description_defaults()` now shows the default fields combined with any options that you have set.,1,153,FALSE,NA
usethis,1d8eafc2cc90084096996c8c6f963f2c,"`use_dev_package()` now supports packages installed from any remote type, not just GitHub (@​antoine-sachet, #1071).",1,154,FALSE,NA
usethis,7e54775d688d5595c51c4ecd2048dd63,`use_git()` will now create initial commit if needed (#852).,1,155,FALSE,NA
usethis,3da4c25b54f6956df75404852ac6b178,`use_github_release()` no longer fails if you have no news bullets (#1048).,1,156,FALSE,NA
usethis,d79ba19b3053b53f456abc64fbebee65,"`use_github_release()` now tags the latest local commit instead of the latest remote commit on the default branch (@​davidchall, #1029).",1,157,FALSE,NA
usethis,4d2b1bff2e4ae179b783aa94f31a4767,"`use_gpl3_license()` now completes the license by providing additional information in a file named LICENSE, just like `use_mit_license()` and friends (@​Cervangirard, #683).",1,158,FALSE,NA
usethis,c4ff2c5a9e82e9046999889ef516ecb3,"`use_logo()` now generates the correct href if the pkgdown `url` is set (@​mitchelloharawild, #986).",1,159,FALSE,NA
usethis,ace1a18bfbbb8828ff03c997a9c3faec,"`use_make()` gains missing closing parenthesis (@​ryapric, #804).",1,160,FALSE,NA
usethis,1300f0a33a6a019665b180aa745f8852,"`use_markdown_template()` no longer uses an unexported function in its default arguments (@​fmichonneau, #761).",1,161,FALSE,NA
usethis,7dc85c5e1851af641da5e93c422f7916,"`use_testthat()` and `use_test()` now work in projects, not just packages (#1017).",1,162,FALSE,NA
usethis,92cf723025c9324e963188be7b8f05f7,`use_test()` works on Windows when called without arguments (#901).,1,163,FALSE,NA
usethis,921e6bf11137f9b3082a4b149d6a66e0,"`use_tidy_issue_template()` uses current github format (@​Maschette, #756).",1,164,FALSE,NA
usethis,b676586cb4b1fdca2337495e6f794f25,"`use_travis()`, `use_travis_badge()`, and `browse_travis()`, now default to `ext = ""com""` since travis-ci.com is now recommended it over travis-ci.org (@​riccardoporreca, #1038).",1,165,FALSE,NA
usethis,a04506b71b7b025c01bfb6fd4fafa999,"`use_release_issue()` reminds you to re-generate `README.md`, if needed (#767).",1,166,FALSE,NA
usethis,d1cc85a316d2da667c64d5806bb06571,"`use_r()` and `use_test()` throw a clear error if multiple names are provided (@​strboul, #862).",1,167,FALSE,NA
usethis,dd56eac47e13a1502c82258ccdcb0b92,"`use_rcpp()` and `use_c()` now ensure `src/` contains at least one `.cpp` or `.c` placeholder file, so that the package can be built (@​coatless, #720).",1,168,FALSE,NA
usethis,600061be1b5075f4f2b951a7768ad989,"`usethis.destdir` is a new option that is consulted when deciding where to put a new folder created by `use_course()` or `create_from_github()` (@​malcolmbarrett, #1015).",1,169,FALSE,NA
usethis,37850958ec4b8e42acf324540956ea30,"`use_lifecycle()` no longer adds the lifecycle package to the DESCRIPTION file. With the new roxygen markdown syntax for including badges, lifecycle has become a build-time dependency.",1,170,FALSE,NA
usethis,6a3bd22c8b3211223f3e1abebb192fb6,"The templates used by `use_pipe()` and `use_tidy_eval()` use a more robust form of cross-reference links, linking to files rather than topics. This should silence some warnings seen on Windows at install time (#730, #731 @​jmgirard).",1,171,FALSE,NA
usethis,83173bb0832954ac8bfb0c7204c66038,"`use_pipe()` gains a logical `export` argument, so it can do the setup necessary to use the pipe operator when it is re-exported (`export = TRUE`, which is the default and preserves the previous behaviour) and when it is not (`export = FALSE`) (#783).",1,172,FALSE,NA
usethis,7e7f1b2a79243c58bb0910d09aea7b5a,"`use_github()` removes newline `\n` characters from the description that can cause the initial push to fail (#493, @​muschellij2).",1,173,FALSE,NA
usethis,e600a5961df83f0e5d0f0cb232f315dc,"`git_sitrep()` gives better feedback if we can't validate the GitHub PAT (#725, @​ijlyttle).",1,174,FALSE,NA
usethis,9a42045ce6fda4e30fa301bf0b220a08,"`create_from_github()` sets remote tracking branch of `master` to `upstream/master`, when it creates (and clones) a fork (#792).",1,175,FALSE,NA
usethis,fe00fbe5f55b73d6c955685e8f550698,"`pr_pause()` can switch back to master even if there is no remote tracking branch (#715, @​cderv).",1,176,FALSE,NA
usethis,77a902371c35963f1e61f905e9b8d3e5,"`use_tidy_ci()` is updated for R 3.6, meaning that R 3.2 is the oldest version of R supported through proactive testing.",1,177,FALSE,NA
usethis,a2cb7c2e7c7e131480fee20b6323924d,"`use_make()` and `use_jenkins()` add a Makefile and Jenkinsfile, respectively (#501, @​ryapric).",1,178,FALSE,NA
usethis,83bf7d5468628f6038c00052431a56c3,"`use_circleci()` creates a `.circleci/config.yaml` config file for CircleCI (#703, @​jdblischak).",1,179,FALSE,NA
usethis,c0c614c8fea7afdfd35e6ae9a2e35132,"`use_zip()` is a new variant of `use_course()` that downloads and unpacks a ZIP file, with less pedantic behaviour re: the destination directory. Both functions now also work for ZIP files with MIME type `""application/x-zip-compressed""` (#573).",1,180,FALSE,NA
usethis,fc3b16dd857a66654b41633c01f4b1d6,"`use_version()` can detect `""(development version)""` in a NEWS header and update it with an actual version (#768, @​DavisVaughan).",1,181,FALSE,NA
usethis,a9b82f7ae43d2d74f2c555bfb3728102,"`git_sitrep()` lets you know what's up with your Git, git2r and GitHub config (#328).",1,182,FALSE,NA
usethis,f719d1c7edf978b0d4e03cccc3cfceca,"`git_vaccinate()` vaccinates your global (i.e. user-level) git ignore file. It adds standard entries for R users, such as `.Rhistory` and `.Rdata`. This decreases the chance that you commit and push files containing confidential information (#469).",1,183,FALSE,NA
usethis,21d8523a745d9262f2e3eaf5e62394fc,`git_remotes()` and `use_git_remote()` are new helpers to inspect or modify Git remote URLs for the repo associated with the active project (#649).,1,184,FALSE,NA
usethis,9de0a025327d5f2bf9105072e11ac647,"`git_protocol()` + `use_git_protocol()` and `git_credentials()` + `use_git_credentials()` are new helpers to summon or set Git transport protocol (SSH or HTTPS) or git2r credentials, respectively. These functions are primarily for internal use. Most users can rely on default behaviour. Use these helpers to intervene if git2r isn't discovering the right credentials (#653). usethis honors the `usethis.protocol` option, which allows you to express a general preference for SSH vs. HTTPS.",1,185,FALSE,NA
usethis,f9e90b3c4e4673b12ca7cc182b1f01f7,"`use_github()` tries harder but also fails earlier, with more informative messages, making it less likely to leave the repo partially configured (#221).",1,186,FALSE,NA
usethis,e50fcb1400f56e23f4aa23b6ebeaefcc,"`use_github()` and `create_from_github()` gain a `protocol` argument (#494, @​cderv).",1,187,FALSE,NA
usethis,c082e8f6a68082b1c2114b1d641420f6,"`create_from_github()` pulls from upstream master in a fork (#695, @​ijlyttle).",1,188,FALSE,NA
usethis,7bc5b3a01d960c2a5f0c965d6f39ddcc,"`use_release_issue()` creates a GitHub issue containing a release checklist, reflecting the standard practices of the tidyverse team (#338).",1,189,FALSE,NA
usethis,42b4a574c9e328f88577b58e4be3b606,`use_github_release()` creates a draft GitHub release using the entries in `NEWS.md` (#137).,1,190,FALSE,NA
usethis,2dd05c3f3afcb29c66937cc8f6a1f545,"`use_gitlab_ci()` creates a `gitlab-ci.yaml` config file for GitLab CI (#565, @​overmar).",1,191,FALSE,NA
usethis,fb57538201051dee0a0757c86006886b,`use_git_config()` now invisibly returns the previous values of the settings.,1,192,FALSE,NA
usethis,f9833387d6bf1655ecb55afc94656316,"`use_github_labels()` has been rewritten be more flexible. You can now supply a repo name, and `descriptions`, and you can set colours/descriptions independently of creating labels. You can also `rename` existing labels (#290).",1,193,FALSE,NA
usethis,2f566a4a29c8cb3896c26344c3f59b02,"`git_sitrep()` includes a section at the end aimed at describing ""pull request readiness"". Expect that to develop and expand.",1,194,FALSE,NA
usethis,895a039ba82e24b56bf47d6a676ddb85,"`pr_init()`, `pr_fetch()`, `pr_push()`, `pr_pull()`, `pr_finish()`, and `pr_view()` constitute the new family of helpers. They are designed to be smart about the significance of remotes with the standard names of `origin` and `upstream` and to facilitate both internal and external pull requests.",1,195,FALSE,NA
usethis,737833d2b1fa2a0b50ef791061e16786,`use_badge()` and friends now automatically add badges if your README contains a specially formatted badge block (#497):,1,196,FALSE,NA
usethis,737833d2b1fa2a0b50ef791061e16786,"```
<-- badge:start -->
<-- badge:end -->
```",1,197,TRUE,NA
usethis,e1451a22b105399df0beff1efb993d74,`use_tibble()` and `use_rcpp()` automatically add roxygen tags to to `{package}-package.R` if it contains a specially formatted namespace block (#517):,1,198,FALSE,NA
usethis,e1451a22b105399df0beff1efb993d74,"```
## usethis namespace: start
## usethis namespace: end
NULL
```",1,199,TRUE,NA
usethis,e1451a22b105399df0beff1efb993d74,"Unfortunately this means that `use_rcpp()` no longer supports non-roxygen2 workflows, but I suspect the set of people who use usethis and Rcpp but not roxygen2 is very small.",1,199,FALSE,NA
usethis,56a98c597b3f100ffdce215029a907e6,"New `proj_activate()` lets you activate a project, either opening a new RStudio session (if you use RStudio) or changing the working directory (#511).",1,200,FALSE,NA
usethis,66cc2263e6403c0a0478163e88396a43,"`proj_get()` and `proj_set()` no longer have a `quiet` argument. The user-facing message about setting a project is now under the same control as other messages, i.e. `getOption(""usethis.quiet"", default = FALSE)` (#441).",1,201,FALSE,NA
usethis,dcaad993bbb859677da1d249d29a0908,A new set of `ui_*()` functions makes it possible to give your own code the same user interface as usethis (#308). All use the glue and crayon and packages to power easy interpolation and formatting. There are four families of functions:,1,202,FALSE,NA
usethis,dcaad993bbb859677da1d249d29a0908,"• block styles: `ui_line()`, `ui_done()`, `ui_todo()`, `ui_oops()`, `ui_info()`.",2,203,FALSE,A new set of `ui_*()` functions makes it possible to give your own code the same user interface as usethis (#308). All use the glue and crayon and packages to power easy interpolation and formatting. There are four families of functions:
usethis,dcaad993bbb859677da1d249d29a0908,"• conditions: `ui_stop()`, `ui_warn()`.",2,204,FALSE,A new set of `ui_*()` functions makes it possible to give your own code the same user interface as usethis (#308). All use the glue and crayon and packages to power easy interpolation and formatting. There are four families of functions:
usethis,dcaad993bbb859677da1d249d29a0908,"• questions: `ui_yeah()`, `ui_nope()`.",2,205,FALSE,A new set of `ui_*()` functions makes it possible to give your own code the same user interface as usethis (#308). All use the glue and crayon and packages to power easy interpolation and formatting. There are four families of functions:
usethis,dcaad993bbb859677da1d249d29a0908,"• inline styles: `ui_field()`, `ui_value()`, `ui_path()`, `ui_code()`.",2,206,FALSE,A new set of `ui_*()` functions makes it possible to give your own code the same user interface as usethis (#308). All use the glue and crayon and packages to power easy interpolation and formatting. There are four families of functions:
usethis,3da4c950fd5ebefe55e5d07fae798636,`with_project()` and `local_project()` are new withr-style functions to temporarily set an active usethis project. They make usethis functions easier to use in an *ad hoc* fashion or from another package (#441).,1,207,FALSE,NA
usethis,6e31cdee13c1b1a7bb07369f22d43897,"Call `use_tidy_labels()` to update GitHub labels. Colours are less saturated, docs is now documentation, we use some emoji, and performance is no longer automatically added to all repos (#519). Repo specific issues should be given colour `#eeeeee` and have an emoji.",1,208,FALSE,NA
usethis,b2a180944d420741897cd4122c0a228b,"Call `use_logo()` to update the package logo to the latest specifications: `man/figure/logo.png` should be 240 x 278, and README should contain `<img src=""man/figures/logo.png"" align=""right"" height=""139"" />`. This gives a nicer display on retina displays. The logo is also linked to the pkgdown site if available (#536).",1,209,FALSE,NA
usethis,563ce4951d511e7c200cab107269311a,"When creating a new package, use `create_tidy_package()` to start with a package following the tidyverse standards (#461).",1,210,FALSE,NA
usethis,1f4e586f19b7bb021f510aa8bb4ad543,"`NEWS.md` for the development version should use ""(development version)"" rather than the specific version (#440).",1,211,FALSE,NA
usethis,58a9c93f5485ecb31ba67d7f0202d9e0,pkgdown sites should now be built by travis and deployed automatically to GitHub pages. `use_pkgdown_travis()` will help you set that up.,1,212,FALSE,NA
usethis,2ee82e18a2b34d9878ae20d417365047,"When starting the release process, call `use_release_issue()` to create a release checklist issue (#338).",1,213,FALSE,NA
usethis,1b73f5f74e4811ea6f43f0a8f0823234,Prior to CRAN submission call `use_tidy_release_test_env()` to update the test environment section in `cran-comments()` (#496).,1,214,FALSE,NA
usethis,0e859c73224eaa686017d44956e40099,"After acceptance, try `use_github_release()` to automatically create a release. It's created as a draft so you have a chance to look over before publishing.",1,215,FALSE,NA
usethis,8430664f1cdbafac37f4f19a745eb555,"`use_vignette()` includes the a standard initialisation chunk with `knitr::opts_chunk$set(comment = ""#>"", collapse = TRUE)` which should be used for all Rmds.",1,216,FALSE,NA
usethis,87ff6fce3f9f23b7f24eab647199e4b4,"`use_devtools()` (#624), `use_conflicted()` (#362), and `use_reprex()` (#465) help add useful packages to your `.Rprofile`.",1,217,FALSE,NA
usethis,8567ee4174fa46e6f5927c9777929df4,`use_partial_warnings()` helps the user add a standard warning block to `.Rprofile` (#64).,1,218,FALSE,NA
usethis,e3d3d8cd208a2f56f883124d3b4bbfdc,"`edit_r_buildignore()` opens `.Rbuildignore` for manual editing (#462, @​bfgray3).",1,219,FALSE,NA
usethis,4561e6d458b6bce70a671e41a930e117,"`use_lgpl_license()` automates set up of the LGL license (#448, @​krlmlr).",1,220,FALSE,NA
usethis,044504b9c56b606858bbc398e972a538,"`use_ccby_license()` adds a CCBY 4.0 license (#547, @​njtierney).",1,221,FALSE,NA
usethis,4798b319b07411f2393d04cf80a1dfc7,"`use_rcpp_armadillo()` and `use_rcpp_eigen()` set up a package to use RcppArmadillo or RcppEigen, respectively (#421, @​coatless, @​duckmayr).",1,222,FALSE,NA
usethis,f1392eb233616cdf004ccb417522011a,"`use_c(""foo"")` sets up `src/` and creates `src/foo.c` (#117).",1,223,FALSE,NA
usethis,a0f3f9c4703c25b98ab6d16f80b795d6,`use_covr_ignore()` makes it easy to ignore files in test coverage (#434).,1,224,FALSE,NA
usethis,7e30e43b903db539eb58ffbc1e6ba9a7,`use_pkgdown_travis()` helps you set up pkgdown for automatic build-and-deploy from Travis-CI to GitHub Pages (#524).,1,225,FALSE,NA
usethis,72722ac429afee3e433e2b796813d930,"`use_addin()` does setup for RStudio addins (#353, @​haozhu233).",1,226,FALSE,NA
usethis,dcc3bfd116813769fa81df2655b7eb7d,"`use_tutorial()` creates a new interactive R Markdown tutorial, as implemented by the `learnr` package (@​angela-li, #645).",1,227,FALSE,NA
usethis,88b7e8aa182497f02b689b89b6900555,"`use_article()` creates articles, vignettes that are automatically added to `.Rbuildignore`. These appear on pkgdown sites, but are not included with the package itself (#281).",1,228,FALSE,NA
usethis,2196e0622629ba2763875d880e055265,`use_citation()` creates a basic `CITATION` template and puts it in the right place (#100).,1,229,FALSE,NA
usethis,02ae2d27d5fb7ee0160456f5c402550d,"`write_union()` appends the novel `lines`, but does not remove duplicates from existing lines (#583, @​khailper).",1,230,FALSE,NA
usethis,e1e79b2c6255b53e298f7d1e9660f04f,"`use_rcpp(""foo"")` now creates `src/foo.cpp` (#117).",1,231,FALSE,NA
usethis,f0ee5b7a658f521d870ab243abb91fc9,`use_data()` gains a `version` argument and defaults to serialization format version 2 (#675).,1,232,FALSE,NA
usethis,c6395721ebe8d442e438941476317f3e,`use_data_raw()` accepts a name for the to-be-prepared dataset and opens a templated R script (#646).,1,233,FALSE,NA
usethis,2b39ef631adbf10fed1662b6f52947c3,`browse_github()` now falls back to CRAN organisation (with a warning) if package doesn't have its own GitHub repo (#186).,1,234,FALSE,NA
usethis,738e75f9133a8c9acb537c3f1c6128ad,"`create_*()` restore the active project if they error part way through, and use `proj_activate()` (#453, #511).",1,235,FALSE,NA
usethis,68b987f262f5bf7cc208ac8269b11ebf,"`edit_r_profile()` and `edit_r_environ()` now respect environment variables `R_PROFILE_USER` and `R_ENVIRON_USER`, respectively (#480).",1,236,FALSE,NA
usethis,2b4c4cf24497872513adc28bc268bc4b,`use_description()` once again prints the generated description (#287).,1,237,FALSE,NA
usethis,f60a724a94919912058673d983a81ca4,"`use_description_field()` is no longer sensitive to whitespace, which allows `use_vignette()` to work even if the `VignetteBuilder` field is spread over multiple lines (#439).",1,238,FALSE,NA
usethis,93c029086fd0cb01c44a17366529a542,"`use_logo()` can override existing logo if user gives permission (#454). It also produces retina appropriate logos by default, and matches the aspect ratio to the http://hexb.in/sticker.html specification (#499).",1,239,FALSE,NA
usethis,8954d42933db04966c9d16c8bf3d59fa,`use_news_md()` will optionally commit.,1,240,FALSE,NA
usethis,38ff59a0b995bd5ea5aeb47d7fab455c,`use_package()` gains a `min_version` argument to specify a minimum version requirement (#498). Set to `TRUE` to use the currently installed version (#386). This is used by `use_tidy_eval()` in order to require version 0.1.2 or greater of rlang (#484).,1,241,FALSE,NA
usethis,c3312302842ae692782af5f9f9985f6e,"`use_pkgdown()` is now configurable with site options (@​jayhesselberth, #467), and no longer creates the `docs/` directory (#495).",1,242,FALSE,NA
usethis,864c06a77cb9728c60d9e2108d0f15df,"`use_test()` no longer forces the filename to be lowercase (#613, @​stufield).",1,243,FALSE,NA
usethis,df7e22bfd63f71c42661803c2dacd0dc,`use_test()` will not include a `context()` in the generated file if used with testthat 2.1.0 and above (the future release of testthat) (#325).,1,244,FALSE,NA
usethis,8ddf84d8bb170663508964d0745ba766,"`use_tidy_description()` sets the `Encoding` field in `DESCRIPTION` (#502, @​krlmlr).",1,245,FALSE,NA
usethis,24f087d3194fb7e34dda6f76423cba64,"`use_tidy_eval()` re-exports `:=` (#595, @​jonthegeek).",1,246,FALSE,NA
usethis,28ee505b4f35c57feabedc0e49aefadc,`use_tidy_versions()` has source argument so that you can choose to use local or CRAN versions (#309).,1,247,FALSE,NA
usethis,f8f7f442758a696e0f8eac6ebfd823b4,"`use_travis()` gains an `ext` argument, defaulting to `""org""`. Use `ext = ""com""` for `https://travis-ci.com` (@​cderv, #500).",1,248,FALSE,NA
usethis,ed348657d351235cb4f47b618c4722c8,`use_version()` asks before committing.,1,249,FALSE,NA
usethis,4756f5dd36fca3bc00f43980e4d70b03,"`use_vignette()` now has a `title` argument which is used in YAML header (in the two places where it is needed). The vignettes also lose the default author and date fields (@​rorynolan, #445), and the R Markdown starter material. They gain a standard setup chunk.",1,250,FALSE,NA
usethis,2936dbf4e504c8570574df5424aec6a6,"`use_version(""dev"")` now creates a standard ""(development version)"" heading in `NEWS.md` (#440).",1,251,FALSE,NA
usethis,0d23f58ccc5298d27481ec00892cd8a8,"`use_vignette()` now checks if the vignette name is valid (starts with letter and consists of letters, numbers, hyphen, and underscore) and throws an error if not (@​akgold, #555).",1,252,FALSE,NA
usethis,80fa2181308e4a90236ba03eff97fc8e,"`restart_rstudio()` now returns `FALSE` in RStudio if no project is open, fixing an issue that caused errors in helpers that suggest restarting RStudio (@​gadenbuie, #571).",1,253,FALSE,NA
usethis,82a4a749ba7d62078e4a71829e6a8506,withr moves from Suggests to Imports.,1,254,FALSE,NA
usethis,f643d501604e6aaef4f869a01e39cc56,purrr and yaml are new in Imports.,1,255,FALSE,NA
usethis,48ef7d812ade76dc523c17c6dfa2e2ea,"Paths are ""tidy"", meaning `/` is the path separator and there are never multiple or trailing `/`.",1,256,FALSE,NA
usethis,64beba947993158f2af898fc5a31f838,Paths are UTF-8 encoded.,1,257,FALSE,NA
usethis,057cde6043bd4dec001a9b0603e7ef0b,"A Windows user's home directory is interpreted as `C:\Users\username` (typical of Unix-oriented tools, like Git and ssh; also matches Python), as opposed to `C:\Users\username\Documents` (R's default on Windows). Read more in `fs::path_expand()`.",1,258,FALSE,NA
usethis,57117a3792dc8b29b1692fb680053f04,"`proj_path()` is newly exported. Use it to build paths within the active project. Like `proj_get()` and `proj_set()`, it is not aimed at end users, but rather for use in extension packages. End users should use rprojroot or its simpler companion, here, to programmatically detect a project and build paths within it (#415, #425).",1,259,FALSE,NA
usethis,57117a3792dc8b29b1692fb680053f04,"• `edit_file()`, `write_over()`, and `write_union()` are newly exported helpers. They are mostly for internal use, but can also be useful in packages that extend or customize usethis (#344, #366, #389).",2,260,FALSE,"`proj_path()` is newly exported. Use it to build paths within the active project. Like `proj_get()` and `proj_set()`, it is not aimed at end users, but rather for use in extension packages. End users should use rprojroot or its simpler companion, here, to programmatically detect a project and build paths within it (#415, #425)."
usethis,90f43e97e692b27633cbf39eeeb6bde8,"`use_template()` no longer errors when a user chooses not to overwrite an existing file and simply exits with confirmation that the file is unchanged (#348, #350, @​boshek).",1,261,FALSE,NA
usethis,0c630de33ebf594381d0d8d9ff9c7e79,"`getOption(""usethis.quiet"", default = FALSE)` is consulted when printing user-facing messages. Set this option to `TRUE` to suppress output, e.g., to use usethis functions quietly in another package. For example, use `withr::local_options(list(usethis.quiet = TRUE))` in the calling function (#416, #424).",1,262,FALSE,NA
usethis,4ab401b1ad05f80815e2964e6792c9c5,"`proj_sitrep()` reports current working directory, the active usethis project, and the active RStudio Project. Call this function if things seem weird and you're not sure what's wrong or how to fix it. Designed for interactive use and debugging, not for programmatic use (#426).",1,263,FALSE,NA
usethis,2430a00eeeccf65b3c99ee35e1dd65e7,"`use_tibble()` does minimum setup necessary for a package that returns or exports a tibble. For example, this guarantees a tibble will print as a tibble (#324 @​martinjhnhadley).",1,264,FALSE,NA
usethis,a794e03822c9c28f22737c5112e3a0e3,"`use_logo()` resizes and adds a logo to a package (#358, @​jimhester).",1,265,FALSE,NA
usethis,3187f6305139a3313bb8f8a4ae16b0f4,`use_spell_check()` adds a whitelist of words and a unit test to spell check package documentation during `R CMD check` (#285 @​jeroen).,1,266,FALSE,NA
usethis,abf3d2d1c38211f5822cbc6daa1fa403,usethis has a new logo! (#429),1,267,FALSE,NA
usethis,e9b305691da565d234564272518424f3,"`use_course()` reports progress during download (#276, #380).",1,268,FALSE,NA
usethis,a080cf2fd76eba9b11b8463738c06f0b,`use_git()` only makes an initial commit of all files if user gives explicit consent (#378).,1,269,FALSE,NA
usethis,c4a4ebdf0630e3c8a86e6c3afe8bb9a1,"`create_from_github()`: the `repo` argument is renamed to `repo_spec`, since it takes input of the form ""OWNER/REPO"" (#376).",1,270,FALSE,NA
usethis,e75f7f9908ebcbd7e75d08fa41de9a26,`use_depsy_badge()` is defunct. The Depsy project has officially concluded and is no longer being maintained (#354).,1,271,FALSE,NA
usethis,6d0789efdee6c434f4900f4eaec2656f,"`use_github()` fails earlier, with a more informative message, in the absence of a GitHub personal access token (PAT). Also looks for the PAT more proactively in the usual environment variables (i.e., GITHUB_PAT, GITHUB_TOKEN) (#320, #340, @​cderv).",1,272,FALSE,NA
usethis,153e3ec7c0936a7b1dadc387fe57ecc2,"The logic for setting DESCRIPTION fields in `create_package()` and `use_description()` got a Spring Cleaning. Fields directly specified by the user take precedence, then the named list in `getOption(""usethis.description"")` is consulted, and finally defaults built into usethis. `use_description_defaults()` is a new function that reveals fields found in options and built into usethis. Options specific to one DESCRIPTION field, e.g. `devtools.desc.license`, are no longer supported. Instead, use a single named list for all fields, preferably stored in an option named `""usethis.description""` (however,`""devtools.desc""` is still consulted for backwards compatibility). (#159, #233, #367)",1,273,FALSE,NA
usethis,cee459a6bd12aa4f3a407e60af8c5c65,"usethis has a website: https://usethis.r-lib.org (#217). It includes an article with advice on system setup, for usethis and for R development more generally.",1,274,FALSE,NA
usethis,981b7edba817596b4192094011a434de,"`edit_*()` functions now return the target path, invisibly (#255).",1,275,FALSE,NA
usethis,33aba6207511ba2dbcf31523221414ab,"`edit_git_ignore(scope = ""user"")` prefers `~/.gitignore`, but detects an existing `~/.gitignore_global`, if it exists. If a new global gitignore file is created, it is created as `~/.gitignore` and recorded in user's git config as the `core.excludesfile` (#255).",1,276,FALSE,NA
usethis,a198b25874a5bc7f001d1cf4046b7a70,"`create_from_github()` gains several arguments and new functionality. The `protocol` argument lets user convey whether remote URLs should be ssh or https. In the case of ""fork and clone"", the original repo is added as `upstream` remote. It is now possible -- although rarely necessary -- to directly specify the GitHub PAT, credentials (in git2r form), and GitHub host (#214, #214, #253).",1,277,FALSE,NA
usethis,eda5f8b8fe12b06f3b6866e738fcca33,"`use_github_labels()` can create or update the colour of arbitrary GitHub issue labels, defaulting to a set of labels and colours used by the tidyverse packages, which are now exposed via `tidy_labels()`. That set now includes the labels ""good first issue"" and ""help wanted"" (#168, #249).",1,278,FALSE,NA
usethis,2a0d352c70924313ebeb44d7cb81ac61,"`appveyor_info()` no longer reverses the repo's URL and image link. Corrects the markdown produced by `use_appveyor_badge()` (#240, @​llrs).",1,279,FALSE,NA
usethis,f6368770893e205ce2cb495904e8d4f6,"`use_cran_badge()` uses an HTTPS URL for the CRAN badge image (#235, @​jdblischak).",1,280,FALSE,NA
usethis,33bc6cbd9e64659d5155cc2178a9ab79,"`create_package()` and `create_project()` return a normalized path, even if target directory does not pre-exist (#227, #228).",1,281,FALSE,NA
usethis,9d71f296eb2299c206f99ed99ebf6872,"`use_git_config()` can set user's Git name or email, globally or locally in a project/repo (#267).",1,282,FALSE,NA
usethis,1e1e5723becf58b1f3ffbb6519f0b85b,"`browse_github_pat()` goes to the webpage where a GitHub user can create a personal access token (PAT) for the GitHub API. If the user configures a PAT, they can use functions like `create_from_github()` and `use_github()` to easily create and connect GitHub repos to local projects. (#248, #257, @​jeroen, via @​jennybc).",1,283,FALSE,NA
usethis,b2fca37c6241d8e3532af82a1ca913c5,"`use_version()` increments the version of the active package, including an interactive chooser. `use_dev_version()` is now a special case wrapper around this. (#188, #223, @​EmilHvitfeldt).",1,284,FALSE,NA
usethis,1a8423b8825199ebbf8294bea7da24df,"`use_tidy_github()` creates a standard set of files that make a GitHub repository more navigable for users and contributors: an issue template, contributing guidelines, support documentation, and a code of conduct. All are now placed in a `.github/` subdirectory (#165, @​batpigandme).",1,285,FALSE,NA
usethis,3e37814c1d9d98443eeeab0ebfd11ad0,"`use_bioc_badge` creates a Bioconductor badge that links to the build report (#271, @​LiNk-NY).",1,286,FALSE,NA
usethis,5c659d4dcff03ba065175449299d166e,"`use_binder_badge()` creates a badge indicating the repository can be launched in an executable environment via Binder (#242, @​uribo).",1,287,FALSE,NA
usethis,0ec4493c9ad056d8609c574a2f7510cf,"`use_course()` downloads a folder's worth of materials from a ZIP file, with deliberate choices around the default folder name and location. Developed for use at the start of a workshop. Helps participants obtain materials from, e.g., a DropBox folder or GitHub repo (#196).",1,288,FALSE,NA
usethis,6fadca6cb906c378a0694069fa301896,"`use_blank_slate()` provides a way to opt in to an RStudio workflow where the user's workspace is neither saved nor reloaded between R sessions. Automated for `scope = ""project""`. Provides UI instructions for `scope = ""user""`, for now (#139).",1,289,FALSE,NA
usethis,eae92ddcdb9a846b2a9a4e7d2b39ab9e,"`use_tidy_style()` styles an entire project according to https://style.tidyverse.org (#72, #197 @​lorenzwalthert).",1,290,FALSE,NA
usethis,ee45ee5446347e219b50262a9ab40a2a,"GitHub conventions common to tidyverse packages are enacted by `use_tidy_contributing()`, `use_tidy_issue_template()`, and `use_tidy_support()` (@​batpigandme, #143, #166).",1,291,FALSE,NA
usethis,38de8e95a52d2b83153346163b66aa43,"New projects that don't exhibit other obvious criteria for being a ""project"" will include a sentinel, empty file named `.here`, so they can be recognized as a project.",1,292,FALSE,NA
usethis,6b38335baf38b35923108c06dbb99daf,"Project launching and switching works on RStudio server (#115, #129).",1,293,FALSE,NA
usethis,530f31b704d40abf7740dddf4d43bcc9,"`use_template()` is newly exported, so that other packages can provide templating functions using this framework (@​ijlyttle #120).",1,294,FALSE,NA
usethis,203c079104b7aff0d8b5790582bc1952,"`use_readme_rmd()` and `use_readme_md()` work, in a similar fashion, for projects that are and are not a package (#131, #135).",1,295,FALSE,NA
usethis,fa78ddc5fb511f70782d0fc38737312b,"`use_readme_rmd()` once again creates a pre-commit git hook, to help keep `README.Rmd` and `README.md` in sync (@​PeteHaitch #41).",1,296,FALSE,NA
usethis,c39e9a155098f61081aac47d5e5689c8,Substantial increase in unit test coverage.,1,297,FALSE,NA
usethis,208ce42046487c981d0f1de52e27f862,"`browse_github()`, `browse_github_issues()`, `browse_github_pulls()`, `browse_cran()` and `browse_travis()` open useful websites related to the current project or a named package. (#96, #103).",1,298,FALSE,NA
usethis,399a01ee5f978a010b733fe02d790b16,"`create_from_github()` creates a project from an existing GitHub repository, forking if needed (#109).",1,299,FALSE,NA
usethis,45220efa06cf1385d8936bc36cc0f064,"`use_cc0_license()` applies a CC0 license, particularly appropriate for data packages (#94)",1,300,FALSE,NA
usethis,b387897995002bd39242ec76e8ef696d,`use_lifecycle_badge()` creates a badge describing current stage in project lifecycle (#48).,1,301,FALSE,NA
usethis,ec12f7cfe3ddbd51f2185e27c34678ba,`use_pkgdown()` creates the basics needed for a pkgdown website (#88).,1,302,FALSE,NA
usethis,37182c345ed8d30642a1b1eaf6d3aec0,"`use_r(""foo"")` creates and edit `R/foo.R` file. If you have a test file open, `use_r()` will open the corresponding `.R` file (#105).",1,303,FALSE,NA
usethis,a8fa84a358b99dc307327e9ecf971535,`use_tidy_versions()` sets minimum version requirement for all dependencies.,1,304,FALSE,NA
usethis,c5378ed60166b9f803da6814f982b69d,"`use_dev_version()` now correctly updates the `Version` field in a package description file. (@​tjmahr, #104)",1,305,FALSE,NA
usethis,91e6da6ee983eada501800b413694699,`use_revdep()` now also git-ignores the SQLite database (#107).,1,306,FALSE,NA
usethis,980b1c2a17d30a42037752582c1cbb0a,`use_tidy_eval()` has been tweaked to reflect current guidance (#106),1,307,FALSE,NA
usethis,95b446b69b9f0fb29362b45292a72b22,"More support for general R projects, other than packages.",1,308,FALSE,NA
usethis,6d32c83485988955a8050c1d5ee55d0e,"A notion of an ""active"" project that all commands operate on.",1,309,FALSE,NA
usethis,cbcf1139f19c45428240b823edbb76b8,Refined output.,1,310,FALSE,NA
usethis,305e89b2a08170b77582e18f9da8500f,`use_apl2_license()` if you want to use the Apache 2.0 license.,1,311,FALSE,NA
usethis,388f6ad368509cdaf74bc55f94695f63,"`use_depsy_badge()` allows including a Depsy badge (@​gvegayon, #68).",1,312,FALSE,NA
usethis,bafe70f72a38e65b61ea4fe07ff79d1b,`use_dev_package()` works like `use_package()` but also adds the repo to the `Remotes` field (#32).,1,313,FALSE,NA
usethis,b809dbfab5ce9ed070284526d4106e0a,"`use_github_labels()` will automatically set up a standard set of labels, optionally removing the default labels (#1).",1,314,FALSE,NA
usethis,db542046542548be9d846aef1b5a8b20,`use_pipe()` creates a template to use magrittr's `%>%` in your package (#15).,1,315,FALSE,NA
usethis,e9bd18d13379c647156da63739ca6eda,`use_tidy_ci()` which sets up travis and codecov using the tidyverse conventions (#14),1,316,FALSE,NA
usethis,1db13cde5582b014dc0e71447f5828c2,`use_tidy_description()` puts description fields in a standard order and alphabetises dependencies.,1,317,FALSE,NA
usethis,9f4fedef91ac714456bdf0dcd08e4cb3,`use_tidy_eval()` imports and re-exports the recommend set of tidy eval helpers if your package uses tidy eval (#46).,1,318,FALSE,NA
usethis,f79e3e76c44469c3b2630510473ef463,`use_usethis()` opens your `.Rprofile` and gives you the code to copy and paste in.,1,319,FALSE,NA
usethis,30356870325a1daf89ab26c0a6cb2f83,`edit_r_profile_user()` opens `.Rprofile`,1,320,FALSE,NA
usethis,8b38a30feabbbf744d422f25c2a7b254,`edit_r_environ_user()` opens `.Renviron`,1,321,FALSE,NA
usethis,c047038f1b888bbe80fef7003bfdf801,`edit_r_makevars_user()` opens `.R/Makevars`,1,322,FALSE,NA
usethis,56aaa1cf84c8ee422781df11853cd15e,`edit_git_config_user()` opens `.gitconfig`,1,323,FALSE,NA
usethis,1fbe5a7315cc1dd381f5dfda4c58e8e0,`edit_git_ignore_user()` opens `.gitignore`,1,324,FALSE,NA
usethis,f39e7ad5d5022b94e2c106332a13d9d4,`edit_rstudio_snippets(type)` opens `~/R/snippets/{type}.snippets`,1,325,FALSE,NA
usethis,16169cc329d72d6170ee36426fdaf2a2,"`use_coverage(""codecov"")` now sets a default threshold of 1% to try and reduce false positives (#8).",1,326,FALSE,NA
usethis,2559d86dccfe52a61292dfd631f7f0a1,`use_description()` now sets `ByteCompile: true` so you can benefit from the byte compiler (#29),1,327,FALSE,NA
usethis,62844871eb8ffdc1b8e416eb09ae76d5,"The license functions (`use_mit_license()`, `use_apl2_license()`, and `use_gpl3_license()`) save a copy of the standard license text in `LICENSE.md`, which is then added to `.Rbuildignore`. This allows you to follow standard licensing best practices while adhering to CRANs requirements (#10).",1,328,FALSE,NA
usethis,2d8988eaa9c00778e366feabb2ab27f0,`use_package_doc()` uses more a modern roxygen2 template that requires less duplication.,1,329,FALSE,NA
usethis,d5feee226a6a84b6adb73b3b8521ddd8,`use_test()` will use the name of the currently open file in RStudio if you don't supply an explicit name (#89).,1,330,FALSE,NA
usethis,b59ef484d85b7f1b5780c9f24c8972fb,"`use_readme_rmd()` now puts images in `man/figures/` and no longer adds to `.Rbuildgnore`. This ensures that the rendered `README.md` will also work on CRAN (#16, #19). The first chunk now uses `include = FALSE` and is named setup (#19).",1,331,FALSE,NA
usethis,d876ca70810363160e28913271ca30b6,"`use_revdep()` creates structure for use with revdepcheck package, the preferred way to run revdepchecks. (#33)",1,332,FALSE,NA
usethis,f6eaac5f603bafd30816afbe9b67827b,New `use_badge()` for adding any badge to a README. Now only prints a todo message if the badge does not already exist.,1,333,FALSE,NA
usethis,0fea6aa81614c296acff3f522481d397,`use_directory()` is now exported (#27).,1,334,FALSE,NA
usethis,b6a83cf2e6dacedddcdec157348c901a,Functions which require code to be copied now automatically put the code on the clipboard if it is available (#52).,1,335,FALSE,NA
usethis,a64426fa6049f5a6b52361095a37d829,`create_package()` no longer creates a dependency on the current version of R.,1,336,FALSE,NA
usethis,258d5a822e59444894b4568df9607f35,`use_build_ignore()` now strips trailing `/`,1,337,FALSE,NA
usethis,559f3de64da4bb9de737aedff05095e4,`use_git()` will restart RStudio if needed (and possible) (#42).,1,338,FALSE,NA
usethis,475a60b1d12dbcee48cc7846c13285d8,`use_github()` now has an organisation parameter so you can create repos in organisations (#4).,1,339,FALSE,NA
usethis,0cbff4ff0919b33381c58bfe2c708e41,"`use_template()` and `use_test()` now convert title to a slug that only contains lowercase letters, numbers, and `-`.",1,340,FALSE,NA
usethis,c5e171c38e5c98c76c9d775cce0c4205,`use_vignette()` now adds `*.html` and `*.R` to your `.gitgnore` so you don't accidentally add in compiled vignette products (#35).,1,341,FALSE,NA
usethis,1f505f4ceba9952b5562118d1f31fe15,"`use_travis_badge()` and `use_appveyor_badge()` are now exported functions, so they can be used even if ci was separately set up (#765, @​smwindecker).",1,342,FALSE,NA
vctrs,19816ee86ca7dcfd13e9db76a3468d21,Internal changes requested by CRAN around C level format strings (#1896).,1,1,FALSE,NA
vctrs,69496112fea0e8db7aeccda0a3726a9f,Fixed tests related to changes to `dim<-()` in R-devel (#1889).,1,2,FALSE,NA
vctrs,fe1cba6a341536cd73b060b4e80395e9,"Fixed a performance issue with `vec_c()` and ALTREP vectors (in particular, the new ALTREP list vectors in R-devel) (#1884).",1,3,FALSE,NA
vctrs,827b553d494353abdd774424a5759b97,Fixed an issue with complex vector tests related to changes in R-devel (#1883).,1,4,FALSE,NA
vctrs,93fb7250068738cd9dc6a92ba3ae60e6,Added a class to the `vec_locate_matches()` error that is thrown when an overflow would otherwise occur (#1845).,1,5,FALSE,NA
vctrs,5b8a765767583983ce36209529fe8a1d,Fixed an issue with `vec_rank()` and 0-column data frames (#1863).,1,6,FALSE,NA
vctrs,6deb6855a11b590cbd981a391977b045,"Fixed an issue where certain ALTREP row names were being materialized when passed to `new_data_frame()`. We've fixed this by removing a safeguard in `new_data_frame()` that performed a compatibility check when both `n` and `row.names` were provided. Because this is a low level function designed for performance, it is up to the caller to ensure these inputs are compatible (tidyverse/dplyr#6596).",1,7,FALSE,NA
vctrs,9cdd7092aa15344f20ecc5280994c6f0,Fixed an issue where `vec_set_*()` used with data frames could accidentally return an object with the type of the proxy rather than the type of the original inputs (#1837).,1,8,FALSE,NA
vctrs,32af455c4e1b7e35e0c04c618dfac646,Fixed a rare `vec_locate_matches()` bug that could occur when using a max/min `filter` (tidyverse/dplyr#6835).,1,9,FALSE,NA
vctrs,fa5fc032b558347c71ab9738423e14ac,Fixed conditional S3 registration to avoid a CRAN check NOTE that appears in R \>=4.3.0 (#1832).,1,10,FALSE,NA
vctrs,ffa816ea8e9152fd06065f3ed885236a,Fixed tests to maintain compatibility with the next version of waldo (#1829).,1,11,FALSE,NA
vctrs,2f747fc4851f404023cfa74c7adff417,Fixed a test related to `c.sfc()` changes in sf 1.0-10 (#1817).,1,12,FALSE,NA
vctrs,e5b4af5641ae5b15aa943a2cd6ae5bd6,"New `vec_run_sizes()` for computing the size of each run within a vector. It is identical to the `times` column from `vec_unrep()`, but is faster if you don't need the run key (#1210).",1,13,FALSE,NA
vctrs,ed20d229f8fd635a33197469aadbb020,"New `sizes` argument to `vec_chop()` which allows you to partition a vector using an integer vector describing the size of each expected slice. It is particularly useful in combination with `vec_run_sizes()` and `list_sizes()` (#1210, #1598).",1,14,FALSE,NA
vctrs,0ae25c1c41e5b108438773c35244530b,"New `obj_is_vector()`, `obj_check_vector()`, and `vec_check_size()` validation helpers. We believe these are a better approach to vector validation than `vec_assert()` and `vec_is()`, which have been marked as questioning because the semantics of their `ptype` arguments are hard to define and can often be replaced by `vec_cast()` or a type predicate function like `rlang::is_logical()` (#1784).",1,15,FALSE,NA
vctrs,ffbd3d3cae4515c32243c3568b95bec9,"`vec_is_list()` and `vec_check_list()` have been renamed to `obj_is_list()` and `obj_check_list()`, in line with the new `obj_is_vector()` helper. The old functions have been silently deprecated, but an official deprecation process will start in the next vctrs release (#1803).",1,16,FALSE,NA
vctrs,7bb5767972f661d273d267abab009ce8,"`vec_locate_matches()` gains a new `relationship` argument that holistically handles multiple matches between `needles` and `haystack`. In particular, `relationship = ""many-to-one""` replaces `multiple = ""error""` and `multiple = ""warning""`, which have been removed from the documentation and silently soft-deprecated. Official deprecation for those options will start in a future release (#1791).",1,17,FALSE,NA
vctrs,90d3127ca1bc304b874c8e311ce8b3c6,"`vec_locate_matches()` has changed its default `needles_arg` and `haystack_arg` values from `""""` to `""needles""` and `""haystack""`, respectively. This generally generates more informative error messages (#1792).",1,18,FALSE,NA
vctrs,2ac69d5187ad59213c45ae0c4c71b012,"`vec_chop()` has gained empty `...` between `x` and the optional `indices` argument. For backwards compatibility, supplying `vec_chop(x, indices)` without naming `indices` still silently works, but will be deprecated in a future release (#1813).",1,19,FALSE,NA
vctrs,bf90d28302895508bce4a86ff2de8be9,`vec_slice()` has gained an `error_call` argument (#1785).,1,20,FALSE,NA
vctrs,33b79a217e8dd838b0b7521cd7c6c985,"The `numeric_version` type from base R is now better supported in equality, comparison, and order based operations (tidyverse/dplyr#6680).",1,21,FALSE,NA
vctrs,69e8a285da49a18c69121833e4018959,R \>=3.5.0 is now explicitly required. This is in line with the tidyverse policy of supporting the 5 most recent versions of R.,1,22,FALSE,NA
vctrs,6f3ccc0e15e37ea142a6ae2892088c18,"New `vec_expand_grid()`, which is a lower level helper that is similar to `tidyr::expand_grid()` (#1325).",1,23,FALSE,NA
vctrs,3cddb8e9194967e115faea0aade0c4d2,"New `vec_set_intersect()`, `vec_set_difference()`, `vec_set_union()`, and `vec_set_symmetric_difference()` which compute set operations like `intersect()`, `setdiff()`, and `union()`, but the vctrs variants don't strip attributes and work with data frames (#1755, #1765).",1,24,FALSE,NA
vctrs,6dae5f27c95fc5c82fe259fa0aea0d27,`vec_identify_runs()` is now faster when used with data frames (#1684).,1,25,FALSE,NA
vctrs,c2405e65589d51b873bc1599fb908321,"The maximum load factor of the internal dictionary was reduced from 77% to 50%, which improves performance of functions like `vec_match()`, `vec_set_intersect()`, and `vec_unique()` in some cases (#1760).",1,26,FALSE,NA
vctrs,d5473ed674dfe9c2a351656655b0f2ca,Fixed a bug with the internal `vec_order_radix()` function related to matrix columns (#1753).,1,27,FALSE,NA
vctrs,93c666be9813379e862ffcde1c4b745c,Fix for CRAN checks.,1,28,FALSE,NA
vctrs,088e916a2eccbda961917f861eddb63a,vctrs is now compliant with `-Wstrict-prototypes` as requested by CRAN (#1729).,1,29,FALSE,NA
vctrs,5765a9566e561fb6ae53a6a567769c99,`vec_ptype2()` now consistently falls back to bare data frame in case of incompatible data frame subclasses. This is part of a general move towards relaxed coercion rules.,1,30,FALSE,NA
vctrs,cb1f0bad4eac434ec1be29233e3e8a53,"Common type and cast errors now inherit from `""vctrs_error_ptype2""` and `""vctrs_error_cast""` respectively. They are still both subclasses from `""vctrs_error_incompatible_type""` (which used to be their most specific class and is now a parent class).",1,31,FALSE,NA
vctrs,2d01386ecdac7ff4fdb7dc9f6f4960c3,New `list_all_size()` and `list_check_all_size()` to quickly determine if a list contains elements of a particular `size` (#1582).,1,32,FALSE,NA
vctrs,d60334657a05aab1d8219b34d85e06a5,`list_unchop()` has gained empty `...` to force optional arguments to be named (#1715).,1,33,FALSE,NA
vctrs,1bd3c2c412caa8954654f6bd6bd2d669,`vec_rep_each(times = 0)` now works correctly with logical vectors that are considered unspecified and with named vectors (#1673).,1,34,FALSE,NA
vctrs,5f931ded559cbb3fab275fb8cfff2e78,"`list_of()` was relaxed to make it easier to combine. It is now coercible with `list()` (#1161). When incompatible `list_of()` types are combined, the result is now a bare `list()`. Following this change, the role of `list_of()` is mainly to carry type information for potential optimisations, rather than to guarantee a certain type throughout an analysis.",1,35,FALSE,NA
vctrs,caef1c42a44ac48cdcbbce58c4a335bc,"`validate_list_of()` has been removed. It hasn't proven to be practically useful, and isn't used by any packages on CRAN (#1697).",1,36,FALSE,NA
vctrs,b02724a06bbae5ba141c0c363e29d068,"Directed calls to `vec_c()`, like `vec_c(.ptype = <type>)`, now mention the position of the problematic argument when there are cast errors (#1690).",1,37,FALSE,NA
vctrs,5e0a3171e575c8da6071ed6c5745fa26,`list_unchop()` no longer drops names in some cases when `indices` were supplied (#1689).,1,38,FALSE,NA
vctrs,c160cf564f8020d8583c4c220aec8722,"`""unique_quiet""` and `""universal_quiet""` are newly accepted by `vec_as_names(repair =)` and `vec_names2(repair =)`. These options exist to help users who call these functions indirectly, via another function which only exposes `repair` but not `quiet`. Specifying `repair = ""unique_quiet""` is like specifying `repair = ""unique"", quiet = TRUE`. When the `""*_quiet""` options are used, any setting of `quiet` is silently overridden (@​jennybc, #1629). `""unique_quiet""` and `""universal_quiet""` are also newly accepted for the name repair argument of several other functions that do not expose a `quiet` argument: `data_frame()`, `df_list()`, `vec_c()`, `list_unchop()`, `vec_interleave()`, `vec_rbind()`, and `vec_cbind()` (@​jennybc, #1716).",1,39,FALSE,NA
vctrs,48b25b0fb7d80434fbd472b0995950e1,"`list_unchop()` has gained `error_call` and `error_arg` arguments (#1641, #1692).",1,40,FALSE,NA
vctrs,ee6933441663a0817813542c0dd6dc39,"`vec_c()` has gained `.error_call` and `.error_arg` arguments (#1641, #1692).",1,41,FALSE,NA
vctrs,73d84725ff47c73d7d724c83c73d7193,"Improved the performance of list-of common type methods (#1686, #875).",1,42,FALSE,NA
vctrs,b8727f80c59af750025b6e996b2a77ad,The list-of method for `as_list_of()` now places the optional `.ptype` argument after the `...` (#1686).,1,43,FALSE,NA
vctrs,143b3c75672ccafc829c59e077c5e7b0,"`vec_rbind()` now applies `base::c()` fallback recursively within packed df-cols (#1331, #1462, #1640).",1,44,FALSE,NA
vctrs,0f8e46fdc5542beee24402024ee3b6ce,"`vec_c()`, `vec_unchop()`, and `vec_rbind()` now proxy and restore recursively (#1107). This prevents `vec_restore()` from being called with partially filled vectors and improves performance (#1217, #1496).",1,45,FALSE,NA
vctrs,ed303e1dce9f43e23b0b5e3c7e0e6631,New `vec_any_missing()` for quickly determining if a vector has any missing values (#1672).,1,46,FALSE,NA
vctrs,b9dcbd1261cc2cdcf99d7e6f84acff44,"`vec_equal_na()` has been renamed to `vec_detect_missing()` to align better with vctrs naming conventions. `vec_equal_na()` will stick around for a few minor versions, but has been formally soft-deprecated (#1672).",1,47,FALSE,NA
vctrs,90e9a6476e01b9df4eb15d18fe41cb05,`vec_c(outer = c(inner = 1))` now produces correct error messages (#522).,1,48,FALSE,NA
vctrs,5ceb6a9958e89bd08ed2c0da75726634,"If a data frame is returned as the proxy from `vec_proxy_equal()`, `vec_proxy_compare()`, or `vec_proxy_order()`, then the corresponding proxy function is now automatically applied recursively along all of the columns. Additionally, packed data frame columns will be unpacked, and 1 column data frames will be unwrapped. This ensures that the simplest possible types are provided to the native C algorithms, improving both correctness and performance (#1664).",1,49,FALSE,NA
vctrs,ec1ad363bfe2c9edff156753926f9427,"When used with record vectors, `vec_proxy_compare()` and `vec_proxy_order()` now call the correct proxy function while recursing over the fields (#1664).",1,50,FALSE,NA
vctrs,423cd18ce8c84cc81b4a59d9c3d4ef6e,The experimental function `vec_list_cast()` has been removed from the package (#1382).,1,51,FALSE,NA
vctrs,2e1c00d455bccebcc03803dfd9dbc66b,"Native classes like dates and datetimes now accept dimensions (#1290, #1329).",1,52,FALSE,NA
vctrs,6a8e9f9adb171abdbcd25852e97eb124,`vec_compare()` now throws a more informative error when attempting to compare complex vectors (#1655).,1,53,FALSE,NA
vctrs,4afa83117c840a13e641d26f71b36f97,"`vec_rep()` and friends gain `error_call`, `x_arg`, and `times_arg` arguments so they can be embedded in frontends (#1303).",1,54,FALSE,NA
vctrs,888e1e56f2061c6cae5d5762a7efe451,Record vectors now fail as expected when indexed along dimensions greater than 1 (#1295).,1,55,FALSE,NA
vctrs,45f22f334cf41f6fae414b4f56eaae72,`vec_order()` and `vec_sort()` now have `...` between the required and optional arguments to make them easier to extend (#1647).,1,56,FALSE,NA
vctrs,caa8983e08fff77673f23e4b7ff1b4d7,S3 vignette was extended to show how to make the polynomial class atomic instead of a list (#1030).,1,57,FALSE,NA
vctrs,802e5bffd1c19c03b7a770fdbeb96c0f,The experimental `n` argument of `vec_restore()` has been removed. It was only used to inform on the size of data frames in case a bare list is restored. It is now expected that bare lists be initialised to data frame so that the size is carried through row attributes. This makes the generic simpler and fixes some performance issues (#650).,1,58,FALSE,NA
vctrs,8c33fa78b46ba4da0896bc0d5c94c3d7,The `anyNA()` method for `vctrs_vctr` (and thus `vctrs_list_of`) now supports the `recursive` argument (#1278).,1,59,FALSE,NA
vctrs,9e6c0dcf75e97639f75413bf0b79159e,"`vec_as_location()` and `num_as_location()` have gained a `missing = ""remove""` option (#1595).",1,60,FALSE,NA
vctrs,b319d3cd2e7cd4ac29123ecf7b3dc5b2,"`vec_as_location()` no longer matches `NA_character_` and `""""` indices if those invalid names appear in `names` (#1489).",1,61,FALSE,NA
vctrs,f32843b897d6808c7bbdbc0bf498b760,"`vec_unchop()` has been renamed to `list_unchop()` to better indicate that it requires list input. `vec_unchop()` will stick around for a few minor versions, but has been formally soft-deprecated (#1209).",1,62,FALSE,NA
vctrs,5ccbaca4faa8058af32c194cc178b29c,Lossy cast errors during scalar subscript validation now have the correct message (#1606).,1,63,FALSE,NA
vctrs,5c0b3388fd16d33239a72b02a644272f,Fixed confusing error message with logical `[[` subscripts (#1608).,1,64,FALSE,NA
vctrs,b446f27b901ac66704ec98c66ecab9d0,New `vec_rank()` to compute various types of sample ranks (#1600).,1,65,FALSE,NA
vctrs,96aacabd4674a9ceee1529899c4d9dba,"`num_as_location()` now throws the right error when there are out-of-bounds negative values and `oob = ""extend""` and `negative = ""ignore""` are set (#1614, #1630).",1,66,FALSE,NA
vctrs,69f73f7ea1fe16bce70392089a4876a2,"`num_as_location()` now works correctly when a combination of `zero = ""error""` and `negative = ""invert""` are used (#1612).",1,67,FALSE,NA
vctrs,c0b9572e92a7117cd1acfc3c0eb7f392,`data_frame()` and `df_list()` have gained `.error_call` arguments (#1610).,1,68,FALSE,NA
vctrs,a2adf0d7f5acd13ef94b6b98dbeb6ae3,`vec_locate_matches()` has gained an `error_call` argument (#1611).,1,69,FALSE,NA
vctrs,10f413977bf771b95f78d06a034a577c,"`""select""` and `""relocate""` have been added as valid subscript actions to support tidyselect and dplyr (#1596).",1,70,FALSE,NA
vctrs,31e472f957338d14f4ad4fa40ee6d061,"`num_as_location()` has a new `oob = ""remove""` argument to remove out-of-bounds locations (#1595).",1,71,FALSE,NA
vctrs,9e7edcb2017c965c33f521427a48c892,`vec_rbind()` and `vec_cbind()` now have `.error_call` arguments (#1597).,1,72,FALSE,NA
vctrs,cec582183f40ca1be0b5f1ca018d06c6,`df_list()` has gained a new `.unpack` argument to optionally disable data frame unpacking (#1616).,1,73,FALSE,NA
vctrs,396ea4a3dd7b04c32404e97e3050d2e1,"`vec_check_list(arg = """")` now throws the correct error (#1604).",1,74,FALSE,NA
vctrs,58ab030d97e6693edb5894a1bdc7fc04,"The `difftime` to `difftime` `vec_cast()` method now standardizes the internal storage type to double, catching potentially corrupt integer storage `difftime` vectors (#1602).",1,75,FALSE,NA
vctrs,f17290e5d5065cfc7238aea0bc2bfd51,`vec_as_location2()` and `vec_as_subscript2()` more correctly utilize their `call` arguments (#1605).,1,76,FALSE,NA
vctrs,3caa7aca557a0b8d45598e91469a6203,"`vec_count(sort = ""count"")` now uses a stable sorting method. This ensures that different keys with the same count are sorted in the order that they originally appeared in (#1588).",1,77,FALSE,NA
vctrs,de2c22ca6d38264fc4efce6ae33bbb25,Lossy cast error conditions now show the correct message when `conditionMessage()` is called on them (#1592).,1,78,FALSE,NA
vctrs,2ce3902d17ae071fd11c5f96e074a3cc,Fixed inconsistent reporting of conflicting inputs in `vec_ptype_common()` (#1570).,1,79,FALSE,NA
vctrs,656456e5160f8f8cc85f3fa30b347175,`vec_ptype_abbr()` and `vec_ptype_full()` now suffix 1d arrays with `[1d]`.,1,80,FALSE,NA
vctrs,c1f9b5e53d969b8ec6021082b6074a14,`vec_ptype_abbr()` and `vec_ptype_full()` methods are no longer inherited (#1549).,1,81,FALSE,NA
vctrs,b3371e17d105fc4b1413be7fb14bd1b6,`vec_cast()` now throws the correct error when attempting to cast a subclassed data frame to a non-data frame type (#1568).,1,82,FALSE,NA
vctrs,7b092fc3c274a5728816899efafd0f1a,`vec_locate_matches()` now uses a more conservative heuristic when taking the joint ordering proxy. This allows it to work correctly with sf's sfc vectors and the classes from the bignum package (#1558).,1,83,FALSE,NA
vctrs,3aece2e2af8b68c45d25dc367390523d,"An sfc method for `vec_proxy_order()` was added to better support the sf package. These vectors are generally treated like list-columns even though they don't explicitly have a `""list""` class, and the `vec_proxy_order()` method now forwards to the list method to reflect that (#1558).",1,84,FALSE,NA
vctrs,0ccca7e5f73283ba0ca1e4550a5733b1,`vec_proxy_compare()` now works correctly for raw vectors wrapped in `I()`. `vec_proxy_order()` now works correctly for raw and list vectors wrapped in `I()` (#1557).,1,85,FALSE,NA
vctrs,a6a1894f07dad9863eb4086415c29c5b,HTML documentation fixes for CRAN checks.,1,86,FALSE,NA
vctrs,4ca64e3ca2f07e4d35042afb96e109eb,"OOB errors with `character()` indexes use ""that don't exist"" instead of ""past the end"" (#1543).",1,87,FALSE,NA
vctrs,3541c79afba3aacda1420081319fe58f,"Fixed memory protection issues related to common type determination (#1551, tidyverse/tidyr#1348).",1,88,FALSE,NA
vctrs,9b004a8d447e6be6ba1b8d3071be41f2,"New experimental `vec_locate_sorted_groups()` for returning the locations of groups in sorted order. This is equivalent to, but faster than, calling `vec_group_loc()` and then sorting by the `key` column of the result.",1,89,FALSE,NA
vctrs,38358afb7600b7f8a05f2ded215e1a07,"New experimental `vec_locate_matches()` for locating where each observation in one vector matches one or more observations in another vector. It is similar to `vec_match()`, but returns all matches by default (rather than just the first), and can match on binary conditions other than equality. The algorithm is inspired by data.table's very fast binary merge procedure.",1,90,FALSE,NA
vctrs,4ed23d928963a64dc2e0e054581b60f4,"The `vec_proxy_equal()`, `vec_proxy_compare()`, and `vec_proxy_order()` methods for `vctrs_rcrd` are now applied recursively over the fields (#1503).",1,91,FALSE,NA
vctrs,28a299957003f5c996a72671972eae64,Lossy cast errors now inherit from incompatible type errors.,1,92,FALSE,NA
vctrs,dcd025032e64eafc2c252a9a8f9c6040,`vec_is_list()` now returns `TRUE` for `AsIs` lists (#1463).,1,93,FALSE,NA
vctrs,35c25a472a8e1a960dec0382d5d50ee0,"`vec_assert()`, `vec_ptype2()`, `vec_cast()`, and `vec_as_location()` now use `caller_arg()` to infer a default `arg` value from the caller. This may result in unhelpful arguments being mentioned in error messages. In general, you should consider snapshotting vctrs error messages thrown in your package and supply `arg` and `call` arguments if the error context is not adequately reported to your users.",1,94,FALSE,NA
vctrs,38f2d85b4c2dd64beb9b3c159a11a251,"`vec_ptype_common()`, `vec_cast_common()`, `vec_size_common()`, and `vec_recycle_common()` gain `call` and `arg` arguments for specifying an error context.",1,95,FALSE,NA
vctrs,914518ba538cd57bf199a0b99cdc070c,`vec_compare()` can now compare zero column data frames (#1500).,1,96,FALSE,NA
vctrs,7ded8bdfa3aa6d0869fe94aa5ec26b67,`new_data_frame()` now errors on negative and missing `n` values (#1477).,1,97,FALSE,NA
vctrs,6ccca2b92bec75a0c16d60196586ac08,`vec_order()` now correctly orders zero column data frames (#1499).,1,98,FALSE,NA
vctrs,dcd601b8ddd1803ca6e96ea8b801f6ce,vctrs now depends on cli to help with error message generation.,1,99,FALSE,NA
vctrs,1ff8e47220bf5bc7dd4d1151bb1ac0ff,"New `vec_check_list()` and `list_check_all_vectors()` input checkers, and an accompanying `list_all_vectors()` predicate.",1,100,FALSE,NA
vctrs,56659e3cb36a8d755c233535de911220,"New `vec_interleave()` for combining multiple vectors together, interleaving their elements in the process (#1396).",1,101,FALSE,NA
vctrs,09c201806e1a77c4ea117a5c2bf7732c,`vec_equal_na(NULL)` now returns `logical(0)` rather than erroring (#1494).,1,102,FALSE,NA
vctrs,f3b9457abc3f3b663600ea3ed4433bb9,"`vec_as_location(missing = ""error"")` now fails with `NA` and `NA_character_` in addition to `NA_integer_` (#1420, @​krlmlr).",1,103,FALSE,NA
vctrs,a571c1d7b54712f48f6641916834cd59,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:",1,104,FALSE,NA
vctrs,a571c1d7b54712f48f6641916834cd59,• `vec_cast()` and `vec_ptype2()`,2,105,FALSE,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:"
vctrs,a571c1d7b54712f48f6641916834cd59,• `vec_default_cast()` and `vec_default_ptype2()`,2,106,FALSE,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:"
vctrs,a571c1d7b54712f48f6641916834cd59,• `vec_assert()`,2,107,FALSE,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:"
vctrs,a571c1d7b54712f48f6641916834cd59,• `vec_as_names()`,2,108,FALSE,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:"
vctrs,a571c1d7b54712f48f6641916834cd59,• `stop_` constructors like `stop_incompatible_type()`,2,109,FALSE,"Starting with rlang 1.0.0, errors are displayed with the contextual function call. Several vctrs operations gain a `call` argument that makes it possible to report the correct context in error messages. This concerns:"
vctrs,d9aafbd04adeac904d1040222cd88ec7,"Note that default `vec_cast()` and `vec_ptype2()` methods automatically support this if they pass `...` to the corresponding `vec_default_` functions. If you throw a non-internal error from a non-default method, add a `call = caller_env()` argument in the method and pass it to `rlang::abort()`.",1,109,FALSE,NA
vctrs,89540f4d4ffe49d791063f44610914bf,"If `NA_character_` is specified as a name for `vctrs_vctr` objects, it is now automatically repaired to `""""` (#780).",1,110,FALSE,NA
vctrs,e4cebda895db9e8541e056cd7cacbb47,"`""""` is now an allowed name for `vctrs_vctr` objects and all its subclasses (`vctrs_list_of` in particular) (#780).",1,111,FALSE,NA
vctrs,d117a108a66c5e1af910a83d4204bb09,`list_of()` is now much faster when many values are provided.,1,112,FALSE,NA
vctrs,d24c7d7f268ce72afe8e75e1e21781a4,"`vec_as_location()` evaluates `arg` only in case of error, for performance (#1150, @​krlmlr).",1,113,FALSE,NA
vctrs,9e33b46db2a3981f1fb1ce7b1b9ae72d,"`levels.vctrs_vctr()` now returns `NULL` instead of failing (#1186, @​krlmlr).",1,114,FALSE,NA
vctrs,938b95836beb2eb5360dfc0a781917fe,`vec_assert()` produces a more informative error when `size` is invalid (#1470).,1,115,FALSE,NA
vctrs,159be0606c681957f0388a7d21538dce,`vec_duplicate_detect()` is a bit faster when there are many unique values.,1,116,FALSE,NA
vctrs,a76cdcbf6e90d45bea00e2250ce119a0,"`vec_proxy_order()` is described in `vignette(""s3-vectors"")` (#1373, @​krlmlr).",1,117,FALSE,NA
vctrs,0d7c64389909d56e44a7f36500092d26,"`vec_chop()` now materializes ALTREP vectors before chopping, which is more efficient than creating many small ALTREP pieces (#1450).",1,118,FALSE,NA
vctrs,3ff6dd8b465fa4d0c4f9aa34c3d5a0d2,New `list_drop_empty()` for removing empty elements from a list (#1395).,1,119,FALSE,NA
vctrs,303e790e0c88bb1cf52779c5718c84b3,`list_sizes()` now propagates the names of the list onto the result.,1,120,FALSE,NA
vctrs,b2a270009177f3ff87993957ecbaca70,"Name repair messages are now signaled by `rlang::names_inform_repair()`. This means that the messages are now sent to stdout by default rather than to stderr, resulting in prettier messages. Additionally, name repair messages can now be silenced through the global option `rlib_name_repair_verbosity`, which is useful for testing purposes. See `?names_inform_repair` for more information (#1429).",1,121,FALSE,NA
vctrs,372174dd4e5b365e16880d05d9646b2a,"`vctrs_vctr` methods for `na.omit()`, `na.exclude()`, and `na.fail()` have been added (#1413).",1,122,FALSE,NA
vctrs,f93c0f098e2052bf09ae66187798223e,`vec_init()` is now slightly faster (#1423).,1,123,FALSE,NA
vctrs,13144bb4f9dacc8efe69ef7e4d2c0681,`vec_set_names()` no longer corrupts `vctrs_rcrd` types (#1419).,1,124,FALSE,NA
vctrs,8ceabe077d8bc47b58388ebd9f9e5fe7,"`vec_detect_complete()` now computes completeness for `vctrs_rcrd` types in the same way as data frames, which means that if any field is missing, the entire record is considered incomplete (#1386).",1,125,FALSE,NA
vctrs,9a6588956221d72410415b435d056627,The `na_value` argument of `vec_order()` and `vec_sort()` now correctly respect missing values in lists (#1401).,1,126,FALSE,NA
vctrs,a234b9a1ac69153a56cf4a66fa2d4551,"`vec_rep()` and `vec_rep_each()` are much faster for `times = 0` and `times = 1` (@​mgirlich, #1392).",1,127,FALSE,NA
vctrs,5e2a6027e6bbfbde8c534e57cc53c353,`vec_equal_na()` and `vec_fill_missing()` now work with integer64 vectors (#1304).,1,128,FALSE,NA
vctrs,90c2d22b079ef9784a36869980424bdd,The `xtfrm()` method for vctrs_vctr objects no longer accidentally breaks ties (#1354).,1,129,FALSE,NA
vctrs,885412e5ded28bef31129673f60289e6,"`min()`, `max()` and `range()` no longer throw an error if `na.rm = TRUE` is set and all values are `NA` (@​gorcha, #1357). In this case, and where an empty input is given, it will return `Inf`/`-Inf`, or `NA` if `Inf` can't be cast to the input type.",1,130,FALSE,NA
vctrs,ff034610b3be05bcde85ef7da7e8dcfa,"`vec_group_loc()`, used for grouping in dplyr, now correctly handles vectors with billions of elements (up to `.Machine$integer.max`) (#1133).",1,131,FALSE,NA
vctrs,7d17a25547ba30653156405b198c3f91,Compatibility with next version of rlang.,1,132,FALSE,NA
vctrs,956a5a75ac8be7672c399156a1e48537,"`vec_ptype_abbr()` gains arguments to control whether to indicate named vectors with a prefix (`prefix_named`) and indicate shaped vectors with a suffix (`suffix_shape`) (#781, @​krlmlr).",1,133,FALSE,NA
vctrs,133c33830302b2c4e90b988bbfca5332,"`vec_ptype()` is now an optional *performance* generic. It is not necessary to implement, but if your class has a static prototype, you might consider implementing a custom `vec_ptype()` method that returns a constant to improve performance in some cases (such as common type imputation).",1,134,FALSE,NA
vctrs,c2a770026018f607f40639e11e9c8bc4,"New `vec_detect_complete()`, inspired by `stats::complete.cases()`. For most vectors, this is identical to `!vec_equal_na()`. For data frames and matrices, this detects rows that only contain non-missing values.",1,135,FALSE,NA
vctrs,2b44ff97603f85bf57fbed2ee3aa72a8,`vec_order()` can now order complex vectors (#1330).,1,136,FALSE,NA
vctrs,1d87615af6faf115bd7a05ae68cde7c9,Removed dependency on digest in favor of `rlang::hash()`.,1,137,FALSE,NA
vctrs,edf5bbfe81a8d26bfdaed92316d90aab,Fixed an issue where `vctrs_rcrd` objects were not being proxied correctly when used as a data frame column (#1318).,1,138,FALSE,NA
vctrs,23a1974fc7e9fde17255c0d7c6e49d6b,"`register_s3()` is now licensed with the ""unlicense"" which makes it very clear that it's fine to copy and paste into your own package (@​maxheld83, #1254).",1,139,FALSE,NA
vctrs,09605f111a8e359a240ae8210330e41a,Fixed an issue with tibble 3.0.0 where removing column names with `names(x) <- NULL` is now deprecated (#1298).,1,140,FALSE,NA
vctrs,84f5f7e309fe24e4b9797e9c8e2b3f99,Fixed a GCC 11 issue revealed by CRAN checks.,1,141,FALSE,NA
vctrs,4fc29466b38d22d628b9f2d912b228af,"New experimental `vec_fill_missing()` for filling in missing values with the previous or following value. It is similar to `tidyr::fill()`, but also works with data frames and has an additional `max_fill` argument to limit the number of sequential missing values to fill.",1,142,FALSE,NA
vctrs,c78e7ee867f70a291d180691d2a4515d,"New `vec_unrep()` to compress a vector with repeated values. It is very similar to run length encoding, and works nicely alongside `vec_rep_each()` as a way to invert the compression.",1,143,FALSE,NA
vctrs,40940fef247d8d1c764063a225bccbc6,`vec_cbind()` with only empty data frames now preserves the common size of the inputs in the result (#1281).,1,144,FALSE,NA
vctrs,75e897186b94b04388d6b277e9ef96b7,`vec_c()` now correctly returns a named result with named empty inputs (#1263).,1,145,FALSE,NA
vctrs,e8c273731c0082948ff80efbb3c6f7f2,vctrs has been relicensed as MIT (#1259).,1,146,FALSE,NA
vctrs,69ead551838264ecce5a3b1dd95609e6,"Functions that make comparisons within a single vector, such as `vec_unique()`, or between two vectors, such as `vec_match()`, now convert all character input to UTF-8 before making comparisons (#1246).",1,147,FALSE,NA
vctrs,b63f9acd479572c0a81cbb886bd2b7af,New `vec_identify_runs()` which returns a vector of identifiers for the elements of `x` that indicate which run of repeated values they fall in (#1081).,1,148,FALSE,NA
vctrs,54751bcaca7be6ca8fae3f89a6850e34,Fixed an encoding translation bug with lists containing data frames which have columns where `vec_size()` is different from the low level `Rf_length()` (#1233).,1,149,FALSE,NA
vctrs,a47d3f40af3cac2ca968e60ab446d1a9,Fixed a GCC sanitiser error revealed by CRAN checks.,1,150,FALSE,NA
vctrs,b0687767e927eb3ff8072b54d20a5133,The `table` class is now implemented as a wrapper type that delegates its coercion methods. It used to be restricted to integer tables (#1190).,1,151,FALSE,NA
vctrs,40694170f8c4af281d62cc65a870a2db,Named one-dimensional arrays now behave consistently with simple vectors in `vec_names()` and `vec_rbind()`.,1,152,FALSE,NA
vctrs,09b9335794a6b3f528e169d141b372c2,"`new_rcrd()` now uses `df_list()` to validate the fields. This makes it more flexible as the fields can now be of any type supported by vctrs, including data frames.",1,153,FALSE,NA
vctrs,e2d5654684925afcae7355ddebeffb06,Thanks to the previous change the `[[` method of records now preserves list fields (#1205).,1,154,FALSE,NA
vctrs,52c99522ef21910608c594709e22f6e3,"`vec_data()` now preserves data frames. This is consistent with the notion that data frames are a primitive vector type in vctrs. This shouldn't affect code that uses `[[` and `length()` to manipulate the data. On the other hand, the vctrs primitives like `vec_slice()` will now operate rowwise when `vec_data()` returns a data frame.",1,155,FALSE,NA
vctrs,9e0a66d0d5be8f072853d62c923496af,"`outer` is now passed unrecycled to name specifications. Instead, the return value is recycled (#1099).",1,156,FALSE,NA
vctrs,16662fce496802af6ee783c9b7539f85,Name specifications can now return `NULL`. The names vector will only be allocated if the spec function returns non-`NULL` during the concatenation. This makes it possible to ignore outer names without having to create an empty names vector when there are no inner names:,1,157,FALSE,NA
vctrs,16662fce496802af6ee783c9b7539f85,"```
zap_outer_spec <- function(outer, inner) if (is_character(inner)) inner

# `NULL` names rather than a vector of """"
names(vec_c(a = 1:2, .name_spec = zap_outer_spec))
#> NULL

# Names are allocated when inner names exist
names(vec_c(a = 1:2, c(b = 3L), .name_spec = zap_outer_spec))
#> [1] """"  """"  ""b""
```",1,158,TRUE,NA
vctrs,b4da2a1fd6548112499b6a0a2afbb46f,Fixed several performance issues in `vec_c()` and `vec_unchop()` with named vectors.,1,159,FALSE,NA
vctrs,5ee94e43ad070e5d9444fee6841347cf,The restriction that S3 lists must have a list-based proxy to be considered lists by `vec_is_list()` has been removed (#1208).,1,160,FALSE,NA
vctrs,f7c0ffb7eb16972441bcf64ed396d5f0,"New performant `data_frame()` constructor for creating data frames in a way that follows tidyverse semantics. Among other things, inputs are recycled using tidyverse recycling rules, strings are never converted to factors, list-columns are easier to create, and unnamed data frame input is automatically spliced.",1,161,FALSE,NA
vctrs,fed4812c8ed4f1fed788b8db6a324fb4,"New `df_list()` for safely and consistently constructing the data structure underlying a data frame, a named list of equal-length vectors. It is useful in combination with `new_data_frame()` for creating user-friendly constructors for data frame subclasses that use the tidyverse rules for recycling and determining types.",1,162,FALSE,NA
vctrs,e63df1f06cc24c6f163aff7cc70bfb69,Fixed performance issue with `vec_order()` on classed vectors which affected `dplyr::group_by()` (tidyverse/dplyr#5423).,1,163,FALSE,NA
vctrs,939cce0b0d1285769e22c7ed64abeb74,`vec_set_names()` no longer alters the input in-place (#1194).,1,164,FALSE,NA
vctrs,8475d88b31dcc94470fa1a2f3b4e9c51,"New `vec_proxy_order()` that provides an ordering proxy for use in `vec_order()` and `vec_sort()`. The default method falls through to `vec_proxy_compare()`. Lists are special cased, and return an integer vector proxy that orders by first appearance.",1,165,FALSE,NA
vctrs,cc3b088cc51a314245167f74845e6bca,List columns in data frames are no longer comparable through `vec_compare()`.,1,166,FALSE,NA
vctrs,67e899b1f0d59777189573192d9c8c43,The experimental `relax` argument has been removed from `vec_proxy_compare()`.,1,167,FALSE,NA
vctrs,9be4688a0078660c971818ecc82145fe,"Fixed a performance issue in `bind_rows()` with S3 columns (#1122, #1124, #1151, tidyverse/dplyr#5327).",1,168,FALSE,NA
vctrs,5a3a61ba04c68ebcf5a70a61518e1aa2,`vec_slice()` now checks sizes of data frame columns in case the data structure is corrupt (#552).,1,169,FALSE,NA
vctrs,5a727f81e4501991b3030f5f5e6473a4,The native routines in vctrs now dispatch and evaluate in the vctrs namespace. This improves the continuity of evaluation in backtraces.,1,170,FALSE,NA
vctrs,e135ce93994025704b525cb5d8db8324,`new_data_frame()` is now twice as fast when `class` is supplied.,1,171,FALSE,NA
vctrs,a9afd5ba1087c984ef0a9eb19d549f41,"New `vec_names2()`, `vec_names()` and `vec_set_names()` (#1173).",1,172,FALSE,NA
vctrs,42e19a339141dabcc0587d861995bac8,`vec_slice()` no longer restores attributes of foreign objects for which a `[` method exist. This fixes an issue with `ts` objects which were previously incorrectly restored.,1,173,FALSE,NA
vctrs,38b4d6600261640c3f44495d413aa89f,"The `as.list()` method for `vctrs_rcrd` objects has been removed in favor of directly using the method for `vctrs_vctr`, which calls `vec_chop()`.",1,174,FALSE,NA
vctrs,04e70f150a1011b5abc965d247c23455,`vec_c()` and `vec_rbind()` now fall back to `base::c()` if the inputs have a common class hierarchy for which a `c()` method is implemented but no self-to-self `vec_ptype2()` method is implemented.,1,175,FALSE,NA
vctrs,53458c5b7c647ddd3a26c66589a9d7a1,`vec_rbind()` now internally calls `vec_proxy()` and `vec_restore()` on the data frame common type that is used to create the output (#1109).,1,176,FALSE,NA
vctrs,19b0bf93af793a1c80c72d802b4d6f76,"`vec_as_location2(""0"")` now works correctly (#1131).",1,177,FALSE,NA
vctrs,a73483f3cdda270c8648b07b6b0bc74c,`?reference-faq-compatibility` is a new reference guide on vctrs primitives. It includes an overview of the fallbacks to base R generics implemented in vctrs for compatibility with existing classes.,1,178,FALSE,NA
vctrs,b0f5e0d9bb895c671c12254ea298e93c,"The documentation of vctrs functions now includes a Dependencies section to reference which other vctrs operations are called from that function. By following the dependencies links recursively, you will find the vctrs primitives on which an operation relies.",1,179,FALSE,NA
vctrs,204982293345aef0a1a16adea9c2405c,Fixed type declaration mismatches revealed by LTO build.,1,180,FALSE,NA
vctrs,980c248312d4b71fc0040ed9f90d962c,Fixed r-devel issue with new `c.factor()` method.,1,181,FALSE,NA
vctrs,9765b55f8061112d6819e6f5e87b0c25,https://vctrs.r-lib.org/reference/theory-faq-coercion.html for an overview of the coercion mechanism in vctrs.,1,182,FALSE,NA
vctrs,44596794e03ca9d41818d815ab477334,https://vctrs.r-lib.org/reference/howto-faq-coercion.html for a practical guide about implementing methods for vectors.,1,183,FALSE,NA
vctrs,b638aab509a4b4c4636256372391eb47,https://vctrs.r-lib.org/reference/howto-faq-coercion-data-frame.html for a practical guide about implementing methods for data frames.,1,184,FALSE,NA
vctrs,b08e24a93c8303d79c598b895dc18a03,"`""Can't convert <character> to <list>.""` `vec_cast()` no longer converts to list. Use `vec_chop()` or `as.list()` instead.",1,185,FALSE,NA
vctrs,8ee9ae960e33e31bfdb73ac55824e469,"`""Can't convert <integer> to <character>.""` `vec_cast()` no longer converts to character. Use `as.character()`to deparse objects.",1,186,FALSE,NA
vctrs,bec4455c67013c3980459aeb70ac5ace,"`""names for target but not for current""` Names of list-columns are now preserved by `vec_rbind()`. Adjust tests accordingly.",1,187,FALSE,NA
vctrs,98f07dcfacbbd19f94ac7eeb8498000b,"Double-dispatch methods for `vec_ptype2()` and `vec_cast()` are no longer inherited (#710). Class implementers must implement one set of methods for each compatible class. For example, a tibble subclass no longer inherits from the `vec_ptype2()` methods between `tbl_df` and `data.frame`. This means that you explicitly need to implement `vec_ptype2()` methods with `tbl_df` and `data.frame`. This change requires a bit more work from class maintainers but is safer because the coercion hierarchies are generally different from class hierarchies. See the S3 dispatch section of `?vec_ptype2` for more information.",1,188,FALSE,NA
vctrs,f4dd744b037608d89df30a09fe3ad4d6,"`vec_cast()` is now restricted to the same conversions as `vec_ptype2()` methods (#606, #741). This change is motivated by safety and performance:",1,189,FALSE,NA
vctrs,f4dd744b037608d89df30a09fe3ad4d6,• It is generally sloppy to generically convert arbitrary inputs to one type. Restricted coercions are more predictable and allow your code to fail earlier when there is a type issue.,2,190,FALSE,"`vec_cast()` is now restricted to the same conversions as `vec_ptype2()` methods (#606, #741). This change is motivated by safety and performance:"
vctrs,f4dd744b037608d89df30a09fe3ad4d6,"• When unrestricted conversions are useful, this is generally towards a known type. For example, `glue::glue()` needs to convert arbitrary inputs to the known character type. In this case, using double dispatch instead of a single dispatch generic like `as.character()` is wasteful.",2,191,FALSE,"`vec_cast()` is now restricted to the same conversions as `vec_ptype2()` methods (#606, #741). This change is motivated by safety and performance:"
vctrs,f4dd744b037608d89df30a09fe3ad4d6,"• To implement the useful semantics of coercible casts (already used in `vec_assign()`), two double dispatch were needed. Now it can be done with one double dispatch by calling `vec_cast()` directly.",2,192,FALSE,"`vec_cast()` is now restricted to the same conversions as `vec_ptype2()` methods (#606, #741). This change is motivated by safety and performance:"
vctrs,54b1d4ad8eaeedfc828083dc32c8f85f,"`stop_incompatible_cast()` now throws an error of class `vctrs_error_incompatible_type` rather than `vctrs_error_incompatible_cast`. This means that `vec_cast()` also throws errors of this class, which better aligns it with `vec_ptype2()` now that they are restricted to the same conversions.",1,193,FALSE,NA
vctrs,6fa7025ff385ee548008b13dea4663a6,The `y` argument of `stop_incompatible_cast()` has been renamed to `to` to better match `to_arg`.,1,194,FALSE,NA
vctrs,dec8b8267df18ceef760d4823390abd6,Double-dispatch methods for `vec_ptype2()` and `vec_cast()` are now easier to implement. They no longer need any the boiler plate. Implementing a method for classes `foo` and `bar` is now as simple as:,1,195,FALSE,NA
vctrs,dec8b8267df18ceef760d4823390abd6,"```
#' @​export
vec_ptype2.foo.bar <- function(x, y, ...) new_foo()
```",1,196,TRUE,NA
vctrs,dec8b8267df18ceef760d4823390abd6,"vctrs also takes care of implementing the default and unspecified methods. If you have implemented these methods, they are no longer called and can now be removed. One consequence of the new dispatch mechanism is that `NextMethod()` is now completely unsupported. This is for the best as it never worked correctly in a double-dispatch setting. Parent methods must now be called manually.",1,196,FALSE,NA
vctrs,7e7dadad69ea6d56c94cce07ff4a2bce,`vec_ptype2()` methods now get zero-size prototypes as inputs. This guarantees that methods do not peek at the data to determine the richer type.,1,197,FALSE,NA
vctrs,e7791b48eadbb3a08a5758e87c70566c,"`vec_is_list()` no longer allows S3 lists that implement a `vec_proxy()` method to automatically be considered lists. A S3 list must explicitly inherit from `""list""` in the base class to be considered a list.",1,198,FALSE,NA
vctrs,198dad160201d7aba0ac48ea0a4ebf96,`vec_restore()` no longer restores row names if the target is not a data frame. This fixes an issue where `POSIXlt` objects would carry a `row.names` attribute after a proxy/restore roundtrip.,1,199,FALSE,NA
vctrs,853edb8d3c69517ff5543add50f1c350,`vec_cast()` to and from data frames preserves the row names of inputs.,1,200,FALSE,NA
vctrs,a9d6fe50ac6c0aec6847cbaf2f9088dd,"The internal function `vec_names()` now returns row names if the input is a data frame. Similarly, `vec_set_names()` sets row names on data frames. This is part of a general effort at making row names the vector names of data frames in vctrs. If necessary, the row names are repaired verbosely but without error to make them unique. This should be a mostly harmless change for users, but it could break unit tests in packages if they make assumptions about the row names.",1,201,FALSE,NA
vctrs,0fc989386c0ef7a093f2047f3e70b85e,"With the double dispatch changes, the coercion methods are no longer inherited from parent classes. This is because the coercion hierarchy is in principle different from the S3 hierarchy. A consequence of this change is that subclasses that don't implement coercion methods are now in principle incompatible. This is particularly problematic with subclasses of data frames for which throwing incompatible errors would be too incovenient for users. To work around this, we have implemented a fallback to the relevant base data frame class (either `data.frame` or `tbl_df`) in coercion methods (#981). This fallback is silent unless you set the `vctrs:::warn_on_fallback` option to `TRUE`. In the future we may extend this fallback principle to other base types when they are explicitly included in the class vector (such as `""list""`).",1,202,FALSE,NA
vctrs,c1cee24eda714099154e1f3575b7d32f,"Improved support for foreign classes in the combining operations `vec_c()`, `vec_rbind()`, and `vec_unchop()`. A foreign class is a class that doesn't implement `vec_ptype2()`. When all the objects to combine have the same foreign class, one of these fallbacks is invoked:",1,203,FALSE,NA
vctrs,c1cee24eda714099154e1f3575b7d32f,"• If the class implements a `base::c()` method, the method is used for the combination. (FIXME: `vec_rbind()` currently doesn't use this fallback.)",2,204,FALSE,"Improved support for foreign classes in the combining operations `vec_c()`, `vec_rbind()`, and `vec_unchop()`. A foreign class is a class that doesn't implement `vec_ptype2()`. When all the objects to combine have the same foreign class, one of these fallbacks is invoked:"
vctrs,c1cee24eda714099154e1f3575b7d32f,"• Otherwise if the objects have identical attributes and the same base type, we consider them to be compatible. The vectors are concatenated and the attributes are restored (#776).",2,205,FALSE,"Improved support for foreign classes in the combining operations `vec_c()`, `vec_rbind()`, and `vec_unchop()`. A foreign class is a class that doesn't implement `vec_ptype2()`. When all the objects to combine have the same foreign class, one of these fallbacks is invoked:"
vctrs,acae2219ceeccce67b5d311e966ff120,"These fallbacks do not make your class completely compatible with vctrs-powered packages, but they should help in many simple cases.",1,205,FALSE,NA
vctrs,230e983ebe6e9449147e0e64090774f2,`vec_c()` and `vec_unchop()` now fall back to `base::c()` for S4 objects if the object doesn't implement `vec_ptype2()` but sets an S4 `c()` method (#919).,1,206,FALSE,NA
vctrs,323752a4983e41870d57293c0abe71d9,"`vec_rbind()` and `vec_c()` with data frame inputs now consistently preserve the names of list-columns, df-columns, and matrix-columns (#689). This can cause some false positives in unit tests, if they are sensitive to internal names (#1007).",1,207,FALSE,NA
vctrs,c8710b64602e7f853d1cbc370824320d,`vec_rbind()` now repairs row names silently to avoid confusing messages when the row names are not informative and were not created on purpose.,1,208,FALSE,NA
vctrs,7f2db3323bd40036660dc44016036eb3,`vec_rbind()` gains option to treat input names as row names. This is disabled by default (#966).,1,209,FALSE,NA
vctrs,357c2e6e9f2c3f33fe7c138788ad5820,"New `vec_rep()` and `vec_rep_each()` for repeating an entire vector and elements of a vector, respectively. These two functions provide a clearer interface for the functionality of `vec_repeat()`, which is now deprecated.",1,210,FALSE,NA
vctrs,b7eda5d383334217329d63c2b67c153e,"`vec_cbind()` now calls `vec_restore()` on inputs emptied of their columns before computing the common type. This has consequences for data frame classes with special columns that devolve into simpler classes when the columns are subsetted out. These classes are now always simplified by `vec_cbind()`. For instance, column-binding a grouped data frame with a data frame now produces a tibble (the simplified class of a grouped data frame).",1,211,FALSE,NA
vctrs,698553ebe7c8433c754c0c569d3d45ba,`vec_match()` and `vec_in()` gain parameters for argument tags (#944).,1,212,FALSE,NA
vctrs,3ce3648f92a4fbc67bac8212fc52dac4,"The internal version of `vec_assign()` now has support for assigning names and inner names. For data frames, the names are assigned recursively.",1,213,FALSE,NA
vctrs,207cbde85b44487bb7d2c19808df4ac9,`vec_assign()` gains `x_arg` and `value_arg` parameters (#918).,1,214,FALSE,NA
vctrs,7fd153ffdf9606cd77f7bf98941c7024,"`vec_group_loc()`, which powers `dplyr::group_by()`, now has more efficient vector access (#911).",1,215,FALSE,NA
vctrs,7190dd410063bfc80a055f64f7702af9,`vec_ptype()` gained an `x_arg` argument.,1,216,FALSE,NA
vctrs,4de7ae85583feb61aab04408f1be3ab4,"New `list_sizes()` for computing the size of every element in a list. `list_sizes()` is to `vec_size()` as `lengths()` is to `length()`, except that it only supports lists. Atomic vectors and data frames result in an error.",1,217,FALSE,NA
vctrs,b6b3facc49a1251ffe0530c1530b20c9,`new_data_frame()` infers size from row names when `n = NULL` (#894).,1,218,FALSE,NA
vctrs,b1e9609aa884c577136a7de2b77e7212,"`vec_c()` now accepts `rlang::zap()` as `.name_spec` input. The returned vector is then always unnamed, and the names do not cause errors when they can't be combined. They are still used to create more informative messages when the inputs have incompatible types (#232).",1,219,FALSE,NA
vctrs,754d22c389d2d46e417565e4202206c1,vctrs now supports the `data.table` class. The common type of a data frame and a data table is a data table.,1,220,FALSE,NA
vctrs,c5d287682d25ad4b08090eaa3566eada,"`new_vctr()` now always appends a base `""list""` class to list `.data` to be compatible with changes to `vec_is_list()`. This affects `new_list_of()`, which now returns an object with a base class of `""list""`.",1,221,FALSE,NA
vctrs,669a93db219936dcfe0f7954018ad9b5,"dplyr methods are now implemented for `vec_restore()`, `vec_ptype2()`, and `vec_cast()`. The user-visible consequence (and breaking change) is that row-binding a grouped data frame and a data frame or tibble now returns a grouped data frame. It would previously return a tibble.",1,222,FALSE,NA
vctrs,4eeb6e12ba20f7bcd7d7835c3a0ad548,The `is.na<-()` method for `vctrs_vctr` now supports numeric and character subscripts to indicate where to insert missing values (#947).,1,223,FALSE,NA
vctrs,5d0719a125f81ee26f005db7985268aa,"Improved support for vector-like S4 objects (#550, #551).",1,224,FALSE,NA
vctrs,0e55e18f6c0532c22793a6337ee0f58e,"The base classes `AsIs` and `table` have vctrs methods (#904, #906).",1,225,FALSE,NA
vctrs,abfa4c50588aa2d65450d8b9f0772bf4,`POSIXlt` and `POSIXct` vectors are handled more consistently (#901).,1,226,FALSE,NA
vctrs,abc61c93a4b5a5eec8e1355cb4b7d4d3,Ordered factors that do not have identical levels are now incompatible. They are now incompatible with all factors.,1,227,FALSE,NA
vctrs,ec2476c594f46a06dafa89392d068b19,"`vec_as_subscript()` now fails when the subscript is a matrix or an array, consistently with `vec_as_location()`.",1,228,FALSE,NA
vctrs,68fd4b9787bc739b654ae9db8c1ca733,Improved error messages in `vec_as_location()` when subscript is a matrix or array (#936).,1,229,FALSE,NA
vctrs,c6c63ca248eac6ccb6d4fadf7e3e20e7,`vec_as_location2()` properly picks up `subscript_arg` (tidyverse/tibble#735).,1,230,FALSE,NA
vctrs,9b98fe96a3bc594c06e88895ec910930,`vec_as_names()` now has more informative error messages when names are not unique (#882).,1,231,FALSE,NA
vctrs,624f6915cbb1c2b9d02800b88fb09943,"`vec_as_names()` gains a `repair_arg` argument that when set will cause `repair = ""check_unique""` to generate an informative hint (#692).",1,232,FALSE,NA
vctrs,b46a090111ec18b574590c6d65cf733f,"`stop_incompatible_type()` now has an `action` argument for customizing whether the coercion error came from `vec_ptype2()` or `vec_cast()`. `stop_incompatible_cast()` is now a thin wrapper around `stop_incompatible_type(action = ""convert"")`.",1,233,FALSE,NA
vctrs,6e22a5184836428e3afcbeda8c9064af,`stop_` functions now take `details` after the dots. This argument can no longer be passed by position.,1,234,FALSE,NA
vctrs,1a7a808a145bf2d319969f650d96c295,Supplying both `details` and `message` to the `stop_` functions is now an internal error.,1,235,FALSE,NA
vctrs,32510a0bb591a01631f60a62391ce7f0,"`x_arg`, `y_arg`, and `to_arg` are now compulsory arguments in `stop_` functions like `stop_incompatible_type()`.",1,236,FALSE,NA
vctrs,a212684c423a8e31884b67edc1a9b314,Lossy cast errors are now considered internal. Please don't test for the class or explicitly handle them.,1,237,FALSE,NA
vctrs,4ec33656ce5d8f807c318ed8c9845a60,"New argument `loss_type` for the experimental function `maybe_lossy_cast()`. It can take the values ""precision"" or ""generality"" to indicate in the error message which kind of loss is the error about (double to integer loses precision, character to factor loses generality).",1,238,FALSE,NA
vctrs,bcd2e35dd8c09d60872623ac990a34c0,Coercion and recycling errors are now more consistent.,1,239,FALSE,NA
vctrs,65b24931ff1f9b93de4f44a32f63b038,"Fixed clang-UBSAN error ""nan is outside the range of representable values of type 'int'"" (#902).",1,240,FALSE,NA
vctrs,aba8dee4c32a6937b5b71d10bf9450e0,Fixed compilation of stability vignette following the date conversion changes on R-devel.,1,241,FALSE,NA
vctrs,b7ca69b0cfe47097eec8cb3c4ac8387f,Factors and dates methods are now implemented in C for efficiency.,1,242,FALSE,NA
vctrs,fd8c2fceccd2d53dbbc35f01aff6f3c3,"`new_data_frame()` now correctly updates attributes and supports merging of the `""names""` and `""row.names""` arguments (#883).",1,243,FALSE,NA
vctrs,243285d19e8791590480a39102359aee,`vec_match()` gains an `na_equal` argument (#718).,1,244,FALSE,NA
vctrs,6062433752ef425520667ccd21a6d8cf,"`vec_chop()`'s `indices` argument has been restricted to positive integer vectors. Character and logical subscripts haven't proven useful, and this aligns `vec_chop()` with `vec_unchop()`, for which only positive integer vectors make sense.",1,245,FALSE,NA
vctrs,eeeec271bd3c2cd628b4ed2bae19bc3c,"New `vec_unchop()` for combining a list of vectors into a single vector. It is similar to `vec_c()`, but gives greater control over how the elements are placed in the output through the use of a secondary `indices` argument.",1,246,FALSE,NA
vctrs,cfc131e49bbbff1475380c993a456b83,"Breaking change: When `.id` is supplied, `vec_rbind()` now creates the identifier column at the start of the data frame rather than at the end.",1,247,FALSE,NA
vctrs,4073fc51b1f57948f924e7a3ed426090,`numeric_version` and `package_version` lists are now treated as vectors (#723).,1,248,FALSE,NA
vctrs,8fbf6ce172841e859a174459afeb8894,`vec_slice()` now properly handles symbols and S3 subscripts.,1,249,FALSE,NA
vctrs,f691d58ff27f3a139e0497c820474a34,`vec_as_location()` and `vec_as_subscript()` are now fully implemented in C for efficiency.,1,250,FALSE,NA
vctrs,4850582f8c6cb3472a2a2ae2d5a63898,"`num_as_location()` gains a new argument, `zero`, for controlling whether to `""remove""`, `""ignore""`, or `""error""` on zero values (#852).",1,251,FALSE,NA
vctrs,426846c83d5b0cca18cb6d5a2fea9457,The main feature of this release is considerable performance improvements with factors and dates.,1,252,FALSE,NA
vctrs,cf8ff0f99e40febfba12bee2819b4024,`vec_c()` now falls back to `base::c()` if the vector doesn't implement `vec_ptype2()` but implements `c()`. This should improve the compatibility of vctrs-based functions with foreign classes (#801).,1,253,FALSE,NA
vctrs,0c9972f79fe58a72cf29ad8187ca07e6,`new_data_frame()` is now faster.,1,254,FALSE,NA
vctrs,bf2d5d55144866d0d184958e2db9c86b,"New `vec_is_list()` for detecting if a vector is a list in the vctrs sense. For instance, objects of class `lm` are not lists. In general, classes need to explicitly inherit from `""list""` to be considered as lists by vctrs.",1,255,FALSE,NA
vctrs,5d2d81375e974663373b6064927cbd31,Unspecified vectors of `NA` can now be assigned into a list (#819).,1,256,FALSE,NA
vctrs,5d2d81375e974663373b6064927cbd31,"```
x <- list(1, 2)
vec_slice(x, 1) <- NA
x
#> [[1]]
#> NULL
#>
#> [[2]]
#> 2
```",1,257,TRUE,NA
vctrs,899ade56cac76fd19ba879dd874da026,`vec_ptype()` now errors on scalar inputs (#807).,1,258,FALSE,NA
vctrs,be648fcadf089964a2fd0fd001d1cec5,"`vec_ptype_finalise()` is now recursive over all data frame types, ensuring that unspecified columns are correctly finalised to logical (#800).",1,259,FALSE,NA
vctrs,e12627da5768a039249334eb37804c45,"`vec_ptype()` now correctly handles unspecified columns in data frames, and will always return an unspecified column type (#800).",1,260,FALSE,NA
vctrs,6995fc8b9c6dd75e591b1664743db37b,"`vec_slice()` and `vec_chop()` now work correctly with `bit64::integer64()` objects when an `NA` subscript is supplied. By extension, this means that `vec_init()` now works with these objects as well (#813).",1,261,FALSE,NA
vctrs,4762e58133ed53436fde5024a4b5c122,"`vec_rbind()` now binds row names. When named inputs are supplied and `names_to` is `NULL`, the names define row names. If `names_to` is supplied, they are assigned in the column name as before.",1,262,FALSE,NA
vctrs,b6047f5a6776d513972e165dad454b20,`vec_cbind()` now uses the row names of the first named input.,1,263,FALSE,NA
vctrs,26e8374e0a4c80b5de35aa2e0d01b366,The `c()` method for `vctrs_vctr` now throws an error when `recursive` or `use.names` is supplied (#791).,1,264,FALSE,NA
vctrs,6a37d9aea8bb8704cfa1d7c4a325bfcd,"New `vec_as_subscript()` function to cast inputs to the base type of a subscript (logical, numeric, or character). `vec_as_index()` has been renamed to `vec_as_location()`. Use `num_as_location()` if you need more options to control how numeric subscripts are converted to a vector of locations.",1,265,FALSE,NA
vctrs,0cc098235cedc3a73ba14a6665a462a8,"New `vec_as_subscript2()`, `vec_as_location2()`, and `num_as_location2()` variants for validating scalar subscripts and locations (e.g. for indexing with `[[`).",1,266,FALSE,NA
vctrs,0d3fd4d11a7a9539deab133b17e48256,`vec_as_location()` now preserves names of its inputs if possible.,1,267,FALSE,NA
vctrs,5f95af8a2386c56b98749dfcf451b5d2,"`vec_ptype2()` methods for base classes now prevent inheritance. This makes sense because the subtyping graph created by `vec_ptype2()` methods is generally not the same as the inheritance relationships defined by S3 classes. For instance, subclasses are often a richer type than their superclasses, and should often be declared as supertypes (e.g. `vec_ptype2()` should return the subclass). We introduced this breaking change in a patch release because `new_vctr()` now adds the base type to the class vector by default, which caused `vec_ptype2()` to dispatch erroneously to the methods for base types. We'll finish switching to this approach in vctrs 0.3.0 for the rest of the base S3 classes (dates, data frames, ...).",1,268,FALSE,NA
vctrs,44d04080d08a2f706d843df84a046c94,`vec_equal_na()` now works with complex vectors.,1,269,FALSE,NA
vctrs,6a2ec9b63b7f5e865cbff22be5fb84d6,`vctrs_vctr` class gains an `as.POSIXlt()` method (#717).,1,270,FALSE,NA
vctrs,f15bd00cc0635d85cad577e1cd46f006,`vec_is()` now ignores names and row names (#707).,1,271,FALSE,NA
vctrs,2e5946acfd33fd1da8669f9c46e30b56,"`vec_slice()` now support Altvec vectors (@​jimhester, #696).",1,272,FALSE,NA
vctrs,e88334ff7d8151ea62cb15ab7664ca76,`vec_proxy_equal()` is now applied recursively across the columns of data frames (#641).,1,273,FALSE,NA
vctrs,6a5ce5663efac63fbaf966ad2643f9c1,`vec_split()` no longer returns the `val` column as a `list_of`. It is now returned as a bare list (#660).,1,274,FALSE,NA
vctrs,38b4f1217a8e4856ad08240e5605b5d8,Complex numbers are now coercible with integer and double (#564).,1,275,FALSE,NA
vctrs,bc907aa7f3827f404f356e759b4c0006,"zeallot has been moved from Imports to Suggests, meaning that `%<-%` is no longer re-exported from vctrs.",1,276,FALSE,NA
vctrs,64d774de122756dbcb26357e3aa23a8f,"`vec_equal()` no longer propagates missing values when comparing list elements. This means that `vec_equal(list(NULL), list(NULL))` will continue to return `NA` because `NULL` is the missing element for a list, but now `vec_equal(list(NA), list(NA))` returns `TRUE` because the `NA` values are compared directly without checking for missingness.",1,277,FALSE,NA
vctrs,5835223a9b68bf183ed469070735b207,"Lists of expressions are now supported in `vec_equal()` and functions that compare elements, such as `vec_unique()` and `vec_match()`. This ensures that they work with the result of modeling functions like `glm()` and `mgcv::gam()` which store ""family"" objects containing expressions (#643).",1,278,FALSE,NA
vctrs,b5e706dee5d88bcbc302bd0b442affcc,`new_vctr()` gains an experimental `inherit_base_type` argument which determines whether or not the class of the underlying type will be included in the class.,1,279,FALSE,NA
vctrs,3e8d56696c0d7ba5eaf7fd909065e5ac,"`list_of()` now inherits explicitly from ""list"" (#593).",1,280,FALSE,NA
vctrs,c559adfaded3df8d9cf65da7098dc664,"`vec_ptype()` has relaxed default behaviour for base types; now if two vectors both inherit from (e.g.) ""character"", the common type is also ""character"" (#497).",1,281,FALSE,NA
vctrs,0f7643fee1a5aba6068280d776b964ef,`vec_equal()` now correctly treats `NULL` as the missing value element for lists (#653).,1,282,FALSE,NA
vctrs,5afde2f6e38794594c7bfd4ddebbfee7,"`vec_cast()` now casts data frames to lists rowwise, i.e. to a list of data frames of size 1. This preserves the invariant of `vec_size(vec_cast(x, to)) == vec_size(x)` (#639).",1,283,FALSE,NA
vctrs,9141352bb773f6f9eb50c51e38724954,Positive and negative 0 are now considered equivalent by all functions that check for equality or uniqueness (#637).,1,284,FALSE,NA
vctrs,ab842da8ff4997e74eb0d129af7a831c,New experimental functions `vec_group_rle()` for returning run length encoded groups; `vec_group_id()` for constructing group identifiers from a vector; `vec_group_loc()` for computing the locations of unique groups in a vector (#514).,1,285,FALSE,NA
vctrs,1c081a576404a3a7748e7bbb2bca6fd4,"New `vec_chop()` for repeatedly slicing a vector. It efficiently captures the pattern of `map(indices, vec_slice, x = x)`.",1,286,FALSE,NA
vctrs,02758d0e62af0f63a707b7312f7ffb2e,"Support for multiple character encodings has been added to functions that compare elements within a single vector, such as `vec_unique()`, and across multiple vectors, such as `vec_match()`. When multiple encodings are encountered, a translation to UTF-8 is performed before any comparisons are made (#600, #553).",1,287,FALSE,NA
vctrs,c3fcbba60d31bea69323df26f9f72a41,Equality and ordering methods are now implemented for raw and complex vectors (@​romainfrancois).,1,288,FALSE,NA
vctrs,4bb36c7f5ea33adfca746dd119346a73,"Lossy casts now throw errors of type `vctrs_error_cast_lossy`. Previously these were warnings. You can suppress these errors selectively with `allow_lossy_cast()` to get the partial cast results. To implement your own lossy cast operation, call the new exported function `maybe_lossy_cast()`.",1,289,FALSE,NA
vctrs,798ac429db61cb28b841b4d1ad663b80,`vec_c()` now fails when an input is supplied with a name but has internal names or is length \> 1:,1,290,FALSE,NA
vctrs,798ac429db61cb28b841b4d1ad663b80,"```
vec_c(foo = c(a = 1))
#> Error: Can't merge the outer name `foo` with a named vector.
#> Please supply a `.name_spec` specification.

vec_c(foo = 1:3)
#> Error: Can't merge the outer name `foo` with a vector of length > 1.
#> Please supply a `.name_spec` specification.
```",1,291,TRUE,NA
vctrs,798ac429db61cb28b841b4d1ad663b80,You can supply a name specification that describes how to combine the external name of the input with its internal names or positions:,1,291,FALSE,NA
vctrs,798ac429db61cb28b841b4d1ad663b80,"```
# Name spec as glue string:
vec_c(foo = c(a = 1), .name_spec = ""{outer}_{inner}"")

# Name spec as a function:
vec_c(foo = c(a = 1), .name_spec = function(outer, inner) paste(outer, inner, sep = ""_""))
vec_c(foo = c(a = 1), .name_spec = ~ paste(.x, .y, sep = ""_""))
```",1,292,TRUE,NA
vctrs,117dc1c015cb9d8fdb415cfa1d729b4e,`vec_empty()` has been renamed to `vec_is_empty()`.,1,293,FALSE,NA
vctrs,4ba4666b5c0ab7714fd91521d95f2df0,`vec_dim()` and `vec_dims()` are no longer exported.,1,294,FALSE,NA
vctrs,af7dcd9f49900f0e112bcef4c3940ed5,"`vec_na()` has been renamed to `vec_init()`, as the primary use case is to initialize an output container.",1,295,FALSE,NA
vctrs,4cb06f76d7c191c03d9dab2228cc9aff,"`vec_slice<-` is now type stable (#140). It always returns the same type as the LHS. If needed, the RHS is cast to the correct type, but only if both inputs are coercible. See examples in `?vec_slice`.",1,296,FALSE,NA
vctrs,5f54f92ce00f164059d4dba693408b28,We have renamed the `type` particle to `ptype`:,1,297,FALSE,NA
vctrs,5f54f92ce00f164059d4dba693408b28,• `vec_type()` =\> `vec_ptype()`,2,298,FALSE,We have renamed the `type` particle to `ptype`:
vctrs,5f54f92ce00f164059d4dba693408b28,• `vec_type2()` =\> `vec_ptype2()`,2,299,FALSE,We have renamed the `type` particle to `ptype`:
vctrs,5f54f92ce00f164059d4dba693408b28,• `vec_type_common()` =\> `vec_ptype_common()`,2,300,FALSE,We have renamed the `type` particle to `ptype`:
vctrs,99ef0cde7c85612a67e9e3f3f1cd5e82,"Consequently, `vec_ptype()` was renamed to `vec_ptype_show()`.",1,300,FALSE,NA
vctrs,003cb100ebf370fadd3821afd172de15,"New `vec_proxy()` generic. This is the main customisation point in vctrs along with `vec_restore()`. You should only implement it when your type is designed around a non-vector class (atomic vectors, bare lists, data frames). In this case, `vec_proxy()` should return such a vector class. The vctrs operations will be applied on the proxy and `vec_restore()` is called to restore the original representation of your type. The most common case where you need to implement `vec_proxy()` is for S3 lists. In vctrs, S3 lists are treated as scalars by default. This way we don't treat objects like model fits as vectors. To prevent vctrs from treating your S3 list as a scalar, unclass it from the `vec_proxy()` method. For instance here is the definition for `list_of`:",1,301,FALSE,NA
vctrs,003cb100ebf370fadd3821afd172de15,"```
#' @​export
vec_proxy.vctrs_list_of <- function(x) {
  unclass(x)
}
```",1,302,TRUE,NA
vctrs,003cb100ebf370fadd3821afd172de15,If you inherit from `vctrs_vctr` or `vctrs_rcrd` you don't need to implement `vec_proxy()`.,1,302,FALSE,NA
vctrs,b2bc756f0c28ee8d4a76a58bffe8313e,"`vec_c()`, `vec_rbind()`, and `vec_cbind()` gain a `.name_repair` argument (#227, #229).",1,303,FALSE,NA
vctrs,56de97ac960d7f57d3f7d8e42700e399,"`vec_c()`, `vec_rbind()`, `vec_cbind()`, and all functions relying on `vec_ptype_common()` now have more informative error messages when some of the inputs have nested data frames that are not convergent:",1,304,FALSE,NA
vctrs,56de97ac960d7f57d3f7d8e42700e399,"```
df1 <- tibble(foo = tibble(bar = tibble(x = 1:3, y = letters[1:3])))
df2 <- tibble(foo = tibble(bar = tibble(x = 1:3, y = 4:6)))

vec_rbind(df1, df2)
#> Error: No common type for `..1$foo$bar$y` <character> and `..2$foo$bar$y` <integer>.
```",1,305,TRUE,NA
vctrs,0718288819c03224c12bb50c2ff37aa0,`vec_cbind()` now turns named data frames to packed columns.,1,306,FALSE,NA
vctrs,0718288819c03224c12bb50c2ff37aa0,"```
data <- tibble::tibble(x = 1:3, y = letters[1:3])
data <- vec_cbind(data, packed = data)
data
# A tibble: 3 x 3
      x y     packed$x $y
  <int> <chr>    <int> <chr>
1     1 a            1 a
2     2 b            2 b
3     3 c            3 c
```",1,307,TRUE,NA
vctrs,0718288819c03224c12bb50c2ff37aa0,Packed data frames are nested in a single column. This makes it possible to access it through a single name:,1,307,FALSE,NA
vctrs,0718288819c03224c12bb50c2ff37aa0,"```
data$packed
# A tibble: 3 x 2
      x y
  <int> <chr>
1     1 a
2     2 b
3     3 c
```",1,308,TRUE,NA
vctrs,0718288819c03224c12bb50c2ff37aa0,We are planning to use this syntax more widely in the tidyverse.,1,308,FALSE,NA
vctrs,461e64666df557596f9c8b853e4899c9,"New `vec_is()` function to check whether a vector conforms to a prototype and/or a size. Unlike `vec_assert()`, it doesn't throw errors but returns `TRUE` or `FALSE` (#79). Called without a specific type or size, `vec_assert()` tests whether an object is a data vector or a scalar. S3 lists are treated as scalars by default. Implement a `vec_is_vector()` for your class to override this property (or derive from `vctrs_vctr`).",1,309,FALSE,NA
vctrs,1a15cf9337b527170d99c65d186dd38f,New `vec_order()` and `vec_sort()` for ordering and sorting generalised vectors.,1,310,FALSE,NA
vctrs,c7c08737754d0722f9820d1da5992bfd,"New `.names_to` parameter for `vec_rbind()`. If supplied, this should be the name of a column where the names of the inputs are copied. This is similar to the `.id` parameter of `dplyr::bind_rows()`.",1,311,FALSE,NA
vctrs,55920a1b15ae9e3b223f741c1c0a3da1,New `vec_seq_along()` and `vec_init_along()` create useful sequences (#189).,1,312,FALSE,NA
vctrs,52f0a312fa2474f122e565e9b74df65f,"`vec_slice()` now preserves character row names, if present.",1,313,FALSE,NA
vctrs,8442f60d3a95bf9f860efd2d0402f95e,"New `vec_split(x, by)` is a generalisation of `split()` that can divide a vector into groups formed by the unique values of another vector. Returns a two-column data frame containing unique values of `by` aligned with matching `x` values (#196).",1,314,FALSE,NA
vctrs,d9e9c565d88c05f78997254c131139a2,"Using classed errors of class `""vctrs_error_assert""` for failed assertions, and of class `""vctrs_error_incompatible""` (with subclasses `_type`, `_cast` and `_op`) for errors on incompatible types (#184).",1,315,FALSE,NA
vctrs,bbce7d66b03208e5fab6bc13f0716d42,"Character indexing is now only supported for named objects, an error is raised for unnamed objects (#171).",1,316,FALSE,NA
vctrs,fc1160586bf119679f2a0bfa88fcc54d,Predicate generics now consistently return logical vectors when passed a `vctrs_vctr` class. They used to restore the output to their input type (#251).,1,317,FALSE,NA
vctrs,1a5270d60ad740c296f8ad523e57db78,`list_of()` now has an `as.character()` method. It uses `vec_ptype_abbr()` to collapse complex objects into their type representation (tidyverse/tidyr#654).,1,318,FALSE,NA
vctrs,d61b06bf33b8f8692f12f0227fbf38c5,New `stop_incompatible_size()` to signal a failure due to mismatched sizes.,1,319,FALSE,NA
vctrs,f77a126a7990adfcec99ce2ccee40bfc,New `validate_list_of()` (#193).,1,320,FALSE,NA
vctrs,00a5f168a0d8dd9411d39089577253ba,"`vec_arith()` is consistent with base R when combining `difftime` and `date`, with a warning if casts are lossy (#192).",1,321,FALSE,NA
vctrs,148558164729db7641ff472bd972e9ed,"`vec_c()` and `vec_rbind()` now handle data.frame columns properly (@​yutannihilation, #182).",1,322,FALSE,NA
vctrs,96916f6a2437ec48d4136355d91dc6bb,"`vec_cast(x, data.frame())` preserves the number of rows in `x`.",1,323,FALSE,NA
vctrs,e7afdda8c005a8ee23bd0ffb7d63f284,`vec_equal()` now handles missing values symmetrically (#204).,1,324,FALSE,NA
vctrs,5863d77e275974eca39107a800fd8515,"`vec_equal_na()` now returns `TRUE` for data frames and records when every component is missing, not when *any* component is missing (#201).",1,325,FALSE,NA
vctrs,bdda2095e59d08d9e007ed9275cbf2d0,`vec_init()` checks input is a vector.,1,326,FALSE,NA
vctrs,ebe02f61fd400ede50e32f8a2d7563ed,"`vec_proxy_compare()` gains an experimental `relax` argument, which allows data frames to be orderable even if all their columns are not (#210).",1,327,FALSE,NA
vctrs,bb8a351cf9eb20325c66142669ccad75,`vec_size()` now works with positive short row names. This fixes issues with data frames created with jsonlite (#220).,1,328,FALSE,NA
vctrs,617de426a9cc45597ab51be33f70cb6c,`vec_slice<-` now has a `vec_assign()` alias. Use `vec_assign()` when you don't want to modify the original input.,1,329,FALSE,NA
vctrs,d6853e935a68ecc8940dae10fae5a656,"`vec_slice()` now calls `vec_restore()` automatically. Unlike the default `[` method from base R, attributes are preserved by default.",1,330,FALSE,NA
vctrs,b30d01e5dd45137af806cb1f7163e46f,`vec_slice()` can correct slice 0-row data frames (#179).,1,331,FALSE,NA
vctrs,7bb1cf5aedffd79d5c9b952a76a6ecea,New `vec_repeat()` for repeating each element of a vector the same number of times.,1,332,FALSE,NA
vctrs,4b36fbb242e46b4bededc3060e5aa2aa,"`vec_type2(x, data.frame())` ensures that the returned object has names that are a length-0 character vector.",1,333,FALSE,NA
waldo,b37161ba7c3b1250fd66a4f5a250db42,Fixes for upcoming R-devel changes.,1,1,FALSE,NA
waldo,e98ab513720536770a717ff4da71114c,Tolerance is also taken into account when displaying differences (#173).,1,2,FALSE,NA
waldo,7fa415b18f4fd00b99e21ff7a7683db8,"`NA_real_` and `NaN` are only treated as non-equal when tolerance is non-null. That means that `testthat::expect_equal(NaN, NA_real_)` will pass but `testthat::expect_identical(NaN, NA_real_)` will fail (#174).",1,3,FALSE,NA
waldo,3a3a85182ea5a2180ef459f06b302397,You can opt-out of quoting strings with `quote_strings = FALSE` (#145).,1,4,FALSE,NA
waldo,f6efdf4b92d8686ce480f48065b4b430,Improvements to missing value handling:,1,5,FALSE,NA
waldo,f6efdf4b92d8686ce480f48065b4b430,"• `NA_character_` and `""NA""` are no longer treated as equal (#162).",2,6,FALSE,Improvements to missing value handling:
waldo,f6efdf4b92d8686ce480f48065b4b430,"• `NA_real_` and `NaN` are no longer treated as equal (@​sorhawell, #150).",2,7,FALSE,Improvements to missing value handling:
waldo,f6efdf4b92d8686ce480f48065b4b430,• Leading and trailing `NA`s are no longer omitted from output when the lengths of `x` and `y` are unequal (#109).,2,8,FALSE,Improvements to missing value handling:
waldo,fc6186d6c1b65f21bf619d2ba30765b9,The `balanced` attribute used by some `POSIXlt` objects in R 4.3 and greater is now ignored (#160).,1,9,FALSE,NA
waldo,0e800fc80004864fc39ff9c60dbe9803,3d (and greater) numeric arrays no longer cause an error (#148).,1,10,FALSE,NA
waldo,93e4ab4d4efb90183ffce8fb7a462826,Support for complex numbers is improved (#146).,1,11,FALSE,NA
waldo,cf9cd528de68dc01372e849a4459c034,"`ignore_attr = ""class""` now works for more types of input (#143).",1,12,FALSE,NA
waldo,c41a3a396a1780263787221d0ed741d8,"Atomic S3 classes with format methods now use those methods when displaying comparisons (#98). If the printed representation is the same, they fallback to displaying the underlying data.",1,13,FALSE,NA
waldo,077f67d7cecb0187dd815be2f43b914f,"Rowwise data frame comparisons are now much much faster (#116), and respect the `max_diffs` argument (@​krlmlr, #110).",1,14,FALSE,NA
waldo,e20a6db791b089c27a023b786fe98ce8,"Unnamed environments now compare by value, not by reference (i.e. if two environments contain the same values, they compare the same, even if they're different environments) (#127). Environments that contain self-references are handled correctly (#117). Differences between pairs of environments are only ever reported once.",1,15,FALSE,NA
waldo,383b13d9a60b6f13a78d865da0df0ff0,"In the unlikely event that you have bare CHARSXP objects, waldo now handles them (#121).",1,16,FALSE,NA
waldo,67692b6c5923eb37207b9c453365fff7,"S4 objects are labelled with their class, not all superclasses (#125).",1,17,FALSE,NA
waldo,43266e9c8ac3f9fdce9b1178499b87cf,"`compare_proxy()` ignores the `""index""` attribute for data tables (@​krlmlr, #107), and works again for `RProtoBuf` objects (@​MichaelChirico, #119)",1,18,FALSE,NA
waldo,544f152df795db80e367810ae3e1b8b6,"Infinite values can be compared with a tolerance (@​dmurdoch, #122).",1,19,FALSE,NA
waldo,59c90850f3f039a7948c0196b5abb352,`compare()`ing data frames now works independently of `option(max.print)` (#105).,1,20,FALSE,NA
waldo,52e2072a2544b19001a7dbfafcd55004,Fixed regression when comparing vectors with missing values (#102).,1,21,FALSE,NA
waldo,aa2ebfba76365dd8b511e4087064ab88,`compare()` is now considerably faster when comparing complex objects that don't have any differences (thanks to strategic use of `identical()`) (#86).,1,22,FALSE,NA
waldo,602683315c2dcc55cfc4a9cb8baae6c5,`compare()` gains two improvements to low-level diffs:,1,23,FALSE,NA
waldo,602683315c2dcc55cfc4a9cb8baae6c5,• Structurally identical data frames (#78) and numeric matrices (#76) gain a row-by-row diff that makes it easier to see where exactly values differ.,2,24,FALSE,`compare()` gains two improvements to low-level diffs:
waldo,602683315c2dcc55cfc4a9cb8baae6c5,"• An element-by-element diff will be automatically used if it's shorter than the ""smart"" diff. This improves diff quality when comparing two vectors that aren't really related (#68).",2,25,FALSE,`compare()` gains two improvements to low-level diffs:
waldo,6c74bab0c4901c16dd325c67805bf707,`compare()` gains a `list_as_map` argument thanks to an idea from @​dmurdoch. It allows you to compare the behaviour of two lists when they are used to connect names to values (i.e. the list is operating as a map or dictionary). It removes `NULL`s and sorts named components (#72).,1,26,FALSE,NA
waldo,f4b97227c77cb94631d9aaaf1afbed6f,The objects involved in `compare()` (as opposed to the caller of `compare()`) gained much greater ability to control the comparison.,1,27,FALSE,NA
waldo,f4b97227c77cb94631d9aaaf1afbed6f,"• Objects can now contain a `waldo_opts` attribute, a list with the same names and valid values as the arguments to `compare()`, which overrides the default comparisons (@​dmurdoch).",2,28,FALSE,The objects involved in `compare()` (as opposed to the caller of `compare()`) gained much greater ability to control the comparison.
waldo,f4b97227c77cb94631d9aaaf1afbed6f,• `compare_proxy()` is now called earlier (before type comparison) making it more flexible (#65).,2,29,FALSE,The objects involved in `compare()` (as opposed to the caller of `compare()`) gained much greater ability to control the comparison.
waldo,f4b97227c77cb94631d9aaaf1afbed6f,"• `compare_proxy()` gains a second argument, `path`, used to report how the proxy changed the object. This makes it easier to see when and how a proxy is used (#73).",2,30,FALSE,The objects involved in `compare()` (as opposed to the caller of `compare()`) gained much greater ability to control the comparison.
waldo,f4b97227c77cb94631d9aaaf1afbed6f,"• Proxies now exist for comparing RProtoBuf objects, converting them to proto text format (#82, @​michaelquinn32).",2,31,FALSE,The objects involved in `compare()` (as opposed to the caller of `compare()`) gained much greater ability to control the comparison.
waldo,24ba54831ea8b1936beb7cf7e8444d65,"Comparing a list with symbol to a list without that element no longer errors (@​mgirlich, #79).",1,32,FALSE,NA
waldo,a3552d090b8c64ad22797dfba7615af3,"On platforms without UTF-8 support, strings that differ only in their encoding are now correctly considered to be identical (#66).",1,33,FALSE,NA
waldo,4c9702a8dfff7e4ebf3d43a8a7ed65ce,Additional arguments to `compare()` generate a more informative warning (#58).,1,34,FALSE,NA
waldo,2c80bc0838d46c1afe9b7ad0224483c9,Numbers use a better algorithm for picking the number of decimal places to\ show (#63).,1,35,FALSE,NA
waldo,710e5426e0a4c09d51d8b7f0d9a591ad,ASTs with identical deparsed strings now show exactly how the AST differs. Source references are now more comprehensively stripped using `rlang::zap_srcrefs()`,1,36,FALSE,NA
waldo,6881d263bb16b0017eee5fa04ef10d9c,"S3 objects now show the base type, and no longer fails when the types are incompatible.",1,37,FALSE,NA
waldo,ea48b7eeace875dd311389cabeafb09a,`compare()` gains a new `max_diffs` argument that allows you to control the maximum number of differences shown. Set `max_diffs = Inf` to see all differences (#49),1,38,FALSE,NA
waldo,094b85aa7f7c5f28a8cbcf426bfabbef,Logical vectors fall back to element-by-element comparison in more cases (#51).,1,39,FALSE,NA
waldo,ed0c546dc70bde80039f5d63fa4f9749,"Long-form diff no longer confuses additions and deletions (#52, @​krlmlr).",1,40,FALSE,NA
waldo,a470478b82d2678336aa4069e894195d,Handle S4 objects that have attributes that are not slots.,1,41,FALSE,NA
waldo,b7b4fef09f5bb52bfbbb205c7ad23f70,Additions are now coloured blue and deletions yellow (instead of the opposite).,1,42,FALSE,NA
waldo,ad1d6489564845e1858204ff13b0d70f,"`compare()` now labels output as `old` and `new`, since that's the most natural way to use it.",1,43,FALSE,NA
waldo,fee2d10ee35dc39e6670f925a750641e,`compare()` can selectively ignore attributes by providing vector to `ignore_attr` (#45).,1,44,FALSE,NA
waldo,68d72b9f74ce1e200a353c573f80a518,`print()` method gets `n` argument to allow explicitly specifying number of differences to show (@​mnazarov).,1,45,FALSE,NA
waldo,d29e4e20754a3a08f4d8c308b6b98b12,Improvements to comparison display:,1,46,FALSE,NA
waldo,d29e4e20754a3a08f4d8c308b6b98b12,• Zero length vectors compare robustly (#39),2,47,FALSE,Improvements to comparison display:
waldo,d29e4e20754a3a08f4d8c308b6b98b12,"• Line-by-line comparisons show modifications as deletion then addition, rather than addition then deletion (#44).",2,48,FALSE,Improvements to comparison display:
waldo,d29e4e20754a3a08f4d8c308b6b98b12,"• Differences between numeric vectors are more robust, particularly in the presence of missing values (#43). The number of digits selected has also been slightly improved so that you're more likely to get exactly the number of digits needed.",2,49,FALSE,Improvements to comparison display:
waldo,e51096ef2f1b5e12d4951bc4ed14117e,All objects: class (#26) and names (#31) are ignored when ignoring attributes.,1,50,FALSE,NA
waldo,8b798fb265cfb5efa8cd3cf2498ebf46,"Numeric and logical vectors: clearer display of differences. Numbers are right-aligned, and we show the numbers not the differences.",1,51,FALSE,NA
waldo,54ab32923f905f11f781b01c976243f9,Character vectors: a trailing newline is no longer ignored (#37).,1,52,FALSE,NA
waldo,d442da213475ecd381e83ba895e10f02,"Lists: all elements of the unnamed lists are compared, not just the last! (#32)",1,53,FALSE,NA
waldo,83b6cc806a48c26e51d2bf36808ed56c,Lists: unclassed prior to comparison (#21).,1,54,FALSE,NA
waldo,bb44fe0f1f1bd5823193fc2844060780,Data frames: The internal representation of row names is no longer used; instead we use the same result of `rownames()` (#23).,1,55,FALSE,NA
waldo,2593540097793e4ea6b7314be58ea241,Environments: New `ignore_formula_env` and `ignore_function_env` arguments to ignore formula and function environments for compatibility with `all.equal()` (#24).,1,56,FALSE,NA
waldo,b6719268a14ac9708173915122d765f9,Expression objects: can now be compared (#29).,1,57,FALSE,NA
waldo,0ea17dda3edf26baaa5044b492372352,Calls: srcrefs and attributes are ignored.,1,58,FALSE,NA
waldo,16bb4d99017bce978aeb5af1e8123780,`compare_proxy()` is now exported so that you can provide methods if your objects need special handling (particularly needed for objects that contain external pointers) (#22).,1,59,FALSE,NA
waldo,dc28b9a08da7c35013b8c9094a6e3649,Fixed a partial argument name in `as.list()`.,1,60,FALSE,NA
waldo,6c7c47e9cf4e4509958f2ca1fe8b488a,Added a `NEWS.md` file to track changes to the package.,1,61,FALSE,NA
withr,43421c7e4dfda3685cca730673a37a69,`defer()` is now a thin wrapper around `base::on.exit()`. This is possible thanks to two contributions that we made to R 3.5:,1,1,FALSE,NA
withr,43421c7e4dfda3685cca730673a37a69,• We added an argument for LIFO cleanup: `on.exit(after = FALSE)`.,2,2,FALSE,`defer()` is now a thin wrapper around `base::on.exit()`. This is possible thanks to two contributions that we made to R 3.5:
withr,43421c7e4dfda3685cca730673a37a69,• Calling `sys.on.exit()` elsewhere than top-level didn't work. This is needed for manual invokation with `deferred_run()`.,2,3,FALSE,`defer()` is now a thin wrapper around `base::on.exit()`. This is possible thanks to two contributions that we made to R 3.5:
withr,ba19c6bede29c8db07d97ab9ea998e9f,"Following this change, `defer()` is now much faster (although still slower than `on.exit()` which is a primitive function and about as fast as it gets). This also increases the compatibility of `defer()` with `on.exit()` (all handlers are now run in the expected order even if they are registered with `on.exit()`) and standalone versions of `defer()`.",1,3,FALSE,NA
withr,9db02907c4c6882e26fbbcddeb35eee0,"When `source()` is used with a local environment, as opposed to `globalenv()` (the default), you now need to set `options(withr.hook_source = TRUE)` to get proper withr support (running `defer()` or `local_` functions at top-level of a script). THis support is disabled by default in local environments to avoid a performance penalty in normal usage of withr features.",1,4,FALSE,NA
withr,88c40c901ff6a2d2a78b748530839778,`deferred_run()` now reports the number of executed expressions with a message.,1,5,FALSE,NA
withr,5af796ae03168c792f2a3fe8fb171dde,`deferred_run()` can now be run at any point in a knitr file (#235).,1,6,FALSE,NA
withr,65bec369e3cec157182066f3b4d10176,`local_pdf()` and friends now correctly restore to the previously active device (#138).,1,7,FALSE,NA
withr,fd71cd37c31e90542722874425a9fabd,`local_()` now works even if withr isn't attached (#207).,1,8,FALSE,NA
withr,77a589c67fb449d4ba05203ca0c1fb6d,`local_par()` and `with_par()` now work if you don't set any parameters (#238).,1,9,FALSE,NA
withr,53feeca2e4b0b1f3ec6c6b3ea553eca6,`with_language()` now properly resets the translation cache (#213).,1,10,FALSE,NA
withr,8726a9da7fbe3916e00df2830f749dff,Fixes for Debian packaging.,1,11,FALSE,NA
withr,0946a4505c10c35a354d023ad0246c5b,Fixes for CRAN checks.,1,12,FALSE,NA
withr,a960bdf0dffe93d0c233e038f8890cc3,Fixes for CRAN checks.,1,13,FALSE,NA
withr,22de0f382e4990156cb5bea80e2f8344,`defer()` and all `local_*()` functions now work when run inside of a `.Rmd`. The deferred expressions are executed when knitr exits.,1,14,FALSE,NA
withr,4fc7a01a41b7c8d14e7d083c977ca2d4,`defer()` and `local_` functions now work within `source()`. The deferred expressions are executed when `source()` exits.,1,15,FALSE,NA
withr,c330ceecd632d1d6620a62ef597a5e02,"`with_()` and `local_()` gain a `get` argument. Supply a getter function to create `with` and `local` functions that are robust to early exits. When supplied, this restoration pattern is used:",1,16,FALSE,NA
withr,c330ceecd632d1d6620a62ef597a5e02,"```
old <- get()
on.exit(set(old))
set(new)
action()
```",1,17,TRUE,NA
withr,c330ceecd632d1d6620a62ef597a5e02,Instead of:,1,17,FALSE,NA
withr,c330ceecd632d1d6620a62ef597a5e02,"```
old <- set(new)
on.exit(set(old))
action()
```",1,18,TRUE,NA
withr,c330ceecd632d1d6620a62ef597a5e02,"This ensures proper restoration of the old state when an early exit occurs during `set()` (for instance when a deprecation warning is caught, see #191).",1,18,FALSE,NA
withr,1bf62722dd3c786efe7b06af7d3e7fe5,These `with_` and `local_` functions are now robust to early exits (see next bullet):,1,19,FALSE,NA
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_locale()`,2,20,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_envvar()`,2,21,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_libpaths()`,2,22,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_options()`,2,23,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_par()`,2,24,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_path()`,2,25,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,1bf62722dd3c786efe7b06af7d3e7fe5,• `_seed()`,2,26,FALSE,These `with_` and `local_` functions are now robust to early exits (see next bullet):
withr,00483430762e0ea83c5c92a572ee8fc5,"`with_namespace()` and `local_namespace()` now pass `warn.conflicts` to `attach()` (@​kyleam, #185).",1,27,FALSE,NA
withr,af130e7c84ec002883f9c1e264151cbc,"`local_rng_version()` and `local_seed()` no longer warn when restoring `sample.kind` to `""Rounding""` (#167).",1,28,FALSE,NA
withr,a75257621687c1d245bf711ada7b20c6,`with_seed()` now preserves the current values of `RNGkind()` (#167).,1,29,FALSE,NA
withr,5fbc86d38313b54276e7be6db8f4ce7c,"`with_collate()` is no longer affected by the `LC_COLLATE` environment variable set to ""C"" (#179).",1,30,FALSE,NA
withr,c50626c6164e5660756d68b6f1dd491f,Local evaluations in the `globalenv()` (as opposed to top-level ones) are now unwound in the same way as regular environments.,1,31,FALSE,NA
withr,7c5c74041777a3e202f92238e2490b28,"`local_tempfile()` gains a lines argument so, if desired, you can pre-fill the temporary file with some data.",1,32,FALSE,NA
withr,be209aa9e45b322b9f335d080c50e5af,Lionel Henry is the new maintainer.,1,33,FALSE,NA
withr,a101b59a0a7342344e26a59553b71288,"Handlers registered with the global environment (as happens when `local_()` is run at the top-level, outside a function) are now automatically run when the R session ends (#173).",1,34,FALSE,NA
withr,126f05aa48beada60c4619b77d69b7ee,New `with_language()` and `local_language()` to temporarily control the language used for translations (#180).,1,35,FALSE,NA
withr,594d66a9e33611cbcd88f4d2068a26ef,"`with_seed()` now caches the check for R version, so is now faster (#170)",1,36,FALSE,NA
withr,e03fc0401a34a8c60f5c2027c0d3f6b3,`with_makevars()` and `local_makevars()` now eagerly evaluate the `path` argument (#169),1,37,FALSE,NA
withr,ff870990e294413faa63b011f90fef7d,`local_options()` now lets you set an option to `NULL` as intended (#156),1,38,FALSE,NA
withr,a11cc5177001b014a6034c7c414e2d1d,"`local_tempfile()` argument `envir` is deprecated, in favor of `.local_envir`. All withr functions except `local_tempfile()` used `.local_envir` to specify environments, so this makes this function consistent with the rest. (#157)",1,39,FALSE,NA
withr,db8bf518cdfeed7b5ea6fb114dd18d5c,"`with_environment()` now passing `pos` and `warn.conflicts` to `attach()`, as intended (#161).",1,40,FALSE,NA
withr,167024a3e180b3a143390a516cbae27e,"`with_seed()` now also sets the RNG via new arguments `.rng_kind`, `.rng_normal_kind` and `.rng_sample_kind` (#162, @​AshesITR).",1,41,FALSE,NA
withr,5dae2b594bd1c15ca99c7cbfdad1678a,`with_timezone()` now works after recent changes to `Sys.timezone()` in R-devel (#165),1,42,FALSE,NA
withr,3ed1ac3fade3c545a3e8684ebbb8f258,"Tests which require `capabilities(""cairo"")` are now skipped.",1,43,FALSE,NA
withr,ad78ccf554eaf81285a522fc6aa3affb,withr is now licensed as MIT (#154).,1,44,FALSE,NA
withr,889a7bda17c7c14c770e78afefb072f1,"Tests for `with_cairo_pdf()` and `with_cairo_ps()` have been removed, as they fail if Cairo is not available, such as with M1 macOS systems (#158)",1,45,FALSE,NA
withr,f7b84a9adba581abd5c62f25ca35addd,`local_seed()` is now exported (#153),1,46,FALSE,NA
withr,b9f40c04c5cdb53936e919a93f29a946,"`local_tempfile()` argument `new` is deprecated, in favor of returning the path to the new tempfile. calls like `local_tempfile(""xyz"")` should be replaced with `xyx <- local_tempfile()` in your code (#141).",1,47,FALSE,NA
withr,c7f453a301b4a87140e146c16ea253b4,New `local_seed()` function and `local_preserve_seed()` functions to correspond to `with_seed()` and `with_preserve_seed()` (#139).,1,48,FALSE,NA
withr,9127d3fd43f8c51916e34fdb1bcd3147,New `local_tempdir()` function added to create a temp directory (#140),1,49,FALSE,NA
withr,00f81e957cba0c0869ba365a21cb69b1,"`local_*()` functions now take dots (`...`), which can simplify calls in some cases, e.g. you can now use `local_options(foo = ""bar"")` rather than `local_options(c(foo = ""bar""))`.",1,50,FALSE,NA
withr,1717958cf2fa4ad1a72674cba383d42a,`defer()` now throws an error if an error occurs in the deferred expression (#148),1,51,FALSE,NA
withr,dbfde17c8cd8f97829885a21f2c44808,`with_file()` and `local_file()` can now work if the file is actually a directory (#144).,1,52,FALSE,NA
withr,f57da2f9e8fd1d1abf5fe93ac2381a3e,"`defer()` can set deferred events on `.GlobalEnv` to facilitate the interactive development of code inside a function or test. Helpers `deferred_run()` (and `deferred_clear()`) provide a way to explicity run and clear (or just clear) deferred events (#76, @​jennybc).",1,53,FALSE,NA
withr,c92fc2dfc12c0a555041e6b8ecc5dafe,`with_connection()` now works when existing objects or connections exist with the same names (#120),1,54,FALSE,NA
withr,1c02ccbcc1db664e6881304d353d694b,"`with_makevars()` now uses `tools::makevars_user()` to determine the default user makevars file (#77, @​siddharthab).",1,55,FALSE,NA
withr,56a022ae24381ef112dc8b8dc1c3abdd,"`with_options()` no longer uses `do.call()`, so optiosn are not evaluated on exit (#73, @​mtmorgan).",1,56,FALSE,NA
withr,b1b00d0ddac5426c7ece9f628be89273,"`with_package()` no longer has the `help` argument (#94, @​wendtke).",1,57,FALSE,NA
withr,d7b1b164d15d79f24155334effccdb93,`with_package()` now does not try to detach the package if it is already attached before calling `with_package()` (#107),1,58,FALSE,NA
withr,0305de2bf9cf3d405c6e0df23c898bba,`with_preserve_seed()` now restores `.Random.seed` if it is not set originally (#124).,1,59,FALSE,NA
withr,47049e526ca96ebcf1a2a7fbc2452e46,"Add `with_rng_version()` and `local_rng_version()` functions to change the version of the RNG (#90, @​gaborcsardi).",1,60,FALSE,NA
withr,90da4832cfb828e48704b2d60f4de4c9,`with_svg()` documentation now is consistent across R versions (#129),1,61,FALSE,NA
withr,7ea4111b343e2a5f85194d5517392563,"Add `with_timezone()` and `local_timezone()` functions to change the time zone (#92, @​gaborcsardi).",1,62,FALSE,NA
withr,7ff7163092b0b7c2ac85ee43b754f56e,"`with_tempfile()` and `local_tempfile()` now delete recursively directories on exit (#84, @​meta00).",1,63,FALSE,NA
withr,f57c3a3fe71eec08f63bafc567b28c45,"`set_makevars()` is now exported (#68, @​gaborcsardi).",1,64,FALSE,NA
withr,0cc82b4114c5a6ead46328fc34e1d2b9,"`with_temp_libpaths()` gains an `action` argument, to specify how the temporary library path will be added (#66, @​krlmlr).",1,65,FALSE,NA
withr,c06c4b3e0a65187536d2af349b070cc8,Fixes test failures with testthat 2.0.0,1,66,FALSE,NA
withr,31235bd43f6daeb63dde02644099781c,`with_file()` function to automatically remove files.,1,67,FALSE,NA
withr,e0083872751de76937cfd2c233460bab,`with_connection()` function to automatically close R file connections.,1,68,FALSE,NA
withr,d4607b13d2bd5c3c4c09a28a63561cc0,`with_db_connection()` function to automatically disconnect from DBI database connections.,1,69,FALSE,NA
withr,b0e7f3eaedd1f2054f824044b524046f,"`with_gctorture2` command to run code with gctorture2, useful for testing (#47).",1,70,FALSE,NA
withr,197ae3420944bca885fe0cbee9873dbb,"`with_package()`, `with_namespace()` and `with_environment()` (and equivalent locals) functions added, to run code with a modified object search path (#38, #48).",1,71,FALSE,NA
withr,8c5aa8fb90b16ee560241ad30d9f00bf,Add `with_tempfile()` and `local_tempfile()` functions to create temporary files which are cleanup up afterwards. (#32),1,72,FALSE,NA
withr,3e23869211bf3fb43cc5d9c49b3568a8,Remove the `code` argument from `local_` functions (#50).,1,73,FALSE,NA
withr,dc780660098dcd426474383cd261098a,"Each `with_` function now has a `local_` variant, which reset at the end of their local scope, generally at the end of the function body.",1,74,FALSE,NA
withr,d730f84e0409633af0f875590787a7ca,"New functions `with_seed()` and `with_preserve_seed()` for running code with a given random seed (#45, @​krlmlr).",1,75,FALSE,NA
withr,c45d0598bdb965cf807dc09be8996da5,`with_makevars()` gains an `assignment` argument to allow specifying additional assignment types.,1,76,FALSE,NA
withr,1ac4027a955c7e52d30bdd1956ef8b8e,"Relaxed R version requirement to 3.0.2 (#35, #39).",1,77,FALSE,NA
withr,df48698d7b2d3bbb9600dc986c8a0f63,New `with_output_sink()` and `with_message_sink()` (#24).,1,78,FALSE,NA
withr,da65c4d0a4467d10b8e10afef10c5b0d,First Public Release,1,79,FALSE,NA
blastula,0ad6fbbad94f3c8395a2b347b278af90,Fixed Excel attachments which were broken due to wrong conversion into RFC2822. (#314),1,1,FALSE,NA
blastula,76be878e051c700c723b420408dd1785,Modified tests to remove specific cases that no longer work in newer versions of R. (#310),1,2,FALSE,NA
blastula,c1053f763123470610e4d769c880a798,"Fixed a problem where non-ASCII subject lines wouldn't render correctly on the Windows platform when using `smtp_send()` (#241). (#242, thanks @​shrektan!)",1,3,FALSE,NA
blastula,e6c7bf3a1f2c3b2b46c96260c04960a4,"We replaced `httr::POST()` with `httr::RETRY()` when interacting with web APIs (Mailgun and Imgur). (#176, thank you @​ataustin for contributing this PR.)",1,4,FALSE,NA
blastula,5dd361999698cf60eb77df847abe0f57,Made a correction to a `format()` statement to comply with CRAN policy.,1,5,FALSE,NA
blastula,2c8e38899dc154cb58902cdc85838417,"Updated the SMTP vignette with regard to Gmail app passwords (#282). (#283, thanks @​jnolis!)",1,6,FALSE,NA
blastula,7448012268def7778c79cabc9d62f3bf,Email content width is now customizable in the `blastula_email()` and `compose_email()` functions. The default width is now increased to 1000px (#178).,1,7,FALSE,NA
blastula,7a22c7f64d07907ea44d526b65ff930a,Added the `delete_credential_key()` and `delete_all_credential_keys()` functions for better management of credential keys added to the system key-value store by the `create_smtp_creds_key()` function (#173).,1,8,FALSE,NA
blastula,3acc285ac1aa83832215bdf9d37c9b9b,"Added the `creds_envvar()` credential helper function, which allows for SMTP password input via an environment variable (#159).",1,9,FALSE,NA
blastula,a927013479ca12a3f208e9c695df6baf,"Fixed incorrect rendering in Outlook, due to wrong line endings used for quoted-printable encoding (thanks @​jdbarillas for identifying the source of the issue in #153).",1,10,FALSE,NA
blastula,fdb4fc30ac2669b45b606e45bb0fa111,Fixed Unicode issues on Windows (#154).,1,11,FALSE,NA
blastula,bd2cf02c715d7e2c4a575fe18e5b7914,Fixed buggy internal logic for decoding numeric HTML entities that represent non-ASCII characters.,1,12,FALSE,NA
blastula,c764256ba77cbebce2fb493b98a8dd2a,`send_email_out()` has been removed; the `smtp_send()` function is its replacement for sending email through an SMTP server,1,13,FALSE,NA
blastula,727ecf58a01a1643e3fed357c2da7dfd,"The revised `smtp_send()` function internally uses `curl::send_mail()` to send RFC2822 email message that **blastula** now independently generates; now, there is no need to download third-party binaries to send via SMTP",1,14,FALSE,NA
blastula,af059ab5d66784959b53a3195fc356b9,"The `smtp_send()` no longer offers text interpolation in `{ }` (which was provided by `glue::glue()`) since this poses a security risk; email strings can be precomposed using `glue::glue()` independently, or, by using `c()`, `paste()`/`paste0`.",1,15,FALSE,NA
blastula,6a73ec104dd6f89e015fe8d21b15efb2,"If an email message string contains Markdown text or HTML fragments, the `md()` function must be used to perform rendering",1,16,FALSE,NA
blastula,bd7f03334b6e22a88508f8b5365084d1,"The `create_email_creds_file()` function has been removed in favor of a suite of functions for storing SMTP configuration info and credentials (`create_smtp_creds_file()`, `create_smtp_creds_key()`); the following credentials helper functions are available for retrieving or directly specifying configuration and credentials during sending: `creds_file()`, `creds_key()`, `creds_anonymous()`, and `creds()`",1,17,FALSE,NA
blastula,e1974f7a986c109ac7d37abe85732aad,The `preview_email()` function has been removed as email objects created by `compose_email()` now have a print method,1,18,FALSE,NA
blastula,ca8eaee2875850cf8ce09b00a4578eeb,The `.preheader_text` argument in `compose_email()` has been removed because of display issues in certain email clients,1,19,FALSE,NA
blastula,3f3913a2af9dfaedc0132ab5125fb51f,"Added functions useful for scheduled email sending in RStudio Connect during publication of R Markdown documents: `render_email()`, `render_connect_email()`, `attach_connect_email()`, `blastula_email()`, `suppress_scheduled_email()`, `prepare_rsc_example_files()`",1,20,FALSE,NA
blastula,21962339e469210b2e412f49f8f0da5b,"The `compose_email()` function now has a `header` argument, allowing for content to populate the area above the `body`",1,21,FALSE,NA
blastula,cbb3bf3c3fc0daea9b4f001f1aacb7c6,Images embedded in email messages by using `add_image()` are now properly encoded as Base64 in the outgoing message; more MIME types are supported thanks to functions provided by the **mime** package,1,22,FALSE,NA
blastula,aeb97c966e9b9df4a4a8c326d545f2fd,The new `add_imgur_image()` function allows us to deploy a local image to Imgur and retrieve the image tag (all in one step); this is useful if you want to use external images in an email message,1,23,FALSE,NA
blastula,d1af2f3b45fb9af0450b788f17eb9fd9,"We can now build sophisticated email messages with HTML blocks. With these responsive, higher-level components, we can create compose elements within the `header`, `body`, and `footer` components. The functions now available for this system are: `blocks()`, `block_title()`, `block_text()`, `block_spacer()`, `block_articles()`, and `block_social_links()`. Two useful subcomponent functions are `article()` and `social_link()`.",1,24,FALSE,NA
blastula,2588e1ff1a017542fa237eb079ba8768,Functions from the `getPass` package are used internally to ask for a password whenever necessary during an interactive session,1,25,FALSE,NA
blastula,a02b4af78acec4baf09b6d5bcec4b50a,Functions from the `keyring` package are used internally to aid in the storage and retrieval of SMTP config/credentials information in the system-wide key-value store (which is cross platform),1,26,FALSE,NA
blastula,6ec71b7d4580c60e10662b7235894e2f,"Moved local image URI data into list component, where references to image data are through CIDs",1,27,FALSE,NA
blastula,ca4233406ff21a41cdedd6a9a7c6cfb3,"Implemented internal functions for Base64-encoding of local images, removing dependency on knitr",1,28,FALSE,NA
blastula,c7b21b351cd1edfcf92d0ef7dca8eea5,Removed dependencies on Java; reworked `send_email_out()` uses a cross-platform binary to send email message via SMTP,1,29,FALSE,NA
blastula,4af634e4eea6f196b18c3e2dbf60ec2a,Added the `prepare_test_message()` function to create test email messages for testing purposes,1,30,FALSE,NA
blastula,ff165697fa1d487b0403afe00c52b41f,Added a `provider` argument to the `create_email_creds_file()` function to more easily configure SMTP settings in a credentials file,1,31,FALSE,NA
blastula,f70af939b1ec314456c3d2104c5d7d88,Added the function `add_readable_time()` to allow for easy insertion of a readable version of the present time in a message,1,32,FALSE,NA
blastula,dc294321d0edb44778d57917a065e5de,"Added functions to compose (`compose_email()`), preview (`preview_email()`), and send (`send_email_out()` and `send_by_mailgun()`) HTML email messages",1,33,FALSE,NA
blastula,6c68288a2fd70f3b6836c109fa1b9671,"Added helper functions for inserting HTML fragments into the message body (`add_cta_button()`, `add_image()`, and `add_ggplot()`)",1,34,FALSE,NA
blastula,54f90693d38e6733638632ef7166bcd8,Added a function to help generate a secret credentials file for sending email through SMTP,1,35,FALSE,NA
bslib,472bf502a46cd70ae3cdf7af00633cf1,"`as_fillable_container()`, `as_fill_item()` and `as_fill_carrier()` now always include the htmltools fill CSS dependency. This means that they are no longer usable with the `$addAttr()` `htmltools::tagQuery` method; authors should instead pass elements to the `as_fillable_container()` and `as_fill_*()` functions and use the `css_selector` argument to apply fill options to specific elements. (#946)",1,1,FALSE,NA
bslib,69a9216fbaf5b50cf8ca87b47eab6571,"A `sidebar()` passed to `page_sidebar()`/`page_navbar()` is now always open (and not collapsible) by default on mobile screens. To revert to the old behavior, set `open = ""desktop""` in the `sidebar`. (#943)",1,2,FALSE,NA
bslib,6e7843afabc12da123e75d1af15032b5,"Added `input_task_button()`, a replacement for `shiny::actionButton()` that automatically prevents an operation from being submitted multiple times. It does this by, upon click, immediately transitioning to a ""Processing..."" visual state that does not let the button be clicked again. The button resets to its clickable state automatically after the reactive flush it causes is complete; or, for advanced scenarios, `update_task_button()` can be used to manually control when the button resets.",1,3,FALSE,NA
bslib,cad301a44f23649177b0edd29543fff4,`layout_columns()` was rewritten in Typescript as a custom element to improve the portability of the component. (#931),1,4,FALSE,NA
bslib,8032ce5ed8a6c7f5bdabab5a7062fefd,"When `layout_columns()` is given a `row_heights` value that is not a `breakpoints()` object, that value is used for the row heights at all breakpoints. Previously, it was used for the row heights from `""sm""` up. (#931)",1,5,FALSE,NA
bslib,37e949bfeb91fc8dddffa680b9f18426,"When `layout_columns()` is given a `col_widths` value with `breakpoints()` at `lg` or wider, it now uses a better default column width for the smaller breakpoints not listed in the `col_widths` value. That said, you can always include `sm` or `md` in your `breakpoints()` definition to have complete control over column widths at those sizes. (#931)",1,6,FALSE,NA
bslib,4604a6780e6e56cbe0ec700424928efd,"`sidebar()` now supports separate choices for the `open` argument on mobile or desktop screens. You can pass a list with `mobile` and `desktop` values to `open` to control the sidebar's initial state on each screen size, choosing from `""open""`, `""closed""`, or `""always""` (for an always-open sidebar that cannot be collapsed). (#943)",1,7,FALSE,NA
bslib,ffd444468c0b6194c5a52c2098a51474,The sidebar's collapse toggle now has a high `z-index` value to ensure it always appears above elements in the main content area of `layout_sidebar()`. The sidebar overlay also now receives the same high `z-index` on mobile layouts. (#958),1,8,FALSE,NA
bslib,884cc18273a745b99f0f7a9b043f1ef5,"We've improved the accessibility of full screen cards created with `card(full_screen = TRUE, ...)`. The *Expand card* button is now accessible via keyboard navigation and appropriate ARIA attributes connect the card with the expand and close buttons. For JavaScript-oriented users, the expansion/collapse is now accompanied by a custom `bslib.card` event with the full screen state reported in the `event.detail.fullScreen` property. (#959)",1,9,FALSE,NA
bslib,d2f7c705b400e0d6681810061c2b4c44,"Full-screen cards are now supported on mobile devices: the *Expand card* button is revealed when a user taps on the card (thanks @​Damonsoul, #961).",1,10,FALSE,NA
bslib,b47162d8e9c6f85ba93d4f8a4a349319,"`layout_columns()` now always uses a 12-unit grid when the user provides an integer value to `col_widths` for any breakpoint. For example, `breakpoints(md = 3, lg = NA)` will pick a best-fitting layout for large screen sizes using the 12-column grid. Previously, the best fit algorithm might adjust the number of columns as a shortcut to an easy solution. That shortcut is only taken when an auto-fit layout is requested for every breakpoint, e.g. `col_widths = breakpoints(md = NA, lg = NA)` or `col_widths = NA`. (#928)",1,11,FALSE,NA
bslib,c4e8039eec476f499a343c8e8ce3da81,"Fixed an issue where the page might be given a window title of `NA` if the primary `title` argument of a page function, such as `page_sidebar()`, is `NULL` or a suitable window title could not be inferred. (#933)",1,12,FALSE,NA
bslib,f97db48b9e6cb9c5d78c65c160a9c02e,"Fixed the CSS for the `bslib-page-dashboard` class in the Shiny preset to correctly support `page_sidebar(class = ""bslib-page-dashboard"")` and `page_navbar(nav_panel(class = ""bslib-page-dashboard""))`. (#917)",1,13,FALSE,NA
bslib,39db23a0a790ddddaf4d2ff5a6aa634e,"Fixed a minor bug to allow the themer demo to be run directly, outside of `bs_theme_preview()`. (#918)",1,14,FALSE,NA
bslib,af455f5af724a48e67f9c2ec0fc348c4,"`bs_theme()` now defaults to `preset=""shiny""`. This provides an additional set of theming defaults and rules that make it easier to create Shiny apps (in particular, dashboards) that look good out of the box. To revert to the previous behavior, set `bs_theme(preset=""bootstrap"")`. (#711)",1,15,FALSE,NA
bslib,ed6b4aa69d9506a3ade9fe07b8327d8a,"`value_box()` no longer defaults to `theme_color = ""primary""`. To restore the previous behavior, please use `theme = ""primary""`. In addition to the default style change, the `theme_color` is now deprecated in favor of `theme`. (#758)",1,16,FALSE,NA
bslib,fdd55718fa4c7f438bb8399d67f1d3ea,"`page_navbar()` now defaults to `underline = TRUE`, meaning that navigation links in the navbar now have underline styling by default (set `underline = FALSE` to revert to previous behavior). (#784)",1,17,FALSE,NA
bslib,ffe92dc5639621eaccb7595ac996ba34,"`page()` now returns a `<body>` tag instead of `tagList()`. This change allows `page()` to treat named arguments as HTML attributes for the `<body>` tag, making it possible to add page-level classes or other attributes. (#809)",1,18,FALSE,NA
bslib,064e4925511eab9b53e4fd2d33c6cd80,"The JS/CSS assets behind `{bslib}` components (e.g., `card()`, `value_box()`, etc) are all now bundled into one `htmlDependency()` and included with the return value of `bs_theme_dependencies()` (previously they were attached at the component-level). (#810)",1,19,FALSE,NA
bslib,0a27af39b6d999b99ccd183c6e7ac7b0,"`layout_column_wrap()` no longer requires `width` and `width` is no longer the first argument, meaning that `width` must be named if used. The new default is `width = ""200px""`, which combines with `fixed_width = FALSE` to produce a responsive layout where each column is at least 200px wide. This means that, in most cases, `layout_column_wrap()` can automatically layout an unknown number of items without you having to set `width`. (#853)",1,20,FALSE,NA
bslib,60ebb5dcab3a5c8ddf14784112349aa7,"The default version of Bootstrap is now v5.3.1, upgraded from v5.2.2. The most notable thing that comes with the update is the ability to toggle between light/dark color modes purely client-side (i.e., no calls to Sass required). (#749, #764)",1,21,FALSE,NA
bslib,2d73d758d8dc1b0e3a9726a32c7899f1,"Added `input_dark_mode()`, a new input control that provides a toggle button that can be used to switch between the dark and light modes when using Bootstrap 5.3. By default, dark mode is applied automatically if the user's operating system is also in dark mode. App authors can toggle dark mode programmatically from the server using `toggle_dark_mode()`, and if you provide `input_dark_mode()` with an `id`, you can read the current color mode via the corresponding input value. (#787)",1,22,FALSE,NA
bslib,2f682eb1b206f6ff64a237d28524fa3a,"Shiny's Bootstrap theme preset is now used by default in `bs_theme()` and all related `page_*()` functions in bslib. This theme brings a fresh new design to all Shiny apps and dashboards created with bslib. This dashboard design anticipates heavy use of cards for organizing content, and works best with a gray background for contrast with minimalistic white cards. This treatment can be enabled in `page_sidebar()`, `page_fillable()` and other `page_*()` functions by adding the `bslib-page-dashboard` class to the page container or body tag. The preset can also be customized using the `$bslib-dashboard-design` and `$bslib-enable-shadows` Sass variables. Set these to `false` to disable the dashboard treatment and card shadows, respectively. These variables can be set via `bs_theme()`, e.g. `bs_theme(""bslib-dashboard-design"" = ""false"")`. (#897, #906)",1,23,FALSE,NA
bslib,5d024e2b2b9ad327ebe58822a6265aa8,`value_box()` has been updated with a number of new features and improvements:,1,24,FALSE,NA
bslib,5d024e2b2b9ad327ebe58822a6265aa8,"• `value_box()` now supports many new themes and styles, or fully customizable themes using the new `value_box_theme()` function. To reflect the new capabilities, we've replaced `theme_color` with a new `theme` argument. The previous argument will continue work as expected, but with a deprecation warning. (#758) In addition to the Bootstrap theme names (`primary` ,`secondary`, etc.), you can now use the main Boostrap colors (`purple`, `blue`, `red`, etc.). You can also choose to apply the color to the background or foreground by prepending a `bg-` or `text-` prefix to the theme or color name. Finally, we've also added new gradient themes allowing you to pair any two color names as `bg-gradient-{from}-{to}` (e.g., `bg-gradient-purple-blue`). These named color themes aren't limited to value boxes: because they're powered by small utility classes, you can use them anywhere within your bslib-powered UI.",2,25,FALSE,`value_box()` has been updated with a number of new features and improvements:
bslib,5d024e2b2b9ad327ebe58822a6265aa8,"• Added `showcase_bottom()`, a new `value_box()` layout that places the showcase below the value box title and value, perfect for a full-bleed plot. (#758)",2,26,FALSE,`value_box()` has been updated with a number of new features and improvements:
bslib,5d024e2b2b9ad327ebe58822a6265aa8,"• `showcase_left_center()` and `showcase_top_right()` no longer take two values for the `width` argument. Instead, they now take a single value (e.g., `width = ""30%""`) representing the width of the showcase are in the value box. Furthermore, they've both gained `width_full_screen` arguments that determine the width of the showcase area when the value box is expanded to fill the screen. (#758)",2,27,FALSE,`value_box()` has been updated with a number of new features and improvements:
bslib,5d024e2b2b9ad327ebe58822a6265aa8,"• The `showcase_layout` argument of `value_box()` now accepts one of three character values: `""left center""`, `""top right""`, `""bottom""`. (#758)",2,28,FALSE,`value_box()` has been updated with a number of new features and improvements:
bslib,5d024e2b2b9ad327ebe58822a6265aa8,• A new Build a Box app is now available online or via bslib. See `?value_box()` for details. The app helps preview a set of value boxes while you configure and customize their appearance and provides you with code to copy and paste into your app. (#790),2,29,FALSE,`value_box()` has been updated with a number of new features and improvements:
bslib,93fb6f404e5df4e088acf53db4dc62b6,Added new `navset_underline()` & `navset_card_underline()` functions as well as a `underline` argument to `page_navbar()` to leverage the new nav-underline styling on navigation links. (#784),1,30,FALSE,NA
bslib,6771710e572fe56b3dd8e639b66a049f,The `bs_themer()` app now supports previewing the dark mode variant of Bootstrap 5 themes. (#767),1,31,FALSE,NA
bslib,49593b06d0606ddbb6c101b2f71c4e5f,Improved the style and appearance of the button to enter full screen in `card()`s and `value_box()`es to better adapt to Bootstrap's dark mode. (#780),1,32,FALSE,NA
bslib,28c355cbc00893af0b658da323fbe0aa,"`htmltools::save_html()` now works as expected when applied directly to components (e.g., `card()`, etc) and pages with a non-default theme. (#823, #815)",1,33,FALSE,NA
bslib,04b4569612f3c98e60acfc2e7d1d9bcb,"`layout_sidebar()` received a new design. The button to collapse and expand the sidebar now appears at the top (instead of the bottom) of the sidebar. On mobile devices, the sidebar now fills the `layout_sidebar()` area as an overlay, rather than expanding from above the main content area. **Note** the `max_mobile_height` argument of `sidebar()` determines the maximum height of the sidebar area on mobile, but it now only applies when `open = ""always""`. (#798)",1,34,FALSE,NA
bslib,9832958be0b05543cfe0ce789766260b,"`layout_sidebar()` now uses an `<aside>` element for the sidebar's container and a `<header>` element for the sidebar title. The classes of each element remain the same, but the semantic meaning of the elements is now better reflected in the HTML markup. (#580)",1,35,FALSE,NA
bslib,b4ea2c64def57ab406bfd3c3df4b06f9,"In `layout_column_wrap()`, when `width` is a CSS unit -- e.g. `width = ""400px""` or `width = ""25%""` -- and `fixed_width = FALSE`, `layout_column_wrap()` will ensure that the columns are at least `width` wide, unless the parent container is narrower than `width`. (#851)",1,36,FALSE,NA
bslib,abc34536fb070083f7bdffc47ce42376,`bs_global_theme()` gains a `preset` argument to match the function signature of `bs_theme()`. (#896),1,37,FALSE,NA
bslib,3494a7239ecea9527b3861f4af70637f,"`toggle_switch()` now works correctly when called from within a Shiny module. `update_switch()` worked as expected, but `toggle_switch()` didn't apply the module's namespace to the `id` of the switch to be updated. (#769)",1,38,FALSE,NA
bslib,2b23f3a56f1002d286b15efca103a4ff,"Filter controls in the popovers of `DT::datatable()` tables now better match the current Bootstrap theme and are responsive to the dark mode setting in Bootstrap 5.3. (#267, #775).",1,39,FALSE,NA
bslib,c5559d425d198b9e867ce61a5a22ba60,"A double border no longer appears when an accordion is used inside a `sidebar(open=""always"")` context. (#795)",1,40,FALSE,NA
bslib,3df04227a15e59937f503cddf7a99faa,"`layout_sidebar()` no longer gives the sidebar main content area the `role=""main""` attribute. (#580)",1,41,FALSE,NA
bslib,8d29056448d51993bb1538c2c9e0ff83,"Added `tooltip()`, `update_tooltip()`, and `toggle_tooltip()` for easy creation (and server-side updating) of Bootstrap tooltips (a way to display additional information when focusing (or hovering over) a UI element). (#662)",1,42,FALSE,NA
bslib,6524350cd147615bdf2d4baadfd532bf,"Added `popover()`, `update_popover()`, and `toggle_popover()` for easy creation (and server-side updating) of Bootstrap popovers. Popovers are similar to tooltips, but are more persistent, and should primarily be used with button-like UI elements (e.g., `actionButton()`, `bsicons::bs_icon()`, etc). (#702)",1,43,FALSE,NA
bslib,046935fa81b4449994fe2e239570f19f,Added `input_switch()` and `update_switch()` for easy creation (and server-side updating) of a Bootstrap's switch input (an on-off toggle for binary input values). (#483),1,44,FALSE,NA
bslib,71dab2da7fef55eb60917eb1d0ec1338,Added two new toggle functions: `toggle_switch()` for toggling the state of an `input_switch()` element and `toggle_sidebar()` for toggling the state of a `sidebar()` element (`sidebar_toggle()` remains as an alias of `toggle_sidebar()`). (#709),1,45,FALSE,NA
bslib,f27636f9f80ba2addf9a2ad221a1a23c,"Closed quarto-dev/quarto-cli#6081: `{bslib}`'s components (e.g., `card()`, `sidebar()`, etc.) now work more sensibly in Quarto docs. (#664)",1,46,FALSE,NA
bslib,3c69b267d594fa2260a368e203db085c,Closed #672: `sidebar()` gains `gap` and `padding` arguments to control the vertical gap between items in the sidebar and the padding around the sidebar's content. (#725),1,47,FALSE,NA
bslib,4670029b8a38c51c6fc7fdfbb6396991,Closed #636: Outputs in sidebars now work as expected when an initially-closed sidebar is opened. (#624),1,48,FALSE,NA
bslib,d0e9e629cda22baee4724b5158044348,Closed #640: `accordion()` no longer errors when an `id` isn't supplied inside a Shiny `session` context. (#646),1,49,FALSE,NA
bslib,9f7c9baa76d2db0e2e0a9dd705f207cb,"Closed #639: `nav_panel()`'s `icon` argument now supports generic `HTML()`, meaning that things like `bsicons::bs_icon()` and `fontawesome::fa()` can be used as values. (#645)",1,50,FALSE,NA
bslib,61b8610fa19f45ee76c8e38c79ee12ed,"Light-styled buttons in bslib-provided Bootswatch themes are now consistent with their design in Bootswatch. Previously, they were inadvertently styled similarly to secondary buttons. (#687)",1,51,FALSE,NA
bslib,1b0a2183cd1860d42109d9784c0a397e,Closed #727: `layout_column_wrap()` now enforces equal column widths by avoiding layout issues caused by grid container overflow. (#729),1,52,FALSE,NA
bslib,706b9a0c397e7cb3f64541559c83c5df,"`card_body()` now provides the same behavior as `card_body_fill()` (i.e., it is both a fillable container and fill item) by default. And, now, since `card_body()` can do everything `card_body_fill()` can do, `card_body_fill()` has been deprecated. The main benefit of this change is that `card(full_screen = TRUE, ...)` with output(s) passed to `...` ""just works"" in an intuitive way. To revert to the previous behavior, set `fillable = FALSE` and `fill = FALSE` in calls to `card_body()` and set `wrapper = function(x) card_body(x, fillable = FALSE, fill = FALSE)` in calls to `card()`. (#498)",1,53,FALSE,NA
bslib,a57639092d0a8ee54435f2628b615b53,"Closed #375: `margin-top` is no longer included on header tags that aren't created via pandoc. If this negatively impacts spacing above headers, consider adding a suitable utility class (for example, change `shiny::titlePanel(""My title"")` to `tagAppendAttributes(titlePanel(""My title""), class = ""mt-3"", .selector = ""h2"")`). (#396)",1,54,FALSE,NA
bslib,5b4277bbc730f4b3fa6876d084b72bab,"`page_fill()` (now called `page_fillable()`) had several breaking changes (listed below) to better accommodate filling layouts. If this breaks existing behavior, consider using `shiny::fillPage(theme = bslib::bs_theme(), ...)` instead of `page_fill()`.",1,55,FALSE,NA
bslib,5b4277bbc730f4b3fa6876d084b72bab,• `page_fill()` now produces a `<body>` tag with `display:flex` (instead of `display:block`).,2,56,FALSE,"`page_fill()` (now called `page_fillable()`) had several breaking changes (listed below) to better accommodate filling layouts. If this breaks existing behavior, consider using `shiny::fillPage(theme = bslib::bs_theme(), ...)` instead of `page_fill()`."
bslib,5b4277bbc730f4b3fa6876d084b72bab,"• `page_fill()` no longer fills the windows height on mobile (i.e., narrow screens) by default (set `fillable_mobile = TRUE` to restore the old behavior).",2,57,FALSE,"`page_fill()` (now called `page_fillable()`) had several breaking changes (listed below) to better accommodate filling layouts. If this breaks existing behavior, consider using `shiny::fillPage(theme = bslib::bs_theme(), ...)` instead of `page_fill()`."
bslib,5b4277bbc730f4b3fa6876d084b72bab,"• `page_fill()` now adds `padding` and `gap` by default, set `padding = 0` and `gap = 0` to restore the old behavior.",2,58,FALSE,"`page_fill()` (now called `page_fillable()`) had several breaking changes (listed below) to better accommodate filling layouts. If this breaks existing behavior, consider using `shiny::fillPage(theme = bslib::bs_theme(), ...)` instead of `page_fill()`."
bslib,b43ae62235b26ddd4212f788afc66a8d,`page_navbar()` (and also `shiny::navbarPage()` with `theme = bs_theme()`) had a couple breaking changes:,1,59,FALSE,NA
bslib,b43ae62235b26ddd4212f788afc66a8d,"• The container of each page is now `display:flex` (instead of `display:block`). If this breaks existing behavior, set `page_navbar()`'s `fillable` argument to `FALSE`.",2,60,FALSE,`page_navbar()` (and also `shiny::navbarPage()` with `theme = bs_theme()`) had a couple breaking changes:
bslib,b43ae62235b26ddd4212f788afc66a8d,"• `header` and `footer` is no longer wrapped in an additional `shiny::fluidRow()` container. If this breaks existing behavior, consider wrapping the `header` and `footer` value(s) with `shiny::fluidRow()`). (#479)",2,61,FALSE,`page_navbar()` (and also `shiny::navbarPage()` with `theme = bs_theme()`) had a couple breaking changes:
bslib,1eefdde2894c49bc2f354ef9f73b91ee,"`layout_column_wrap()`'s `fill` argument now controls whether or not the *layout container* is allowed to grow/shrink to fit a fillable container (e.g., `page_fillable()`). It also gains a new `fillable` argument for controlling whether *UI elements* are allowed to fill their row height. This is more consistent with the meaning of `fill` in other functions, like `card()`, `card_body()`, `layout_sidebar()`, etc. (#498)",1,62,FALSE,NA
bslib,b5dd6671df391a0525827546a065f1d2,"Defaults for the following Bootstrap 5 Sass variables were changed to `null`: `$accordion-button-active-bg`, `$accordion-button-active-color`, and `$accordion-icon-active-color`. To restore the old behavior, do `bs_add_variables(theme, ""accordion-button-active-bg"" = ""tint-color($component-active-bg, 90%)"", ""accordion-button-active-color"" = ""shade-color($primary, 10%)"", ""accordion-icon-active-color"" = ""$accordion-button-active-color"", .where = ""declarations"")`. (#475)",1,63,FALSE,NA
bslib,68bd07af8e2331800c4cdc8a2942ab99,"Added `page_sidebar()`, for easy dashboard creation. (#588)",1,64,FALSE,NA
bslib,a83f7b068e6735b72d3df261b852469d,Added a `sidebar()` API for creating sidebar layouts in various contexts. See the article to learn more. (#479),1,65,FALSE,NA
bslib,1166f12c85650322a17ae92ed4eab495,"Added `layout_columns()`, for responsive column-based grid layouts. (#587)",1,66,FALSE,NA
bslib,d69fd1e98bf26e5e9bc935aef1c1f040,Adds a new `accordion()` API. See `help(accordion)` for examples and details. Note also `accordion()` is designed to work well inside a `sidebar()`. (#475),1,67,FALSE,NA
bslib,f1e17ad00a56b6420218c7fbcebec30a,"`page_navbar()`, `navset_card_tab()`, and `navset_card_pill()` gain a `sidebar` argument for putting a `sidebar()` on every page/tab/pill. (#479)",1,68,FALSE,NA
bslib,49508b5f31cd18cb462e496b4f7a5a7d,`page_navbar()` gains a `fillable` argument to make the content of particular page(s) fit the window/card. (#479),1,69,FALSE,NA
bslib,59c1daec8e14899958e42f330031b2d6,"`page_fillable()` (aka, `page_fill()`) is now considered a `fillable` container, meaning that `fill` items like `card()`, `layout_column_wrap()`, and `layout_sidebar()` now grow/shrink to fit the window's height when they appear as a direct child of `page_fillable()`. (#479)",1,70,FALSE,NA
bslib,f81530832f629029fc77425e08895fd7,`page_navbar()` and `page_fillable()` gain `fillable_mobile` arguments to control whether the page should grow/shrink to fit the viewport on mobile. (#479),1,71,FALSE,NA
bslib,802f4c1151a550f25a2c33c3e39248b2,"`card()`, `value_box()`, and `card_image()` gain `max_height`/`min_height` and `fill` arguments. (#498)",1,72,FALSE,NA
bslib,08edebaced0917477979bfb11a0f99e0,`card_body()` gains a `padding` argument. (#587),1,73,FALSE,NA
bslib,6e8d10cd8b9b9f7020937e891b775f3f,"Added new `as_fill()`, `as_fillable()`, `as_fill_carrier()`, `is_fill()`, and `is_fillable()` for testing and coercing potential to fill. (#498)",1,74,FALSE,NA
bslib,cc0e5b4bdd31aee16897c433f3a25feb,Closed #558: nested cards with `fullscreen = TRUE` now correctly and individually expand to fill the window. Tab focus behavior while in full screen mode has also been improved. (#557),1,75,FALSE,NA
bslib,abb576d624b8f347e1e178267b162443,"Closed #573: Improved styling when a dynamic result is supplied to `value_box()`'s `title`/`value` (e.g., `value_box(""Dynamic value"", uiOutput(""value""))`). (#605)",1,76,FALSE,NA
bslib,8710d80c9090ceeadcc3a164ca841327,`card_body_fill()` has been deprecated in favor of `card_body()`. (#498),1,77,FALSE,NA
bslib,04983427b971145e348fc87cfb85cd6a,`page_fill()` has been deprecated in favor of `page_fillable()`. (#498),1,78,FALSE,NA
bslib,f99d2d00c8dd4ee4f0c6a45d69b47369,`nav()` has been deprecated in favor of `nav_panel()` and `nav_content()` in favor of `nav_panel_hidden()`. (#476),1,79,FALSE,NA
bslib,515cdb2a6153a4b40d6749e528f0b8ad,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):,1,80,FALSE,NA
bslib,515cdb2a6153a4b40d6749e528f0b8ad,• `navs_tab()` is now `navset_tab()`,2,81,FALSE,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):
bslib,515cdb2a6153a4b40d6749e528f0b8ad,• `navs_pill()` is now `navset_pill()`,2,82,FALSE,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):
bslib,515cdb2a6153a4b40d6749e528f0b8ad,• `navs_pill_list()` is now `navset_pill_list()`,2,83,FALSE,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):
bslib,515cdb2a6153a4b40d6749e528f0b8ad,• `navs_bar()` is now `navset_bar()`,2,84,FALSE,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):
bslib,515cdb2a6153a4b40d6749e528f0b8ad,"• `navs_tab_card()` and `navs_pill_card()` are now `navset_card_tab()` and `navset_card_pill()`, respectively.",2,85,FALSE,The `navs_*()` family of functions have been deprecated in favor of `navset_*()` (#476):
bslib,b00a7861c0893b8d0479abe78f236beb,"Upgraded Bootstrap 5 (i.e., `bs_theme(version = 5)`) from 5.1.3 to 5.2.2. (#438, #455)",1,86,FALSE,NA
bslib,4fddb668c25f57bfbd130c79e3c84dd7,"Adds a new `card()` API as well as `value_box()` and `layout_column_wrap()`. To learn more about this new functionality, refer to these new pkgdown articles:",1,87,FALSE,NA
bslib,4fddb668c25f57bfbd130c79e3c84dd7,• https://rstudio.github.io/bslib/articles/cards.html,2,88,FALSE,"Adds a new `card()` API as well as `value_box()` and `layout_column_wrap()`. To learn more about this new functionality, refer to these new pkgdown articles:"
bslib,4fddb668c25f57bfbd130c79e3c84dd7,• https://rstudio.github.io/bslib/articles/value-boxes.html,2,89,FALSE,"Adds a new `card()` API as well as `value_box()` and `layout_column_wrap()`. To learn more about this new functionality, refer to these new pkgdown articles:"
bslib,4fddb668c25f57bfbd130c79e3c84dd7,• https://rstudio.github.io/bslib/articles/column-layout.html,2,90,FALSE,"Adds a new `card()` API as well as `value_box()` and `layout_column_wrap()`. To learn more about this new functionality, refer to these new pkgdown articles:"
bslib,9f0f9a46f1becfb9c58fa5e0ec666149,Closed #458. This release `{bslib}` now requires `{memoise}` 2.0.1 or above.,1,91,FALSE,NA
bslib,a8ac420f8e2ae9f1df5a610e25637d90,"`bs_theme()` now defaults to `version = 5` (i.e., Bootstrap 5). If this change happens to break an existing app, consider specifying `bs_theme(version = 4)` to revert the change in the Bootstrap version. (#374)",1,92,FALSE,NA
bslib,65199970248f2e8ae0a1dec49db39e0e,"The default coloring on some Bootswatch 4+ theme's `.navbar-default`/`.navbar-inverse` class has changed slightly to better match their Bootswatch 3 coloring. Also, since this coloring is now based solely on `$navbar-*` variables, Bootswatch themes now work better in combination with custom `$navbar-*` values (e.g., `bs_theme(""navbar-bg"" = ...)` can be used to provide the background color, and foreground colors will automatically contrast appropriately). (#392)",1,93,FALSE,NA
bslib,7c78a0f41a67d2aec85f8c3453a406fc,"Upgraded Bootstrap 5 (i.e., `bs_theme(version = 5)`) from 5.1.0 to 5.1.3 (#378)",1,94,FALSE,NA
bslib,d7414488cc9e511dd197401546eaf498,"Closed #369: `bs_dependency_defer()` now memoises `func` (by default), reducing the time required to render multiple instances of the same dynamically themable widget. (#405)",1,95,FALSE,NA
bslib,051a12eb530baab198048d2b8398da8d,"Closed #393: Bootstrap 5's `$form-check-label-*` variables now work as expected with `shiny::radioButtons()`, `shiny::checkboxInput()`, and `shiny::checkboxGroupInput()`. (#395)",1,96,FALSE,NA
bslib,790b5853a6a81a2fe86e691bdbc94a31,"Closed #382: Various fixes for using `shiny::checkboxInput()`, `shiny::checkboxGroupInput()`, and `shiny::radioButton()` with `bs_theme(version = 5, bootswatch = ""sketchy"")`. (#385)",1,97,FALSE,NA
bslib,2f3dee65008b9b96c912d85ff176d343,"Closed #377: make sure `shiny::tabsetPanel(type = ""hidden"")` (i.e., `bslib::navs_hidden()`) stays hidden when used with `bs_theme()`. (#379)",1,98,FALSE,NA
bslib,24aa1be0c61b17cdbe82cfc96c60b009,Closed #424: fixed an issue with `nav_menu()` appearing first in a `navs_*()` container with Bootstrap 4+.,1,99,FALSE,NA
bslib,6af2af93693340bb7589c3c4862e05e7,"Closed #431: Bootstrap 5 navbars no longer have an unwanted ""Toggle Navigation"" label when collapsed. (#432)",1,100,FALSE,NA
bslib,1fcc45ad38cf3cbc8ca253ce24bb3aaa,"Closed #400: `nav_menu(align=""right"")` now works with Bootstrap 5. (#401)",1,101,FALSE,NA
bslib,2292497752426dc0e3282b86464af83f,"Closed #390: using `bs_theme(bootswatch = ""paper"", version = 5)` or `bs_theme(bootswatch = ""readable"", version = 5)` no longer errors. (#391)",1,102,FALSE,NA
bslib,81b376f954ff803bbc26977eea44c064,"Upgraded Bootstrap 5 (i.e., `bs_theme(version = 5)`) from 5.0.2 to 5.1.0 (#365)",1,103,FALSE,NA
bslib,9a553410c52bd3a32ea6ea994e762020,"Closed rstudio/shiny#3519: `nav_menu()` (i.e., `shiny::navbarMenu()`) wasn't producing an `.active` class on it's `.dropdown` container properly. (#372)",1,104,FALSE,NA
bslib,b9eff252f10b4f7bcd19aeefdab6d2c9,Closed rstudio/rmarkdown#2154: `{magrittr}`'s pipe operator (`%>%`) is no longer re-exported by `{bslib}`. Either `library(magrittr)` to make `%>%` available and/or use use R 4.1's pipe operator (`|>`).,1,105,FALSE,NA
bslib,a6a77511c821bccc68504753137bbb60,"Closed #82: Added support for Bootstrap 5 (via `bs_theme(version = 5)`). Bootstrap 4 remains the default in this release, but the next release, the default will likely change to Bootstrap 5.",1,106,FALSE,NA
bslib,624c3c5289d4fbe075d3efd257b45453,Closed #6: rmarkdown's .tabset-fade class now works with Bootstrap 4+ since legacy use of .nav .fade is now officially supported in Bootstrap 4+. (#325),1,107,FALSE,NA
bslib,49669cd4f3db4826d946db520a2b930c,"Closed #251: New `bs_theme()` options (`navbar-bg`, `navbar-light-bg`, and `navbar-dark-bg`) for more easily customizing the navbar's background (and foreground) color (#253, #271).",1,108,FALSE,NA
bslib,8f9641532f3103bb9114e5671a616405,Closed #281: New `bs_theme()` argument (`font_scale`) for easier scaling of the base font size (#288).,1,109,FALSE,NA
bslib,19af3e379bea9d8900ab463db750dcff,"Closed #256 and #282: Font file importers (`font_google()`, `font_link()`, and `font_face()`) are now re-exported from the `{sass}` package. As a result, they may now be used with any Sass variable (e.g., `bs_theme(""input-font-family"" = font_google(""Pacifico""))`) as well as inside Rmd yaml without `!expr` (e.g., `input-font-family: google: Pacifico` -- see #256 for more details). A new `font_collection()` function was also added for a more convenient way to specify font fallbacks (#291).",1,110,FALSE,NA
bslib,74749de6bc03064527da96819151b0b7,Closed #255: `bs_themer()` now emits sensible `yaml` front matter when used within an Rmd document (#288).,1,111,FALSE,NA
bslib,0a7de2e2ec751416bb8d512619d7679d,Closed #227: `bs_themer()` now overlays a spinner during Sass compilation (#243).,1,112,FALSE,NA
bslib,1e26fee22a684e9477fa98024cae60f6,Closed #278: `{bslib}` now includes `rmarkdown::html_document` templates demonstrating example usage with `{bslib}` and `{thematic}` (#288).,1,113,FALSE,NA
bslib,d4f9939f39f59c8d3bb599a13f68658c,Closed #231: Upgraded from Bootstrap 4.5.3 to 4.6.0 (#254).,1,114,FALSE,NA
bslib,49982a987d1c9a889e97eeaab35b85da,Closed #237: `<blockquote>` tags now have border-left/padding styles with `version = 4` (to mirror the `version = 3` behavior) (#239).,1,115,FALSE,NA
bslib,b3bd6ff2f8df7885237ef4bacec87957,"Closed #279: Warnings about low color contrasts are now suppressed by default, unless `shiny::devmode()` is enabled. To enable/disable these warnings, set the new `options(bslib.color_contrast_warnings = )` to `TRUE`/`FALSE` (#287).",1,116,FALSE,NA
bslib,000212faa82a2aaa26ab2f315b1968a9,`bs_theme_dependencies()` now includes Sass source maps when `shiny::devmode()` is enabled (#312).,1,117,FALSE,NA
bslib,0363a3b70b1fb4aab1b58d8bc600ef6a,"Added new `bs_add_functions()`/`bs_add_mixins()` and deprecated `bs_add_declarations()` to reflect `sass::sass_layer()`'s new ability to place `functions` *before* variable `defaults`. As a result, variable definitions may now use functions defined with `bs_add_functions()`. (#311)",1,118,FALSE,NA
bslib,10c50cf47fcf2a1c53249f71e3c26d70,"Closed #236, #230, #242, #187, #215, #250: Addressed various cosmetic issues with CSS (#249).",1,119,FALSE,NA
bslib,78dc7177244c919fef3b7ee39f1f2963,Closed #289: collapsed navbar toggle now correctly floats to the right (#290).,1,120,FALSE,NA
bslib,520cf0e516c34af564a3e58dde9dac9f,Closed rstudio/flexdashboard#316: fixed an issue with navbar nav spacing/alignment (#286).,1,121,FALSE,NA
bslib,d039a3031bb02a09a0c756f87b585f49,"Initial release of the package, see https://rstudio.github.io/bslib/",1,122,FALSE,NA
chromote,750d7f69786afb4051d68bda3c5ff67f,"Breaking change: `Chromote$is_active()` method now reports if there is an active connection to the underlying chrome instance, rather than whether or not that instance is alive (#94).",1,1,FALSE,NA
chromote,eea11f65f28a10e5b29997764962d15d,`Chromote` and `ChromoteSession` gain print methods to give you a snapshot of the most important values (#140).,1,2,FALSE,NA
chromote,189475c95df6b20ed59257e2a41b9171,`Chromote` gains a new `is_alive()` method equivalent to the old `is_active()` method; i.e. it reports on if there is an active chrome process running in the background (#136).,1,3,FALSE,NA
chromote,9ade70d5842fd4f44ede6dda5698867e,`ChromoteSession` now records the `targetId`. This eliminates one round-trip to the browser when viewing or closing a session. You can now call the `$respawn()` method if a session terminates and you want to reconnect to the same target (#94).,1,4,FALSE,NA
chromote,5feda1185f8c997cfcabbd7dbee59d9f,`ChromoteSession$screenshot()` gains an `options` argument that accepts a list of additional options to be passed to the Chrome Devtools Protocol's `Page.captureScreenshot` method (#129).,1,5,FALSE,NA
chromote,dbaa8c3be4d82f1d2c87c9798e6e5b73,"`ChromoteSession$screenshot()` will now infer the image format from the `filename` extension. Alternatively, you can specify the `format` in the list passed to `options` (#130).",1,6,FALSE,NA
chromote,ead1448f7b639c3b49a3f9ad1cb2ebf2,"`--disable-gpu` is no longer included in the default Chrome arguments, except on windows where empirically it appears to be necessary (otherwise GHA check runs never terminate) (#142).",1,7,FALSE,NA
chromote,3e0dc01243e2135cdae94bf4b1e02aee,Fixed #109: An error would occur when a `Chromote` object's `$close()` method was called. (#110),1,8,FALSE,NA
chromote,db86be02f4f36627e444c91abe322c6b,"Fixed #99: When the `$view()` method was called, recent versions of Chrome would display `""Debugging connection was closed. Reason: WebSocket disconnected""`. (#101)",1,9,FALSE,NA
chromote,1056b44f82536f66c5a9f2417c5615cd,"Fixed #89, #91: `find_chrome()` now checks more possible binary names for Chrome or Chromium on Linux and Mac. (thanks @​brianmsm and @​rossellhayes, #117)",1,10,FALSE,NA
chromote,afb6786bac77353eda0353fe48e24d8b,Fixed #22: Added a new `chromote.timeout` global option that can be used to set the timeout (in seconds) for establishing connections with the Chrome session. (#120),1,11,FALSE,NA
chromote,9ab5cbbff96a0e53742c34f366fd9263,Update docs for CRAN (#93),1,12,FALSE,NA
chromote,7f086c2ed139234583535ea8de335acc,Initial package release,1,13,FALSE,NA
cloudml,9258903c4a9e03d60cb4e93fd9a9fc27,Support for Python 3 and TensorFlow 1.15 runtime.,1,1,FALSE,NA
cloudml,ebc54b6d31871b07ee845ca918a07dc7,Fixed jobs hanging after error (#213).,1,2,FALSE,NA
cloudml,d7a9c9d59120f3285bc96da37f003a79,Use ai-platform instead of ml-engine when user have a recent enought Google Cloud SDK.,1,3,FALSE,NA
cloudml,4ea3e2d31b661118cce15fa00d794162,Added the `customCommands` flag in the `cloudml.yml` file to allow users to pass custom OS commands before packages installation. This could be used to install custom system dependencies.,1,4,FALSE,NA
cloudml,68078a132cc08d5b1e5855b5e99c7ea1,Fixed `gcloud_install()` to properly execute `gcloud init` in RStudio terminal under Linux (#177).,1,5,FALSE,NA
cloudml,a064cac7e20a8095a9f41c2fd5df889b,Default to the TensorFlow 1.9 runtime. Previous runtimes can be used through `runtimeVersion` in `config.yml`.,1,6,FALSE,NA
cloudml,fe6e6530950704a1ea6a272103eb3a86,Fixed `gs_rsync()` to avoid creating a local destination directory when destination uses remote storage (#172).,1,7,FALSE,NA
cloudml,674027f67da7ff11bf07a517c7a398d0,Improved terminal support in Windows to launch by default correct shell.,1,8,FALSE,NA
cloudml,3f6d0ee99ef9d316635b6a92f2893036,Added support for `dry_run` in `cloudml_train`.,1,9,FALSE,NA
cloudml,4410e0b45058e6ea06210643914bfb74,Fixed CRAN results for cloudml.,1,10,FALSE,NA
cloudml,d353fcd11931008f3108e0f67254965f,Fixed packrat package missing error (#168).,1,11,FALSE,NA
cloudml,2472d1419bfb9acd78b6baea00793185,First release to CRAN.,1,12,FALSE,NA
config,b7c568be103e9254f1228b664cbea3de,Allow expressions in the `inherits:` line of the yaml file (#38),1,1,FALSE,NA
config,603d47d4988f94b142297dd4e5d318b6,"Fixes bug introduced in v0.3.2 where the result of `config::get()` doesn't have the correct class, resulting in problems converting to JSON (#49)",1,2,FALSE,NA
config,82a899f75647636db005ce97f35bf216,"Better handling of R expressions in the `config.yml`. In particular, you can now refer to other configuration values in the R expression.",1,3,FALSE,NA
config,998e242c0b16cb64fdf25c8b2950a15c,Check if package is attached and throw message to use `config::ge()` instead.,1,4,FALSE,NA
config,b3e22249d0439e33dcce4b3b427263da,New function `with_config()` that might be useful for testing and in vignettes.,1,5,FALSE,NA
config,2b5a035e8d50da325d95159ab22844ec,Allow using a string for `.active_config` in `with_config()`,1,6,FALSE,NA
config,c373550ca50ceb4679bf2a2963a2ad49,"New vignettes, in particular using `config` with Posit Connect.",1,7,FALSE,NA
config,908afe72e5baa12e8ecb614885ab3be5,Better documentation to not attach the package and use `config::get()` instead.,1,8,FALSE,NA
config,828461a36851f4222967721f9f27a62d,"Bug fix: evaluate expressions only for the active config (not all configs). In previous versions of `config`, all expressions in the `yml` file were evaluated, regardless whether these expressions were used in the active config. In this version, the appropriate config is selected, and only then are the expressions evaluated. Fixes #20",1,9,FALSE,NA
config,db281dbb5f30fc7273cd6513c3d4796d,Improved handling of expressions,1,10,FALSE,NA
config,833f15d79ebf7e86ba05c8a4b671f81c,Bug fixes,1,11,FALSE,NA
config,e9634cc17739fea9c929461605cabc02,Add `merge` function to merge one configuration into another.,1,12,FALSE,NA
crosstalk,7ada9edbb0b5288a8207ae921bc55f3f,Some `SharedData` reactive accessors (e.g. `sd$selection()`) were broken when the `SharedData` instance was created in a Shiny module. (#114),1,1,FALSE,NA
crosstalk,aed0eb479ca18069d8e5327c1825bcc1,Closed #87: Fixed an issue where `filter_select()` was double escaping HTML characters. (#141),1,2,FALSE,NA
crosstalk,3f6aa5517f80127bc95af1868ca28a9e,"Removed the Bootstrap HTML dependency attached to `filter_select()`, `filter_checkbox()`, and `bscols()`. This allows `{crosstalk}` to be used in a non-Bootstrap CSS framework (e.g., `{distill}`) without de-grading the overall look. If this change happens to break functionality or de-grade the overall appearance of your `{crosstalk}` site, consider adding `bslib::bs_theme_dependencies(bslib::bs_theme(version = 3))` to the UI definition, which will add back the Bootstrap dependency.",1,3,FALSE,NA
crosstalk,f092a408adf3d4eab8fa9c4acae56e31,Upgraded `filter_select()`'s selectize.js dependency to v0.12.4.,1,4,FALSE,NA
crosstalk,4f80dfec1beab6a0e3578d4bf46a9feb,Upgrade to jQuery v3.5.1.,1,5,FALSE,NA
crosstalk,751bcaa1c8a43448c2e2cf04d5396f86,SharedData now works even when shiny isn't installed.,1,6,FALSE,NA
crosstalk,616af1e64a26fd2fc2490182680f9acc,`shiny` and `ggplot2` are now Suggested packages instead of Imported packages.,1,7,FALSE,NA
crosstalk,2e137807e44fad5f3713547da7c0fb40,Upgrade to Bootstrap v3.4.1 and jQuery v3.4.1.,1,8,FALSE,NA
crosstalk,d8ff457ccef35b369427700497a38ff1,"`selection_factor` behavior was no longer correct with ggplot2 2.2.0, which changed its algorithm for stacking order. Added a `reverse` argument that defaults to detecting ggplot2 version and acting accordingly.",1,9,FALSE,NA
DT,6ae2361ef81f3dcd33942dd8d792bfb3,"Fixed a bug that caused the column used for grouping with the RowGroup extension to change when relocated by the ColReorder extension (thanks, @​isthisthat, @​mikmart, #1109).",1,1,FALSE,NA
DT,499b35ecf60a1038610c5a2c93b4a63d,"Fixed the bug that `replaceData()` failed to work with data that has no column names (thanks, @​mmuurr, #1108).",1,2,FALSE,NA
DT,66095b502b50722a118610e9e6cad832,"`updateSearch()` now sets the slider values based on the new search string for numeric columns (thanks, @​mikmart, #1110).",1,3,FALSE,NA
DT,82a1666dfaa98a0413aa779fc5b23166,"The `searchCols` option now sets the slider values for numeric columns when `server = TRUE` (thanks, @​alexvpickering, @​mikmart, #998).",1,4,FALSE,NA
DT,2e87fac48f7e116dfb1d3042d10308b0,"Added server-side processing support for the SearchBuilder extension (thanks, @​AhmedKhaled945, @​shrektan, @​mikmart, #963).",1,5,FALSE,NA
DT,1dd180e836dbdd14531f81b48c7843ce,"Fixed a bug that caused the date picker widget from the DateTime extension to render incorrectly (thanks, @​mikmart, #1116).",1,6,FALSE,NA
DT,37e62ddb4b05a55b1bafcab7520d40ab,"Column formatting now also applies to range labels shown on filter sliders (thanks, @​GitChub, @​mikmart, #247).",1,7,FALSE,NA
DT,25f1fc096bacb9aea565e53c39faccf6,"Added support for passing custom configuration for initializing filter widgets in JavaScript. Use the `filter` parameter to `datatable()` in the form `filter = list(settings = list(select = ..., slider = ...))` (thanks, @​yogat3ch, @​DavidBlairs, @​mikmart, #1072, #1083).",1,8,FALSE,NA
DT,db3bff1937693dd4ad7e7c2b8601ae4f,"Upgraded DataTables version to 1.13.6 (thanks, @​stla, #1091).",1,9,FALSE,NA
DT,66021bcdc007c1981d664d107098515f,"Searching and sorting work now when columns are re-ordered by the `ColReorder` extension (thanks, @​ashbaldry #1096, @​gergness #534, @​nmoraesmunter #921, @​isthisthat #1069).",1,10,FALSE,NA
DT,221379547809aa226fe01ee8ed64379b,"Fixed disabling selection on hyperlink clicks (thanks, @​guoci, #1093).",1,11,FALSE,NA
DT,c388270dfa2d2a1e33170aba3f2e0d02,"Fixed an error for R \>= 4.3.0 (thanks, @​AntoineMichelet, #1095).",1,12,FALSE,NA
DT,5db80124537f7323aa437b28cc58f0e6,"Fixed a bug that when using `updateSearch()`, the clear button inside the input box doesn't show up, and the table doesn't update when the input is cleared (thanks, @​DavidBlairs, #1082).",1,13,FALSE,NA
DT,c5687f355bb391a4cc58bbdf9e0c135b,"Added support for a list of Booleans as input to the `class` argument of `DT::datatable()` when `style = 'bootstrap'` (thanks, @​pedropark99, #1089). In other words, you can now select the Bootstrap classes you want to use at `DT::datatable()` by using a list of Booleans that select the classes you want to use. In the example below, we are producing an HTML table that uses the `stripe` and `hover` Bootstrap classes:",1,14,FALSE,NA
DT,c5687f355bb391a4cc58bbdf9e0c135b,"```
DT::datatable(mtcars, class = list(stripe = TRUE, compact = FALSE, hover = TRUE), style = ""bootstrap"")
```",1,15,TRUE,NA
DT,9eb1b63e54cdc3b1988eb4ee8a49f87d,"Handle `NULL` return from `bslib::theme_version()` (thanks, @​slodge-work, #1090).",1,16,FALSE,NA
DT,5888ebe2569af1c6c8bda13fcef46423,"Support Bootstrap 5 with `datatable(style = ""auto"")` (thanks, @​gadenbuie, #1074).",1,17,FALSE,NA
DT,184d6dac4a831f381793be300311c7c6,"Fixed a bug that searching would fail when the keyword contains special characters such as `&` (thanks, @​dfriend21 @​olivier7121, #1075).",1,18,FALSE,NA
DT,c4ea6bc52f2d0636e42b81c75ea1ce1b,"Deleted `()` after `eval` in a JS *comment* to prevent Google from treating it as malware, which is just a false alarm (thanks, @​gorkang, #1080).",1,19,FALSE,NA
DT,945f14c35a11c7064fd048217d4fcb4f,"Upgraded DataTables to v1.13.4 (thanks, @​stla, #1063).",1,20,FALSE,NA
DT,6cbeae637f8a652e42dad147cb16a2c8,"It is now possible to edit date columns with the help of calendar inputs (thanks, @​stla, #1064).",1,21,FALSE,NA
DT,1896bc4cb145d61d326dcceb4212a613,"`dataTableOutput()` gains a new `fill` parameter. When `TRUE` (the default), the widget's container element is allowed to grow/shrink to fit it's parent container so long as that parent is opinionated about its height and has been marked with `htmltools::bindFillRole(x, container = TRUE)`. (#2198)",1,22,FALSE,NA
DT,1896bc4cb145d61d326dcceb4212a613,"• The primary motivation for this is to allow DT to grow/shrink inside `bslib::card_body_fill()`. When doing so, you'll also want to set `fillContainer = TRUE` in `datatable()`.",2,23,FALSE,"`dataTableOutput()` gains a new `fill` parameter. When `TRUE` (the default), the widget's container element is allowed to grow/shrink to fit it's parent container so long as that parent is opinionated about its height and has been marked with `htmltools::bindFillRole(x, container = TRUE)`. (#2198)"
DT,128fbe4c069669459d14bb637cfbd968,"Bug fixed: when editing a table, it was impossible to switch from an empty cell to 0 and vice-versa (thanks, @​RozennGZ #1038, @​stla #1039).",1,24,FALSE,NA
DT,41e588c9459e8b20271805632770198d,"When a `datatable()` is created outside a Shiny app, the `selection` argument won't work (thanks, @​bartekch, #1043).",1,25,FALSE,NA
DT,48f964a8014c3daadc8fbc91c7bfcece,"`doGloblSearch()` now works correctly when the input data frame is a tibble (@​mikmart, #1044).",1,26,FALSE,NA
DT,3b48e8061678afcc54929db06ad88eaa,Upgraded DataTables to v1.12.1.,1,27,FALSE,NA
DT,ef7c42a8d17d4724ccdc69607f0f25f2,New extension StateRestore. It allows to save and restore DataTables states.,1,28,FALSE,NA
DT,d722ed6b6b94d16692a001e2303a92e2,"Default to `width: 100%; height: auto` instead of `500px x 960px` when statically rendering in browser (thanks, @​cpsievert, #1022).",1,29,FALSE,NA
DT,da7347682a305bed7a93b33edb9ce227,"Server-side filtering is now able to be ran as a `future` via the **promises** package (@​andyquinterom, #1011). See the argument `future` on the help page `?DT::renderDataTable` for more info.",1,30,FALSE,NA
DT,a2742b36ba7d37699226ea4d67e9b374,"Updated the `jszip` library to v3.10.1 (thanks, @​hedsnz, #1017).",1,31,FALSE,NA
DT,6efafa0187c6a1bdc2cce8f150f96c02,"Fixed a bug with missing numeric values rendered as `0` (thanks, @​tverbeke, #1000).",1,32,FALSE,NA
DT,b2834ef0a645b557ecd18c1778834099,"Box scalar elements of 'list' columns so that, e.g., `data.frame(col = I(integer(), 1, 2:3))` is represented in JavaScript as `[[], [1], [2, 3]]` instead of `[[], 1, [2, 3]]` (thanks, @​mtmorgan, #1005).",1,33,FALSE,NA
DT,7fb7e77822323f127cae15ee97cbf453,"Make sure number inputs return numeric values when editing numeric table cells (thanks, @​stla, #987).",1,34,FALSE,NA
DT,856117699173016118aaf751e551fc5c,Enhancements to `updateFilters()` (#971):,1,35,FALSE,NA
DT,856117699173016118aaf751e551fc5c,• Added support for data with integer and character columns (@​mikmart #972).,2,36,FALSE,Enhancements to `updateFilters()` (#971):
DT,856117699173016118aaf751e551fc5c,• Fixed an issue with length 1 options causing filters not to update (@​mikmart #973).,2,37,FALSE,Enhancements to `updateFilters()` (#971):
DT,856117699173016118aaf751e551fc5c,• Fixed an issue with slider limits sometimes being incorrectly scaled (@​mikmart #974).,2,38,FALSE,Enhancements to `updateFilters()` (#971):
DT,856117699173016118aaf751e551fc5c,• Updates to factor and logical filters now match the initial render (@​mikmart #975).,2,39,FALSE,Enhancements to `updateFilters()` (#971):
DT,856117699173016118aaf751e551fc5c,• Disabled status is now also affected by updates (@​mikmart #977).,2,40,FALSE,Enhancements to `updateFilters()` (#971):
DT,73b369a57ee0239e748f9f1dcfbb115c,New functions `doColumnSearch()` and `doGlobalSearch()` let you do server-side searching with filter search strings. These are particularly useful in conjunction with `updateFilters()` for implementing dynamic limits for filter controls based on currently filtered data (@​mikmart #982).,1,41,FALSE,NA
DT,6261cb5453f5c5f274e88b5a3532b3b2,Server-side searching is now faster when multiple filters are active (@​mikmart).,1,42,FALSE,NA
DT,440e6bbdac85e63c2392ed7482a16640,"Fix a bug that the column filter didn't work for strings like ""+"" (@​stephan-hutter @​shrektan #980).",1,43,FALSE,NA
DT,dbd7f1108efb215e1c6e3abc7a66794a,"Add the `zero.print` argument to `formatPercentage()`, `formatCurrency()`, `formatSignif()` and `formatRound()`, which allows to control the format of zero values. It's useful when the data is ""sparse"" (thanks, @​shrektan #953).",1,44,FALSE,NA
DT,a7b05c4e2cf5513c3cec8be0465457dd,"`formatXXX()` functions now gain a new argument `rows` (starting from 1), which can be used to specify the rows that the ""style"" should be applied to. Note that it only works expected in the client-side processing mode, i.e., `server = FALSE`. `formatStyle()` is the only exception that doesn't have this argument and should use `styleRow()` instead (thanks, @​jrecasens @​shrektan #520).",1,45,FALSE,NA
DT,2aa7047f724bf02417d45ce2bf28e531,"Added a new function `updateFilters` to allow users to update the filters of a DataTable object that has been updated by reference, such as with `replaceData()` (thanks, @​giadasp #934, @​wholmes105 #939).",1,46,FALSE,NA
DT,e8d3a1685851dfe541a7540ba5ce1de5,"Now users can provide column names of the data to `options$columnDefs$targets`. Previously, it only supports column indexes or ""\_all"" (thanks, @​shrektan #948).",1,47,FALSE,NA
DT,eda96c69d7d10bbf261cc69f69ce7766,"`styleRow()` and `styleEqual()` now allows a scalar `values` argument like other R functions, e.g., `styleRow(1:5, 'abcd')` is the same as `styleRow(1:5, rep('abcd', 5))`. It throws error that `the length(rows) must be equal to length(values)` in the previous version (thanks, @​shrektan #955).",1,48,FALSE,NA
DT,ba0ee232be4927f9a4ea56ff47c5596c,"Fix the bug that `addRow()` doesn't support a list of `data` after R 3.4.0, where `structure(NULL, ...)` was deprecated (thanks, @​stla @​shrektan #959).",1,49,FALSE,NA
DT,2f51e95d665d61326abfe9506c05ead9,"Fix the bug that DT table can't vertically fill the container, e.g., RStudio IDE or FlexDashboard (thanks, @​mbojan @​shrektan #951).",1,50,FALSE,NA
DT,9851045f25eea01dd54a17b47a5ddaa7,"Fix the bug that DT failed to parse ajax request correctly, when special strings like ""="" exist (thanks, @​shrektan #965).",1,51,FALSE,NA
DT,a28303a5e5358d898cac690f56754065,"Upgraded the DataTables library to v1.11.3 (thanks, @​shrektan #942, @​michaelquinn32 #940).",1,52,FALSE,NA
DT,0db3836cfaf1537fedd1d06b19d6bb94,"Add `vertical` and `opacity` option to `filter` which applies to the noUiSliders. This is useful with limited width DataTables to prevent x overflow (thanks, @​alexvpickering, #919).",1,53,FALSE,NA
DT,4d50ec02525235fa315401e56c792ef7,"Now the user is able to restrict the editing to accept only numbers by, e.g., `datatable(..., editable = list(target = ""cell"", numeric = 3:5))`. By default, the editing is restricted to numbers for all numeric columns; set `numeric = ""none""` to disable this behavior (thanks, @​stla, #860 #824).",1,54,FALSE,NA
DT,db33895052928add76ab31509bf55a5f,"Now the user can request text areas for the editing by, e.g., `datatable(..., editable = list(target = ""cell"", area = 1:2))`. Text areas are useful for cells with large contents (thanks, @​stla #860, @​fabiangehring #671).",1,55,FALSE,NA
DT,b9f544d21b6d801430b556499bee2a1f,Upgraded jQuery from v1.12.4 to v3.x imported from the **jquerylib** R package.,1,56,FALSE,NA
DT,2407065b87255605d7264bed17210c08,"`datatable()`'s `style` argument now defaults to `'auto'`, which resolves to either `'bootstrap'` or `'bootstrap4'` when a `{bslib}` theme is relevant. If a `{bslib}` theme isn't relevant, `'auto'` resolves to the old default value of `'default'` (thanks, @​cpsievert, #852).",1,57,FALSE,NA
DT,89f2aaa1bee7b7b83c3929abc4b33c7a,"Add a new function `styleRow()`. It's useful when you want to apply CSS styles based on Row Indexes (thanks, @​s-fleck, #894).",1,58,FALSE,NA
DT,7fce4fc7ba3fd9d4fadd005e88a274b1,"`datatable(data)` and `datatable(data, fillContainer = TRUE)` now work as expected when statically rendered inside `flexdashboard::flex_dashboard()` (thanks, @​cpsievert, #904).",1,59,FALSE,NA
DT,060f2fcbd78812d6d3bee77f73bae737,"Support the new datatables' extension SearchBuilder. With this new extension, users can construct a complex search query by adding groups and conditions. Note, as the time of writing, this extension only works on the client-side processing mode (thanks, @​stla, #875)",1,60,FALSE,NA
DT,5147970de08b75638a7466522fca1a4d,"Add a new plugin diacritics-neutralise, which can be used for searching accented, *non-Latin* characters with their unaccented counterparts. Note, it will only work in the client-side processing mode (thanks, @​tyler-richardett, #887).",1,61,FALSE,NA
DT,0d8466759b98e204691a790d6a0eb80e,"The `autoHideNavigation` argument now works with the default theme. In addition, the prerequisite is properly documented. Specifically speaking, it only works when the `pageLength` option is provided and is rendered in the client-side processing mode (thanks, @​bhogan-mitre, #856).",1,62,FALSE,NA
DT,74891b1a1d5aee9b9291ce82a97c84f6,"When editing factor columns, `editData()` now automatically updates the factor levels if it's necessary (thanks, @​aman-malik3010, #865).",1,63,FALSE,NA
DT,8f802987c3c5fd164109300ff3beca58,"Fix the issue that `addRow()` would fail when the proxy DT table contains no data (e.g., a zero-row data.frame) (thanks, @​chalioui, #888).",1,64,FALSE,NA
DT,1aa2cd632fc414cd3370a75515f89a49,"DT no longer overrides the `options$responsive` to `TRUE`. Thus, it enables users to provide customized options for the Responsive extension (thanks, @​hdrab127, #885).",1,65,FALSE,NA
DT,62156c318b2e5908551cd3e0a8248b50,"Add a new plugin accent-neutralise, which can be used for searching accented characters with their unaccented counterparts. Note, it will only work in the client-side processing mode (#822).",1,66,FALSE,NA
DT,b0677673d7547718489bb17f1d993f7c,"`addRow()` now has a new parameter `resetPaging`. By setting it to `FALSE`, we can keep the paging position after adding a row (thanks, @​stanstrup, #853).",1,67,FALSE,NA
DT,58c40b088980cdfaf3c1cd866cca1c0f,"Upgrade the SearchPanes extension to v1.1.1 so that it can display all the entries properly with the Scroller extension (thanks, @​JonasMandel @​stla, #820).",1,68,FALSE,NA
DT,ba0feda73ec451b6dd0164d8f539f66e,"The `class` argument now keeps user-defined classes with bootstrap themes (thanks, @​mmuurr, #806).",1,69,FALSE,NA
DT,83bbe27dcf2eac636e8c63b6af3006a8,"Now DT will throw a clear error message if the value of `search` provided in `datatables(..., options=)` is illegal (thanks, @​realHenningLorenzen, #848).",1,70,FALSE,NA
DT,fc7d2e7dfc2672a670dc382402059921,"Fix the issue that the sorting results may not be expected after formatting functions applied. This is a regression of PR #777 (thanks, @​fernandofernandezgonzalez @​shrektan, #837).",1,71,FALSE,NA
DT,ce2cf8a47daef86637b1c6a01ae92f2f,"`styleColorBar()` now displays correctly on Safari, when the data is greater than the upper limit, due to negative css percentage values (thanks, @​Seyphaton, #843).",1,72,FALSE,NA
DT,0b4696a0248bd6aac5ba3a421bfa8805,"Fix the issue that the formatting functions may throw error for named colname inputs (thanks, @​jarauh @​shrektan, #831).",1,73,FALSE,NA
DT,9cdb0cec30f73805ec3dcc371458155f,"The `input$xxx_xxx_selected` values will always be reset to `NULL` or an empty list when the table gets reloaded (thanks, @​stibu81 @​shrektan, #828).",1,74,FALSE,NA
DT,038d4d010eb35d70c88e2584bb3a3cd4,"Now the user is able to control the selection range by `datatable(..., selection = list(selectable = 3:5))`, where positive and non-positive `selectable` means ""enable"" and ""disable"", respectively (thanks, @​tomasreigl @​shrektan, #201 #793).",1,75,FALSE,NA
DT,aef1bff7d13d589df7e3469f4c63d63d,"Added a function `styleValue()` to use column values as CSS values. When the user has a complex CSS rule to apply, storing the CSS values in the columns of the table and call this function is very convenient (thanks, @​Mosk915 @​shrektan, #801 #802).",1,76,FALSE,NA
DT,70e0d483f3dc754642450d6026b3df0f,"Clicking on a row or cell now always triggers a reactive event in Shiny (`input$tableId_row_last_clicked` or `input$tableId_cell_clicked`), even if the same row or cell is clicked multiple times (thanks @​gadenbuie, #811).",1,77,FALSE,NA
DT,3d4aa2131d80f8127f78c3283b98b7b6,"Fix the issue that formatting functions don't support vectorized arguments any longer. This was a regression of PR #777 (thanks, @​pbreheny @​shrektan, #790).",1,78,FALSE,NA
DT,7d2b497f1e4683eacf2d25ef9e8090ad,"Fix the issue that `styleEqual()` incorrectly uses the column values as the default css values. This was a regression of PR #702 (thanks, @​Chr96er @​shrektan, #799)",1,79,FALSE,NA
DT,1ec65e5c13cf4d02692fcb545eb2965a,"The formatting functions now throw clearer error messages when called on non-datatables objects (thanks, @​shrektan, #785).",1,80,FALSE,NA
DT,b43465c99002c2d5ce3bc7b275ada628,"Now the `server` argument in `renderDT()` is reactive in Shiny (thanks, @​shrektan, #794).",1,81,FALSE,NA
DT,1addd370e1354f0737591e667bbea035,"Incorrect `selection` param now triggers a clear error message on the R side (thanks, @​shrektan, #795).",1,82,FALSE,NA
DT,e24f637c59d0971255736b73d54a33e8,"Fix a bug that on Windows, rmarkdown can't render a file that contains DT with PDF download button enabled (thanks, @​mfherman @​shrektan, #774)",1,83,FALSE,NA
DT,3e6208c6a1d231ea245b92d2cb768bee,"The formatting function will no longer throw errors for non-existing columns (thanks, @​philibe @​shrektan, #623).",1,84,FALSE,NA
DT,1dce44411b6e960963a01c0540ac9352,"Fix a bug that `renderDT()` doesn't react to `...` arguments (thanks, @​AlfTang @​shrektan, #152).",1,85,FALSE,NA
DT,8ad775a4aad26028298ae748f452abc5,"Now DT will always display black text in the RStudio IDE, even under a dark theme like ""Cobalt"" (thanks, @​GegznaV @​shrektan, #447 #767).",1,86,FALSE,NA
DT,5a371a35ce5c8a0aee5e1c6aea75e51d,"Fix the issue that DT doesn't look well in pkgdown (thanks, @​jayhesselberth @​shrektan, #563).",1,87,FALSE,NA
DT,40c73d9ad8833dd466b1d1544f8ca3ce,"All the formatting functions except `formatStyle()` now support the `Responsive` plugin (thanks, @​andirey @​shrektan, #776 #777 #782)",1,88,FALSE,NA
DT,a4259a343caa1c0cd8af681248b114f9,"Support the Select extension on the client-side processing mode (thanks, @​shrektan, #744).",1,89,FALSE,NA
DT,dac44db30a5f8a99e32db7434edc6b3a,"Support features/scrollResize plug-in (thanks, @​andrewkho @​shrektan, #467 #754).",1,90,FALSE,NA
DT,91f88587d81a90e7e6197682e1d1af9a,"Upgrade DataTables to 1.10.20 and support the new datatables extension SearchPanes (thanks, @​shrektan, #756).",1,91,FALSE,NA
DT,888e21590d18bc6a3ffd75e7b278e0b1,"The server no longer throws warnings when conducting searching (thanks, @​bquast @​shrektan, #749).",1,92,FALSE,NA
DT,e0851c864f863a06ead477234da5520e,"Fix a bug that the row generated by the RowGroup extension can't be used as the selector of the DataTables' callback event handlers (thanks, @​wiktorowczarz @​shrektan, #759).",1,93,FALSE,NA
DT,e4df1115455a069c9aa4d24f8756dc42,"Fix a bug that `addRow()` can't add a `data.table` row to the proxy (thanks, @​sifodia @​shrektan, #760 #761).",1,94,FALSE,NA
DT,b28ee744ad5c009e6b87fa9a3bf7a4a9,"Now DT displays the column alignment and the selection style correctly under the bootstrap4 theme (thanks, @​pjvandam @​shrektan, #601 #765).",1,95,FALSE,NA
DT,ea01dec0fc8472915acfbbdedfe83353,Support pagination plug-ins (#734).,1,96,FALSE,NA
DT,5f7742b0ee0b00654edb3b0b387d095a,"Highlighting when searching with regex (i.e., using `options = list(searchHighlight = TRUE, search = list(regex = TRUE))` for the table) works now (thanks, @​lrasmus, #719).",1,97,FALSE,NA
DT,08b1fcf97b53a2ab9cf553c263f89fd3,"Updated the AutoFill extension (thanks, @​stla @​shrektan, #711).",1,98,FALSE,NA
DT,5ba5f74e1ecca711efa15e7cfb8c5062,"In the server-side processing mode, filters now use Perl-compatible regular expressions (regexps), such as for lookround and negating assertions, see `help(regex)` or https://perldoc.perl.org/perlre.html. This may be most useful in columns (`DT::renderDataTable(filter = list(position = ""top""), options = list(search = list(regex = TRUE))`), but also works in the global search (thanks, @​rfhb, #727).",1,99,FALSE,NA
DT,f7d714f895e4dc250292c4a670b5f162,"For a factor column, the choices of the filter now use the factor levels (#728).",1,100,FALSE,NA
DT,f4c5a2fc681ef41aae281e31fbb658c2,"Fix the issue that `styleEqual()` doesn't work expectedly for values contain special HTML character like `>` or `<` (thanks, @​hjia222 #723).",1,101,FALSE,NA
DT,f99cb43308dd020c7d2b15d7ba86f522,"`formatStyle()` with `styleEqual()` is now chainable by default (thanks, @​e-kennedy #632).",1,102,FALSE,NA
DT,e0fc48ce51daa5dfdf46e00a7d803606,"Fix the issue that the first column can't be disabled from editing (thanks, @​tsolloway #669, @​haozhu233 #694).",1,103,FALSE,NA
DT,75b61df8b50921c21c50ae8f3404fdc4,"Fix the issue that the filter boxes are not anchored to the corresponding value columns when there are many columns (thanks, @​philibe, #554).",1,104,FALSE,NA
DT,bb0668b645938091bd6b27937a164c1a,"Column selection now works in `row+column` selection mode, when one of `scrollX` or `scrollY` is enabled (thanks, @​akarslan #705).",1,105,FALSE,NA
DT,0677778b8518c497f15b87273c26ed71,Upgraded DataTables from 1.10.16 to 1.10.19.,1,106,FALSE,NA
DT,8cda13d82247be17f17ae8b990529f65,"For `datatable()`, `options$buttons` now works as expected when providing a scalar string or a boolean value (thanks, @​shrektan, #685 #658).",1,107,FALSE,NA
DT,07d84917f0a4eb8e062a3598598dba04,"Fix the issue that when parameters of the `formatXXX()` functions contain single quotes, they may lead to incorrect JavaScript code due to failing to escape the single quotes (thanks, @​shrektan #683 #666, @​lorenzwalthert #667).",1,108,FALSE,NA
DT,04ce26a3862ded21adc5e1296aaed1f4,Bulk table editing doesn't work for the client-side processing mode without Shiny (e.g. a DataTable on a static HTML page).,1,109,FALSE,NA
DT,a3731c31827a6b8e8012972e9ae80e25,"The table editor has been enhanced: now the `editable` argument of `datatable()` can take four possible values, `cell` (or `TRUE` for backward compatibility), `row`, `column`, or `all`, which means you can edit a single cell a time, or a whole row or column, or all cells in the table. To trigger the editor, doubleclick on any cell. To submit the edit, hit `Ctrl + Enter` when multiple cells are being edited, or hit `Esc` to cancel the edit. See https://github.com/rstudio/DT/tree/main/inst/examples/DT-edit for comprehensive examples (thanks, @​LukasK13 #509 and @​mgirlich #493).",1,110,FALSE,NA
DT,4f6c310be597712c274b173bb9ed3f9b,"Editing can be disabled on specified columns now: pass a list of the form `list(target = TARGET, disable = list(columns = INDICES))` to the `editable` argument of `datatable()`, where `TARGET` can be `'cell'`, `'row'`, `'column'`, or `'all'`, and `INDICES` is an integer vector of column indices (thanks, @​opremicSebastian #657, @​l-ts #550).",1,111,FALSE,NA
DT,b85eba7627241c542a55646fe92398e8,"Added a `funcFilter` argument to `DT::renderDT()` (thanks, @​galachad, #638).",1,112,FALSE,NA
DT,38de2290fa12ab0eebb4e8f171d16375,"Fixed the issue where `replaceData()` didn't work when used in Shiny modules (thanks, @​donarus, #628, #626).",1,113,FALSE,NA
DT,c2ed68cf320ca8bb7c79ab53688b0228,"The JavaScript event `cell_edit` now always triggers a reactive event on the R side. Since `cell_edit` will only be triggered when the value shown on the table has been changed so it's almost always what user expects (thanks, @​shrektan @​stelmath, #647 #645).",1,114,FALSE,NA
DT,3de73f4e573e8c4a3abeccb56d008504,"Fix the issue that the server-side search option doesn't handle exotic encoding correctly, because after httpuv v1.5.0, `shiny::parseQueryString()` always assumes the input is an UTF-8 encoded string (thanks, @​shrektan @​phileas-condemine, #656).",1,115,FALSE,NA
DT,bd99a72c70102a520b32297d7d258d9f,"Added the Shiny async support (thanks, @​jcheng5, #549; @​alexturcan, #543).",1,116,FALSE,NA
DT,6342951c3a5fd8bf6211424f9814ec3a,"The filters of `Date` or `Datetime` columns now display the same format and timezone as the column content if `formatDate()` is applied on these columns (thanks, @​shrektan, #522 #241).",1,117,FALSE,NA
DT,c382a4890f0c47cce78ad15b8d2e1399,"You can now show and hide columns from shiny using `showCols()` and `hideCols()`, and reorder the the display of columns using `colReorder()` (thanks, @​gergness, #527).",1,118,FALSE,NA
DT,c65e21f5f7ef7b4aa0e1f9e0a72e6fc5,"You can now set the default CSS value in `styleEqual()` by using the newe param `default` (thanks, @​shrektan, #558, #546).",1,119,FALSE,NA
DT,bc645cb3ab8ddb236a7090d90de6c6c2,"The js callbacks generated from the `format*()` functions will be executed in sequential order. `formatString()` will change the cells based on the existing content rather than the raw data (thanks, @​shrektan, #576).",1,120,FALSE,NA
DT,ad8659ce0f31786fd1a58693726ecb64,"Added the DataTables plugin `ellipsis` (thanks, @​jarauh, #603).",1,121,FALSE,NA
DT,3204725a98e5ba8f70234af45afb0d1f,"`styleInterval()` and `styleEqual()` now generates the correct callback for `Date` and `Datetime` values. (thanks, @​shrektan, #500, #495).",1,122,FALSE,NA
DT,5592bee414700bc52bf088286e76333f,"The `dt-right` class will no longer be added to numeric headers unexpectedly (thanks, @​shrektan @​carlganz @​vnijs, #514 #512 #511 #476).",1,123,FALSE,NA
DT,6c1ec1e6ca1bf3f54aaa4756dc38363a,"The printing values of `NA` and `Inf` can be controlled by `getOption('DT.TOJSON_ARGS')` in the server-side processing mode now. (thanks, @​shrektan, #536 #513).",1,124,FALSE,NA
DT,3012cde699c68af1e930697477a9e862,"`styleEqual()`, `styleInterval()` and `styleColorBar()` now generate correct javascript values when `options(OutDec = ',')` (thanks, @​shrektan @​mteixido, #516 #515).",1,125,FALSE,NA
DT,3f7d7631e5c71be5447d43d1d2be2ccd,"Fixed a bug that `selectRows()` and `selectColumns()` behave erratically for scalar inputs or character inputs (thanks, @​shrektan #528).",1,126,FALSE,NA
DT,c2c7f68b8a4ac7c970a2da28237e6abc,"The server-side processing mode now supports data with nested `data.frame`s in its columns (thanks, @​shrektan, #530 #525).",1,127,FALSE,NA
DT,1675853cbf8ba7dc325e6ffa9d459cd5,"The `colReorder` extention now works with the column filters and the server-side processing mode (thanks @​shrektan, #532 #531 #160).",1,128,FALSE,NA
DT,e1c9944b10dada06d80d3e1847c40823,"Fix the bug that `formatDate()` may display dates off by one day when method = ""toLocaleDateString"" (thanks, @​shrektan @​DevMui, #539 #538).",1,129,FALSE,NA
DT,5b574110b2f728c497165e11e541d27e,"Fix the bug that in IE11, the scroll bar of the filter will disappear when you try to click it (thanks, @​shrektan, #557 #556).",1,130,FALSE,NA
DT,ad5219c8aba36350ac2cae246469c1a5,"`coerceValue()` no longer throws warnings for class `charactor` (thanks, @​shrektan, #541 #542).",1,131,FALSE,NA
DT,490101d3f1a249e0a99e7001f4efe6ca,"Fix the bug that using DT as a htmlwidget inside UI throws an error (thanks, @​shrektan, #583).",1,132,FALSE,NA
DT,e9f8be6b2937978f0a4e6171598c4f6c,"The RowReorder extension now works (thanks, @​shrektan, #595 #592).",1,133,FALSE,NA
DT,563151607c8a135fe1486005fbfa670e,"A table will never appear again after `renderDT(NULL)` once (thanks, @​jcheng5, #488).",1,134,FALSE,NA
DT,895c1d8b80a87a80b1486a5c151b03b6,"`updateSearch()` does not respect the search options `regex` and `caseInsensitive` (thanks, @​mgirlich, #487).",1,135,FALSE,NA
DT,b51b7f93a3aa5721ada2cef4b7eb832a,It is possible to double-click to edit values in table cells now. See https://github.com/rstudio/DT/pull/480 for examples.,1,136,FALSE,NA
DT,3415a1fc77896e0d3a0d7d9b2e175bd8,"Added functions `DTOutput()` and `renderDT()` as aliases of `dataTableOutput()` and `renderDataTable()`, respectively. This is because the latter often collide with functions of the same names in **shiny**. You are recommended to use `DTOutput()` and `renderDT()` in Shiny apps (unless you always use the `DT::` qualifier).",1,137,FALSE,NA
DT,10af339a22b6808db1400a1d9dc09de1,"Support using `Shift + Click` to select multiple rows (thanks, @​shrektan, #475 #305 #481).",1,138,FALSE,NA
DT,d9331781d869607176fb5c85bff76291,Added an argument `params` to the `formatDate()` function so you can pass a list of parameters to the specific date conversion method (http://stackoverflow.com/q/38875173/559676).,1,139,FALSE,NA
DT,c8406553ad679846f11e255e766ff389,"The arguments `interval`, `mark`, and `dec.mark` also work for functions `formatPercentage()`, `formatRound()`, and `formatSignif()` now (thanks, @​paulofelipe, #128).",1,140,FALSE,NA
DT,04297ac0cdea19594816599b3438416e,"Added the `RowGroup` extension (thanks, @​ecortens, #466 #442).",1,141,FALSE,NA
DT,386cbadb214598736d668b212328761b,"Searching in the server-side processing mode has enabled the ""smart"" mode by default (https://datatables.net/reference/option/search.smart). Previously this only works in the client-side processing mode. If you want to disable the smart filtering, you can set the initialization options in `datatable()` (e.g., `options = list(search = list(smart = FALSE))`). The smart filtering means spaces in the global search keyword in the table will have a special meaning: each returned record in the table should match *all* of the words separated by spaces (thanks, @​carlganz, #453; @​keshavramaswamy, #391).",1,142,FALSE,NA
DT,64cb4df6926fd3ae88bf285bd7e32512,"For client-side tables in Shiny, the indices of selected rows (`input$tableId_rows_selected`) will include the rows that are not visible in the current view after filtering is applied. If you want to exclude the indices of such rows, you can take the intersection of `input$tableId_rows_selected` and `input$tableId_rows_all` (the latter is the indices of all rows after filtering is applied).",1,143,FALSE,NA
DT,4b7e384b4eface76524de09708c5f948,Upgraded DataTables from 1.10.12 to 1.10.16.,1,144,FALSE,NA
DT,09936c218ec79e13e355e32b4574d84b,"When the DataTables option `language.url` is used, the table cannot be successfully initialized (thanks, @​lubomirskirka, #344)",1,145,FALSE,NA
DT,8b43b88b26121c5672a456f4ced8e7b2,"`styleEqual()` accepts `NA` in the `levels` argument now (thanks, @​MalditoBarbudo, #355).",1,146,FALSE,NA
DT,d8f6114c378cf89e4712a7db64d1f151,"`dataTableProxy()` does not work with Shiny modules (thanks, @​fbreitwieser, #357).",1,147,FALSE,NA
DT,6d517ae294ef20affffa1bb4072a3794,"`replaceData()` does not work with Shiny modules (thanks, @​ykeuter, @​ssayols, @​fbreitwieser, @​carlganz, #359).",1,148,FALSE,NA
DT,f36c9b6f0f3579c3e6f12dd52a8c5bfa,"`formatDate()` may display dates off by one day (thanks, @​jdthorpe, #198).",1,149,FALSE,NA
DT,55149616a20dbbc9d3b3855853878e33,"When a table is destroyed, all Shiny input values associated with the table should be emptied (thanks, @​dracodoc, #457).",1,150,FALSE,NA
DT,b35b1409175c36656db146d29e7395cc,"The `selection` argument of `datatable()` can be used to specify a vector of row indices to be pre-selected (thanks, @​maxmoro, #89).",1,151,FALSE,NA
DT,348d4e165a53eaf1cae9d168f213760a,"Column filters may be disabled individually using the `searchable` settings of columns, e.g. http://rstudio.github.io/DT/009-searchable.html (thanks, @​GitChub, #101).",1,152,FALSE,NA
DT,f60683bc12747a420bf00770471829da,"`formatCurrency()` will round numbers to 2 decimal places by default, and it is configurable via the new argument `digits` (thanks, @​mebaran, #100).",1,153,FALSE,NA
DT,fcb2a9d8d187504accf4615cf20715eb,"In Shiny, `input$tableId_cell_clicked` gives the row and column indices of the currently clicked cell as well as its value as a list of the form `list(row = row_index, col = column_index, value = cell_value)`.",1,154,FALSE,NA
DT,eb457527616256ca440036b51de9f703,"Added a new argument `valueColumns` to `formatStyle()` so we can style a column based on the values of a different column (thanks, @​zizaozi, #115). See http://rstudio.github.io/DT/010-style.html for examples.",1,155,FALSE,NA
DT,6d8486d06ff7e6a58796dd504ac87852,"You can enable column selection by `datatable(..., selection = list(target = 'column'))` now. The indices of selected columns are available to Shiny as `input$tableId_columns_selected` (thanks, @​DarioS, #117).",1,156,FALSE,NA
DT,921b6d0904967a55815dd68bca31adb9,"Row and column selections can be enabled simultaneously using `datatable(..., selection = list(target = 'row+column')`. Column selection is done via clicking on the table footer.",1,157,FALSE,NA
DT,3a7105e7d704c193e279ee5e978bcb53,"Cell selection can be enabled via `datatable(..., selection = list(target = 'cell'))`. See http://rstudio.github.io/DT/shiny.html for more info.",1,158,FALSE,NA
DT,b687d6524bc71ef918466fc5129548b1,"It is possible to update the data of a table without regenerating the whole table widget with the new function `replaceData()` now (#168, #208).",1,159,FALSE,NA
DT,891efa2a1bb34c90e805a5ae4147d761,"Added a `width` argument to `datatable()` (thanks, @​taiyun).",1,160,FALSE,NA
DT,2bcc928d049ca560af5a24c7741682cd,Added a `plugins` argument to `datatable()` to support **DataTables** plugins. See http://rstudio.github.io/plugins/ for more information.,1,161,FALSE,NA
DT,00ae4734993dd8086971306b6da7f035,"Added a function `dataTableProxy()` to create a proxy object that can be used to manipulate a table instance after it has been rendered in a Shiny app. Currently supported methods include `selectRows()`, `selectColumns()` (#126), and `addRow()` (#129), etc.",1,162,FALSE,NA
DT,8153f17abbc7e507316dc50b373bbfa1,Added a function `selectCells()` to select table cells.,1,163,FALSE,NA
DT,43f093d839319d0fe24d4453214a701e,Added a function `clearSearch()` to clear the filters.,1,164,FALSE,NA
DT,1421674fdcefc95130bcbb41c2a36033,"Added a function `selectPage()` to select a page in the table (thanks, @​carlganz, #314).",1,165,FALSE,NA
DT,fce10ac28d64d93be2bdbc210d335fa0,"Added a function `updateCaption()` to update the table caption only (thanks, @​johnpauls, #155).",1,166,FALSE,NA
DT,c9c6cad1727a02a5b565576cef8ea1cf,"Added a function `updateSearch()` to change the search keywords of the global search box and individual column filters (thanks, @​fbreitwieser, #262).",1,167,FALSE,NA
DT,2ab080abbba78f53a5cc59eac84a76b3,"When all values in a numeric column are missing (`NA`), the column filter will be disabled (http://stackoverflow.com/q/31323807/559676).",1,168,FALSE,NA
DT,1614d834c536404943cf7375f8b40b66,"Added an argument `dec.mark` to `formatCurrency()` to customize the character for the decimal point (thanks, @​frajuegies, #128).",1,169,FALSE,NA
DT,c60476c28e70f0c3ad5d2b6de1107bf6,"Added an argument `before` to `formatCurrency()` to determine whether to place the currency symbol before or after the data values (thanks, @​jrdnmdhl, #220).",1,170,FALSE,NA
DT,fba058c00728f3e131b55b11d402caaf,"Added a `target` argument to `formatStyle()` to decide whether to style the cell or the full row (thanks, @​peterlomas, #108).",1,171,FALSE,NA
DT,da5964467b67d66416798c4ac6cdc1f2,"Added a `formatSignif()` function to format numbers to a specified number of significant digits (thanks, @​shabbychef, #216).",1,172,FALSE,NA
DT,108c33b7245b5b733b6441765190263c,"Added a `formatString()` function to format strings; currently it has two arguments `prefix` and `suffix`, and you may add strings before/after column values (thanks, @​fbreitwieser, #279)",1,173,FALSE,NA
DT,7f999162942a6d8ee86f7d430ae2522c,Added the `elementId` argument to `datatable()` (#307).,1,174,FALSE,NA
DT,1746cdce265e28d87c0e14659a6b99f8,Upgraded the DataTables library to 1.10.12; there have been many changes from 1.10.7 to this version: http://datatables.net/blog/2015-08-13,1,175,FALSE,NA
DT,1746cdce265e28d87c0e14659a6b99f8,• The `extensions` argument of `datatable()` should be a character vector now; previously it can be a list of initialization options for extensions due to the inconsistent ways of initializing DataTables extensions; now the initialization options for all extensions can be set in the `options` argument.,2,176,FALSE,Upgraded the DataTables library to 1.10.12; there have been many changes from 1.10.7 to this version: http://datatables.net/blog/2015-08-13
DT,1746cdce265e28d87c0e14659a6b99f8,"• The `copySWF()` function has been removed, since the `TableTools` extension has been removed.",2,177,FALSE,Upgraded the DataTables library to 1.10.12; there have been many changes from 1.10.7 to this version: http://datatables.net/blog/2015-08-13
DT,1746cdce265e28d87c0e14659a6b99f8,• The `ColVis` extension was removed and replaced but the `colvis` button in the `Buttons` extension.,2,178,FALSE,Upgraded the DataTables library to 1.10.12; there have been many changes from 1.10.7 to this version: http://datatables.net/blog/2015-08-13
DT,6aa2a45eaf159fb34f7ecdf89979710f,"In the previous version, row names were used as row indices in the server-side processing mode, but numeric row indices were used in the client-side mode. Now we always use numeric row indices in both modes for the sake of consistency. These input values in Shiny will always be integers: `input$tableId_rows_current`, `input$tableId_rows_all`, and `input$tableId_rows_selected`.",1,179,FALSE,NA
DT,ed35ac94b126db6a31016f4d3e94dbdb,"`formatCurrency()` puts the currency symbol after the minus sign now, e.g. previously you might see `$-20` but now it is displayed as `-$20` (#220).",1,180,FALSE,NA
DT,100302f8ff061ff5ba89cb32a37f9120,"Row selections are not preserved when column filters are enabled and clicked (thanks, @​The-Dub, #97).",1,181,FALSE,NA
DT,30003aab2f2f965ddc356f7fb34fb1d6,Single row selection does not work for server-side tables (http://stackoverflow.com/q/30700143/559676).,1,182,FALSE,NA
DT,f7b0d9200215bc6a123bcc9d6d9dab9e,"Missing dates are not rendered correctly with `formatDate()` (thanks, @​studerus, #112)",1,183,FALSE,NA
DT,4c38bc757246a2577b9f2306b34ae497,"Missing values are mistakenly treated as 0 in `formatStyle()` (thanks, @​studerus, #116)",1,184,FALSE,NA
DT,fa5238622b15e311fe2fb5fe644bcd23,"The thousands separator (e.g. a comma) in `formatCurrency()` should not be applied to the digits after the decimal point (thanks, @​johnbaums, #116).",1,185,FALSE,NA
DT,7356b28b85ac4e494df4fd57c2364f65,"The `class` argument does not work when a custom table `container` is used in `datatable()` (thanks, @​DarioS, #138).",1,186,FALSE,NA
DT,894dc5878227d841052db1a011055bbf,"The column filters for numeric columns (sliders) do not work well when the columns contain very small values or values with a large number of decimal places (thanks, @​DarioS, #150).",1,187,FALSE,NA
DT,7a148b4c4363771cabb33499ecb8b08a,Searching for the ampersand `&` in the table does not work in Shiny.,1,188,FALSE,NA
DT,b5cc770d134d3e60e52e6bee19ba1e44,"Searching for `+` in columns does not work in Shiny (thanks, @​vnijs, #214).",1,189,FALSE,NA
DT,58509c1be0375eff781a7470e6819c85,"Fixed a bug that triggers a DataTables warning dialog box in the browser (thanks, @​zross, https://github.com/WHOequity/who-heat/issues/229 and https://github.com/rstudio/shiny/issues/561)",1,190,FALSE,NA
DT,2e0a7df8471dd78848d217baa5fcf2f3,"Factors will a huge number of levels may slow down the rendering of the table significantly (thanks, @​vnijs, #169).",1,191,FALSE,NA
DT,d76b3bf38466f1cd5ce1be101c3cc9fc,"Clicking links in table cells should not trigger row/column/cell selection (thanks, @​daattali, #265).",1,192,FALSE,NA
DT,cf05e875d1c385e6084c967f909424f7,"White spaces may be trimmed unexpectedly in select inputs when `dataTableOutput()` is present in a Shiny app (thanks, @​Yang-Tang, #303).",1,193,FALSE,NA
DT,e34158fe03b078ca60ad05d523e1ab2b,"Respect column-wise `searchable` options when performing global searching (thanks, @​aj2duncan, #311).",1,194,FALSE,NA
DT,94df25ffc33d57bcd8173f16a7882379,"Clear buttons do not work when column filters are pre-set (thanks, @​nutterb, #319).",1,195,FALSE,NA
DT,5a24578ca196ebbccaf48e7e6ea150cf,"Changes in column visibility should trigger changes in the table state, i.e. `input$tableId_state` (thanks, @​MikeBadescu, #256).",1,196,FALSE,NA
DT,e3301d9d82700b1344a8102aa0221716,Initial CRAN release.,1,197,FALSE,NA
flexdashboard,63212306b80c8e78f4b0a4e53288d577,flexdashboard now prevents top margin from being applied to boxes created with flexdashboard's markdown syntax when Bootstrap 5 is used. (#443),1,1,FALSE,NA
flexdashboard,1ec35ebac5c196c92f81a920985d0c8c,"flexdashboard now supports icons for navigation dropdown menus. Pages are created with level-1 headings and can be added to a dropdown menu with the `data-navmenu` attribute. You can now also assign an icon to this dropdown menu by providing a `data-navmenu-icon` attribute, using the same icon selections as described in Page Icons. (#419)",1,2,FALSE,NA
flexdashboard,511c14e81f66c03144f50209c348d2cd,Improved support for page selection in navigation dropdown menus in Bootstrap 5. (#421),1,3,FALSE,NA
flexdashboard,75d227f075df38aaa2f7eed33086a0c7,Fixed #411: Improved support for Bootstrap 5 to ensure correct handling of the active dashboard page. (#418),1,4,FALSE,NA
flexdashboard,946e360d763bb9b7fe33a58dcd817877,Fixed #234: Use the correct social sharing link for Facebook.,1,5,FALSE,NA
flexdashboard,0cafb8e56d8c1ffc0f606068a18612a9,"Fixed #102: knitr's `collapse` chunk option now works as expected. This fix also ensures that other knitr options that modify the chunk option, like `class.chunk` and others are applied correctly. (#428)",1,6,FALSE,NA
flexdashboard,1fc713a350cb815ab97bf544542782e7,Closed #398: The logo is now positioned to the left (instead of the right) of the title (regression introduced by 0.6.0).,1,7,FALSE,NA
flexdashboard,c9832e9b916473081d475280b64e48f7,"The `smart` argument was removed from `flexdashboard::flex_dashboard` since it was removed in rmarkdown 2.2 (relatedly, we now require rmarkdown 2.2 or higher). (#301)",1,8,FALSE,NA
flexdashboard,1dc18158deb6553cf9e9449c4696f462,The `window.FlexDashboard.themeColor` JavaScript object property is no longer available. Resolving of theming accent colors should now be done server-side via `{bslib}`'s dynamic theming tools. (#305),1,9,FALSE,NA
flexdashboard,ce850353a5c5b2e0bcc6fc32a656d765,Close #343: Fix an issue with order of dependencies with `shiny_prerendered` following previous changes in rmarkdown - rstudio/rmarkdown#2064. (#344),1,10,FALSE,NA
flexdashboard,73274db41acf7bb46a5d902734e75d76,"Closed #315, #321, and #286: `DT::datatable()` now fills its container correctly inside of `flexdashboard::flex_dashboard()`. (#322)",1,11,FALSE,NA
flexdashboard,304e4c424ff9b72d1f604f87dc21d40a,Closed #310: An `.active` class may now be added to a particular `.tabset` tab to control which tab is shown by default. (#311),1,12,FALSE,NA
flexdashboard,50d300265416ea039d366c4a6b9371c5,Closed #306: A `.tabset-pills` class may now be added to `.tabset` to render pills instead of tabs. (#307),1,13,FALSE,NA
flexdashboard,5c6ef2a175baaedc726652abbb7f66af,"Closed #297, #254: `gauge()` now uses justgage.js 1.4.0, allowing `renderGauge()` to properly update various labels and `sectors` on redraw. (#301)",1,14,FALSE,NA
flexdashboard,791e1a64b20225c342db898f527ae3be,"Closed #300: When a custom `{bslib}` theme is provided to `flex_dashboard`, `gauge()` and `viewBox()` now generate default styles to match it. (#301, #305)",1,15,FALSE,NA
flexdashboard,1e485c15a7809679fde613d7daf9ba27,"Closed #227: Fixed a bug with `source_code: embed` producing errors because code wasn't being escaped before being included in HTML. (#228, thanks @​cderv)",1,16,FALSE,NA
flexdashboard,be054e6deb0581ca7ade8087337189ba,Added padding to the top of the sidebar. (#294),1,17,FALSE,NA
flexdashboard,7f3dab9bcd8bbae09daefc6526b394e8,"Support use of Font Awesome icon sets (e.g. ""fab fa-r-project"")",1,18,FALSE,NA
flexdashboard,54c1cede43943536100dc616c7fce3d8,Fixed #245: Shiny (1.4.0+) outputs not rendering in modified flexdashboard html. (#250),1,19,FALSE,NA
flexdashboard,a4d46b8a22fb3c146f8d7bd0dd4be2d8,Fixed #149: a compatability issue when using Pandoc 2.0. (#150),1,20,FALSE,NA
flexdashboard,d7c7b51422d9a2c978d26cdcb7de81c0,Fixed #139: remove previous valueBox handlers when rebinding.,1,21,FALSE,NA
flexdashboard,0219350da798820a1373db074efac29d,Update to roxygen2 6.0.,1,22,FALSE,NA
flexdashboard,d4b613df51f6c49431dcfceed4777887,Don't hook graphics device option for `fig_mobile` if it's a data chunk (this broke knitr caching for `shiny_prerendered` data chunks).,1,23,FALSE,NA
flexdashboard,315cc7a2b94f22d099932f734cbe97ba,"Add support for `target` field in navbar links (e.g. target: ""\_blank"").",1,24,FALSE,NA
flexdashboard,cf4ba82727d64c61ff0edf850051bdc9,Fixed #100: problem w/ embedding source code for Rmd w/ spaces in path.,1,25,FALSE,NA
flexdashboard,a5ff7ad6266a0fbaf2593c0bcd614752,Fixed #106: ensure that previous bg class on valueBox is cleared.,1,26,FALSE,NA
flexdashboard,ef569f587bcb71e8e23d758a6775e236,Support `.hidden` attribute for pages to hide them from the navbar.,1,27,FALSE,NA
flexdashboard,86e5b90d8e590b49324a2823b8b9c43a,Scroll sidebar when content overflows vertically.,1,28,FALSE,NA
flexdashboard,3c8bc468998495c91955028ee25c820c,Correct handling for storyboard notes in mobile layout.,1,29,FALSE,NA
flexdashboard,fdee7f3f10fcc4758486727c2cfb9e83,Handle titles with extended characters (auto-assign id if pandoc doesn't).,1,30,FALSE,NA
flexdashboard,9153423e5cbd1e2e34c5876cf0f2322d,Handle page titles with punctuation (sanitize id for bootstrap tabs).,1,31,FALSE,NA
flexdashboard,7a9f74aa7ba03cb6c10bbeaa4db47b9b,Use `pre_knit` hook to get access to the source file path.,1,32,FALSE,NA
flexdashboard,6c2ef0157d3e6a53882e9b290a58721f,Restore original DT options after rendering.,1,33,FALSE,NA
flexdashboard,e924d5fbf0ee9cd6de6b17b8a491df02,Initial release to CRAN.,1,34,FALSE,NA
flexdashboard,1880dc7ceacf481497fabe5a6057159c,init commit!,1,35,FALSE,NA
fontawesome,f737dc54cc8196179ba39580fe500496,Updated icon set to that of Font Awesome 6.4.2. (#111),1,1,FALSE,NA
fontawesome,6eed2212dba13e964e41661d988b6a2d,Updated icon set to that of Font Awesome 6.4.0. (#109),1,2,FALSE,NA
fontawesome,7d015f0364fc86bcae8c112b5751a40c,Updated icon set to that of Font Awesome 6.2.1. (#102),1,3,FALSE,NA
fontawesome,e351e2583ceb4657b1fd2ebe34582c34,Closed #101: added the `vertical_align` argument `fa()` to control vertical alignment of icons. (#103),1,4,FALSE,NA
fontawesome,87cabf38fec456a6165fd32b17dc5db6,Closed #99 and #100: reinstated missing '.woff2' files. (#102),1,5,FALSE,NA
fontawesome,0e909228a6f78828c6b55bcda3ee13b8,Updated icon set to that of Font Awesome 6.2.0. (#96),1,6,FALSE,NA
fontawesome,94743e9ef080de96f5c5d695809a2512,"It's now possible to reference icons by several of their previous names. For example the old icon names `""contact-card""` and `""vcard""` will map to the current name of `""address-card""`. (#96)",1,7,FALSE,NA
fontawesome,fd6ca40d0b8a9fbc37746ec752b8d16c,"There is now a `prefer_type` argument (default: `""regular""`) that allows you to register a choice between a solid- or regular-type icon should both be available for a specific short name. (#96)",1,8,FALSE,NA
fontawesome,f7247fee28264d49a8cadea00cf91186,Closed #80: Updated icon set to that of Font Awesome 6.1. (#85),1,9,FALSE,NA
fontawesome,73cda5142943f27f3c8e56596cfd0448,"Closed #68: full icon names (e.g., `""fab fa-r-project""`) are now properly parsed and verified in the `fa_i()` function. (#77)",1,10,FALSE,NA
fontawesome,15e9695d6207538292b5bd4f87a82522,Closed #66 and #73: CSS length values (supplied to the `height` or `width` options of the `fa()` function) are now correctly handled when they contain decimals. (#74),1,11,FALSE,NA
fontawesome,6faf143641b2a91034d209d1ed3fbe4d,.ttf font files (and associated CSS) have been added back to the pared down selection of included webfonts (includes .woff and .ttf); this was to re-enable compatibility with the webshot package in Windows. (#61),1,12,FALSE,NA
fontawesome,308057360a8809ca0403c6182e1c82ad,"Closed #53: The `margin_right` argument of `fa()` is now functional, defaulting to the `""auto""` margin; a `margin_left` argument was also added with the same default. (#54)",1,13,FALSE,NA
fontawesome,712994fdebd7c9739c135b984c6a1aa3,"The `""desc""` option in `fa()`'s `a11y` argument is now changed to `""deco""`.",1,14,FALSE,NA
fontawesome,dbd0ed84cec6de50111315185aec9ed6,"Closed #42: Support for additional R Markdown output formats with `fa()`: `pdf_document`, `word_document`, `github_document`, `slidy_presentation`, `beamer_presentation`, and `ioslides_presentation`. (#43)",1,15,FALSE,NA
fontawesome,5d354d72c8ed677da9dad44674ca5c50,Closed #38: Add accessibility features to SVG icons produced by `fa()` with its new `a11y` argument. (#41),1,16,FALSE,NA
fontawesome,6f2c74ccda5bf759bc0591d417da878c,Fixes a rendering issue with SVG icons in IE11. (#40),1,17,FALSE,NA
fontawesome,f3d6d1d1b1da3eb44ccd0954923926c1,Tooltips can be added to SVG icons prepared by `fa()` by using the new `title` argument.,1,18,FALSE,NA
fontawesome,fa0265ac8bcab92113b07b4400525a30,Closed #44: The collection of font files that support the use of `fa_i()` has been trimmed down to just the '.woff' variety. (#45),1,19,FALSE,NA
fontawesome,9a2abede2b20425cde980a55a855a4b8,"Closed #32, #33: Package dependencies have been greatly reduced. (#35)",1,20,FALSE,NA
fontawesome,bbd85fe9214331efcb23e74386e154a6,"Added functions `fa()`, `fa_i()`, and `fa_png()` for preparing Font Awesome icons in three ways.",1,21,FALSE,NA
gt,6eec53eabf85e42c4dd66dd83be8825d,"Box plots can now be generated via `cols_nanoplot()` by using `plot_type = ""boxplot""`. These plots are laid out horizontally and will, by default, share the same plot axis across rows. (#1527)",1,1,FALSE,NA
gt,f7a9ba63b55f203316267c1893e6b3fe,"We can now have single line bar plots generated through `cols_nanoplot()`. If the plot_type is set to `""bar""` and single values are found, then horizontal bars will be generated and will be comparable across rows. (#1514, #1515, #1519)",1,2,FALSE,NA
gt,deac8835ec826821d04a048ea38ffa7d,The `autohide` argument was added to the `cols_nanoplot()` function so that columns containing input data for nanoplots could be conveniently hidden from final presentation. (#1533),1,3,FALSE,NA
gt,0bfc0b3b5f58d91834881981e723bde3,Added option (the `data_area_fill_color` arg in `nanoplot_options()`) to change fill color of nanoplot data area for line-type plots (#1521). (#1534),1,4,FALSE,NA
gt,4758fbabb14b0f0d743bf2452f2e8852,"The performance of rendering bigger tables as HTML has been improved and is now up to three times faster than before. (#1470, thanks @​mgirlich)",1,5,FALSE,NA
gt,55afa0d16b8385344a0d2f161709643e,"Introduced a small performance improvement by no longer calling `utils::packageVersion()` internally (#1524). (#1525, thank you @​slodge)",1,6,FALSE,NA
gt,209fe6c09d42795102b8c7d2e5ffe080,"Code and test refactoring was performed to generally improve performance and code readability. (#1480, thanks @​olivroy)",1,7,FALSE,NA
gt,4ed6948b5cf23bdc0a942568e7ca65c4,"The `gtsave()` function now returns the file path invisibly instead of `TRUE`. (#1478, thank you @​olivroy)",1,8,FALSE,NA
gt,a659d12782984a794ecbe7a83eb8f236,"Most functions now produce better error messages if not provided with a `gt_tbl` object. (#1504, c/o @​olivroy)",1,9,FALSE,NA
gt,684befc630b0186aa981eabaea42e016,The URL formatting through `fmt_url()` has been improved by preventing link text breaking across lines (#1509). (#1537),1,10,FALSE,NA
gt,13c3e404c26177c1d02d7bc343c56bd7,"We now remove some unnecessary newlines in the HTML text produced by `as_raw_html()`, which caused an issue when integrating **gt** tables into **blastula** email messages (#1506). (#1520)",1,11,FALSE,NA
gt,7b19a2e57fd9bc016f37e495bedaaf5e,The `tab_spanner_delim()` now lets you use `delim` strings longer than a single character (#1469). (#1513),1,12,FALSE,NA
gt,13ad6ebe1bb73374c93dcd633e173a2f,"Fix for footnotes in LaTeX tables where no footnote marks are to be added; this previously showed `""NA""` as the mark in the footer area but this is no longer displayed (#1416). (#1512, thanks @​kbrevoort)",1,13,FALSE,NA
gt,d483cdb333fcb3bc60e40ab64c91b112,"LaTeX tables can now have their overall width specified (#119, #329). (#1495, thank you @​kbrevoort)",1,14,FALSE,NA
gt,053fb8c0a4d9725c6fe32a6730616017,"Fix issue where a `cols_width()` specification involving percentage values fails for LaTeX tables (#1465). (#1495, thanks again @​kbrevoort!)",1,15,FALSE,NA
gt,97b9f9da226285d968d2783ea9553a45,Several documentation fixes were made to address inconsistencies and improve clarity. (#1491),1,16,FALSE,NA
gt,838b41dd18250126d9fe519ddfc9015e,"We can now add in little plots called *nanoplots* to a **gt** table (#299, #515). (#1431, #1439, #1445, #1453, #1458, #1459, #1461, #1462)",1,17,FALSE,NA
gt,441192ab7cf0f9e81f62249405f68912,The function `cols_nanoplot()` adds a new column that contains the plots. The data can be obtained from one or more columns in the table. A helper function called `nanoplot_options()` allows for altering the composition and styling of the nanoplots in the new column.,1,18,FALSE,NA
gt,7e8e7c9f5fcc022adb47ab1fbc9b13b3,"There are two basic types of nanoplots available: `""line""` and `""bar""`. A line plot shows individual data points and has smooth connecting lines between them to allow for easier scanning of values. You can opt for straight-line connections between data points, or, no connections at all (it's up to you). The data you feed into a line plot can consist of a single vector of values (resulting in equally-spaced *y* values), or, you can supply two vectors representative of *x* and *y*.",1,19,FALSE,NA
gt,e87ee0452ae2972201a1cd8765096a54,"A bar plot is built a little bit differently. The focus is on evenly-spaced bars (requiring a single vector of values) that project from a zero line, clearly showing the difference between positive and negative values.",1,20,FALSE,NA
gt,c4316901fb2499819ca0eeb8545928c4,"By default, any type of nanoplot will have basic interactivity. One can hover over the data points and vertical guides will display values ascribed to each. A guide on the left-hand side of the plot area will display the minimal and maximal *y* values on hover.",1,21,FALSE,NA
gt,b2c741d4140ee18729954a512add6736,"Brand new rows can be added to a **gt** table with the new `rows_add()` function. The user can supply the new row data through name value pairs. You have control over where they are placed by way of the `.before` and `.after` arguments (new rows are added to the bottom of the table by default). You can also add empty (i.e., all `NA`) rows with the `.n_empty` option (#698). (#1323)",1,22,FALSE,NA
gt,67d36888c298f8b3e4bb76416ee76a42,"To complement `rows_add()`, the `cols_add()` function was added. New columns can indeed be added to a **gt** table with this function, which has an interface close to that of `dplyr::mutate()`. (#1367)",1,23,FALSE,NA
gt,83460ccea0ad94f66a0ce520ca16a03a,"You can now use an empty table as the starting point for a **gt** table. This can be used in conjunction with `cols_add()` and `rows_add()` to build a table piece-by-piece in specific workflows/settings. What constitutes empty tables can be any of: `0 x 0` tables, `0 x n` tables (no rows, some columns), or `n x 0` tables (some rows, no columns; treated the same as `0 x 0` tables). (#1376)",1,24,FALSE,NA
gt,a16c67258ecd16df67ae2990452175d8,"There is now a way to better express measurement units and we do this in **gt** with something called units notation. With an intuitive and easy-to-learn syntax, **gt** will ensure that any measurement units are formatted correctly no matter what the output type is. We can format units in the table body with `fmt_units()`, we can attach units to column labels with `cols_units()`, and we can integrate units notation in the already-available `cols_label()` and `tab_spanner()` functions (#417, #533). (#1357, #1426, #1446)",1,25,FALSE,NA
gt,14fd4e8b574ecb7bdaa78de2c767dea7,"A very useful new helper function, `from_column()`, has been added so you can fetch values (for compatible arguments) from a column in the input table. For example, if you are using `fmt_scientific()` and the number of significant figures should vary across the values to be formatted, a column containing those values for the `n_sigfig` argument can be referenced by `from_column()`. (#1392, #1393, #1395, #1396, #1399, #1403)",1,26,FALSE,NA
gt,519c47763fc80646d51756b54b095f06,"With the new `fmt_icon()` function we are able to add icons from the Font Awesome icon library. It works in a way that's similar to `fmt_flag()`, in that identifiers in the formatted cells are transformed in-place to SVG-based icons. (#1413)",1,27,FALSE,NA
gt,f55f96cf32205c7e0f417dcb0fb90f44,The `info_icons()` and `info_flags()` functions have been added to help people know about the valid codes for flags and for icons (when using `fmt_icon()` and `fmt_flag()`). (#1421),1,28,FALSE,NA
gt,eeca285861dfdb7fa07ba201ea28922a,"We added the `extract_body()` function, which lets you pull out a data frame associated with the body cells. Importantly, this extraction can happen at different stages of the table build (e.g., `""init""`, `""text_transformed""`, etc.), allowing a user to have access to a table of formatted body cells for different applications (such as verification of formatting, debugging new formatting functions, etc.) (#1441). (#1449)",1,29,FALSE,NA
gt,2b4ac5abc7f452fe8953d451660e652d,"Interactive HTML tables (usually generated through use of `opt_interactive()`) can now use localized labels/controls. So when using any of the 574 supported locales in **gt**, an interactive table will be fully translated to the language of the locale (#1308). (#1389)",1,30,FALSE,NA
gt,32a1e16b5c320ae26376ef7c77f2613f,The `illness` and `constants` datasets were added. Both datasets have a `units` column and this is useful for making examples with the `fmt_units()` function. (#1357),1,31,FALSE,NA
gt,c267669f75b2dc2ab9714e4c214fb125,Processing to Word output now escapes HTML in more places (#1378). (#1303),1,32,FALSE,NA
gt,4df5861ce660ba9848400311fe211d7a,The Word output format now uses the `side` argument present in `summary_rows()` and `grand_summary_rows()` to place the new summary rows either the top or bottom of the row group (with `summary_rows()`) or table as a whole (with `grand_summary_rows()`). (#1325),1,33,FALSE,NA
gt,c882b9c338df7be9a87c4647851b2b72,Tables rendered as Word output can now handle the specific case where a table with summary rows doesn't have row names. (#1325),1,34,FALSE,NA
gt,23ce73c7a8c0fee5216b754a91d8cc5f,Summary rows in Word output tables can now be placed at the top or bottom of a group (or at the top or bottom of the table). (#1402),1,35,FALSE,NA
gt,a23187a72e5f4ed26d20d8c3dbc6df9f,"Word output tables can now contain images. This entails compatibility with the `fmt_image()` function, and, images (local and remote) can be inserted through Markdown (#1272). (#1273)",1,36,FALSE,NA
gt,03bfc5bfff4e93d6f162df0e67b95852,"The **gt** website has been updated with a slightly different look; section names have been updated for consistency (#1419). (#1287, #1340, #1341, #1444)",1,37,FALSE,NA
gt,32b2f600ad602ee07570e07253348dbb,We've improved the formatting of arguments in the documentation so that they all have short titles and descriptions regarding expected inputs and default values. This looks great both in the internal R help pages and in the **pkgdown**-generated website (#1290). (#1338),1,38,FALSE,NA
gt,b6bd780a61818430eb3cd4d5c4453304,"Several small documentation updates were made, with an emphasis on improving examples (#1304, #1349, #1369). (#1293, #1316, #1324, #1329, #1330, #1331, #1334, #1381, #1383, #1395, #1404, #1442, #1454)",1,39,FALSE,NA
gt,e64cbacecf3e2cb248e597ba5b7d5f30,The `tab_spanner_delim()` function was given a `limit` argument so that splitting from a particular side can stop early and precisely. (#1328),1,40,FALSE,NA
gt,a7fc288e76aa980857f95bdda7aa1a46,"The `width` argument was added to `fmt_image()`. With this change you can variously set the width, the height, or both.",1,41,FALSE,NA
gt,24a17c8a0f9c211f7660c4367fc018a0,Significant figures support has been added to the `fmt_scientific()` and `vec_fmt_scientific()` functions; there is a new `n_sigfig` argument in both. (#1411),1,42,FALSE,NA
gt,6dfb196352ae60f0a9220ea0000aaee0,"The `cols_merge_range()` function now has a `locale` argument. Range patterns across locales are different (can involve the use of a single hyphen, en dash, em dash, tilde, etc.) and so it does make sense to follow the convention of a locale if provided (#158). (#1423)",1,43,FALSE,NA
gt,23d2e52f516fdbc3fa73044564745cc7,"The `fmt_url()` function now has a few more options for adding anchor tag attributes (`""target""`, `""rel""`, `""referrerpolicy""`, and `""hreflang""`). Thanks @​elipousson for the work on this! (#1428). (#1452)",1,44,FALSE,NA
gt,cbaa87e191cd5f5d0828d710b0d35679,"We now have rudimentary support for defining column widths for LaTeX output tables (with `cols_width()`). This accepts length values in 'px' which and automatic conversion to 'pt' values is performed to maximize compatibility with different LaTeX flavors (#634, #851, #1417). (#1371, #1450)",1,45,FALSE,NA
gt,6c0cd3f61151416b0de015e1731741af,"It's now possible to use background fill colors and perform text coloring and emboldened/italicized text within the body cells of LaTeX tables. This is commonly performed through the use of `tab_style()` and `data_color()` (#84, #869). (#1352)",1,46,FALSE,NA
gt,7d49931c43484777065e9a62307fb164,The `gtsave()` function now works with `gt_group` objects (usually generated through `gt_split()` or `gt_group()`) (#1354). (#1365),1,47,FALSE,NA
gt,70faab9ac59300cef88494a3fc325044,All `gt_group` objects can now be printed using R Markdown or Quarto (#1286). (#1332),1,48,FALSE,NA
gt,97715b54f92acea821451b6784e5533c,"When using `fmt_currency()` with a locale value set, **gt** will now use that to automatically select the locale's default currency. While some countries can have multiple currencies, we opt for the most-widely used currency (users could alternatively specify the currency code and `info_currencies()` contains all supported currencies used in the package) (#1346). (#1347)",1,49,FALSE,NA
gt,fef2a514b3e86c52650d8a37b0a30359,"The `columns` argument in `cols_hide()` and `cols_unhide()` can now accept `NULL` (i.e., no columns resolved). These functions will no longer error in such a case (#1342). (#1343)",1,50,FALSE,NA
gt,d08ccf40ffd5b64ec9a579c8eec164bb,"The `countrypops` dataset was updated with recent (as of August 2023) World Bank data that revises population estimates and brings the final year up to 2022. All examples, tests, and articles using the dataset were also updated. (#1410)",1,51,FALSE,NA
gt,2684a05b8dcd5e124cdefa30bb2d7cd9,A few refinements were made to some of the system font stacks defined in `system_fonts()`. (#1447),1,52,FALSE,NA
gt,e647a57aa027920349566193e6d27e11,"The Databricks notebook environment is now detected by **gt**, so tables will now be automatically displayed without having to call extra printing functions. (#1427)",1,53,FALSE,NA
gt,c67ecd474834d79de26cb60b12c089fd,"Display issues with scientific and engineering notation formatting (lack of dropping trailing zeros, as promised with the `drop_trailing_zeros` argument) were fixed. Part of the fix involves adding the `drop_trailing_dec_mark` argument to the four functions `fmt_scientific()`, `fmt_engineering()`, `vec_fmt_scientific()` and `vec_fmt_engineering()`. (#1380)",1,54,FALSE,NA
gt,7e7ab61f54db09215132bee9a5ad3308,Fixed an incorrect country code reference for the Netherlands that would cause an incorrect flag to appear when using `fmt_flag()`. (#1319),1,55,FALSE,NA
gt,35c697cb7b54233531f4fe7d5639750e,"Many new flags were added to `fmt_flag()` (#1333, #1335). (#1336)",1,56,FALSE,NA
gt,1c8f8e651cd30aeb60f619e94be29eb4,"In some cases, there was incorrect rounding of duration values when using `fmt_duration()`. This is now fixed, thanks to @​rcannood (#1374). (#1375)",1,57,FALSE,NA
gt,45fd2f08a8f205f9828270bb02222330,Fixed an issue with `cols_label_with()` where column names wouldn't be relabeled if the resolved columns were only a subset of the total columns available. (#1326),1,58,FALSE,NA
gt,ed285b615da39ee0a81d104531688c3e,"Fixed a LaTeX bug where some characters following a `\midrule` would corrupt the table (#145, #391, #1107, #1182). (#1390)",1,59,FALSE,NA
gt,dc7b38245f45779f44c59e35904e1df2,Provided a rendering fallback for HTML tables rendered in Quarto where the combination of `fmt_markdown()` and `tab_options(quarto.disable_processing = TRUE)` would incorrectly result in empty cells. (#1455),1,60,FALSE,NA
gt,eb1581f4e8c4b86546bafd48db6d6d76,"A issue associated with a lack of HTML formatting within interactive tables has been fixed (#1299, #1370, #1384, #1443). (#1388)",1,61,FALSE,NA
gt,2fe9a5e19c449e4c301c0fe411b28c19,"Many user-facing error messages have been enhanced using the latest features from the **cli** package. (#1337, thanks @​olivroy!)",1,62,FALSE,NA
gt,e4aa4af8f302833b9b5380733a9fa5a1,"Unit tests can now be successfully run on Linux flavors that don't have the `locale` utility (#1214). (#1350, thanks @​bastistician!)",1,63,FALSE,NA
gt,91aa55d1833a84f082c86c702412dc56,"If ever the 'undetermined' (`""und""`) locale is used, it is automatically mapped to the `""en""` locale. (#1394)",1,64,FALSE,NA
gt,4862a0f25d3ad83f644f96a5c744c119,"Many unit tests were added for much increased test coverage and many more were modified to increase the speed of running the test suite. (#1291, #1294, #1298, #1350, #1412)",1,65,FALSE,NA
gt,c470f84c49286e4e72e32f80c68d14ec,Added utility functions to extract all examples for regularly building a Quarto website (to do integration testing). (#1344),1,66,FALSE,NA
gt,ed57144548e92f09795c273ca837d3ec,"The `summary_rows()` and `grand_summary_rows()` functions have been rewritten extensively to allow more flexibility in providing aggregation information to `fns`. The documentation for both functions will walk you through all the new ways you can express your aggregations. The formatting of cells in new summary rows is now easier thanks to the new `fmt` argument. We can provide a single formatting expression or a number of them in a list. The dedicated documentation section for formatting can walk you through all of this. Furthermore, we now have the option to place summary rows at top or bottom of a group (in `summary_rows()`) or table (in `grand_summary_rows()`) with the new `side` argument (#177, #270, #292, #545, #581, #784, #785, #840). (#1159, #1171)",1,67,FALSE,NA
gt,ab5607591541e6f672bef7b3d137cc11,"The `data_color()` function has been completely overhauled to make it easier to use and also more powerful. It gains a `rows` argument to better constrain where the colorization should take place. Instead of having to use functions from **scales** to define the coloring scheme, you can now use the `method` argument to handle most cases (otherwise, the new `fn` argument allows for a color-mapping function to be used). The new `palette` argument allows for flexible input of color palettes. One or more adjacent columns can receive the coloring treatment by way of the new `target_columns` argument. Coloring can now also be applied in a row-wise fashion by using `direction = ""row""`. Despite all of these changes, older code should still work with the revamped function (#116, #633, #637, #1103, #1119). (#1147)",1,68,FALSE,NA
gt,2fbc3bc0c968217afdb63da64696d0e3,"We now have a much improved `cols_merge()` function! It has gained a `rows` argument for limiting which body cells get merged together. The `pattern` argument now has a more advanced syntax. It now has the following delimiters and rules: (1) `{ }` for arranging single column values in a row-wise fashion, and (2) the `<< >>` to surround spans of text that will be removed if any of the contained `{ }` yields a missing value. The new `<< >>` delimiters will help in cases where `NA` values are present and should be omitted during the merging process (#1167). (#1144, #1168)",1,69,FALSE,NA
gt,39b2512a9f9bdae71fab92b5d336f3e5,"The `cols_label()` function has been improved by allowing formula expressions to be given to `...`. With two-sided formulas (e.g., `<LHS> ~ <RHS>`), the left-hand side corresponds to selections of columns and the right-hand side evaluates to single-length values for the label to apply. Named arguments in the format of `<column name> = <label>` are still also valid as input for simple mappings of column name to label text. Also, there's a `.fn` argument, which takes a function to be applied to all provided label values (#1146). (#1255, #1256, #1265)",1,70,FALSE,NA
gt,bc52048f1a60c6606498cc0eb1d68788,"Interactive HTML tables can now be generated in **gt**. Options for enabling interactive table rendering are available in `tab_options()` and also in `opt_interactive()`. The collection of `use_*` arguments in `opt_interactive()` allow for control of pagination, global search, filtering, sorting, and more. The documentation within `opt_interactive()` demonstrates how to generate HTML tables with interactive elements (#207). (#902, #1252, #1261, #1278, #1280)",1,71,FALSE,NA
gt,3ea3a4b178ad37368f9451012c40884f,"A new function, `cols_label_with()`, has been added for relabeling columns via functions. It allows for such functions to be applied to arbitrary sets of columns, taking advantage of **tidyselect**. It's like `dplyr::rename_with()` for your **gt** table, but it doesn't need unique names for labeling (#701). (#1158, thank you @​christopherkenny!)",1,72,FALSE,NA
gt,be810df3a975c45521c3e97bf06c2ea3,"We added `fmt_spelled_num()` and `vec_fmt_spelled_num()` so that numeric values could be transformed to spelled out numbers. Any values from `0` to `100` can be spelled out according to a given `locale` value. For example, the value `23` will be rendered as `""twenty-three""` if the locale is an English-language one (or, not provided at all); should a Swedish locale be provided (e.g., `""sv""`), the output will instead be `""tjugotre""`. (#1198)",1,73,FALSE,NA
gt,9d18a8a397b098a8897329c7f7c5a92b,"The `fmt_index()` and `vec_fmt_index()` functions were added in so that numeric values could undergo transformation to index values, which are usually based on letters (depending on the `locale` chosen). For example, the value `5` will be rendered as `""E""` if the locale is an English-language one. The characters chosen for indexing here are based on character sets intended for ordering (often leaving out characters with diacritical marks). (#1189)",1,74,FALSE,NA
gt,c9f3ea92ed7e76dc381e010a204f60e0,"Should body cells contain URLs, the new `fmt_url()` function can be used to make them navigable links. There are several options provided that control how the links should be styled (conventional underline style or button-like text) (#609). (#1205, #1220, #1221)",1,75,FALSE,NA
gt,f54af50c1f323b18de95d7cf831028e1,"To more easily insert graphics into body cells, we have added the `fmt_image()` function. This allows for one or more images to be placed in the targeted cells. The cells need to contain some reference to an image file, either: (1) complete http/https or local paths to the files; (2) the file names, where a common path can be provided via `path`; or (3) a fragment of the file name, where the `file_pattern` argument helps to compose the entire file name and the `path` argument provides the path information. (#1240)",1,76,FALSE,NA
gt,02476ad1255afb22ef630ccbed99e8de,"The new `fmt_flag()` function helps with inserting a flag icon (or multiple) in body cells. The input cells need to contain 2-letter ISO 3166-1 country codes (e.g., Mauritius with the `""MU""` country code). This function will parse the targeted body cells insert the appropriate flag icon. Multiple flags can be included per body cell by separating country codes with commas. (#1241, #1244, #1251)",1,77,FALSE,NA
gt,823de605fe9548ddd27ee13993d6e2ad,"With `fmt_bins()`, you can format bin or interval syntax (returned from `cut()`) to a form that presents better in a display table. It's possible to format the values of the intervals with the `fmt` argument, and, the separator can be modified with the `sep` argument. (#1250)",1,78,FALSE,NA
gt,b474aee6bc51786fed06c0646b832df2,"The new `fmt_auto()` function has been added to automatically apply formatting of various types in a way that best suits the data table provided. For example, the function will attempt to format numbers such that they are condensed to an optimal width, and, currency values can be detected (by currency codes embedded in the column name) and formatted in the correct way (#248). (#1176)",1,79,FALSE,NA
gt,2d41f6063676a22e8e39726bbee3249e,"Three `text_*()` functions were added to better enable transformations of formatted text in various table locations: `text_replace()`, `text_case_when()`, and `text_case_match()`. (#1238)",1,80,FALSE,NA
gt,a8f8feb8d6af5c601f3016776b7c84e3,"We can use any of 15 system font stacks available in **gt**! These are families of themed system fonts that are widely available in different computer systems. Examples include 'System UI' (the default font stack), 'Humanist', and 'Neo-Grotesque'. The new helper function `system_fonts()` can be used to access the various font stack and is useful when specifying `font` values in the `cell_text()` function. The `opt_table_font()` function has been upgraded to include a `stack` argument (which accepts keywords for the different font stacks). (#1275)",1,81,FALSE,NA
gt,a779342a748e43d735f58a058c6c9f0f,"We now have a new family of functions that let you deal with a multitude of **gt** tables, all at once. You can create a `gt_group` object with multiple tables via the `gt_group()` function, or, split a single table into multiple with `gt_split()`. There are some advantages to having a group of tables bundled together like this. You could apply options that pertain to all tables yet still access the individual tables to give them their own specialized modifications. They all print together at once too! For HTML, each table will be separated by a line break whereas in paginated formats (e.g., RTF, Word, etc.) the tables are separated by page breaks. (#1216, #1219, #1226, #1248, #1249, #1262, #1264)",1,82,FALSE,NA
gt,d016d2d2dcb03688909cd6067118f8d6,There is now a choice of which Markdown engine to use for Markdown rendering (in `fmt_markdown()` and `vec_fmt_markdown()`) and a default default choice. The **markdown** package can be chosen instead of **commonmark** to perform conversions of Markdown to HTML and LaTeX (and it's now the default). One of many benefits to this change is the parsing of subscripts (using `~x~`) and superscripts (using `^x^`) (#725). (#1254),1,83,FALSE,NA
gt,6a97e16d84e226976d9419026b0cca32,"Added the footnote formatting options `footnotes.spec_ref` and `footnotes.spec_ftr` in `tab_options()` and exposed these options further in a new function called `opt_footnote_spec()`. Specifications for footnote formatting can be produced for the footnote marks that alight to the targeted text within cells from various locations in the table, or, for the footnote marks that appear in the table footer. (#1268, #1271)",1,84,FALSE,NA
gt,4e3441b33d8d188edfab4210d4b4f0a4,"The `towny` dataset was added. It provides a fun, population-based dataset with place names, URLs, coordinate information, and population figures with repetition (values for different census years). (#1184, #1199)",1,85,FALSE,NA
gt,a9de57cc96205ddac09996c11bac9da0,"The `metro` dataset is new. It has 308 rows, where each corresponds to a different Paris Metro station (#1231).",1,86,FALSE,NA
gt,75c20d895b0e4f775f85c0babb2c8397,"The `rx_adsl` and `rx_addv` datasets have been added. These clinical trial toy datasets are both featured in a new vignette that explains how **gt** can be used for table generation in the Pharma space (#1145, #1200; thank you @​alex-lauer!).",1,87,FALSE,NA
gt,7c7e965ed84682365fd8c2209c829c61,"Addition of a new vignette (*gt Clinical Tables*) that uses the `rx_adsl` and `rx_addv` datasets. (#1145, #1217, #1224; all contributed by @​alex-lauer)",1,88,FALSE,NA
gt,ea103841ee4591b3e8b691851c5a6eef,"All examples in the documentation were modernized by using the `|>` instead of the `%>%`. A lot of explanatory text was improved through rewriting. The ordering of documentation sections was improved. And functions that had very little documentation (like `text_transform()`) were greatly improved (#1087). (#1166, #1185, #1192)",1,89,FALSE,NA
gt,7c5b08f298b9fb0caf7e93f6d9c32b75,"Several small documentation and housekeeping updates. (#1133, #1134, #1135, #1136, #1190, #1206, #1218, #1242, #1246, #1258, #1260, #1266, #1270, #1276, #1281)",1,90,FALSE,NA
gt,1be4da9e50742b1d1c93b73d226a82a4,"Added a citation file for the package. (#1128, #1277)",1,91,FALSE,NA
gt,37e602c9cf52d5f97c1d445d78f3f7b8,"The `fmt_scientific()` and `fmt_engineering()` (and their `vec_fmt_*()` analogues) now have a `exp_style` argument for defining the exponent notation. By default this is `""x10n""` but other options include using a single letter (e.g., ""e"", ""E"", etc.), a letter followed by a ""1"" to signal a minimum digit width of one, or ""low-ten"" for using a stylized ""10"" marker. These functions now also have the `force_sign_m` and `force_sign_n` arguments for forcing `+` signs in the mantissa or the exponent. (#1178)",1,92,FALSE,NA
gt,e022b51d1985f61cede6ef5053f9089a,We now have right-to-left (RTL) text handling and **gt** will automatically set the appropriate alignment for RTL text in HTML output. This is done through detection of RTL script characters. (#697). (#1202),1,93,FALSE,NA
gt,1c59005a0b834ddf1705c37270dcfad8,"For any columns that are labeled (i.e., have a `label` attribute), **gt** will automatically use those labels as column labels (#656). (#1230)",1,94,FALSE,NA
gt,6468fd9d4782c55819024abd41357707,"Tables in the Word output format now have much better Markdown support (#1057, #1067, #1204). (#1142, #1263, #1274)",1,95,FALSE,NA
gt,63511caad6505295a6e8ca194588d6af,"Added the `""double""` option for a border style in `cell_borders()` (#1132). (#1137)",1,96,FALSE,NA
gt,535626b37ade1239c3e7ae522344e307,"The `countrypops` dataset was updated with recent (as of January 2023) World Bank data that revises population estimates and brings the final year up to 2021. All examples, tests, and articles using the dataset were also updated. (#1191)",1,97,FALSE,NA
gt,e80bfb262d0243780169edf7caf15765,Fixed a conflict between `tab_spanner_delim()` and `cols_label()` (#1130). (#1173),1,98,FALSE,NA
gt,2fbb7709f5f6bbe95f83b43717764198,Added a fix for a `summary_rows()` problem where summary rows that were generated with only a single group would not display the summary rows at all. (#1188),1,99,FALSE,NA
gt,a17d61b042c162c0ae9334d7d39ee789,HTML output tables no longer have contain two `<thead>` elements they display a header and column labels (#1235). (#1237),1,100,FALSE,NA
gt,88bebb108d2d63ac0a49d000e88bddd0,"Incorporated a CSS fix for superscripted footnote marks. Prior to the change, footnote marks were never styled within **gt** tables rendered in Quarto documents. (#1210)",1,101,FALSE,NA
gt,4cc328d0be6bc9e3be2daad043e7ef90,We now remove **knitr** flags when saving an RTF file through the `gtsave()` function (#674). (#1153),1,102,FALSE,NA
gt,eec0c5ff9702bf09f2e5f5163b97a459,"Fixed LaTeX rendering of tables using the `xelatex` engine by removing the unneeded `""amsmath""` LaTeX package from the default set of LaTeX dependencies. This set is now modifiable through the `gt.latex_packages` option (#751). (#1279)",1,103,FALSE,NA
gt,4a4f0b8804d2c4e34a5cd8e90c94742c,Fixed some border-related issues for **gt** tables published in R Markdown and Quarto documents (#1120). (#1234),1,104,FALSE,NA
gt,4028a4f3c05eaad15e9bf030c1c810c8,"Added the `quarto.use_bootstrap` and `quarto.disable_processing` options in `tab_options()` to control whether Quarto will add Bootstrap classes to a **gt** table or ignore a **gt** table. (#1222, #1227)",1,105,FALSE,NA
gt,9be31c09e2a9552ac146e4dff9fd8f03,Fixed the unintended appearance of a bottom border in the column spanner row for some CSS environments. (#1209),1,106,FALSE,NA
gt,10555f50b7ecc3f8cab03e8c2432a4e7,Fixed the SCSS class `.gt_footnote_marks` to ensure that the footnote mark is at a consistent height from the baseline in different CSS environments. (#1187),1,107,FALSE,NA
gt,e70a0d291b2be00a4d542225562ed9bc,Fixed an error in the SCSS class `.gt_footnote` where the wrong types of padding were specified. (#1236),1,108,FALSE,NA
gt,603b92ef6bf7966ff33226af828b165f,Added frequency levels to `cli_abort()` warnings throughout package (#1160). (#1169),1,109,FALSE,NA
gt,223e8e53cab67cef3f3b7a4c6847d7b6,"The new function `sub_values()` is here for subbing in arbitrary text in body cells, based on value, a regex, or a specialized function. It's like a supercharged find-and-replace for your **gt** table (#703). (#1066)",1,110,FALSE,NA
gt,8b4c88e558193a1e65247db98db13f29,"We want the setting of styles to be as easy as possible so, to that end, we've added a helpful new function: `tab_style_body()`. This function is a bit like `sub_values()` and a bit like `tab_style()`. The idea is that basic style attributes can be set based on values in the table body. We can target body cells though value, regex, and custom matching rules, and, apply styles to them and their surrounding context (e.g., styling an entire row or column wherein the match is found). The help file at `?tab_style_body` provides copious examples w/ eye catching visuals (#863). (#1108)",1,111,FALSE,NA
gt,11ec78de698f7aa3a078d63021b97f0e,"The `fmt_date()`, `fmt_time()`, and `fmt_datetime()` functions have been improved so much, I don't even know where to begin. The `fmt_datetime()` function has an enhanced `format` argument that accepts *CLDR*-style formatting patterns (much more powerful and flexible than the `strptime()` patterns). The `fmt_datetime()` function will detect the pattern type given in `format`. The `date_style` and `time_style` arguments still exist but have been extended to accept more style keywords. There is now the concept of flexible date and time formats that are locale-aware (the `locale` argument is new to these functions). The `info_date_style()` and `info_time_style()` functions have been enhanced to give you display tables will all the style possibilities. All of this goodness extends to the `vec_fmt_*()` variants (`vec_fmt_date()`, `vec_fmt_time()`, and `vec_fmt_datetime()`). The documentation for all of this has been overhauled and provides many explanations and examples for your edification (#531, #1052). (#1053)",1,112,FALSE,NA
gt,d588a7bb6a85cd20b77d8d3592f3adef,"We can now have decimal alignment for numeric values and this made possible with the new `cols_align_decimal()` function. The function ensures that columns targeted are right-aligned, that accounting notation is supported, and that footnote marks don't interfere (#139, #144, #560, #673). (#1058, #1092; assist by the inimitable @​steveputman!)",1,113,FALSE,NA
gt,d50bec7022ca4d870499427ba6e367e0,"We can easily add a caption to a **gt** table (or replace an existing one) with the new and convenient `tab_caption()` function (#1048). (#1051, thank you @​billdenney!)",1,114,FALSE,NA
gt,a3a76883933b3b59642c454db88ce5b9,"So you've got a **gt** table and you want a value or two from that table to appear elsewhere in your R Markdown or Quarto document. Previously, you had to recreate it in some way but now you can use `extract_cells()`! That function will extract a vector of cell data from a `gt_tbl` object. The output vector will have the cell data formatted in the same way as the table. (#1045, #1047)",1,115,FALSE,NA
gt,31e656bf5994b9c62c2f458caa6bebec,"The `as_raw_html()` function is useful for generating an HTML string for table-in-HTML-email situations and for HTML embedding purposes (with that `inline_css = TRUE` option). While the CSS-inlining has been mostly fine, it had two major problems: (1) it was *slow*, and (2) the underlying R code was so underpowered that it just couldn't keep up with changes to our SCSS styles. This is now solved by integrating a package that uses the *juice* JS library (we call it **juicyjuice**!). This solution is far more performant and correct (#455, #540, #837, #858, #915, #1093). (#1114)",1,116,FALSE,NA
gt,c8e9dd590d79eda4cebbf3ef3171552e,"There's now padding around an HTML table! And you can even control the left/right (`container.padding.x`) and top/bottom (`container.padding.y`) padding values through `tab_options()`! This is very helpful since tables were way too close to paragraphs of text in rendered HTML documents produced by R Markdown and Quarto (#590, #1105). (#1116)",1,117,FALSE,NA
gt,69e493b5b0abc425ce405f41a5cc4881,The table stub can now freely merge with other columns using any of the `cols_merge*()` collection of functions. This is great if you want to independently format the stub and other columns and then bring them together in interesting ways. (#1122),1,118,FALSE,NA
gt,0d24e7b000c87780d3b1c5f4055557ea,"We've added the ability to treat columns containing row names or group names as Markdown text. This provides the `process_md` argument in the `gt()` function. If this option is taken (example below) then the supplied names will be treated to ensure that there are unique IDs for later targeting (for `tab_style()`, `tab_footnote()`, etc.) (#694). (#1097)",1,119,FALSE,NA
gt,0d24e7b000c87780d3b1c5f4055557ea,"```
dplyr::tibble(x = c(""**a**"", ""b"", ""*c*""), y = c(""*A*"", ""*B*"", ""*B*""), z = 1:3) %>%
  gt(rowname_col = ""x"", groupname_col = ""y"", process_md = TRUE)
```",1,120,TRUE,NA
gt,3cde0ed98d01de49606d92195d5eb7c2,"If you find yourself not knowing the ID values of certain cells in the table (sometimes necessary for adding footnotes, styles, etc.) the new `tab_info()` function can help! Use that with a **gt** object and you'll get an informative table that summarizes all of the table's ID values and their associated labels (#1102). (#1104)",1,121,FALSE,NA
gt,b782ee4c356f3b67112c154ba959f7a8,"Much of **gt** is about adding things to a table but what about doing the opposite (taking things away)? The new family of `rm_*()` functions (`rm_header()`, `rm_stubhead()`, `rm_spanners()`, `rm_footnotes()`, `rm_source_notes()`, and `rm_caption()`) let us safely remove parts of a **gt** table. This can be advantageous in those instances where one might obtain a **gt** table though other means (like from another pkg) but prefer to excise some parts of it (#790, #1005). (#1073)",1,122,FALSE,NA
gt,b0eb966ee80e42dd122d92f8f834e863,The table stub column can now have its contents formatted with any of the `fmt_*()` functions. We also added the `stub()` helper function to help select the stub column (#747). (#1038),1,123,FALSE,NA
gt,a6c6e6d01214da79556300416e6b7794,The new formatter function `fmt_roman()` lets us easily format numbers to Roman numerals (either as uppercase or lowercase letters). The `vec_fmt_roman()` vector-formatting function was also introduced here. (#1035),1,124,FALSE,NA
gt,fe3b759f996324971cce5cee8ae32cf7,"The `data_color()` function allows us to color the background of cells based on data, and **gt** smartly chooses a text color that provides the most contrast between text and background. We wanted to improve that feature so now `data_color()` has a `contrast_algo` argument that allows us to choose between two color contrast algorithms: `""apca""` (*Accessible Perceptual Contrast Algorithm*; new, and the default now) and `""wcag""` (*Web Content Accessibility Guidelines*). (#1062)",1,125,FALSE,NA
gt,644368f7f984e440b6d79889ea006b5a,"The accessibility of structurally-complicated **gt** tables (i.e., multi-level headings, irregular headers, row groups, etc.) was addressed by work that follows the W3C WAI (*Web Accessibility Initiative*) guidance. Now, screen readers can better describe **gt** tables with such complex structures (#926). (#988, thanks @​jooyoungseo!)",1,126,FALSE,NA
gt,4bc5702cd06d1872a5078c7e81811d49,"The `docx` output format is now better detected in R Markdown and Quarto (#1040). (#1084, thanks @​cderv!)",1,127,FALSE,NA
gt,ceb07ba0bc81576070d9d183250483c2,"Replaced all `match.arg()` calls with **rlang**'s `match_arg()` for better error output (#672). (#1099, thanks @​mojister!)",1,128,FALSE,NA
gt,e2790e3ea77041aca78b7ab093b39bf5,"Project website improvements; we now have a doublet of sites: (1) https://gt.rstudio.com and (2) https://gt.rstudio.com/dev (#1074, thanks @​ddsjoberg!)",1,129,FALSE,NA
gt,5a20006860dcfd9d23443eeb4868c8c4,The dependency on the **stringr** package has been removed by replacing the remaining **stringr**-based function calls in the package with base-R equivalents. (#1043),1,130,FALSE,NA
gt,968d71f92f05ee5c8b105f1784fe1f75,"We can now export **gt** tables as Word documents. This is thanks to @​thebioengineer (Ellis Hughes!) who not only made this type of output work through `gtsave()` (writes the .docx file) but also through `as_word()` (gives you an OOXML string) (#121, #929). (#962, #986, #1016)",1,131,FALSE,NA
gt,7f95d7cb532157ea094f2404d9fb17da,"A whole new family of vector formatting functions (of the form `vec_fmt_*()`) has entered the package! After all, why should columns have all the formatting fun? If you have vectors in need of formatting, we have 14 of these functions, adapted from their corresponding `fmt_*()` functions. You can control the output style of the resulting character vector with the `output` argument. This can either be `""auto""` (the default), `""plain""`, `""html""`, `""latex""`, `""rtf""`, or `""word""`. In **knitr** rendering (i.e., Quarto or R Markdown), the `""auto""` option will choose the correct output value; this is great for incorporating formatted values in inline text. (#899, #995)",1,132,FALSE,NA
gt,fda6b6f79c9932b7f4b42f734100e727,"It's now incredibly easy to have colorful and stylish tables thanks to the new `opt_stylize()` function. We provide you with a carefully curated set of background colors, line colors, and line styles. There are six styles and six color variations, giving you 36 combinations of style and color to choose from (#238). (#987)",1,133,FALSE,NA
gt,d188a38465920020da485e1f591bc68b,"The `tab_stub_indent()` function was added to allow for fine control over row label indentation. (#999, #1002)",1,134,FALSE,NA
gt,5597a91fabaab13b15a48bb165e95631,The `fmt_duration()` function is now available for formatting values to time duration values whether those input values are numbers or of the `difftime` class. It provides a wide array of options so you can get the formatting of time duration values just right (#403). (#916),1,135,FALSE,NA
gt,b7459b42ed0d71b6ff1590486d69a803,"Generating PNG files from **gt** tables using `gtsave()` is now way better due to the move away from **webshot** to its sequel package **webshot2** (#621, #885). (#985)",1,136,FALSE,NA
gt,858c153244b30284d47568b717653273,"A number of accessibility enhancements for HTML table outputs were undertaken to make **gt** one of the most accessible table packages around (#678, #679, #680). (#977, #978, #979, #981; thank you, @​jooyoungseo, for all of this)",1,137,FALSE,NA
gt,03d3948aebb71f1eddc100a60b3d1864,"Errors and warnings, though we don't often like to receive them, look much better now since we've integrated the **cli** package into **gt**! (#963)",1,138,FALSE,NA
gt,c72fac833d25a8fe9964a1d9d32c0786,"We can now supply data from adjacent columns to user-supplied aggregation functions in `summary_rows()` and `grand_summary_rows()` (#383, #690, #952). (#1018)",1,139,FALSE,NA
gt,1963187f2fed317aeb591e72cd30399f,"Initial alignments in the table stub are now more intelligently determined in `gt()` by examining the content of the column (the `""rowname_col""`) that will comprise the stub. If values are predominantly number-like then a right alignment will be chosen, otherwise row labels will be left aligned. (#999)",1,140,FALSE,NA
gt,94adae33bca53d38acf352813b27d3ef,"Enhanced automatic column alignment (set to `""auto""` by default in the `gt()` function) by probing the contents of the columns. This ensures that string-based dates/times/datetimes receive a better appearance before formatting. (#997)",1,141,FALSE,NA
gt,0f63b34528229472bb7121436fd9d551,"**gt** tables no longer break table numbering in R Markdown and Quarto documents. (#1003, thanks @​cscheid!)",1,142,FALSE,NA
gt,86a4484d08ce57eec9a22f846cf0325b,"The `as_latex()` documentation was updated to provide guidance on necessary LaTeX dependencies. (#1022, thanks @​coatless!)",1,143,FALSE,NA
gt,0080b7a2795baeebde96f383c119917a,Fixed a bug where footnote marks would not be rendered in the stub column representing row groups (#1001). (#1014),1,144,FALSE,NA
gt,c6c9621e26d3b7a97d8ea842f367c8c8,"Using `gtsave()` in a Quarto or R Markdown code chunk will no longer generate any output, which is good since we don't want any (#974). (#1011)",1,145,FALSE,NA
gt,f5f7917db31cd9ee504d449867cd82f7,"Fixed an issue where footnote marks would not be set directly to cell text generated from `fmt_markdown()` (#893, #993). (#1013)",1,146,FALSE,NA
gt,2312e3afcdfce980bee39f8d7d7d0343,"All **testthat** tests have been migrated to the 3rd Edition of **testthat**. Also, the tests run much faster now. (#959)",1,147,FALSE,NA
gt,68a478a6a097dd69e06bd4441c96a5ae,"RTF output support more suitable for Pharma users: (1) table styling now defaults to a look with far less table borders, which is more common for Pharma-based applications; (2) RTF table generation can make use of the new page-layout options (`page.*`) added to the `tab_options()` function (e.g., `page.orientation`, `page.numbering`, etc.) (#311, #653). (#927)",1,148,FALSE,NA
gt,29262b3f5786a6d6a3fcdc6d5be6925b,The `tab_footnote()` function now allows for non-location footnote by making the `locations` argument optional; Any footnotes declared in this way will have their notes precede any location-based notes in the footer area (#879). (#925),1,149,FALSE,NA
gt,a3d849a29df41bc63ef1be2c1637d8fa,"The `fmt_partsper()` function was added so that we can format values as high-ratio, dimensionless quantities (e.g., `""per-mille""`, `""ppm""`, etc.). These are less common that percentage values but no less important (#608). (#914)",1,150,FALSE,NA
gt,d4c6824694cc463277adf4e34142e79f,"The `sub_*()` group of functions were added to make simple and common substitutions of data in a gt table with not-too-much effort. The functions added are: `sub_missing()`, `sub_zero()`, `sub_small_vals()`, and `sub_large_vals()`. The `sub_missing()` function replaces `fmt_missing()` (and this deprecates the latter) (#904, #910, #911). (#912)",1,151,FALSE,NA
gt,f4bc79c3655362042585219a868fc041,"The `tab_spanner()` and `tab_spanner_delim()` functions now support the addition of column spanners with unlimited levels (previously, only a single level of spanner column labels was possible to add) (#746). (#905)",1,152,FALSE,NA
gt,8bd99a633c7f3e70d6cd28be8e7d055e,"There is now support for the Indian numbering system, making the placement of digit-grouping separators correspond to thousand, lakh, crore, and higher quantities. This is available for several `fmt_*()` functions (`fmt_number()`, `fmt_integer()`, `fmt_currency()`, `fmt_percent()`, and `fmt_fraction()`) and is exposed as the `system` argument with two options `""intl""` (international, the default) and `""ind""` (Indian).",1,153,FALSE,NA
gt,265a3704080c3927899821d9f2832064,Enhanced the `cols_merge_uncert()` function such that different lower and upper uncertainty values could be used (by specifying two columns in the `col_uncert` argument) (#884). (#888),1,154,FALSE,NA
gt,c61680be1f03f2341d62bf01e34eb200,Honor the `locale` setting from the initial `gt()` call when rendering summary rows (#906). (#907),1,155,FALSE,NA
gt,978bb0c90e282d917c923bf915c5eb45,Fixed an issue where styles that spanned multiple columns and rows in a summary block were not fully rendered (#859). (#924),1,156,FALSE,NA
gt,1e676ba959e9f74e527c374cfbbd5ce3,"Improved LaTeX rendering of certain characters (e.g, `\`, `~`, `&`, etc.). (#903)",1,157,FALSE,NA
gt,edb494299fed8f1b778dd296022085b6,"Aggregations with `summary_rows()` and `grand_summary_rows()` that might return an `NaN` (common case is using `mean(., na.rm = TRUE)` on an all-`NA` column) now return `NA`. This removes the evaluation error that would otherwise occur and provides an opportunity to replace the `NA` with an explanatory replacement string (#471, #827). (#887)",1,158,FALSE,NA
gt,5cb05cece58209331d2e02b117764552,We now have the ability to display row group labels as a column in the stub (as an alternative to these grouping labels appearing as header rows). This is made possible with the new option `row_group.as_column` in `tab_options()` (the default keeps the preexisting behavior) (#291). (#855),1,159,FALSE,NA
gt,8f34e8e03248764729894cc611e426c3,"The table footer (which can contain footnotes and source notes) now has numerous layout options in `tab_options()`: `footnotes.multiline`, `footnotes.sep`, `source_notes.multiline`, and `source_notes.sep`. With the `*.multline` options, we can control whether notes span across separate lines (`TRUE`, the default) or are kept together as a paragraph (`FALSE`). For the latter layout option, we can control the separation between consecutive notes with the `*.sep` options (the default is `"" ""`). The work done here also fixes long-standing issues with footer output in the LaTeX and RTF formats (#593, #833). (#864)",1,160,FALSE,NA
gt,416c6c3a7ad03eb9e94928eb9ab7b471,"The `fmt_fraction()` formatter was added, allowing for flexible formatting of numerical values to mixed fractions of configurable accuracy (#402). (#753)",1,161,FALSE,NA
gt,cdbcc8f64604d2b4223f9ed93e636824,Added the `opt_horizontal_padding()` and `opt_vertical_padding()` functions to easily expand or contract an HTML table in the horizontal and vertical directions (#868). (#882),1,162,FALSE,NA
gt,f5127a8395bc6eee540df406cee1d602,"There is now a `locale` argument in the `gt()` function. If set, formatter functions like `fmt_number()` will automatically use this global locale while formatting. There also remains the the option to override the global locale with any non-`NULL` value set for `locale` within a `fmt_*()` call (#682). (#866)",1,163,FALSE,NA
gt,4c0dcbd84da0c9e1c6b2d91c3bb19226,"There is now more flexibility, improved documentation, and more testing/reliability for the date/time formatting functions (`fmt_date()`, `fmt_time()`, and `fmt_datetime()`). Now, `Date` and `POSIXct` columns are allowed to be formatted with these functions. With `fmt_datetime()`, we can even supply a format code for generation of custom dates/times (#612, #775, #800). (#801)",1,164,FALSE,NA
gt,e23be7e9c7440f1db74c4b3e1e7a063f,"Footnote marks for HTML tables now have an improved appearance. They are slightly larger, set better against the text they follow, and, asterisks are specially handled such that their sizing is consistent with other marks (#511). (#876)",1,165,FALSE,NA
gt,b7b661b03e18b41b6c0d1f1183ec5510,"Further improving support for color value inputs, **gt** now allows shorthand hexadecimal color values (like `#333`) and the use of the `transparent` CSS color keyword (#839, #856). (#870)",1,166,FALSE,NA
gt,3e22332eba6f17474c2954108ea79770,"The rendering of percent signs in HTML output was changed from the problematic HTML entity `&percnt;` to simply `%`. This solves issues with tables incorrectly rendering percent signs in some situations (#657, #686). (#871)",1,167,FALSE,NA
gt,77d73661dce577eafc5db7f5490bf85e,"All values supplied within `cells_title()` are now checked more rigorously, erroring and providing actionable messaging when stopping does occur (#424). (#783)",1,168,FALSE,NA
gt,6ea73eeb4d1c4d4614bed94d17c0ad53,"Added a missing column entry in the documentation for the `gtcars` dataset. Thanks, @​luisDVA for providing this fix! (#883)",1,169,FALSE,NA
gt,188380d675650dd6a9f870d82121524f,"We now have the `force_sign` argument in several numeric formatting functions (`fmt_number()`, `fmt_integer()`, `fmt_scientific()`, `fmt_engineering()`, `fmt_percent()`, `fmt_currency()`, and `fmt_bytes()`). This makes it possible to force the appearance of the positive sign for positive values (#773). (#793)",1,170,FALSE,NA
gt,c5f836c393b6ce1f3a78fd2db20c852e,"It's now possible to add padding to the column labels and heading locations in HTML tables with two new arguments added to `tab_options()`: `column_labels.padding` and `heading.padding`. Several options already exist for easily changing the vertical padding of certain locations, so, these additions make it possible to fully alter the padding from top to bottom (without resorting to using CSS) (#770). (#795)",1,171,FALSE,NA
gt,0f38bbc6a7508481da5d31112fdd856b,The `whitespace` argument has been added to `cell_text()` and this provides many options for making whitespace easier to handle in HTML output tables (#714). (#797),1,172,FALSE,NA
gt,3f9037306e4cfdb63751bd3984782826,Fixed LaTeX rendering for tables that have a stub; now data row cells are correctly laid out.,1,173,FALSE,NA
gt,8cc62288bb965d88074316162b7a6506,"LaTeX output tables now properly render summary rows. In addition, grand summary rows are now rendered in LaTeX outputs (previously, grand summary rows were ignored). This clears the long-standing issue in #625. (#768)",1,174,FALSE,NA
gt,b5cbbc688bf22bcc9f09d92b3b67b9b3,"Titles and optional subtitles in LaTeX output tables have an improved appearance, and the underlying code was rewritten to guard against more edge cases that might lead to failing LaTeX output. (#779)",1,175,FALSE,NA
gt,8a736f71493a2a568793d93ed3f88d9c,The `data` argument in the `cols_label()` and `cols_width()` functions was renamed to `.data` to avoid a partial matching issue (raised in #715). (#772),1,176,FALSE,NA
gt,cdc96f133e25be448245cf5ce65a60a8,Fixed a bug where styles may not be applied correctly to summary row cells in HTML output tables (#752). (#782),1,177,FALSE,NA
gt,536749fce4d9148ed216806f2581931c,"Incorporated the full use of X11 color names for styling HTML tables. Now, named colors like `gray50` won't throw an error. Additionally, CSS3 colors that have no equivalent in X11 (like `Crimson` and `RebeccaPurple`) will now also just work (#712). (#787)",1,178,FALSE,NA
gt,95f514161b3d29956647d32e4cf8cb54,"Fixed a bug that occurs in the following rare circumstance: when using `summary_rows()` with no stub, a new column is generated internally and given the name rowname; but this can conflict with a column that has the same name, generating duplicate column names and not erroring at that instant (#749). (#792)",1,179,FALSE,NA
gt,166dde5387fe07c51e7d2abe8590afc6,"The image generation functions `local_image()` and `web_image()` are enhanced such that multiple image paths/URLs can now be handled without errors. Thanks, @​primaj for the initial work on this in #738. Fixes #510. (#803)",1,180,FALSE,NA
gt,45e4378e8a806c94af981e994a1ff093,Fixed a bug that occurs when using a `font` with the `cell_text()` along with other styles. Fixes #661 and #802. (#805),1,181,FALSE,NA
gt,52dda533d1e295b722460be1f2d8690f,"Implemented a fix for the situation where `tab_style()` is used along with `cells_summary()` as a location and, also, `row_group_order()` is used to reorder row groups. This resulted in a non-application of the style to the targeted summary cells (#812). (#814)",1,182,FALSE,NA
gt,83877011b0dde6ff183552d49aaffe02,RTF table generation is now fit for use following an extensive rewrite of internal RTF rendering functions.,1,183,FALSE,NA
gt,40917e6cf5f17a0dd92442141fc53939,"RTF table output with `gtsave(..., ""<file>.rtf"")` and `as_rtf()` now has much more feature parity compared to HTML tables; we can now add summary rows, format table text with Markdown via `fmt_markdown()`, and expect tables that look acceptable in Word and text editors that are RTF-compatible.",1,184,FALSE,NA
gt,e7b391eff74cc1672838f293e508df47,References to columns (by way of the `columns` argument in many **gt** functions) now better adhere to **tidyselect** semantics.,1,185,FALSE,NA
gt,cb7d32f0f90019da7449301866ea6177,"Instead of using `columns = vars(a, b)`, we now use `columns = c(a, b)` (`columns = c(""a"", ""b"")` also works, and this type of expression always has been an option in **gt**).",1,186,FALSE,NA
gt,652fcc62d0491840a1ec89c0fea0bd50,"Other **tidyselect** idioms should also work; things like using `where()` to target columns (e.g., `gt(exibble) %>% cols_hide(columns = where(is.numeric))` will hide all numeric columns) and negation (e.g., `columns = -c(a, b)`) function as expected.",1,187,FALSE,NA
gt,5898d87e144469a9fff6fe5b8e2c0330,"Column labels subordinate to column spanner labels had their alignment forced to be `""center""` but now there is no specialized alignment of column labels under spanners. Should you need the old behavior, `tab_style()` can be used along with `cell_text(align = ""center"")` for all columns that live under spanners. (#662)",1,188,FALSE,NA
gt,2fea1c630725d9d1a61eb99e68c9aee7,"The automatic alignment of integer values has been changed from `""center""` to `""right""`. To correct for this, use `tab_style()` with `cell_text(align = ""center"")` for all affected columns. (#662)",1,189,FALSE,NA
gt,fc0a8cd273452d89fd6b7a74636457c2,"As part of the **tidyselect** changes made in this release, using `columns = TRUE` (to mean that all columns should be considered) has now been replaced with `columns = everything()`. Using the former will result in a warning message. (#718)",1,190,FALSE,NA
gt,524c395384b667c10575253d8e6ef5a9,"While `vars()` is still reexported in **gt**, its use with the `columns` argument (present in a large number of functions) is deprecated and a warning message will appear if it is used. In a later release, it can be expected that `vars()` will no longer be reexported. (#718)",1,191,FALSE,NA
gt,7bd3191457c818719a7aaecf7cfecfa5,"The `others_label` argument of `tab_row_group()` is deprecated since it was confusing to use. To specify a default label for row groups, the course of action is now to use `tab_options(row_group.default_label = <label>)`. (#699)",1,192,FALSE,NA
gt,fa8b80d226736ab066a7adef814760e9,"RTF table output via `gtsave(..., ""<file>.rtf"")` and `as_rtf()` should produce more robust tables (allowing use of `summary_rows()`, `fmt_markdown()`, etc.). And tables generated as RTF can now take advantage of `cols_width()` for flexible modifications of column widths. (#638 and #696)",1,193,FALSE,NA
gt,172b903e6e3cb48fad09058f55b0b2b2,"All functions with a `columns` argument can now take advantage of **gt**'s full adherence to **tidyselect** semantics (use `columns = c(a, b)` or `columns = c(""a"", ""b"")` instead of `columns = vars(a, b)`). (#718)",1,194,FALSE,NA
gt,ecd38a8d7b55e36f28ef5b32fb322129,"New location helper functions have been added to make it possible to style more locations and add footnotes to once inaccessible locations; these are `cells_stub_summary()`, `cells_stub_grand_summary()`, `cells_footnotes()`, and `cells_source_notes()`. Note that footnotes cannot be declared with the latter two functions. (#737)",1,195,FALSE,NA
gt,e167395722d5d68b849b1eed40fbce2e,The `cols_unhide()` function has been added as a complement to the `cols_hide()` function. This is useful when provided the `gt_tbl` object without the source data and code to recreate it *and* there are hidden columns that should be made visible. (#710),1,196,FALSE,NA
gt,706703064ddf21ce3bc9d3fcc5ed48fb,The new formatting function `fmt_bytes()` helps you to transform numerical values to byte sizes with human readable units. (#750),1,197,FALSE,NA
gt,3a7050d29f09b17e78c7613f856a4841,"A new column merging function, `cols_merge_n_pct()`, works to merge a count column and a percentage column together. This function will automatically hide the `col_pct` column by default (but that can be changed by setting `autohide = FALSE`). (#683)",1,198,FALSE,NA
gt,40da272a0fe570e58f6da08c117919a8,Added the `caption` argument to `gt()`. This brings caption support to **gt** tables in R Markdown and **bookdown** documents. (#689),1,199,FALSE,NA
gt,7bf7b61c8266b8d706d4b7a021e5843b,The `accounting` option is now available in the `fmt_percent()` and `fmt_number()` formatting functions (previously it was only present in `fmt_currency()`). (#756),1,200,FALSE,NA
gt,0adbc275cc378058b71ba334a26af3d7,"In RTF documents generated through `as_rtf()` and `gtsave(..., filename = ""<file>.rtf"")`, there is now a `page_numbering` option for adding page numbers to either the `""footer""` or the `""header""` areas (the default is `""none""`). (#755)",1,201,FALSE,NA
gt,a8678b1048b43f3f50cffcb4918bdcf1,"`tab_spanner_delim()` gained a `split` argument to govern whether delimiter splitting should occur at the `""first""` or `""last""` instance of `delim`. For example, if the column name `""a.b.c""` is present and `split = ""first""` then the spanner column label is `""a""` and the associated column label will be `""b.c""`; should `split = ""last""` then the spanner and column will have `""a.b""` and `""c""` labels. (#699)",1,202,FALSE,NA
gt,8ce686686e38db708aba4932b26542d6,"Added `id` as an argument to `tab_spanner()` and `tab_row_group()`, which is useful for later access to these locations (especially when spanner or row group labels are complicated). (#665, #699)",1,203,FALSE,NA
gt,2fbed01edb0e91a84e0c9e4a90643409,HTML table generation is much faster due to efforts to optimize HTML code generation in the building/rendering phase. (#664),1,204,FALSE,NA
gt,366662b0246c4a39c23ee88988ae8036,"When getting the HTML text for **gt** table with `as_raw_html(..., inline_css = FALSE)`, the `<style>` tag content is no longer omitted. (#718)",1,205,FALSE,NA
gt,710d1e8ea24a48d75420e9b90052bf88,"Fixed two bugs in `tab_row_group()`: (1) incorrect reordering of rows (Issue #717), and (2) spurious warnings with multiple calls (Issue #675). (#699)",1,206,FALSE,NA
gt,3a353df74b9200ee4d03e645e5c80325,The `tab_spanner_delim()` with `gather = TRUE` did not work reliably (Issue #626) but was fixed along with other work done to overhaul the function. (#665),1,207,FALSE,NA
gt,ea854487229986e91a6a7d049561c4b4,Correction made to the representation of the `PEN` (Peruvian Nuevo Sol) currency. (#663),1,208,FALSE,NA
gt,d43b87f41e2ddf344e6c01e754275010,Fix for `gtsave()` when saving an image and specifying a `path` value. (#592),1,209,FALSE,NA
gt,74850280036975c2f112d8ba11149b17,"The new `opt_table_font()` function makes it possible to define a custom font for the entire **gt** table. The standard fallback fonts are still set by default but the font defined here will take precedence. You could still have different fonts in select locations in the table, and for that you would need to use `tab_style()` in conjunction with the `cell_text()` helper function. The new `google_font()` helper function provides an option for supplying a font available at the Google Fonts service (this is in addition to using system fonts in the `font` argument). Using the `info_google_fonts()` function will provide a table with a set of helpful font recommendations from the *Google Fonts* catalog. The new `default_fonts()` functions provides a helpful vector of system fallback fonts which works well when defining a vector of fonts. (#591)",1,210,FALSE,NA
gt,6b19df6e8915636258e80706991012a6,The new `opt_css()` function makes allows for the addition of custom CSS to a **gt** table. This CSS will be added after the compiled CSS that **gt** generates automatically when the `gt_tbl` object is transformed to an HTML output table. You can supply `css` as a vector of lines or as a single string. The `css()` function has been re-exported from **htmltools** to make it easier to build CSS style declarations. (Also #591),1,211,FALSE,NA
gt,28c95539b946cfe8d861c82dc6cd7ac1,"Setting the widths of table columns is now easier and more dependable with `cols_width()`. Widths can be expressed in units of pixels (easily set by use of the `px()` helper function), as percentages (where the `pct()` helper function is useful), or a mixture of the two. The function takes into consideration whether an overall table width has been provided with `tab_options(table.width = ...)`. Providing pixel widths for all columns serves to override any table width defined (yielding columns with the exact widths specified). (#561)",1,212,FALSE,NA
gt,a522048178e4b636b61d675170265fd5,"There are new options for numeric formatting: (1) using significant figures (with `n_sigfig` in `fmt_number`), and (2) the ability to retain/drop trailing decimal marks (with `drop_trailing_dec_mark` in `fmt_number()`, `fmt_percent()`, and `fmt_currency()`). Thank you @​drolejoel for the suggestion in #535! (#546).",1,213,FALSE,NA
gt,aa16f5f224751004810c3366db7a9990,The new `scale_values` argument for `fmt_percent()` makes it easy to use values that are already scaled (and just require the percent mark). Thank you @​djohn215 for the suggestion in #559. (#565),1,214,FALSE,NA
gt,e07d6cf2482b6c5c3f6c7e06060fc7f4,"Font weights expressed as numeric values (e.g., `400`, `600`, etc.) in `cell_text()`'s `weight` argument now works properly. (#591)",1,215,FALSE,NA
gt,62b5fd4a9dbad2ba6d65ccc09ff6781b,The `data_color()` function has been rewritten to improve performance (#543). (#576),1,216,FALSE,NA
gt,02e81c96240c9303d2444ff052301318,"Restore the ability to have row striping in stub cells (with `tab_option()`'s `row.striping.include_stub = TRUE`). Thanks @​gergness for creating PR #537, which prompted this final fix. (#564)",1,217,FALSE,NA
gt,56b5ada34ea32d75953fba38ad90607a,`summary_rows()` and `grand_summary_rows()` no longer incorrectly calculate summary values in cases where rows aren't already sorted by group (#556).,1,218,FALSE,NA
gt,76967801a1c95bead2a8461e920efd2c,Ensure compatibility with **tibble** 3.0.0. (#557),1,219,FALSE,NA
gt,732994b1bc18ebe9f0c80a8381f656ce,Adapt tests to changes in dependent packages. (#575),1,220,FALSE,NA
gt,0c8b7b5497dbf12dafe0ed7fa26a736d,New package with 80 exported functions for building display tables,1,221,FALSE,NA
htmltools,fcb3796c93cbf86d20da02697369be83,"`save_html()` is now an S3 generic, allowing for more customization over how certain classes are saved to an HTML file. (#411)",1,1,FALSE,NA
htmltools,ec0e1b753d42a029b289d52e9a32e4f1,Fill items no longer set `overflow: auto` or `width: 100%` by default. (#401),1,2,FALSE,NA
htmltools,9ce618f09cbe62f8cc7262a97fea1086,"`css()` now fully supports setting custom CSS properties (or CSS variables) via inline styles. When the name of a value passed to `css()` starts with `--`, it will be treated as a custom CSS property and absolutely no changes will be made to the variable. For example, `css(""--font_size"" = ""3em"")` returns `--font_size:3em;` while `css(font_size = ""3em"")` will return `font-size:3em`. (#402)",1,3,FALSE,NA
htmltools,e3cf397fa3d33b53181e81666887d29b,`{htmltools}` now requires `{rlang}` version 1.0.0 or higher. (#403),1,4,FALSE,NA
htmltools,85db25dab861f953743c28ef424f8949,`tagQuery()` no longer throws an error when attempting to traverse a NULL value with r-devel. (#407),1,5,FALSE,NA
htmltools,e314716259eb3cb3dda3488b803e7a16,"Closed #386: Fillable containers no longer set `overflow: auto` by default. Instead, they set `min-width` and `min-height` to `0` to ensure that fill items a constrained in the fillable container without clipping their direct children. (#387)",1,6,FALSE,NA
htmltools,21eec27a5a2a5aed8a370004df26412f,Closed #370: Non-fill items in fillable containers no longer grow or shrink and instead respect their intrinsic size. Use `height` to control the height of non-fill items in fillable containers and `min-height` and `max-height` on fill items to limit how much they are allowed to grow or shrink within a fillable container. (#391),1,7,FALSE,NA
htmltools,7749dbe2fe0cb670131c8c89f798f9d7,"Closed #375: calling `htmlDependency()` or a function that returns an `htmlDependency()` object (e.g., `fontawesome::fa_html_dependency()`) in an R chunk in an R Markdown or knitr-powered Quarto document will now include the dependency rather than printing the object structure. If you want to print the object structure, you can use `print()` or `str()`. (#376)",1,8,FALSE,NA
htmltools,8a3ba33548da508f7842bf80cfc0a243,"Closed #124: `includeHTML()` will now issue a warning if it detects that the file passed to it contains a complete HTML document. `includeHTML()` is designed to include HTML fragments where the contents of the file can be written directly into the current app or document, but subtle errors can occur when the file contains a complete HTML document. In most cases, you should instead use `tags$iframe()` to embed external documents. (#382)",1,9,FALSE,NA
htmltools,e037a753e1c0673927026a9d37d58187,"Closed #355: `tagQuery()` was failing to select elements with tag names that contained hyphens. (@​slodge, #302)",1,10,FALSE,NA
htmltools,1efd588c3ccf7568f1c6d04b2a7f1ab9,Closed #366: `tagQuery()`'s `find()` method no longer errors out when tags contain language objects. (#366),1,11,FALSE,NA
htmltools,49275b31a92657fd7bc34293c90d7888,"Added a new `bindFillRole()` function for modifying `tag()` object(s) into tags that are allowed to grow and shrink when their parent is opinionated about their height. See `help(bindFillRole, ""htmltools"")` for documentation and examples. Note the primary motivation for adding these functions is to power `{bslib}`'s new `card()` API (in particular, responsive sizing) as well as the new `fill` arguments in `shiny::plotOutput()`, `shiny::imageOutput()`, `shiny::uiOutput()`, `htmlwidgets::sizingPolicy()`, and `htmlwidgets::shinyWidgetOutput()`. (#343)",1,12,FALSE,NA
htmltools,06671460110fd7ed58fc4b5b66c00b24,"Closed #331: `copyDependencyToDir()` creates `outputDir` recursively, which happens in Quarto or when `lib_dir` points to a nested directory. (@​gadenbuie, #332)",1,13,FALSE,NA
htmltools,4ce239b7c08a8793c7022aaaa8b3c8dc,"Closed #346: `tagQuery()`'s `$remove()`, `$after()`, `$before()`, `$replaceWith()` had a bug that prevented expected behavior when sibling children values where not tag elements. (#348)",1,14,FALSE,NA
htmltools,ae3420abc08a1490ab5ccdb6a9b5c352,"Closed #305: `htmlPreserve()` no longer uses *inline* code blocks for Pandoc's raw attribute feature when used inside a *non*-inline knitr/rmarkdown code chunk, and as a result, in this case, an additional `<p>` tag is no longer wrapped around the HTML content. (#306)",1,15,FALSE,NA
htmltools,7d8c7b49c0e7a87673d430cebb8803ab,Closed #301: `tagQuery()` was failing to copy all `tagList()` html dependencies within nest child tag lists. `tagQuery()` will now relocate html dependencies as child objects. (#302),1,16,FALSE,NA
htmltools,c1042f5b2e65899dab00ce22721c2c01,"Closed #290: htmltools previously did not specify which version of fastmap to use, and would fail to install with an old version of fastmap. (#291)",1,17,FALSE,NA
htmltools,56186417f981c244cd885bc3ca4ea1ef,"`copyDependencyToDir()` no longer creates empty directories for dependencies that do not have any files. (@​gadenbuie, #276)",1,18,FALSE,NA
htmltools,b16c13858dc78606245cb54bc5af9349,"Closed #320: `copyDependencyToDir()` now works with dependencies with specified attributes. (@​dmurdoch, #321)",1,19,FALSE,NA
htmltools,b6721d34c6895022653c0fe620f766f1,"Closed #205: When calling `tagGetAttribute(x)` on an object with a non-atomic attribute, a list of untouched values will be returned. It is still recommended to only store character values inside attributes. (#212)",1,20,FALSE,NA
htmltools,4a8a0831cd18a65a57e95e1e25c41d91,`{htmltools}` now has its own `{pkgdown}` site hosted at https://rstudio.github.io/htmltools/.,1,21,FALSE,NA
htmltools,8c834a2215c9cab5e3d56b01fb7eb317,"The new `tagQuery()` function provides a jQuery inspired interface to query and/or modify HTML `tag()` (e.g., `div()`) or `tagList()` objects. To learn more, see the {pkgdown} article. (#208)",1,22,FALSE,NA
htmltools,c4454083e6513dcba08993b8ab9e10d5,Added `tagAddRenderHook()` for delaying modification of a tag object until it is rendered. A list of render-time hooks may also be added via the new `.renderHook` argument added to all `tag()` functions. (#215),1,23,FALSE,NA
htmltools,925764704aa48aac85d6fe1f74a064d3,Closed #243: Added `withTags(.noWS)` to change the default whitespace behavior for all tags within the call to `withTags()`. (#245),1,24,FALSE,NA
htmltools,38b50c898ec2f99b0e1ec34ee8d7481e,Closed #251: Added `.cssSelector` parameters to tag modifying functions such as `tagAppendChildren()` or `tagAppendChildren()`. The `.cssSelector` allows you to target particular (inner) tags of interest. See `tagAppendChildren()` for examples. (#224),1,25,FALSE,NA
htmltools,dc07018f2273150b096f87b482fae9ed,Closed #225: Added `tagInsertChildren()` to be able to insert child tag objects at a particular location. (#224),1,26,FALSE,NA
htmltools,8b83dfba786fe9caf737fb4d0295e7b2,"When retrieving a tag attribute using `tagGetAttribute(tag, attr)`, `NA` values will be removed before combining remaining attribute values. If all attribute values are `NA`, then a single `NA` value will be returned. (#212)",1,27,FALSE,NA
htmltools,de96934f4228d4bef9d911be57128252,"Closed #197: Fixed rendering of boolean attributes in `<script>` tags rendered via `renderDependencies()` (#197, thanks @​atusy).",1,28,FALSE,NA
htmltools,50e595c034eda3da168173b7e5d8078e,"Closed #222: Unnamed attributes are no longer allowed to be appended via `tagAppendAttribs()`. When trying to print unnamed tag attribs, a better error message is provided. (#229)",1,29,FALSE,NA
htmltools,71d9404cc83a060dc1a4da217cb81fdc,Added shiny as a suggested package.,1,30,FALSE,NA
htmltools,d2967d8841896d59322b05593891a9df,"Added a new `tagFunction()` for generating `tags` and/or `htmlDependency()`s conditional on the rendering context. For an example, see `?tagFunction`. (#180)",1,31,FALSE,NA
htmltools,b2e843e0ee394ff20f04f9c5eec1d05e,"Closed #104: `save_html()`'s `file` argument now properly handles relative paths. (@​haozhu233, #105, #192)",1,32,FALSE,NA
htmltools,6f8e07aaa12aa4b29bdfde8224497e6a,"`save_html()` now has a `lang` parameter that can be used to set the lang attribute of `<html>`. (@​ColinFay, #185)",1,33,FALSE,NA
htmltools,c645623309ddc85c81a6df173380f1db,"Closed #101: `htmlDependency` & `renderDependencies` now allow the `script` argument to be given as a named list containing the elements: `src`, `integrity`, `crossorigin`. (@​matthewstrasiotto, #188)",1,34,FALSE,NA
htmltools,f915244b65b3a8ff00ade5687b42a65a,Closed #189: `validateCssUnit()` now accepts `fit-content`. (#190),1,35,FALSE,NA
htmltools,cbcf02fc61c6403adc0c04e8d00a8b4d,`htmlPreserve()` can now optionally use the Pandoc `raw_attribute` extension to enclose HTML.,1,36,FALSE,NA
htmltools,6a7e402c80e99926b41fa297bee4d2fa,Closed #161: `parseCssColors(x)` now requires `x` to be a character vector (it no longer accepts a `list()` of strings) and an error is no longer thrown when `mustWork = FALSE` and `x` contains `NA` value(s). (#194),1,37,FALSE,NA
htmltools,63799d8afbc952652ff95563a0260608,`print(as.tags(x))` no longer results in error when `x` is a generic `list()` of tag-like objects. (#181),1,38,FALSE,NA
htmltools,99c3b0a6da8f608f85a39f7c9c7a4c8e,`tags` is now generated by a script which collects all HTML and SVG element tags documented in MDN Web Docs. This feature only appends to the existing set of `tags` (#159),1,39,FALSE,NA
htmltools,f82ea5b6b9d5568a669e700d60b228fa,Removed the Rcpp dependency and the compiled code now uses C rather than C++ (#158),1,40,FALSE,NA
htmltools,425f12de185d623ed4eeffb9be33e192,"BREAKING CHANGE: Fixed #57, #153: `htmlTemplate` output no longer inserts extra whitespace around {{...}} replacement values. (#154)",1,41,FALSE,NA
htmltools,acac3eae2e5c395ed09ff02b57bd8886,"`HTML()` now takes `.noWS` argument, which can be used to suppress surrounding whitespace (similar to the new argument for tags in htmltools 0.4.0). (#154)",1,42,FALSE,NA
htmltools,ac9e1de6af90bece50d0534f44b6dbe7,"`css()` now returns `NULL` instead of `""""` when no non-empty properties are specified. (#145)",1,43,FALSE,NA
htmltools,f08d4399ad48f983efa36cb7d0efeed0,`save_html(tags$body(...))` no longer results in double ```{=html} <body> tags being written to the .html file. (Note that `save_html(tags$html(...))` is not supported at this time.) (#145),1,44,FALSE,NA
htmltools,f22162ac056e272e863f3d5314b94179,"Trailing commas now permitted in `...` arguments to `css()`, `tagList()`, and the var-arg mutation functions: `tagAppendAttributes()`, `tagSetChildren()`, and `tagAppendChildren()`. (#145)",1,45,FALSE,NA
htmltools,f5e35e7714597a5795c3bbe717a2a1c4,"Added `capturePlot` and `plotTag` functions, for easily creating image files and HTML `<img>`{=html} tags (respectively) from plot expressions. (#150)",1,46,FALSE,NA
htmltools,da39eec6fcf798fc12a8499f43f380a6,"Added `parseCssColors` function, for normalizing the various CSS color formats into #RRGGBB(AA) strings. (#155)",1,47,FALSE,NA
htmltools,0fa153164d61eb33f4d13c472d63ef4e,Fixed #156: Now `extractPreserveChunks()` handles strings contain Emoji Unicode strings correctly on Windows. (#157),1,48,FALSE,NA
htmltools,48ef3b09cba6806a12b3584f9c0ddf0a,"The `.noWS` parameter for suppressing whitespace can now take an `""inside""` value (equivalent to `c(""after-start"", ""before-end"")`). (#163)",1,49,FALSE,NA
htmltools,ff8b9ed9e03efb9364528466df0f57cf,Fixed #128: Added support for trailing commas in tagLists and the predefined tags. (#135),1,50,FALSE,NA
htmltools,d9b33fdb37fc736838f3648979631464,Added some HTML tag functions to `tags` that were missing. (#111),1,51,FALSE,NA
htmltools,fa498d50eb7ee135eb05eb5b58c58884,Updated RcppExports for new version of Rcpp. (#93),1,52,FALSE,NA
htmltools,6fb9837a3fe4572540af3f9185f5f39d,`as.character.shiny.tags()` will handle non-ASCII attributes correctly if they are not encoded in native encoding.,1,53,FALSE,NA
htmltools,ef524a1aeac2bce66b440bc3ed151300,"Fixed #99: `NA` attributes were sometimes rendered as `""NA""` in the HTML, instead of being blank. (#100)",1,54,FALSE,NA
htmltools,6a468c0a87fd3fe2c294ce8a0b6bb4e0,The error message for trailing commas in tag functions now provides context and useful information. (#109),1,55,FALSE,NA
htmltools,0a5021390eddd3f2b0fa10d3c27ccf95,"Stopped using inline styles to set background color for `save_html`, as doing so makes it difficult to override using other CSS rules. (#123)",1,56,FALSE,NA
htmltools,9e2a994ff48282d7caa6e69965efe409,Added a `.noWS` argument to `tag()` and `tags` which can be used to suppress the automatically generated whitespace around a particular tag. (#131),1,57,FALSE,NA
htmltools,8ffcff11c4909d2d8b8ffbdd37392836,Added a shim for `system.file()` so that htmltools works with `htmlDependency` objects created by a package that was loaded with `devtools::load_all()`. (#129),1,58,FALSE,NA
htmltools,f8434884e14fb603401dbdf93a06da87,"`validateCssUnit()` now accepts `ch`, `rem`, and `calc()`. (#134)",1,59,FALSE,NA
htmltools,c7beb730a52112fa9e4083365fb4829f,Fixed #125: `print.html` removes html dependencies. (#126),1,60,FALSE,NA
htmltools,3c352a3de3dbab832fecb2e4d827e8df,Stopped extra carriage returns from being inserted by `save_html` on Windows. (#137),1,61,FALSE,NA
htmltools,dd607d44e2365c925e040562180649ab,"`validateCssUnit()` now accepts viewport units (vw, vh, vmin, vmax). (#56)",1,62,FALSE,NA
htmltools,a2d166e8d246962dc09524e90e946aed,`restorePreserveChunks()` marks the output with the correct encoding now (UTF-8).,1,63,FALSE,NA
htmltools,084b3414b26b952e4932c2975e685083,"Length-0 attributes are now dropped, like NULLs. (#65)",1,64,FALSE,NA
htmltools,ec3ed5101ece544a8649b2ad09fc160b,"Fixed #69: On Windows, `renderDocument()` did not mark output as UTF-8 if the head was UTF-8 but body was ASCII. (#71)",1,65,FALSE,NA
htmltools,12a1306aeccb1010a0beb082d9380189,"`as.character` now returns a character vector with no other attributes. Previously it returned a character vector of class 'html'. (#31, #41)",1,66,FALSE,NA
htmltools,e466d5397a1f90d0dee0f38e1bfb58eb,"`htmlTemplate` now can use a string as a template instead of requiring a file. (#41, #43)",1,67,FALSE,NA
htmltools,ceb2ec540dd7c3aafad3b4947b1d767c,"HTML dependencies can now be added inline, instead of needing to use `attachDependencies()`. (#40, #42)",1,68,FALSE,NA
htmltools,6b1fed27ac760a754d3c480a1f37f348,"`htmlDependency()` gained a new argument `all_files` to indicate whether all files under the src directory should be copied when rendering dependencies, or only those specified in the dependency objects. (#48)",1,69,FALSE,NA
htmltools,879ba871c2a3b63f704732d5d8ef0b61,"`copyDependencyToDir()` will always completely overwrite the target directory when copying HTML dependency files to make sure all dependency files are definitely updated in the target directory when the original dependency directory has been updated. In the past, the dependency files were not updated if they already existed. (#36)",1,70,FALSE,NA
htmltools,98c0f442f2136704a8dde1e17256b67c,The version number in the directory name of an HTML dependency can be suppressed by setting options(htmltools.dir.version = FALSE) when the dependency is copied via `copyDependencyToDir()`. (#37),1,71,FALSE,NA
htmltools,41c0dd625c2c502c746737ece2f5a4d4,"Performance improvement rendering tags, by switching from `readLines` to `readChar`.",1,72,FALSE,NA
htmltools,2ac2dd1454c16c95b6ff579d7a68195f,Add `css` function for conveniently forming CSS declaration strings.,1,73,FALSE,NA
htmltools,e4c9812e0b7e1464b60bf363591acc35,"Add template support, with the `htmlTemplate()`, `renderDocument()`, and `suppressDependencies()` functions.",1,74,FALSE,NA
htmltools,ce74ef38eb12e02e92d3ffc5400c5475,Add check that `htmlDependency()` isn't called with an absolute path when a binary package is built. (#22),1,75,FALSE,NA
htmltools,60f3b257fa842565827bbb91da4fb12d,"Allow HTML content to include UTF-8, Latin1, and system encoded content. All will be converted to UTF-8 using enc2utf8() at render time. (#21)",1,76,FALSE,NA
htmltools,16d7881d50818eeb6cc0ceda9917f1c7,Add `tagGetAttribute()` and `tagHasAttribute()` functions.,1,77,FALSE,NA
htmltools,1df572af22e86b3f03a25ffae71e4520,"Add ""append"" parameter to attachDependencies, to allow adding dependencies, instead of replacing them.",1,78,FALSE,NA
htmltools,68f1c34715d2479b2bec45345f83d17b,"Add ""attachment"" parameter to htmlDependency, which can be used to allow any file in the dependency directory to be available via URL at runtime.",1,79,FALSE,NA
htmltools,f8a0b30aae50b9d269b868247f5a4c94,Explicit library(htmltools) is no longer required for tags to be rendered in knitr/rmarkdown documents.,1,80,FALSE,NA
htmltools,39482cd153b2f913e4483b2517e00b32,"Added ""viewer"" parameter to html_print.",1,81,FALSE,NA
keras,2c279c489b52d474b23da4129d961ea7,New functions:,1,1,FALSE,NA
keras,2c279c489b52d474b23da4129d961ea7,• `config_dtype_policy()`,2,2,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `config_set_dtype_policy()`,2,3,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_batch_normalization()`,2,4,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_cholesky()`,2,5,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_det()`,2,6,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_divide_no_nan()`,2,7,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_eig()`,2,8,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_erfinv()`,2,9,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_inv()`,2,10,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_lu_factor()`,2,11,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_norm()`,2,12,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_normalize()`,2,13,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_solve_triangular()`,2,14,FALSE,New functions:
keras,2c279c489b52d474b23da4129d961ea7,• `op_svd()`,2,15,FALSE,New functions:
keras,516ead6b652fce7e2b152daa81ba1e46,Doc improvements.,1,16,FALSE,NA
keras,95005798c29ce1f335b7fc5154fae2a3,"`to_categorical()`, `op_one_hot()`, and `fit()` can now accept R factors, offset them to be 0-based (reported in `#1055`).",1,17,FALSE,NA
keras,329cdba062cb6f7da59d767ada8b7a09,The package has been rebuilt for Keras 3.0. Refer to `<blogpost>`{=html} for an overview and https://keras.posit.co for the current up-to-date documentation.,1,18,FALSE,NA
keras,76dcb195d5e5a93788a470e2359002ae,Default TF version installed by `install_keras()` is now 2.13.,1,19,FALSE,NA
keras,7256cfb21b0e4bbfa23a01b8a7a972ae,Updated layers:,1,20,FALSE,NA
keras,7256cfb21b0e4bbfa23a01b8a7a972ae,"• `layer_batch_normalization()` updated signature, with changes to options for distributed training.",2,21,FALSE,Updated layers:
keras,7256cfb21b0e4bbfa23a01b8a7a972ae,• `layer_embedding()` gains a `sparse` argument.,2,22,FALSE,Updated layers:
keras,23fec9468365e7c664ba5b948864e12f,"Fixed deadlock when an R generator was passed to `fit()`, `predict()`, and other endpoints.",1,23,FALSE,NA
keras,0498c94ca7a7b46359206081e35a7ec4,"When `fit(verbose = ""auto"")` is evaluated in the context of a knitr document (e.g., quarto or rmarkdown document being rendered), verbose will now default to `2`, showing one line per epoch.",1,24,FALSE,NA
keras,8cfead39a7333e5a601f81130ca249f6,Update S3 method formals per new CRAN requirement (`r_to_py.keras_layer_wrapper()`),1,25,FALSE,NA
keras,854dc198428dcb6628610c61a2280765,Fixed an issue where `get_file()` would place incorrectly save files in the current working directory. (#1365),1,26,FALSE,NA
keras,5d9088901c38083701b6adbc70888233,Default TensorFlow version installed by `install_keras()` is now 2.11.,1,27,FALSE,NA
keras,d59630b6dcec87a5f667881f83db2ea1,"All optimizers have been updated for keras/tensorflow version 2.11. Arguments to all the optimizers have changed. To access the previous optimizer implementations, use the constructors available at `keras$optimizers$legacy`. For example, use `keras$optimizers$legacy$Adam()` for the previous implementation of `optimizer_adam()`.",1,28,FALSE,NA
keras,1717b85275b685296321e255a263a057,New optimizer `optimizer_frtl()`.,1,29,FALSE,NA
keras,5f00ceaa8ffad9fbe0840abe7392471d,updates to layers:,1,30,FALSE,NA
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_attention()` gains `score_mode` and `dropout` arguments.,2,31,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_discretization()` gains `output_mode` and `sparse` arguments.,2,32,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_gaussian_dropout()` and `layer_gaussian_noise()` gain a `seed` argument.,2,33,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_hashing()` gains `output_mode` and `sparse` arguments.,2,34,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_integer_lookup()` gains `vocabulary_dtype` and `idf_weights` arguments.,2,35,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_normalization()` gains an `invert` argument.,2,36,FALSE,updates to layers:
keras,5f00ceaa8ffad9fbe0840abe7392471d,• `layer_string_lookup()` gains an `idf_weights` argument.,2,37,FALSE,updates to layers:
keras,be3fba5fb70b17b7e743a6a9340eb755,Fixed issue where `input_shape` supplied to custom layers defined with `new_layer_class()` would result in an error (#1338),1,38,FALSE,NA
keras,91b3fab5cc80745632455e7f264cb81a,"New `callback_backup_and_restore()`, for resuming an interrupted `fit()` call.",1,39,FALSE,NA
keras,7b7a205774abcc284361e4b3ff5cf5b2,"The merging family of layers (`layer_add`, `layer_concatenate`, etc.) gain the ability to accept layers in `...`, allowing for easier composition of residual blocks with the pipe `%>%`. e.g. something like this now works:",1,40,FALSE,NA
keras,7b7a205774abcc284361e4b3ff5cf5b2,"```
block_1_output <- ...
block_2_output <- block_1_output %>%
  layer_conv_2d(64, 3, activation = ""relu"", padding = ""same"") %>%
  layer_add(block_1_output)
```",1,41,TRUE,NA
keras,b9f783afbceabc4425fe6058a48fe40e,`model$get_config()` method now returns an R object that can be safely serialized to rds.,1,42,FALSE,NA
keras,44f5fde72c48754bf4960a8361467187,`keras_array()` now reflects unconverted Python objects. This enables passing objects like `pandas.Series()` to `fit()` and `evaluate()` methods. (#1341),1,43,FALSE,NA
keras,61719b6ec7694005d2795c7bd75dc397,New functions for constructing custom keras subclasses:,1,44,FALSE,NA
keras,61719b6ec7694005d2795c7bd75dc397,• `new_model_class()`,2,45,FALSE,New functions for constructing custom keras subclasses:
keras,61719b6ec7694005d2795c7bd75dc397,• `new_layer_class()`,2,46,FALSE,New functions for constructing custom keras subclasses:
keras,61719b6ec7694005d2795c7bd75dc397,• `new_callback_class()`,2,47,FALSE,New functions for constructing custom keras subclasses:
keras,61719b6ec7694005d2795c7bd75dc397,• `new_metric_class()`,2,48,FALSE,New functions for constructing custom keras subclasses:
keras,61719b6ec7694005d2795c7bd75dc397,• `new_loss_class()`,2,49,FALSE,New functions for constructing custom keras subclasses:
keras,61719b6ec7694005d2795c7bd75dc397,• `new_learning_rate_schedule_class()`.,2,50,FALSE,New functions for constructing custom keras subclasses:
keras,5d01638e8d8166b5e4bdb004211b6808,"Also provided is `mark_active()`, a decorator for indicating a class method should be an active binding (i.e., decorated with Python's `@​property`). `mark_active()` can be used in the `new_*_class` family of class constructors as well as `%py_class%`.",1,50,FALSE,NA
keras,561485b1a1a0cfb66fe60ab37e7ae11b,"`r_to_py()` method for R6 classes and `%py_class%` gain support for `private` fields and methods. Any R objects stored in `private` will only be available to methods, and will not be converted to Python.",1,51,FALSE,NA
keras,1447c097429cba9e41c657ef5427c9db,New family of functions for controlling optimizer learning rates during training:,1,52,FALSE,NA
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_cosine_decay()`,2,53,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_cosine_decay_restarts()`,2,54,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_exponential_decay()`,2,55,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_inverse_time_decay()`,2,56,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_piecewise_constant_decay()`,2,57,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,1447c097429cba9e41c657ef5427c9db,• `learning_rate_schedule_polynomial_decay()`,2,58,FALSE,New family of functions for controlling optimizer learning rates during training:
keras,b5c98289c295802383f5d3fa5bf3bcf8,"Also, a function for constructing custom learning rate schedules: `new_learning_rate_schedule_class()`.",1,58,FALSE,NA
keras,fa73bb84e643b0e38a5cce79fba2512d,New L2 unit normilization layer: `layer_unit_normalization()`.,1,59,FALSE,NA
keras,4aeea3d35e003e8c21a10ec4aff050cf,"New `regularizer_orthogonal`, a regularizer that encourages orthogonality between the rows (or columns) or a weight matrix.",1,60,FALSE,NA
keras,d093774bc76ef68a8551e1e0533a809b,"New `zip_lists()` function for transposing lists, optionally matching by name.",1,61,FALSE,NA
keras,41a7607932d1d30badaff718d85038b7,New `plot()` S3 method for models.,1,62,FALSE,NA
keras,ca68b278da4ac65d055fcf6f6a0f1353,`pydot` is now included in the packages installed by `install_keras()`.,1,63,FALSE,NA
keras,5030396780e3ef623e7ae322e4bb95d4,The `png` package is now listed under Suggests.,1,64,FALSE,NA
keras,5871fdbb14c458c34b04217790f9dfbd,The `%<>%` assignment pipe from magrittr is exported.,1,65,FALSE,NA
keras,2ad186a5f311764cfb6f0c3c8c50071f,"`format()` method for keras models (and derivative methods `print()`, `summary()`, `str()`, and `py_str()`):",1,66,FALSE,NA
keras,2ad186a5f311764cfb6f0c3c8c50071f,• gain a new arg `compact`. If `TRUE` (the default) white-space only lines are stripped out of `model.summary()`.,2,67,FALSE,"`format()` method for keras models (and derivative methods `print()`, `summary()`, `str()`, and `py_str()`):"
keras,2ad186a5f311764cfb6f0c3c8c50071f,"• If any layers are marked non-trainable or frozen, the model summary now includes a ""Trainable"" column, indicating if a layer is frozen.",2,68,FALSE,"`format()` method for keras models (and derivative methods `print()`, `summary()`, `str()`, and `py_str()`):"
keras,ffdf579b83036bca0f5f1ec09d656f0c,`freeze_weights()` and `unfreeze_weights()`:,1,69,FALSE,NA
keras,ffdf579b83036bca0f5f1ec09d656f0c,"• gain a flexible `which` argument that can accept layer names (as character strings), an integer vector, a boolean vector, or a function that returns a boolean when called with a layer. (see updated examples in `?freeze_weights`",2,70,FALSE,`freeze_weights()` and `unfreeze_weights()`:
keras,ffdf579b83036bca0f5f1ec09d656f0c,"• `from` and `to` arguments gain the ability to accept negative integers, to specify layers counting from the end of the layers list.",2,71,FALSE,`freeze_weights()` and `unfreeze_weights()`:
keras,0e58afe05a3de5e62a44c123259f264f,"`get_weights()` gains a `trainable` argument that can accept `TRUE` or `FALSE`, allowing for returning only the unfrozen or frozen weights, respectively.",1,72,FALSE,NA
keras,bf130a09b63be326fa8951acb2b66ac0,`timeseries_dataset_from_array()`:,1,73,FALSE,NA
keras,bf130a09b63be326fa8951acb2b66ac0,"• R arrays are now cast to the floatx dtype (""float32"" by default)",2,74,FALSE,`timeseries_dataset_from_array()`:
keras,bf130a09b63be326fa8951acb2b66ac0,• `start_index` and `end_index` now are 1-based.,2,75,FALSE,`timeseries_dataset_from_array()`:
keras,b3a653e24778c7ccdc4ebca070f7cc5b,`image_dataset_from_directory()` gains a `crop_to_aspect_ratio` argument which can be used to prevent distorting images when resizing to a new aspect ratio.,1,76,FALSE,NA
keras,5a4dd413c07278ada45aee2b5987d4b3,"`Layer` is deprecated, superseded by `new_layer_class()`.",1,77,FALSE,NA
keras,bcbc2d4c23f4cb26a0f270a7b7a336ac,"`load_model_tf()` argument `custom_objects` gains the ability to accept an unnamed list (e.g, of objects returned by `new_layer_class()` or similar). Appropriate names for the supplied objects are automatically inferred.",1,78,FALSE,NA
keras,0f145f92c9c8322957850ccada83dbd3,Fixed an issue where negative values less than -1 supplied to `axis` arguments were selecting the wrong axis.,1,79,FALSE,NA
keras,6c83fd91e2e99b1521d27e7358b03f8a,`get_layer()` gains the ability to accept negative values for the `index` argument.,1,80,FALSE,NA
keras,94c25558250dabf70d8a8081b4a947b8,Fixed warning from `create_layer_wrapper()` when the custom layer didn't have an overridden `initialize` or `__init__` method.,1,81,FALSE,NA
keras,c6d3ab6dc953e08c050600348aff0b43,Backend functions:,1,82,FALSE,NA
keras,c6d3ab6dc953e08c050600348aff0b43,"• k_clip() `min_value` and `max_value` gain default values of `NULL`, can be omitted. `NULL` is taken as -Inf or Inf, respectively.",2,83,FALSE,Backend functions:
keras,c6d3ab6dc953e08c050600348aff0b43,"• k_squeeze(): `axis` argument can be omitted, in which case all axes of size 1 are dropped.",2,84,FALSE,Backend functions:
keras,c6d3ab6dc953e08c050600348aff0b43,• k_tile(): `n` argument can now be supplied as a tensor.,2,85,FALSE,Backend functions:
keras,c6d3ab6dc953e08c050600348aff0b43,• New function `k_unstack()`.,2,86,FALSE,Backend functions:
keras,9df40cfe91f14de21cde9c0648f359a6,"KerasTensor objects (e.g, returned by `layer_input()`) now inherit S3 methods for `""tensorflow.tensor""`.",1,87,FALSE,NA
keras,20143d0cccde0304047f5a80dfca33a5,"`plot.keras_training_history()` no longer issues message `` `geom_smooth()` using formula 'y ~ x' `` when `method = ""ggplot2""`.",1,88,FALSE,NA
keras,eb421b7f76304d28fd61e486120c379f,"`print` and related methods for models (`format`, `summary`) now accept a `width` argument.",1,89,FALSE,NA
keras,02a40f80c3ba4e0e3942bc51f605a06e,"`evaluate()`, `fit()`, and `predict()` methods for keras Models now default to `verbose = ""auto""`, with verbosity adjusted appropriately based on calls to `keras$utils$disable_interactive_logging()`, and contexts like `ParameterServerStrategy`.",1,90,FALSE,NA
keras,5263146cf02601696035935c83637bdd,"`install_keras()` now accepts `version = ""release-cpu""` as a valid specification.",1,91,FALSE,NA
keras,4ee765cd4e489cf5d496ba5d7a3160f4,"Breaking change: The semantics of passing a named list to `keras_model()` have changed. Previously, `keras_model()` would `unname()` supplied `inputs` and `outputs`. Then, if a named list was passed to subsequent `fit()`/`evaluate()`/`call()`/`predict()` invocations, matching of `x` and `y` was done to the model's input and outpt `tensor$name`'s. Now, matching is done to `names()` of `inputs` and/or `outputs` supplied to `keras_model()`. Call `unname()` on `inputs` and `outputs` to restore the old behavior, e.g.: `keras_model(unname(inputs), unname(outputs))` `keras_model()` can now accept a named list for multi-input and/or multi-output models. The named list is converted to a `dict` in python. (Requires Tensorflow \>= 2.4, Python \>= 3.7). If `inputs` is a named list:",1,92,FALSE,NA
keras,4ee765cd4e489cf5d496ba5d7a3160f4,"• `call()`, `fit()`, `evaluate()`, and `predict()` methods can also accept a named list for `x`, with names matching to the names of `inputs` when the model was constructed. Positional matching of `x` is still also supported (requires python 3.7+).",2,93,FALSE,"Breaking change: The semantics of passing a named list to `keras_model()` have changed. Previously, `keras_model()` would `unname()` supplied `inputs` and `outputs`. Then, if a named list was passed to subsequent `fit()`/`evaluate()`/`call()`/`predict()` invocations, matching of `x` and `y` was done to the model's input and outpt `tensor$name`'s. Now, matching is done to `names()` of `inputs` and/or `outputs` supplied to `keras_model()`. Call `unname()` on `inputs` and `outputs` to restore the old behavior, e.g.: `keras_model(unname(inputs), unname(outputs))` `keras_model()` can now accept a named list for multi-input and/or multi-output models. The named list is converted to a `dict` in python. (Requires Tensorflow \>= 2.4, Python \>= 3.7). If `inputs` is a named list:"
keras,e00186c17e4011eef6301e03507d6a97,If `outputs` is a named list:,1,93,FALSE,NA
keras,e00186c17e4011eef6301e03507d6a97,"• `fit()` and `evaluate()` methods can *only* accept a named list for `y`, with names matching to the names of `outputs` when the model was constructed.",2,94,FALSE,If `outputs` is a named list:
keras,562fd72da662bde5370da9d0564c8f87,New layer `layer_depthwise_conv_1d()`.,1,95,FALSE,NA
keras,0bd78ff6b3d80540985348e1e920db47,Models gain `format()` and `print()` S3 methods for compatibility with the latest reticulate. Both are powered by `model$summary()`.,1,96,FALSE,NA
keras,3566a7a11a3811a4c54e0332c699f607,"`summary()` method for Models gains arguments `expand_nested` and `show_trainable`, both default to `FALSE`.",1,97,FALSE,NA
keras,3d770c629bcba01afe5bcb5b13f2ae21,`keras_model_custom()` is soft deprecated. Please define custom models by subclassing `keras$Model` directly using `%py_class%` or `R6::R6Class()`.,1,98,FALSE,NA
keras,5e20cf2a460390cc09f76537581a456d,Fixed warning issued by `k_random_binomial()`.,1,99,FALSE,NA
keras,9de1ada5f6d46e8aeecf06f9cfa5f594,Fixed error raised when `k_random_binomial()` was passed a non-floating dtype.,1,100,FALSE,NA
keras,16c8943c8de2dc771ab6c0f11036d0f8,Added `k_random_bernouli()` as an alias for `k_random_binomial()`.,1,101,FALSE,NA
keras,eb15dabd8e26692508c340b5c744bff5,`image_load()` gains a `color_mode` argument.,1,102,FALSE,NA
keras,ed2d9da6e5b09960fb9aa63f3cb0ceec,Fixed issue where `create_layer_wrapper()` would not include arguments with a `NULL` default value in the returned wrapper.,1,103,FALSE,NA
keras,dbcbc45c4d0fa17c5059607923021f53,Fixed issue in `r_to_py.R6ClassGenerator` (and `%py_class%`) where single-expression `initialize` functions defined without `{` would error.,1,104,FALSE,NA
keras,0b9f98684f75e2c908e6ad4005c8dd83,Deprecated functions are no longer included in the package documentation index.,1,105,FALSE,NA
keras,7a73d5c653ce77b63f9c9cffe24103a3,Default Tensorflow + Keras version is now 2.7.,1,106,FALSE,NA
keras,200a844d0c47e682229c3e0245b30a2c,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:",1,107,FALSE,NA
keras,200a844d0c47e682229c3e0245b30a2c,"• `layer_rnn()`, which can compose with builtin cells:",2,108,FALSE,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:"
keras,200a844d0c47e682229c3e0245b30a2c,• `rnn_cell_gru()`,2,109,FALSE,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:"
keras,200a844d0c47e682229c3e0245b30a2c,• `rnn_cell_lstm()`,2,110,FALSE,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:"
keras,200a844d0c47e682229c3e0245b30a2c,• `rnn_cell_simple()`,2,111,FALSE,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:"
keras,200a844d0c47e682229c3e0245b30a2c,"• `rnn_cells_stack()` To learn more, including how to make a custom cell layer, see the new vignette: ""Working with RNNs"".",2,112,FALSE,"New API for constructing RNN (Recurrent Neural Network) layers. This is a flexible interface that complements the existing RNN layers. It is primarily intended for advanced / research applications, e.g, prototyping novel architectures. It allows you to compose a RNN with a custom ""cell"", a Keras layer that processes one step of a sequence. New symbols:"
keras,58252e1783880ee75099e28e4813d175,New dataset functions:,1,113,FALSE,NA
keras,58252e1783880ee75099e28e4813d175,• `text_dataset_from_directory()`,2,114,FALSE,New dataset functions:
keras,58252e1783880ee75099e28e4813d175,• `timeseries_dataset_from_array()`,2,115,FALSE,New dataset functions:
keras,5426b32e3980a2631f7a6d08bbbd0cbb,New layers:,1,116,FALSE,NA
keras,5426b32e3980a2631f7a6d08bbbd0cbb,• `layer_additive_attention()`,2,117,FALSE,New layers:
keras,5426b32e3980a2631f7a6d08bbbd0cbb,• `layer_conv_lstm_1d()`,2,118,FALSE,New layers:
keras,5426b32e3980a2631f7a6d08bbbd0cbb,• `layer_conv_lstm_3d()`,2,119,FALSE,New layers:
keras,a061b3d0a29915c0a61c5d89c3277147,`layer_cudnn_gru()` and `layer_cudnn_lstm()` are deprecated. `layer_gru()` and `layer_lstm()` will automatically use CuDNN if it is available.,1,120,FALSE,NA
keras,de3e024033bd3bc46b2557d94913bb93,"`layer_lstm()` and `layer_gru()`: default value for `recurrent_activation` changed from `""hard_sigmoid""` to `""sigmoid""`.",1,121,FALSE,NA
keras,92066611a1ac2c13feb1b1e5435186d4,`layer_gru()`: default value `reset_after` changed from `FALSE` to `TRUE`,1,122,FALSE,NA
keras,f5efea3944eff99974a35a01ce0216f1,"New vignette: ""Transfer learning and fine-tuning"".",1,123,FALSE,NA
keras,619984dbaa3526c709c660c98146b610,New applications:,1,124,FALSE,NA
keras,619984dbaa3526c709c660c98146b610,"• MobileNet V3: `application_mobilenet_v3_large()`, `application_mobilenet_v3_small()`",2,125,FALSE,New applications:
keras,619984dbaa3526c709c660c98146b610,"• ResNet: `application_resnet101()`, `application_resnet152()`, `resnet_preprocess_input()`",2,126,FALSE,New applications:
keras,619984dbaa3526c709c660c98146b610,"• ResNet V2:`application_resnet50_v2()`, `application_resnet101_v2()`, `application_resnet152_v2()` and `resnet_v2_preprocess_input()`",2,127,FALSE,New applications:
keras,619984dbaa3526c709c660c98146b610,"• EfficientNet: `application_efficientnet_b{0,1,2,3,4,5,6,7}()`",2,128,FALSE,New applications:
keras,b3351cc359d8e19f63c2e9797a9b870d,"Many existing `application_*()`'s gain argument `classifier_activation`, with default `'softmax'`. Affected: `application_{xception, inception_resnet_v2, inception_v3, mobilenet, vgg16, vgg19}()`",1,129,FALSE,NA
keras,3847b5c38f732c8e2ca946714f6565d5,"New function `%<-active%`, a ergonomic wrapper around `makeActiveBinding()` for constructing Python `@​property` decorated methods in `%py_class%`.",1,130,FALSE,NA
keras,947306f7c452462bf0267532a9e6e9aa,`bidirectional()` sequence processing layer wrapper gains a `backwards_layer` arguments.,1,131,FALSE,NA
keras,71b4ea2c169bd7587fe4985b235530b8,"Global pooling layers `layer_global_{max,average}_pooling_{1,2,3}d()` gain a `keepdims` argument with default value `FALSE`.",1,132,FALSE,NA
keras,52fd0b02f25fc48464a98732d03a4a3c,"Signatures for layer functions are in the process of being simplified. Standard layer arguments are moving to `...` where appropriate (and will need to be provided as named arguments). Standard layer arguments include: `input_shape`, `batch_input_shape`, `batch_size`, `dtype`, `name`, `trainable`, `weights`. Layers updated: `layer_global_{max,average}_pooling_{1,2,3}d()`, `time_distributed()`, `bidirectional()`, `layer_gru()`, `layer_lstm()`, `layer_simple_rnn()`",1,133,FALSE,NA
keras,e9e797fdec1192de2b44c29fcba5db5f,All the backend function with a shape argument `k_*(shape =)` that now accept a a mix of integer tensors and R numerics in the supplied list.,1,134,FALSE,NA
keras,33e429dee9f01f7107b814e7ff6f19cb,"All layer functions now accept `NA` as a synonym for `NULL` in arguments that specify shape as a vector of dimension values, e.g., `input_shape`, `batch_input_shape`.",1,135,FALSE,NA
keras,20a0c92e370f4bf29db50967459f2ce5,`k_random_uniform()` now automatically casts `minval` and `maxval` to the output dtype.,1,136,FALSE,NA
keras,6e244f432e0d37fd6740358ad27ba630,`install_keras()` gains arg with default `pip_ignore_installed = TRUE`.,1,137,FALSE,NA
keras,2648685e2980b7e50d7fa8495e5adfc8,"New family of *preprocessing* layers. These are the spiritual successor to the `tfdatasets::step_*` family of data transformers (to be deprecated in a future release). Added a new vignette: ""Working with Preprocessing Layers"". New functions: Image preprocessing:",1,138,FALSE,NA
keras,2648685e2980b7e50d7fa8495e5adfc8,• `layer_resizing()`,2,139,FALSE,"New family of *preprocessing* layers. These are the spiritual successor to the `tfdatasets::step_*` family of data transformers (to be deprecated in a future release). Added a new vignette: ""Working with Preprocessing Layers"". New functions: Image preprocessing:"
keras,2648685e2980b7e50d7fa8495e5adfc8,• `layer_rescaling()`,2,140,FALSE,"New family of *preprocessing* layers. These are the spiritual successor to the `tfdatasets::step_*` family of data transformers (to be deprecated in a future release). Added a new vignette: ""Working with Preprocessing Layers"". New functions: Image preprocessing:"
keras,2648685e2980b7e50d7fa8495e5adfc8,• `layer_center_crop()`,2,141,FALSE,"New family of *preprocessing* layers. These are the spiritual successor to the `tfdatasets::step_*` family of data transformers (to be deprecated in a future release). Added a new vignette: ""Working with Preprocessing Layers"". New functions: Image preprocessing:"
keras,243b011252ce7bfadbff78c91d861431,Image augmentation:,1,141,FALSE,NA
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_crop()`,2,142,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_flip()`,2,143,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_translation()`,2,144,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_rotation()`,2,145,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_zoom()`,2,146,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_contrast()`,2,147,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_height()`,2,148,FALSE,Image augmentation:
keras,243b011252ce7bfadbff78c91d861431,• `layer_random_width()`,2,149,FALSE,Image augmentation:
keras,abcd2448375ab8430f55006e7cb039af,Categorical features preprocessing:,1,149,FALSE,NA
keras,abcd2448375ab8430f55006e7cb039af,• `layer_category_encoding()`,2,150,FALSE,Categorical features preprocessing:
keras,abcd2448375ab8430f55006e7cb039af,• `layer_hashing()`,2,151,FALSE,Categorical features preprocessing:
keras,abcd2448375ab8430f55006e7cb039af,• `layer_integer_lookup()`,2,152,FALSE,Categorical features preprocessing:
keras,abcd2448375ab8430f55006e7cb039af,• `layer_string_lookup()`,2,153,FALSE,Categorical features preprocessing:
keras,542f076800080c5880f529a8739a900b,Numerical features preprocessing:,1,153,FALSE,NA
keras,542f076800080c5880f529a8739a900b,• `layer_normalization()`,2,154,FALSE,Numerical features preprocessing:
keras,542f076800080c5880f529a8739a900b,• `layer_discretization()`,2,155,FALSE,Numerical features preprocessing:
keras,3786586408a5ccc4f052d27519838143,"These join the previous set of text preprocessing functions, each of which have some minor changes:",1,155,FALSE,NA
keras,3786586408a5ccc4f052d27519838143,• `layer_text_vectorization()` (changed arguments),2,156,FALSE,"These join the previous set of text preprocessing functions, each of which have some minor changes:"
keras,3786586408a5ccc4f052d27519838143,• `get_vocabulary()`,2,157,FALSE,"These join the previous set of text preprocessing functions, each of which have some minor changes:"
keras,3786586408a5ccc4f052d27519838143,• `set_vocabulary()`,2,158,FALSE,"These join the previous set of text preprocessing functions, each of which have some minor changes:"
keras,3786586408a5ccc4f052d27519838143,• `adapt()`,2,159,FALSE,"These join the previous set of text preprocessing functions, each of which have some minor changes:"
keras,44a25b59a9c407590e77208a79208b62,`adapt()` changes:,1,160,FALSE,NA
keras,44a25b59a9c407590e77208a79208b62,"• Now accepts all *features preprocessing* layers, previously only `layer_text_vectorization()` instances were valid.",2,161,FALSE,`adapt()` changes:
keras,44a25b59a9c407590e77208a79208b62,• `reset_state` argument is removed. It only ever accepted the default value of `TRUE`.,2,162,FALSE,`adapt()` changes:
keras,44a25b59a9c407590e77208a79208b62,• New arguments `batch_size` and `steps`.,2,163,FALSE,`adapt()` changes:
keras,44a25b59a9c407590e77208a79208b62,• Now returns the adapted layer invisibly for composability with `%>%` (previously returned `NULL`),2,164,FALSE,`adapt()` changes:
keras,31cc84620befc260e6af63ba4f4ccf02,`get_vocabulary()` gains a `include_special_tokens` argument.,1,165,FALSE,NA
keras,5bc759f9414d1fd641e6381783150690,`set_vocabulary()`:,1,166,FALSE,NA
keras,5bc759f9414d1fd641e6381783150690,• Now returns the adapted layer invisibly for composability with `%>%` (previously returned `NULL`),2,167,FALSE,`set_vocabulary()`:
keras,5bc759f9414d1fd641e6381783150690,• Signature simplified. Deprecated arguments (`df_data` `oov_df_value`) are now subsumed in `...`.,2,168,FALSE,`set_vocabulary()`:
keras,a7423d9c83b983702528545d508d51fa,`layer_text_vectorization()`:,1,169,FALSE,NA
keras,a7423d9c83b983702528545d508d51fa,"• valid values for argument `output_mode` change: `""binary""` is renamed to `""multi_hot""` and `""tf-idf""` is renamed to `""tf_idf""` (backwards compatibility is preserved).",2,170,FALSE,`layer_text_vectorization()`:
keras,a7423d9c83b983702528545d508d51fa,"• Fixed an issue where valid values of `output_mode = ""int""` would incorrectly return a ragged tensor output shape.",2,171,FALSE,`layer_text_vectorization()`:
keras,b9f3c0cc2f8add80d2adf6f3d89f5aa4,Existing layer instances gain the ability to be added to sequential models via a call. E.g.:,1,172,FALSE,NA
keras,b9f3c0cc2f8add80d2adf6f3d89f5aa4,"```
layer <- layer_dense(units = 10)
model <- keras_model_sequential(input_shape = c(1,2,3)) %>%
  layer()
```",1,173,TRUE,NA
keras,9bd9b2ee2c3061763625e8aa52b99dbe,"Functions in the *merging layer* family gain the ability to return a layer instance if the first argument `inputs` is missing. (affected: `layer_concatenate()`, `layer_add()`, `layer_subtract()`, `layer_multiply()`, `layer_average()`, `layer_maximum()`, `layer_minimum()` , `layer_dot()`)",1,174,FALSE,NA
keras,9ee87e7d22deddd9b171c3b54581e8b2,`%py_class%` gains the ability to delay initializing the Python session until first use. It is now safe to implement and export `%py_class%` objects in an R package.,1,175,FALSE,NA
keras,3d4d752971bb71c8674dfcf4a85ed48b,Fixed an issue in `layer_input()` where passing a tensorflow `DType` objects to argument `dtype` would throw an error.,1,176,FALSE,NA
keras,962f33ec48b2647699b7819a91e53d93,"Fixed an issue in `compile()` where passing an R function via an in-line call would result in an error from subsequent `fit()` calls. (e.g., `compile(loss = function(y_true, y_pred) my_loss(y_true, y_pred))` now succeeds)",1,177,FALSE,NA
keras,65987721f0d124d9c1eef6bc6dfa8271,`clone_model()` gains a `clone_function` argument that allows you to customize each layer as it is cloned.,1,178,FALSE,NA
keras,fd33b40c6ea1b2546c9cc52c2a693233,Bumped minimum R version to 3.4. Expanded CI to test on all supported R version. Fixed regression that prevented package installation on R \<= 3.4,1,179,FALSE,NA
keras,7410db9e875c9762e781eee9161ec13d,`predict_proba()` and `predict_classes()` were removed.,1,180,FALSE,NA
keras,97b1be5bc9f9049e71e92734a0172be0,`model_to_yaml()` and `model_from_yaml()` were removed.,1,181,FALSE,NA
keras,7fb58f8723bbc86b95cb2a1893a7dd64,default changed: `layer_text_vectorization(pad_to_max_tokens=FALSE)`,1,182,FALSE,NA
keras,8b14f31cab70574aecd6859be7e0f3d5,`set_vocabulary()` arguments `df_data` and `oov_df_value` are removed. They are replaced by the new argument `idf_weights`.,1,183,FALSE,NA
keras,a27b5f5b3f29847fc604360974dcb04f,Default Tensorflow/Keras version is now 2.6,1,184,FALSE,NA
keras,6e6e655bbe74751987189dce9df50591,"Introduced `%py_class%`, an R-language constructor for Python classes.",1,185,FALSE,NA
keras,a35165068cc3fd8bc0f184c093f2b31a,New vignettes:,1,186,FALSE,NA
keras,a35165068cc3fd8bc0f184c093f2b31a,• Subclassing Python classes: How to use `%py_class%`.,2,187,FALSE,New vignettes:
keras,a35165068cc3fd8bc0f184c093f2b31a,• Making new layers and models via subclassing.,2,188,FALSE,New vignettes:
keras,a35165068cc3fd8bc0f184c093f2b31a,"• Customizing what happens in fit (example of how to define a model, like a GAN, with a custom train step).",2,189,FALSE,New vignettes:
keras,a35165068cc3fd8bc0f184c093f2b31a,• Writing your own callbacks.,2,190,FALSE,New vignettes:
keras,9c1c45203be94a11848ca0f7be6163ac,The `keras` Python module is exported,1,191,FALSE,NA
keras,abe95ccbf749a36521e3021ccfefe41a,Major changes to the underlying handling of custom R6 layer classes.,1,192,FALSE,NA
keras,abe95ccbf749a36521e3021ccfefe41a,• A new `r_to_py()` method is provided for `R6ClassGenerator` objects.,2,193,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• R6 custom layers can now inherit directly from Python layer classes or other R6 custom layer classes.,2,194,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,"• Custom R6 layers can now be instantiated directly after conversion of the class generator with `r_to_py()`, without going through `create_layer()`.",2,195,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• `KerasLayer` is deprecated (new classes should inherit directly from `keras$layers$Layer`).,2,196,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• `KerasWrapper` is deprecated (new classes should inherit directly from `keras$layers$Wrapper`).,2,197,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,"• `create_wrapper()` is deprecated (no longer needed, use `create_layer()` directly).",2,198,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• All layer class methods provided as R functions now have a `super` in scope that resolves to the Python super class object.,2,199,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• Methods of `super` can be accessed in the 3 common ways:,2,200,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,"‣ (Python 3 style): `super()$""__init__""()`",3,201,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,"‣ (Python 2 style): `super(ClassName, self)$""__init__""()`",3,202,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,‣ (R6 style): `super$initialize()`,3,203,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• User defined custom classes that inherit from a Python type are responsible for calling `` super()$`__init__`(...) `` if appropriate.,2,204,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,• Custom layers can now properly handle masks (#1225),2,205,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,‣ `supports_masking = TRUE` attribute is now supported,3,206,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,‣ `compute_mask()` user defined method is now supported,3,207,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,abe95ccbf749a36521e3021ccfefe41a,"• `call()` methods now support a `training` argument, as well as any additional arbitrary user-defined arguments",2,208,FALSE,Major changes to the underlying handling of custom R6 layer classes.
keras,f19c6914aa0203ca8586fcb26df15741,`Layer()` custom layer constructor is now lazy about initializing the Python session and safe to use on the top level of an R package (#1229).,1,209,FALSE,NA
keras,d726c60e719c2e9d70d5c37ad04c6f93,New function `create_layer_wrapper()` that can create a composing R function wrapper around a custom layer class.,1,210,FALSE,NA
keras,0b0f6d36d94f069dcbb8abd5cfadee99,"Refactored `install_keras()` (along with `tensorflow::install_tensorflow()`). Installation should be more reliable for more users now. If you encounter installation issues, please file an issue: https://github.com/rstudio/keras/issues/new",1,211,FALSE,NA
keras,0b0f6d36d94f069dcbb8abd5cfadee99,"• Potentially breaking change: numeric versions supplied without a patchlevel now automatically pull the latest patch release. (e.g. `install_keras(tensorflow=""2.4"")` will install tensorflow version ""2.4.2"". Previously it would install ""2.4.0"")",2,212,FALSE,"Refactored `install_keras()` (along with `tensorflow::install_tensorflow()`). Installation should be more reliable for more users now. If you encounter installation issues, please file an issue: https://github.com/rstudio/keras/issues/new"
keras,0b0f6d36d94f069dcbb8abd5cfadee99,• pandas is now a default extra packages installed by `install_keras()`,2,213,FALSE,"Refactored `install_keras()` (along with `tensorflow::install_tensorflow()`). Installation should be more reliable for more users now. If you encounter installation issues, please file an issue: https://github.com/rstudio/keras/issues/new"
keras,0b0f6d36d94f069dcbb8abd5cfadee99,• pyyaml is no longer a installed by default if the Tensorflow version \>= 2.6.,2,214,FALSE,"Refactored `install_keras()` (along with `tensorflow::install_tensorflow()`). Installation should be more reliable for more users now. If you encounter installation issues, please file an issue: https://github.com/rstudio/keras/issues/new"
keras,50132ca5f835ea8d2113429cb4e98cc1,Loss functions:,1,215,FALSE,NA
keras,50132ca5f835ea8d2113429cb4e98cc1,• All the loss functions gain the ability to return a callable (a `keras$losses$Loss` instance) if `y_true` and `y_pred` arguments are missing.,2,216,FALSE,Loss functions:
keras,50132ca5f835ea8d2113429cb4e98cc1,• New builtin loss functions:,2,217,FALSE,Loss functions:
keras,50132ca5f835ea8d2113429cb4e98cc1,‣ `loss_huber()`,3,218,FALSE,Loss functions:
keras,50132ca5f835ea8d2113429cb4e98cc1,‣ `loss_kl_divergence()`,3,219,FALSE,Loss functions:
keras,7442737a4f3b4674b617e542c4331ff5,Metric functions:,1,220,FALSE,NA
keras,7442737a4f3b4674b617e542c4331ff5,• All the metric functions gain the ability to return a `keras$metrics$Metric` instance if called without `y_true` and `y_pred`,2,221,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,"• Each metric function is now documented separately, with a common `?Metric` topic demonstrating example usage.",2,222,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,• New built-in metrics:,2,223,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_true_negatives()`,3,224,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_true_positives()`,3,225,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_false_negatives()`,3,226,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_false_positives()`,3,227,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_specificity_at_sensitivity()`,3,228,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_sensitivity_at_specificity()`,3,229,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_precision()`,3,230,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_precision_at_recall()`,3,231,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_sum()`,3,232,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_recall()`,3,233,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_recall_at_precision()`,3,234,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_root_mean_squared_error()`,3,235,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_sparse_categorical_accuracy()`,3,236,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_mean_tensor()`,3,237,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_mean_wrapper()`,3,238,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_mean_iou()`,3,239,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_mean_relative_error()`,3,240,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_logcosh_error()`,3,241,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_mean()`,3,242,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_cosine_similarity()`,3,243,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_categorical_hinge()`,3,244,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_accuracy()`,3,245,FALSE,Metric functions:
keras,7442737a4f3b4674b617e542c4331ff5,‣ `metric_auc()`,3,246,FALSE,Metric functions:
keras,6302cdd80cdc8a34f75ae416436ff8e3,`keras_model_sequential()` gains the ability to accept arguments that define the input layer like `input_shape` and `dtype`. See `?keras_model_sequential` for details and examples.,1,247,FALSE,NA
keras,5800bb3134701dfc18b105c34071fe4b,"Many layers gained new arguments, coming to parity with the interface available in the latest Python version: layer name new argument ------------------------------ ------------------ `layer_gru` `time_major` `layer_lstm` `time_major` `layer_max_pooling_1d` `data_format` `layer_conv_lstm_2d` `return_state` `layer_depthwise_conv_2d` `dilation_rate` `layer_conv_3d_transpose` `dilation_rate` `layer_conv_1d` `groups` `layer_conv_2d` `groups` `layer_conv_3d` `groups` `layer_locally_connected_1d` `implementation` `layer_locally_connected_2d` `implementation` `layer_text_vectorization` `vocabulary`",1,248,FALSE,NA
keras,1a0d3f379a5a31665f99085b3246a858,The `compile()` method for keras models has been updated:,1,249,FALSE,NA
keras,1a0d3f379a5a31665f99085b3246a858,"• `optimizer` is now an optional argument. It defaults to `""rmsprop""` for regular keras models. Custom models can specify their own default optimizer.",2,250,FALSE,The `compile()` method for keras models has been updated:
keras,1a0d3f379a5a31665f99085b3246a858,• `loss` is now an optional argument.,2,251,FALSE,The `compile()` method for keras models has been updated:
keras,1a0d3f379a5a31665f99085b3246a858,"• New optional arguments: `run_eagerly`, `steps_per_execution`.",2,252,FALSE,The `compile()` method for keras models has been updated:
keras,1a0d3f379a5a31665f99085b3246a858,• `target_tensors` and `sample_weight_mode` must now be supplied as named arguments.,2,253,FALSE,The `compile()` method for keras models has been updated:
keras,22bcf2000fd3d424fb5311557b7a78e6,Added activation functions swish and gelu. (#1226),1,254,FALSE,NA
keras,9f9c6e149c238fd58bd0f958cdd6b572,`set_vocabulary()` gains a `idf_weights` argument.,1,255,FALSE,NA
keras,54d85e8c06f915eee365dd4a16a9b288,"All optimizer had argument `lr` renamed to `learning_rate`. (backwards compatibility is preserved, an R warning is now issued).",1,256,FALSE,NA
keras,45283faab70bd61e1014d7a6c6cd60c7,The glue package was added to Imports,1,257,FALSE,NA
keras,71cc4c800b8a952d05d306eace7a69cc,Refactored automated tests to closer match the default installation procedure and compute environment of most user.,1,258,FALSE,NA
keras,81d0662c7b477c898824f61b8523f4c0,"Expanded CI test coverage to include R devel, oldrel and 3.6.",1,259,FALSE,NA
keras,7e667504740160e7674941908edc05a8,Use compat module when using `set_session` and `get_session`. (#1046),1,260,FALSE,NA
keras,eeef7e6d98da15225600a987d8fd6d25,Allows passing other arguments to `keras_model` eg `name`. (#1045),1,261,FALSE,NA
keras,a90b0a8ef1ae6961196016e266fb8523,Fixed bug when serializing models with the plaidml backends.(#1084),1,262,FALSE,NA
keras,f6ea41576829b630833ce90ea49de1a3,Install keras no longer tries to install scipy because it's already installed by tensorflow (#1081),1,263,FALSE,NA
keras,86d11f62d731b0fee58da6b2b0e84dd1,Fixed bug with `layer_text_vectorization` with TensorFlow \>= 2.3 (#1131),1,264,FALSE,NA
keras,e129e976d4baaeadf4c79a71fbe852be,Handle renamed argument `text` to `input_text` in `text_one_hot` (#1133),1,265,FALSE,NA
keras,ad34f2703d80f10a638e5f3e65d9b95f,Added TensorFlow 2.3 to the CI (#1102),1,266,FALSE,NA
keras,7acb0824e825df105d89be7642d2c65e,Fix C stack error when using Image Data Generators and Time Series generators with TensorFlow \<= 2.0.1 (#1135),1,267,FALSE,NA
keras,9c22c47110f65f031e48a478fda0c4d5,Fixed warning raised in the initial epoch (@​gsteinbu #1130),1,268,FALSE,NA
keras,ecfbaba74094b5aa41fc0b4b775d248d,Consistent result when using `text_hashing_trick` with missing values (@​topepo #1048),1,269,FALSE,NA
keras,597aa28c6708e892e3bceeebabba2090,Added a custom error message for `k_logsumexp` as it was removed from Keras (#1137),1,270,FALSE,NA
keras,b91e668b427c375bf8aa29657d819f4f,Fixed bug when printing models that are not built yet. (#1138),1,271,FALSE,NA
keras,7fdfdcdbe0bb525cc31b92a69555c188,Fix drop_duplicates DeprecationWarning with tf 2.3 (@​gsteinbu #1139 #1141),1,272,FALSE,NA
keras,a0dff177e1bbc1f2441ba69023d3a3ec,Fixed bug when plotting the model history if the model used an early stopping callback (#1140),1,273,FALSE,NA
keras,8c6a5806fb39e09d5024f448f6107dea,"`install_keras` now installs a fixed version of h5py, because newer versions are backward incompatible. (#1142)",1,274,FALSE,NA
keras,0855727f0b782b793f2780ed17dd0cb4,Simplify testing utilities by using a `helper-*` file. (#1173),1,275,FALSE,NA
keras,00417284a07adbad5255a6c8dce4f9b6,Deprecated `hdf5_matrix` if using TF \>= 2.4 (#1175),1,276,FALSE,NA
keras,587654b8379a83837780a61636de2fca,Fixed TensorFlow nightly installation on CI (#1176),1,277,FALSE,NA
keras,6581e17f732113b8a742f5f3610dc456,Support for TensorFlow v2.4: just small fixes for custom classes. (#1177),1,278,FALSE,NA
keras,d876ad14cb9c80324f03c19e219eae8f,Added `untar` argument to `get_file` as it seems to be slightly different from `extract` (#1179),1,279,FALSE,NA
keras,a4dc08008aec099c74b797beba873295,Warn when not using the tensorflow implementation of Keras (#1181),1,280,FALSE,NA
keras,76e5309ad28bb434b34ce9c6cfe26218,Added `layer_layer_normalization` (#1183),1,281,FALSE,NA
keras,f683db0a92433970ba67a38ceae622cb,Added `layer_multihead_attention` (#1184),1,282,FALSE,NA
keras,ce0841326b1cbc7581bbae9f43ff1dfc,Added `image_dataset_from_directory` (#1185),1,283,FALSE,NA
keras,babed333df8c44bbb4f708e62a8de29b,Fixed bug when using a custom layer with a time distributed adverb. (#1188),1,284,FALSE,NA
keras,0cd1b46ce0c13c7c0d62eef096ba34d7,Added the `ragged` argument to `layer_input`. (#1193),1,285,FALSE,NA
keras,148f29026650bae4d140791c8839b6dc,Fixed `*_generator` deadlocks with recent versions of TensorFlow (#1197),1,286,FALSE,NA
keras,6955deb3035ca9cba2f58c64242d9196,Added `layer_attention` (#1000) by @​atroiano.,1,287,FALSE,NA
keras,98e09f2b6e0b49a2d9b810af66b86177,Fixed issue regarding the KerasMetricsCallback with TF v2.2 (#1020),1,288,FALSE,NA
keras,03c1a1d47c3707cc1515ec69fe840f9b,Added `layer_dense_features`.,1,289,FALSE,NA
keras,955ef2d3f3265b6b8472e864350387df,"Added `on_test_*`, `on_test_batch_*`, `on_predict_*` and `on_predict_*` to callback options.",1,290,FALSE,NA
keras,94077fe44eef9e3ffb49e844f4a7a3d7,Search for the right optimizers and initializers on TensorFlow 2.0,1,291,FALSE,NA
keras,c09fed8a61556f14b84f424693abe09f,Fixed bug in function generators when using models with multiple inputs. (#740),1,292,FALSE,NA
keras,f835128c76fe36079281c2c4fce9f079,Added `export_savedmodel` support for TensorFlow 2.0 (#773),1,293,FALSE,NA
keras,d36e3de6c9859c9684cdf846876a1872,Fixed bug when using `metric_` functions. (#804),1,294,FALSE,NA
keras,36d9720aae08bd88b70e1064d9510c5c,Allow users to pass additional arguments to `install_keras` (#808),1,295,FALSE,NA
keras,d5cc6fcf45dd7f822db9f29ecc6eb860,Enabled calling Keras models with R arrays. (#806),1,296,FALSE,NA
keras,3450c8f87014a3ccb7b4e008c6d269f8,Allow passing `data.frames` as inputs to Keras models. (#822),1,297,FALSE,NA
keras,2c2f5fdf3239cd58abdc3d45673da919,Fixed bug when passing a fixed validation set to `fit_generator` (#837),1,298,FALSE,NA
keras,4c31c9bb83fcb96613a4aa1ee2c12181,Fixed bug when passing a TensorFlow dataset to `fit` within a `tf$distribute` scope. (#856),1,299,FALSE,NA
keras,c74441626f81aeb57eed6cc1f2042d0f,`install_keras` will now install Keras dependencies (#856). It won't re-install TensorFlow if it's already installed.,1,300,FALSE,NA
keras,e68b4db6e800b0fc8117bb139b96fb51,Fixed deprecation messages showed with TensorFlow v1.14.,1,301,FALSE,NA
keras,6ffc553ddeda6d38f274dd0cfcb8a2e4,Largely reduced tests verbosity.,1,302,FALSE,NA
keras,46357576bb33d79e9e1d5706f4511400,Use `tf.keras` as default implementation module.,1,303,FALSE,NA
keras,c645bb688b45ee185ad2218da9f0699b,Added AppVeyor to test on Windows.,1,304,FALSE,NA
keras,fad2dac7eb5b773eff91bbc8f53a825d,Added `flow_images_from_dataframe` function (#658).,1,305,FALSE,NA
keras,46d11bc49b52c1b98d5ae05483ecdc46,Allow for unknown `input_shape` in `application_*` functions.,1,306,FALSE,NA
keras,d49da941887adddad5bab763794d0070,Added `save_model_tf` and `load_model_tf` to save/load models in the TensorFlow's SavedModel format.,1,307,FALSE,NA
keras,d1545b8c1459ffdc1d5d97ffab79204a,Improve handling of `timeseries_generator()` in calls to `fit_generator()`,1,308,FALSE,NA
keras,05829a50447cb40959111837685ff3c5,Add support for `input_shape` argument to `layer_dropout()`,1,309,FALSE,NA
keras,39629cc08cf130d89ac43003c5ce164b,"Improve error message for data frames passed to `fit()`, etc.",1,310,FALSE,NA
keras,50b0bcb4d35ab604f42529bdbbab6540,Use 1-based axis indices for `k_gather()`,1,311,FALSE,NA
keras,02a4c3fdcdbdf3ff6f5403cf6726dbc7,Added `version` parameter to `install_keras()` for installing alternate/older versions,1,312,FALSE,NA
keras,d24687865fd4ce50d03c69ccd7d7c9de,Added `activation_exponential()` function.,1,313,FALSE,NA
keras,41d07148d9ee17eff88df5ed8657917d,Added `threshold` parameter to `activation_relu()`,1,314,FALSE,NA
keras,623a6475ff7d30c64aba6c478a17ba95,Added `restore_best_weights` parameter to `callback_model_checkpoint()`,1,315,FALSE,NA
keras,2619ee686e6b00b5048dd28d028e4602,Added `update_freq` parameter to `callback_tensorboard()`,1,316,FALSE,NA
keras,39689fe7ec4dd9ac39f17b13de27857d,Added `negative_slope` and `threshold` parameters to `layer_activation_relu()`,1,317,FALSE,NA
keras,f6a26e34c7946dc9d22ee09322161f9d,Added `output_padding` and `dilation_rate` parameters to `layer_conv_2d_transpose()`,1,318,FALSE,NA
keras,0ed673c869fd89a09bdf17c303ee6f0f,Added `output_padding` argument to `layer_conv_3d_transpose()`,1,319,FALSE,NA
keras,fe3449cbae5f1c6156ead56f120fac2a,"Added `data_format` argument to `layer_separable_conv_1d()`, `layer_average_pooling_1d()`, `layer_global_max_pooling_1d()`, and `layer_global_average_pooling_1d()`",1,320,FALSE,NA
keras,ac6a6b4acfecf6409609275f548f8e1a,Added `interpolation` argument to `layer_upsampling_1d()` and `layer_upsampling_2d()`,1,321,FALSE,NA
keras,58ae05855b3976ef36a58a1199ff8e07,Added `dtype` argument to `to_categorical()`,1,322,FALSE,NA
keras,870b34402a94822332efeb7ca5626e13,Added `layer_activation_selu()` function.,1,323,FALSE,NA
keras,5b1d66fe6ccb757755e0cb0f652fa6ed,Added `KerasWrapper` class and corresponding `create_wrapper` function.,1,324,FALSE,NA
keras,a584e657d477e0eb31407a66c9f62e2e,Fix issue with serializing models that have constraint arguments,1,325,FALSE,NA
keras,25baeb70a999abfbf7fe8aa5d11cd3c1,Fix issue with `k_tile` that needs an integer vector instead of a list as the `n` argument.,1,326,FALSE,NA
keras,61cb0753048168a3f75e37ec037039a5,Fix issue with user-supplied `output_shape` in `layer_lambda()` not being supplied to tensorflow backends,1,327,FALSE,NA
keras,e2a6a442230f619e88a846c7ac16c756,Filter out metrics that were created for callbacks (e.g. `lr`),1,328,FALSE,NA
keras,700018e266e52dcd49e8be0c8461f916,Added `application_mobilenet_v2()` pre-trained model,1,329,FALSE,NA
keras,8f64534da1954c86a7ae0a56024f2c30,Added `sample_weight` parameter to `flow_images_from_data()`,1,330,FALSE,NA
keras,717e97a6d10a631cc903bc401175156a,Use native Keras implementation (rather than SciPy) for `image_array_save()`,1,331,FALSE,NA
keras,9afa91048563ec5559f76b218989651d,Default `layer_flatten()` `data_format` argument to `NULL` (which defaults to global Keras config).,1,332,FALSE,NA
keras,3515d70e38ae64cef2f35b4b290900f2,Add `baseline` argument to `callback_early_stopping()` (stop training if a given baseline isn't reached).,1,333,FALSE,NA
keras,9c7a0df05f81d9215a63c7269c71b188,Add `data_format` argument to `layer_conv_1d()`.,1,334,FALSE,NA
keras,9d945a778a645ffbf19578308cf08d05,"Add `layer_activation_relu()`, making the ReLU activation easier to configure while retaining easy serialization capabilities.",1,335,FALSE,NA
keras,f1baf5cf826e3b058125104d94c065ed,Add `axis = -1` argument in backend crossentropy functions specifying the class prediction axis in the input tensor.,1,336,FALSE,NA
keras,5c81b5cd741fcd27e1339a3e29e52e72,"Handle symbolic tensors and TF datasets in calls to `fit()`, `evaluate()`, and `predict()`",1,337,FALSE,NA
keras,8b6bd86dea2e71a2ab1ec471153259e7,Add `embeddings_data` argument to `callback_tensorboard()`,1,338,FALSE,NA
keras,9f554d180368476fe25b91a4f34b14ec,Support for defining custom Keras models (i.e. custom `call()` logic for forward pass),1,339,FALSE,NA
keras,370d61f362527f45ea551f8ced03d1b2,Handle named list of model output names in `metrics` argument of `compile()`,1,340,FALSE,NA
keras,3c323b7aa118bc0167621ddc358006f3,New `custom_metric()` function for defining custom metrics in R,1,341,FALSE,NA
keras,5538bda0b80209ed68dc9bd402cb8b92,Provide typed wrapper for categorical custom metrics,1,342,FALSE,NA
keras,458b17561693395e51a7dd6fe92b1b9e,Provide access to Python layer within R custom layers,1,343,FALSE,NA
keras,52d34aff6a04b2c9211ee568580eb6e0,Don't convert custom layer output shape to tuple when shape is a list or tuple of other shapes,1,344,FALSE,NA
keras,8f4ddf52d6b80716ea1dd709d86d5825,Re-export `shape()` function from tensorflow package,1,345,FALSE,NA
keras,cdd44d309cf43ffda520611541d51eb9,Re-export `tuple()` function from reticulate package,1,346,FALSE,NA
keras,04ea148420cb3b76fba39605121ae45e,Indexes for `get_layer()` are now 1-based (for consistency w/ `freeze_weights()`),1,347,FALSE,NA
keras,1bc893476703738389fd6e1dad0b922c,Accept named list for `sample_weight` argument to `fit()`,1,348,FALSE,NA
keras,f546c59b0a518b92307fe14cd5d520a3,Fix issue with single-element vectors passed to text preprocessing functions,1,349,FALSE,NA
keras,f3a85e1272bca264efacb92b8a713884,Compatibility with TensorFlow v1.7 Keras implementation,1,350,FALSE,NA
keras,0ba2bcdc88f2458061e907e9a6851c22,Support `workers` parameter for native Keras generators (e.g. `flow_images_from_directory()`),1,351,FALSE,NA
keras,fc64505c4fe70e90d3694498318b71e7,Accept tensor as argument to `k_pow()`,1,352,FALSE,NA
keras,96b33283fee9aa45a7174954d5960d24,"In `callback_reduce_lr_on_plateau()`, rename `epsilon` argument to `min_delta` (backwards-compatible).",1,353,FALSE,NA
keras,a6c83d5a655995e6c544af79ce02c174,Add `axis` parameter to `k_softmax()`,1,354,FALSE,NA
keras,dcdf0fd17c2c62c3d81edfa51d32c9b6,Add `send_as_json` parameter to `callback_remote_monitor()`,1,355,FALSE,NA
keras,80980c9b3004ab5e05959413415b17a1,Add `data_format` method to `layer_flatten()`,1,356,FALSE,NA
keras,f87fb5a17f60a41f256812854a7982f0,"In `multi_gpu_model()`, add arguments `cpu_merge` and `cpu_relocation` (controlling whether to force the template model's weights to be on CPU, and whether to operate merge operations on CPU or GPU).",1,357,FALSE,NA
keras,a4da90729cb5122fa7e4eb3cfcd99ede,Record correct loss name for tfruns when custom functions are provided for `loss`,1,358,FALSE,NA
keras,ece1f4e57485b7a13f5efc26807b1a34,Support for custom constraints from R,1,359,FALSE,NA
keras,d0342f6c21826c7830e0335be8db3982,Added `timeseries_generator()` utility function,1,360,FALSE,NA
keras,39e15f3115caa8656479e7593c3a6a47,New layer `layer_depthwise_conv_2d()`,1,361,FALSE,NA
keras,cac8faa68cd80207c90361a976e9510c,Added `brightness_range` and `validation_split` arguments to \[image_data_generator()\].,1,362,FALSE,NA
keras,19482ab0bb47eac42e56bbdaa45d69d4,Added support for `remove_learning_phase` in `export_savedmodel()` to avoid removing learning phase.,1,363,FALSE,NA
keras,5e1529c1c148123095416a41557b1987,Normalize validation data to Keras array in `fit()` and `fit_generator()`,1,364,FALSE,NA
keras,d646eb1a88dfb2be2a8d7db14bb465ec,Ensure that custom layers return a tuple from `compute_output_shape()`,1,365,FALSE,NA
keras,e7ad910851fc8482befe09c5c09beccf,Added Nasnet and Densenet pre-trained models,1,366,FALSE,NA
keras,cf86538afac0ae13b89b920ca518caa8,New layers `layer_activation_softmax()` and `layer_separable_conv_1d()`,1,367,FALSE,NA
keras,7589aee00a86fe21323bb94e6d3b0def,Added `amsgrad` parameter to `optimizer_adam()`,1,368,FALSE,NA
keras,3d8c0ed0f641690657bf43b0a427d207,Fix incompatibility with Progbar.update() method in Keras 2.1.4,1,369,FALSE,NA
keras,88c01afcd6c135ad61c4b9b6c871b53d,Models saved via `export_savedmodel()` that make use of learning phases can now be exported without having to manually reload the original model.,1,370,FALSE,NA
keras,6f7f7de91d88c66b100ff1439068984c,Ensure that models saved via `export_savedmodel()` can be served from CloudML,1,371,FALSE,NA
keras,016c77466490bcfc375f16f6b6956c41,Run image data generators with R preprocessing functions on the main thread,1,372,FALSE,NA
keras,51556182f36a38a5f3b1064c678d3e5c,Return R list from `texts_to_sequences()`,1,373,FALSE,NA
keras,8bac352010b87f9d0e5cd9e90d01f562,Various fixes for `use_implementation()` function,1,374,FALSE,NA
keras,058837a92a6f781b9868b36ebf5aac84,Added `theme_bw` option to plot method for training history,1,375,FALSE,NA
keras,c5bd223442e1fe7c35340f8e58e9a59f,"Support TF Dataset objects as generators for `fit_generator()`, etc.",1,376,FALSE,NA
keras,b4318c83bedd898a0aaeefd7468de3fb,Added `use_implementation()` and `use_backend()` functions as alternative to setting `KERAS_IMPLEMENATION` and `KERAS_BACKEND` environment variables.,1,377,FALSE,NA
keras,fb0fde3b181a052d33f9a11aaefc9152,"Added R wrappers for Keras backend functions (e.g. `k_variable()`, `k_dot()`, etc.)",1,378,FALSE,NA
keras,b61a222d0c48431b2efb840c5c1fe358,Use 1-based axis for `normalize` function.,1,379,FALSE,NA
keras,dda4becfec6fe01bdbaf97a844f761f5,Fix issue with printing training history after early stopping.,1,380,FALSE,NA
keras,bd24fdee31b736749feced2dcc1ff796,Experimental support for using the PlaidML backend.,1,381,FALSE,NA
keras,888fa3c9dc3875ce5d1a15250356b40a,Correct handling for R functions specified in `custom_objects`,1,382,FALSE,NA
keras,8fce17a2bc7f6aef128313de301dc42a,Added `with_custom_object_scope()` function.,1,383,FALSE,NA
keras,78b6cb8878a62ae4f19818945fe52ca8,Automatically provide name to loss function during compile (enables save/load of models with custom loss function),1,384,FALSE,NA
keras,286139dd77d7c5e56f254a3bb1e87a91,Provide global `keras.fit_verbose` option (defaults to 1),1,385,FALSE,NA
keras,47d7ed726cb0d151a592e36ab1f5d3ef,Added `multi_gpu_model()` function.,1,386,FALSE,NA
keras,71f7fd4ca22cb7ee27078aed6efce724,Automatically call `keras_array()` on the results of generator functions.,1,387,FALSE,NA
keras,2f800d5a678f721c075034d2141becb1,Ensure that `steps_per_epoch` is passed as an integer,1,388,FALSE,NA
keras,839b320d67c87016d6c092330643faf3,Import `evaluate()` generic from tensorflow package,1,389,FALSE,NA
keras,6ce4f9ff85f8cf388df05a22869f7210,Handle `NULL` when converting R arrays to Keras friendly arrays,1,390,FALSE,NA
keras,6316aca5f75b7c4ea0b4dd86d9512289,Added `dataset_imbd_word_index()` function,1,391,FALSE,NA
keras,8ea29f63b46dacf17751a01dbaf639e5,Ensure that `sample_weight` is passed to `fit()` as an array.,1,392,FALSE,NA
keras,2fa3c7d2ce6637fba33a6ce3909b97d2,Accept single function as `metrics` argument to `compile()`,1,393,FALSE,NA
keras,6752497a9182fe1a60a5cb9845e6b7ca,Automatically cast `input_shape` argument to applications to integer,1,394,FALSE,NA
keras,0a91858879b943932f6ea6a20570d216,Allow Keras models to be composable within model pipelines,1,395,FALSE,NA
keras,471786e9e3a7b5321c17c28001c992f8,Added `freeze_weights()` and `unfreeze_weights()` functions.,1,396,FALSE,NA
keras,25ab86141f61b5d97f375c4c2edf2707,Implement `export_savedmodel()` generic from TensorFlow package,1,397,FALSE,NA
keras,db0101d6e65656cb741c5cd6a7be7dbf,Convert R arrays to row-major before image preprocessing,1,398,FALSE,NA
keras,ff15d7171ebb4ece44bc5e95f84eb3dd,Use `tensorflow.keras` for tensorflow implementation (TF v1.4),1,399,FALSE,NA
keras,ab460fd82523b9054112e51dd515f633,Added `application_inception_resnet_v2()` pre-trained model,1,400,FALSE,NA
keras,8e029f953a4a5a3216dd8ecccf0116a4,Added `dataset_fashion_mnist()` dataset,1,401,FALSE,NA
keras,9d5a04f7e118c076329f07032534e48a,Added `layer_cudnn_gru()` and `layer_cudnn_lstm()` (faster recurrent layers backed by CuDNN),1,402,FALSE,NA
keras,24bd118afe71e9d419f51cfed4b266b1,Added `layer_minimum()` function,1,403,FALSE,NA
keras,20a9ffc86dc63f9ee2b79663a4f358da,Added `interpolation` parameter to `image_load()` function,1,404,FALSE,NA
keras,27f0ced2a15bf21164e67d192c85dd22,Add `save_text_tokenizer()` and `load_text_tokenizer()` functions.,1,405,FALSE,NA
keras,7af6baab3059846aca886baabe057708,Fix for progress bar output in Keras \>= 2.0.9,1,406,FALSE,NA
keras,0335648af2b8b349e3ff1a6234e89c60,Remove deprecated `implementation` argument from recurrent layers,1,407,FALSE,NA
keras,652adeb34442dd94ecd2f5b396833994,Support for passing generators for validation data in `fit_generator()`,1,408,FALSE,NA
keras,1cae7cedaae6de869ed9099a5fe14fc8,Accept single integer arguments for kernel sizes,1,409,FALSE,NA
keras,64a77ddc5476e51d8f0ad1cc84ed4b93,Add standard layer arguments to `layer_flatten()` and `layer_separable_conv_2d()`,1,410,FALSE,NA
keras,76fef7680de09a0ba0a1070dd903475e,Added `image_array_resize()` and `image_array_save()` for 3D image arrays.,1,411,FALSE,NA
keras,4d963a1011a3f1f81519b40289417341,Allow custom layers and lambda layers to accept list parameters.,1,412,FALSE,NA
keras,87b36dd2f2fcf81e8fcdc2c4a4e12735,Expose `add_loss()` function for custom layers,1,413,FALSE,NA
keras,703bcf4c9436aed957bf65ed22a87830,"Add `use_session_with_seed()` function that establishes a random seed for the Keras session. Note that this should not be used when training time is paramount, as it disables GPU computation and CPU parallelism by default for more deterministic computations.",1,414,FALSE,NA
keras,ba47a5f180d931160a8375e43cc43505,Fix for plotting training history with early stopping callback (thanks to @​JamesAllingham).,1,415,FALSE,NA
keras,cb4286ec68b1e72f85448c5bb7281651,Return R training history object from `fit_generator()`,1,416,FALSE,NA
keras,0119672a70e1c2f09fe77ab348868d56,"Rename `to_numpy_array()` function to `keras_array()` reflecting automatic use of Keras default backend float type and ""C"" ordering.",1,417,FALSE,NA
keras,e6947a5e9f9d690b431bbbb30c4fecc4,"Add standard layer arguments (e.g. `name`, `trainable`, etc.) to merge layers",1,418,FALSE,NA
keras,ce87e828db2b168d83d219a00053b099,"Better support for training models from data tensors in TensorFlow (e.g. Datasets, TFRecords). Add a related example script.",1,419,FALSE,NA
keras,231da5bbe871b55fcc1d0412584571d9,"Add `clone_model()` function, enabling to construct a new model, given an existing model to use as a template. Works even in a TensorFlow graph different from that of the original model.",1,420,FALSE,NA
keras,596260338243132d2ab14bdefde6cd0f,"Add `target_tensors` argument in `compile()`, enabling to use custom tensors or placeholders as model targets.",1,421,FALSE,NA
keras,7069de31f04d9fc8c540115acd22bcab,"Add `steps_per_epoch` argument in `fit()`, enabling to train a model from data tensors in a way that is consistent with training from arrays. Similarly, add `steps` argument in `predict()` and `evaluate()`.",1,422,FALSE,NA
keras,15818a5033c3bf5731870d41cbe632b2,Add `layer_subtract()` layer function.,1,423,FALSE,NA
keras,3cb128ac52bf0ba58d76e0bbed6cee59,Add `weighted_metrics` argument in compile to specify metric functions meant to take into account `sample_weight` or `class_weight`.,1,424,FALSE,NA
keras,bbdd1e2159e07d3f90c895381b994095,Enable stateful RNNs with CNTK.,1,425,FALSE,NA
keras,fbcb14deba83770a0a6c57333d2893d2,`install_keras()` function which installs both TensorFlow and Keras,1,426,FALSE,NA
keras,a801f3621f0787137b3f32d768dfcdb3,Use keras package as default implementation rather than tf.contrib.keras,1,427,FALSE,NA
keras,e5392dc54a5dcfbc5f90336e13399aad,Training metrics plotted in realtime within the RStudio Viewer during fit,1,428,FALSE,NA
keras,33ed1342f8b0482c9195fa62aeac991e,`serialize_model()` and `unserialize_model()` functions for saving Keras models as 'raw' R objects.,1,429,FALSE,NA
keras,1f660967a619cf3535493670942cbdeb,Automatically convert 64-bit R floats to backend default float type,1,430,FALSE,NA
keras,450c7de73d10bdf9575b5b7df63c4f03,Ensure that arrays passed to generator functions are normalized to C-order,1,431,FALSE,NA
keras,6482986a9e658c76c3f5f5e3773847e0,`to_numpy_array()` utility function for custom generators (enables custom generators to yield C-ordered arrays of the correct float type),1,432,FALSE,NA
keras,d898f2208725e683ef5df78a40fda7a5,Added `batch_size` and `write_grads` arguments to `callback_tensorboard()`,1,433,FALSE,NA
keras,f222794145a249b4bb1f55835b8839ca,Added `return_state` argument to recurrent layers.,1,434,FALSE,NA
keras,cf9ec76cef2c6f30d9f788b61794ec94,Don't re-export `install_tensorflow()` and `tf_config()` from tensorflow package.,1,435,FALSE,NA
keras,4bce149a42fcb3e82bfe8b5b1520f5d7,`is_keras_available()` function to probe whether the Keras Python package is available in the current environment.,1,436,FALSE,NA
keras,8d950a79d036bc571c199f27a0d62ee9,`as.data.frame()` S3 method for Keras training history,1,437,FALSE,NA
keras,99c0e39dd7f534f2c2498764acdfb060,Remove names from `keras_model()` inputs,1,438,FALSE,NA
keras,e9e54c459d1966a63514ac96345f47de,Return result of `evaluate()` as named list,1,439,FALSE,NA
keras,9a3771f840fa20db698e9d885b99eb2b,Write run metrics and evaluation data to tfruns,1,440,FALSE,NA
keras,13d18abfdd43ae2a2634f5cba0db3796,Provide hint to use r-tensorflow environment when importing keras,1,441,FALSE,NA
keras,5035251f31b64845af9d8cbbd62d1d89,Initial CRAN release,1,442,FALSE,NA
leaflet,1bdfc333a66c5183b468a0382b592505,"Fixed #893: Correctly call `terra::crs()` when checking the CRS of a `SpatVector` object in `pointData()` or `polygonData()` (thanks @​mkoohafkan, #894).",1,1,FALSE,NA
leaflet,cd0e8249727b7b0ccb503004f0c39320,"`{leaflet}` now has a brand new pkgdown site (@​olivroy, #902)",1,2,FALSE,NA
leaflet,2991313d19680fc4f23e5d13a076c31d,"Replace `{viridis}` dependency by `{viridisLite}` (@​olivroy, #897)",1,3,FALSE,NA
leaflet,0f629875f40f5cc70e998d6bc086eb83,"`addRasterImage` now takes `options = gridOptions()`, so that arbitrary Leaflet layer options can be controlled. (#692)",1,4,FALSE,NA
leaflet,4fcf3b834d5704f9ecfb33eb7ca06fe4,"When `addProviderTiles()` is used with `{leaflet.providers}` version 2.0.0 or later, the `leaflet-providers` HTML dependency produced can be correctly cached by knitr. When used with older versions of `{leaflet.providers}`, the HTML dependency uses temp files that break knitr's caching mechanism (thanks @​qdread, @​jaredlander; #884).",1,5,FALSE,NA
leaflet,529132892d56fd62ab3b98205b31974a,Added support for SpatRaster and SpatVector objects from the terra package. (#728),1,6,FALSE,NA
leaflet,ce2cfb377365d91c15e3a4d552e783e8,"`leaflet()` now uses jQuery 3.6.0 provided via the `{jquerylib}`package. As a result of this change, the HTML dependencies for `leaflet()` are included in the `dependencies` item of the htmlwidget object it returns. (#817, #821)",1,7,FALSE,NA
leaflet,f0995ab0e327255796fbaa285e114437,Use correct license in OpenStreetMap attribution. (#811),1,8,FALSE,NA
leaflet,844fb66312bb6bd9888f3eee6e34516a,Use `xfun::base64_uri()` for base64 encoding instead of **markdown** and **base64enc**. (#823),1,9,FALSE,NA
leaflet,1b8615e7d315a9327845cefb3b26ec71,Remove dependencies on rgdal and rgeos. (#837),1,10,FALSE,NA
leaflet,847c8e2177dc855fa2befc275d602bf5,Respect option scrollWheelZoom=FALSE. (#827),1,11,FALSE,NA
leaflet,d71d1deb23deff03d6d0655d5b69cd5e,Fixed #866: Correctly call `terra::has.RGB()` in `addRasterImage()` for a `SpatRaster` object. (#869),1,12,FALSE,NA
leaflet,7c6e7afd9ba5830996294cd7be1fd352,Removed S3 warnings found on R devel (#848),1,13,FALSE,NA
leaflet,b383c46529079e0a97ae972123a99b12,"The default marker icon for `addMarkers` no longer worked, due to the CDN we were relying on apparently being retired. Fixed by pointing to a new CDN. (#782)",1,14,FALSE,NA
leaflet,af0955363fc79caee52bb2177bee6a1d,New behavior from tile.openstreetmap.org caused `addTiles` default tileset to break when viewed under non-https protocol on recent versions of Chrome. Fixed by always using the https protocol to connect to openstreetmap. (#786),1,15,FALSE,NA
leaflet,354932976e785aec535b07e51bea267a,"Enable JS function literals (wrapped in `htmlwidgets::JS()`) to be included in arguments to methods invoked on `leafletProxy` objects. (JS function literals could already be included with methods invoked on `leaflet` objects, so this change just brings `leafletProxy` to parity.) (#420)",1,16,FALSE,NA
leaflet,22f619f1e65837eefa2949e191087b6e,"Add missing CSS rule to show `<img>` in right-pane and left-pane (rstudio/rmarkdown/issues#1949, #770)",1,17,FALSE,NA
leaflet,138113e603b31bea07665d6b12059d67,"Allow for *hidden* but not suspended leaflet maps to queue calls (such as add raster images) until they are rendered. If a new leaflet map is created, all pending calls are removed. (#771)",1,18,FALSE,NA
leaflet,16ac0499d6dcdb48a2abd3ac2b349d88,Updated proj4.js to 2.6.2,1,19,FALSE,NA
leaflet,d982af31173a339a138313a2fcefe507,"Minor tweaks to example data and tests, required to stay on CRAN",1,20,FALSE,NA
leaflet,bca841be7341db6bd02587023b21ed9f,Fixes broken URL (#742) and updated examples to run from system files (#576) including updated .Rmd and .html docs.,1,21,FALSE,NA
leaflet,7840f02582f3cb9853d6695e490a71b1,"`data(""providers"")` and `data(""providers.details"")` no longer exist. Please use `leaflet::providers` and `leaflet::providers.details`. (#636)",1,22,FALSE,NA
leaflet,ef35cf897c822fa5a19a24f83d756201,Integrated data from `leaflet.providers` package. See leaflet.providers for details. (#636),1,23,FALSE,NA
leaflet,d5216775ba789772b78d116a9ea41826,"Fixed rstudio/crosstalk#58, which caused Leaflet maps that used Crosstalk shared data in Shiny apps, to be redrawn at incorrect times.",1,24,FALSE,NA
leaflet,7a6c6373c8797d2b7649bba0aa4effeb,invokeRemote() now resolves html dependencies before passing them to shiny::createWebDependency() (#620).,1,25,FALSE,NA
leaflet,8db86459ad1138c46b5f7858f970109d,"Upgrade leaflet-provider to 1.4.0, enable more map variants such as CartoDB.Voyager (#567)",1,26,FALSE,NA
leaflet,72272e76b2983ef82b9d2c294f4c6724,`sf` objects with `names` attributes in the `st_geometry` now visualise correctly (#595),1,27,FALSE,NA
leaflet,10af91a1f9618b22e33219c116f519d0,GeoJSON objects missing `properties` can now be displayed (#622),1,28,FALSE,NA
leaflet,98f36d65aa8448db2efc4d883060e83a,Require viridis \>= 0.5.1 to avoid namespace issues with viridisLite (#557),1,29,FALSE,NA
leaflet,73e448cc67a9f308124c77af00a0e84e,Fixed broken mouse events after using leaflet-search from leaflet.extras within shiny applications (#563),1,30,FALSE,NA
leaflet,3c3773ea0e4df257408de360049273e7,Use leaflet namespace on `providers` in `addMiniMap` to make the function accessible in other packages. Fixes r-tmap/tmap#231. (#568),1,31,FALSE,NA
leaflet,eb526e0696f753b6241af1d1e3c2e76e,Require scales \>= 1.0.0 to avoid exact color matching issues (#578),1,32,FALSE,NA
leaflet,325c60ec0e29a95d5d56f485d126a49b,Added method `addMapPane` to add custom pane layers to have fine tune control over layer ordering. New feature from within leaflet.js v1.x. (#549),1,33,FALSE,NA
leaflet,976cb121203c564d5a0dd45f268adf02,Exposed htmlwidgets sizingPolicy in leaflet() (#548),1,34,FALSE,NA
leaflet,93533c8f0983be876b103ff850c42c05,Default marker icon locations will now use unpkg.com instead of the leaflet cdn when using https or file protocols. (#544),1,35,FALSE,NA
leaflet,63e9558fc6f3df130ae97f5b0c692384,`.leaflet-map-pane` `z-index` switched to 'auto'. Allows for map panes to appear above the map if they appear later in the dom. (#537),1,36,FALSE,NA
leaflet,560441ff9880da1e509fdfc25d22983e,Use correct Leaflet.js scale control remove method. (#547),1,37,FALSE,NA
leaflet,6637ca512e18e7dd80e1c4a6773c79d3,Start from world view if using flyTo or flyToBounds. (#552),1,38,FALSE,NA
leaflet,5bf6db0f85299e5a9ca9ad8652bca3d5,"Update to latest leaflet.js v1.3.1 (#453, 314616f) Please see https://web.archive.org/web/20220702182250/https://leafletjs.com/reference-1.3.4.html for the latest documentation",1,39,FALSE,NA
leaflet,d7feddd76c11caca30dc79d266e41e6e,All plugins updated to versions compatible with leaflet \> 1.0 (#458),1,40,FALSE,NA
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• jQuery, https://github.com/jquery/jquery",2,41,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet (JavaScript library), https://github.com/Leaflet/Leaflet",2,42,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet Providers, https://github.com/leaflet-extras/leaflet-providers",2,43,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• leaflet-measure, https://github.com/ljagis/leaflet-measure",2,44,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.Terminator, https://github.com/joergdietrich/Leaflet.Terminator",2,45,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.SimpleGraticule, https://github.com/ablakey/Leaflet.SimpleGraticule",2,46,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.MagnifyingGlass, https://github.com/bbecquet/Leaflet.MagnifyingGlass",2,47,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.MiniMap, https://github.com/Norkart/Leaflet-MiniMap",2,48,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.awesome-markers, https://github.com/lvoogdt/Leaflet.awesome-markers",2,49,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Leaflet.EasyButton, https://github.com/CliffCloud/Leaflet.EasyButton/",2,50,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• Proj4Leaflet, https://github.com/kartena/Proj4Leaflet",2,51,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• leaflet-locationfilter, https://github.com/kajic/leaflet-locationfilter",2,52,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• leaflet-omnivore, https://github.com/mapbox/leaflet-omnivore",2,53,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,d7feddd76c11caca30dc79d266e41e6e,"• topojson, https://github.com/topojson/topojson",2,54,FALSE,All plugins updated to versions compatible with leaflet \> 1.0 (#458)
leaflet,28d91cd965b4b3209330a76c5bdd6cca,Leaflet.label (https://github.com/Leaflet/Leaflet.labelExtension),1,55,FALSE,NA
leaflet,28d91cd965b4b3209330a76c5bdd6cca,• `L.Label` has been adopted within Leaflet.js to `L.Tooltip`,2,56,FALSE,Leaflet.label (https://github.com/Leaflet/Leaflet.labelExtension)
leaflet,28d91cd965b4b3209330a76c5bdd6cca,• Tooltips are now displayed with default Leaflet.js styling,2,57,FALSE,Leaflet.label (https://github.com/Leaflet/Leaflet.labelExtension)
leaflet,28d91cd965b4b3209330a76c5bdd6cca,"• In custom javascript extensions, change all `*.bindLabel()` to `*.bindTooltip()`",2,58,FALSE,Leaflet.label (https://github.com/Leaflet/Leaflet.labelExtension)
leaflet,bcc8c58764edf0cea3839a1075b61789,"Relative protocols are used where possible when adding tiles (#526). In RStudio 1.1.x on linux and windows, a known issue of 'https://' routes fail to load, but works within browsers (rstudio/rstudio#2661).",1,59,FALSE,NA
leaflet,1c753db0d4412cedfafb67cb5c8bade4,"Added more providers for `addProviderTiles()`: ""OpenStreetMap.CH"", ""OpenInfraMap"", ""OpenInfraMap.Power"", ""OpenInfraMap.Telecom"", ""OpenInfraMap.Petroleum"", ""OpenInfraMap.Water"", ""OpenPtMap"", ""OpenRailwayMap"", ""OpenFireMap"", ""SafeCast"". (4aea447)",1,60,FALSE,NA
leaflet,426d54a79e14d8fe65b7c248ade25cdd,"`L.multiPolyline` was absorbed into `L.polyline`, which accepts multiple an array of polyline information. https://web.archive.org/web/20220702182250/https://leafletjs.com/reference-1.3.4.html#polyline. (#515)",1,61,FALSE,NA
leaflet,304b9bdbb7fab2ad8988605ddd8ad122,"Fix bug where icons where anchored to the top-center, not center-center (2a60751)",1,62,FALSE,NA
leaflet,ba3aa63325aef6ffa9a1404e0a1ad616,Fix bug where markers would not appear in self contained knitr files (cc79bc3),1,63,FALSE,NA
leaflet,b117c7cdfb4d53d554d7bc58dcc0e004,leaflet-label plugin now L.tooltip in leaflet.js. labelOptions() now translates old options clickable to interactive and noHide to permanent.,1,64,FALSE,NA
leaflet,35d2ce102e7d95352c06db1fb96f4f0e,Fix a bug where the default `addTiles()` would not work with .html files served directly from the filesystem.,1,65,FALSE,NA
leaflet,526b3b8cd88b2c6df0c367c86fe4eb56,Add `groupOptions` function. Currently the only option is letting you specify zoom levels at which a group should be visible.,1,66,FALSE,NA
leaflet,ce22d590c99fefe5756e272ce42341ce,Fix bug with accessing columns in formulas when the data source is a Crosstalk SharedData object wrapping a spatial data frame or sf object.,1,67,FALSE,NA
leaflet,9035a76318827650a6e00a0fdc2b711a,"Fix strange wrapping behavior for legend, especially common for Chrome when browser zoom level is not 100%.",1,68,FALSE,NA
leaflet,4deb6f3a7c98bee2a408e99e7b4a8736,Fix incorrect opacity on NA entry in legend. (PR #425),1,69,FALSE,NA
leaflet,f15d0b9b2da58c316fa2d6435ee0571c,Added support for drag events (#405),1,70,FALSE,NA
leaflet,61c5df53e8338de725803012d7dec5f3,Ensure type safety of .indexOf(stamp) (#396),1,71,FALSE,NA
leaflet,3a4459a45500ec0d11e40ca5dbe270e3,`validateCoords()` warns on invalid polygon data (#393),1,72,FALSE,NA
leaflet,f5d4ad2e33d2f993123941f6fedf21ea,Added `method` argument to `addRasterImage()` to enable nearest neighbor interpolation when projecting categorical rasters (#462),1,73,FALSE,NA
leaflet,9faf5732b5f4554810e32446fa3a038e,Added an `'auto'` method for `addRasterImage()`. Projected factor results are coerced into factors. (9accc7e),1,74,FALSE,NA
leaflet,d3f6586616a0b5fd280ffa3dd9f3b773,"Added `data` parameter to remaining `addXXX()` methods, including addLegend. (f273edd, #491, #485)",1,75,FALSE,NA
leaflet,0d1f15c0e6ca4f94adeb50e7ccfaab0b,Added `preferCanvas` argument to `leafletOptions()` (#521),1,76,FALSE,NA
leaflet,297a9ef7a8b57a56343baf5c807b43a2,"Add support for sf. sf, sfc, and sfg classes are supported with POINT, LINESTRING, MULTILINESTRING, POLYGON, and MULTIPOLYGON geometries (note that MULTIPOINT is not currently supported).",1,77,FALSE,NA
leaflet,1b58074d9cb2e81cf9502541b9334fa8,Added support for Crosstalk (https://rstudio.github.io/crosstalk/).,1,78,FALSE,NA
leaflet,aad245092b8948fb4a1c51406afc9b94,"Added option to highlight polygons, polylines, circles, and rectangles on hover (use highlightOptions parameter).",1,79,FALSE,NA
leaflet,301d66a3330755d3ad4c590bdedfb303,"Fix behavior when data contains NA points, or zero rows. Previously this would cause an error.",1,80,FALSE,NA
leaflet,514848e928e5b1f3f04915cce031f154,Added `popupOptions` parameter to all markers and shape layers.,1,81,FALSE,NA
leaflet,87d78d90a7e77543d91379c981746da8,Upgraded existing plugins to their respective latest versions and added missing/new functionality from those plugins. (PR #293),1,82,FALSE,NA
leaflet,5ec643c7dbba05f08ac71c25c7b02383,Added Proj4Leaflet plugin (PR #294).,1,83,FALSE,NA
leaflet,eda03ee1b1710e02054c93fac8aa3c8b,Added EasyButton plugin (PR #295).,1,84,FALSE,NA
leaflet,7b885bc08e9f6d36c2bd9060b9fa195e,Added Graticule plugin (PR #293).,1,85,FALSE,NA
leaflet,4a6e4d69bf7e634c7c2cf46c63748568,"Color palette improvements. All color palette functions now support viridis palettes (""viridis"", ""magma"", ""inferno"", and ""plasma"").",1,86,FALSE,NA
leaflet,0f0970f923de532deea9113317a195a5,"Color palette functions now support reversing the order in which colors are used, via reverse=TRUE.",1,87,FALSE,NA
leaflet,0321a233297f73c5185d159729aefe73,"`colorFactor` no longer interpolates qualitative RColorBrewer palettes, unless the number of factor levels being mapped exceeds the number of colors in the specified RColorBrewer palette. (Issue #300)",1,88,FALSE,NA
leaflet,61c4ccbc5e0e8f81c7aafe67e9dfefe0,Upgrade leaflet.js to 0.7.7.1 (PR #359),1,89,FALSE,NA
leaflet,ff073c3ae6dd7be9b3bf13973007329b,Added a way for the Map instance to be instantiated via a factory.,1,90,FALSE,NA
leaflet,1d83efedd57709600da8f290886b88cd,"When used with `leafletProxy`, `fitBounds` did not return its input object as output, so magrittr chains would break after `fitBounds` was called.",1,91,FALSE,NA
leaflet,7b70607119de0d7a3bbe1c1012e9e098,"Add addMeasure()/removeMeasure() functions to allow users to measure lines and areas, via the leaflet-measure plugin by @​ljagis. (PR #171. Thanks, Kenton Russell!)",1,92,FALSE,NA
leaflet,1eaf550e8e27334c7f757148fff1158e,Add `input${mapid}_center` Shiny event.,1,93,FALSE,NA
leaflet,c24cbbda2b96a53873a3ec7a995c2690,"Add support for labels on most layers, that show either statically or on hover. (PR #181. Thanks Bhaskar Karambelkar!)",1,94,FALSE,NA
leaflet,7573554c8db8e52b1691dcb54e6a82cf,"Add support for markers with configurable colors and icons, via the Leaflet.awesome-markers plugin by @​lvoogdt. See `?addAwesomeMarkers`. (PR #184. Great work, Bhaskar!)",1,95,FALSE,NA
leaflet,0ff3780ef422924befab22bda9948c96,"Add support for the Leaflet.Terminator plugin by @​joergdietrich. Overlays day and night regions on a map. See `?addTerminator`. (PR #184, thanks Bhaskar!)",1,96,FALSE,NA
leaflet,acbf76927debae1933eb0bdeb8da7321,"Add support for Leaflet.SimpleGraticule plugin by @​ablakey. See `?addSimpleGraticule`. (PR #184, thanks again Bhaskar!)",1,97,FALSE,NA
leaflet,65fa2e11beb0193d9aab780f1ddfa7c2,"Add support for Leaflet.MagnifyingGlass plugin by @​bbecquet. Adds a configurable magnifying glass that displays the area under the cursor at an increased zoom level. See `?addMagnifyingGlass`. (PR #184, still Bhaskar!)",1,98,FALSE,NA
leaflet,83d2e3b1c82690d89b8f72592dd52cc0,"Add support for Leaflet-MiniMap plugin by @​Norkart. Adds a mini map to the corner that can be used to see or change the bounds of the main map. See `?addMiniMap`. (PR #184, Bhaskar again!)",1,99,FALSE,NA
leaflet,5c29054bef5b2fc4f0dfc41b82e283e5,"`addScaleBar` and related functions added, for showing Leaflet's built-in scale bar in one of the corners of the map. (PR #201. Thanks Kent Johnson!)",1,100,FALSE,NA
leaflet,1dae43365fef40d1269f2f67611fc0c0,Fix #242: Compatibility with htmlwidgets 0.6 (thanks byzheng).,1,101,FALSE,NA
leaflet,aba5dd51dc6175fda590b85333a543a8,Initial release,1,102,FALSE,NA
nomnoml,1d332bf364733f31440991d28ea3a652,"This release can potentially cause breaking changes, because of a switch to use `webshot2`. You now need a chromium based browser.",1,1,FALSE,NA
nomnoml,384cd36bce12d2be9ccc70df28be8ead,Update `nomnoml.js` to v1.6.2,1,2,FALSE,NA
nomnoml,697d8964c57f2ec1a5c8c274dfd3336f,"Update from `webshot` to `webshot2`, thus removing the dependency on `phantomjs`",1,3,FALSE,NA
nomnoml,28db9457f1cc045c510425f5af88ec8a,Remove use of `numeric_version()` to comply with changes in R devel.,1,4,FALSE,NA
nomnoml,b8961001a2b851c1f7cb2a5284612d18,Update `nomnoml.js` to v1.5.3,1,5,FALSE,NA
nomnoml,33c27029f11119a1ee39b9cd95a173f0,Fix spurious package startup message,1,6,FALSE,NA
nomnoml,a69ff33b4f4dc3e8252ae4156bb0f08b,Merge PR by @​dmurdoch to add unicode support,1,7,FALSE,NA
nomnoml,4dc0660d0250292c9e7ca258f4c3b8b5,Correctly use `packageStartupMessage()`,1,8,FALSE,NA
nomnoml,ad6be4a14682006d13e5e0509d23d844,Update `nomnoml.js` to version 1.4.0,1,9,FALSE,NA
nomnoml,7254b634792621f902a3abd996b58a81,"Fix CRAN check failures, specifically relaxing the requirement for phantomjs.",1,10,FALSE,NA
nomnoml,40c7b198a17a3592e9b0c325bea41365,"PhantomJS is only necessary for creating PNG files, including PNG output in R Markdown, but not for SVG output or any interactive widgets, e.g. in a shiny app.",1,11,FALSE,NA
nomnoml,2b35d20f51d5fd35f80d9112585e0c95,Update `nomnoml` to v1.3.1 (taking dependency on `graphre`),1,12,FALSE,NA
nomnoml,d38047728a19b675a68d596b1edd5eb4,Add additional tests and improved code coverage,1,13,FALSE,NA
nomnoml,a193271b85e6e86a3d207082c576a7c4,Add `pkgdown` documentation site,1,14,FALSE,NA
nomnoml,5e82b57f3229be1b67e00d6196682f93,"Add `nomnoml_validate()`, an experimental function to validate if a diagram can be parsed. Uses the `V8` package to do this.",1,15,FALSE,NA
nomnoml,c3d1b9bd5b1fc5295d26fae48f7c5c87,"Added ""experimental badge"" to package",1,16,FALSE,NA
nomnoml,e80e790627e6f3cc6d70dc7e39ade15a,Change maintainer to @​andrie,1,17,FALSE,NA
nomnoml,8d3c896d8ad71f9b89087145b097b9cd,Add additional tests,1,18,FALSE,NA
nomnoml,dbdd6e6a8094558cb9e5aa590c6b763c,Update `nomnoml` to version 0.7.2,1,19,FALSE,NA
nomnoml,d11ab3108d7f198c9fc25f8888e6cd9c,Add support for 'svg' output in 'nomnoml()'.,1,20,FALSE,NA
nomnoml,4c4a66b72cfbd076484e8d5a84e30665,Fix issue introducing too much blank space in Rmd docs.,1,21,FALSE,NA
nomnoml,0bd3baa5de3e8ab6e43ab81b360433ec,"Fix duplicate diagrams in Shiny apps (@​andrie, #15).",1,22,FALSE,NA
nomnoml,37663c76086bd9349d52556056f536f9,Use `nomnoml` version 0.2.0,1,23,FALSE,NA
nomnoml,9f9dbf3f0c64d855342f3669d0544188,Support to render PNGs.,1,24,FALSE,NA
nomnoml,008e1a6978bb185f1c5099259ec18f9f,Support to render 'htmlwidgets'.,1,25,FALSE,NA
nomnoml,db82939d2b32601ca43b1dc315f8f93f,Support for 'nomnoml' chunks in R Markdown.,1,26,FALSE,NA
pins-r,1bb0fb08af17a01cfbbd0eaab652e15b,Changed the function signature of `pin_upload()` to be consistent with `pin_write()` i.e. arguments like `tags` must be passed by name and not position (#809).,1,1,FALSE,NA
pins-r,2c77ee41582722d914ec9341a9d8b378,Added example Python code to pin previews for Posit Connect (#806).,1,2,FALSE,NA
pins-r,10c4123d2e9a87879f7de857e62e6e0a,Fixed a bug in how pins with the same name but different owners on Posit Connect were identified (#808).,1,3,FALSE,NA
pins-r,bd9cc959b533a4c5d2a647f2215eebc5,"Fixed a bug in handling folders with duplicate names for Google Drive (#819, @​UchidaMizuki)",1,4,FALSE,NA
pins-r,e6dc58c85c38db898cec233dc8ef254f,Changed the function signature of `pin_write()` so arguments like `type` and `title` must be passed by name and not position (#792).,1,5,FALSE,NA
pins-r,96c3de3503d19bc96cb3790730e8f796,"Removed content and user caches for Connect altogether. Now, we look up usernames and content on the Connect server every time (#793).",1,6,FALSE,NA
pins-r,00b6d2406a70edf5155e5b0104d8e2d9,Added new `urls` item to metadata for a pin (#795).,1,7,FALSE,NA
pins-r,0c592952fc8c370101e7f6de99c12635,Fixed how dots are checked in `pin_write()` to make user-facing messages more clear (#770).,1,8,FALSE,NA
pins-r,54d07d7498c4badd51edbfe9d3ce2d55,Improved documentation about Connect caches (#771) and deleting pin versions (#773).,1,9,FALSE,NA
pins-r,b27756fad8e56c71a5166a2058c79c9c,Added `board_deparse` for `board_url()` (#774).,1,10,FALSE,NA
pins-r,9f1941d3029618f8dc27038647152ef5,"Fixed how `board_gdrive()` handles dribble objects (#780, @​gorkang and #782).",1,11,FALSE,NA
pins-r,5789ffdc946b3ce1a4e622ff44eeb2c3,New environment variable `PINS_CACHE_DIR` controls the location of the default cache path (#748).,1,12,FALSE,NA
pins-r,c65f1edd0ce9eaaae2b5664a36d31f59,Added new board for Google Drive `board_gdrive()` (#749).,1,13,FALSE,NA
pins-r,3477dfb912717b3edee1a997c2a34980,Updated test for new arrow release (#764).,1,14,FALSE,NA
pins-r,954dca9ffce4c135ad22a5894cbb12bb,"`pin_write()` no longer writes identical pin contents by default, and gains a `force_identical_write` argument for writing even when the pin contents are identical to the last version (#735).",1,15,FALSE,NA
pins-r,3cc98dd692ff89b243110e11aad9a9c5,The `print` method for boards no longer calls `pin_list()` internally (#718).,1,16,FALSE,NA
pins-r,3e8a0dcd5d5dc5b44f4c928c6f172584,"`board_s3()` now uses pagination for listing and versioning (#719, @​mzorko).",1,17,FALSE,NA
pins-r,58ab7de0e153262a79b354a19f49d542,"Added `type = ""parquet""` to read and write Parquet files (#729).",1,18,FALSE,NA
pins-r,311beeb74643af3ff342d51cc11ce7cf,Updated error messages and type checking (#731) along with testing strategy (#724).,1,19,FALSE,NA
pins-r,e9d79789e4bd5d5f967d10df6fd0917a,"Added new check for whether a new version is the same as the previous version, as can happen when writing pin versions very quickly (#727).",1,20,FALSE,NA
pins-r,5e7354caeb1168eadcd573fad7072b4f,"Added new `headers` argument for `board_url()`, mostly for authentication, as well as new board for Connect vanity URLs `board_connect_url()` (#732).",1,21,FALSE,NA
pins-r,f11e7968a6e93e8a5bf9501d22a31935,Fixed bug in `cache_prune()` to correctly find caches for `board_url()` (#734).,1,22,FALSE,NA
pins-r,a8ab96ab86fdb5722f7c6fb00b78f78c,"Change the function `board_rsconnect()` to `board_connect()`, following RStudio's rebranding to Posit (#689).",1,23,FALSE,NA
pins-r,4753470ad8b341861d1e552de6e8e136,"Changed `type = ""csv""` to use R's default value for `stringsAsFactors` i.e. `FALSE` (#664).",1,24,FALSE,NA
pins-r,a2dcb2e7744a1422039a5596b69ef804,Functions for viewing legacy API pins in the RStudio Viewer pane are now deprecated (when possible) or removed (#679).,1,25,FALSE,NA
pins-r,766e8f13c5557bd12a2f0d665184f9dd,The functions for accessing Kaggle resource as pins are no longer supported. We recommend you use the Kaggle CLI instead (#698).,1,26,FALSE,NA
pins-r,f5d6443aa8b02f2db471f7b98d5a0100,"Added vignettes describing how to manage custom formats and web-based boards (#631, #685, @​ijlyttle).",1,27,FALSE,NA
pins-r,d491a17dda05c34c1aaccaac145ba9a1,Added new board for Google Cloud Storage `board_gcs()` (#695).,1,28,FALSE,NA
pins-r,eec278c7137f20589776307364bf53c4,Added new `tags` item to metadata for a pin (#677).,1,29,FALSE,NA
pins-r,7779f4073cc0145d39492018f013718e,Improved error message for `pin_versions()` (#657).,1,30,FALSE,NA
pins-r,ad1cdf55bdcb1a0b91f1b3b2f1c851c9,Switched content and user caches for Connect to use environments instead of files on disk. This means caches will no longer persist between sessions but will be much less likely to end up in a broken state (#667).,1,31,FALSE,NA
pins-r,a4b42177725da09a122b2077f017dbbc,"Added `write_board_manifest()` to write a manifest file `_pins.yaml` recording all pins and their versions to the board's root directory. This function only works for boards that are not read-only (#661, based on work of @​ijlyttle).",1,32,FALSE,NA
pins-r,b3963eed77d08dbb6c80e4f4efc77f62,"Updated `board_url()` to handle versions recorded via a manifest file (#681, based on work of @​ijlyttle).",1,33,FALSE,NA
pins-r,01e55570c5a3ad41269ee341a0c76c9b,Updated code preview on Posit Connect (#690).,1,34,FALSE,NA
pins-r,8a471b67004aa5b22b9530c85937aaf0,"The `arrow` package is now suggested, rather than imported (#644, @​jonthegeek).",1,35,FALSE,NA
pins-r,d73b7f18959e41b1687947c38565ac40,"Fixed how Connect usernames are handled in messages, preview, etc (#643).",1,36,FALSE,NA
pins-r,406ad2382565f33d23aa79d59940dce3,"Increased datetime precision to the second, for `pin_versions()` and related functions (#642, @​tomsing1).",1,37,FALSE,NA
pins-r,7076f3fbb376adc26746f6aba4ef9064,"Pass the dots from `pin_write()` through to `s3_upload_file()` and `s3_uploade_yaml()` to support S3 tagging, encryption options, etc for pins (#648, #652, @​fh-mthomson).",1,38,FALSE,NA
pins-r,75975e8a3e78fc7c583f0a55f42f50de,"`board_rsconnect()` now correctly finds the created date for pins (#623, @​bjfletcher).",1,39,FALSE,NA
pins-r,706b5db4b4572adb746947fda0d1a492,"`pin_upload()` now better handles path expansion (#585, @​sellorm).",1,40,FALSE,NA
pins-r,caa0d08872e0ce4283f9c5117a8efd06,"The `pin_reactive_*()` functions now use the hash (rather than the created date) for polling (#595, @​thomaszwagerman).",1,41,FALSE,NA
pins-r,9b443f56b15846ed9769852723345cfd,"`board_azure()` now allows you to set a `path` so that multiple boards can share the same container (#528, @​hongooi73).",1,42,FALSE,NA
pins-r,1ed837263b605cefc3bcf2a206ebcca7,`board_deparse()` is more likely to generate runnable code when used with `board_rsconnect()` (#553).,1,43,FALSE,NA
pins-r,4d706f6415f3ecd80dec996a6c35db51,`legazy_azure()` works once again (#527).,1,44,FALSE,NA
pins-r,00baa4b57eb041bcf23fba03fd5939d4,`legacy_github()` works once again (#549).,1,45,FALSE,NA
pins-r,44b66edeb45d01c9322b6e2b1461c18e,`pin_meta()` now includes pin `name` (#544).,1,46,FALSE,NA
pins-r,adcd527f1ab0cb37d5967ede60bd7ba2,"`board_register()` works better when called directly, due to standardisation of cache paths all computation (#529).",1,47,FALSE,NA
pins-r,06f97729af37d85531e3f82c3f30f75f,Drop add-ins since they're not tested or documented (#525),1,48,FALSE,NA
pins-r,b7bd8c800f9d6aa07d9118bb46f7c856,"`pin_read()` and `pin_write()` replace most uses of `pin_get()` and `pin()`. `pin_write()` has a `type` argument that allows you to choose how to serialise your R objects to disk, allowing you to manage the tradeoffs between speed, generality, and language inter-op, and a `metadata` argument that allows you to store arbitrary metadata (#430).",1,50,FALSE,NA
pins-r,eb94e857e80b8854bb458e2442e1763f,"`pin_download()` and `pin_upload()` are lower-level versions of `pin_read()` and `pin_write()` that work with file paths rather than R objects. They replace the use of `pin()` with a path and eliminate the type-instability in `pin_get()`, which can return either an R object or a character vector of paths.",1,51,FALSE,NA
pins-r,b3a26c72256e8d8e3fe5a991deb19aa3,"`pin_browse()` replaces `board_browse()`, and takes you to a specific pin, either the original source on the internet, or the cached version on your local file system (#435).",1,52,FALSE,NA
pins-r,29d3469cb4b82f5e80216c7da5f06651,"`pin_delete()` replaces `pin_remove()`, and can delete multiple pins (#433).",1,53,FALSE,NA
pins-r,e57f112dea83d22a7dbe071f72a648ea,`pin_list()` lists all pins in a board.,1,54,FALSE,NA
pins-r,22d7a9192f243b36042001539678503a,`pin_meta()` replaces `pin_info()` and retrieves pin metadata (#418).,1,55,FALSE,NA
pins-r,f1ebde6b801eca0cd33ca5ea555a6565,`pin_search()` replaces `pin_find()`. It is much more limited because the previous version was based on assumptions that are not true for many boards.,1,56,FALSE,NA
pins-r,409a523c54eb90ee6f99cd5a679bbabf,`pin_reactive_read()` and `pin_reactive_download()` replace `pin_reactive()`.,1,57,FALSE,NA
pins-r,d731e0675ac1686b5856d635beea3c42,`pin_exists()` reports whether or not a pin exists.,1,58,FALSE,NA
pins-r,6dec573008b60187b8ff3e5f0754fe59,"`pin_version_delete()` allows you to delete a single version. `pin_versions_prune()` (#459) allows you to easily prune old versions keeping either a specified number of versions, or all versions beneath a certain age.",1,59,FALSE,NA
pins-r,adcb360fdafebbdfedc97ef18e9b88a6,`board_azure()` stores data in Azure's blob storage. It is built on top of AzureStor (#474).,1,60,FALSE,NA
pins-r,66f0edb18e5bcb8afc9af27a1edbe9a2,"`board_folder()` is a generalised replacement for the legacy local board. `board_folder()` can store data in any directory, making it possible to share boards using shared network drives or on dropbox or similar. If you using pins casually and don't want to pick a directory, `board_local()` is a variant of `board_folder()` that stores data in a system data directory.",1,61,FALSE,NA
pins-r,8cc49d9d7b2f55ae6441cad183aaacc9,`board_kaggle_dataset()` and `board_kaggle_competition()` allow you to download data from Kaggle. The data is automatically cached so that it's only downloaded when it changes.,1,62,FALSE,NA
pins-r,fa4c077a5ba459daa90dea6d87512481,"`board_ms365()` allow to pin data to MS One Drive and Sharpoint (#498, @​hongooi73).",1,63,FALSE,NA
pins-r,5e68c4173c82dba18d8573e471774860,"`board_rsconnect()` shares data on RStudio connect. This board supports both modern and legacy APIs, so that you and your colleagues can use a mixture of pins versions as you transition to pins 1.0.0. Note that the compatibility is one directional: you can `pin_read()` pins created by `pin()`, but you can't `pin_get()` pins created by `pin_write()`.",1,64,FALSE,NA
pins-r,f99a5ad6aae738cba4a8f1e97e91c4f3,`board_s3()` stores data in Amazon's S3 service. It is built on top of paws.,1,65,FALSE,NA
pins-r,b5c1a868abbbc9812d92695ac478f4fc,"`board_url()` lets you create a manual board from a vector of URLs. This is useful because `pin_download()` and `pin_read()` are cached, so they only re-download the data if it has changed since the last time you used it (#409). This board is a replacement for `pin()`'s ability to work directly with URLs",1,66,FALSE,NA
pins-r,8ad59f1e5e55b6558249d151333deec2,All board objects now have class beginning with `pins_board_` and also inherit from common superclass `pins_board`.,1,67,FALSE,NA
pins-r,803203f10d559405fc68c4b45e213896,Pins no longer works with the connections pane. This automatically registered code tended to be either dangerous (because it's easy to accidentally leak credentials) or useless (because it relied on variables that the connection pane doesn't capture).,1,68,FALSE,NA
pins-r,0c48f98c09975a0e19f4131dad75d4c0,Pinned data frames are longer converted to tibbles.,1,69,FALSE,NA
pins-r,0200184cd1c75ac3ef0c40515cfefd1c,"The ""packages"" board is no longer registered by default; if you want to use this you'll need to register with `board_register(""packages"")`. It has been radically simplified so that it will no longer download packages, and it `pin_find()` now searches all packages that you have installed, rather than a stale snapshot of data in CRAN packages. The CRAN files dataset has been removed from the package.",1,70,FALSE,NA
pins-r,2ac874ee6fdd46e2067e501d6af6e886,`board_browse()` now works with local boards.,1,71,FALSE,NA
pins-r,ea446e85b100f964102c180787fd74e2,`board_rsconnect()` will automatically connect to the current RSC pin board when run inside RSC itself (assuming you have version 1.8.8 or later) (#396).,1,72,FALSE,NA
pins-r,0825ca00d7e1e7527e7f6609ec4b5e22,"`cache_browse()`, `cache_info()`, and `cache_prune()` provide some basic tooling around the local pins cache maintained by pins (#438).",1,73,FALSE,NA
pins-r,58e08c404ba9dc305d53444d7cc59797,`pin_fetch()` has been removed,1,74,FALSE,NA
pins-r,be765fd893a56da8fef27115f0504679,`option(pins.invisible)` is now defunct and ignored.,1,75,FALSE,NA
pins-r,5b80de057096ff24e3e4b95fca187bfd,You can no longer switch from a versioned pin to an unversioned pin without first deleting the pin (#410).,1,76,FALSE,NA
pins-r,2a58ce6e6f09fc564772d197e376877d,Support downloading remote files when service returns incompatible `data.txt` file (#310).,1,77,FALSE,NA
pins-r,24dc413df680f35a14b96499c8dea7cc,Support for pins over 100MB in Windows systems (#313).,1,78,FALSE,NA
pins-r,4ddcb1db0f002c773ed580fb2a52b5ff,Avoid Windows crashing in `pin()` under some locales (#127).,1,79,FALSE,NA
pins-r,7e74268f77d27de28410290e7a38baa2,Silenced 'no encoding supplied' warning (#330).,1,80,FALSE,NA
pins-r,998fd698a0c9561fd48f1792f9392e33,`pin_find()` no longer searches text with an undocumented regular expression syntax (#270).,1,81,FALSE,NA
pins-r,f8a1fd630f183a7b557f52bbfe4a8193,Default to using HTTPS in S3 boards (#304).,1,82,FALSE,NA
pins-r,450a4d98adf02ccef46521af519e4f82,Support for AWS V4 signatures when registering S3 boards with `region` parameter (#304),1,83,FALSE,NA
pins-r,b8c68c74357ffe6e63308beef65a9a3a,"Support for `path` to register a board under a subpath for Azure, DigitalOcean, Google Cloud and S3 boards (#200).",1,84,FALSE,NA
pins-r,43e7c79b812cc57bfe893cc5dac93840,"Avoid creating pins named with unsupported characters for Azure, DigitalOcean, Google Cloud and S3 boards (#193).",1,85,FALSE,NA
pins-r,df3474d03d7d2703d0f1da392b531b4c,Properly store relative paths when `path` parameter is specified in GitHub boards (#199).,1,86,FALSE,NA
pins-r,9a3d912ce49b9077fbbdcf2be799319c,Add support for repos with a 'main' branch as default (#336).,1,87,FALSE,NA
pins-r,89374bf18b1bf12ac065c8f39019a5af,Add support for large file in private repo releases (#292).,1,88,FALSE,NA
pins-r,4491c2d9fd91694aeada81e6fb6e6deb,"When a board is registered with `versions = FALSE`, GitHub tags are also delete when large files are present (#285).",1,89,FALSE,NA
pins-r,f686deb9a86cc88a2615f3481cf466a6,Invalid 'account' or 'server' parameters show proper errors (#296).,1,90,FALSE,NA
pins-r,9082118128c4191b63df0feec7cff5fe,"Increase total entries retrieved with `pin_find()`, configurable with `pins.search.count` (#296).",1,91,FALSE,NA
pins-r,55f78ace995edda0c53869eaf1a41795,Fix regression introduced in pins 0.4.2 (#253) preventing users from collaborating on existing pins they have access to (#302).,1,92,FALSE,NA
pins-r,6653d3238a28c23dcc43133d3bca28a5,Avoid deleting pin when upload fails to avoid deleting versions (#306).,1,93,FALSE,NA
pins-r,796cf9a7c89497d4c8a98648940fbdff,Support re-creating pins from pins not previously properly updated (#308).,1,94,FALSE,NA
pins-r,41b50bf7e7f64db05b79694802e8d0da,Adjust pin preview to only display 1K rows instead of 10K (#315).,1,95,FALSE,NA
pins-r,ccadb0dd0adf6c3541ed1f98f20fe909,Avoid changing columns names on data frame preview (#190).,1,96,FALSE,NA
pins-r,630caab8ce921c6b1e5819abce95badd,Improve error message when token authentication fails (#327).,1,97,FALSE,NA
pins-r,0f2bbae38d86068e5b15ee1f77808c73,"For files bigger than 100MB `pin()` creates symlinks to speed up uploads, can be configured using the `pins.link.size` option (#273).",1,98,FALSE,NA
pins-r,363c0453dbbca06ea208cc5d739aa59a,When using `pin(zip = TRUE)` the zip no longer contains local patahs (#277).,1,99,FALSE,NA
pins-r,d127dc04b7d5750d92eb15963b4ab1be,Disable caching on `data.txt` to support creating multiple pins at once (#275).,1,100,FALSE,NA
pins-r,96f4ce84a1b760e78c225562ceb61b18,Prevent connections pane from hanging when multiple pins are updated at once (#280).,1,101,FALSE,NA
pins-r,78a3d37a0b84d7077cd230ce3d9730c6,Support for `pin_get(download = FALSE)` to avoid checking for updates.,1,102,FALSE,NA
pins-r,9dac627f5c146458486a722014efc318,Support for servers with mismatched `http` vs `https` protocols.,1,103,FALSE,NA
pins-r,528ec4570f62c343cef72c3e045f57e4,Make use of `RSCONNECT_TAR` when running a report inside RStudio Connect (#293).,1,104,FALSE,NA
pins-r,3024cb5172af05d958d158ccb62545d6,Properly export `board_pin_versions` to allow custom boards extending versions (#265).,1,105,FALSE,NA
pins-r,d2612e81da70c0bc3a4e0281a3f098db,Fix regression creating pins when using a brand new cloud board (#268).,1,106,FALSE,NA
pins-r,caedc8325e9e2cc6fa70d08eef77bc71,Fix issue removing pins with custom domain names from cloud boards (#234).,1,107,FALSE,NA
pins-r,01d533af9eec0326c4b314d5fb3e8609,Fix warning when using `pin()` against storage locations with custom domain name (#237).,1,108,FALSE,NA
pins-r,3b212a079eafc176ee588ecd92e0d2b8,Fix issue where datatxt was not refreshing deleted entries (#239).,1,109,FALSE,NA
pins-r,2f2ff16f39987bdeb2e705da695badbd,Support for `versions = FALSE` in `board_register()` to avoid using too much space when creating pins (#245).,1,110,FALSE,NA
pins-r,7eb5d6f67eeb8e3fcbb124caba43e673,"Prevent administrators from overriding pins they don't own, unless the pin is specified as `user/name` (#253).",1,111,FALSE,NA
pins-r,6c43ec57cf33d047388ab96b78315771,Support to connect to servers that have a redirect configured when the full server URL is not specified in `board_register()` (#256).,1,112,FALSE,NA
pins-r,dcab7282364ebcbf0f9efb974656c15a,Throw error when multiple accounts are associated to the same server (#261).,1,113,FALSE,NA
pins-r,2e88ab4cb8060ca91a6a4644ad8cd1fb,"When running in production environments (which usually set the `R_CONFIG_ACTIVE` environment variable), avoid using shared caches.",1,114,FALSE,NA
pins-r,8140998af7e867789ccf2d24c1248ff8,Fix `pin()` failing to update cache when server returns `NULL` etag.,1,115,FALSE,NA
pins-r,5acee52dbaa1c9e6ad3caa644e4b4132,Support for `custom_metadata` in `pin()` to allow saving custom fields in `data.txt` file.,1,116,FALSE,NA
pins-r,c51731c8e46c9be217a970e3f3e7f9a4,Improve performannce for `pin()` from URLs containing large files that are already been cached prerviously by `pin()` (#225).,1,117,FALSE,NA
pins-r,925fe24441ac25fa6ea6987d2d1abeeb,Avoid showing upload or download progress when creating R Markdown documents and other non-interactive use cases (#227).,1,118,FALSE,NA
pins-r,ce0d0ac4dcaf2349522bcba0f43d1a12,"When pin(url) fails and local cache exists, produce warning and retrieve cached version (#231).",1,119,FALSE,NA
pins-r,a05d1d318545ccc08e5827f95ed02257,Support for `pin(zip = TRUE)` to create a zip file of the given path before creating the pin (#232).,1,120,FALSE,NA
pins-r,908a984dc53b8c2affc18ab1ae5dedca,Fix when overriding pin with corrupt metadata.,1,121,FALSE,NA
pins-r,3d5721386a3753e166f6ecdc346a8422,Avoid using shared caches when running inside RStudio Connect.,1,122,FALSE,NA
pins-r,53c0f79a664f26de52708f904a459db1,Fixed 'invalid uid' warning when creaating pin undner some Linux servers (#263).,1,123,FALSE,NA
pins-r,62956e11fe54f6f4be03a227d1119d86,Support to find and download competition datasets.,1,124,FALSE,NA
pins-r,e401d8aff846bbaf5f06b63db7da9d29,Support for versioning in all boards.,1,125,FALSE,NA
pins-r,2e2618a269b07ad64a4ba969400f369c,Support for DigitalOcean board.,1,126,FALSE,NA
pins-r,27d66495669f3479b327b4c70e8b3e8b,Finding pins with `pin_find()` sort results by default (#201).,1,127,FALSE,NA
pins-r,e30cd6b3e2a3009efd6f10c628b8ede4,Avoid `incomplete final line found` warning error wheen reading manifests.,1,128,FALSE,NA
pins-r,f7e56d614b2a2da394a534612013bfab,Support for using `pin()` across multiple concurrent processes (#182).,1,129,FALSE,NA
pins-r,4f97df47e240b7bf6db0b5a9a8ede071,"Support in `pin_get()` to download arbitrary files from cloud boards like Azure, DigitalOcean, GitHub, Google Cloud, RStudio Connect, and S3.",1,130,FALSE,NA
pins-r,c88e6c8e1ef838841fbf86326fe668f5,Fix issue where http HEAD requests could tgimeout and prevent pin from downloading in very slow connections.,1,131,FALSE,NA
pins-r,516261b6bb0d00973ac5fdeb2dc46156,Support `access_type` parameter for RStudio Connect.,1,132,FALSE,NA
pins-r,e610c202cedb56afd3e2333ee63e03b6,`pin()` now refreshes the connections pane.,1,133,FALSE,NA
pins-r,e38f0c850bfd47f89bcc9789b3caf516,`pin_remove()` now refreshes the connections pane.,1,134,FALSE,NA
pins-r,cd14dfed46a6e0a84731e746087ea1ad,Support for `code` parameter in `pin()` to customize R code used in the UI to retrieve the pin (#77).,1,135,FALSE,NA
pins-r,4ec283fc15a8b17f7a1f48592840644c,Improve error message for `pin_get()` with duplicate names (#171).,1,136,FALSE,NA
pins-r,64197e882ef66805fea9bd81ce2abd24,Fix board register error when using URL with ports (#195).,1,137,FALSE,NA
pins-r,fe36b05b1e7e8155ad28ef049b59c861,Enable retrieving public pins without authentication (#83).,1,138,FALSE,NA
pins-r,03f39d3c875c494e9bae3c8b7989ad60,Support for `versions = FALSE` in `board_register()` to also delete release files when pin is removed (#91).,1,139,FALSE,NA
pins-r,920aad01a5aa72e463dac9c313b5deb6,Support for `versions = FALSE` in `board_register()` to avoid creating versioned GitHub releases (#197).,1,140,FALSE,NA
pins-r,f505be0985dcc5f9da7bb826decef967,Support for committing all github files with a single commit (#197).,1,141,FALSE,NA
pins-r,2c2b7ba8937e769a54b2d584a1f9aac7,Support for custom GitHub hosts including GitHub Enterprise using the `host` parameter in `board_register_github()` (#163).,1,142,FALSE,NA
pins-r,e6ef4e22b1bb8cfa7e0d6bcd226aa6e7,"Using `pin()` now searches for `data.txt` files in URLs when the URL contains no file extension, behavior can be turnned off with the `pins.search.datatxt` option.",1,143,FALSE,NA
pins-r,455f0f8cb10ad9db694128dc8bc17bd5,`pin_info()` adds support for `metadata` parameter to avoid retrieving pin contents.,1,144,FALSE,NA
pins-r,86f949e1353c3bd1bc0a080903ffe596,"Added support for `host` parameter to configure ""s3.amazonaws.com"" to custom locations.",1,145,FALSE,NA
pins-r,7ff949f48c9bbcb3f55a6c14b6eb666d,Fix regression uploading large datasets as release files.,1,146,FALSE,NA
pins-r,119e6e9671d9794745a66fcaac6e27f1,`pin_info()` prints long character strings in their own line.,1,147,FALSE,NA
pins-r,c540f95a151ebf7d3dbfe986837c13fc,"Fixed issue in `pin_remove()` for S3, Azure, GCloud, Google and website boards (#138).",1,148,FALSE,NA
pins-r,de77036d98b704ea997d0fd5dba1d271,Fixed issue when pinning complex data frames with nested lists (#142).,1,149,FALSE,NA
pins-r,c2f4ea41db0021d4bb54dd4877ddf4f7,Added missing `key` parameter in `board_register_azure()`.,1,150,FALSE,NA
pins-r,dff09cc8c4e4c9538c619acf448c8d5c,Fixed connection suggested code when caused by `pin_find()` (#137).,1,151,FALSE,NA
pins-r,d383191f2f25aff1def59d294fe5d211,Fixed connection launcher for Azure connections.,1,152,FALSE,NA
pins-r,43bba49ba574bc892258eac4bb3f4ae7,Fix issue uploading large pins causing `is.character(type) is not TRUE` error.,1,153,FALSE,NA
pins-r,8a50aae25300a570d648552573b5dd45,Fix issue affecting boards registered with trailing slash (#151).,1,154,FALSE,NA
pins-r,84c4c2a84c447a6424d1e834f0fa3d03,Improve error messages when a pin fails to be created (#149).,1,155,FALSE,NA
pins-r,605185afc8b1b77f8fb02470a4320c25,"Added support for `CONNECT_API_KEY` and `CONNECT_SERVER` in place of `RSCONNECT_API` and `RSCONNECT_SERVER`, which they are still supported for backwards-compatibility.",1,156,FALSE,NA
pins-r,7cf2712b2229ce772b4af6ffb88622e8,Support for Azure board.,1,157,FALSE,NA
pins-r,08920bf345c3899fe4c676cb90837bfc,Support for Google Cloud board.,1,158,FALSE,NA
pins-r,0ed50cc17dc636c7dfe1c553beada0f8,Support for S3 board.,1,159,FALSE,NA
pins-r,5fe6b3cfec8253aa60e60ef4b046a8bd,"`pin()` extracts URLs that end in `.gz` and `zip`, which can be disabled with `pin(""<url>"", extract = FALSE)`.",1,160,FALSE,NA
pins-r,efba00ab3d547a8b31c4cc32f4d5b321,"`pin()` no longer prints the pin, you can revert this behavior with `options(pins.invisible = FALSE)` (#122).",1,161,FALSE,NA
pins-r,e5fa15d8782ebf88273fdadf4b026f95,Show upload progress for files larger than 10mb.,1,162,FALSE,NA
pins-r,4a532987a31dbde6a5dc496e67eb6991,Avoid changing `data.table` when using `pin()` and `get_pin()`.,1,163,FALSE,NA
pins-r,f8a8295888e68f9ec634db3c0b35645e,Support for `pin_info()` to describe a pin and `extended = TRUE` in `pin_find()` to show all extended information about each pin.,1,164,FALSE,NA
pins-r,099104bc0951888ba5a7272c9831e959,"Support for `extract` parameter in `pin_get()`, `pin()`, and `pin_reactive()` to override default file extraction behavior.",1,165,FALSE,NA
pins-r,534184cfd340a911762e6a64e93cea89,Support to extract gzip files when the `R.utils` package is installed.,1,166,FALSE,NA
pins-r,85d457efdbf1348fe5f8e7797f206f7e,Show download progress for files larger than 10mb.,1,167,FALSE,NA
pins-r,243a1200f1b4503b8dc027aaeb6a779f,Support for `I()` to force a pin to be created without additional overhead of exporting CSV and other enhancements (#73).,1,168,FALSE,NA
pins-r,0cd631eaec5343a45c9066ad578b4940,Support creating automatic `name` when using `pin()` and multiple URL.,1,169,FALSE,NA
pins-r,1b410321a5ba6e958d66de4f644490b0,"Avoid ""cannot create dir"" warning in systems with an empty cache folder.",1,170,FALSE,NA
pins-r,90ffcc33e9e295a70a164b65d0c9ba35,Gracefully handle errors when a pin's preview can't be created.,1,171,FALSE,NA
pins-r,728177d8a62420ef62646f053dfd1bb0,Website boards now support the browse menu item in the connection.,1,172,FALSE,NA
pins-r,a5bb3e398415cdb84b69021c7e9f97d8,Fix data frames previewing character columns with special characters.,1,173,FALSE,NA
pins-r,5ec35a808b1d7793f2d90d045582f666,Fix connection code when a board is registered automatically.,1,174,FALSE,NA
pins-r,2cc6400604d560e88bd427dfc023b22c,Fix issue where `pin_find()` would not show all available pins.,1,175,FALSE,NA
pins-r,137e25a38db445d1a80b0d16eb2404d6,Fix issue where RStudio Connections pane would not show all pins.,1,176,FALSE,NA
pins-r,cff39be16cbcccc827480b5c377e90d2,Store all downloaded content under user subfolder insited rsconnect cache.,1,177,FALSE,NA
pins-r,9045137067b0ffe51c1ea65e3715679b,Removed `pin_find()` workaround for beta rsconnect server where searching was causing timeout.,1,178,FALSE,NA
pins-r,16a3192c38914ec468fdf928e98b3692,Fix for RStudio Connect servers where `/content/` is not used in content URLs.,1,179,FALSE,NA
pins-r,2ba74e83d102cddf223ca0b594fcac9c,Fix issue expanding pins columns in RStudio for pins with similar names in RStudio Connect boards.,1,180,FALSE,NA
pins-r,e3a57f31785bebd82dcdfbbf9e4b5ed0,Fix issue removing pins with similar names in RStudio Connect boards.,1,181,FALSE,NA
pins-r,7b1ae3ee608c061fc9a8d79f5ee3616c,Support for Python 3.,1,182,FALSE,NA
pins-r,c1bf40d495002cc91ff465db2bc2ce98,The `name` parameter in `board_register_datatxt()` is now optional.,1,183,FALSE,NA
pins-r,838fc990d1b4c643af386df683311a0f,Fix in `pin_find()` to properly search desecription files.,1,184,FALSE,NA
pins-r,b070065cefd8ba416c659f4d2c162206,Various fixes for GitHub boards using the `path` parameter when registering the board (#121).,1,185,FALSE,NA
pins-r,6481bb085048d39577f922134b99e71d,Support for retrieving pins shared by others in RStudio Connect boards.,1,186,FALSE,NA
pins-r,9bd7209e5ee0641985bbf6bd9f28eb4d,Support for RStudio Connect servers running under a subpath in the server.,1,187,FALSE,NA
pins-r,2f5052b85b5adbeafbb75c8052c107b9,Add support for `RSCONNECT_SERVER` environment variable to ease configuration of automated RStudio Connect reports.,1,188,FALSE,NA
pins-r,962201b9b8d4732c0662340642555a00,Fix intermittent failure to retrieve pins from RStudio Connect boards while creating them.,1,189,FALSE,NA
pins-r,4dd6e73c840b3a01c5a04f4e070da003,Fix in RStudio Connect boards to retrieve pins that match other pin names (#45).,1,190,FALSE,NA
pins-r,8ede87c5983d2cb8b3c1e9f82533bd2e,Fix for data frames with nested data frames in rsconnect boards (#36).,1,191,FALSE,NA
pins-r,fec5919c4dac2f8b4ebbf593aefcebf4,`board_register_github()` now checks for the repo to exist (#63).,1,192,FALSE,NA
pins-r,e5e58e8e9d78775fa6d1372109725c4a,"Adjusted max upload file to 25mb to avoid ""server error"" in the API, larger files than 25mb uploaded as release files. This can be configured using the `pins.github.release` option, which deefaults to 25.",1,193,FALSE,NA
pins-r,4e5313bdac55b4aafc5fc4fbed6925d8,Allow overriding GitHub pin over a pin that partially failed to be created.,1,194,FALSE,NA
pins-r,3e5af42b736c2e445451640afe8fad3f,"Using a board will attempt to automatically register, such that `pin(iris, board = ""rsconnect"")` would work for the default configuration even when the board is not explicitly registered (#50).",1,195,FALSE,NA
pins-r,65e3dcf105fc75475a737d63bf8dbc7c,"Registers ""local"" board by default, you no longer need to explicitly run `board_register_local()` (#56).",1,196,FALSE,NA
pins-r,76a85dc874fb75313af8d9502aee4e46,"Make use of the `rappdirs` package to define the default cache path, replaces `~/.pins`. Use `board_cache_path()` to retrieve default cache path.",1,197,FALSE,NA
pins-r,ee6d16a0317ab5a4161de9b1ec9f8cae,Fix for data.txt boards created from GitHub boards using large files.,1,198,FALSE,NA
pins-r,31a907008dcc16fa653c15aae10864aa,Support to upload files larger than 50mb in GitHub boards as release files.,1,199,FALSE,NA
pins-r,18672208909bf81ececbb03ce98d04ad,Fix CRAN request to explicitly opt-in to use local home path as cache by running `board_register_local()`.,1,200,FALSE,NA
pins-r,49901bccd9e51552f8b781fbc2d56851,Fix error when retrieving pins from Kaggle boards (#31).,1,201,FALSE,NA
pins-r,34d16ec3fd66830cd8c2a8178218e8a6,Support for large files in GitHub board (#30).,1,202,FALSE,NA
pins-r,5055639b785c11e6293953fd9fae6ec6,Support for local board.,1,203,FALSE,NA
pins-r,1b47f36e41466176cd3561abb617b79d,Support for Kaggle board.,1,204,FALSE,NA
pins-r,f19de66c549afbc28011415012df3a63,Support for packages board.,1,205,FALSE,NA
pins-r,35b404a1e1c31934dda4d103174db8a1,Support for RStudio Connect board.,1,206,FALSE,NA
pins-r,b80c4f1c386dd41840131270d1a2f213,Support for GitHub board.,1,207,FALSE,NA
pins-r,c3cfb10c2947d6c13222edfdcf878e62,Support for website board.,1,208,FALSE,NA
plumber,1f550821650c07d13a6d8132c2c5206e,Allow to set plumber options using environment variables `?options_plumber`. (@​meztez #934),1,1,FALSE,NA
plumber,968c59deaedb8de94f67ee67374203ef,Add support for quoted boundary for multipart request parsing. (@​meztez #924),1,2,FALSE,NA
plumber,93b500ec88be8923a2054dca283de2d8,"Fix #916, related to `parseUTF8` return value attribute `srcfile` on Windows. (#930)",1,3,FALSE,NA
plumber,974899b6ba106fce785d5164851b6c84,Update docs for CRAN (#878),1,4,FALSE,NA
plumber,42a16b83196051513bc15a9ec19d1828,First line of endpoint comments interpreted as OpenAPI 'summary' field and subsequent comment lines interpreted as 'description' field. (@​wkmor1 #805),1,5,FALSE,NA
plumber,408a3ac2f0c58d58b4db4e95446c9ca2,Static file handler now serves HEAD requests. (#798),1,6,FALSE,NA
plumber,d7f166952ef2d7d9c8874b2617eece55,"Introduces new GeoJSON serializer and parser. GeoJSON objects are parsed into `sf` objects and `sf` or `sfc` objects will be serialized into GeoJSON. (@​josiahparry, #830)",1,7,FALSE,NA
plumber,adbcf99fa5841a9b05b9f53672d8b8a8,Add new Octet-Stream serializer. This is a wrapper around the Content Type serializer with type `application/octet-stream`. (#864),1,8,FALSE,NA
plumber,2f18734a23902a0a20d6e9269ad2461c,Update feather serializer to use the arrow package. The new default feather MIME type is `application/vnd.apache.arrow.file`. (@​pachadotdev #849),1,9,FALSE,NA
plumber,5315b3af1281fd1995af54bd692a19a4,Add parquet serializer and parser by using the arrow package (@​pachadotdev #849),1,10,FALSE,NA
plumber,8b3c76bf143d08ecf6f203ff706b0395,Updated example `14-future` to use `promises::future_promise()` and added an endpoint that uses `{coro}` to write *simpler* async / `{promises}` code (#785),1,11,FALSE,NA
plumber,84a582ebd36582af534c58944e2e3072,Add `path` argument to `pr_cookie()` allowing Secure cookies to define where they are served (@​jtlandis #850),1,12,FALSE,NA
plumber,8355c5c156569be58c6f86d50d0557b0,OpenAPI specification collision when using `examples`. (@​meztez #820),1,13,FALSE,NA
plumber,01d2a60f26a7d14bb317e7ad4f79aef8,Static handler returns Last-Modified response header. (#798),1,14,FALSE,NA
plumber,f97c001ffaffe30ba52b21dd3d7549af,"OpenAPI response type detection had a scoping issue. Use serializer defined `Content-Type` header instead. (@​meztez, #789)",1,15,FALSE,NA
plumber,064c64def8ea420b5e1532c4bcaf4a68,The default shared secret filter returns error responses without throwing an error. (#808),1,16,FALSE,NA
plumber,690ef65de413c15971ae88c37f4a30d9,"Remove response bodies (and therefore the Content-Length header) for status codes which forbid it under the HTTP specification (e.g. 1xx, 204, 304). (@​atheriel #758, @​meztez #760)",1,17,FALSE,NA
plumber,77afa93a935181ebe4605b479b7ab29a,Decode path URI before attempting to serve static assets (@​meztez #754).,1,18,FALSE,NA
plumber,f42e7abb215469fd551bb8d96b13c3f9,"Force json serialization of endpoint error responses instead of using endpoint serializer. (@​meztez, #689)",1,19,FALSE,NA
plumber,02d57e89bc15e5cd0ffab7a65d9a9e49,"When plumbing a Plumber file and using a Plumber router modifier (`#* @​plumber`), an error will be thrown if the original router is not returned. (#738)",1,20,FALSE,NA
plumber,e56e2f7d5bf89f1025a27fb67cba47ac,"`options_plumber()` now requires that all options are named. If no option name is provided, an error with be thrown. (#746)",1,21,FALSE,NA
plumber,4b9ced4848380f40b33b92b0a76c7cba,"Added option `plumber.trailingSlash`. This option (which is **disabled** by default) allows routes to be redirected to route definitions with a trailing slash. For example, if a `GET` request is submitted to `/test?a=1` with no `/test` route is defined, but a `GET` `/test/` route definition does exist, then the original request will respond with a `307` to reattempt against `GET` `/test/?a=1`. This option will be *enabled* by default in a future release. This logic executed for before calling the `404` handler. (#746)",1,22,FALSE,NA
plumber,afca519538a510cd0026b74b2205ebb9,Added an experimental option `plumber.methodNotAllowed`. This option (which is enabled by default) allows for a status of `405` to be returned if an invalid method is used when requesting a valid route. This logic executed for before calling the default `404` handler. (#746),1,23,FALSE,NA
plumber,206b430b5cbb456b0158768e75cd18c8,Passing `edit = TRUE` to `plumb_api()` will open the API source file. (#699),1,24,FALSE,NA
plumber,23607c1efacf8316824b45845995a796,OpenAPI Specification can be set using a file path. (@​meztez #696),1,25,FALSE,NA
plumber,2bfc83ade36defb6f9a3b91a4de8d8c0,Guess OpenAPI response content type from serializer. (@​meztez #684),1,26,FALSE,NA
plumber,461f9cefe90233021e91b43fda157dec,"Undeprecated `Plumber$run(debug=, swaggerCallback=)` and added the parameters for `Plumber$run(docs=, quiet=)` and `pr_run(debug=, docs=, swaggerCallback=, quiet=)`. Now, all four parameters will not produce lingering effects on the `Plumber` router. (@​jcheng5 #765)",1,27,FALSE,NA
plumber,461f9cefe90233021e91b43fda157dec,• Setting `quiet = TRUE` will suppress routine startup messages.,2,28,FALSE,"Undeprecated `Plumber$run(debug=, swaggerCallback=)` and added the parameters for `Plumber$run(docs=, quiet=)` and `pr_run(debug=, docs=, swaggerCallback=, quiet=)`. Now, all four parameters will not produce lingering effects on the `Plumber` router. (@​jcheng5 #765)"
plumber,461f9cefe90233021e91b43fda157dec,"• Setting `debug = TRUE`, will display information when an error occurs. See `pr_set_debug()`.",2,29,FALSE,"Undeprecated `Plumber$run(debug=, swaggerCallback=)` and added the parameters for `Plumber$run(docs=, quiet=)` and `pr_run(debug=, docs=, swaggerCallback=, quiet=)`. Now, all four parameters will not produce lingering effects on the `Plumber` router. (@​jcheng5 #765)"
plumber,461f9cefe90233021e91b43fda157dec,• Setting `docs` will update the visual documentation. See `pr_set_docs()`.,2,30,FALSE,"Undeprecated `Plumber$run(debug=, swaggerCallback=)` and added the parameters for `Plumber$run(docs=, quiet=)` and `pr_run(debug=, docs=, swaggerCallback=, quiet=)`. Now, all four parameters will not produce lingering effects on the `Plumber` router. (@​jcheng5 #765)"
plumber,461f9cefe90233021e91b43fda157dec,"• Set `swaggerCallback` to a function which will be called with a url to the documentation, or `NULL` to do nothing. See `pr_set_docs_callback()`.",2,31,FALSE,"Undeprecated `Plumber$run(debug=, swaggerCallback=)` and added the parameters for `Plumber$run(docs=, quiet=)` and `pr_run(debug=, docs=, swaggerCallback=, quiet=)`. Now, all four parameters will not produce lingering effects on the `Plumber` router. (@​jcheng5 #765)"
plumber,9c90e747f07d407cafbe5a4961a24683,"To update a `PlumberEndpoint` path after initialization, call the new `PlumberEndpoint$setPath(path)`. This will update internal path matching meta data. (Active bindings were not used to avoid breaking changes.) (@​blairj09 #770)",1,32,FALSE,NA
plumber,018f170cb258bff975b386dfccc2477f,`PlumberStep` (and `PlumberEndpoint` and `PlumberFilter`) received a new field `$srcref` and method `$getFunc()`. `$srcref` will contain the corresponding `srcref` information from original source file. `$getFunc()` will return the evaluated function. (#782),1,33,FALSE,NA
plumber,f30ee75bcec33f50c858100e5f5cfd7d,Allow for spaces in `@​apiTag` and `@​tag` when tag is surrounded by single or double quotes. (#685),1,34,FALSE,NA
plumber,cfbe1a692ad2fe3ed342d2c0c078f6a8,Ignore regular comments in block parsing. (@​meztez #718),1,35,FALSE,NA
plumber,cf139e2f7966c96eec09ac8f9aa16b9d,"Block parsing comments, tags and responses ordering match plumber api ordering. (#722)",1,36,FALSE,NA
plumber,50ff99865c7252f4ae765d3e3f12a55c,Fixed bug where `httpuv` would return a status of `500` with body `An exception occurred` if no headers were set on the response object. (#745),1,37,FALSE,NA
plumber,e2f21f55ee85fb8487372b9a2836e6b4,Fixed bug where all `pr_*()` returned invisibly. Now all `pr_*()` methods will print the router if displayed in the console. (#740),1,38,FALSE,NA
plumber,1c13310d248dc31b933e683a273c51f4,"When calling `Plumber$handle()` and defining a new `PlumberEndpoint`, `...` will be checked for invalid names. (@​meztez, #677)",1,39,FALSE,NA
plumber,7624f6f453b31f7bdc540d2f35bdc06c,"`/__swagger__/` now always redirects to `/__docs__/`, even when Swagger isn't the selected interface. Use `options(plumber.legacyRedirects = FALSE)` to disable this behavior. (@​blairj09 #694)",1,40,FALSE,NA
plumber,54b579a88868b71636a22cbc90e26d1c,Fixed `available_apis()` bug where all packages printed all available APIs. (@​meztez #708),1,41,FALSE,NA
plumber,fd8b8f9a1588c9cdc3aa7b50c839340f,Fixed Plumber `$routes` resolution bugs. Routes are now returned in lexicographical order. (@​meztez #702),1,42,FALSE,NA
plumber,6b10fc60c73af9042b9522f296fb1c29,Plumber will now display a circular reference if one is found while printing. (#738),1,43,FALSE,NA
plumber,595569fbd713fe3ca820a14a7b02a1ed,"Changed `future::plan()` from `multiprocess` to `multisession` in example API `14-future` as ""Strategy 'multiprocess' is deprecated in future (\>= 1.20.0)"". (#747)",1,44,FALSE,NA
plumber,55d45dc1da504a0ccdf05542985cd9e0,Setting options `plumber.docs.callback` to `NULL` will also set deprecated but supported option `plumber.swagger.url`. (#766),1,45,FALSE,NA
plumber,735bdf7835f370d56339e84326a6fa3c,"Added support for promises in endpoints, filters, and hooks. This allows for multi-core execution when paired with `future`. See `plumb_api(""plumber"", ""13-promises"")` and `plumb_api(""plumber"", ""14-future"")` for example implementations. (#248)",1,46,FALSE,NA
plumber,0e623e6660c901ab28d819cb101e9d81,"Added a Tidy API for more natural usage with magrittr's `%>%`. For example, a plumber object can now be initiated and run with `pr() %>% pr_run(port = 8080)`. For more examples, see here (@​blairj09, #590)",1,47,FALSE,NA
plumber,dde80e8f0959954de4cecbb6f1a3a4ab,"Added support for `#' @​plumber` tag to gain programmatic access to the `plumber` router via `function(pr) {....}`. See `system.file(""plumber/06-sessions/plumber.R"", package = ""plumber"")` and how it adds cookie support from within `plumber.R`. (@​meztez and @​blairj09, #568)",1,48,FALSE,NA
plumber,1c90b5a6d2c0ece775ca3ef8787460b3,"Added `plumb_api()` for standardizing where to locate (`inst/plumber`) and how to run (`plumb_api(package, name)`) plumber apis inside an R package. To view the available Plumber APIs, call `available_apis()`. (#631)",1,49,FALSE,NA
plumber,97d19871d8c21664d4072181679d890c,"Improved argument handling in Plumber Endpoint route definitions. See `system.file(""plumber/17-arguments/plumber.R"", package = ""plumber"")` to view an example with expected output and `plumb_api(""plumber"", ""17-arguments"")` to retrieve the api. Improvements include:",1,50,FALSE,NA
plumber,97d19871d8c21664d4072181679d890c,"• The value supplied to `req` and `res` arguments in a route definition are now *always* Plumber request and response objects. In the past, this was not guaranteed. (#666, #637)",2,51,FALSE,"Improved argument handling in Plumber Endpoint route definitions. See `system.file(""plumber/17-arguments/plumber.R"", package = ""plumber"")` to view an example with expected output and `plumb_api(""plumber"", ""17-arguments"")` to retrieve the api. Improvements include:"
plumber,97d19871d8c21664d4072181679d890c,"• To assist with conflicts in argument names deriving from different locations, `req$argsQuery`, `req$argsPath`, and `req$argsBody` have been added to access query, path, and `req$body` parameters, respectively. For this reason, we suggest defining routes with only `req` and `res` (i.e., `function(req, res) {}`) and accessing argument(s) under these new fields to avoid naming conflicts. (#637)",2,52,FALSE,"Improved argument handling in Plumber Endpoint route definitions. See `system.file(""plumber/17-arguments/plumber.R"", package = ""plumber"")` to view an example with expected output and `plumb_api(""plumber"", ""17-arguments"")` to retrieve the api. Improvements include:"
plumber,97d19871d8c21664d4072181679d890c,"• An error is no longer thrown if multiple arguments are matched to an Plumber Endpoint route definition. Instead, Plumber now retains the first named argument according to the highest priority match (`req$argsQuery` is 1st priority, then `req$argsPath`, then `req$argsBody`). (#666)",2,53,FALSE,"Improved argument handling in Plumber Endpoint route definitions. See `system.file(""plumber/17-arguments/plumber.R"", package = ""plumber"")` to view an example with expected output and `plumb_api(""plumber"", ""17-arguments"")` to retrieve the api. Improvements include:"
plumber,97d19871d8c21664d4072181679d890c,• Unnamed elements that are added to `req$args` by filters or creating `req$argsBody` will no longer throw an error. They will only be passed through via `...` (#666),2,54,FALSE,"Improved argument handling in Plumber Endpoint route definitions. See `system.file(""plumber/17-arguments/plumber.R"", package = ""plumber"")` to view an example with expected output and `plumb_api(""plumber"", ""17-arguments"")` to retrieve the api. Improvements include:"
plumber,e641b384a2f72c97e9f5c82a5b08c563,"API Documentation is now hosted at `/__docs__`. If `swagger` documentation is being used, `/__swagger__` will redirect to `/__docs__`. (#654)",1,55,FALSE,NA
plumber,71dbe03c4283cf1d89493852418881ca,"Added OpenAPI support for array parameters using syntax `name:[type]` and new type `list` (synonym df, data.frame). (@​meztez, #532)",1,56,FALSE,NA
plumber,e67b40d28d417af46ac1107fcbd5b046,"Added user provided OpenAPI Specification handler to Plumber router. Use `$setApiSpec()` to provide a function to alter the Plumber generated OpenAPI Specification returned by Plumber router method `$getApiSpec()`. This also affects `/openapi.json` and `/openapi.yaml` (#365)(@​meztez, #562)",1,57,FALSE,NA
plumber,1c39cf156f615b7a5764ae26950d0757,Added `validate_api_spec()` to validate a Plumber API produces a valid OpenAPI Specification. (Experimental!) (#633),1,58,FALSE,NA
plumber,180dd188399f55ca6887403634029eac,"Added `as_attachment(value, filename)` method which allows routes to return a file attachment with a custom name. (#585)",1,59,FALSE,NA
plumber,d4f4945922a16bdb83c1617b5b0a665d,Serializer functions can now return `PlumberEndpoint` `preexec` and `postexec` hooks in addition to a `serializer` function by using `endpoint_serializer()`. This allows for image serializers to turn on their corresponding graphics device before the route executes and turn the graphics device off after the route executes. (#630),1,60,FALSE,NA
plumber,aea7d347e17cfe654b8a22108d3146f5,"PNG, JPEG, and SVG image serializers have been exported in methods `serializer_png()`, `serializer_jpeg()`, and `serializer_svg()` respectively. In addition to these methods, `serializer_tiff()`, `serializer_bmp()`, and `serializer_pdf()` have been added. Each graphics device serializer wraps around `serializer_device()`, which should be used when making more graphics device serializers. (#630)",1,61,FALSE,NA
plumber,ab5a36d14744d5b8b11e6c1792402112,New serializers,1,62,FALSE,NA
plumber,ab5a36d14744d5b8b11e6c1792402112,"• `serializer_yaml()`: Return an object serialized by `yaml` (@​meztez, #556)",2,63,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,"• `serializer_csv()`: Return a comma separated value (@​pachamaltese, #520)",2,64,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_tsv()`: Return a tab separated value (#630),2,65,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_feather()`: Return a object serialized by `feather` (#626),2,66,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_text()`: Return text content (#585),2,67,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_cat()`: Return text content after calling `cat()` (#585),2,68,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_print()`: Return text content after calling `print()` (#585),2,69,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_format()`: Return text content after calling `format()` (#585),2,70,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,"• `serializer_svg()`: Return an image saved as an SVG (@​pachamaltese, #398)",2,71,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,• `serializer_headers(header_list)`: Method which sets a list of static headers for each serialized value. Heavily inspired from @​ycphs (#455). (#585),2,72,FALSE,New serializers
plumber,ab5a36d14744d5b8b11e6c1792402112,"• `serializer_write_file()`: Method which wraps `serializer_content_type()`, but orchestrates creating, writing serialized content to, reading from, and removing a temp file. (#660)",2,73,FALSE,New serializers
plumber,5458589b0351ce58fecbbcba17599223,"Added support for request body parsing (@​meztez, #532)",1,74,FALSE,NA
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,New request body parsers,1,75,FALSE,NA
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,• `parser_csv()`: Parse request body as a commas separated value (#584),2,76,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_json()`: Parse request body as JSON (@​meztez, #532)",2,77,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_multi()`: Parse multi part request bodies (@​meztez, #532) and (#663)",2,78,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_octet()`: Parse request body octet stream (@​meztez, #532)",2,79,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_form()`: Parse request body as form input (@​meztez, #532)",2,80,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_rds()`: Parse request body as RDS file input (@​meztez, #532)",2,81,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_text()`: Parse request body plain text (@​meztez, #532)",2,82,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,• `parser_tsv()`: Parse request body a tab separated value (#584),2,83,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,• `parser_yaml()`: Parse request body as `yaml` (#584),2,84,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,• `parser_none()`: Do not parse the request body (#584),2,85,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• `parser_yaml()`: Parse request body (@​meztez, #556)",2,86,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,• `parser_feather()`: Parse request body using `feather` (#626),2,87,FALSE,New request body parsers
plumber,8cfed1ba8b1aab0d69a2a0fbfdf7702d,"• Pseudo parser named `""all""` to allow for using all parsers. (Not recommended in production!) (#584)",2,88,FALSE,New request body parsers
plumber,32307f66b160c6219ae4d822abdab24e,The parsed request body values is stored at `req$body`. (#663),1,89,FALSE,NA
plumber,f2f767ee9e7cc8c8795295b62cbec1c9,"If `multipart/*` content is parsed, `req$body` will contain named output from `webutils::parse_multipart()` and add the parsed value to each part. Look here for access to all provided information (e.g., `name`, `filename`, `content_type`, etc). In addition, `req$argsBody` (which is used for route argument matching) will contain a named reduced form of this information where `parsed` values (and `filename`s) are combined on the same `name`. (#663)",1,90,FALSE,NA
plumber,bd121cfb11c7285c7e11b2f7baa11e5b,"Generalize user interface integration. Plumber can now use other OpenAPI compatible user interfaces like `RapiDoc` (https://github.com/mrin9/RapiDoc) and `Redoc` (https://github.com/Redocly/redoc). Pending CRAN approbations, development R packages are available from https://github.com/meztez/rapidoc/ and https://github.com/meztez/redoc/. (@​meztez, #562)",1,91,FALSE,NA
plumber,ca6d902215cf64d3c5576f07b29482ba,Changed Swagger UI to use swagger R package to display the swagger page. (#365),1,92,FALSE,NA
plumber,5cbdc62160a69cbdf5ea0f85034ba545,"Added support for swagger for mounted routers (@​bradleyhd, #274).",1,93,FALSE,NA
plumber,66398af277998285384f683c3b28a492,Secret session cookies are now encrypted using `sodium`. All prior `req$session` information will be lost. Please see `?session_cookie` for more information. (#404),1,94,FALSE,NA
plumber,52de5899caf29b61cecc58e3cdab5601,Session cookies set the `HttpOnly` flag by default to mitigate cross-site scripting (XSS). Please see `?session_cookie` for more information. (#404),1,95,FALSE,NA
plumber,32cc0bd233e150fc58293b003c0360aa,Wrap `jsonlite::fromJSON` to ensure that `jsonlite` never reads input as a remote address (such as a file path or URL) and attempts to parse that. The only known way to exploit this behavior in plumber unless an API were using encrypted cookies and an attacker knew the encryption key in order to craft arbitrary cookies. (#325),1,96,FALSE,NA
plumber,b636b461e3f828a1740773b07cd9b11c,"When `plumb()`ing a file (or `Plumber$new(file)`), the working directory is set to the file's directory before parsing the file. When running the Plumber API, the working directory will be set to file's directory before running.(#631)",1,97,FALSE,NA
plumber,40277c097a52e137ee24047235291659,"Plumber's OpenAPI Specification is now defined using OpenAPI 3, upgrading from Swagger Specification. (#365)",1,98,FALSE,NA
plumber,c79136cce9c2aa352e5a9bbce5469088,"Plumber router `$run()` method arguments `swagger`, `swaggerCallback` and `debug` are now deprecated. User interface and url callback are now enabled by default and managed through Plumber router `$setDocs()`, `$setDocsCallback()`, and `$setDebug()` methods and options `plumber.docs` and `plumber.docs.callback`. (@​meztez, #562)",1,99,FALSE,NA
plumber,53542d3d18c1852b3aa5c575b891c87e,"`plumb()` now returns an object of class `""Plumber""` (previously `""plumber""`). To check if an object is a Plumber router, use new method `is_plumber()`. (#653)",1,100,FALSE,NA
plumber,ee61c9574cc549c67cdc5937dda5599f,"`PlumberStatic` objects now have a class of `""PlumberStatic""` (previously `""plumberstatic""`). (#653)",1,101,FALSE,NA
plumber,7db58ecf35ad42b4bee9204e226bfe34,"The source files used in plumber **must use** the UTF-8 encoding if they contain non-ASCII characters (@​shrektan, #312, #328).",1,102,FALSE,NA
plumber,fbb9cca05196e21f4345b50ab64425c0,"`options(plumber.debug)` is not set anymore when running the plumber application. Instead retrieve the debug value using `$getDebug()` on the Plumber router directly. Ex: `function(req, res) { req$pr$getDebug() }`. (#639)",1,103,FALSE,NA
plumber,42787f5f8d16ba4e0696cf0791db9cce,"`PlumberEndpoint`'s method `$exec()` now has a shape of `$exec(req, res)` (vs `$exec(...)`). This allows for fine tune control over the arguments being sent to the endpoint function.",1,104,FALSE,NA
plumber,ed770ce84873c9b204b2f7e59cbdb36f,"When creating a `PlumberFilter` or `PlumberEndpoint`, an error will be thrown if `expr` does not evaluate to a function. (#666)",1,105,FALSE,NA
plumber,aa27adab6891c1ad9d298ab9593bdc5b,"Shorthand serializers are now deprecated. `@​html`, `@​json`, `@​png`, `@​jpeg`, `@​svg` should be replaced with the `@​serializer` syntax. Ex: `@​serializer html` or `@​serializer jpeg` (#630)",1,106,FALSE,NA
plumber,9b916eadcff4cc8cd1ed466ffee9c2cc,`plumber` R6 object has been deprecated and renamed to `Plumber`. `PlumberStatic`'s `inherit`ed class has been updated to `Plumber`. (#653),1,107,FALSE,NA
plumber,a6ecd595b8dfb6c75cc342d23c860dd0,`hookable` R6 object has been deprecated and renamed to `Hookable`. `Plumber` and `PlumberStep`'s `inherit`ed class has been updated to `Hookable`. (#653),1,108,FALSE,NA
plumber,c64344b599bbeba6ce027523f68682d9,`addSerializer()` has been deprecated in favor of `register_serializer()` (#584),1,109,FALSE,NA
plumber,407225e1927080bd33392e01504702bc,`getCharacterSet()` has been deprecated in favor of `get_character_set()` (#651),1,110,FALSE,NA
plumber,51456ebd94c208ca63b4cc4f2d073f8a,`randomCookieKey()` has been deprecated in favor of `random_cookie_key()` (#651),1,111,FALSE,NA
plumber,a153bbdaf3b27b99d5fc280739dbe0b0,`sessionCookie()` has been deprecated in favor of `session_cookie()` (#651),1,112,FALSE,NA
plumber,4c4278365c328167d8b787b50a0009da,DigitalOcean helper functions are now defunct (`do_*()`). The functionality and documentation on how to deploy to DigitalOcean has been moved to `plumberDeploy` (by @​meztez) (#649),1,113,FALSE,NA
plumber,b578c0c4c89825160e1420b5845ca33e,Documentation is updated and now presented using `pkgdown` (#570),1,114,FALSE,NA
plumber,a5acf0f4cb34d22faaa8b42652205391,New hex logo! Thank you @​allisonhorst ! (#570),1,115,FALSE,NA
plumber,43433f82787b6f778200cbb4a6ea2b14,Added helper method `is_plumber(pr)` to determine if an object is a Plumber router. (#653),1,116,FALSE,NA
plumber,f1e6b2333d6790f9eddf5c7c679212a2,"Added support for the `SameSite` Cookie attribute. (@​chris-dudley, #640)",1,117,FALSE,NA
plumber,629b89f3a750d4008429f459f67b99f3,"When calling `include_file()`, the `content_type` is automatically inferred from the file extension if `content_type` is not provided. (#631)",1,118,FALSE,NA
plumber,8b321e5daa3158ef71688d5a9ffb228e,"When `plumb()`ing a file, arguments supplied to parsers and serializers may be values defined earlier in the file. (@​meztez, #620)",1,119,FALSE,NA
plumber,9b5901ebebf32528d8bfccc67e5cb39d,Updated Docker files. New Docker repo is now `rstudio/plumber`. Updates heavily inspired from @​mskyttner (#459). (#589),1,120,FALSE,NA
plumber,dc57134736e328977d0b4e22645e53da,"Support HTTP 405 Code. (@​meztez, #554)",1,121,FALSE,NA
plumber,09e54a100432c01aa3102c4d12e10041,"Attached the Plumber router to the incoming request object at `req$pr`. (@​meztez, #554)",1,122,FALSE,NA
plumber,b540bd3632f28d0b382413fb2e254616,"Documented plumber options. Added `options_plumber()`. (@​meztez, #555)",1,123,FALSE,NA
plumber,fa70b90e43d04fb1e3f7569ae548d5fa,"Update documentation on R6 objects (@​meztez, #530)",1,124,FALSE,NA
plumber,2d0b44cb605e440acd9c2b9fbcbe99c6,"Fix `plumb()` function when `plumb()`ing a directory so that `plumber.R` is not a requirement if a valid `entrypoint.R` file is found. (@​blairj09, #471).",1,125,FALSE,NA
plumber,680673aa92ff208c6993b84b0bb32ce5,"If cookie information is too large (\> 4093 bytes), a warning will be displayed. (#404)",1,126,FALSE,NA
plumber,2528233c0c64f6a2422897a6c03f55a7,"Added new shorthand types for url parameters. (@​byzheng, #388)",1,127,FALSE,NA
plumber,efc580bcd30d72e55ae1e9028a4ccec2,Plumber files are now only evaluated once. Prior plumber behavior sourced endpoint functions twice and non-endpoint code blocks once. (#328),1,128,FALSE,NA
plumber,9f340528b1a19dc93758c02a007afd33,"Improve speed of `canServe()` method of the `PlumberEndpoint` class (@​atheriel, #484)",1,129,FALSE,NA
plumber,1c89ff508887a4493fa34c2ad39d6a25,Get more file extension content types using the `mime` package. (#660),1,130,FALSE,NA
plumber,b4d838844af4459f1549247c3b18ac0b,Endpoints that produce images within a `promises::promise()` will now use the expected graphics device. (#669),1,131,FALSE,NA
plumber,5b8120e3667a9d83d2753f82ae6a7021,"Handle plus signs in URI as space characters instead of actual plus signs (@​meztez, #618)",1,132,FALSE,NA
plumber,532cfb80747ec534e05e599bd81a43b2,Paths that are missing a leading `/` have a `/` prepended to the path location. (#656),1,133,FALSE,NA
plumber,494a4f13a4d67fc082360999453a44d8,"Fix possible bugs due to mounted routers without leading slashes (@​atheriel, #476 #501).",1,134,FALSE,NA
plumber,6f502b4e08da77ba407d6027000cb7d4,"Modified images serialization to use content-type serializer. Fixes issue with images pre/postserialize hooks (@​meztez, #518).",1,135,FALSE,NA
plumber,67ac96e5905ff47268cd01b151795b64,"Fix bug preventing error handling when a serializer fails (@​antoine-sachet, #490)",1,136,FALSE,NA
plumber,a36c00bf85e75ca491615063d46c5a95,"Fix URL-decoding of query parameters and URL-encoding/decoding of cookies. Both now use `httpuv::decodeURIComponent` instead of `httpuv::decodeURI`. (@​antoine-sachet, #462)",1,137,FALSE,NA
plumber,7e20aa711c4b55a89777188a60cf1a4e,Fixed bug where functions defined earlier in the file could not be found when `plumb()`ing a file. (#416),1,138,FALSE,NA
plumber,9a21d0270dca8e8b538c9389a5697105,"A multiline request body is now collapsed to a single line (@​robertdj, #270 #297).",1,139,FALSE,NA
plumber,ce16b356d147d6a7b3c753004197ba77,"Bumped version of httpuv to \>= 1.4.5.9000 to address an unexpected segfault (@​shapenaji, #289)",1,140,FALSE,NA
plumber,80cc5c2ece04436353c0241fe5e98862,"Date response header is now supplied by httpuv and not plumber. Fixes non standard date response header issues when using different locales. (@​shrektan, #319, #380)",1,141,FALSE,NA
plumber,1996a64294c215ba32092cd7512941ba,"Due to incompatibilities with `multipart` body values, `req$postBody` will only be calculated if accessed. It is strongly recommended to use `req$bodyRaw` when trying to create content from the input body. (#665)",1,142,FALSE,NA
plumber,9b35e8f959040f01e38e4847a037cda6,"BUGFIX: Hooks that accept a `value` argument (`postroute`, `preserialize`, and `postserialize`) now modify the incoming value as documented.",1,143,FALSE,NA
plumber,caa139c8d9b822bb69bcf50a31b19d1f,BUGFIX: The `postserialize` hook is now given the serialized data as its `value` parameter.,1,144,FALSE,NA
plumber,a3fe59fdf4d82b0211aa8e95ccb07da4,BUGFIX: properly handle cookie expiration values (#216).,1,145,FALSE,NA
plumber,c0d2d45a995e9d1e3cb4048f1f4435bd,Add support for tags in Swagger docs (#230).,1,146,FALSE,NA
plumber,2d7e612ba1ecd87b5717c1a9baf5966d,Optional `swaggerCallback` parameter for `run()` to supply a callback function for reporting the url for swagger page.,1,147,FALSE,NA
plumber,1cd4818f4d45a8311db1612466539f6d,Add RStudio Project Template to package.,1,148,FALSE,NA
plumber,27dda173aed930590d5a4e72f3f15c29,"Support Expiration, HTTPOnly, and Secure flags on cookies (#87). **EDIT**: see #216 which prevented expiration from working.",1,149,FALSE,NA
plumber,b081824d6fea3476bff80049b10ce5f2,BUGFIX: properly handle named query string and post body arguments in mounted subrouters.,1,150,FALSE,NA
plumber,ef1482daba6aa826fdd022668e10178d,"Added support for static sizing of images. `@​png` and `@​jpeg` now accept a parenthetical list of arguments that will be passed into the `png()` or `jpeg()` call. This enables annotations like `#' @​png (width = 200, height=500)`.",1,151,FALSE,NA
plumber,ef53418597ca1d659829de1bf69f0ba4,Enable `ByteCompile` flag,1,152,FALSE,NA
plumber,f37d1ea1b0729b7cde3a9ac46666c47e,Set working directory for DigitalOcean APIs.,1,153,FALSE,NA
plumber,3e3de52b5a74c24a51ca79320eeb9a1e,Respect `setErrorHandler`,1,154,FALSE,NA
plumber,123975f093288b53cb1b6807b6928269,BUGFIX: export `PlumberStatic`,1,155,FALSE,NA
plumber,0c926d56a525a4327069acee6d29bc1c,Case-insensitive matching on `plumber.r` and `entrypoint.r` when `plumb()`ing a directory.,1,156,FALSE,NA
plumber,0b8059543a58f067269e68e277296f50,Support query strings with keys that appear more than once (#165),1,157,FALSE,NA
plumber,c6db7f588d5ab769d555be168ce099a1,Fix the validation error warning at the bottom of deployed Swagger files which would have appeared any time your `swagger.json` file was hosted in such a way that a hosted validator service would not have been able to access it. For now we just suppress validation of swagger.json files. (#149),1,158,FALSE,NA
plumber,94717233b2c808845ec8116b55acc79a,Support for floating IPs in DNS check that occurs in `do_configure_https()`,1,159,FALSE,NA
plumber,8050c5b12a59c92f29f9a980535b0cf6,Make adding swap file idempotent in `do_provision()` so you can now call that on a single droplet multiple times.,1,160,FALSE,NA
plumber,33e861a5f9ee6681b0bd5dc059a60744,"Support an `exit` hook which can define a function that will be evaluated when the API is interrupted. e.g. `pr <- plumb(""plumber.R""); pr$registerHook(""exit"", function(){ print(""Bye bye!"") })`",1,161,FALSE,NA
plumber,e6e74d186153a8a14fe9849444fa09cd,Fixed bug in which a single function couldn't support multiple paths for a single verb (#203).,1,162,FALSE,NA
plumber,2e270083ffcb27e5fe8a819fe2c6a26c,Support negative numbers in numeric path segments (#212),1,163,FALSE,NA
plumber,9b27ac16fdcd5177bb26383dab6bd4ba,Support `.` in string path segments,1,164,FALSE,NA
plumber,80db70ebb71027fe4f8750e9ed84b75c,"Development version for 0.4.2. Will be working to move to even/odd release cycles, but I had prematurely bumped to 0.4.0 so that one might get skipped, making the next CRAN release 0.4.2.",1,165,FALSE,NA
plumber,a33d1275cbc1f8bec97f600ede2aa710,BREAKING: Listen on localhost instead of listening publicly by default.,1,166,FALSE,NA
plumber,0cbe60afc8c70410f6aea0db9e8983fd,BREAKING: We no longer set the `Access-Control-Allow-Origin` HTTP header to `*`. This was previously done for convenience but we've decided to prioritize security here by removing this default. You can still add this header to any route you want to be accessible from other origins.,1,167,FALSE,NA
plumber,8625c46ff914aacd366a007ad6dbf6bf,"BREAKING: Listen on a random port by default instead of always on 8000. This can be controlled using the `port` parameter in `run()`, or by setting the `plumber.port` option.",1,168,FALSE,NA
plumber,3f4920c2a3bfaa918e2a7cbe1e0ac338,BREAKING: Removed `PlumberProcessor` class and replaced with a notion of hooks. See `registerHook` and `registerHooks` on the Plumber router.,1,169,FALSE,NA
plumber,030ab521e02abf59255b1a33a2633962,"BREAKING: `addGlobalProcessor` method on Plumber routers now takes a list which are added as hooks instead of a Processor. Note that `sessionCookie` has also been updated to behave accordingly, meaning that the convention of `pr$addGlobalProcessor(sessionCookie(""secret"", ""cookieName""))` will continue to work for this release.",1,170,FALSE,NA
plumber,c5752df644188da4fc3c75e6b8bc7b83,"BREAKING: `sessionCookie` now returns a list instead of a Processor. Note that `addGlobalProcessor` has also been updated to behave accordingly, meaning that the convention of `pr$addGlobalProcessor(sessionCookie(""secret"", ""cookieName""))` will continue to work for this release.",1,171,FALSE,NA
plumber,df835790c01e2e4471b9f35b3b53b6e3,DEPRECATION: Deprecated the `addAssets` method on Plumber routers. Use `PlumberStatic` and the `mount` method to attach a static router.,1,172,FALSE,NA
plumber,aeb8154442535ccc29f9c067f1da6078,"DEPRECATION: Deprecated the `addEndpoint` method in favor of the `handle` method for Plumber routers. Removed support for the `processors`, `params`, and `comments` parameters are no longer supported.",1,173,FALSE,NA
plumber,232bf1e109655174901afd6bea69b02b,DEPRECATION: Deprecated the `addFilter` method on Plumber routers in favor of the new `filter` method. Removed support for the processor parameter.,1,174,FALSE,NA
plumber,216864218a334c9092fb5e761e79fd47,DEPRECATION: Deprecated the `addGlobalProcessor` method on Plumber routers.,1,175,FALSE,NA
plumber,7ffb5259eefb9aa4d6923b2fd3b0506e,The undocumented `setDefaultErrorHandler` method on Plumber routers now takes a function that returns the error handler function. The top-level function takes a single param named `debug` which is managed by the `debug` parameter in the `run()` method.,1,176,FALSE,NA
plumber,0c40df6c0384a5f8950e3317f7da1007,Added support for `OPTIONS` HTTP requests via the `@​options` annotation.,1,177,FALSE,NA
plumber,78179c3636c6bf45d30bc26d20ae2ca1,"Add support for `entrypoint.R` when `plumb()`ing a directory. If this file exists, it is expected to return a Plumber router representing the API contained in this directory. If it doesn't exist, the behavior is unaltered. If both `plumber.R` and `entrypoint.R` exist, `entrypoint.R` takes precedence.",1,178,FALSE,NA
plumber,0b42f656b31c14e0f6f9ba5ab17f4bf8,`plumb()` the current directory by default if no arguments are provided.,1,179,FALSE,NA
plumber,d3d76c8b52d1dd21ce9224a3aeab6e3f,Added a `debug` parameter to the `run` method which can be set to `TRUE` in order to get more insight into your API errors.,1,180,FALSE,NA
plumber,2bf6094ed49070809c8fe27672e0525c,"`plumb()` now accepts an argument `dir`, referring to a directory containing `plumber.R`, which may be provided instead of `file`.",1,181,FALSE,NA
plumber,0ad37c65a53879286e82628fe87d564a,"Introduced the `do_provision()`, `do_deploy_api()`, `do_remove_api()` and `do_configure_https()` functions to provision and manage your APIs on a cloud server running on DigitalOcean.",1,182,FALSE,NA
plumber,015b28e7cf9258baea16ca1f90cd87b3,`source()` the referenced R file to plumb inside of a new environment that inherits directly from the GlobalEnv. This provides more explicit control over exactly how this environment should behave.,1,183,FALSE,NA
plumber,340ffb98fcfb410a2b4aa2eceb53b2a3,Added `@​serializer htmlwidget` to support rendering and returning a self-contained htmlwidget from a plumber endpoint.,1,184,FALSE,NA
plumber,c1f2dac97fc758f100491a9d2c5c0863,Properly handle cookies with no value. (#88),1,185,FALSE,NA
plumber,adb5602e083c88771e24c6617c0cc9db,Don't convert `+` character in a query string to a space.,1,186,FALSE,NA
plumber,25b28ec7493165d93b393ded0779f3f7,Add a method to consume JSON on post (you can still send a query string in the body of a POST request as well).,1,187,FALSE,NA
plumber,93a55cd495890e07b5f07b1076b15232,"BREAKING CHANGE: serializer factories are now registered instead of the serializer themselves. Thus, `addSerializer()` now expects a function that returns a serializer, and `Response$new()` now expects a serializer itself rather than a character string naming a serializer. Internally it is the serializer itself that is attached to the response rather than the name of the serializer. This allows for a serializer to customize its behavior.",1,188,FALSE,NA
plumber,4bc6cc1b2ec09657143d6c5861960e7f,Accept an additional argument on the `@​serializer` annotation -- R code that will be passed in as an argument to the serializer factory. See example `09-content-type`.,1,189,FALSE,NA
plumber,0769e3ac6ef25863b774655142fdebff,Add a filter which parses and sets req\$cookies to be a list corresponding to the cookies provided with the request.,1,190,FALSE,NA
plumber,7647bff4ca03582db2bdd105a0793a57,Responses can set multiple cookies,1,191,FALSE,NA
plumber,184b89d5f5f750176819cac5d4aa7717,Bug Fix: convert non-character arguments in setCookie to character before URL- encoding.,1,192,FALSE,NA
plumber,4833503cf8fd918a8509dce14d6b1fe1,"Set options(warn=1) during execution of user code so that warnings are immediately visible in the console, rather than storing them until the server is stopped.",1,193,FALSE,NA
plumber,70bac44d0fe6a3a19b939560357928f4,Add `sessionCookie` function to define a processor that can be used as a globalProcessor on a router to encrypt values from req\$session and store them as an encrypted cookie in on the user's browser.,1,194,FALSE,NA
plumber,7c3d8a7029fec141895e9313b66b025c,Added `setCookie` method to response which (primitively) allows you to set a cookie to be included in the response.,1,195,FALSE,NA
plumber,0d5a4b55a97de73d90b35818169be02d,"Add `addGlobalProcessor` method on `plumber` class to support a processor that runs a processor only a single time, before and then after all other filters and the endpoint.",1,196,FALSE,NA
plumber,058240dce7c5c8992b2e3b795bdd3f7c,Document all public params so CHECK passes,1,197,FALSE,NA
plumber,ecdf37824db8088c028f37ca7c33bc08,Add more `roxygen2` documentation for exported functions,1,198,FALSE,NA
plumber,5ac6b008291ef9426fa50b351fbb6c95,Remove the warning in the README as the API seems to be stabilizing.,1,199,FALSE,NA
plumber,fbe3195a991aa4da5769ee7bfbc6e6f0,BREAKING: Changed variable-path routing to use bracketed format instead of just a colon.,1,200,FALSE,NA
plumber,20405a0da7a112f9b1f385411e6d3b27,BREAKING: Renamed `PlumberRouter` R6 object to just `Plumber`.,1,201,FALSE,NA
plumber,ccbe2b9f5fd70a0f6ffdf1482414d323,Support `addEndpoint()` and `addFilter()` on the `Plumber` object.,1,202,FALSE,NA
plumber,3200de74f2b9e5449e5ebe7cb6240896,Added support for the `#*` prefix.,1,203,FALSE,NA
plumber,f3521e53fdbd5c012a43b6ac8059c4a1,Initial Release,1,204,FALSE,NA
pointblank,12160bd4658e97d201055ed2e79ae6ba,"Complete `{tidyselect}` support for the `columns` argument of *all validation functions*, as well as in `has_columns()` and `info_columns`. `columns` can now takes familiar column-selection expressions as one would use inside `dplyr::select()`. This also begins a process of deprecation:",1,1,FALSE,NA
pointblank,12160bd4658e97d201055ed2e79ae6ba,"• `columns = vars(...)` will continue to work, but `c()` now supersedes `vars()`.",2,2,FALSE,"Complete `{tidyselect}` support for the `columns` argument of *all validation functions*, as well as in `has_columns()` and `info_columns`. `columns` can now takes familiar column-selection expressions as one would use inside `dplyr::select()`. This also begins a process of deprecation:"
pointblank,12160bd4658e97d201055ed2e79ae6ba,"• If passing an *external vector* of column names, it should be wrapped in `all_of()`.",2,3,FALSE,"Complete `{tidyselect}` support for the `columns` argument of *all validation functions*, as well as in `has_columns()` and `info_columns`. `columns` can now takes familiar column-selection expressions as one would use inside `dplyr::select()`. This also begins a process of deprecation:"
pointblank,a1df774867d3d9f1772e35dfd3815205,The `label` argument of validation functions now exposes the following string variables via `{glue}` syntax:,1,4,FALSE,NA
pointblank,a1df774867d3d9f1772e35dfd3815205,"• `""{.step}""`: The validation step name",2,5,FALSE,The `label` argument of validation functions now exposes the following string variables via `{glue}` syntax:
pointblank,a1df774867d3d9f1772e35dfd3815205,"• `""{.col}""`: The current column name",2,6,FALSE,The `label` argument of validation functions now exposes the following string variables via `{glue}` syntax:
pointblank,a1df774867d3d9f1772e35dfd3815205,"• `""{.seg_col}""`: The current segment's column name",2,7,FALSE,The `label` argument of validation functions now exposes the following string variables via `{glue}` syntax:
pointblank,a1df774867d3d9f1772e35dfd3815205,"• `""{.seg_val}""`: The current segment's value/group",2,8,FALSE,The `label` argument of validation functions now exposes the following string variables via `{glue}` syntax:
pointblank,e45ed32587f695f130146c9d9e375c0b,These dynamic values may be useful for validations that get expanded into multiple steps.,1,8,FALSE,NA
pointblank,012a43fdb2c80b6516ccf96b43c95702,"When no columns are returned from a `{tidyselect}` expression in `columns`, the agent's report now displays the originally supplied *expression* instead of simply blank (e.g., in `create_agent(small_table) %>% col_vals_null(matches(""z""))`).",1,9,FALSE,NA
pointblank,728a3bb032b8d6a291439af088dddac5,Fixes issue with the hashing implementation to improve performance and alignment of validation steps in the multiagent.,1,10,FALSE,NA
pointblank,13773e94d590a8a0c87f9b794664d35a,Fixes issue with gt `0.9.0` compatibility.,1,11,FALSE,NA
pointblank,8713def9910f1fd269af0d47f8ca7abf,Fixes issue with tables not rendering due to interaction with the gt package.,1,12,FALSE,NA
pointblank,4d083490c5f741ce536235d2023a62a0,Internal changes were made to ensure compatibility with an in-development version of R.,1,13,FALSE,NA
pointblank,73e987c02f886e9d661f95c5cedc879a,Updated all help files to pass HTML validation.,1,14,FALSE,NA
pointblank,c81b0484e8161f52c3f36443f88bf98f,The `row_count_match()` function can now match the count of rows in the target table to a literal value (in addition to comparing row counts to a secondary table).,1,15,FALSE,NA
pointblank,824657505df5060d0a42570112094aa6,"The analogous `col_count_match()` function was added to compare column counts in the target table to a secondary table, or, to match on a literal value.",1,16,FALSE,NA
pointblank,c9ef943d8a5e236388ef77a702f8fc65,"Substitution syntax has been added to the `tbl_store()` function with `{{ <name> }}`. This is a great way to make table-prep more concise, readable, and less prone to errors.",1,17,FALSE,NA
pointblank,7c1cdab779d7c106e60dc120ff4a603a,"The `get_informant_report()` has been enhanced with more `width` options. Aside from the `""standard""` and `""small""` sizes we can now supply any pixel- or percent-based width to precisely size the reporting.",1,18,FALSE,NA
pointblank,37fd384285221b2f71c20aa6d0c55512,Added support for validating data in BigQuery tables.,1,19,FALSE,NA
pointblank,8694ee1c886621af319abf740001b6dd,All functions in the package now have *better* usage examples.,1,20,FALSE,NA
pointblank,39d4e1ec64d403986a76e5ddd2e41994,The new function `row_count_match()` (plus `expect_row_count_match()` and `test_row_count_match()`) checks for exact matching of rows across two tables (the target table and a comparison table of your choosing). Works equally well for local tables and for database and Spark tables.,1,21,FALSE,NA
pointblank,582f36a3d1c6a351738aaba170b973d1,"The new `tbl_match()` function (along with `expect_tbl_match()` and `test_tbl_match()`) check for an exact matching of the target table with a comparison table. It will check for a strict match on table schemas, on equivalent row counts, and then exact matches on cell values across the two tables.",1,22,FALSE,NA
pointblank,f6e0f59c0388c96f596a0a0257d64f95,The `set_tbl()` function was given the `tbl_name` and `label` arguments to provide an opportunity to set metadata on the new target table.,1,23,FALSE,NA
pointblank,398ed01f582f733e8376dc32fbe6fa6c,Support for `mssql` tables has been restored and works exceedingly well for the majority of validation functions (the few that are incompatible provide messaging about not being supported).,1,24,FALSE,NA
pointblank,5236c456c65868736156393469b15045,All functions in the package now have usage examples.,1,25,FALSE,NA
pointblank,beb7c1f78c40540246158bd5df952f4f,An RStudio Cloud project has been prepared with .Rmd files that contain explainers and runnable examples for each function in the package. Look at the project README for a link to the project.,1,26,FALSE,NA
pointblank,76b4d93555206e56c9919980d1a5b74f,"The `read_fn` argument in `create_agent()` and `create_informant()` has been deprecated in favor of an enhanced `tbl` argument. Now, we can supply a variety of inputs to `tbl` for associating a target table to an agent or an informant. With `tbl`, it's now possible to provide a table (e.g., `data.frame`, `tbl_df`, `tbl_dbi`, `tbl_spark`, etc.), an expression (a table-prep formula or a function) to read in the table only at interrogation time, or a table source expression to get table preparations from a table store (as an in-memory object or as defined in a YAML file).",1,27,FALSE,NA
pointblank,c445bf8d139610fa593b8c817df8eaf6,"The `set_read_fn()`, `remove_read_fn()`, and `remove_tbl()` functions were removed since the `read_fn` argument has been deprecated (and there's virtually no need to remove a table from an object with `remove_tbl()` now).",1,28,FALSE,NA
pointblank,a81a2b2c7caa884e4e90b4abc4b6dfb1,The new `rows_complete()` validation function (along with the `expect_rows_complete()` and `test_rows_complete()` expectation and test variants) check whether rows contain any `NA`/`NULL` values (optionally constrained to a selection of specified `columns`).,1,29,FALSE,NA
pointblank,626bc2007e9f8768c479cf9635a5a085,"The new function `serially()` (along with `expect_serially()` and `test_serially()`) allows for a series of tests to run in sequence before either culminating in a final validation step or simply exiting the series. This construction allows for pre-testing that may make sense before a validation step. For example, there may be situations where it's vital to check a column type before performing a validation on the same column.",1,30,FALSE,NA
pointblank,bcc0d1b23526c7b27bd5df5353fdad6b,"The `specially()`/`expect_specially()`/`test_specially()` functions enable custom validations/tests/expectations with a user-defined function. We still have `preconditions` and other common args available for convenience. The great thing about this is that because we require the UDF to return a logical vector of passing/failing test units (or a table where the rightmost column is logical), we can incorporate the results quite easily in the standard **pointblank** reporting.",1,31,FALSE,NA
pointblank,3af308b93af4afa61ce2283acc9db1a6,"The `info_columns_from_tbl()` function is a super-convenient wrapper for the `info_columns()` function. Say you're making a data dictionary with an *informant* and you already have the table metadata somewhere as a table: you can use that here and not have to call `info_columns()` many, many times.",1,32,FALSE,NA
pointblank,d8e0789fb01e67ed2a3c3b38ce976689,Added the `game_revenue_info` dataset which contains metadata for the extant `game_revenue` dataset. Both datasets pair nicely together in examples that create a data dictionary with `create_informant()` and `info_columns_from_tbl()`.,1,33,FALSE,NA
pointblank,4606f6d4b67c16230af6cd3f85956ef5,Added the table transformer function `tt_tbl_colnames()` to get a table's column names for validation.,1,34,FALSE,NA
pointblank,5f520cd622f3c1b7f3b758c343a22d43,Input data tables with `label` attribute values in their columns will be displayed in the 'Variables' section of the `scan_data()` report. This is useful when scanning imported SAS tables (which often have labeled variables).,1,35,FALSE,NA
pointblank,ea7d7e713e596d8aaab531ac11165730,"The `all_passed()` function has been improved such that failed validation steps (that return an evaluation error, perhaps because of a missing column) result in `FALSE`; the `i` argument has been added to `all_passed()` to optionally get a subset of validation steps before evaluation.",1,36,FALSE,NA
pointblank,39b5404e76da6fb9c08e1030ad9e3d7b,"For those `expect_*()` functions that can handle multiple columns, **pointblank** now correctly stops at the first failure and provides the correct reporting for that. Passing multiple columns really should mean processing multiple steps in serial, and previously this was handled incorrectly.",1,37,FALSE,NA
pointblank,1ed02bb970b81274599d549f3b527312,"The new `draft_validation()` function will create a starter validation .R or .Rmd file with just a table as an input. Uses a new 'column roles' feature to develop a starter set of validation steps based on what kind of data the columns contain (e.g., latitude/longitude values, URLs, email addresses, etc.).",1,38,FALSE,NA
pointblank,f63b77c15ccd9754fe0fe2dbbf464278,"The validation function `col_vals_within_spec()` (and the variants `expect_col_vals_within_spec()` and `test_col_vals_within_spec()`) will test column values against a specification like phone numbers (`""phone""`), VIN numbers (`""VIN""`), URLs (`""url""`), email addresses (`""email""`), and much more (`""isbn""`, `""postal_code[<country_code>]""`, `""credit_card""`, `""iban[<country_code>]""`, `""swift""`, `""ipv4""`, `""ipv6""`, and `""mac""`).",1,39,FALSE,NA
pointblank,e9cfb6dc7edc8b2f69dbf1937b27c481,"A large cross section of row-based validation functions can now operate on segments of the target table, so you can run a particular validation with slices (or segments) of the target table. The segmentation is made possible by use of the new `segments` argument, which takes an expression that serves to segment the target table by column values. It can be given in one of two ways: (1) as a single or multiple column names containing keys to segment on, or (2) as a two-sided formula where the LHS holds a column name and the RHS contains the column values to segment on (allowing for a subset of keys for segmentation).",1,40,FALSE,NA
pointblank,dc7d893690dcd06c7d299c04da8b76f5,"The default printing of the *multiagent* object is now a stacked display of *agent* reports. The wide report (useful for comparisons of validations targeting the same table over time) is available in the improved `get_multiagent_report()` function (with `display_mode = ""wide""`).",1,41,FALSE,NA
pointblank,e0d10809b468139ce8d5d6a3f2788af3,"Exporting the reporting is now much easier with the new `export_report()` function. It will export objects such as the *agent* (for validations), the *informant* (for table metadata), and the *multiagent* (a series of validations), and, also those objects containing customized reports (from `scan_data()`, `get_agent_report()`, `get_informant_report()`, and `get_multiagent_report()`). You'll always get a self-contained HTML file of the report from any use of `export_report()`.",1,42,FALSE,NA
pointblank,e7e728db4ab209db68405f847e287897,"A new family of functions has been added to **pointblank**: Table Transformers! These functions can radically transform a data table and either provide a wholly different table (like a summary table or table properties table) or do some useful filtering in a single step. This can be useful for preparing the target table for validation or when creating temporary tables (through `preconditions`) for a few validation steps (e.g., validating table properties or string lengths). As a nice bonus these transformer functions will work equally well with data frames, database tables, and Spark tables. The included functions are: `tt_summary_stats()`, `tt_string_info()`, `tt_tbl_dims()`, `tt_time_shift()`, and `tt_time_slice()`.",1,43,FALSE,NA
pointblank,ac0bab239e6fabefabbbf851bc34b13d,"Two new datasets have been added: `specifications` and `game_revenue`. The former dataset can be used to test out the `col_vals_within_spec()` validation function. The latter dataset (with 2,000 rows) can be used to experiment with the `tt_time_shift()` and `tt_time_slice()` table transformer functions.",1,44,FALSE,NA
pointblank,65f08395fcb41f4052e738772c4f349f,"Added the Polish (`""pl""`), Danish (`""da""`), Turkish (`""tr""`), Swedish (`""sv""`), and Dutch (`""nl""`) translations.",1,45,FALSE,NA
pointblank,212dea908853112586f5bccc087c0a63,"The `scan_data()` function is now a bit more performant, testable, and better at communicating progress in generating the report.",1,46,FALSE,NA
pointblank,392e42fab1ac9c1cf275360bececf0d7,"The `preconditions` argument, used to modify the target table in a validation step, is now improved by (1) checking that a table object is returned after evaluation, and (2) correcting the YAML writing of any `preconditions` expression that's provided as a function.",1,47,FALSE,NA
pointblank,32be2650805d386c3d9bbc2472045063,The `x_write_disk()` and `x_read_disk()` have been extended to allow the writing and reading of `ptblank_tbl_scan` objects (returned by `scan_data()`).,1,48,FALSE,NA
pointblank,3532c97e6622b55bdddd6c5ab589f981,"Print methods received some love in this release. Now, `scan_data()` table scan reports look much better in **R Markdown**. Reporting objects from `get_agent_report()`, `get_informant_report()`, and `get_multiagent_report()` now have print methods and work beautifully in **R Markdown** as a result.",1,49,FALSE,NA
pointblank,01dd2c26c48325e1ca4e8f1d59ff588a,"The `incorporate()` function, when called on an *informant* object, now emits styled messages to the console. And when using `yaml_exec()` to process an arbitrary amount of YAML-based *agent*s and *informant*s, you'll be given information about that progress in the console.",1,50,FALSE,NA
pointblank,c098f316e6aa1601fb43b0f841cb4ba6,"Many help files were overhauled so that (1) things are clearer, (2) more details are provided (if things are complex), and (3) many ready-to-run examples are present. The functions with improved help in this release are: `all_passed()`, `get_data_extracts()`, `get_multiagent_report()`, `get_sundered_data()`, `has_columns()`, `write_testthat_file()`, `x_write_disk()`, and `yaml_exec()`.",1,51,FALSE,NA
pointblank,17e4c9fb3e5a580a59562b3e57bb3608,"New functions for set-based interrogations: `col_vals_make_set()` (+ `expect_col_vals_make_set()` and `test_col_vals_make_set()`) and `col_vals_make_subset()` (+ `expect_col_vals_make_subset()` and `test_col_vals_make_subset()`); they answer the following two questions: (1) is a set of values entirely accounted for in a column of values?, and (2) is a set of values a subset of a column of values?",1,52,FALSE,NA
pointblank,f44db0927ed2cda7d1ba851a5e9b566c,New functions for order-based interrogations: `col_vals_increasing()` (+ `expect_col_vals_increasing()` and `test_col_vals_increasing()`) and `col_vals_decreasing()` (+ `expect_col_vals_decreasing()` and `test_col_vals_decreasing()`); they check that column values are either increasing or decreasing and both have options to allow for non-moving values and backtracking (with a threshold).,1,53,FALSE,NA
pointblank,673552cae88a6f75bb9a0a3411903e4f,"Several functions added to facilitate multi-agent workflows: `create_multiagent()`, `read_disk_multiagent()`, and `get_multiagent_report()`; these workflows help to track interrogation results across multiple agents and the reporting scales well from several to dozens of agents.",1,54,FALSE,NA
pointblank,704229c66e899cf0fc8db2b90850d27d,The new function `write_testthat_file()` generates a **testthat** test file and puts it in `tests/testthat` if certain conditions are met; this converts an *agent*'s validation plan into separate `expect_*()` statements.,1,55,FALSE,NA
pointblank,f46b82f9875bd5c3ebebef04e3a18722,"New functions `tbl_store()`, `tbl_source()`, and `tbl_get()` functions added for centrally managing table-prep formulas.",1,56,FALSE,NA
pointblank,536e8a2022d2175e0843bea255174516,"Added the `yaml_exec()` function that processes all relevant **pointblank** YAML files in a directory; execution involves interrogation of agents (given YAML agents) and incorporation of informants (given YAML informants), saving all the processed objects to an output directory.",1,57,FALSE,NA
pointblank,9257adc33ca45df7e8af3dcf062b1f63,"The new functions `file_tbl()` and helper `from_github()` make it easy to generate a table from a compatible data file; a file could be in the form of `CSV`, `TSV`, `RDA`, or `RDS`.",1,58,FALSE,NA
pointblank,7f2c710673d4f456ce833b6a5adf3567,"Several functions have been added for modifying an *agent*'s validation plan: `activate_steps()`, `deactivate_steps()`, `remove_steps()`.",1,59,FALSE,NA
pointblank,75bb607f5477a34b25536c20cda8da24,Added the `snip_stats()` function for generating an in-line statistical summary in an information report.,1,60,FALSE,NA
pointblank,34e699254884d2670f1d58fe03e7e144,Add sorting options for `snip_list()` so we can choose to sort column items by frequency or sequentially (alphabetically/numerically).,1,61,FALSE,NA
pointblank,428e69647facb74ce669ba03bc889ecf,"More improvements were made to `snip_list()` to: (1) have a better default appearance, (2) enable more customization, and (3) include localization options for the supported spoken languages.",1,62,FALSE,NA
pointblank,29902cd67c55b15fb08fe4f9a22b1377,"Added several options for customizing the main reporting heading in three reporting objects: the agent report, the information report, and the multiagent report.",1,63,FALSE,NA
pointblank,fed3310a4301e52ea0d2395249bb29da,"The `active` argument in every validation function can now take an expression that evaluates to a logical; the `has_columns()` has been added to make it easy to express in `active` whether one or more columns are present in the target table (e.g., perform the validation step only if the target column is available).",1,64,FALSE,NA
pointblank,ce7c260e5a3443bf3834bf9b7c06421b,Added support for using Arrow tables as target tables for *informant* objects.,1,65,FALSE,NA
pointblank,194de8dba0493e98902bd94142c9b51a,Added information on YAML representations of all validation functions and several other functions that make an appearance in YAML.,1,66,FALSE,NA
pointblank,4913e2542f1f4705ead568be139d41e2,General improvements to function documentation were made to a wide cross section of the exported functions.,1,67,FALSE,NA
pointblank,0126905282dfd1162441d7a884b86b44,Included method for writing an *informant* object to disk (with `x_write_disk()`).,1,68,FALSE,NA
pointblank,d23c0c216b77d8d04b5707b5f455233b,Many fixes were made and tests added to ensure that *agents* survive the YAML roundtrip (so `agent` %\>% `yaml_write()` then `yaml_read_agent()` creates the same `agent` object).,1,69,FALSE,NA
pointblank,0f1f4c46b0b0e5ead1a9d056a5a38c29,Updated several internal `dplyr::arrange()` statements used by `scan_data()` so that warnings aren't issued by **dbplyr** (for table scans operating on `tbl_dbi` objects).,1,70,FALSE,NA
pointblank,da28b872ea7158bcd343a6a0817abb16,All **tidyselect** expressions used with *agents* are now preserved when the agent is written to YAML.,1,71,FALSE,NA
pointblank,3f41be22e74013ebe6ffa741c7a98dc8,"The new *information management* workflow is full of features that help you to describe tables and keep on top of changes to them. To make this work well, a new character enters: the *informant*!",1,72,FALSE,NA
pointblank,7f0253ca225c90048289a657abff2a0d,"Added the `create_informant()` function to create a `ptblank_informant` object (this function is similar to `create_agent()`). It is meant to hold information (as much as you want, really) for a target table, with reporting features geared toward communication.",1,73,FALSE,NA
pointblank,f78532bdfda82451fc65f5c450af406f,"Functions for facilitating entry of *info text* were added because we need them (`info_tabular()`, `info_columns()`, and `info_section()`). These are focused on describing columns, the table proper, and other misc. fields.",1,74,FALSE,NA
pointblank,4c8558994ffdd4e3392d20d56031d73a,"If all that wasn't enough, this release adds `info_snippet()` to round out the collection of `info_*()` functions for this workflow. Oh, hang on, there's also the all-important `incorporate()` function. What? To explain, the idea is to have some methodology for acquiring important bits of data from the target table (that's `info_snippet()`'s job) and then use `incorporate()` to grab those morsels of data and stitch them into the *info text* (via `{ }`).",1,75,FALSE,NA
pointblank,5bd27cde85c29810f4911a8c59697275,Added the `get_informant_report()` function for printing the information report (a **gt** table object!).,1,76,FALSE,NA
pointblank,0d2fe35e9b4c1a51a263ff5855fd9280,You can also just print the *informant* object to show the information report thanks to a print method for this purpose.,1,77,FALSE,NA
pointblank,fe2e389b93cb909d7225955568a37d5e,The *informant* object can be written to **pointblank** YAML using the revised `yaml_write()` (previously `agent_yaml_write()`) function. We can actually write both the *agent* and the *informant* to the same YAML file which is useful since both objects share the same target table. Reading is done with the `yaml_read_agent()` and `yaml_read_informant()` functions.,1,78,FALSE,NA
pointblank,453f434258efb07bc20602f7bce43a55,The *informant* can be emailed using the `email_create()` function; this emailing can be done in one of eight languages for the stock message text.,1,79,FALSE,NA
pointblank,0560e9099d5c8bdd11e908f48156b405,More text in the agent report is translated now.,1,80,FALSE,NA
pointblank,4c1fcda2f795bc5c368c5a1c66099784,Improved the Spanish (Spain) translation.,1,81,FALSE,NA
pointblank,16184918f2ff2088b0d7e1c28181824d,"Added the Portuguese (`""pt""`, Brazil), Chinese (`""zh""`, China mainland), and Russian (`""ru""`) translations.",1,82,FALSE,NA
pointblank,beaeadd8ea049cd61691bfce06a23788,Added a locale option for reporting; the locale will match the language (using the base locale) unless a different locale is specified. The locale is used to format numeric values according to the locale's rules. This also applies to the reporting offered by the `scan_data()` function.,1,83,FALSE,NA
pointblank,f17d3b6b286e6a59397b7704997f0b0e,All stock email message parts (used when emailing the agent report or the information report) have been translated to the eight supported languages. The language setting in the respective objects is used to determine the language of the stock message parts.,1,84,FALSE,NA
pointblank,1695fc40fa92698edbb0ac73b51b15b1,"The `yaml_write()` function replaces the `agent_yaml_write()` function. The new function works to write the *agent*, the *informant* object, or both, to YAML.",1,85,FALSE,NA
pointblank,331eb478084a52650c8c318c3c7653f9,"The names of more YAML functions have been changed, the final roster now consists of: `yaml_write()`, `yaml_read_agent()`, `yaml_read_informant()`, `yaml_agent_interrogate()`, `yaml_agent_string()`, and `yaml_agent_show_exprs()`.",1,86,FALSE,NA
pointblank,03c84042ce29a591fdaac6abe41611c8,The `x_write_disk()` function replaces the `agent_write()` function. The new function works to write the *agent* or the *informant* object to disk.,1,87,FALSE,NA
pointblank,afee82e91aa8b9f291959d02c01b2429,The `x_read_disk()` function replaces the `agent_read()` function. The new function works to read both the *agent* or the *informant* objects written to disk.,1,88,FALSE,NA
pointblank,31146006d8c3848d07bce1eaef3c0ac9,The `email_preview()` function has been renamed to `email_create()`.,1,89,FALSE,NA
pointblank,caa6a7984ae6b9fae5e7816d734e38de,"The new `db_tbl()` function makes it ridiculously easy to access a database table from the selection of databases that **pointblank** supports for validation; they are accessible with the supplied keywords `""postgres""` (PostgreSQL), `""mysql""` (MySQL), `""maria""` (MariaDB), `""duckdb""` (DuckDB), `""sqlite""` (SQLite), or, with any driver function you'd like to supply.",1,90,FALSE,NA
pointblank,6e205cfb255251c26becf757687c5863,"Added the `log4r_step()` function which can be used as an action in an `action_levels()` function call (i.e., a list component for the `fns` list). We can place a call to this function in every condition that should produce a log entry (i.e., `warn`, `stop`, `notify`).",1,91,FALSE,NA
pointblank,f1c6c3e372384f2be6f49e4380b06a26,Added several articles that explain the different validation workflows (there are six of 'em) and articles that go over the *Information Management* workflow.,1,92,FALSE,NA
pointblank,e8761e00571f8de68fc993f5ba2bd967,Improved documentation for almost all functions in the package; added more useful examples.,1,93,FALSE,NA
pointblank,2612e08064130af128b5d8486a3c8ddc,Added a table to the project `README` that keeps everyone apprised of the project milestones and the issues to be closed for each upcoming release.,1,94,FALSE,NA
pointblank,efa0c17968dfcb339e37139001bc5448,"Improved appearance of the agent report: (1) more tooltips, (2) the tooltips are much improved (they animate, have larger text, and are snappier than the previous ones), (3) SVGs are now used as symbols for the validation steps instead of blurry PNGs, (4) less confusing glyphs are now used in the `TBL` column, (5) the agent label can be expressed as Markdown and looks nicer in the report, (6) the table type (and name, if supplied as `tbl_name`) is shown in the header, (7) validation threshold levels also shown in the table header, (8) interrogation starting/ending timestamps are shown (along with duration) in the table footer, (9) the table font has been changed to be less default-y, and (10) adjustments to table borders and cell shading were made for better readability.",1,95,FALSE,NA
pointblank,fedb81c57c105c1e8bf0be9511ab12b5,"The `get_agent_report()` function now has `lang` and `locale` arguments to override any of those values set prior (e.g., in `create_agent()`). This allows for the reporting language to be changed without the need to re-run everything from scratch.",1,96,FALSE,NA
pointblank,4b3d8fae2b774a61e80ed9cc0b8d0a33,"The `set_tbl()`, `remove_tbl()`, `set_read_fn()`, and `remove_read_fn()` functions can now also be used with an *informant* object.",1,97,FALSE,NA
pointblank,27801be0b67c8a76e0bb37d00413ae32,The `get_sundered_data()` function is more clear with regard to which validation steps are considered for splitting of the data. Using validation steps with `preconditions` must fulfill the rule that the target table only have a single form across steps.,1,98,FALSE,NA
pointblank,e4fbf2efe00f9a321fedb9e99b264fa1,"The `is_exact` argument is new in the `col_schema_match()`, `expect_col_schema_match()`, and `test_col_schema_match()` functions, further allowing these types of validations to be less stringent. This argument loosens the requirement to include all class names for a column that may have multiple. Also, we can specify `NULL` to entirely skip the checking of a class/type.",1,99,FALSE,NA
pointblank,bd043396abf1b93d38360d3c718be2fe,"We can now use more combinations of validation functions in `conjointly()`. Those validation functions that intrinsically operate over a single test unit (e.g., all of the `col_is_*()` functions) now work in combination with validation functions that operate over *n* test units (e.g., the `col_vals_*()` functions). This lets us test for a condition where columns are of a certain type *AND* individual test units fulfill the `col_vals_*()` requirements.",1,100,FALSE,NA
pointblank,219c21082108c67965b01b171653fc47,Simplified the `sections` argument of `scan_data()` to be a length-1 character vector containing key characters standing for section names.,1,101,FALSE,NA
pointblank,974d0645baaf815939c296165c7a152f,Refactored a large portion of the code that produces the agent report to increase rendering speed.,1,102,FALSE,NA
pointblank,ca0e16771476c60746cb8a2cfbdee1d1,Improved printing of errors/warnings (in the tooltips of the `EVAL` column in the agent report) thanks to implementation of HTML escaping.,1,103,FALSE,NA
pointblank,4c788c1f540d2e4f7829a58c61b16431,The small version of the agent report (perfect for emailing) now has much improved formatting.,1,104,FALSE,NA
pointblank,a0bdbaddb0575104687075aae5d3f4bd,Fixes a performance issue for validations on larger tables.,1,105,FALSE,NA
pointblank,df60f9d4e58f9d1022a621af168f6c39,Improved formatting of value ranges in the agent report.,1,106,FALSE,NA
pointblank,96fc15a4cf35216657e49da42999cd8b,Improved compatibility with validations performed on SQL Server 2019.,1,107,FALSE,NA
pointblank,2c13103bb9202c0306d5fce79565c741,"Integrated the `label` argument into all validation functions; this label is available in the agent `x_list` and, more importantly, displayed in the agent report (in the `STEP` column).",1,108,FALSE,NA
pointblank,960fbeebcdc35f3b1f6662cc758bbd27,"Added the `""combined""` option in the `get_sundered_data()` function (for the `type` argument). This applies a categorical (pass/fail) label (settable in the new `pass_fail` argument of the same function) in a new `.pb_combined` flag column of the output table.",1,109,FALSE,NA
pointblank,68dffb897a32727b062e26ad5340b18d,Made several visual improvements to the agent report.,1,110,FALSE,NA
pointblank,66cac6ac09477c92adde9989ecdfacea,"The *agent* can now be given a table-reading function, which is used for reading in the data during an interrogation. If a `tbl` is not provided, then this function will be invoked. However, if both a `tbl` and a `read_fn` is specified, then the supplied `tbl` will take priority (useful for one-shot interrogations with a table in an interactive context). There are two ways to specify a `read_fn`: (1) using a function (e.g., `function() { <table reading code> }`) or, (2) with an R formula expression (e.g., `~ { <table reading code> }`).",1,111,FALSE,NA
pointblank,892df65c1c368c67c152b39f821594a5,Added a a set of functions for setting and removing an agent's association to a data table (`set_tbl()` and `remove_tbl()`) or a table-reading function (`set_read_fn()` and `remove_read_fn()`).,1,112,FALSE,NA
pointblank,74872292a90d9319e099d65a337be367,All validation functions now have a `step_id` parameter. The use of step IDs serves to distinguish validation steps from each other and provide an opportunity for supplying a more meaningful label compared to the step index. Supplying a `step_id` is optional; **pointblank** will automatically generate the step ID value (based on the step index) if it's not provided.,1,113,FALSE,NA
pointblank,6624207e91fd0fcfa5e7cb5a4d079eb7,"Added new functions for reading and writing YAML (here, called **pointblank** YAML). A **pointblank** YAML file can be generated with an agent by using the `agent_yaml_write()` function. You're always free to create **pointblank** YAML by hand, or, you can edit/extend an existing **pointblank** YAML file. An agent can be created from **pointblank** YAML with the `agent_yaml_read()` function. It's also possible to interrogate a target data table right from **pointblank** YAML by using `agent_yaml_interrogate()`.",1,114,FALSE,NA
pointblank,2a9696eeaad4fb9e15bb6564307706c2,"The `agent_write()` and `agent_read()` functions were added; they allow for saving the agent to disk and reading the agent back from disk. Saved-to-disk agents still retain their validation plans, intel from interrogations, and their reference to a target table (the `read_fn` value) and even the entire target table (if requested). Reading an agent from disk with `agent_read()` allows us to use post-interrogation functions (e.g., `get_agent_x_list()`, `get_data_extracts()`, `get_agent_report()`, etc.) as though the interrogation had just occurred.",1,115,FALSE,NA
pointblank,913ad473041dfa5a52554a1579645d82,"**pointblank** is now compatible with Spark DataFrames through the **sparklyr** package. Simply use a `tbl_spark` object when specifying the target table in `create_agent()`, `set_tbl()`, or `scan_data()`.",1,116,FALSE,NA
pointblank,16c3968c44af065759dd08e48ba1a29e,An issue with showing the agent report table in the email message body via the `email_blast()` function has been resolved.,1,117,FALSE,NA
pointblank,b94b85b0cafe595a3d1650cfbaf72a12,"Resolved issue with using literal character values in comparison-based validation functions (e.g., `col_vals_between()`, `col_vals_gt()`, etc.).",1,118,FALSE,NA
pointblank,0a2150849df3f5ade3d3460123e33aa1,Completely rewrote the underlying processes for the storage and retrieval of translation text.,1,119,FALSE,NA
pointblank,a5686925e785b2b53c3a72c165dda9ff,Much improved translations of reporting text the Spanish and German languages. Thanks @​pachamaltese and @​DavZim for these valuable contributions!,1,120,FALSE,NA
pointblank,25ad570689e819c027baed44d0a05796,New **testthat** tests were added that test **pointblank** validations against mock PostgreSQL and MySQL database tables via the **dittodb** package. Thank you @​pachamaltese for implementing these tests.,1,121,FALSE,NA
pointblank,3172a357fb9e49f3e10d047eb6af5b7f,"New R Markdown validation feature allows for validation testing within specialized validation code chunks where the `validate = TRUE` option is set. Using **pointblank** validation functions on data in these marked code chunks will flag overall failure if the stop threshold is exceeded anywhere. All errors are reported in the validation code chunk after rendering the document to HTML, where green or red status buttons indicate whether all validations succeeded or failures occurred. Clicking any such button reveals the otherwise hidden validation statements and their error messages (if any). Using **pointblank** in an R Markdown workflow is enabled by default once the **pointblank** library is loaded. While the framework for such testing is set up by default, the new `validate_rmd()` function offers an opportunity to set UI and logging options.",1,122,FALSE,NA
pointblank,a0756a18428e2640dd451053ea657387,Added an R Markdown template for the new R Markdown validation feature (`Pointblank Validation`).,1,123,FALSE,NA
pointblank,4003071f8fbd73815e4a8577a0aaea8a,"The new `stop_if_not()` function works well as a standalone, replacement for `stopifnot()` but is also customized for use in validation checks in R Markdown documents where **pointblank** is loaded. Using `stop_if_not()` in a code chunk where the `validate = TRUE` option is set will yield the correct reporting of successes and failures whereas `stopifnot()` *does not*.",1,124,FALSE,NA
pointblank,508445273bea25cbb8c5cd2368938a48,A `knit.print()` method was added to facilitate the printing of the agent report table within an R Markdown code chunk.,1,125,FALSE,NA
pointblank,ba61567a23f50a792b32d2d7f01e83cb,"The default behavior of using validation step functions (e.g., `col_vals_lt()`) directly on data tables has been changed. Before, a single test unit failure would trigger a warning. Now, a single test unit failing results in an error. Going back to the earlier behavior now requires the use of `actions = warn_on_fail()` (a new helper function, which has a default `warn_at` threshold value of `1`) with each invocation of a validation step function. The `stop_on_fail()` helper function is also new in this release, and has a `stop_at` threshold parameter, also with a default of `1`.",1,126,FALSE,NA
pointblank,6f4bf0fa5db59629ef5451472a4dac95,"Added 24 *expectation* functions (e.g., `expect_col_exists()`, `expect_rows_distinct()`, `expect_col_schema_match()`, etc.) as complements of the 24 validation functions. All of these can be used for **testthat** tests of tabular data with a simplified interface that exposes an easy-to-use failure `threshold` (defaulting to `1`).",1,127,FALSE,NA
pointblank,048faccf5863d2a65e9b0987005f1067,"Added 24 *test* functions (e.g., `test_col_exists()`, `test_rows_distinct()`, `test_col_schema_match()`, etc.) to further complement the 24 validation functions. These functions return a logical value: `TRUE` if the threshold (having a default of `1`) is *not* exceeded, `FALSE` otherwise. These `test_*()` functions use the same simplified interface of the `expect_*()` functions.",1,128,FALSE,NA
pointblank,df533105503107c0d40a8533d33e9f21,"Added the `col_vals_expr()`, `expect_col_vals_expr()`, and `test_col_vals_expr()` *validation*, *expectation*, and *test* functions, making it easier for DIY validations. The **dplyr** `expr()`, `case_when()`, and `between()` functions were re-exported for easier accessibility here since they work exceedingly well with the new functions.",1,129,FALSE,NA
pointblank,561e6c0db56c807712775224395af544,`col_schema_match()` (and its *expect* and *test* analogues) gained new arguments: `complete` and `in_order`. These allow for some relaxation of constraints related to the completeness and ordering of columns defined in a `col_schema` object (created by `col_schema()`).,1,130,FALSE,NA
pointblank,83e3c99bfc6b3f1a91452507d18db6a4,"The `preconditions` argument available in all *validation*, *expectation*, and *test* functions now accepts both formula and function values (previously, only formula values were accepted).",1,131,FALSE,NA
pointblank,13ce501d32f4249834d63bdd0266ac05,"The `get_agent_report()` function now has a `size` argument as an option to get the agent report table in the `""standard""` (width: 875px) size or the `""small""` size (width: 575px); previously this option was only accessible through `...`.",1,132,FALSE,NA
pointblank,d667444ff97dec984546b1732811554f,"The appearance of the agent report has improved and it's gained some new features: (1) data extracts for failing rows (on row-based validation steps) can be downloaded as CSVs via the new buttons that appear in the `EXT` column, (2) there are useful has tooltips on most fields of the table (e.g., hovering over items in `STEP` will show the brief, `TBL` icons will describe whether any preconditions were applied to the table prior to interrogation, etc.), and (3) there are printing improvements in the `COLUMNS` and `VALUES` columns (e.g., table columns are distinguished from literal values).",1,133,FALSE,NA
pointblank,310c9dfe81a2e5cea0fdbfd245d8265c,"Improved the appearance of the email message generated by `email_blast()` and `email_preview()`. This email message, when using the `stock_msg_body()` and `stock_msg_footer()` as defaults for `msg_body` and `msg_footer`, embeds a `""small""` version of the agent report and provides some introductory text with nicer formatting than before.",1,134,FALSE,NA
pointblank,9b43dd8fa77c84f9bb59344381b5e6bf,"All functions now have revised documentation that is more complete, has more examples, and consistent across the many *validation*, *expectation*, and *test* functions.",1,135,FALSE,NA
pointblank,0fdd8434e1f77f3b5e0df88e6dd07b6a,"The package `README` now contains better graphics, some reworked examples, and a new section on the package's design goals (with a listing of other **R** packages that also focus on table validation).",1,136,FALSE,NA
pointblank,eba3233aca8c62ff2eb82301f2dca47a,Rewrote the internal `stock_stoppage()` and `stock_warning()` functions so that the generated error and warning messages match whether validation functions are used directly on data or *expectation* functions are being used.,1,137,FALSE,NA
pointblank,bbad62fb3f2d40d0a2932fb5a261d334,Console status messages when performing an interrogation now only appear in an interactive session. They will no longer appear during R Markdown rendering nor during execution of unattended scripts.,1,138,FALSE,NA
pointblank,39fa1583bfb67d55ade8e78a456e5fb5,"The `col_vals_regex()` *validation* function (plus the associated *expectation* and *test* functions) can now be used with database tables (on some of the DB types that support regular expressions). This has been tested on MySQL and PostgreSQL, which have differing underlying SQL implementations.",1,139,FALSE,NA
pointblank,7177c1a1ff422ba95523b7086f2e35cd,"The `col_schema()` function now allows for either uppercase or lowercase SQL column types (using `.db_col_types = ""sql""`). Previously, supplying SQL columns types as uppercase (e.g., ""INT"", ""TINYINT"", etc.) would always fail validation because the SQL column types of the target table are captured as lowercase values during the `create_agent()` call.",1,140,FALSE,NA
pointblank,a459319325c5c15bfe279a96bc7da0b9,"Many new tests were added to cover both the new functions and the existing functions. It's important for a validation package that testing be comprehensive and rigorous, so, this will continue to be a focus in forthcoming releases.",1,141,FALSE,NA
pointblank,1c6582f221c74e36b0b7740e784ffbf8,Fixed a duration label bug in the console status messages that appear during interrogation (now consistently has values reported in seconds),1,142,FALSE,NA
pointblank,8e62c66a8043be38568a21bcf6acf960,Added column validity checks inside of internal `interrogate_*()` functions,1,143,FALSE,NA
pointblank,8bea819f1a9f85356d77dd91fb07f53b,Fixed implementation of the `col_vals_between()` and `col_vals_not_between()` step functions to work with `tbl_dbi` objects.,1,144,FALSE,NA
pointblank,70856aff5dfddff4d1b43f19e130e483,"Added the `scan_data()` function, which thoroughly scans any table data so you can understand it better (giving you an HTML report).",1,145,FALSE,NA
pointblank,0431e450f235ec3c0e308e7cc30472fa,Added the `get_agent_x_list()` function to provide easy access to agent intel,1,146,FALSE,NA
pointblank,6f9e68a203620ed51a8513b746e66517,"Added the `get_agent_report()` function to give fine control over the agent's gt-based reportage; also, the agent's default print method is now that report (with default appearance options)",1,147,FALSE,NA
pointblank,0850a65ed7e1ecf6d8336a46755e5c78,Added the `get_sundered_data()` function to split the table data into 'pass' and 'fail' pieces after interrogation,1,148,FALSE,NA
pointblank,3ac71663d92f6867da8517047ddb5064,Added the `col_schema_match()` validation step function; it works in conjunction with a `col_schema` object (generated through the `col_schema()` function) to help determine whether the expected schema matches the target table.,1,149,FALSE,NA
pointblank,dd9ce5454b5c48c3b0e1375962f4ee0c,Added multilingual support to reports generated by agent validations and by those produced through the new `scan_data()` function,1,150,FALSE,NA
pointblank,5866170dc63b01ff54074afe881ca48a,More fully integrates the gt (for tables in reports) and blastula (for email production and delivery) packages,1,151,FALSE,NA
pointblank,a9d84712b5f8d550d9adf17bb0e1c027,Numerous fixes to ensure compatibility with tibble 3.0.0,1,152,FALSE,NA
pointblank,c08d6e884384c6007cdd947536a0176d,"The `focus_on()` function has been removed in favor of directly using a data object. This means that a single use of `create_agent()` can now only work on a single table at a time (`create_agent()` now has a `tbl` argument). Also, the input `tbl` can be a `data.frame`, a `tbl_df`, or a `tbl_dbi` object.",1,153,FALSE,NA
pointblank,6efd2f41c3f4f2501b7bfe18143f2ca6,"The `preconditions` argument has changed and it can now be used to temporarily transform the table (i.e., transforming for a particular validation step). Previously, this option could only filter the input table but now it's possible to do useful things like joining in a table, adding columns, filtering rows, etc. The `preconditions` args now accepts a list of expressions that manipulate the table data.",1,154,FALSE,NA
pointblank,e0966d4d71e26923ef29b6763afb2f35,"The `action_levels()` helper function is introduced to work with the `actions` argument (in every validation step function). This replaces the `warn_count`, `stop_count`, `notify_count`, `warn_fraction`, `stop_fraction`, and `notify_fraction` arguments. The function allows for evaluation of functions (given in the `fns` argument) as a reaction to exceeding thresholds specified in `warn_at`, `stop_at`, and `notify_at`.",1,155,FALSE,NA
pointblank,a027260f798f7ddc57832666c32132d9,"When using validation step functions directly on data (i.e., no use of `create_agent()`), data is now passed straight through after that validation step. The purpose now in that mode is to create warnings or throw errors if the `warn` or `stop` thresholds are exceeded.",1,156,FALSE,NA
pointblank,a16f5c68db2b98dcb40119c3a5411c73,"Across all **pointblank** validation step functions, the argument that stands for table columns has been normalized to `columns`.",1,157,FALSE,NA
pointblank,3ed294ac0bbe2d4c86cf8d9cb6affd7e,"The `incl_na` argument, which was implemented in a few validation step functions, has been renamed to `na_pass` to better indicate its purpose (to consider any encountered `NA` values as passing test units), and, its use has been expanded to other relevant functions.",1,158,FALSE,NA
pointblank,3d678276ca0b34449605764f606504aa,"It's now possible to use `vars()` and certain tidyselect select helpers (e.g., `starts_with()`) when defining `columns` in the **pointblank** validation step functions.",1,159,FALSE,NA
pointblank,c77813a90629eaa5c978531af17e0e96,The `conjointly()` function is a new validation step function that allows for multiple rowwise validation steps to be performed for joint validity testing.,1,160,FALSE,NA
pointblank,5933e352560ddff733037cf4527c96d7,Revisions on account of API changes in **tidyr** `1.0.0`.,1,161,FALSE,NA
pointblank,42a8861b38b32b57a8263db3abd2af02,Incorporates corrections related to API changes in **rlang** `0.2.0`.,1,162,FALSE,NA
pointblank,d4e6a170bacab946cf8aa8ae93b61050,First release.,1,163,FALSE,NA
pool,e4881e5454ba62dd91c9fa2f2d8bc440,Now explicitly requires DBI 1.2.0 (#178) and messages if you're using an old dbplyr (#179).,1,1,FALSE,NA
pool,1ac8cee139416939fe415c73bc680103,"No longer depends on the withr package, by instead requiring R 3.6.",1,2,FALSE,NA
pool,23c51f6ef9a8839edd543dae73edd9b3,Add wrappers for dbplyr generics `db_col_types()` (#171) and `db_copy_to()` (#172).,1,3,FALSE,NA
pool,1053d4025f108e8facda787b842fffa3,Pool no longer generates spurious messages about needing to use `in_schema()` or avoiding the use of `ident_q()`.,1,4,FALSE,NA
pool,254dd7d2a84c6a420330c0cdb380101f,Add support for new DBI generics that return Arrow objects.,1,5,FALSE,NA
pool,0f4e6487b8bcba16c81eb4c37d864580,`copy_to()` now returns a tbl that uses the Pool.,1,6,FALSE,NA
pool,248ef7a852c3d0662ec65a986710fe9c,Added missing methods for `sql_join_suffix()` (#165) and `sql_query_explain()` (#167).,1,7,FALSE,NA
pool,17115e5cdfcdfab55696a392b1c30101,Pool has been re-licensed to MIT (#158).,1,8,FALSE,NA
pool,2dc6a0f339eaec565d1c38f70e4d3b71,`dbPool()` gains an `onCreate` parameter that allows you do something to every connection that pool creates. This is useful for setting options that you want to apply to every connection (#98).,1,9,FALSE,NA
pool,48298de14062e04aa778967758867055,New `localCheckout()` checkouts and then automatically returns an object. It only works in function scope.,1,10,FALSE,NA
pool,86526470dfffb6edd91cca58ee733e02,Pools now get a useful print method (#140).,1,11,FALSE,NA
pool,a705392e05169d10cdad6cb112584afb,"pool now implements the dbplyr 2.0.0 interface, eliminating warnings when using pool with dplyr (#132).",1,12,FALSE,NA
pool,14da3efcaca87503b1a1e542ad262441,Pool errors and warnings have been reviewed with an eye to making them more immediately actionable (#145).,1,13,FALSE,NA
pool,a183675a437ae2bd91b52c654c44b0eb,Objects are now validated once on first checkout to ensure that the object and validation strategy are both ok.,1,14,FALSE,NA
pool,bddd9480874d3807953c6052a7d8d384,"Added support for SAP HANA databases (@​marcosci, #103).",1,15,FALSE,NA
pool,e67e0d623f87431c7210d03b11ece290,"`dbPool()` and `poolCreate()` now default to validating every 60s, rather than every 600s. This makes pools a little more robust to shorter connection timeouts (#149).",1,16,FALSE,NA
pool,40c6eedd676d5253b15bbe614b49e780,`dbPool()`'s `validateQuery` is now actually used (#153).,1,17,FALSE,NA
pool,e61538148cb08be6b3a91bf3fd82fc25,DBI methods should dispatch correctly in more cases; in particular `dbReadTable()` and friends will now work correctly when used with `DBI::Id()` (#120).,1,18,FALSE,NA
pool,26ad71dabb653d46c19db70b7219e2b5,`left_join()` and friends once again work with pool objects (#111).,1,19,FALSE,NA
pool,ba3b39e757b1c5a9a6079f17c60953fe,`dbPool()` objects previously could leak memory. (#115),1,20,FALSE,NA
pool,971033e6c9ee9baed5033276c19a3e8d,"dplyr and dbplyr are now Suggests instead of Imports. Thanks, @​AkhilGNair! (#106)",1,21,FALSE,NA
pool,6306ffb00f6b449e5897cfd4984eabcf,"When used with dbplyr, `tbl`s now store a copy of the pool, not a checked out connection. (#107)",1,22,FALSE,NA
pool,089b6067e5edd107ccc30a8d15052808,"`dbListObjects()`, `dbCreateTable()`, `dbAppendTable()`, `dbIsReadOnly()`, `dbQuoteLiteral()`, and `dbUnquoteIdentifier()` methods are now implemented for pool objects. (#100, #109)",1,23,FALSE,NA
pool,f789fcac1bc746ecf7597fdc8bc2cbad,"Previously, pool would always set `options(warn=1)` when running tasks. It now ensures that the value of `warn` can be 1 or greater. This can be useful in debugging, so that `options(warn=2)` can be used. (#90)",1,24,FALSE,NA
pool,653bc157ea808d63d1a603970a604451,Update unit test for compatibility with future dbplyr. (#82),1,25,FALSE,NA
pool,1cec60de1bdbad58d5ce8b7f898d6a04,Change package maintainer,1,26,FALSE,NA
pool,bb11cd906ad0be780854519aeacabbda,"Changed the methods `dbExistsTable()`, `dbRemoveTable()`, `dbWriteTable()`, `dbGetQuery()`, `dbExecute()`, `dbListFields()` and `dbReadTable()` to dispatch over the first two arguments, as per the default definition in DBI. (#57)",1,27,FALSE,NA
pool,d55a4dc01c78b95e74b9fffcfc446f23,"Use `requireNamespace(""pkg"", quietly = TRUE)` for `RMySQL` and `RSQLite` in the examples and tests since these are ""Suggests"" packages (i.e. not ""Depends""). (commit 4205feb)",1,28,FALSE,NA
pool,3af10fe3608b6a59b57c5a3692782e58,Included more examples in the documentation. (#50),1,29,FALSE,NA
pool,85b8e3d615498fa17516625a3e23066a,"Fixed the ""test-create-destroy.R"" test. Previously, this test had to be run manually because it uses `later` and its async nature could not be captured by `testthat`. However, using `later::run_now()` immediately after the relevant code snippet (i.e. still inside the first argument of `expect_*`) solves the issue. (#50)",1,30,FALSE,NA
pool,c3ddbe0dd43e9b553c64fd7f36062d61,"Use `difftime(t1, t0, units = ""secs"")` when calculating a time interval. Unlike the simpler `t1 - t0` method, this guarantees that the result will always be consistently the number of *seconds*. However, there's no change when calculating a new time (*not* a time interval) using `t2 <- t1 - interval`, since we want `t2` to be a time, rather than a time interval (which is always what is returned by `difftime`). (#50 and #48, thank you @​caewok!)",1,31,FALSE,NA
pool,19fad7658eb402261f4509b49fc0a66e,"Fix all dbplyr wrapper functions that weren't passing in additional arguments because the call to the original `dbplyr` function included `... = ...` instead of `...`. Also, pass `temporary = temporary` in `copy_to.Pool`, so that we don't defeat the whole purpose of that wrapper. (#50)",1,32,FALSE,NA
pool,f1aa143998ce19364649eafcf46e0483,"Change the place where the check for the maximum number of objects is made. Previously, this chunk of code was misplaced and it would result in buggy behavior: namely, once the maximum number of objects was reached, no more objects could be checked out (**even if you returned any/all objects back to the pool**). The only reason this wasn't spotted earlier is because the default `maxSize` is `Inf` (and there's usually not a good reason to change it). (#50)",1,33,FALSE,NA
pool,78da61321bf072afeda49680cd25814e,"Fix #39: Moved `dplyr` support in `pool` from `dplyr` 0.5.0 to `dplyr` 0.7.0, which includes a lot of breaking changes including the addition of a brand new package called `dbplyr`. (#42) For `pool` users, the main change is that all the `src_*` functions are now gone (from `dplyr` and `pool`). Therefore, if you had something like:",1,34,FALSE,NA
pool,78da61321bf072afeda49680cd25814e,"```
data <- src_pool(pool) %>% tbl(""test"")
```",1,35,TRUE,NA
pool,78da61321bf072afeda49680cd25814e,You can just change it to the simpler:,1,35,FALSE,NA
pool,78da61321bf072afeda49680cd25814e,"```
data <- pool %>% tbl(""test"")
```",1,36,TRUE,NA
pool,78da61321bf072afeda49680cd25814e,"If you're still on an old version of `dplyr` and want to use `pool` as well, please install the package using the tag created for that purpose:",1,36,FALSE,NA
pool,78da61321bf072afeda49680cd25814e,"```
devtools::install_github(""rstudio/pool@​dplyr-pre-0.7.0-compat"")
```",1,37,TRUE,NA
pool,f84d13234c303dc8250659140106d1c7,"Changed all time arguments to accept number of ***seconds***, instead of milliseconds. This is because this is what the `later` package uses and there was no reason for `pool` to be different, except backward compatibility. Since both time arguments to `dbPool` (`idleTimeout` and `validationInterval`) have default values, we're hoping this change won't even be noticed by most users. If you were setting either of those directly, however, you will need to update your app if you update the `pool` package. (#44) `<!--Since this release is already breaking backward compatibility, we're going to town!-->`{=html}",1,38,FALSE,NA
pool,b2e1242b100822658a1846863d6648b2,"Dropped the Pool methods around `dbConnect` and `dbDisconnect`, because these made it easier to lose track of whether you're operating on a Pool object or on a database connection directly. From now on, only these allow you to get a connection from the pool and return it back, respectively: (#44)",1,39,FALSE,NA
pool,b2e1242b100822658a1846863d6648b2,"```
con <- poolCheckout(pool)
poolReturn(con)
```",1,40,TRUE,NA
pool,bc6620310dc917dc21b26c45b3d77e28,Use `later` package for scheduling tasks (#44). This also has the side effect of fixing #40 and #43 since `later` allows us to get rid of the `naiveScheduler` completely.,1,41,FALSE,NA
pool,e2e393f0d5a195559c0df04abc7fbe26,Roxygen 5.0.1 to 6.0.1. (commit #9952000),1,42,FALSE,NA
pool,fc65272f0b1a03a9753f0e4f2be5a6e0,Initial release!,1,43,FALSE,NA
profvis,6c496b85b26cf7865dd43e815166405d,"`print()` gains an `aggregate` argument. Use `print(profvis(f()), aggregate = TRUE)` to aggregate frames by name in the flamegraph. This makes it easier to see the big picture (#115). Set the `profvis.aggregate` global option to `TRUE` to change the default.",1,1,FALSE,NA
profvis,88e8423407f3805c89d132e8e20f1720,"For C function declarations that take no parameters, added `void` parameter.",1,2,FALSE,NA
profvis,29111b3dd5708af34ccb77584c1b0029,"Resolved #102:"" Added `simplify` argument. When `TRUE` (the default), the profiles are simplified using the new `filter.callframes` argument of R 4.0. This argument has no effect on older R versions. (#118)",1,3,FALSE,NA
profvis,c69930691ffbf37681642ada8fa71671,Fixed #111: auto-scrolling to lines of code did not work in some browsers. (#113),1,4,FALSE,NA
profvis,56be0d0ed633b04ab87c75f0ba252943,"Added a profvis Shiny module, for starting/stopping the profiler during the execution of a Shiny application. This can be helpful if you don't want to profile the entire execution of an app, only a certain operation. To install the profvis module into your app, add `profvis_ui(""profvis"")` to your UI, and `callModule(profvis_server, ""profvis"")` to your server function.",1,5,FALSE,NA
profvis,fdf451969117ddba61778d75188f8596,Exported `parse_rprof` function.,1,6,FALSE,NA
profvis,a4ff8118b52f1153b60030b99078848b,Fixed problem with development build of R where source refs are turned on by default (reported by Tomas Kalibera).,1,7,FALSE,NA
profvis,6418410e14d63d37089590c90c9d5b52,Fixed #77: The contents of `<expr>` are now always listed first.,1,8,FALSE,NA
profvis,aadb3b990af50bf3b13859b112cf5627,"Addressed #85: The `pause()` function is now implemented in C, which reduces the amount of data generated.",1,9,FALSE,NA
profvis,a5f5c3c4b336d61a27b3ab6c7da06f2e,"Fixed #86: In the data pane, toggling between horizontal/vertical view caused the flame graph to render on top of the tree view.",1,10,FALSE,NA
profvis,6ebdf901c84eadc57409ba1409b7423b,"Fixed #84: In the data pane, leaf nodes (representing top-most calls on the stack) were not displayed.",1,11,FALSE,NA
profvis,99770499f5da5405c01c88e6f21bb7fe,"Addressed #82: In the data pane, if a node has exactly one child, that child will automatically be expanded. This makes it more efficient to explore the data. (#83)",1,12,FALSE,NA
profvis,c75568bfe5728ef3b61eabf01da0cbc9,"Fixed #50: In the data pane, function calls were shown in reverse order.",1,13,FALSE,NA
profvis,d2edf3c45a2786f92fcda4ec87d36e88,"Fixed #68: Profvis threw an error when a package was installed using `devtools::install_github(args = ""--with-keep.source"")`.",1,14,FALSE,NA
profvis,f3c19fdef83f9391b083e36036d0074e,"Fix bug where, when loading a profile that didn't contain memory data, profvis would throw an error. #66",1,15,FALSE,NA
profvis,e0cdde40cad823b2581d31f780dd0951,Fixed #73: Profvis would throw an error if used on code sourced from a remote URL.,1,16,FALSE,NA
promises,8f2db6684f40a74c100590faab10088a,"`future_promise()` received a speed improvement when submitting many requests with a minimal number of `{future}` workers. If `future_promise()` runs out of available `{future}` workers, then `future_promise()` will preemptively return for the remainder of the current `{later}` execution. While it is possible for `{future}` to finish a job before submitting all of the `future_promise()` requests, the time saved by not asking `{future}`'s worker availability will be faster overall than if a few jobs were submitted early. (#78)",1,1,FALSE,NA
promises,be4e18cce460eae1f2dc768b18cd081a,Fixed #86: `future_promise()` spuriously reports unhandled errors. (#90),1,2,FALSE,NA
promises,cb0cd3009bf94d147a1c0a37e8bb575b,Move `{fastmap}` from `Suggests` to `Imports` for better `{renv}` discovery. (#87),1,3,FALSE,NA
promises,007e6654174d4bc08695c291d2a3789c,"Added `future_promise()` which returns a `promise` that executes the expression using `future::future()`. `future_promise()` should (typically) be a drop-in replacement for any `future::future()` function call. `future_promise()` will not execute `future` work faster than `future::future()`, but `future_promise()` will only submit `future` jobs if a worker is available. If no workers are available, `future_promise()` will hold the expression information in a `promise` until a worker does become available to better take advantage of computing resources available to the main R session. For more information, please see the `future_promise()` article. (#62)",1,4,FALSE,NA
promises,9a49ee91c72d45fe9ac1ef41fe5a9881,Added visibility support for `Promise$then(onFulfilled)`. (#59),1,5,FALSE,NA
promises,b55ffc3422bb1c5d2e0da438898d4d6a,Fix handling of FutureErrors during `future::resolved()` and `future::value()` by discarding the corrupt future. (#37),1,6,FALSE,NA
promises,dc3cbf95297cb24a4bcf946ec4201284,Fixed #49: `promise_all()` previously did not handle `NULL` values correctly. (#50)),1,7,FALSE,NA
promises,7643c277532503b54c2c54d0a6835786,"`new_promise_domain` now takes a `wrapOnFinally` argument, which can be used to intercept registration of `finally()`. Previous versions treated `finally` as passing the same callback to `then(onFulfilled=..., onRejected=...)`, and ignoring the result; for backward compatibility, promise domains will still treat `finally` that way by default (i.e. if `wrapOnFinally` is `NULL`, then `finally` will result in `wrapOnFulfilled` and `wrapOnRejected` being called, but if `wrapOnFinally` is provided then only `wrapOnFinally` will be called). (#43)",1,8,FALSE,NA
promises,cc1e4f139231d2b156da747c95173abd,Initial CRAN release,1,9,FALSE,NA
r2d3,c8cb30b03440bac6badf5dd0bf27f107,"Support for D3 v6 (@​dkjoluju, #85).",1,1,FALSE,NA
r2d3,b40b61f68f728c2b93e94392d7b0ab14,Update D3 v5 from 5.0.0 to 5.9.2 (#54).,1,2,FALSE,NA
r2d3,7341657ba0dd0ffe682fae4934aeb9a3,Avoid width and height from changing when refreshing rendering (#59).,1,3,FALSE,NA
r2d3,95f274b7c6733fe37206bc19a261361c,Fix default theme when running under RStudio 1.2 (#50).,1,4,FALSE,NA
r2d3,b0095c56977ea4c51c2bf845b25a1791,Fix examples that require pandoc to support CRAN's solaris environment.,1,5,FALSE,NA
r2d3,b994de9f08cccafa1a1e48eaa488690c,Skip tests that require pandoc to support CRAN's solaris environment.,1,6,FALSE,NA
r2d3,d45a41fcf7921a6b753f45e85200f851,Fix diagnostics message for dependencies with incorrect paths.,1,7,FALSE,NA
r2d3,9a33ef56971b6cb2c415a2b6115983f3,Translate R objects into D3 friendly data structures,1,8,FALSE,NA
r2d3,5f6731dcec9ef61f9ab2b97ebb78b51f,Render D3 scripts within the RStudio Viewer and R Notebooks,1,9,FALSE,NA
r2d3,18c8c2626d91ce0fc9d6167e6794c543,Publish D3 visualizations to the web,1,10,FALSE,NA
r2d3,9b90d1231abe7265a2bae76b0120da1e,"Incorporate D3 scripts into R Markdown reports, presentations, and dashboards",1,11,FALSE,NA
r2d3,c63936432851a2f4e4aa0de91791aab4,Create interacive D3 applications with Shiny,1,12,FALSE,NA
r2d3,5f389ed4f6cbb1b16a970570c2f48bbc,Distribute D3 based htmlwidgets in R packages,1,13,FALSE,NA
reactlog,e44054a8c814ed559648150448a3d561,Fixed Font Awesome icon warning about `refresh` icon (#87),1,1,FALSE,NA
reactlog,43847d3c0442e7fc808b1fd7f664b4ea,Added a shiny module to inline the current `reactlog`. See `?reactlog_module_ui` for an example (#66),1,2,FALSE,NA
reactlog,116cfa696f00fc8de0c735229c153ca3,Added `reactlog_enable()` and `reactlog_disable()` which replace the need to explicitly set R options (#61),1,3,FALSE,NA
reactlog,e91559453d3fb235c2e80e2b69bbd3e7,Use log entry for status bar instead of a final graph (#67),1,4,FALSE,NA
reactlog,952f883d0323f48e6336e454aea39ac2,Allow reactlog to handle isolate calls in a non-reactive context (#68),1,5,FALSE,NA
renv,1ef85082cba902d237f092e6ecad39e1,Fixed an issue where `renv::install(lock = TRUE)` produced lockfiles containing records with extraneous data. (#1828),1,1,FALSE,NA
renv,b704efbb2031280b57a174ac2d594233,"`renv::install()` gains the `lock` argument. When `TRUE`, the project lockfile will be updated after the requested packages have been successfully installed. (#1811)",1,2,FALSE,NA
renv,7a147969ec30567fe0da01a0fd5d2aa6,`renv` now supports the use of GitHub Enterprise servers with the `gitcreds` package for authentication credentials. (#1814),1,3,FALSE,NA
renv,47e749e22de2268fa92cb586c17a2f28,"`renv::dependencies()` now treats `#| eval: !expr <...>` chunk options as truthy by default, implying that such chunks are scanned for their R package dependencies. (#1816)",1,4,FALSE,NA
renv,9d6437584abc235ced28b9b77a83387a,"`renv::dependencies()` now requires usages of the import package to be namespace-qualified in order to be handled via static analysis; that is, `import::from(<pkg>)` is parsed for dependencies, but `from(pkg)` is not. (#1815)",1,5,FALSE,NA
renv,ecb95a9df3c0f8c6fc78343bd771de22,"`renv::load()` gains the `profile` argument, allowing one to explicitly load a specific profile associated with an `renv` project. See `vignette(""profiles"", package = ""renv"")` or https://rstudio.github.io/renv/articles/profiles.html for more details.",1,6,FALSE,NA
renv,3af930528eb6c06556e7392291142075,`renv::dependencies()` no longer includes `R` dependency versions declared from a `DESCRIPTION` file in its output. (#1806),1,7,FALSE,NA
renv,7e70ffaf8d2e6a4385e9c35c88ef450d,Fixed an issue where `renv` could fail to infer dependencies from R Markdown code chunks using engine 'R' (upper-case) rather than 'r' (lower-case). (#1803),1,8,FALSE,NA
renv,ec39256ce2fcc4442fb26ad03121948f,Fixed an issue where `renv` did not report out-of-sync packages when one or more packages used in the project were not installed. (#1788),1,9,FALSE,NA
renv,3cdb5ef18337b575b826496ba4f092c5,Fixed an issue where `renv` could over-aggressively activate P3M repositories when initializing a project. (#1782),1,10,FALSE,NA
renv,934d24d8c99d9032a82b85180de8a3ef,`renv::status()` now notifies the user if the version of R recorded in the lockfile does not match the version of R currently in use. (#1779),1,11,FALSE,NA
renv,7e7475bfdc5ea9915d926efdfcd0516f,"Fixed an issue where packages could appear multiple times in the lockfile, if that package was installed into multiple library paths. (#1781)",1,12,FALSE,NA
renv,c68438eef3d4077bf2c8b07dd073c664,"Installation of historical binaries of packages is once again enabled, now using the Posit Public Package Manager (P3M) service instead of Microsoft's (now defunct) MRAN service.",1,13,FALSE,NA
renv,ec118efcec67f4a737cacaf8833120b5,"`renv::init()` now respects the `Remotes:` field declared in a project's `DESCRIPTION` file, if any. (#1522)",1,14,FALSE,NA
renv,db1c8666633e8cc4640d34d530a477fe,`renv::embed()` now supports Quarto Markdown (`.qmd`) files. (#1700),1,15,FALSE,NA
renv,59519e9478e0be2c9a51d605ab170e58,renv now sets the `R_INSTALL_TAR` environment variable to match the default `tar` executable (if any) when installing packages. (#1724),1,16,FALSE,NA
renv,24d83d08b13f53c67303290aa2b810e9,renv now uses `--ssl-revoke-best-effort` by default when downloading files using `curl` on Windows. (#1739),1,17,FALSE,NA
renv,3394c3723ae88814820e4dc56e503ff7,Fixed an issue where `renv::install()` could fail to detect incompatible recursive package dependencies. (#1671),1,18,FALSE,NA
renv,8e212b01bc7c65a81d268f7d486d2350,"`renv::install()` now records remote information for packages installed from CRAN-like repositories, and uses that information when generating a lockfile and restoring those packages. This helps ensure that packages installed within an renv project via calls like `renv::install(""<pkg>"", repos = ""<repos>"")` can still be successfully restored in future sessions. (#1765)",1,19,FALSE,NA
renv,22586ec471ccc69959a46f6cedc11c1b,`renv::install()` now lazily resolves project remotes. (#1755),1,20,FALSE,NA
renv,eddcf4d862a66f2daa179064b363c3df,"`renv::init()` now respects Remotes declared within a project's `DESCRIPTION` file, if any.",1,21,FALSE,NA
renv,1b95b41b80ad800a815a502d686060e9,"Calling `renv::activate()` without explicitly providing the `profile` argument now preserves the current profile, if any. Use `renv::activate(profile = ""default"")` if you'd like to re-activate a project using the default profile. (#1217)",1,22,FALSE,NA
renv,b064dc1b72f1fed80551e750eccaf1a0,Fixed an issue where `renv` would try to prompt for the installation of `BiocManager` when activating a project using Bioconductor. (#1754),1,23,FALSE,NA
renv,0637c1f10eeebd3491d9a0180fa52722,Fixed an issue where directories containing a large number of files could cause `renv` to fail to activate a project. (#1733),1,24,FALSE,NA
renv,81f355448ec1a713c8b5524d5934c7d7,"Expanded the set of Linux distributions detected for automatic transformation of Posit Package Manager URLs to install binary packages. `renv` now correctly detects Red Hat Enterprise Linux 9, Rocky Linux 8 and 9, SLES 15 SP4 and SP5, Debian 11 and 12, AlmaLinux 8 and 9, and Amazon Linux 2. (#1720, #1721)",1,25,FALSE,NA
renv,e20d9faaf0e12d5adf6b6cee88594226,Fixed an issue where `renv` could warn the project appeared to be out-of-sync when using packages installed without an explicit source recorded. (#1683),1,26,FALSE,NA
renv,c3db6385c97a8e292a75b0b99ef7b11d,"`renv::install()` gains the `exclude` argument, which can be useful when installing a subset of project dependencies.",1,27,FALSE,NA
renv,1432cb94a577ce529827257b37855a15,Fixed an issue where PPM repositories were not appropriately transformed into the correct binary repository in `renv::restore()` when using pak.,1,28,FALSE,NA
renv,dabb040d657fe1baf4c512f8437585c8,`renv::init()` no longer prompts the user for the intended action for projects containing a library with only renv installed. (#1668),1,29,FALSE,NA
renv,4cc5c5a20e3cf7004148f4360b29519a,Fixed an issue where non-interactive usages of `renv::init()` could fail with projects containing a DESCRIPTION file. (#1663),1,30,FALSE,NA
renv,a786c1d3ac2555b7e6b715e154f8d392,Fixed an issue that could cause code within a project `.Rprofile` to execute before the project had been loaded in RStudio. (#1650),1,31,FALSE,NA
renv,363fccff658d7fb213133ad3870cc495,`renv::snapshot()` and `renv::status()` gain the `dev` argument. This can be used when you'd like to capture package dependencies from the *Suggests* field of your package's DESCRIPTION file. (#1019),1,32,FALSE,NA
renv,429a3ffabc161655edf75fb4b92280da,renv now parses package `NAMESPACE` files for imported dependencies. (#1637),1,33,FALSE,NA
renv,ccd44096fbe70771ce15233ccacb3545,renv no longer locks the sandbox by default.,1,34,FALSE,NA
renv,867ce013da436cf7de3db01ea0a7f84c,Fixed an issue where renv used the wrong library paths when attempting to activate the watchdog. This could cause a 10 second delay when activating the sandbox.,1,35,FALSE,NA
renv,5f2e7219f771e075533bcc187a96b22f,Fixed an issue where authentication headers could be duplicated when using the `libcurl` download method. (#1605),1,36,FALSE,NA
renv,c533d63d3269ca9169b0169981bfadd3,`renv::use()` now defaults to setting `isolate = TRUE` when `sandbox = TRUE`.,1,37,FALSE,NA
renv,8368cd19df67ce6827dbb30569a10d4c,"Fixed an issue where the renv watchdog could fail to load, leading to slowness in activating the sandbox on startup. (#1617)",1,38,FALSE,NA
renv,f4496c40413b940dcbb142c27cc21eca,"Fixed an issue where renv did not display warnings / errors from `renv::snapshot()` when `options(renv.verbose = FALSE)` was set. The display of these messages is now controlled via the `renv.caution.verbose` R option. (#1607, #1608)",1,39,FALSE,NA
renv,45bf7ab517fde73af95e2a0901d7ad1f,`renv::load()` now notifies the user if the synchronization check took an excessive amount of time due to the number of files being scanned in the project. (#1573),1,40,FALSE,NA
renv,a0b8ec9addc559f0ca8a9a17a1d63217,"`renv::init()` gains the `load` argument, making it possible to initialize a project without explicitly loading it. (#1583)",1,41,FALSE,NA
renv,89f265286e49cd250e15a7438213bab8,renv now uses a lock when synchronizing installed packages with the cache. This should help alleviate issues that can arise when multiple R processes are installing and caching packages concurrently. (#1571),1,42,FALSE,NA
renv,f566b505668c454bd0e43b8394e498b5,Fixed a regression in parsing expressions within R Markdown chunk options. (#1558),1,43,FALSE,NA
renv,9b1a97bbd95e948e63a9a7d00c017234,Fixed an issue that prevented `renv::install()` from functioning when source-only repositories were included. (#1578),1,44,FALSE,NA
renv,10553c56f6b6a6903181ef55a5f2e6c8,Fixed a logic error in reading `RENV_AUTOLOAD_ENABLED`. (#1580),1,45,FALSE,NA
renv,623e9e9b515cc8f9c4a3ee1eb9f6f8e4,`renv::restore()` no longer runs without prompting on load if the library is empty. (#1543),1,46,FALSE,NA
renv,aa3659cc38f198174b236058b4e212cc,"`renv::repair()` now checks for installed packages which lack a known remote source, and updates their `DESCRIPTION` files if it can infer an appropriate remote source. This typically occurs when a package is installed from local sources, but appears to be maintained or published on a remote repository (e.g. GitHub). This was previously done in `renv::snapshot()`, but we've rolled back that change as the prompting was over-aggressive. (#1574)",1,47,FALSE,NA
renv,68515e5d9f7876e6627a3e13c604db58,"`renv::status()` now first reports on uninstalled packages, before reporting on used \<-\> installed mismatches. (#1538)",1,48,FALSE,NA
renv,2c774dff23b57c4ddadb47b8f39ac6bb,"When the `RENV_STARTUP_DIAGNOSTICS` environment variable is set to `TRUE`, renv now displays a short diagnostics report after a project's autoloader has been run. This can be useful when diagnosing why renv is slow to load in certain projects. (#1557)",1,49,FALSE,NA
renv,e85ecaf7a7184143e9d2528a65912359,"renv now ensures the sandbox is activated on load, for R processes which are launched with the renv sandbox on the library paths. (#1565)",1,50,FALSE,NA
renv,007ab86f4d745c963f9f3bfd7766a908,`renv::restore()` no longer erroneously prompts when determining the packages which need to be installed. (#1544),1,51,FALSE,NA
renv,ce6c3221bfb40fcf512542d2e7078dec,`renv::update()` now ensures the `prompt` parameter is properly respected during package installation. (#1540),1,52,FALSE,NA
renv,247d559faeca4b2133af2d3a7e9551df,`renv::activate()` no longer erroneously preserves the previous library paths after restarting the session within RStudio. (#1530),1,53,FALSE,NA
renv,4869d7bfe5b68ec209af052f23550dcd,Use correct spelling of IRkernel package (#1528).,1,54,FALSE,NA
renv,ba71337b36d25b5a495ee359db8f0d1a,Honor `R_LIBCURL_SSL_REVOKE_BEST_EFFORT` when using an external `curl.exe` binary to download files. (#1624),1,55,FALSE,NA
renv,bdd458a2c029e09062bf0a4dc3c00b9d,"New `renv::checkout()` installings the latest-available packages from a repository. For example, `renv::checkout(date = ""2023-02-08"")` will install the packages available on 2023-02-08 from the Posit Package Manager repository. The `actions` argument allows you choose whether a lockfile is generated from the provided repositories (""snapshot""), or whether packages are installed from the provided repositories (""restore"").",1,56,FALSE,NA
renv,6713dce36405fb1b29ac4c8b38683be6,"`renv::deactivate()` gains a `clean` argument: when `TRUE` it will delete all renv files/directories, leaving the project the way it was found.",1,57,FALSE,NA
renv,b0ad820374598b258302139d7fd7eb24,"`renv::init()` now uses Posit Public Package Manager by default, for new projects where the repositories have not already been configured externally. See the options `renv.config.ppm.enabled`, `renv.config.ppm.default`, and `renv.config.ppm.url` in `?config` for more details (#430).",1,58,FALSE,NA
renv,8d4e43df132281d1e8e055ea29b0ac7d,"`renv::lockfile_create()`, `renv::lockfile_read()`, `renv::lockfile_write()` and `renv::lockfile_modify()` provide a small family of functions for interacting with renv lockfiles programmatically (#1438).",1,59,FALSE,NA
renv,8fb7318aa6fde410c5d8b52e7e945d10,"Handling of development dependencies has been refined. `renv::snapshot()` and `renv::status()` no longer track development dependencies, while `install()` continues to install them (#1019). `Suggested` packages listed in `DESCRIPTION` files are declared as development dependencies regardless of whether or not they're a ""package"" project.",1,60,FALSE,NA
renv,227ebce8d97bf469ee41c781116d059b,"MRAN integration is now disabled by default, pending the upcoming shutdown of Microsoft's MRAN service. Users who require binaries of older R packages on Windows + macOS can consider using the instance of CRAN mirrored by the Posit Public Package Manager (#1343).",1,61,FALSE,NA
renv,1fc78bbc50ef916a48862c09ed1c7844,"Development versions of renv are now tracked using the Git SHA of the current commit, rather than a version number that's incremented on every change (#1327). This shouldn't have any user facing impact, but makes renv maintenance a little easier.",1,62,FALSE,NA
renv,13f3cc9b85f8fdcc96c5b049d37d873d,"Fixed an issue causing ""restarting interrupted promise evaluation"" warnings to be displayed when querying available packages failed. (#1260)",1,63,FALSE,NA
renv,8d93efe17a423eea09f3656f859605e3,`renv::activate()` uses a three option menu that hopefully make your choices more clear (#1372).,1,64,FALSE,NA
renv,1feb83a9baeb86dd65f52c947b8cfa0c,`renv::dependencies()` now discovers R package dependencies inside Jupyter notebooks (#929).,1,65,FALSE,NA
renv,94bff69675886ae182fb4ae6a9e3dfe1,"`renv::dependencies()` includes packages used by user profile (`~/.Rprofile`) if `renv::config$user.profile()` is `TRUE`. They are set as development dependencies, which means that they will be installed by `install()` but not recorded in the snapshot.",1,66,FALSE,NA
renv,7ee421893cbba2f0ecf1df0f3c9c8e7c,`renv::dependencies()` only extracts dependencies from text in YAML headers that looks like valid R code (#1288).,1,67,FALSE,NA
renv,bd65921bc5fe10645dbf14ceb443af8b,`renv::dependencies()` no longer treats `box::use(module/file)` as using package `module` (#1377).,1,68,FALSE,NA
renv,7f3b959c8124c68e2cb9fd0278a6c961,`renv::init()` now prompts the user to select a snapshot type if the project contains a top-level DESCRIPTION file (#1485).,1,69,FALSE,NA
renv,8c908b97ce1cc121d9c510e613c4e9e9,"`renv::install(type = ""source"")` now ensures source repositories are used in projects using PPM. (#927)",1,70,FALSE,NA
renv,a0441c772b1f56d2c3c48cdf93079561,`renv::install()` activates Bioconductor repositories when installing a package from a remote (e.g. GitHub) which declares a Bioconductor dependency (via a non-empty 'biocViews' field) (#934).,1,71,FALSE,NA
renv,d004e1b757b159fd3c5b1632ea56da9b,"`renv::install()` respects the project snapshot type, if set.",1,72,FALSE,NA
renv,3f22fb942722e0ea98f2caf2f7d2eeb5,`renv::install()` now keeps source when installing packages from source (#522).,1,73,FALSE,NA
renv,719c14a1fccb841c0ebb35ecf2b0019e,"`renv::install()` now validates that binary packages can be loaded after installation, in a manner similar to source packages (#1275).",1,74,FALSE,NA
renv,b0b62b3a68588400b1652bf36947461e,"`renv::install()` now supports Bioconductor remotes of the form `bioc::<BiocVersion>/<Package>`, for installing packages from a particular version of Bioconductor. Aliases like 'release' and 'devel' are also supported (#1195).",1,75,FALSE,NA
renv,3690a4e12ed483cb5f9b3bfb9f41bce4,`renv::install()` now requires interactive confirmation that you want to install packages (#587).,1,76,FALSE,NA
renv,275ea2ebeefd594ff0058d17abe078b5,`renv::load()` gives a more informative message if a lockfile is present but no packages are installed (#353).,1,77,FALSE,NA
renv,7f0b02ef8845b06243b9df545e734cbb,`renv::load()` no longer attempts to query package repositories when checking if a project is synchronized (#812).,1,78,FALSE,NA
renv,d515e9bde717ade183d24607df6e990f,`renv::load()` no longer duplicates entries on the `PATH` environment variable (#1095).,1,79,FALSE,NA
renv,1eeb6bf0d82358646f16d2186d6a089b,`renv::restore()` can now use `pak::pkg_install()` to install packages when `pak` integration is enabled. Set `RENV_CONFIG_PAK_ENABLED = TRUE` in your project's `.Renviron` if you'd like to opt-in to this behavior. Note that this requires a nightly build of `pak` (\>= 0.4.0-9000); see https://pak.r-lib.org/dev/reference/install.html for more details.,1,80,FALSE,NA
renv,b31fac6d35bcb2f6232a6313df4f8ffb,`renv::restore()` now emits an error if called within a project that does not contain a lockfile (#1474).,1,81,FALSE,NA
renv,a9371173dc6b498e70df02f3593a9089,`renv::restore()` correctly restores packages downloaded and installed from r-universe (#1359).,1,82,FALSE,NA
renv,38733ee356bf2c84945d95bb449804e8,`renv::snapshot()` now standardises pak metadata so CRAN packages installed via pak look the same as CRAN packages installed with renv or `install.packages()` (#1239).,1,83,FALSE,NA
renv,87dc0d7f0c22ca0fd32bb27472028e76,"If `renv::snapshot()` finds missing packages, a new prompt allows you to install them before continuing (#1198).",1,84,FALSE,NA
renv,26c716aa7d1e203fa836c477f9ba9c18,"`renv::snapshot()` no longer requires confirmation when writing the first snapshot, since that's an action that can easily be undone (by deleting `renv.lock`) (#1281).",1,85,FALSE,NA
renv,eb53cd70fc468e3e986a2ff84bea989d,"`renv::snapshot()` reports if the R version changes, even if no packages change (#962).",1,86,FALSE,NA
renv,c10ba5d0ee19eff9ac0d67d9ec015027,`renv::snapshot(exclude = <...>)` no longer warns when attempting to exclude a package that is not installed (#1396).,1,87,FALSE,NA
renv,17587d78e48d4b3c07cd07a5ad835ae4,"`renv::status()` now uses a more compact display when packages have some inconsistent combination of being installed, used, and recorded.",1,88,FALSE,NA
renv,19b06babd7e1383b9bba0181c8ca820c,`renv::status()` now works more like `renv::restore()` when package versions are different (#675).,1,89,FALSE,NA
renv,53ddd062704dbf106c3afa58979a071a,`renv::update()` can now update packages installed from GitLab (#136) and BitBucket (#1194).,1,90,FALSE,NA
renv,e25a2c83d71c40eea8c05bd4c265479e,"`renv::settings$package.dependency.fields()` now only affects packages installed directly by the user, not downstream dependencies of those packages.",1,91,FALSE,NA
renv,c42677e3cb4914da3a96c64132c602f7,renv functions give a clearer error if `renv.lock` has somehow become corrupted (#1027).,1,92,FALSE,NA
renv,30222e65af68e40771af4e6477d52e25,"Fixed an issue where `renv::install(""bioc::<package>"")` could fail if `BiocManager` was not already installed. (#1184)",1,93,FALSE,NA
renv,6e0c896e3299163f6f69c69643f0fe5b,Fixed an issue where package names were not included in the output of `renv::diagnostics()`. (#1182),1,94,FALSE,NA
renv,e127625af127a6a95f852cb3fd5f00e6,"The clarity of the message printed by `renv::status()` has been improved; in particular, renv should better report the recommended actions when a package required by the project is not installed.",1,95,FALSE,NA
renv,13233394e3bafdcc488368bcef4ba28d,"`renv::snapshot()` gains the `exclude` argument, for explicitly excluding certain packages from the generated lockfile.",1,96,FALSE,NA
renv,508e8a786a7742b4ce54236e766f4091,"Fixed an issue where renv was passing the wrong argument name to `installed.packages()`, causing usages of renv to fail with R (\<= 3.4.0). (#1173)",1,97,FALSE,NA
renv,091cc1a36562aea4d22a9b601784d81a,renv now sets the `SDKROOT` environment variable on macOS if it detects that R was built using an LLVM build of `clang` on macOS.,1,98,FALSE,NA
renv,19fad98f4c22508b43e44e42e33a9c85,"`renv::install()` now parses the remotes included within, for example, a `DESCRIPTION` file's `Config/Needs/...` field.",1,99,FALSE,NA
renv,1231f96449efa7066ac460f4769e482b,"renv now checks that the index directory is writable before attempting to use it, e.g. for the `R` available packages index maintained by renv. (#1171)",1,100,FALSE,NA
renv,b3c1ad08e772b0196066c4490ed28168,"renv now checks that the version of `curl` used for downloads appears to be functional, and reports a warning if it does not (for example, because a requisite system library is missing). The version of `curl` used for downloads can also be configured via the `RENV_CURL_EXECUTABLE` environment variable.",1,101,FALSE,NA
renv,5d3eb55234390444be7b02964ddf1355,Fixed a regression that caused package hashes to be computed incorrectly in some cases. This was a regression in the 0.17.1 release. (#1168),1,102,FALSE,NA
renv,f7e3a363d6248c1dafc87f0ac0f235fb,"renv gains the configuration option `install.remotes`, which can be used to control whether renv attempts to read and use the `Remotes:` field included with installed packages. This can be set to `FALSE` if you'd like to ignore this field; e.g. because you know they will not be accessible. (#1133)",1,103,FALSE,NA
renv,71efde453172adc9da3a1238cc671fae,"General performance optimizations. In particular, `renv::update(check = TRUE)` should now execute much faster.",1,104,FALSE,NA
renv,9f6f1a2ad675e56f00d96e523cfdad32,renv now stores project settings within `renv/settings.json` rather than `renv/settings.dcf`. Old settings will be automatically migrated.,1,105,FALSE,NA
renv,7024b459d34119372fbcb94df61a7ddd,The renv sandbox is now placed within the renv cache directory. (#1158),1,106,FALSE,NA
renv,1a1a113233ce978f0c3a8c20981b9ae9,Fixed an issue where `renv::status()` could erroneously report a project was out-of-sync when using explicit snapshots. (#1159),1,107,FALSE,NA
renv,ffaca016bcf83a4ad5702eafa5fd4e3d,Fixed an issue where `renv::hydrate()` would print spurious warnings. (#1160),1,108,FALSE,NA
renv,e1010a7caad1a36e349735cff279a095,`renv::status()` now suggests running `renv::restore()` if there are no packages installed in the project library. (#1060),1,109,FALSE,NA
renv,76b19bdba1b3a2234d9f0006cb7cbd05,Fixed an issue where renv would fail to query r-universe repositories. (#1156),1,110,FALSE,NA
renv,5153e823a14d78e1ff737f52aacb85af,renv no longer tries to set the `SDKROOT` environment variable on macOS for R (\>= 4.0.0).,1,111,FALSE,NA
renv,b46589408435100af192fa8b02be8b1a,"Fixed an issue where installation of Bioconductor packages could fail when `BiocManager` was not installed. (#1156, #1155)",1,112,FALSE,NA
renv,11b1e11f873067ad89d77e43308009a7,Fixed an issue where the amount of time elapsed reported by `renv::install()` failed to include the time spent retrieving packages.,1,113,FALSE,NA
renv,dcc9dd322074afc9f190c4fc6fc277c6,The performance of `renv::snapshot()` has improved.,1,114,FALSE,NA
renv,ea8f942410ccff0f5ee01cc28a5e2f98,"renv now maintains an index of available packages, as retrieved from the active package repositories, that is shared across `R` sessions. This should improve renv's performance when querying for available packages across multiple different `R` sessions.",1,115,FALSE,NA
renv,3175d5878fb05dbb0ee5abcb276e18f6,"`renv::hydrate()` gains the `prompt` parameter. When `TRUE` (the default), renv will prompt for confirmation before attempting to hydrate the active library.",1,116,FALSE,NA
renv,67dff6458dc8865087de0f295503c0d3,Improved handling of package installation via SSH URLs with `git`. (#667),1,117,FALSE,NA
renv,a224367fe7fa93146bd0022931a2fcbf,"Improved handling of R version validation when using projects with Bioconductor. If you find renv is erroneously reporting that your version of R is incompatible with the version of Bioconductor you are using, you can set `options(renv.bioconductor.validate = FALSE)` to disable this validation behaviour. (#1148)",1,118,FALSE,NA
renv,b618060836064ad3fc7b1fda45b34f35,"Package names can now be associated with remotes in `renv::install()`; for example, you can use `renv::install(""igraph=igraph/rigraph"")` to install the `igraph` package. This is mainly important when using the `renv.auth` authentication tools, where the package name of a remote needs to be declared explicitly. (#667)",1,119,FALSE,NA
renv,14615f4c592fe39b099cfbec3c8ba29d,Fixed an issue that could prevent `renv::restore()` from functioning when attempting to install packages which had been archived on CRAN. (#1141),1,120,FALSE,NA
renv,d6cbaaffb803e9c77d6d4a6342f9635e,"`renv::install()` gains the `dependencies` argument, which behaves similarly to the equivalent argument in `remotes::install_*()`. In particular, this can be set to fields like `Config/Needs/dev` to tell renv to use custom DESCRIPTION fields for dependency resolution in installation.",1,121,FALSE,NA
renv,a04894b0a70bb8dc89dec6b065b15bcb,Fixed an issue where the function variant of the `renv.auth` option was not resolved correctly. (#667),1,122,FALSE,NA
renv,029889e9b64434c09dc107b24e5f4346,`renv::install()` now supports remotes with a trailing slash -- such slashes are now removed. (#1135),1,123,FALSE,NA
renv,690e3930eb74a37f575ab0c1da2cd9d2,Integration with the RStudio (Posit) Package Manager is now disabled by default on aarch64 Linux instances.,1,124,FALSE,NA
renv,d4762821b7abebf4b7d665a8129eb16d,The `RENV_CACHE_MODE` environment variable can now also be used to adjust the permissions set on downloaded package tarballs / binaries. (#988),1,125,FALSE,NA
renv,d1ba89245061b70fa9a63b564f3145b6,Fixed an issue where fields of the form `Remotes.1` could enter lockfile records for older versions of R. (#736),1,126,FALSE,NA
renv,9f7aef14535339a81488e4f3650ebd12,Fixed the performance of `renv::update()` in cases where integration with MRAN is enabled.,1,127,FALSE,NA
renv,8a36d4f2bc6400bb33fd3f52c131001c,Fixed an issue where package installation using `pak` could fail in some cases.,1,128,FALSE,NA
renv,6e17ea9791309b6d9f528b5fe1ce0d1d,`renv_file_find()` can now scan up to the root directory in Docker containers. (#1115),1,129,FALSE,NA
renv,a542778b2499a0d22eb4e404866689f1,renv no longer uses the R temporary directory on Windows for the sandbox. The sandbox directory can be customized via the `RENV_PATHS_SANDBOX` environment variable if required. (#835),1,130,FALSE,NA
renv,7cf42d803f7daaab02133a096ff39de9,renv now reports the elapsed time when installing packages. (#1104),1,131,FALSE,NA
renv,450c7ec63d088789ebb4bb321d135fce,"For projects using ""explicit"" snapshots, renv now reports if a package is required by the project, but the package is not currently installed. (#949)",1,132,FALSE,NA
renv,b0e39cf042f43b11590a0eb2c9072b3f,Fixed an issue where `renv::snapshot()` could fail to detect when no changes had been made to the lockfile.,1,133,FALSE,NA
renv,d0aef1304241d9a41b4dd600c69af167,Fixed an issue where renv could emit JSON lockfiles which could not be parsed by external JSON readers. (#1102),1,134,FALSE,NA
renv,0ab1be52c29de4ad22d9e78b9d5ec336,"renv now marks the sandbox as non-writable, which should hopefully alleviate issues where attempts to update installed packages would inadvertently install the updated package into the sandbox. (#1090)",1,135,FALSE,NA
renv,b1a0b9965bf3d64eb42532e3170dc15f,"`renv::use()` gains the `sandbox` argument, which allows one to control whether the system library is sandboxed after a call to `renv::use()`. (#1083)",1,136,FALSE,NA
renv,caab2d6d1fda48c52d10c720002a6138,The path to the Conda `environment.yml` file created by renv can now be customized via the `RENV_PATHS_CONDA_EXPORT` environment variable. We recommend setting this within your project-local `.Renviron` file as appropriate. (#1089),1,137,FALSE,NA
renv,53d1a15af5aa72bddbcd6c2c1b164377,Fixed an issue where the renv sandbox location did not respect the active renv profile. (#1088),1,138,FALSE,NA
renv,fc0cc618fc8e63aae10d0303eb51ba6c,"renv now supports installation of packages with remotes of the form `<package>=<remote>`. However, the provided package name is ignored and is instead parsed from the remote itself. (#1064)",1,139,FALSE,NA
renv,71fd7a38eb142278f48c2fe562702ec0,renv now passes along the headers produced by the `renv.download.headers` option when bootstrapping itself in the call to `utils::download.file()`. (#1084),1,140,FALSE,NA
renv,b2392c90584f9c9e1aed0bbfefee6bf8,renv now reports if `renv::snapshot()` will change or update the version of R recorded in the lockfile. (#1069),1,141,FALSE,NA
renv,9114e3ba5450754d3d68b05475f2b7bb,"renv now supports the `install.packages.check.source` R option, which is used to allow R to query source repositories even if the option `options(pkgType = ""binary"")` is set. (#1074)",1,142,FALSE,NA
renv,51c020d55a30887b945681945ecb7e55,renv better handles packages containing git submodules when installed from GitHub remotes. (#1075),1,143,FALSE,NA
renv,297d1592e00722e1482d3954a40a0487,renv now handles local sources within the current working directory. (#1079),1,144,FALSE,NA
renv,6c560bc4d3f91fc4ec32f03a008f8527,"The renv sandbox is once again enabled by default. On Unix, the sandbox is now created by default within the project's `renv/sandbox` library. On Windows, the sandbox is created within the R session's `tempdir()`. The path to the renv sandbox can be customized via the `RENV_PATHS_SANDBOX` environment variable if required.",1,145,FALSE,NA
renv,bda7e2fb9d5d3659b20a07a4cbe2be03,Fixed an issue where `renv::status()` could report spurious changes when comparing packages installed using `pak` in some cases. (#1070),1,146,FALSE,NA
renv,9152d07a53b125f31ed82ca348c72cc0,`renv::restore()` now also ensures the project activate script is updated after a successful restore. (#1066),1,147,FALSE,NA
renv,7e489d14a2bb57385c37a3ecdcba8ef2,"Fixed an issue where renv could attempt to install a package from the repository archives even when `type = ""binary""` was set. (#1046)",1,148,FALSE,NA
renv,f2c7856586fb9a89cba8a91136fd6ed2,"Fixed an issue where package installation could fail when the R session is configured to use multiple repositories, some of which do not provide any information on available packages for certain binary arms of the repository. (#1045)",1,149,FALSE,NA
renv,245ec081df2b6721b2d41f9f1a2ccb18,"renv now uses `jsonlite` for reading lockfiles when loaded. This should help ensure useful errors are provided for manually-edited lockfiles which contain a JSON parsing error. If the `jsonlite` package is not loaded, renv will fall back to its own internal JSON parser. (#1027)",1,150,FALSE,NA
renv,1c87f2068adb333a8dedafcdcddc5287,"Fixed an issue that would cause renv to fail to source the user `~/.Rprofile` if it attempted to register global calling handlers, e.g. as `prompt::set_prompt()` does. (#1036)",1,151,FALSE,NA
renv,59321aa64e0fb27849078c0855e21c21,"(Linux only) renv now resets ACLs on packages copied to the cache, to avoid persisting default ACLs that might have been inherited on packages installed into a local project library. If desired, this behavior can be disabled by setting the `RENV_CACHE_ACLS` environment variable to `FALSE`. If you need finer control over ACLs set on packages moved into the cache, consider defining a custom callback via the `renv.cache.callback` R option. (#1025)",1,152,FALSE,NA
renv,0a5ead75037d646013d76a500916785d,Fixed an issue where `.gitignore` inclusion rules for sub-directories were not parsed correctly by renv for dependency discovery. (#403),1,153,FALSE,NA
renv,ce367e42ef4f51b3550363fcb5203a9b,Fixed an issue where renv could report spurious diffs within `renv::status()` when comparing package records installed from `pak` versus the default R package installer. (#998),1,154,FALSE,NA
renv,e9bee7565974be5ecc41d4ec009e4275,Fixed an issue where `renv::use_python()` could cause the Requirements field for packages in the lockfile to be unintentionally dropped. (#974),1,155,FALSE,NA
renv,968c748b10cf25100e96b1e8e271c1eb,"The R option `renv.cache.callback` can now be set, to run a user-defined callback after a package has been copied into the cache. This can be useful if you'd like to take some action on the cached package's contents after the package has been moved into the cache.",1,156,FALSE,NA
renv,8e4cf690403181fd7900316575596b62,"(Unix only) The `RENV_CACHE_MODE` environment variable can now be used to change the access permissions of packages copied into the cache. When set, after a package is copied into the cache, renv will use `chmod -Rf` to try and change the permissions of the cache entry to the requested permissions.",1,157,FALSE,NA
renv,dac46f8d2ded9401d861b5bfed635716,"(Unix only) The `RENV_CACHE_USER` environment variable can now be used to change the ownership of folders copied into the cache. When set, after a package is copied into the cache, renv will use `chown -Rf` to try and change the ownership of that cache entry to the requested user account.",1,158,FALSE,NA
renv,622c49cdbea2a449ef0a9d48aead91d5,Fixed an issue where repositories containing multiple packages in sub-directories could fail to install. (#1016),1,159,FALSE,NA
renv,d06822c7626de44582611d8f448e5b6d,Fixed an issue where indexing of packages in the package cellar could be slow. (#1014),1,160,FALSE,NA
renv,44203e833b3356347c178700d5fcd304,Fixed an issue where installation of packages from Bioconductor's binary Linux package repositories could fail. (#1013),1,161,FALSE,NA
renv,727a6e41326dafc73eb22f901b418d3f,`renv::restore()` now supports restoration of packages installed from R-Forge. (#671),1,162,FALSE,NA
renv,8260faf1586c2bbf22317bba6cab9842,Fixed an issue where `renv::init(bioconductor = TRUE)` would not update the version of Bioconductor used if a project setting had already been set.,1,163,FALSE,NA
renv,de4fd881e77057e27c44f694ca26ef0a,"It is now possible to ""update"" an existing lockfile by using `renv::snapshot(update = TRUE)`. When set, any records existing in the old lockfile, but not the new lockfile, will be preserved. (#727)",1,164,FALSE,NA
renv,c45b6a6e3b517b9f0a90c1ce2c195738,Fixed an issue where renv could fail to parse Git remotes for users whose username contains a number. (#1004),1,165,FALSE,NA
renv,b2c10b0caa20275db3ae7277477f63a8,"renv no longer infers a dependency on the ""quarto"" R package in projects containing a `_quarto.yml` file. (#995)",1,166,FALSE,NA
renv,99f9462b3a0357956a66d934af119da3,Fixed an issue where renv could fail to download a package from MRAN if a compatible source package of the same version was available from the active R repositories. (#990),1,167,FALSE,NA
renv,5117fa354f96c02c803afd158b90be1a,renv now reports permission errors during download more clearly. (#985),1,168,FALSE,NA
renv,6bcbc5ad80924b7c179d8e57c7aa85db,Fixed an issue where `RENV_PATHS_LIBRARY_ROOT_ASIS` was not interpreted correctly. (#976),1,169,FALSE,NA
renv,4cfb845d7f3cbe5be8f8986b8c62acbd,"`renv::modify()` gains the `changes` argument, which can be used to modify a project lockfile non-interactively.",1,170,FALSE,NA
renv,ee08fb92d189eed3d90f8fb6c699f270,"`renv::clean()` now returns the project directory, as documented. (#922)",1,171,FALSE,NA
renv,5d9073200241d31ff42d1a2b1671fc61,Fixed an issue where renv could fail to parse embedded YAML chunk options in R Markdown documents. (#963),1,172,FALSE,NA
renv,49337ad7727a67970e0e8e959fe83c2b,"renv now sets default placeholder names for the `repos` R option, for any repository URLs which happen to be unnamed. (#964)",1,173,FALSE,NA
renv,24083ebb23e886ada5b58bed2d04cde2,Fixed an issue where renv didn't respect the `PATH` ordering when discovering Python installations via `renv_python_discover()`. (#961),1,174,FALSE,NA
renv,b70848edbe0b982ae8f05aaaf8a41c3f,Fixed an issue where renv could fail to install packages containing multibyte unicode characters in their DESCRIPTION file. (#956),1,175,FALSE,NA
renv,46855729a9c869b02637f88052920bd1,Fixed detection of Rtools 4.2 (#1002),1,176,FALSE,NA
renv,bff198a02a22e695c7f99ebcb165d65c,"Fixed an issue where package installation could fail when referencing the cache via a tilde-aliased path, e.g. `~/.local/share/renv`. (#953)",1,177,FALSE,NA
renv,3b5c7232d1740316152fe38b113ec625,A variety of fixes for R CMD check.,1,178,FALSE,NA
renv,c5c925ad7a5b14643004f744e0d032f7,"renv gains an experimental function, `renv::autoload()`, to be used as a helper for automatically loading a project for R processes launched within a sub-directory of that project. See `?renv::autoload` for more details.",1,179,FALSE,NA
renv,c8830ed3c6c9f4fced2d5182b7397de5,renv will now print a warning message when attempting to read a lockfile containing merge conflict markers (as from e.g. a git merge). (#945),1,180,FALSE,NA
renv,8166f0118c54a308b77143a986a3b723,"Fixed an issue where `renv::install()` could install into the wrong library path on Windows, if the R installation had a site-wide profile that mutated the library paths. (#941)",1,181,FALSE,NA
renv,083ab29169d2b8010db6195d36027f4b,Fixed an issue where `renv::install()` would fail to find a package within the cache when using an abbreviated commit hash for installation. (#943),1,182,FALSE,NA
renv,0edea9911e3cacb4871e473fc9f852dc,Fixed an issue where renv's automatic snapshot was not run after calls to `renv::install()` in some cases. (#939),1,183,FALSE,NA
renv,750418c6e73c7888e16cb9191a90dbde,"Fixed an issue where renv would incorrectly copy a package from the cache, if the cached version of the package and the requested version of the package had the same package version, even if they were retrieved from different sources. (#938)",1,184,FALSE,NA
renv,00aef8cc9fb0de9875b120c03e921f1f,"The path to an renv tarball can now be set via the environment variable `RENV_BOOTSTRAP_TARBALL`, to be used to help renv bootstrap from local sources. This can either be the path to a directory containing renv source tarballs, or the path to the tarball itself.",1,185,FALSE,NA
renv,bab23544d4995bcb80bbeb921f7bccbe,Fixed an issue where the R site library would not be appropriately masked for resumed RStudio sessions. (#936),1,186,FALSE,NA
renv,98d9d24a55b2e8fc9308023196d9e515,Fixed issues encountered in R CMD check.,1,187,FALSE,NA
renv,8b0538678f024abd3c0422501da1ba5f,Fixed an issue where renv inadvertently inserted extra newlines into a `DESCRIPTION` file when adding `Remotes` fields after install. (#914),1,188,FALSE,NA
renv,a049af7e3088bc922ab31e295c73dcda,Fixed an issue where packages installed from a remote sub-directory would fail to install when later re-installed from the cache. (#913),1,189,FALSE,NA
renv,57dc61b0478d04ecfd3bafa022905224,renv now recognizes YAML chunk options of the form `#| key: value` when used in R Markdown documents. (#912),1,190,FALSE,NA
renv,68b25c5bc9ee1dfd19cc3aa590bef53f,Fixed an issue where the R site library was visible in renv projects with the system library sandbox disabled.,1,191,FALSE,NA
renv,83b0ad07fbb8df79ada5cbb2658ef177,Fixed an issue where renv could update the wrong `.gitignore` in R processes launched by `callr` (e.g. in `devtools::install`). (#910),1,192,FALSE,NA
renv,6ef6dedc9f6a7306620a6c9dd55f702f,Fixed an issue where renv could fail to read mis-encoded DESCRIPTION files. (#908),1,193,FALSE,NA
renv,7f65c3c5824d35c4f7886e2c59a17e2d,Fixed an issue where `config$cache.symlinks()` would report `NULL` when unset. (#906),1,194,FALSE,NA
renv,f184a409251e61e37e1d481a05146aac,The development branch for renv has moved from master to main.,1,195,FALSE,NA
renv,069d5dbc657243e7953cf9c6d93bbd83,"renv package records in the lockfile now include a `Requirements` entry, which gives a list of R packages this package depends on in some way. This is primarily for internal use by the `pak` package.",1,196,FALSE,NA
renv,955f49681327dfdb42a82c6477a867f9,Fixed an issue where packages containing DESCRIPTION files using a latin1 encoding would not be read correctly by renv.,1,197,FALSE,NA
renv,4e18ff47eeebc3d6cf2f325482ebb351,Fixed an issue that could cause `renv::dependencies()` to fail when a malformed `DESCRIPTION` file was encountered. (#892),1,198,FALSE,NA
renv,de10b24c32c1ee1bdc988ca87a753ece,The path to the project-local renv folder can now be configured via the `RENV_PATHS_RENV` environment variable. This can be useful if you'd prefer to store your project's renv resources within an alternate location in the project. (#472),1,199,FALSE,NA
renv,0f85bd3513a6874702fecef75d7bc39b,"renv now uses an external library by default for R package projects, with the library located within `tools::R_user_dir(""renv"", ""cache"")`. This directory can be configured via the `RENV_PATHS_LIBRARY_ROOT` environment variable if desired. See `vignette(""packages"", package = ""renv"")` for more details. (#384)",1,200,FALSE,NA
renv,800b917b17a39a1ecfcc271cbf712718,renv now uses the repositories as defined within the project lockfile (if any) when attempting to bootstrap itself in a project. (#820),1,201,FALSE,NA
renv,e4fcff0324443c370597c7c179473b66,The renv sandbox is now disabled by default -- see #614 for more details.,1,202,FALSE,NA
renv,af9b3cc45f3bca521ec5aadad343e6ee,"renv gains the function `repair()`, to be used to attempt to repair the project library when links into the global package cache appear to be broken. (#378)",1,203,FALSE,NA
renv,ca54201ce6c9fe394f65a7ba92147741,Fixed an issue where the staging library used during install could fail to inherit the same directory permissions as the target library itself. (#331),1,204,FALSE,NA
renv,aace405e0a09f94d2b672aac9a3c587c,Fixed an regression which caused `renv::history()` to fail. (#886),1,205,FALSE,NA
renv,1438949be0a844c3f4fa1e94c961f71c,"renv gains experimental support for the pak package. Set `RENV_CONFIG_PAK_ENABLED = TRUE` in an appropriate `.Renviron` file to enable `pak` integration. When enabled, calls to `renv::install()` will use `pak` to download and install packages.",1,206,FALSE,NA
renv,7eb0ee7d09c79a573b92c717182e1114,"`renv::init()` gains the `bioconductor` argument, to be used to initialize a project with a particular Bioconductor release. You can also use `renv::init(bioconductor = TRUE)` to initialize with the latest-available release for the version of R being used.",1,207,FALSE,NA
renv,743273297387f8bfda01ef23e58fc631,"Project settings can now be overridden by setting an R option of the same name. For example, one could force a project to use Bioconductor 3.14 by setting `options(renv.settings.bioconductor.version = ""3.14"")` within the project `.Rprofile` (or similar startup R profile).",1,208,FALSE,NA
renv,5af661e6dcbe857b6445538db04eb595,"The ad-hoc package repository called ""local sources"" has been renamed to the ""package cellar"". In addition, the path to the cellar is now controlled by the `RENV_PATHS_CELLAR` environment variable, rather than `RENV_PATHS_LOCAL`. This change was made to reduce confusion between ""local sources"" of packages located somewhere on the filesystem, as opposed to packages explicitly placed in this ad-hoc repository. `RENV_PATHS_LOCAL` remains supported for backwards compatibility.",1,209,FALSE,NA
renv,5d315ea1706b174e26ed4360cf76fd92,"The `RENV_PATHS_CELLAR` environment variable can now be set to multiple paths. Use `;` as a separator between paths; for example, `RENV_PATHS_LOCAL=/path/to/sources/v1;/path/to/sources/v2`. (#550)",1,210,FALSE,NA
renv,13dc87df19e4d81f33b994233fd50da8,"Packages installed via e.g. `renv::install(""./path/to/package"")` will now retain the relative path to that package within the lockfile. (#873)",1,211,FALSE,NA
renv,a30071f543235a930df7fba244cc967a,Fixed an issue where invalid `config` option values were not properly reported. (#773),1,212,FALSE,NA
renv,f25baa52b23c8acc5676c1372a3612a8,renv now supports restoration of packages installed via one of the r-universe repositories.,1,213,FALSE,NA
renv,519cb4ff0c9f0fbce063efa5d5ef2733,"renv gains the `bioconductor.version` project setting, used to freeze the version of Bioconductor used in a particular project. When set, this will override any version that might be selected via the `BiocManager` package. (#864)",1,214,FALSE,NA
renv,70939878ee4c1755730741d823512fab,"renv now infers that parameterized R Markdown documents have a dependency on the `shiny` package. In addition, R code included within the `params:` list will be parsed for dependencies. (#859)",1,215,FALSE,NA
renv,5cfa36809890268e92aca8e83a085a91,"renv now ignores hidden directories during dependency discovery by default. If you want to force a particular hidden directory to be included for discovery, you can use a `.renvignore` file with an explicit inclusion criteria; e.g. `!.hidden/`.",1,216,FALSE,NA
renv,1a857d9168fe44fbfffbac5ccb1e946a,"renv now supports the `*release` remotes specifier for GitHub repositories, for requesting installation of the latest declared release of a package from GitHub. (#792)",1,217,FALSE,NA
renv,ea137241f9f2a78eeca556f13aa52ee9,renv now handles packages stored within the sub-directory of a Git repository better. (#793),1,218,FALSE,NA
renv,adb4a49b01bb36e18ce9a84a25ac9113,Fixed an issue where `renv::history()` would fail to resolve the correct lockfile path if the working directory was changed. (#834),1,219,FALSE,NA
renv,ec8794b509bbea173c6d054145077199,Refined dependency discovery within `glue::glue()` expressions.,1,220,FALSE,NA
renv,ee5b3cbc11bb25ad3338fedf2cf8d17b,renv now parses packages referenced via the `base_format` field within an R Markdown document's YAML header. (#854),1,221,FALSE,NA
renv,e976a6a0f65f09bc5cf635eea938a9d0,Fixed an issue where renv would fail to produce the appropriate binary repository URL for RSPM repositories built using Red Hat Enterprise Linux.,1,222,FALSE,NA
renv,a6b51c577273746fd9c3f536bf77d87c,Fixed an issue where `renv::snapshot()` could cause the environment name and / or path associated with a Python environment to be omitted from the lockfile. (#843),1,223,FALSE,NA
renv,1e04606d5b71c036955fe99b3b12c156,Fixed an issue where `renv::restore()` could fail to restore packages which referred to their source via an explicit path in the `Source` field. (#849),1,224,FALSE,NA
renv,90895536d28efd9bbf89da7a19b85446,"renv no longer requires explicit user consent when used within Singularity containers. (#824, @​kiwiroy)",1,225,FALSE,NA
renv,cc1892f8fa8c16255ff74b07dbbe5480,"renv now respects the `R_PROFILE_USER` environment variable, in addition to the `user.profile` configuration option, when considering whether the user `.Rprofile` should be examined for package dependencies. (#821)",1,226,FALSE,NA
renv,15d5b1428192d9cb33e57a7f91659bf5,"The renv auto-loader can now be disabled by setting the environment variable `RENV_AUTOLOADER_ENABLED = FALSE`. This can be useful if you'd like to explicitly control how a project is loaded, e.g. by calling `renv::load()` explicitly.",1,227,FALSE,NA
renv,68ece36d968948f6fa41fc1036740ac3,"`renv::snapshot()` gains the `repos` argument, to be used to force the lockfile to be generated with the requested set of R repositories encoded within.",1,228,FALSE,NA
renv,f1dc84a0b4f1eb4a5448b01ce26571eb,"renv now validates that the `repos` option, as used by `renv::snapshot()`, is a named vector. (#811)",1,229,FALSE,NA
renv,e6ab90b3615b009b1938f3fbcbbd8812,"Fixed an issue where renv's shims, e.g. for `install.packages()`, failed to pass along other optional arguments to the shimmed function correctly. (#808)",1,230,FALSE,NA
renv,28f4203b9b5ca9d486c0f7f25a372da8,"renv now uses `tools::R_user_dir()` to resolve the default path to the global renv cache, for R installations 4.0.0 or greater. If the renv cache still exists at the old location, that location will be used instead. This change should only affect brand new installations of renv on newer versions of `R`.",1,231,FALSE,NA
renv,3c0819de91f5205b47d255d39597e02c,Fixed an issue with renv tests failing with R (\>= 4.2.0).,1,232,FALSE,NA
renv,03629e039f3175328f08813363a0f84e,"renv will no longer auto-activate itself within R processes launched via `R CMD INSTALL`. This behavior can be controlled if necessary via the `RENV_ACTIVATE_PROJECT` environment variable -- set this to `TRUE` to force the project in the current working directory to be activated, and `FALSE` to suppress the renv auto-loader altogether. (#804)",1,233,FALSE,NA
renv,192b9c6a1b42dd671c5fdd3a2406055d,Added dependency discovery support for R utility scripts identified by a shebang line instead of a file extension. (#801; @​klmr),1,234,FALSE,NA
renv,40f0179c6c7b1ccf8991279db960211c,"Fixed an issue where `renv::install(""<package>"", type = ""both"")` would attempt to install the package from sources, even if the current system did not have the requisite build tools available. (#800)",1,235,FALSE,NA
renv,86f3c1e4c05bf0b2dbd53c18bb045f57,"`renv::scaffold()` gains the `settings` argument, used to create a project scaffolding with some default project options set. (#791)",1,236,FALSE,NA
renv,4bcca16948583a549bd018d01d9c6dd7,"renv now determines the default branch name for packages installed from GitLab without an explicit reference supplied; for example, as in `renv::install(""gitlab::<user>/<repo>"")`. (#795)",1,237,FALSE,NA
renv,ca15544724f22eb109d828a479299768,renv now infers a dependency on the `bslib` package for R Markdown documents using custom themes. (#790),1,238,FALSE,NA
renv,95e574e0a9cca07f8778c69e6239fec4,renv will now prompt users to activate the current project when calling `renv::snapshot()` or `renv::restore()` from within a project that has not yet been activated. (#777),1,239,FALSE,NA
renv,d4d35d33520bb72753c39a9c7f32e138,renv now has improved handling for `git` remotes. (#776; @​matthewstrasiotto),1,240,FALSE,NA
renv,10257539cf252b049cfbe15a492838ad,"`renv::restore()` gains the `exclude` argument, used to exclude a subset of packages during restore. (#746)",1,241,FALSE,NA
renv,558b5e3f50b2bca4dcba8f4c29046cd2,Fixed an issue where `renv::dependencies()` could fail to parse dependencies in calls to `glue::glue()` that used custom open and close delimiters. (#772),1,242,FALSE,NA
renv,256d3e01ac964336775653f538bc9b12,Fixed an issue where `renv::init(bare = TRUE)` would unnecessarily scour the project for R package dependencies. (#771),1,243,FALSE,NA
renv,0f7eee938a8b20c7729d0e9e8693262e,Fixed an issue where renv could fail to install packages located on GitHub within sub-subdirectories. (#759),1,244,FALSE,NA
renv,7e02fbe0aa39a2e305b37783a245e996,"renv gains the function `embed()`, used to embed a lockfile with an R document (via a call to `renv::use()`).",1,245,FALSE,NA
renv,f26e77292fa4d9cf2ab7b2c64e725055,`renv::use()` gains the lockfile argument. This can be useful for R Markdown documents and scripts that you'd like to run with the context for a particular lockfile applied.,1,246,FALSE,NA
renv,ea2ef773352ac40e579f9c15005fa1e4,"`renv::rebuild()` gains the `type` parameter, for parity with `renv::install()`.",1,247,FALSE,NA
renv,b9fc0c2485794da00db1eca4e8a2df5c,Fixed an issue where renv could incorrectly copy an incompatible version of an R package from a site library into the project library during install. (#750),1,248,FALSE,NA
renv,eed66d1e37eb540d3d4e560826c94497,`renv::dependencies()` can now parse (some) usages of `parsnip::set_engine()`.,1,249,FALSE,NA
renv,75718ce28c1194b9a85387ace30ee9a1,`renv::dependencies()` now has improved handling for piped expressions.,1,250,FALSE,NA
renv,4da18228f0f7b73c3d3caf668a4e57ab,"Fixed crash during dependency discovery when encountering `box::use()` declarations that use a trailing comma, and no longer treat `.` and `..` as package names. (@​klmr)",1,251,FALSE,NA
renv,906fcecdfba55455be6fc9971009abbf,`renv::clean()` no longer attempts to clean the system library by default. (#737),1,252,FALSE,NA
renv,7530c62be7101309716e5ab895ea28fb,Fixed an issue where `install.packages()` could fail when used within an renv project to install a package from local sources. (#724),1,253,FALSE,NA
renv,7db9acebfe9da576b8c2a6881ef5a4c9,"The chunk `renv.ignore` parameter can now be set to `FALSE`. When set, renv will explicitly parse dependencies from chunks even if other chunk metadata would have told renv to ignore it (e.g. because it was marked with `eval=F`). (#722)",1,254,FALSE,NA
renv,2c60a0dc14674c743268be6954c739d8,Fixed an issue where chunks with the chunk option `eval=F` would still be scanned for dependencies. (#421),1,255,FALSE,NA
renv,393ce4e237de45c1d5a3bf5062f585b4,"In interactive sessions, `renv::use_python()` will now prompt for the version of Python to be used. Python installations in a set of common locations will be searched. See `?renv::use_python()` for more details.",1,256,FALSE,NA
renv,eaf5cf8bedfadc0c0c14e33b95950de7,Fixed an issue where renv would fail to retrieve packages from the archives if the lockfile entry was tagged with a `RemoteSha` field.,1,257,FALSE,NA
renv,b6c537458ce2a673d85b36882ce4f539,"`renv::restore()` will now prefer restoring packages from the repository named in the `Repository` field if available. The name is matched against the repository names set in the R `repos` option, or as encoded in the renv lockfile. (#701)",1,258,FALSE,NA
renv,166a9224778b3a8db2c4156f429fed7b,renv now supports the discovery of dependencies within interpolated strings as used by the `glue` package.,1,259,FALSE,NA
renv,7f51c782ec5f552129c8531e86433594,"`RENV_CONFIG_EXTERNAL_LIBRARIES` can now be configured to use multiple library paths, delimited by either `:`, `;`, or `,`. (#700)",1,260,FALSE,NA
renv,bc37bef7532317a53d3877ceb64e0776,"renv gains the configuration option, `exported.functions`, controlling which functions and objects are placed on the R search path when renv is attached (e.g. via `library(renv)`). Set this to `NULL` to instruct renv not to place any functions on the search path. This helps avoid issues with, for example, `renv::load()` masking `base::load()`. When set, all usages of renv APIs must be explicitly qualified with the `renv::` prefix.",1,261,FALSE,NA
renv,7471bc4d78ed23de03ecb75671bf5a8c,"`renv::install(""user/repo/subdir with spaces"")` now works as expected. (#694)",1,262,FALSE,NA
renv,05c6246e969a985fb0b5164a335aa9fc,renv can now parse package dependencies declared by `targets::tar_option_set(packages = <...>)`. (#698),1,263,FALSE,NA
renv,f63388104cbfe2f356f6c8c5dbcdb1f7,"renv no longer performs an automatic snapshot following a user-canceled renv action -- for example, if `renv::restore()` is canceled, the next automatic snapshot will be suppressed. (#697)",1,264,FALSE,NA
renv,6170bd3417ad0e59391a834080f8d5eb,"Added the `vcs.ignore.local` project setting, to control whether the project's `renv/local` folder is added to renv's VCS ignore file (e.g. `renv/.gitignore`). (#696)",1,265,FALSE,NA
renv,0bb6feb4fabd2cca3185afc7d437bc5b,"Fixed an issue where renv's bootstrapping code could inadvertently bootstrap with the wrong version of renv, if the source and binary versions of renv on CRAN were not in sync. (#695)",1,266,FALSE,NA
renv,8d4164f06c343c0effb4e8122cfd0a1f,"Fixed an issue where `renv::status()` could provide a misleading message for packages which are recorded in the lockfile, but not explicitly required by the project. (#684)",1,267,FALSE,NA
renv,e11c2170b2947478c9d3e7c45470f61a,"`renv::clean()` gains the `actions` argument, allowing the caller to control which specific actions are taken during a `clean()` operation.",1,268,FALSE,NA
renv,bb43c8676be1d3e5f191f889bc131012,renv no longer performs an automatic snapshot after a call to `renv::status()`. (#651),1,269,FALSE,NA
renv,5b5aefcdb71a12c94f8c7c84cfcb6ac3,Fixed an issue where attempts to transform RSPM repository URLs could fail if the copy of R was installed without a local `CRAN_mirrors.csv` file.,1,270,FALSE,NA
renv,9c0736a67a1d33f8720875c3197e3ceb,Fixed an issue where `renv::init()` could fail when passed a relative path to a directory. (#673),1,271,FALSE,NA
renv,68c635f846d604fe405e58ca80e98109,Fixed an issue where `renv::dependencies()` would miss dependencies in R Markdown YAML headers containing multiple output formats. (#674),1,272,FALSE,NA
renv,2d738d869ec103a49fe8a54e2895c804,"`renv::install()` now better respects the `Remotes` field in a project `DESCRIPTION` file, if available. (#670)",1,273,FALSE,NA
renv,4651c52aecc8b32b6ecc202dceedbc33,`RENV_DOWNLOAD_METHOD` is now treated as an alias for `RENV_DOWNLOAD_FILE_METHOD`.,1,274,FALSE,NA
renv,418549eac1d040704c9756e023ac8c5e,Fixed an issue where renv would fail to load if the `~/.Rprofile` existed but was an empty file.,1,275,FALSE,NA
renv,5edb1f3cb71933786ad5c3326fa80a8e,`renv::snapshot()` no longer creates an `renv/activate.R` file in the project folder if one does not already exist. (#655),1,276,FALSE,NA
renv,93e03aef59f6f307ee6184954bfb30d6,"The `renv::hydrate()` function gains the `update` argument, used to control whether `renv::hydrate()` chooses to update packages when invoked. When set to `TRUE`, if the version of a package installed in the source library is newer than that of the project library, then renv will copy that version of the package into the project library. (#647)",1,277,FALSE,NA
renv,13a1918ffa571fba5e81bc51f04c01ef,"The `RENV_PATHS_PREFIX_AUTO` environment variable can now be set to instruct renv to include an OS-specific component as part of the library and cache paths. This is primarily useful for Linux systems, where one might want to share a global cache with multiple different operating systems. The path component is constructed from the `ID` and `VERSION_CODENAME` / `VERSION_ID` components of the system's `/etc/os-release` file.",1,278,FALSE,NA
renv,1e9231bc5a09ace5dea22db4209b4c54,renv's dependency discovery machinery now has preliminary support for packages imported via the box package; e.g. `box::use(dplyr[...])`.,1,279,FALSE,NA
renv,93180017ba7c39c9f8715d2a986d99b7,"Multiple cache paths can now be specified, with each cache path separated by either a `;` or `:`. This can be useful when you'd like to use multiple package caches within the same project; for example, because you'd like to share a read-only cache with a set of projects. (#653, @​vandenman)",1,280,FALSE,NA
renv,9645540bc3276a3b1699d6412f4c82e8,Fixed an issue where renv could fail to discover dependencies in directories with very large `.gitignore` or `.renvignore` files. (#652),1,281,FALSE,NA
renv,1ebc11f28d1e48c615dbbb781d019c57,"renv gains a new configuration option, `install.shortcuts`. When enabled, if renv discovers that a package to be installed is already available in the user or site libraries, renv will instead install a copy of that package into the project library. (#636)",1,282,FALSE,NA
renv,700e6f39686133049ca71c12f234b87e,"renv gains a new function, `renv::use()`, used to download, install, and load a set of packages directly within an R script. `renv::use()` can make it easier to share a standalone R script, with the packages required to install that script embedded directly in the script. It is inspired in part by the groundhog package.",1,283,FALSE,NA
renv,3b9a38026a1b971bf4853f8ec0851fbb,"`renv::install(""."")` can now be used to install a package from sources within the current working directory. (#634)",1,284,FALSE,NA
renv,aa55b91431afa9a5b14f79b9b9ab460b,Fixed an issue where `renv::update()` could fail if a package installed from GitHub was missing the `RemoteHost` field in its DESCRIPTION file. (#632),1,285,FALSE,NA
renv,f56d0cf8c79f2f460dcffa04dc2717be,"renv now has support for custom project profiles. Profiles can be used to activate different sets of project libraries + lockfiles for different workflows in a given project. See `vignette(""profiles"", package = ""renv"")` for more details.",1,286,FALSE,NA
renv,f2ac8eff5f0610088da4a05a646a907d,Fixed an issue where attempts to initialize an renv project in a path containing non-ASCII characters could fail on Windows. (#629),1,287,FALSE,NA
renv,6287111401e6b4badb3be7a7ed69fb90,"Fixed an issue where `renv::install(""<package>"")` could fail if renv chose to install the package from MRAN rather than from one of the active package repositories. (#627)",1,288,FALSE,NA
renv,eb097381d40a44282e89ac26047c1034,renv again defaults to using the project's `renv/staging` folder for staged / transactional installs. Use the `RENV_PATHS_LIBRARY_STAGING` environment variable if more granular control over the staging library path is required. This fixes issues on Windows with creating junction points to the global package cache on Windows. (#584),1,289,FALSE,NA
renv,3a52993eeea358584d9c52549eca7e76,renv no longer skips downloading a requested source package if an existing cached download exists and appears to be valid. This should help avoid issues when attempting to install a package whose associated tarball has changed remotely. (#504),1,290,FALSE,NA
renv,ce8a720b08a01a3083cf5ae2fe795164,"During bootstrap, renv will now attempt to download and unpack a binary copy of renv if available from the specified package repositories.",1,291,FALSE,NA
renv,5bf5d0e7ab5cde15ae2b99f86ffaee19,"renv now always attempts to bootstrap itself from the R Project's Cloud package repository, as a fallback in case no other repository is available. (#613)",1,292,FALSE,NA
renv,c3dec25fbc52a08d3c2d2d437c171237,`renv::rebuild(<package>)` now uses the latest-available version of the requested package(s) if those packages are not currently installed.,1,293,FALSE,NA
renv,49084880879aeee4a4b6427c231a768e,"Fixed an issue where `renv::restore(library = ""/path/to/lib"")` would fail to restore packages, if those packages were already installed on the active library paths (as reported by `.libPaths()`). (#612)",1,294,FALSE,NA
renv,81867c5fdea6725a2e8cd10ed9272d2f,"`renv::snapshot()` gains the `reprex` argument. Set this to `TRUE` if you'd like to embed an renv lockfile as part of a reproducible example, as generated by the `reprex` package.",1,295,FALSE,NA
renv,990c72386bc964ba6dde0ec77ff76e8a,"`renv::status()` now reports packages that are referenced in a project's scripts, but are neither installed in the project library nor recorded in the lockfile. (#588)",1,296,FALSE,NA
renv,ac626e6f605620386926a5b2476a8dd8,"Fixed an issue where package installation could fail if the `configure.vars` option was set to be a named character, rather than a named list. (#609)",1,297,FALSE,NA
renv,72b06cce15b4499205ee00bd88699974,Fixed an issue where renv would fail to bootstrap. (#608),1,298,FALSE,NA
renv,d22858de57db5d0c4f85cf256d45251a,renv now invalidates the available packages cache if the `https_proxy` environment variable changes. (#579),1,299,FALSE,NA
renv,f1b4b0d556c0f9043bb997a0512e1b5a,"`renv::install(<pkg>)` will now install the latest-available version of that package from local sources, if that package is available and newer than any package available on the active package repositories. (#591)",1,300,FALSE,NA
renv,c23aad9cd22f47da1e5c745ac0a3da2f,"The configuration option `startup.quiet` has been added, allowing one to control whether renv will display the typical startup banner when a project is loaded.",1,301,FALSE,NA
renv,6410acb9c918bde7a522b5951945f9f5,"renv now better handles being unloaded and reloaded within the same R session. In particular, warnings related to a corrupted lazy-load database should no longer occur. (#600)",1,302,FALSE,NA
renv,9d1a5c9fdd5e32e347b0ac5b67ad3123,renv no longer reinstalls packages that are already installed and up-to-date in bare calls to `renv::install()`.,1,303,FALSE,NA
renv,759689c53d0c4a4c1c94891d35266a25,"renv now uses the R temporary directory for staging, when performing transactional restores / installs. If you need to control the path used for staged installs, please set the `RENV_PATHS_LIBRARY_STAGING` environment variable.",1,304,FALSE,NA
renv,97fec171948612c84e663b081509c33f,"The `install.verbose` configuration option has been added. When set to `TRUE`, renv will stream the output generated by R when performing a package installation. This can be helpful in some cases when diagnosing a failed restore / install. (#330)",1,305,FALSE,NA
renv,a8b57d78e1e642e857476b774aac7c51,Fixed an issue where renv could fail to parse R Markdown chunk headers with an empty label. (#598),1,306,FALSE,NA
renv,de8437b880c30133f769c828e96ec18e,"The environment variable `RENV_PATHS_LIBRARY_ROOT_ASIS` can now be used to control whether the project name should be used as-is when forming the library path within the `RENV_PATHS_LIBRARY_ROOT` folder. Set this to `""TRUE""` if you would prefer renv did not append a unique identifier to your project's library path. (#593)",1,307,FALSE,NA
renv,443cddbd295d7509de48a40c25a22c4c,Fixed an issue where GitLab references were not URL encoded. (#590),1,308,FALSE,NA
renv,76e3281ee76c81fb0322fb750442c951,renv no longer emits warnings when parsing multi-mode R files that make use of re-used knitr chunks (those specified as `<<label>>`). (#586),1,309,FALSE,NA
renv,d6f5beef64576a3abc20b77c178c0c64,The library used for staged installs can now be configured via the `RENV_PATHS_LIBRARY_STAGING` environment variable. (#584),1,310,FALSE,NA
renv,66bc92594e6df7c69cd91e348ea2fa85,Fixed an issue where bootstrapping an older version of renv could fail if the R repositories had not been appropriately set.,1,311,FALSE,NA
renv,1a2f2e2bcb36021bf4bdbb5c24f338a7,Fixed an issue where `renv::dependencies()` could give an error if called with a `path` argument of length \> 1.,1,312,FALSE,NA
renv,8d120f0b3040261875866b4378a8c901,"`renv::restore()` gains the `rebuild` argument, allowing users to control whether packages should be rebuilt on `restore()` rather than installed via links or copies from the cache, or other sources providing already-installed packages.",1,313,FALSE,NA
renv,074c8cbfdb8958823b32ab4a97d313c6,"renv will now attempt to bootstrap itself from CRAN, in addition to any repositories declared via `getOption(""repos"")`. If you'd prefer to disable this behavior, you can set `options(renv.bootstrap.repos = character())`.",1,314,FALSE,NA
renv,923dd288fd93e1642926257b8418cf51,"The renv setting `r.version` has been added. This can be set if you'd like to associate a particular project with a specific version of R, independent of the version of R actually used when subsequent lockfiles are created via `renv::snapshot()`. For example, setting `renv::settings$r.version(""4.0"")` will ensure that R version `""4.0""` is encoded in the lockfile for future calls to `renv::snapshot()` in a project. (#254)",1,315,FALSE,NA
renv,ff18b216d6e625bc5c755b12c091a26c,`renv::dependencies()` now detects the usage of R packages within dotfiles; e.g. the project `.Rprofile`. (#569),1,316,FALSE,NA
renv,27ff4b53a6e7dce18efc2f2c094a6754,"`renv::status()` gains the `cache` argument, used to control whether `renv::status()` also performs diagnostics on the global package cache. (#570)",1,317,FALSE,NA
renv,06d1072e4c463078c8209b7236ca3c5f,Fixed an issue where `renv::status()` would make an un-necessary call to `renv::dependencies()`. (#570),1,318,FALSE,NA
renv,15a6142ae23894530aef9aa876a4b902,"Fixed an issue where `renv::install(""bioc::<package>"", rebuild = TRUE)` would fail to install the requested package. (#565)",1,319,FALSE,NA
renv,db957472a0a3162afa62f76c7ba155d3,Fixed an issue where the repository name for a package installed from an R package repository was sometimes incorrect. (#402),1,320,FALSE,NA
renv,2a1e89c99c85fdfcd528cc03d41363fb,"When `RENV_PATHS_LIBRARY_ROOT` is set, renv will now disambiguate library paths based on a hash of the project's path. (#564)",1,321,FALSE,NA
renv,870346de85feba471e7c0921b21406d5,renv no longer errs when running tests with `_R_CHECK_SUGGESTS_ONLY_=false`.,1,322,FALSE,NA
renv,f34c55b13505f014220795dbee7af4d5,"renv now ensures all of its dependencies are loaded eagerly when running tests, to avoid issues with missing + lazily-loaded packages.",1,323,FALSE,NA
renv,28f3b9bd88cd86074e00523fc43e1505,`renv::snapshot()` now accepts library paths specified with a relative path. (#562),1,324,FALSE,NA
renv,06fb5aad42a2296bec7d25dde6a81212,"`renv::snapshot()` no longer excludes the project itself, for `R` package projects that use golem. (#538)",1,325,FALSE,NA
renv,3d6cd952e79df8df3ea22c59d6384e43,"The renv configuration option `cache.symlinks` can now be used to control whether renv used symlinks into the cache, as opposed to full package copies. Please see `?renv::config` for more details. (#556)",1,326,FALSE,NA
renv,1843bc96e1ca303c7639f2d2e603edd3,"`renv::snapshot()` gains the `packages` argument, to be used when creating a lockfile that captures a specific set of packages and their dependencies. renv will use the currently-installed versions of those packages when determining the package records to be written to the lockfile. (#554)",1,327,FALSE,NA
renv,19ca5c2f2678f6b8bc4b953da3065a6a,"`renv::dependencies()` now accepts an R function as the first argument, for finding the packages used by a particular function. Currently, package usages must be prefixed with `::` to be detected. (#554)",1,328,FALSE,NA
renv,8c6583bdd1ace3e4b418cc235368bf7e,"`renv::record(<package>)` now ensures that the latest-available version of that package is recorded in the lockfile. Previously, a package record without any specified version was added instead. For existing records without a recorded version, the latest-available version on the package repositories will be used during `restore()` instead. (#540)",1,329,FALSE,NA
renv,5418c71bf9b9f96e4f9eba36032e13e2,"renv now reads the default branch tagged for repositories created on GitHub, ensuring that calls of the form `renv::install(""<user>/<repo>"")` resolve to the declared default branch, rather than always defaulting to `""master""`. (#557)",1,330,FALSE,NA
renv,0ecad73675139b4e88fcfd8c8c934db2,renv now only installs packages from sources if it detects that build tools are available. This determination is done by checking whether `make` is available on the `PATH`. (#552),1,331,FALSE,NA
renv,8d3afc89f25c119f5da5dd0a704c7e8a,Warnings related to unknown sources can now be suppressed by setting `options(renv.warnings.unknown_sources = FALSE)`. (#546),1,332,FALSE,NA
renv,0a0fcd0c7d943ecf9ee4568a287de40d,"renv now ignores chunks with the parameter `exercise=TRUE` set, under the assumption that such chunks might contain errors and so otherwise be un-parsable.",1,333,FALSE,NA
renv,332be17d8a5da46f5f2d4c419fbf0b99,renv now warns if sandbox generation takes a long time (\> 30 seconds).,1,334,FALSE,NA
renv,4a78ee4347cb3ee49818bef246dc344c,"renv now provides an optional locking mechanism, to help minimize the chance of interprocess conflicts when multiple R processes need to use the same renv project. The option is currently disabled by default; it can be enabled by setting `options(renv.config.locking.enabled = TRUE)` in an appropriate R startup file. (#525)",1,335,FALSE,NA
renv,909e6b9f6d8dc229fb9b4fc9457096d7,"renv now uses R's internal tar implementation by default on Windows. This is done to avoid issues that may occur when a version of `tar.exe` on the `PATH` exists, but does not accept Windows-style paths. The `TAR` environment variable can be set if one needs to explicitly force the use of a particular `tar.exe` executable. (#521)",1,336,FALSE,NA
renv,f9062822c3fc73ee7936c13110697e1c,renv now prepends `renv (<version>)` to the user agent string. This should help ensure that package binaries are located when installing packages from RSPM outside of RStudio. (#520),1,337,FALSE,NA
renv,e947092d50d87ad2e904578f1a3e41f8,renv now uses a task callback to detect mutations to the project library when the `auto.snapshot` configuration option is enabled. This will help ensure that automatic snapshots occur when packages are installed via a mechanism not explicitly understood by renv. (#501),1,338,FALSE,NA
renv,87d813bd1565d1da390e8b949c17d117,"renv now treats the user + site libraries as package sources during a restore. If renv sees that a package already installed in one of these libraries is compatible with the record requested via `renv::install()` or `renv::restore()`, that copy of the package will be copied and used. (#492)",1,339,FALSE,NA
renv,b08ec0a23ffccc340902be10a132055d,renv now performs a lighter-weight check as to whether the project lockfile is synchronized with the project library on load. The default value for the `synchronized.check` config option has been changed back to `TRUE`. (#496),1,340,FALSE,NA
renv,afb3c49c14d303bd79f430d3ce41c8f6,"renv now handles the `remotes` syntax for installing packages lying within the sub-directory of a GitHub repository; that is, `renv::install(""user/repo/subdir"")` should work as expected. (#497)",1,341,FALSE,NA
renv,8447f6992c08be6ae97e6d2ac78c8c94,Fixed an issue where renv did not construct the correct URL for packages to be installed from Bitbucket remotes. (#494),1,342,FALSE,NA
renv,ff4d69baf94fbc7930d77b8041ec751a,Fixed an issue where the `RENV_PATHS_PREFIX` environment variable was inappropriately normalized when renv was loaded. (#465),1,343,FALSE,NA
renv,b0650719e9557397058ea05805a4175e,"Fixed an issue where `renv::install(..., type = ""binary"")` would still attempt to install packages from sources in some cases. (#461)",1,344,FALSE,NA
renv,f78984b0c703d793530b0cf73d385454,"renv now always writes `renv/.gitignore`, to ensure that the appropriate directories are ignored for projects which initialize `git` after renv itself is initialized. (#462)",1,345,FALSE,NA
renv,382ebd60b35868eb5b74957fdc8f1646,R Markdown documents with the `.Rmarkdown` file extension are now parsed for dependencies.,1,346,FALSE,NA
renv,7aec900f27f9aa3b8195f07a407da4d3,Fixed an issue where setting the `external.libraries` configuration option would trigger a warning. (#452),1,347,FALSE,NA
renv,856a09b5f67021c633376c1d8bf71d8e,Improved handling of unicode paths on Windows. (#451),1,348,FALSE,NA
renv,748b92f7bccdb77352a086080037bb3d,"`renv::snapshot(project = <path>)` now properly respects `.gitignore` / `.renvignore` files, even when that project has not yet been explicitly initialized yet. (#439)",1,349,FALSE,NA
renv,9b1b7a48764a0ad28f1fcd7a8804dabb,The default value of the `synchronized.check` option has been changed from TRUE to FALSE.,1,350,FALSE,NA
renv,e8bcc4075efdc4d3727d023f13c0b5ed,Fixed an issue where packages downloaded from Bitbucket and GitLab did not record the associated commit hash.,1,351,FALSE,NA
renv,893ae7a9020003a1c102f25389ae5955,Fixed an issue where attempting to install packages from GitLab could fail to install the correct version of the package. (#436),1,352,FALSE,NA
renv,64632df4f861a1860736025828b9e008,`renv::snapshot()` now preserves records in a lockfile that are only available for a different operating system. This should make it easier to share lockfiles that make use of platform-specific packages. (#419),1,353,FALSE,NA
renv,b365357981f0b9eb1da4d5dae3b02285,renv better handles files that are removed during an invocation to `renv::dependencies()`. (#429),1,354,FALSE,NA
renv,6fd22b5111dbcd0cc3749cf30fda6546,"The configuration option `install.staged` has been renamed to `install.transactional`, to better reflect its purpose. `install.staged` remains supported as a deprecated alias.",1,355,FALSE,NA
renv,c8064b474a85b51cb7a9e00b37775f9b,Fixed an issue where renv could fail to parse non-ASCII content on Windows. (#421),1,356,FALSE,NA
renv,726de14f967dbfa53b77e1668599a6a5,"`renv::update()` gains the `exclude` argument, useful in cases where one would like to update all packages used in a project, except for a small subset of excluded packages. (#425)",1,357,FALSE,NA
renv,74f79e0e859855cd63bcec6016baddb5,`renv::update()` now respects the project `ignored.packages` setting. (#425),1,358,FALSE,NA
renv,5b7a593f234c34512157a21fce9f2eb6,Fixed an issue where RSPM binary URL transformations could fail for Ubuntu Trusty. (#423),1,359,FALSE,NA
renv,c7ea00df2e2c95bf526636dbd6a319e2,"renv now records the `OS_type` reported in a package's `DESCRIPTION` file (if any), and ignores packages incompatible with the current operating system during restore. (#394)",1,360,FALSE,NA
renv,afe0976f36c1822302f55bfa9a643cff,"`renv::install()` gains the `type` argument, used to control whether renv should attempt to install packages from sources (`""source""`) or using binaries (`""binary""`).",1,361,FALSE,NA
renv,f81b24631c51baa9fd5761110db5edf1,"renv now knows how to find and activate Rtools40, for R 4.0.0 installations on Windows.",1,362,FALSE,NA
renv,0d1bc6615eab460be5ea5a00555bf5cd,"The `RENV_PATHS_PREFIX` environment variable can now be used to prepend an optional path component to the project library and global cache paths. This is primarily useful for users who want to share the renv cache across multiple operating systems on Linux, but need to disambigutate these paths according to the operating system in use. See `?renv::paths` for more details.",1,363,FALSE,NA
renv,bbc49eb2cc9660be6ae361b9c266b54a,Fixed an issue where `renv::install()` could fail for packages from GitHub whose DESCRIPTION files contained Windows-style line endings. (#408),1,364,FALSE,NA
renv,5df7f701eff086bdb9cad48e355cccc5,`renv::update()` now also checks and updates any Bioconductor packages used within a project. (#392),1,365,FALSE,NA
renv,9a799f3dc88d26a00f951f2a34227324,renv now properly parses negated entries within a `.gitignore`; e.g. `!script.R` will indicate that renv should include `script.R` when parsing dependencies. (#403),1,366,FALSE,NA
renv,2080c7fc1df7d35db1f9abd57c5f3a27,Fixed an issue where packages which had only binaries available on a package repository were not detected as being from a package repository. (#402),1,367,FALSE,NA
renv,b5ae0881c59cf2f9a2ef32ff960dfcb6,Fixed an issue where calls of the form `p_load(char = <vctr>)` caused a failure when enumerating dependencies. (#401),1,368,FALSE,NA
renv,699c4a7a91ce95733ea89d9e3c1de3bf,"Fixed an issue where `renv::install()` could fail when multiple versions of a package are available from a single repository, but some versions of those packages are incompatible with the current version of R. (#252)",1,369,FALSE,NA
renv,0a3d730a0538b5ac5f493c11b7204cc4,Fixed an issue where downloads could fail when the associated pre-flight HEAD request failed as well. (#390),1,370,FALSE,NA
renv,86bb9562df5a03e3dd1e94154282cac0,Fixed an issue where empty records within a DESCRIPTION file could cause `renv::dependencies()` to fail. (#382),1,371,FALSE,NA
renv,e30dacc1eaea5482cd299589f5448abc,renv will now download binaries of older packages from MRAN when possible.,1,372,FALSE,NA
renv,6a5521061741d6096e752ce87bde853f,renv will now attempt to re-generate the system library sandbox if it is deleted while a session is active. (#361),1,373,FALSE,NA
renv,3ed0cba3f75e31b8ff343af77c62718c,"Fixed an issue where Python packages referenced using `reticulate::import()` were incorrectly tagged as R package dependencies. Similarly, renv now only considers calls to `modules::import()` if those calls occur within a call to `modules::module()`. (#359)",1,374,FALSE,NA
renv,b1ec42bef92317cba0a4049d7aef90e8,`renv::scaffold()` now also generates a lockfile when invoked. (#351),1,375,FALSE,NA
renv,2603d03582c9c1660f09c3ea2f8e27d8,"The argument `confirm` has been renamed to `prompt` in all places where it is used. `confirm` remains supported for backwards compatibility, but is no longer explicitly documented. (#347)",1,376,FALSE,NA
renv,42fa4eef4363caeb52436233c2713490,"The continuous integration renv vignette now also contains a template for using renv together with GitLab CI. (#348, @​artemklevtsov)",1,377,FALSE,NA
renv,6cf61f549195434184ebd12c9fa649ef,renv now properly resets the session library paths when calling `renv::deactivate()` from within RStudio. (#219),1,378,FALSE,NA
renv,c460a3161caa995cf03775b2806d0da5,`renv::init()` now restores the associated project library when called in a project containing a lockfile but no project library nor any pre-existing project infrastructure.,1,379,FALSE,NA
renv,b31015d8e22d0bfcfa69625ba850e5a7,Fixed an issue on Windows where attempts to download packages from package repositories referenced with a `file://` scheme could fail.,1,380,FALSE,NA
renv,a50c26b7a20ae9b1d70a1f746eb67eaa,"The configuration option `dependency.errors` has been added, controlling how errors are handled during dependency enumeration. This is used, for example, when enumerating dependencies during a call to `renv::snapshot()`. By default, errors are reported, and (for interactive sessions) the user is prompted to continue. (#342)",1,381,FALSE,NA
renv,bf88fe5a20a6afe5bbd9989b0663b6ef,"`renv::dependencies()` gains two new arguments: the `progress` argument controls whether renv reports progress while enumerating dependencies, and `errors` controls how renv handles and reports errors encountered during dependency discovery. The `quiet` argument is now soft-deprecated, but continues to be supported for backwards compatibility. Specifying `quiet = TRUE` is equivalent to specifying `progress = FALSE` and `errors = ""ignored""`. Please see the documentation in `?dependencies` for more details. (#342)",1,382,FALSE,NA
renv,f9c44495e635e8e89dbdf197041ac5f0,"The environment variable `RENV_PATHS_LIBRARY_ROOT` can now be set, to instruct renv to use a particular directory as a host for any project libraries that are used by renv. This can be useful for certain cases where it is cumbersome to include the project library within the project itself; for example, when developing an R package. (#345)",1,383,FALSE,NA
renv,e0b3160f1b89d108c715f372e0dc359a,"The code used to bootstrap renv (that is, the code used to install renv into a project) has been overhauled. (#344)",1,384,FALSE,NA
renv,54dcfa2aa099501811aa0d8c47b89dee,renv no longer unsets an error handler set within the user profile when loading a project. (#343),1,385,FALSE,NA
renv,2b118f10df5b49dc4f53cc90219792b0,"renv gains the ""explicit"" snapshot type, wherein only packages explicitly listed as dependencies within the project `DESCRIPTION` file (and those package's transitive dependencies) will enter the lockfile when `renv::snapshot()` is called. (#338)",1,386,FALSE,NA
renv,55432221f0b2d8dbac0c14d146a790a2,"renv will now transform RSPM source URLs into binary URLs as appropriate, allowing renv to use RSPM's binary repositories during restore. See `?config` for more details. (#124)",1,387,FALSE,NA
renv,c4ffaca2bfb202b2f348466cdc7426a3,renv will now infer a dependency on `hexbin` in projects that make use of the `ggplot2::geom_hex()` function.,1,388,FALSE,NA
renv,f8dc1963023efcf82ee039d0446275b8,renv now tries to place Rtools on the PATH when a package is installed with the `install.packages()` hook active. (#335),1,389,FALSE,NA
renv,2dca1fa626328addf94e27e679fb3992,Fixed an issue where attempts to specify `RENV_PATHS_RTOOLS` would be ignored by renv. (#335),1,390,FALSE,NA
renv,35c86179f04865da485d858abcf196ef,"Fixed an issue where downloads could fail when using the `wininet` downloader, typically with a message of the form ""InternetOpenUrl failed: 'The requested header was not found'"".",1,391,FALSE,NA
renv,a0128c0393ebede6014fafe871ffa310,renv better handles projects containing special characters on Windows. (#334),1,392,FALSE,NA
renv,0c0ef0f03d5941f37b17eceb8bfff79e,renv better handles unnamed repositories. (#333),1,393,FALSE,NA
renv,99f4450ca41da050242f3f1b5a378293,"renv gains the config option `hydrate.libpaths`, allowing one to control the library paths used by default for `renv::hydrate()`. (#329)",1,394,FALSE,NA
renv,9407ac218cf5f5f6893fb24d89232ec4,"`renv::hydrate()` gains the `sources` argument, used to control the library paths used by renv when hydrating a project. (#329)",1,395,FALSE,NA
renv,c3e841ffc2cc096f4c7be998e6511308,renv now sandboxes the system library by default on Windows.,1,396,FALSE,NA
renv,2f79c49c0e5fafbbadeefc20eed0e4ef,renv now validates that the Xcode license has been accepted before attempting to install R packages from sources. (#296),1,397,FALSE,NA
renv,a0e13013a8828357495f675d76c5f680,"The R option `renv.download.override` can now be used to override the machinery used by renv when downloading files. For example, setting `options(renv.download.override = utils::download.file)` would instruct renv to use R's own downloader when downloading files from the internet. This can be useful when configuration of `curl` is challenging or intractable in your environment, or you've already configured the base R downloader suitably.",1,398,FALSE,NA
renv,0423894a2e8974828271708ad29c559a,"`renv::use_python(""~/path/to/python"")` now works as expected.",1,399,FALSE,NA
renv,b95b73f252432506f05f3acae7a4e0ae,renv now properly expands `R_LIBS_SITE` and `R_LIBS_USER` when set within a startup `.Renviron` file. (#318),1,400,FALSE,NA
renv,08e3f669cec19e5f776d1eb586223e6f,"The `renv.download.headers` option can now be used to provide arbitrary HTTP headers when downloading files. See the **Authentication** section in `vignette(""renv"")` for more details. (#307)",1,401,FALSE,NA
renv,81e1daa2945ecb27e951e94ae2afdc6a,"renv gains the project setting `package.dependency.fields`, for controlling which fields in an R package's `DESCRIPTION` file are examined when discovering recursive package dependencies. This can be useful when you'd like to instruct renv to track, for example, the `Suggests` dependencies of the packages used in your project. (#315)",1,402,FALSE,NA
renv,d61e9c536c4248a48726d043e06326f5,renv now better handles repositories referenced using file URIs.,1,403,FALSE,NA
renv,b07a4d4bf3e66b45327bc0f223c1f391,"Packages installed from GitHub using `renv::install()` will now also have `Github*` fields added, in addition to the default `Remote*` fields. This should help fix issues when attempting to deploy projects to RStudio Connect requiring packages installed by renv. (#397)",1,404,FALSE,NA
renv,68f83035eedba765cdde7a74d37ad8bd,renv now prefers using a RemoteType field (if any) when attempting to determine a package's source. (#306),1,405,FALSE,NA
renv,5de4cae1788473aed1a1fef0e7968851,"renv gains a new function `renv::scaffold()`, for generating renv project infrastructure without explicitly loading the project. (#303)",1,406,FALSE,NA
renv,193c8e4aec5b10fa397aa224c7a9caba,"renv now updates its local `.gitignore` file, when part of a git repository whose git root lives in a parent directory. (#300)",1,407,FALSE,NA
renv,1dcff179f30c7d33417358446245ecfd,Fixed an issue in invoking `find` on Solaris.,1,408,FALSE,NA
renv,730088fb50c621baaccf18fd335d32da,Fixed an issue in invoking `cp` on Solaris.,1,409,FALSE,NA
renv,28423c45be48d9ca7c93d326cdda8ead,"renv gains a new function `renv::record()`, for recording new packages within an existing lockfile. This can be useful when one or more of the recorded packages need to be modified for some reason.",1,410,FALSE,NA
renv,d26ed38da4e4a52196f92d76e6cad50d,An empty `.renvignore` no longer erroneously ignores all files within a directory. (#286),1,411,FALSE,NA
renv,2dabbccc03b9d754717a47e3b299c037,renv now warns if the version of renv loaded within a project does not match the version declared within the renv autoloader. (#285),1,412,FALSE,NA
renv,bf44a16383cd7e0ac26de86e7e4399a4,"renv gains a new function `renv::run()`, for running R scripts within a particular project's context inside an R subprocess. (#126)",1,413,FALSE,NA
renv,48377af4481bbdd5d931562ddaee4b82,The algorithm used by renv for hashing packages has changed. Consider using `renv::rehash()` to migrate packages from the old renv cache to the new renv cache.,1,414,FALSE,NA
renv,e7b2343b47d4eef6eae79753087e183a,"`renv::status()` now reports packages which are referenced in your project code, but are not currently installed. (#271)",1,415,FALSE,NA
renv,a9c10f9e1306124400e4c55286a230db,renv is now able to restore packages with a recorded URL remote. (#272),1,416,FALSE,NA
renv,c4eaa30e5534cd228c3d97e17fcaedf0,"`renv::dependencies()` can now parse R package dependencies used as custom site generator in an Rmd yaml header. (#269, @​cderv)",1,417,FALSE,NA
renv,498d0ce8ac12e4e7dfded30679e619e3,renv now properly respects a downloader requested by the environment variable `RENV_DOWNLOAD_FILE_METHOD`.,1,418,FALSE,NA
renv,b2e8082f991eb1482ea2c1025b5bd1c9,"renv no longer sources the user profile (normally located at `~/.Rprofile`) by default. If you desire this behavior, you can opt-in by setting `RENV_CONFIG_USER_PROFILE = TRUE`; e.g. within your project or user `.Renviron` file. (#261)",1,419,FALSE,NA
renv,28fa5dc337aee6014a90098fb88d4246,"`renv::restore()` gains the `packages` argument, to be used to restore a subset of packages recorded within the lockfile. (#260)",1,420,FALSE,NA
renv,c3bcc8b2ef21340bac48aaa7f0e44e9c,renv now tries harder to preserve the existing structure in infrastructure files (e.g. the project `.Rprofile`) that it modifies. (#259),1,421,FALSE,NA
renv,33817ebf5ec392b7321073417b31fab4,renv now warns if any Bioconductor packages used in the project appear to be from a different Bioconductor release than the one currently active and stored in the lockfile. (#244),1,422,FALSE,NA
renv,80b34fda18c6fccb444a36146e4e6082,renv now normalizes any paths set in the `RENV_PATHS_*` family of environment variables when renv is loaded.,1,423,FALSE,NA
renv,ace7a2a25fc015c1fd66a71693f45f1b,Fixed an issue where renv would not properly clean up after a failed attempt to call `Sys.junction()`. (#251),1,424,FALSE,NA
renv,2e76075214b4b4f7b7d2d7bab54664ad,"Fixed an issue where renv would, in some cases, copy rather than link from the package cache when the library path had been customized with the `RENV_PATHS_LIBRARY` environment variable. (#245)",1,425,FALSE,NA
renv,f0049c10dbacf56da37577ccf979c563,"The method renv uses when copying directories can now be customized. When copying directories, renv now by default uses `robocopy` on Windows, and `cp` on Unix. This should improve robustness when attempting to copy files in some contexts; e.g. when copying across network shares.",1,426,FALSE,NA
renv,79a8f7473c89ca4ee831289b4e9516ca,"renv now tracks the version of Bioconductor used within a project (if applicable), and uses that when retrieving the set of repositories to be used during `renv::restore()`.",1,427,FALSE,NA
renv,a3942dae56734e2c8401ce390045ecfb,"`renv::dependencies()` can now parse R package dependencies declared and used by the `modules` package. (#238, @​labriola)",1,428,FALSE,NA
renv,6f7c63f4d6a67e572926a0fc7298d251,"Fixed an issue where `renv::restore()` could fail in Docker environments, usually with an error message like 'Invalid cross-device link'. (#243)",1,429,FALSE,NA
renv,56525a7213906e2949aa6d85b8d9ecef,`renv::install()` disables staged package install when running with the Windows Subsystem for Linux. (#239),1,430,FALSE,NA
renv,4494041d327a1e068ef7368d255c3361,"`renv::dependencies()` gains a new argument `dev`, indicating whether development dependencies should also be included in the set of discovered package dependencies. By default, only runtime dependencies will be reported.",1,431,FALSE,NA
renv,4c3e7aada70c157d8bde3ac956623e9e,"renv has gained the function `renv::diagnostics()`, which can occasionally be useful in understanding and diagnosing renv (mis)behaviors.",1,432,FALSE,NA
renv,9300c437ed50d9d93425c140acc937df,`renv::equip()` can now be used on macOS to install the R LLVM toolchain normally used when compiling packages from source. renv will also use this toolchain as appropriate when building packages from source.,1,433,FALSE,NA
renv,45f9d7b46f4a9671b58d59c690e1af39,"`renv::install()` now provides a custom Makevars when building packages on macOS with Apple Clang, to avoid issues due to the use of '-fopenmp' during compilation.",1,434,FALSE,NA
renv,fb1e83afa288e7544168547272dca8fa,`renv::install()` now respects explicit version requests when discovered in a project's DESCRIPTION file. (#233),1,435,FALSE,NA
renv,d705c75190d5bd7338b1aad952beb03c,Fixed an issue where `renv:::actions()` would fail to report any actions if the project lockfile was empty. (#232),1,436,FALSE,NA
renv,4ed9703dfd9f7dc30981af27b191d73a,"When using renv for R package development, renv will no longer attempt to write the package being developed to the lockfile. (#231)",1,437,FALSE,NA
renv,7156d2be7547a2d775515a60030e0eb3,Fixes for checks run on CRAN.,1,438,FALSE,NA
renv,c009a75339caf62d025ebe8a255d55cf,renv will now search for Rtools in more locations. (#225),1,439,FALSE,NA
renv,43be08447a2ca75e1ae358b89288f786,"`renv::load()` now ensures that the version of renv associated with the loaded project is loaded when possible. In addition, experimental support for switching between projects with `renv::load()` has been implemented. (#229)",1,440,FALSE,NA
renv,b2cfd1fc1aaa9ba3a5483d64dc958ec2,`renv::dependencies()` no longer treats folders named with the extension `.Rmd` as though they were regular files. (#228),1,441,FALSE,NA
renv,403dd6fb4fb72bebcc7bf639e43b8457,It is now possible to install source packages contained within `.zip` archives using `renv::install()`.,1,442,FALSE,NA
renv,04ec93f1fe20b31ea8b895a78394ef97,Fixed an issue where attempts to call `renv::restore()` with the path to the lockfile explicitly provided would fail. (#227),1,443,FALSE,NA
renv,124bd715f5834872f97a3a0ce54610a2,Further fixes for checks run on CRAN.,1,444,FALSE,NA
renv,0efb39173db85a6937e9efcf88a0135f,Fixes for checks run on CRAN.,1,445,FALSE,NA
renv,7d38d3cd98b290406657abc6da37f3ce,Initial CRAN release.,1,446,FALSE,NA
reticulate,c6e351c90bf5594b22364a8267e0af4d,"Update for Pandas 2.2 deprecation of `Index.format()` (#1537, #1538).",1,1,FALSE,NA
reticulate,e6e69faef6531cf57e0ec5951e4d763e,Updates for CRAN R-devel (R 4.4).,1,2,FALSE,NA
reticulate,8ed295e786dcc7f6a546c4926d527884,"Subclassed Python list and dict objects are no longer automatically converted to R vectors. Additionally, the S3 R `class` attribute for Python objects is now constructed using the Python `type(object)` directly, rather than from the `object.__class__` attribute. See #1531 for details and context.",1,3,FALSE,NA
reticulate,39504612aec8cbfc828600140bdf4958,"R external pointers (EXTPTRSXP objects) now round-trip through `py_to_r(r_to_py(x))` successfully. (reported in #1511, fixed in #1519, contributed by @​llaniewski).",1,4,FALSE,NA
reticulate,105d01ec995ea2b2ef2bfbdfe3c6bc77,"Fixed issue where `virtualenv_create()` would error on Ubuntu 22.04 when using the system python as a base. (#1495, fixed in #1496).",1,5,FALSE,NA
reticulate,61bd5076056f8d27958b9e2b4626f0e3,"Fixed issue where `csc_matrix` objects with unsorted indices could not be converted to a dgCMatrix. (related to #727, fixed in #1524, contributed by @​rcannood).",1,6,FALSE,NA
reticulate,05cf70e4c49d871e3d5f04ea9d7352f1,"Added support for partially unexpanded variables like `$USER` in `XDG_DATA_HOME` and similar (#1513, #1514)",1,7,FALSE,NA
reticulate,f735c412d28440f308cf4312cf3ab8ca,"The knitr python engine now formats captured python exceptions to include the exception type and any exception notes when chunk options `error = TRUE` is set (reported in #1520, fixed in #1527).",1,8,FALSE,NA
reticulate,170a4fc57ee22410fc3d984392e048ce,"Fixed an issue where the knitr python engine would fail to include figures from python chunks if a custom `root.dir` chunk option was set. (reported in #1526, fixed in #1529)",1,9,FALSE,NA
reticulate,229244d22df8d27fc7a04977fe61b26d,knitr engine gains the ability to save chunk figures in multiple files/formats (Contributed by @​Rumengol in #1507),1,10,FALSE,NA
reticulate,634fb12dc1637c2926594d48becb9445,"Fixed an issue where matplotlib figures generated in the initial chunk where matplotlib was first imported would be the wrong size (reported in #1523, fixed in #1530)",1,11,FALSE,NA
reticulate,6ab96a16a89e28871470387015101ebb,"Fixed an issue where the knitr engine would not correctly display altair compound charts if more than one were present in a document (#1500, #1532).",1,12,FALSE,NA
reticulate,4a32fc45d25c5bedf23082e289703786,"Fixed issue where `asyncio`, (and modules that use `asyncio`), would error on Windows when running under RStudio (#1478, #1479).",1,13,FALSE,NA
reticulate,b1d2478fdc5897015f92b2687d18d037,Added compatability with Python 3.12.,1,14,FALSE,NA
reticulate,dfe8751ebd256414d1f37cee61b7c174,`condaenv_exists()` is now exported.,1,15,FALSE,NA
reticulate,c1e881c9bbc66e7ab53525007f995430,"reticulate now supports casting R data.frames to Pandas data.frames using nullable data types, allowing users to preserve NA's from R atomic vectors. This feature is opt-in and can be enabled by setting the R option `reticulate.pandas_use_nullable_dtypes` to `TRUE`. (#1439)",1,16,FALSE,NA
reticulate,c58773cf25bde4217ddba1db8d22cbf1,"reticulate now exports a `chooseOpsMethod()` method, allowing for Ops dispatch to more specialized Ops methods defined for Python objects.",1,17,FALSE,NA
reticulate,1d1a41cf751d1ee7f370830c01bdf01d,"`py_discover_config()` will now warn instead of error upon encountering a broken Python installation. (#1441, #1459)",1,18,FALSE,NA
reticulate,056df0f97340d937ad8ce8d82ff52f9a,"Fixed issue where Python would raise exception ""OSError: \[WinError 6\] The handle is invalid"" when opening a subprocess while running in Rstudio on Windows. (#1448, #518)",1,19,FALSE,NA
reticulate,77b55e6c19900dc9fbc8c1eca2b0158f,"Fixed issue where the multiprocessing Python module would crash or hang when spawning a `Process()` on Windows. (#1430, #1346, fixed in #1461)",1,20,FALSE,NA
reticulate,e3f76cc17b75b5ccb1a2468927daeeb1,"Fixed issue where `virtualenv_create()` would fail to discover a 'virtualenv' module in the system Python installation on Ubuntu. Reticulate will no longer discover and attempt to use the `venv` module stub present on Ubuntu systems where the `python3-venv` apt package has not been installed. (mlverse/pysparklyr#11, #1437, #1455)",1,21,FALSE,NA
reticulate,8dc50d10e65a7ffae27176d4a1cbf6e5,"Fixed issue where the user was prompted to create an 'r-reticulate' venv in the RStudio IDE before reticulate was requested to initialize Python. (#1450, #1456)",1,22,FALSE,NA
reticulate,6cb7f4a5c0af62f57477685647a849ef,"Improved error message when reticulate attempts to initialize a virtual environment after the Python installation it was created from is no longer available. (#1149, #1457)",1,23,FALSE,NA
reticulate,cd8f69a921be845fbadd74feca08d644,Improved error message on Fedora when attempting to create a virtual environment from the system python before running `dnf install python3-pip`.,1,24,FALSE,NA
reticulate,ed043e670546f8cb8ed59455ba95130b,Fixed issue where `install_python()` on macOS in the RStudio IDE would fail to discover and use brew for Python build dependencies.,1,25,FALSE,NA
reticulate,2ef2a94666eb5ba815cdbd85278ea26c,"Fixed error with `virtualenv_create(python = ""/usr/bin/python"")` on centos7. (#1467)",1,26,FALSE,NA
reticulate,5565f84b4aafa4143f103169d4ae253f,"reticulate will no longer prompt users to install miniconda. Instead, reticulate will now prompt users to create a default `r-reticulate` venv.",1,27,FALSE,NA
reticulate,4bbd79b9b4a3915e72824ef04a3396e7,"The search that reticulate conducts to select which Python installation to load has changed. See the updated Python ""Order of Discover"" in the ""versions"" vignette. `vignette(""versions"", package = ""reticulate"")`.",1,28,FALSE,NA
reticulate,0128096f225112a94a34e545fef52da5,"Updated recommendations in the ""python_dependencies"" vignette for how R packages can approach Python dependency management. `vignette(""python_dependencies"", package = ""reticulate"")`",1,29,FALSE,NA
reticulate,b756c57739bd1365b6ed934c537e028a,"New function `virtualenv_starter()`, which can be used to find a suitable python binary for creating a virtual environmnent. This is now the default method for finding the python binary when calling `virtualenv_create(version = <version>)`.",1,30,FALSE,NA
reticulate,13514392412801a56fc44cad9e1d8325,"`virtualenv_create()` and `virtualenv_install()` gain a `requirements` argument, accepting a filepath to a python requirements file.",1,31,FALSE,NA
reticulate,b49dc42e7a9f898b3f467ef2a603120f,`virtualenv_create()` gains a `force` argument.,1,32,FALSE,NA
reticulate,8d6a45db16f9b04c4ec22219bafb4470,"`virtualenv_install()` gains a `python_version` argument, allowing users to customize which python version is used when bootstrapping a new virtual environment.",1,33,FALSE,NA
reticulate,d015fcbc4861297459d067d80287647d,Fixed an issue where the list of available python versions used by `install_python()` would be out-of-date.,1,34,FALSE,NA
reticulate,153109a503398b7b39a41d69ed66e4b1,`install_python()` now gives a better error message if git is not installed.,1,35,FALSE,NA
reticulate,60a49f085e6408609cc0f006ed7a5faf,"`install_python()` on macOS will now will use brew, if it's available, to install build dependencies, substantially speeding up python build times.",1,36,FALSE,NA
reticulate,5b72b63f9a0873f64a1610cd30f22bea,"New function `conda_search()`, contributed by @​mkoohafkan in PR #1364.",1,37,FALSE,NA
reticulate,e40badcd8bc16ef7c1ae85c208cc6fc7,"New `[` and `[<-` methods that invoke Python `__getitem__`, `__setitem__` and `__delitem__`. The R generics `[` and `[<-` now accept python-style slice syntax like `x[1:2:3]`. See examples in `?py_get_item`.",1,38,FALSE,NA
reticulate,29f93f826e7a00385dd344d0abdac90a,"`py_iterator()` gains a `prefetch` argument, primarily to avoid deadlocks where the main thread is blocked, waiting for the iterator, which is waiting to run on the main thread, as encountered in TensorFlow/Keras. (#1405).",1,39,FALSE,NA
reticulate,72107335b9d31237e069131041063a46,"String columns from Pandas data frames containing `None`, `pd.NA` or `np.nan` are now simplified into character vectors and missing values replaced by `NA` (#1428).",1,40,FALSE,NA
reticulate,33bafa202aa35267a80be6224cb6d0b1,Converting from Pandas data frames containing columns with Pandas nullable data types are now correctly converted into R data.frames preserving the missing values (#1427).,1,41,FALSE,NA
reticulate,f5d08ef617c0bc0c2fcfcacaf5b7869a,"The knitr engine gains a `jupyter_compat` option, enabling reticulate to better match the behavior of Jupyter. When this chunk option is set to `TRUE`, only the return value from the last expression in a chunk is auto-printed. (#1391, #1394, contributed by @​matthew-brett)",1,42,FALSE,NA
reticulate,e1e3606d8a8b06d8d2d5070c9673b01a,"The knitr engine now more reliably detects and displays matplotlib pending plots, without the need for a matplotlib artist object to be returned as a top-level expression. E.g., the knitr engine will now display plots when the matplotlib api returns something other than an artist object, (`plt.bar()`), or the matplotlib return value is not auto-printed due to being assigned, (`x = plt.plot()`), or suppressed with a `;`, (`plt.plot();`). (#1391, #1401, contributed by @​matthew-brett)",1,43,FALSE,NA
reticulate,8d23c07689f03db001d3091f9f017e0f,Fixed an issue where knitr engine would not respect chunk options `fig.width` / `fig.height` when rendering matplotlib plots. (#1398),1,44,FALSE,NA
reticulate,a83559486c2c80a9044a7d8d857dbc29,"Fixed an issue where the reticulate knitr engine would not capture output printed from python. (PR #1412, fixing #1378, #331)",1,45,FALSE,NA
reticulate,704180de25e14f9fc88f7fe31e29dbb8,"Reticulate now periodically flushes python `stdout` and `stderr` buffers even while the main thread is blocked executing Python code. Streaming output from a long-running Python function call will now appear in the R console while the Python function is still executing. (Previously, output might not appear until the Python function had finished and control of the main thread had returned to R).",1,46,FALSE,NA
reticulate,a68eabcad638958f53d602de6842dfbb,Updated sparse matrix conversion routines for compatibility with scipy 1.11.0.,1,47,FALSE,NA
reticulate,b4a19077984f1d78b916819fe25a6bcc,Fixed an issue where a py capsule finalizer could access the R API from a background thread. (#1406),1,48,FALSE,NA
reticulate,03d6bf17760c728d2a7b1f113b019ccb,Fixed issue where R would segfault (crash) in long-lived R sessions where both rpy2 and reticulate were in use (#1236).,1,49,FALSE,NA
reticulate,0b875f57f898827aeabc5f0734d2c4ae,"Fixed an issue where exceptions from reticulate would not be formatted properly when running tests under testthat (r-lib/rlang#1637, #1413).",1,50,FALSE,NA
reticulate,db2810ed2b4153fbd993d63abaf6fa8b,"Fixed an issue where `py_get_attr(silent = TRUE)` would not return an R `NULL`, if the attribute was missing, as documented. (#1413)",1,51,FALSE,NA
reticulate,e327c33f2471543d6bd56b2dacfac432,"Fixed an issue where `py_get_attr(silent = TRUE)` would leave a python global exception set if the attribute was missing, resulting in fatal errors when running python under debug mode. (#1396)",1,52,FALSE,NA
reticulate,088c512f0bda3735be25547387dc39fd,Fix compilation error on R 3.5. Bump minimum R version dependency to 3.5.,1,53,FALSE,NA
reticulate,1a74793800622f8815363c437a1b1248,"R error information (call, message, other attributes) is now preserved as an R error condition traverses the R \<-\> Python boundary.",1,54,FALSE,NA
reticulate,ba2c611d90959c18ccb334890461f408,"Python Exceptions now inherit from `error` and `condition`, and can be passed directly to `base::stop()` to signal an error in R and raise an exception in Python.",1,55,FALSE,NA
reticulate,451b0fb561de41f5a47ca82c4da30702,"Raised Python Exceptions are now used directly to signal an R error. For example, in the following code, `e` is now an object that inherits from `python.builtin.Exception` as well as `error` and `condition`: `r e <- tryCatch(py_func_that_raises_exception(), error = function(e) e)` Use `base::conditionCall()` and `base::conditionMessage()` to access the original R call and error message.",1,56,FALSE,NA
reticulate,a28d5f75b8da4c7277ebb8d40eaeabea,"`py_last_error()` return object contains `r_call`, `r_trace` and/or `r_class` if the Python Exception was raised by an R function called from Python.",1,57,FALSE,NA
reticulate,4233a9d10ac89517f340a9207218d976,The hint to run `reticulate::py_last_error()` after an exception is now clickable in the RStudio IDE.,1,58,FALSE,NA
reticulate,2b9085680f8b712082fa6e1c46567911,Filepaths to Python files in the print output from `py_last_error()` are now clickable links in the RStudio IDE.,1,59,FALSE,NA
reticulate,2d58661e92621a6ad7ac05e360a4ec9a,"Python exceptions encountered in `repl_python()` are now printed with the full Python traceback by default. In the RStudio IDE, filepaths in the tracebacks are rendered as clickable links. (#1240)",1,60,FALSE,NA
reticulate,57265bba0a7aa770f47c1548de934d49,Converted Python callables gain support for dynamic dots from the rlang package. New features:,1,61,FALSE,NA
reticulate,57265bba0a7aa770f47c1548de934d49,• splicing (unpacking) arguments: `fn(!!!kwargs)`,2,62,FALSE,Converted Python callables gain support for dynamic dots from the rlang package. New features:
reticulate,57265bba0a7aa770f47c1548de934d49,"• dynamic names: `nm <- ""key""; fn(""{nm}"" := value)`",2,63,FALSE,Converted Python callables gain support for dynamic dots from the rlang package. New features:
reticulate,57265bba0a7aa770f47c1548de934d49,"• trailing commas ignored (matching Python syntax): `fn(a, )` identical to `fn(a)`",2,64,FALSE,Converted Python callables gain support for dynamic dots from the rlang package. New features:
reticulate,61d3ebc18cb0039497ca3f8fdefe837d,"New Ops group generics for Python objects: `+`, `-`, `*`, `/`, `^`, `%%`, `%/%`, `&`, `|`, `!`, `%*%`. Methods for all the Ops group generics are now defined for Python objects. (#1187, #1363) E.g., this now works:",1,65,FALSE,NA
reticulate,61d3ebc18cb0039497ca3f8fdefe837d,"```
np <- reticulate::import(""numpy"", convert = FALSE)
x <- np$array(1:5)
y <- np$array(6:10)
x + y
```",1,66,TRUE,NA
reticulate,f9cc64c3afa0500ac22974258682e8a8,"Fixed two issues with R comparison operator methods (`==`, `!=`, `<`, `<=`, `>=`, `>`):",1,67,FALSE,NA
reticulate,f9cc64c3afa0500ac22974258682e8a8,"• The operators no longer error on Python objects that define ""rich comparison"" Python methods that don't return a single bool. (e.g., numpy arrays).",2,68,FALSE,"Fixed two issues with R comparison operator methods (`==`, `!=`, `<`, `<=`, `>=`, `>`):"
reticulate,f9cc64c3afa0500ac22974258682e8a8,"• The operators now respect the 'convert' value of the supplied Python objects. Note, this may be a breaking change as, e.g, `==`, may now no long return an R scalar logical if one of the Python object being compared was created with `convert = FALSE`. Wrap the result of the comparison with `py_bool()` to restore the previous behavior. (#1187, #1363)",2,69,FALSE,"Fixed two issues with R comparison operator methods (`==`, `!=`, `<`, `<=`, `>=`, `>`):"
reticulate,269a7df2198150084dbaa69c0f17bafe,"R functions wrapping Python callables now have formals matching those of the Python callable signature, enabling better autocompletion in more contexts (#1361).",1,70,FALSE,NA
reticulate,ec2d2a8b076730f009dc013f0b751ba4,"new `nameOfClass()` S3 method for Python types, enabling usage: `base::inherits(x, <python-type-object>)` (requires R \>= 4.3.0)",1,71,FALSE,NA
reticulate,14081f43c10af8be8a201efa9dd70e7e,"`py_run_file()` and `source_python()` now prepend the script directory to the Python module search path, `sys.path`, while the requested script is executing. This allows the Python scripts to resolve imports of modules defined in the script directory, matching the behavior of `python <script>` at the command line. (#1347)",1,72,FALSE,NA
reticulate,f4188032c039aa03094035491be772f7,"The knitr engine now suppresses warnings from Python code if `warning=FALSE` is set in the chunk options. (quarto-dev/quarto#125, #1358)",1,73,FALSE,NA
reticulate,b10ff2db91c5af991a0fd479f7d1bba2,Fixed issue where reticulate's knitr engine would attach comments in a code chunk to the wrong code chunk (requires Python\>=3.8) (#1223).,1,74,FALSE,NA
reticulate,d8586529e59d5269a01906dd29e659ce,The knitr Python engine now respects the `strip.white` option (#1273).,1,75,FALSE,NA
reticulate,0ab3f301749d0cacacda02a93ec34d79,"Fixed issue where the knitr engine would show an additional plot from a chunk if the user called `matplotlib.pyplot.show()` (#1380, #1383)",1,76,FALSE,NA
reticulate,f8665300cae276845be3c16ba62ee82f,"`py_to_r()` now succeeds when converting subtypes of the built-in types (e.g. `list`, `dict`, `str`). (#1352, #1348, #1226, #1354, #1366)",1,77,FALSE,NA
reticulate,665addb774372ea754193f562075e512,New `pillar::type_sum()` method now exported for Python objects. That ensures the full object class name is printing in R tracebacks and tibbles containing Python objects.,1,78,FALSE,NA
reticulate,e8a7582f857bbbf983573700884b89c0,"`py_load_object()` gains a `convert` argument. If `convert = FALSE`, the returned Python object will not be converted to an R object.",1,79,FALSE,NA
reticulate,553ef617483131bb3d2b9e0d32da8229,Fixed error `r_to_py()` with Pandas\>=2.0 and R data.frames with a factor column containing levels with `NA`.,1,80,FALSE,NA
reticulate,89fe41e92e79c1193846337369532e55,"`r_to_py()` now succeeds for many additional types of R objects. Objects that reticulate doesn't know how to convert are presented to the Python runtime as a pycapsule (an opaque pointer to the underlying R object). Previously this would error. This allows for R code to pass R objects that cannot be safely converted to Python through the Python runtime to other R code. (e.g, to an R function called by Python code). (#1304)",1,81,FALSE,NA
reticulate,0ff57153c517ae48b17eaa396eb11e03,"reticulate gains the ability to bind to micromamba Python installations (#1378, #1176, #1382, #1379, thanks to Zia Khan, @​zia1138)",1,82,FALSE,NA
reticulate,723c0544d13748ccb49466f1f2ab705e,Default Python version used by `install_miniconda()` and friends is now 3.9 (was 3.8).,1,83,FALSE,NA
reticulate,1f314af0f6b8391cb3bc42c35562ac98,"Fixed issue where `source_python()` (and likely many other entrypoints) would error if reticulate was built with Rcpp 1.0.10. Exception and error handling has been updated to accommodate usage of `R_ProtectUnwind()`. (#1328, #1329).",1,84,FALSE,NA
reticulate,05628ddda3b65cf4d4ee6f4544e56aa7,Fixed issue where reticulate failed to discover Python 3.11 on Windows. (#1325),1,85,FALSE,NA
reticulate,415ff233b415312b7e20d1069b7058ba,Fixed issue where reticulate would error by attempting to bind to a cygwin/msys2 installation of Python on Windows (#1325).,1,86,FALSE,NA
reticulate,9555f6fc0b1b2aabbe814d9cd8575171,"`py_run_file()` now ensures the `__file__` dunder is visible to the executing python code. (#1283, #1284)",1,87,FALSE,NA
reticulate,48022d853177d5149faa4ea1ca173eee,"Fixed errors with `install_miniconda()` and `conda_install()`, on Windows (#1286, #1287, conda/conda#11795, #1312, #1297), and on Linux and macOS (#1306, conda/conda#10431)",1,88,FALSE,NA
reticulate,11d5cc22ae2a2e1397adda495778a5fa,Fixed error when activating a conda env from a UNC drive on Windows (#1303).,1,89,FALSE,NA
reticulate,29024b3dba08ec64f9de3b4a985210dc,"Fixed issue where reticulate failed to bind to python2. (#1241, #1229)",1,90,FALSE,NA
reticulate,9159321f2a5472390e9c42c8349aebe8,A warning is now issued when reticulate binds to python2 that python2 support will be removed in an upcoming reticulate release.,1,91,FALSE,NA
reticulate,f6a5ef15fbac05a65f66e4c00cada697,"`py_id()` now returns a character string, instead of an R integer (#1216).",1,92,FALSE,NA
reticulate,e33be3f4fa35feddd4bb154ac770d2c1,Fixed an issue where `py_to_r()` would not convert elements of a dictionary (#1221).,1,93,FALSE,NA
reticulate,c7491beb128c98dd626f0f29750ca777,Fixed an issue where setting `RETICULATE_PYTHON` or `RETICULATE_PYTHON_FALLBACK` on Windows to the pyenv-win `python.bat` shim would result in an error (#1263).,1,94,FALSE,NA
reticulate,186c3d24c1804450c3b2b77bab8b89ee,Fixed an issue where `datetime.datetime` objects with a `tzinfo` attribute was not getting converted to R correctly (#1266).,1,95,FALSE,NA
reticulate,8b5fe086907bde7a19158e06a3d61a20,"Fixed an issue where pandas `pandas.Categorical(,ordered=True)` Series were not correctly converted to an R ordered factor (#1234).",1,96,FALSE,NA
reticulate,d7dba639a67f17e99ed5fdbbf2d8e43d,The `reticulate` Python engine no longer halts on error for Python chunks containing parse errors when the `error=TRUE` chunk option is set. (#583),1,97,FALSE,NA
reticulate,c8cf938a435aea8f5128473ce9857dda,"`install_python()` now leverages brew for python build dependencies like openssl@​1.1 if brew is already installed and on the PATH, substantially speeding up `install_python()` on macOS systems with brew configured.",1,98,FALSE,NA
reticulate,19eee1cff998da962368b1843669c499,Fixed an issue where reticulate would fail to bind to a conda environment on macOS or linux if conda installed a non-POSIX compliant activation script into the conda environment. (#1255),1,99,FALSE,NA
reticulate,43e1a18d04081a42ab263b4b1754488a,"Fixed an issue where the python knitr engine would error when printing to HTML a constructor of class instances with a `_repr_html_` or `to_html` method (e.g., `pandas.DataFrame`; #1249, #1250).",1,100,FALSE,NA
reticulate,7dd32ea4659f7970d49787088cb08aec,Fixed an issue where the python knitr engine would error when printing a plotly figure to an HTML document in some (head-less) linux environments (#1250).,1,101,FALSE,NA
reticulate,49cab817f887a75f9ec42101b995a6d4,"Fixed an issue where `conda_install(pip=TRUE)` would install packages into a user Python library instead of the conda env if the environment variable `PIP_USER=true` was set. `py_install()`, `virtualenv_install()`, and `conda_install()` now always specify `--no-user` when invoking `pip install`. (#1209)",1,102,FALSE,NA
reticulate,c49a3cb623c0e34ad1dcea7bfe33ad51,Fixed issue where `py_last_error()` would return unconverted Python objects (#1233),1,103,FALSE,NA
reticulate,73a11878cb23efc7da990041dcde20b9,The Knitr engine now supports printing Python objects with `_repr_markdown_` methods. (via quarto-dev/quarto-cli#1501),1,104,FALSE,NA
reticulate,73f563d803ed2a3d1df3b1156671bff5,`sys.executable` on Windows now correctly reports the path to the Python executable instead of the launching R executable. (#1258),1,105,FALSE,NA
reticulate,940b96fe519aea2022251d733cdcf1c5,The `sys` module is no longer automatically imported in `__main__` by reticulate.,1,106,FALSE,NA
reticulate,23890ea64f96ffca680ec062b3e5bb16,Fixed an issue on Windows where reticulate would fail to find Python installations from pyenv installed via scoop.,1,107,FALSE,NA
reticulate,ac64200eaf9c4b8905460e1093bd5031,Fixed an issue where `configure_environment()` would error on Windows. (#1247),1,108,FALSE,NA
reticulate,39f25851ae529f011aa0524c88976884,Updated docs for compatibility with HTML5 / R 4.2.,1,109,FALSE,NA
reticulate,24f1fd675c806381f06a712eb03e0388,Updated r_to_py.sparseMatrix() method for compatibility with Matrix 1.4-2.,1,110,FALSE,NA
reticulate,5be4cfce01fb0dbd9f023b46a0278137,"Fixed an issue where reticulate would fail if R was running embedded under rpy2. reticulate now ensures the Python GIL is acquired before calling into Python. (#1188, #1203)",1,111,FALSE,NA
reticulate,cf5690d39219fb6114bc443822301f37,"Fixed an issue where reticulate would fail to bind to an ArcGIS Pro conda environment (#1200, @​philiporlando).",1,112,FALSE,NA
reticulate,d8c22412218b77eb4cf7775956f90b65,Fixed an issue where reticulate would fail to bind to an Anaconda base environment on Windows.,1,113,FALSE,NA
reticulate,31c62bb46c6c583db196a50ff8647b06,"All commands that create, modify, or delete a Python environment now echo the system command about to be executed. Affected: virtualenv\_{create,install,remove} conda\_{create,clone,remove,install,update} py_install",1,114,FALSE,NA
reticulate,662f6ae83207280af97c1536d531c03c,"`install_python()` and `create_virtualenv()` gain the ability to automatically select the latest patch of a requested Python version. e.g.: `install_python(""3.9:latest"")`, `create_virtualenv(""my-env"", version = ""3.9:latest"")`",1,115,FALSE,NA
reticulate,0bbd963a2c606b268a1142b110bbf435,"`install_python()` `version` arg gains default value of `""3.9:latest""`. `install_python()` can now be called with no arguments.",1,116,FALSE,NA
reticulate,128ed006ec761341207f42b56dd8e4d9,Fixed an issue where reticulate would fail to bind to a conda python if the user didn't have write permissions to the conda installation (#1156).,1,117,FALSE,NA
reticulate,b4414750db050e64f2e4b64dd9759fef,Fixed an issue where reticulate would fail to bind to a conda python if spaces were present in the file path to the associated conda binary (#1154).,1,118,FALSE,NA
reticulate,24549defceb7b9c2ae33915045ea1e06,"`use_python(, required = TRUE)` now issues a warning if the request will be ignored (#1150).",1,119,FALSE,NA
reticulate,d62fe1d5ecc328f0b249a17b90bcfc81,New function `py_repr()` (#1157),1,120,FALSE,NA
reticulate,73425add81df8a4c3aaf712624e2538e,"`print()` and related changes (#1148, #1157):",1,121,FALSE,NA
reticulate,73425add81df8a4c3aaf712624e2538e,• The default `print()` method for Python objects now invokes `py_repr()` instead of `str()`.,2,122,FALSE,"`print()` and related changes (#1148, #1157):"
reticulate,73425add81df8a4c3aaf712624e2538e,• All Python objects gain a default `format()` method that invokes `py_str()`.,2,123,FALSE,"`print()` and related changes (#1148, #1157):"
reticulate,73425add81df8a4c3aaf712624e2538e,• `py_str()` default method no longer strips the object memory address.,2,124,FALSE,"`print()` and related changes (#1148, #1157):"
reticulate,73425add81df8a4c3aaf712624e2538e,"• `print()` now returns the printed object invisibly, for composability with `%>%`.",2,125,FALSE,"`print()` and related changes (#1148, #1157):"
reticulate,a94ff91192961bad7ded834b1dd7c3f2,"Exception handling changes (#1142, @​t-kalinowski):",1,126,FALSE,NA
reticulate,a94ff91192961bad7ded834b1dd7c3f2,"• R error messages from Python exceptions are now truncated differently to satisfy `getOption(""warning.length"")`. A hint to call `reticulate::py_last_error()` is shown if the exception message was truncated.",2,127,FALSE,"Exception handling changes (#1142, @​t-kalinowski):"
reticulate,a94ff91192961bad7ded834b1dd7c3f2,• Python buffers `sys.stderr` and `sys.stdout` are now flushed when Python exceptions are raised.,2,128,FALSE,"Exception handling changes (#1142, @​t-kalinowski):"
reticulate,1ec4705e7c507a3ff6007036672b2413,\-`py_last_error()`:,1,128,FALSE,NA
reticulate,1ec4705e7c507a3ff6007036672b2413,"• Return object is now an S3 object 'py_error', includes a default print method.",2,129,FALSE,\-`py_last_error()`:
reticulate,1ec4705e7c507a3ff6007036672b2413,• The python Exception object ('python.builtin.Exception') is available as an R attribute.,2,130,FALSE,\-`py_last_error()`:
reticulate,1ec4705e7c507a3ff6007036672b2413,• Gains the ability to restore a previous exception if provided in a call `py_last_error(previous_error)`,2,131,FALSE,\-`py_last_error()`:
reticulate,1ec4705e7c507a3ff6007036672b2413,• Python traceback objects gain a default `format()` S3 method.,2,132,FALSE,\-`py_last_error()`:
reticulate,649bd322de0000c0e727e8de216511c4,"Fixed `py_to_r()` for scipy matrices when scipy \>= 1.8.0, since sparse matrices are now deprecated.",1,133,FALSE,NA
reticulate,5b07b56a6ac114e4dce07083f84d4c05,Fixed `r_to_py()` for small scipy matrices.,1,134,FALSE,NA
reticulate,226c9c7df7c59e8a0484ac8a9df53b7b,New maintainer: Tomasz Kalinowski,1,135,FALSE,NA
reticulate,4a4bdab482a52bc9692472244adb42cc,"Fixed an issue where `reticulate` would fail to bind to the system version of Python on macOS if command line tools were installed, but Xcode was not.",1,136,FALSE,NA
reticulate,f4b16fdf7c99ea1db0bb68d32b8723f5,`use_condaenv()` gains the ability to accept an absolute path to a python binary for `envname`.,1,137,FALSE,NA
reticulate,4849624e0d82c1a6c2a2c8ef59b6c1fd,"All python objects gain a `length()` method, that returns either `py_len(x)`, or if that fails, `as.integer(py_bool(x))`.",1,138,FALSE,NA
reticulate,58c120071526f98c500496869966874d,"`conda_create()` default for `python_version` changed from `NULL` to `miniconda_python_version()` (presently, 3.8).",1,139,FALSE,NA
reticulate,d94590485274ae3fe94b440eeb676210,"New function `py_bool()`, for evaluating Python ""truthiness"" of an object.",1,140,FALSE,NA
reticulate,973ea9b6c9115b410a93552f15cbef8b,"`reticulate` gains the function `py_list_packages()`, and can be used to list the Python modules available and installed in a particular Python environment. (#933)",1,141,FALSE,NA
reticulate,6bdcfe8726990e5711e83871b9d3e8ef,`reticulate` now supports conversion of Python datatable objects. (#1081),1,142,FALSE,NA
reticulate,45fb0a4ab737c93caac6383d0b460e0f,`repl_python()` gains support for invoking select magic and system commands like `!ls` and `%cd <dir>`. See `?repl_python()` for details and examples.,1,143,FALSE,NA
reticulate,4078a0d8142ef570f6ef2dc15045f505,"The development branch for `reticulate` has moved to the ""main"" branch.",1,144,FALSE,NA
reticulate,d134804a3a37a19f785272e6275cfb39,"`reticulate` gains `reticulate::conda_update()`, for updating the version of `conda` in a particular `conda` installation.",1,145,FALSE,NA
reticulate,3f1e7054865c64623e942f4419d04581,"`reticulate` gains `reticulate::miniconda_uninstall()`, for uninstalling the reticulate-managed version of Miniconda. (#1077)",1,146,FALSE,NA
reticulate,28f090862e1fff26dda6c022f59b06af,"`reticulate::use_python()` and friends now assume `required = TRUE` by default. For backwards compatibility, when `use_python()` is called as part of a package load hook, the default value will instead be `FALSE`.",1,147,FALSE,NA
reticulate,c6124c69829e08fb219d06f1c7807fc5,"`reticulate` now provides support for Python environments managed by poetry. For projects containing a `pyproject.toml` file, `reticulate` will attempt to find and use the virtual environment managed by Poetry for that project. (#1031)",1,148,FALSE,NA
reticulate,5132798f73f5555b2610c144e2bac0a0,The default version of Python used for the `r-reticulate` Miniconda environment installed via `reticulate::install_miniconda()` has changed from 3.6 to 3.8.,1,149,FALSE,NA
reticulate,8a37641e0d0ff66555d4293f8e512174,`reticulate::install_miniconda()` now prefers installing the latest arm64 builds of miniforge. See https://conda-forge.org/blog/posts/2020-10-29-macos-arm64/ for more details.,1,150,FALSE,NA
reticulate,1063083697828e43462d76e6c6c1f997,"`reticulate::conda_create()` gains the `environment` argument, used when creating a new conda environment based on an exported environment definition (e.g. `environment.yml` or `environment.json`).",1,151,FALSE,NA
reticulate,eeca86287ce6160b17691dedcc02779a,"`reticulate` gains the function, `conda_export()`, for exporting a conda environment definition as YAML. Environments are exported as via the `conda env export` command. (#779)",1,152,FALSE,NA
reticulate,57fd83110eaa3af5421832c83e9c2c3d,`reticulate::find_conda()` will now locate miniforge Conda installations located within the default install locations.,1,153,FALSE,NA
reticulate,fe2dd0b4f4399a1b3035c799e72d3daa,"Fixed an issue that caused `reticulate::conda_install(pip = TRUE)` to fail on windows. (#1053, @​t-kalinowski)",1,154,FALSE,NA
reticulate,0a9fe023f07bb995844a8478ea7e4c0f,Fixed a regression that caused `reticulate::conda_install(pip = TRUE)` to fail. (#1052),1,155,FALSE,NA
reticulate,b4a937ba8cc1d303158730653e7b7f4c,"`use_condaenv(""base"")` can now be used to activate the base Anaconda environment.",1,156,FALSE,NA
reticulate,d1d56b1d7951c7bc03a7809b38f0f77d,"`reticulate` will now execute any hooks registered via `setHook(""reticulate.onPyInit"", <...>)` after Python has been initialized. This can be useful for packages that need to take some action after `reticulate` has initialized Python.",1,157,FALSE,NA
reticulate,87353febe2c320f35c8b7cdb79be1cde,Further refined interrupt handling.,1,158,FALSE,NA
reticulate,5068d7b2d776388989e65e8d100be7bb,Fixed an issue where attempting to bind `reticulate` to `/usr/bin/python3` on macOS could fail if Xcode was not installed. (#1017),1,159,FALSE,NA
reticulate,1739dd00812bbfcd717fb65a1869403c,The `reticulate` Python REPL no longer exits when a top-level interrupt is sent (e.g. via Ctrl + C).,1,160,FALSE,NA
reticulate,e77a1e3f51365c2bf921abdb84e91e71,The miniconda auto-installer now supports aarch64 Linux machines. (#1012),1,161,FALSE,NA
reticulate,8cc1d0b6dae11ce614e20fb61f71a696,Fixed an issue where matplotlib plots were incorrectly overwritten when multiple Python chunks in the same R Markdown document included plot output. (#1010),1,162,FALSE,NA
reticulate,cd0038f3559493ce243f70c9e8db41d7,"`reticulate` can now use the version of Python configured in projects using pipenv. If the project contains a `Pipfile` at the root directory (as understood by `here::here()`), then `reticulate` will invoke `pipenv --venv` to determine the path to the Python virtual environment associated with the project. Note that the `RETICULATE_PYTHON` environment variable, as well as usages of `use_python(..., force = TRUE)`, will still take precedence. (#1006)",1,163,FALSE,NA
reticulate,7b144b2c6027e522d2daf7a5b956020d,"Fixed an issue where `reticulate::py_run_string(..., local = TRUE)` failed to return the dictionary of defined Python objects in some cases.",1,164,FALSE,NA
reticulate,432be7d93eecba473ed996d830817094,Fixed an issue causing tests to fail on CRAN's M1mac machine.,1,165,FALSE,NA
reticulate,9d7230103c40886d2a042d8ff7ba29e3,Fixed an issue where `reticulate`'s interrupt handlers could cause issues with newer versions of Python.,1,166,FALSE,NA
reticulate,8f69bb2420ef5d7c512773c6ac3b80fb,`reticulate` now better handles Pandas categorical variables containing `NA` values. (#942),1,167,FALSE,NA
reticulate,51eac6861762e2923fd48fe5785a601b,`reticulate` now supports converting `pandas.NA` objects into R `NA` objects. (#950),1,168,FALSE,NA
reticulate,8d408bdca5794375961e248a773310d2,`reticulate` now sets the `PYTHONIOENCODING` environment variable to UTF-8 when running within RStudio. This should allow UTF-8 input and output to be handled more appropriately.,1,169,FALSE,NA
reticulate,1df378de9571b5c5bfab23c34ef55d60,"`reticulate` gains the `install_python()` function, used to install different versions of Python via pyenv (pyenv-windows on Windows).",1,170,FALSE,NA
reticulate,7bda3e2ed14b96dcb989386c41042713,"Interrupt signals (e.g. those generated by `Ctrl + C`) are now better handled by `reticulate`. In particular, when `repl_python()` is active, `Ctrl + C` can be used to interrupt a pending Python computation.",1,171,FALSE,NA
reticulate,21e9b4eb3af0500fb2ba9c00ec43eeca,"`virtualenv_create()` gains the `pip_version` and `setuptools_version` arguments, allowing users to control the versions of `pip` and `setuptools` used when initializing the virtual environment. The `extra` argument can also now be used to pass arbitrary command line arguments when necessary.",1,172,FALSE,NA
reticulate,de1ec22af3b71942c6c15d7c13370fe1,"`virtualenv_create()` gains the `module` argument, used to control whether `virtualenv` or `venv` is used to create the requested virtual environment.",1,173,FALSE,NA
reticulate,61ef5d3ea5da7774e4391e3f09ef28c2,"`py_to_r.datetime.datetime` no longer errs when `tzname` is `NULL`, and instead assumes the time is formatted for `UTC`. (#876)",1,174,FALSE,NA
reticulate,3b5de4df10ee9cc2a8cab0bca14f8324,`reticulate` now supports the rendering of plotly plots and Altair charts in rendered R Markdown documents. (#711),1,175,FALSE,NA
reticulate,b898e0cebe0d80c8c83a4e8fec86cb83,"`reticulate` now avoids invoking property methods when inferring the type for Python class members, for auto-completion systems. (#907)",1,176,FALSE,NA
reticulate,8525964e7c05c211a6066a3787bea90e,"`reticulate` now attempts to set the `QT_QPA_PLATFORM_PLUGIN_PATH` environment variable when initializing a Conda installation of Python, when that associated plugins directory exists. (#586)",1,177,FALSE,NA
reticulate,27ddefbbe18dc444a7cc91228df2f7d4,"The `reticulate` Python engine now supports the `results = ""hold""` knitr chunk option. When set, any generated outputs are ""held"" and then displayed after the associated chunk's source code. (#530)",1,178,FALSE,NA
reticulate,4df9c8f250af3260a7fd34f99c0cc678,"`conda_create()` gains the `python_version` argument, making it easier to request that Conda environments are created with a pre-specified version of Python. (#766)",1,179,FALSE,NA
reticulate,3c3152981193d773cd9c695dbfdfbdde,"Fixed an issue where `reticulate::conda_install()` would attempt to re-install the default Python package, potentially upgrading or downgrading the version of Python used in an environment.",1,180,FALSE,NA
reticulate,591094c9e7767c029ee8ebc8592b3f20,Fixed an issue where `reticulate` invoked its `reticulate.initialized` hook too early.,1,181,FALSE,NA
reticulate,b66b94560bb1dfb9788ead17e61ee07d,Fixed an issue where Python modules loaded on a separate thread could cause a crash. (#885),1,182,FALSE,NA
reticulate,8afdfab8b19854769547eb0c74287c34,"`conda_install()` now allows version specifications for the `python_version` argument; e.g. `conda_install(python_version = "">=3.6"")`. (#880)",1,183,FALSE,NA
reticulate,cf92b826d9bcf90d5cabaf04ed4abce4,Fixed an issue where `conda_install()` failed to pass along `forge` and `channel` in calls to `conda_create()`. (#878),1,184,FALSE,NA
reticulate,a0d4092bc84974f33ceffdddadca7faa,Fixed an issue where Python's auto-loader hooks could fail when binding to a Python 2.7 installation.,1,185,FALSE,NA
reticulate,688f2eae9456b4d58a1e63765d45d40c,Fixed an issue where `python_config()` could throw an error when attempting to query information about a Python 2.6 installation.,1,186,FALSE,NA
reticulate,454acc27bf5952ff882cffa517e5d52c,`reticulate` now checks for and disallows installation of Python packages during `R CMD check`.,1,187,FALSE,NA
reticulate,fa2a9a96d3fde17b938401a554681439,`reticulate` no longer injects the `r` helper object into the main module if another variable called `r` has already been defined.,1,188,FALSE,NA
reticulate,0dd91a02ffdf86e3ac81bdebe3eca687,"The function `py_help_handler()` has now been exported, to be used by front-ends and other tools which need to provide help for Python objects in different contexts. (#864)",1,189,FALSE,NA
reticulate,20c6340554356ce860d5637ad65fd69f,Fixed an issue where timezone information could be lost when converting Python datetime objects to R. (#829),1,190,FALSE,NA
reticulate,043575d2a5b66ef0415710deb75efb06,Fixed an issue where numeric (rather than integer) dimensions could cause issues when converting SciPy sparse matrices to their R counterparts. (#844),1,191,FALSE,NA
reticulate,8de2381187d2fbe4d842203ae4526b9e,Fixed an issue where R `data.frame`s with non-ASCII column names could not be converted to Pandas DataFrames. (#834),1,192,FALSE,NA
reticulate,d044e2bd8993c861639e7bff5517437a,Fixed an issue where the `pip_ignore_installed` argument in `conda_install()` was silently being ignored.,1,193,FALSE,NA
reticulate,d4560f5355040fd95521db4e14cab09c,Fixed an issue where `reticulate::conda_install()` could re-install Python into an environment when not explicitly requested by the user.,1,194,FALSE,NA
reticulate,8c8ac5b67efc38542a8212881cebe062,`reticulate` now sets `LD_LIBRARY_PATH` when discovering Python. (#836),1,195,FALSE,NA
reticulate,e068abbde43ff0b1ed928af6ce286604,`reticulate` is now better at capturing Python logger streams (those that write to stdout or stderr) when `py_capture_output()` is set. (#825),1,196,FALSE,NA
reticulate,9d876cafeb472155438dca362436edc4,`reticulate` no longer calls `utils::loadhistory()` after each REPL iteration.,1,197,FALSE,NA
reticulate,f065b7a56032a78fe265054d403e5a4f,`reticulate` now better detects when Python modules are loaded.,1,198,FALSE,NA
reticulate,c1d82e9533906f193e0b941c096a8ade,"`reticulate::import_from_path()` now accepts the `delay_load` parameter, allowing modules which should be loaded from a pre-specified path to be lazy-loaded.",1,199,FALSE,NA
reticulate,d219b73a0a75811a3b02670fcd8ed567,"Fixed an issue where `reticulate` load hooks (normally defined via `setHook(""reticulate::<module>::load"", ...)`) would segfault if those hooks attempted to load the hooked module.",1,200,FALSE,NA
reticulate,6720891c2dadd23d0304987b7bdca923,`reticulate` now attempts to resolve the conda binary used to create the associated Conda environment in calls to `py_install()`. This should fix use cases where Conda environments are placed outside of the Conda installation itself.,1,201,FALSE,NA
reticulate,ba45aa982afdf12e7bbe5bddf15db6bb,"`reticulate` now sets `PYTHONPATH` before loading Python, to ensure modules are looked up in the same locations where a regular Python interpreter would find them on load. This should fix issues where `reticulate` was unable to bind to a Python virtual environment in some cases.",1,202,FALSE,NA
reticulate,bb2cb7b0ee976c75019b7ac893fa9e4a,"`reticulate::virtualenv_create()` gains the `packages` argument, allowing one to choose a set of packages to be installed (via `pip install`) after the virtual environment has been created.",1,203,FALSE,NA
reticulate,9e6304e0fdf210855f8d22804f048100,"`reticulate::virtualenv_create()` gains the `system_site_packages` argument, allowing one to control whether the `--system-site-packages` flag is passed along when creating a new virtual environment. The default value can be customized via the `""reticulate.virtualenv.system_site_packages""` option and now defaults to `FALSE` when unset.",1,204,FALSE,NA
reticulate,e46d89219f606f05bd53030052608ef5,Fixed an issue where `reticulate::configure_environment()` would fail when attempting to configure an Anaconda environment. (#794),1,205,FALSE,NA
reticulate,97f6c262d3f1f37dfce84e06398f1e8f,`reticulate` now avoids presenting a Miniconda prompt for interactive sessions during R session initialization.,1,206,FALSE,NA
reticulate,b53322bcbfd5195dd1461b695cd148fe,Fixed unsafe usages of `Rprintf()` and `REprintf()`.,1,207,FALSE,NA
reticulate,6e4463017bb9efda515d213f90ebc93e,"`reticulate::py_install()` better respects the `method` argument, when `py_install()` is called without an explicit environment name. (#777)",1,208,FALSE,NA
reticulate,6fccea909fb954fec0493139efbe77da,`reticulate:::pip_freeze()` now better handles `pip` direct references. (#775),1,209,FALSE,NA
reticulate,cf71b7a7b5d7c01ea76667981124a71f,"Fixed an issue where output generated from `repl_python()` would be buffered until the whole submitted command had completed. (#739, @​randy3k)",1,210,FALSE,NA
reticulate,654602c4e7f9141ac0fcac8b82d39001,"`reticulate` now explicitly qualifies symbols used from TinyThread with `tthread::`, to avoid issues with symbol conflicts during compilation. (#773)",1,211,FALSE,NA
reticulate,1df18d3cfa427c1e2d4e85f031c15573,"`reticulate` will now prefer an existing Miniconda installation over a `conda` binary on the PATH, when looking for Conda. (#790)",1,212,FALSE,NA
reticulate,56ce1dea5a0ae6347b6ce4e8bf9e597b,TinyThread now calls `Rf_error()` rather than `std::terminate()` when an internal error occurs.,1,213,FALSE,NA
reticulate,3fac355ae2be62bd56df3d2c5d16aba2,Conversion of Pandas DataFrames to R no longer emits deprecation warnings with pandas \>= 0.25.0. (#762),1,214,FALSE,NA
reticulate,9cbc7322d91c797b7994835bf9a66d13,`reticulate` now properly handles the version strings returned by beta versions of `pip`. (#757),1,215,FALSE,NA
reticulate,e0b683e5f7de5faaf58ea96ca5a6e73c,"`conda_create()` gains the `forge` and `channel` arguments, analogous to those already in `conda_install()`. (#752, @​jtilly)",1,216,FALSE,NA
reticulate,b0ca13021310e9d76aa5eb926ced56f6,"`reticulate` now ensures SciPy `csr_matrix` objects are sorted before attempting to convert them to their R equivalent. (#738, @​paulofelipe)",1,217,FALSE,NA
reticulate,17cc7e9b34e50663185d3747ee383d29,Fixed an issue where calling `input()` from Python with no prompt would fail. (#728),1,218,FALSE,NA
reticulate,6f20188170995ebb2e5fc82b78ef763b,"Lines ending with a semi-colon are no longer auto-printed in the `reticulate` REPL. (#717, @​jsfalk)",1,219,FALSE,NA
reticulate,b817398497b8dd7d2de877d15962ade9,`reticulate` now searches for Conda binaries in /opt/anaconda and /opt/miniconda. (#713),1,220,FALSE,NA
reticulate,18c1b9e2bc81ecafb60663f4384ee031,The `conda` executable used by `reticulate` can now be configured using an R option. Use `options(reticulate.conda_binary = <...>)` to force `reticulate` to use a particular `conda` executable.,1,221,FALSE,NA
reticulate,d5ff6cdb03a7227752ad008dc010ff1a,`reticulate::use_condaenv()` better handles cases where no matching environment could be found. (#687),1,222,FALSE,NA
reticulate,e8ff3d1a838e9cafe1b33a124d7c970c,"`reticulate` gains the `py_ellipsis()` function, used to access the Python `Ellipsis` builtin. (#700, @​skeydan)",1,223,FALSE,NA
reticulate,f423b681bec6ecd65eaf90885cbbc222,"`reticulate::configure_environment()` now only allows environment configuration within interactive R sessions, and ensures that the version of Python that has been initialized by Python is indeed associated with a virtual environment or Conda environment. Use `reticulate::configure_environment(force = TRUE)` to force environment configuration within non-interactive R sessions.",1,224,FALSE,NA
reticulate,d43aa11d5b3d66a425011463d9dd9535,"`reticulate` now automatically flushes output written to Python's stdout / stderr, as a top-level task added by `addTaskCallback()`. This behavior is controlled with the `options(reticulate.autoflush)` option. (#685)",1,225,FALSE,NA
reticulate,f8dedcceaf06a1ed3196b94eb0bdd741,`reticulate::install_miniconda()` no longer attempts to modify the system PATH or registry when installing Miniconda. (#681),1,226,FALSE,NA
reticulate,4845e7da1804a694b7ae228477037bbd,"`reticulate::conda_install()` gains the `channel` argument, allowing custom Conda channels to be used when installing Python packages. (#443)",1,227,FALSE,NA
reticulate,6ee47325da7b557f92ff15212be7d87f,`reticulate::configure_environment()` can now be used to configure a non-Miniconda Python environment. (#682; @​skeydan),1,228,FALSE,NA
reticulate,267f69ad2cdb77e412d2badb02ab5653,"Fixed an issue where matplotlib plots would be included using absolute paths, which fails in non-standalone documents rendered to HTML. (#669)",1,229,FALSE,NA
reticulate,ea5265d754d1cc53546088683d2874b7,Fixed an issue where `reticulate` would attempt to flush a non-existent stdout / stderr stream. (#584),1,230,FALSE,NA
reticulate,b8f4d2e294f46a1b66a9d182fffedfe9,Fixed an issue where `rmarkdown::render()` could fail when including matplotlib plots when `knit_root_dir` is set. (#645),1,231,FALSE,NA
reticulate,9255d8b22bdf05d875102a2911bdbf43,"`reticulate` now scans for Conda installations within the \~/opt folder, as per the updated installers distributed for macOS. (#661)",1,232,FALSE,NA
reticulate,7fd971267cd0e185ecb2d4499e20239c,Python classes can now be defined directly from R using the `PyClass()` function. (#635; @​dfalbel),1,233,FALSE,NA
reticulate,6676818a3bff48a9937a3e8b2849ad18,"reticulate is now compatible with Python 3.9. (#630, @​skeydan)",1,234,FALSE,NA
reticulate,3bf6220852fa8e477664a0b1d5fdb9a8,"Pandas DataFrames with a large number of columns should now be converted to R data.frames more quickly. (#620, @​skeydan)",1,235,FALSE,NA
reticulate,24d7ebd0daaff46ff7988e853f23c012,Python loggers are now better behaved in the Python chunks of R Markdown documents. (#386),1,236,FALSE,NA
reticulate,da8bc19249b0fc451d56acce30a1551b,"reticulate will now attempt to bind to `python3` rather than `python`, when no other version of Python has been explicitly requested by e.g. `use_python()`.",1,237,FALSE,NA
reticulate,5f86d60a5e96b931d7cb5c03d0ba7d1b,reticulate now provides R hooks for Python's `input()` and `raw_input()` functions. It should now be possible to read user input from Python scripts loaded by reticulate. (#610),1,238,FALSE,NA
reticulate,2d296c20b1bfcd5f5786c3cc21dda067,`reticulate` now more consistently normalizes the paths reported by `py_config()`. (#609),1,239,FALSE,NA
reticulate,f8a6f66d2f54fa9050f3d17b3c971051,"`reticulate` now provides a mechanism for allowing client packages to declare their Python package dependencies. Packages should declare the Python packages they require as part of the `Config/reticulate` field in their `DESCRIPTION` file. Currently, this only activated when using Miniconda; as the assumption is that users will otherwise prefer to manually manage their Python environments. Please see `vignette(""python_dependencies"")` for more details.",1,240,FALSE,NA
reticulate,80d7b58137e5d49310cc08568d3be984,"`reticulate` will now prompt the user to create and use a Miniconda environment when no other suitable Python environment has already been requested. This should help ease some of the trouble in setting up a Python environment on different platforms. The installer code was contributed by @​hafen, from the rminiconda package.",1,241,FALSE,NA
reticulate,0cbb82fbd10b763cc70a35dd1bf79382,"Fixed an issue where `virtualenv_create(..., python = ""<python>"")` could fail to use the requested version of Python when `venv` is not installed. (#399)",1,242,FALSE,NA
reticulate,731c1fa577f976cc301a78d2d919ac84,Fixed an issue where iterable Python objects could not be iterated with `iter_next()` due to a missing class. (#603),1,243,FALSE,NA
reticulate,f8ef06af4236da69a8b5f4a77972c160,Fixed an issue where Conda environments could be mis-detected as virtual environments.,1,244,FALSE,NA
reticulate,ab05db49ca3ded5eec9dc3c60c0fd20b,"R functions wrapping Python functions now inherit the formal arguments as specified by Python, making autocompletion more reliable. (#573, @​flying-sheep)",1,245,FALSE,NA
reticulate,a25deb5f5fed09f5d5b07815b10e79e3,Fixed an issue where attempts to query Conda for environments could fail on Windows. (#576; #575; @​dfalbel),1,246,FALSE,NA
reticulate,12f7133e6f9c3c53547ba3d5b6244746,"Properly check for NULL keyword arguments in `call_r_function()`. (#562, @​dfalbel)",1,247,FALSE,NA
reticulate,907ee9c80ed7f0da095f05d7dc39535a,Fixed an issue where subsetting with `[.python.builtin.object` could fail when `convert = TRUE` is set on the associated Python object. (#554),1,248,FALSE,NA
reticulate,489a3835e36abcb37587fcf1979f00e8,Fixed an issue where the wrong definition of `[[.python.builtin.object` was being exported. (#554),1,249,FALSE,NA
reticulate,b1db48e33b03319d140fb4974ed3d0b9,"`py_install()` now accepts `python_version`, and can be used if a particular version of Python is required for a Conda environment. (This argument is ignored for virtual environments.) (#549)",1,250,FALSE,NA
reticulate,fbd18a52426063ea195b40a4697e82d6,Fixed an issue where reticulate could segfault in some cases (e.g. when using the `iterate()` function). (#551),1,251,FALSE,NA
reticulate,e77cc09888bb28f2f577e1018821b8db,It is now possible to compile `reticulate` with support for debug versions of Python by setting the `RETICULATE_PYTHON_DEBUG` preprocessor define during compilation. (#548),1,252,FALSE,NA
reticulate,6bcb9a01a6f40e1cda7f3c94cf9ab9b3,"reticulate now warns if it did not honor the user's request to load a particular version of Python, as through e.g. `reticulate::use_python()`. (#545)",1,253,FALSE,NA
reticulate,b333445a4428bc4f1cab98d3bd414c93,`py_save_object()` and `py_load_object()` now accept `...` arguments. (#542),1,254,FALSE,NA
reticulate,9d42d6452db7b9de7abbf16bbdd07629,"`py_install()` has been revamped, and now better detects available Python tooling (virtualenv vs. venv vs. Conda). (#544)",1,255,FALSE,NA
reticulate,4793bcb98b4f3b1b9e094ea7d8c344ce,reticulate now flushes stdout / stderr after calls to `py_run_file()` and `py_run_string()`.,1,256,FALSE,NA
reticulate,812bdfda10f45d5ce4d78bb3aaedcc56,"Python tuples are now converted recursively, in the same way that Python lists are. This means that the sub-elements of the tuple will be converted to R objects when possible. (#525, @​skeydan)",1,257,FALSE,NA
reticulate,b17684085e325b3ed6f4e8afcfac051e,Python OrderedDict objects with non-string keys are now properly converted to R. (#516),1,258,FALSE,NA
reticulate,8a04661330e39e9687fe623683e27027,"Fixed an issue where reticulate could crash after a failed attempt to load NumPy. (#497, @​ecoughlan)",1,259,FALSE,NA
reticulate,0ebb94118875d69667237090b717d1b2,Fixed an issue where Python objects within Python lists would not be converted to R objects as expected.,1,260,FALSE,NA
reticulate,c194de89cd6a49c6757da26e11f8658d,Fixed an issue where single-row data.frames with row names could not be converted. (#468),1,261,FALSE,NA
reticulate,e7beb7557d7091a97eac77566ab085e1,Fixed an issue where `reticulate` could fail to query Anaconda environment names with Anaconda 3.7.,1,262,FALSE,NA
reticulate,dac825039e48cf58856276bdc89d7ad5,Fixed an issue where vectors of R Dates were not converted correctly. (#454),1,263,FALSE,NA
reticulate,512fe2eeb36f63d10e982b46c9e78151,Fixed an issue where R Dates could not be passed to Python functions. (#458),1,264,FALSE,NA
reticulate,c9a1e29b3c287b9c756570e1d75ad9bd,Fixed a failing virtual environment test on CRAN.,1,265,FALSE,NA
reticulate,f6f536fd5430d3417aa5a4ae3f58f800,Fixed an issue where attempts to activate virtual environments created with virtualenv 16.4.1 would fail. (#437),1,266,FALSE,NA
reticulate,2fbbe0eeaaeb7f5254a1d2ed36d8c35e,Fixed an issue where conversion of Pandas Categorical variables to R objects would fail. (#389),1,267,FALSE,NA
reticulate,5be798009d999c47f01cecac42d6a28b,Textual output generated when adding items to a matplotlib plot object are now suppressed.,1,268,FALSE,NA
reticulate,38490cccabc46d32f0a63c4c6f712332,"If the last statement in a Python chunk returns a matplotlib plot object, the plot will now be auto-shown as in other environments.",1,269,FALSE,NA
reticulate,5daf5478eea2d16691bce8b0cd4e645c,The reticulate function help handler now returns function arguments for Python builtin functions.,1,270,FALSE,NA
reticulate,2051712cb038ef5064ec43ee1cdad7c8,Top-level Python statements can now include leading indent when submitted with `repl_python()`.,1,271,FALSE,NA
reticulate,94ca77ce6baac8bd26a44b6fdafaa33c,The current `matplotlib` figure is now cleared as each Python chunk in an R Markdown document is run.,1,272,FALSE,NA
reticulate,473144e097dcb8405dac73b2ece3e05d,The `r` helper object (used for evaluating R code from Python) now better handles conversion of R functions. (#383),1,273,FALSE,NA
reticulate,5e0a152db570507bcd0ce7013e355d45,The `use_virtualenv()` function now understands how to bind to virtual environments created by the Python `venv` module.,1,274,FALSE,NA
reticulate,9bf517fc7e146a0fde5a1b6a11fa2f3b,"Reticulate better handles conversions of R lists to Python, and similarly, Python lists to R. We now call `r_to_py()` on each sub-element of an R list, and similarly, `py_to_r()` on each sub-element of a Python list.",1,275,FALSE,NA
reticulate,13d5ce04787ab158fa6a0620a77c6253,"Reticulate now always converts R `Date` objects into Python `datetime` objects. Note that these conversions can be inefficient -- if you would prefer conversion to NumPy `datetime64` objects / arrays, you should convert your date to `POSIXct` first.",1,276,FALSE,NA
reticulate,d26489f5305185da935875cc707b9564,"Python chunks containing errors will cause execution to halt if 'error=FALSE' during render, conforming with the default knitr behavior for R chunks.",1,277,FALSE,NA
reticulate,553e57438f89350cb43b5f49d577b21e,The output of bare statements (e.g. `1 + 1`) is now emitted as output when using the reticulate Python engine.,1,278,FALSE,NA
reticulate,7d27ba0de5ae6ac1936e0b2ab66db2f8,Remapping of Python output streams to be R can now be explicitly enabled by setting the environment variable `RETICULATE_REMAP_OUTPUT_STREAMS` to 1. (#335),1,279,FALSE,NA
reticulate,c8132348955e93c2633665a418257aa0,Allow syntax errors in Python chunks with 'eval = FALSE' (#343),1,280,FALSE,NA
reticulate,8d144a19cc861efcc95e8927ad81a229,Avoid dropping blank lines in Python chunks (#328),1,281,FALSE,NA
reticulate,9b45d8f3d0c5ecbdeeeda725176c5af2,"Use ""agg"" matplotlib backend when running under RStudio Desktop (avoids crashes when attempting to generate Python plots)",1,282,FALSE,NA
reticulate,1e616a0cf717a1884886a8ea7ea990a5,Add `as.character()` S3 method for Python bytes (defaults to converting using UTF-8 encoding),1,283,FALSE,NA
reticulate,c36dc6aec6633640121449f037b50d3b,Add `py_main_thread_func()` for providing R callbacks to Python libraries that may invoke the function on a Python background thread.,1,284,FALSE,NA
reticulate,132e8dd5e7d0d74d33ae89e42dd6aebe,"Add `py_to_r` S3 methods for Scipy sparse matrices: CSR to dgRMatrix, COO to dgTMatrix, and for all other sparse matrices, conversion via CSC/dgCMatrix.",1,285,FALSE,NA
reticulate,d65dd9b43630f285a97a23f2e06cbbad,Output is now properly displayed when using the `reticulate` REPL with Windows + Python 2.7.,1,286,FALSE,NA
reticulate,dbb68bf6523d661d06acd90c9dfedcd2,Address memory protection issues identified by rchk,1,287,FALSE,NA
reticulate,02818567bcdf57abb4920bc06ef50968,Make variables defined using `%as%` operator in `with()` available after execution of the with block (same behavior as Python).,1,288,FALSE,NA
reticulate,a23d6360bd1c2bcb2bd2f1a26f6421df,"Check for presence of ""**module**"" property before reading in `as_r_class()`",1,289,FALSE,NA
reticulate,7c45e72c8b5d07fbdec6638c20175e92,Only update pip in `virtualenv_install()` when version is \< 8.1,1,290,FALSE,NA
reticulate,68f1f6ec4e0c0f58cd61ffa04b94b8d7,Support converting Python `OrderedDict` to R,1,291,FALSE,NA
reticulate,44f3965f3fb296cfe5c51ac54e4c534b,Support for iterating all types of Python iterable,1,292,FALSE,NA
reticulate,b9e60a6178c839611ab5d72ec5056914,Add `conda_python()` and `virtualenv_python()` functions for finding the python binary associated with an environment.,1,293,FALSE,NA
reticulate,836938113e9c56ebd865b72fa38cdf66,Detect python 3 in environments where there is no python 2 (e.g. Ubuntu 18.04),1,294,FALSE,NA
reticulate,809acfdb61d4b0b2be07fafe1b1e167f,Always call r_to_py S3 method when converting objects from Python to R,1,295,FALSE,NA
reticulate,f487b66a382d1cae76185d86d84ac14a,Handle NULL module name when determining R class for Python objects,1,296,FALSE,NA
reticulate,2293492b09f0fcba86d601bb29216a0c,Convert RAW vectors to Python bytearray; Convert Python bytearray to RAW,1,297,FALSE,NA
reticulate,ff401f7d9d7801a31b89ac97a3e197f3,Use importlib for detecting modules (rather than imp) for Python \>= 3.4,1,298,FALSE,NA
reticulate,0e29e58e9c2ebc11636685236e30a604,Close text connection used for reading Python configuration probe,1,299,FALSE,NA
reticulate,a358f159b3ead8cc0dac1aa214ac5b47,"`source_python()` now flushes stdout and stderr after running the associated Python script, to ensure that `print()`-ed output is output to the console. (#284)",1,300,FALSE,NA
reticulate,051292c30513c0758e46b5fdbdd3b347,Fixed an issue where logical R matrices would not be converted correctly to their NumPy counterpart. (#280),1,301,FALSE,NA
reticulate,7cbfbf02ad1cf0b3e29355edc57e6d05,Fixed an issue where Python chunks containing multiple statements on the same line would be evaluated and printed multiple times.,1,302,FALSE,NA
reticulate,0fee6613302fb647d872ba570716918f,"Added `py_get_item()`, `py_set_item()`, and `py_del_item()` as lower-level APIs for directly accessing the items of e.g. a Python dictionary or a Pandas DataFrame.",1,303,FALSE,NA
reticulate,c322211c020f2efdc0077f1cf91943fc,Fix issue with Pandas column names that clash with built in methods (e.g. 'pop'),1,304,FALSE,NA
reticulate,0f9cf3327eb7fd1a30edd1aaa2eb3f62,Improve default `str()` output for Python objects (print `__dict__` if available),1,305,FALSE,NA
reticulate,9c39572150cc6b5401f218a24c655a6a,Improved filtering of non-numeric characters in Python / NumPy versions.,1,306,FALSE,NA
reticulate,ef8e834421c8d0e6b0a92e393bce40df,Added `py_func()` to wrap an R function in a Python function with the same signature as that of the original R function.,1,307,FALSE,NA
reticulate,7a08aa280adad181a607b2a342c63f23,Added support for conversion between `Matrix::dgCMatrix` objects in R and `Scipy` CSC matrices in Python.,1,308,FALSE,NA
reticulate,944d0c200de1a506866f601bd33356e9,`source_python()` can now source a Python script from a URL into R environments.,1,309,FALSE,NA
reticulate,8d976b2e2508fca71e363eb06937efb1,Always run `source_python()` in the main Python module.,1,310,FALSE,NA
reticulate,4ed46b3b8646790670523c4ba557a2e7,`py_install()` function for installing Python packages into virtualenvs and conda envs,1,311,FALSE,NA
reticulate,e6aae10753e547eca66fb91fcf4623b5,Automatically create conda environment for `conda_install()`,1,312,FALSE,NA
reticulate,288035598dca3c903903e74f4b0c995e,Removed `delay_load` parameter from `import_from_path()`,1,313,FALSE,NA
reticulate,da02f8a8eaffb15f6749674e39c49069,`repl_python()` function implementing a lightweight Python REPL in R.,1,314,FALSE,NA
reticulate,a251fd576c742d1ada0bf3d57f31c75b,"Support for converting Pandas objects (`Index`, `Series`, `DataFrame`)",1,315,FALSE,NA
reticulate,4bd5bb5168bc0904e11d8a1a50ea877e,Support for converting Python `datetime` objects.,1,316,FALSE,NA
reticulate,92a304abf55cd907a158811e7c925fd9,`py_dict()` function to enable creation of dictionaries based on lists of keys and values.,1,317,FALSE,NA
reticulate,5245216fcfcb5dc30b192446801a39ea,Provide default base directory (e.g. '\~/.virtualenvs') for environments specified by name in `use_virtualenv()`.,1,318,FALSE,NA
reticulate,1dc76eab01991bf233f1defe0865e61c,"Fail when environment not found with `use_condaenv(..., required = TRUE)`",1,319,FALSE,NA
reticulate,ab348c7043c170554539d2ff5cfa6ac3,Ensure that `use_*` python version is satisfied when using `eng_python()`,1,320,FALSE,NA
reticulate,ef8d33a0ba7b24dff6785bd1d53cc0e5,Forward `required` argument from `use_virtualenv()` and `use_condaenv()`,1,321,FALSE,NA
reticulate,2337559f13288325b281a25934df3d52,Fix leak which occurred when assigning R objects into Python containers,1,322,FALSE,NA
reticulate,e87ea1b5e42146e97ee082c074613867,Add support for Conda Forge (enabled by default) to `conda_install()`,1,323,FALSE,NA
reticulate,4333ed6eb34bdfdee01ee6730d14e488,Added functions for managing Python virtual environments (virtualenv),1,324,FALSE,NA
reticulate,05fddc475e1cd26e0e253b531115e6bf,Remove implicit documentation extraction for Python classes,1,325,FALSE,NA
reticulate,d88466cea1f4fb5828fd3f5837bf126b,Add `Library\bin` to PATH on Windows to ensure Anaconda can find MKL,1,326,FALSE,NA
reticulate,106a033e8a00563f3175f5ddb575eda2,New `source_python()` function for sourcing Python scripts into R environments.,1,327,FALSE,NA
reticulate,2bdd56197ed00c6c2505a8cb1c0158d4,Support for `RETICULATE_DUMP_STACK_TRACE` environment variable which can be set to the number of milliseconds in which to output into stderr the call stacks from all running threads.,1,328,FALSE,NA
reticulate,c78c3a843a38a7f70610d33245d173fd,Provide hook to change target module when delay loading,1,329,FALSE,NA
reticulate,d7345fa97a6f0bad64081ebaade407c8,Scan for conda environments in system-level installations,1,330,FALSE,NA
reticulate,39996714a1137e483d75f698e39aab23,Support for miniconda environments,1,331,FALSE,NA
reticulate,cb4963bf40d4cc96952ef173e1e5f8a1,"Implement `eval`, `echo`, and `include` knitr chunk options for Python engine",1,332,FALSE,NA
reticulate,6d1a1e004fda677c62a433ba21d53f0d,Bugfix: ensure single-line Python chunks that produce no output still have source code emitted.,1,333,FALSE,NA
reticulate,5f6d24074bead996ba297d3cdfac31b0,"Use existing instance of Python when reticulate is loaded within an embedded Python environment (e.g. rpy2, rice, etc.)",1,334,FALSE,NA
reticulate,a8b63685531c12fc8cce3c727532f096,Force use of Python specified in PYTHON_SESSION_INITIALIZED (defined by rpy2),1,335,FALSE,NA
reticulate,5d3ec3ab7383d3c7aa49801e13ee2ebe,Define R_SESSION_INITIALIZED (used by rpy2),1,336,FALSE,NA
reticulate,9e45a55fa71521aec35370a527a9d0d2,Force use of Python when `required = TRUE` in `use_python` functions,1,337,FALSE,NA
reticulate,5b2fb6263caec72ce300639e679524fa,Force use of Python specified by RETICULATE_PYTHON,1,338,FALSE,NA
reticulate,03fa8e54a898ccc505bf803abe9f39b6,`dict`: Don't scan parent frame for Python objects if a single unnamed list is passed.,1,339,FALSE,NA
reticulate,ef819c76300f00d18cefa69b34f6f0ea,Wait as long as required for scheduling generator calls on the main thread,1,340,FALSE,NA
reticulate,3cbb842c9dfaf1daf537fa62b74559db,Refine stripping of object addresses from output of `py_str()` method,1,341,FALSE,NA
reticulate,bc59766bb37459b839160e09a4422708,Added `py_id()` function to get globally unique ids for Python objects,1,342,FALSE,NA
reticulate,72e9dc83e3c7c269da6ca252abc9e1c9,"Added `py_len()` function and S3 `length()` method for Python lists (already had `length()` methods for dicts, tuples, and NumPy arrays).",1,343,FALSE,NA
reticulate,9ca87ae714b50a94067bf89fe6aca68e,Exported `py` object (reference to Python main module),1,344,FALSE,NA
reticulate,4253c9e4c4e519895450cb0bd3745bf2,Added `eng_python()` (knitr engine for Python chunks),1,345,FALSE,NA
reticulate,79cc71d1d7a8bd0a7551e99557dacf43,Improved compatibility with strings containing high unicode characters when running under Python 2,1,346,FALSE,NA
reticulate,0ce2634bdf6f2eda6cb3a34e8486e00f,Remove `dim` methods for NumPy arrays (semantics of NumPy reshaping are different from R reshaping),1,347,FALSE,NA
reticulate,bade34c2df3258752cd4480ee5b21d66,Added `array_reshape` function for reshaping R arrays using NumPy (row-major) semantics.,1,348,FALSE,NA
reticulate,9d38ec4ee3573fecba277dcf9b406409,Provide mechanism for custom R wrapper objects for Python objects,1,349,FALSE,NA
reticulate,43c4ac86e306ca05bfefe64b31516fbc,Added interface to pickle (`py_save_object()` and `py_load_object()`),1,350,FALSE,NA
reticulate,f4eb08d55451d8d0b92b12cfb0b52046,Catch and print errors which occur in generator functions,1,351,FALSE,NA
reticulate,42b9391192b830c178dd1764d76b1e23,Write using Rprintf when providing custom Python output streams (enables correct handling of terminal control characters),1,352,FALSE,NA
reticulate,c068e000b91343bb34c3e0270af9c56d,Implement `isatty` when providing custom Python output streams,1,353,FALSE,NA
reticulate,9ef69c459129f7d911f3c64ec80c00c1,"Add `np_array` function for creating NumPy arrays and converting the data type, dimensions, and in-memory ordering of existing NumPy arrays.",1,354,FALSE,NA
reticulate,806c734053a4474cd7c49daa7cfb4288,Add `dim` and `length` functions for NumPy arrays,1,355,FALSE,NA
reticulate,6481c721d4844803c687db78b14651bc,Add `py_set_seed` function for setting Python and NumPy random seeds.,1,356,FALSE,NA
reticulate,f73fc4e2475de759c29bde78999baaea,Search in additional locations for Anaconda on Linux/Mac,1,357,FALSE,NA
reticulate,446704c2e3e7a55b65a8292e3834b90c,Improved support for UTF-8 conversions (always use UTF-8 when converting from Python to R),1,358,FALSE,NA
reticulate,6c66cc8a47fc0146bf442df84f9261d6,"Ignore private (""\_"" prefixed) attributes of dictionaries for .DollarNames",1,359,FALSE,NA
reticulate,538c287f4b206637adf39dbae841c880,"Provide ""\`function\`"" rather than ""function"" in completions.",1,360,FALSE,NA
reticulate,69535d8de805770123faf306e56502d2,Fail gracefully if call to conda in `conda_list` results in an error,1,361,FALSE,NA
reticulate,4b891d96b043df44cdf8bcccb2b347cb,Add `pip_ignore_installed` option to `conda_install` function.,1,362,FALSE,NA
reticulate,6ec3931a6ad28ac5405eba7e28bdbd45,Allow `dict()` function to accept keys with mixed alpha/numeric characters,1,363,FALSE,NA
reticulate,a56a956dcfc8fedb47f7a73bef1f1e1b,Use `conda_list()` to discover conda environments on Windows (slower but much more reliable than scanning the filesystem),1,364,FALSE,NA
reticulate,c9a4a50d5ad6da797b3c29251faff70f,Add interface for registering F1 help handlers for Python modules,1,365,FALSE,NA
reticulate,4bcea40fa3b7909a4dddf1a726358870,Provide virtual/conda env hint mechanism for delay loaded imports,1,366,FALSE,NA
reticulate,3a79d21bf5a440c12887369aba38aa4c,Search WORKON_HOME (used by virtualenv_wrapper) for Python environments,1,367,FALSE,NA
reticulate,c856c6682f046e9995c90707ba994964,Support `priority` field for delay loaded modules.,1,368,FALSE,NA
reticulate,2edb45796ba7e7ef0a27be2a0f545aeb,Use json output from conda_list (handle spaces in path of conda env),1,369,FALSE,NA
reticulate,efaf80356119195345e8151824aee243,Look for callable before iterable when converting Python objects to R,1,370,FALSE,NA
reticulate,9a7c69031c6f83899b6ae2f27ab267d1,Correct propagation of errors in R functions called from Python,1,371,FALSE,NA
reticulate,56bfc55801d8b1f0ba5aea86f34efd8a,Support for generators (creating Python iterators from R functions),1,372,FALSE,NA
reticulate,1f54685359b5d3a0203c0a084ff6d56e,Changed default `completed` value for `iter_next()` to `NULL` (was `NA`),1,373,FALSE,NA
reticulate,bcef0d7ea341e574b32baf6530f431df,Support for converting 16-bit floats (NPY_HALF) to R,1,374,FALSE,NA
reticulate,bbe989c95a21e08c870a3c51d6a77c43,Don't throw error when probing Python \<= 2.6,1,375,FALSE,NA
reticulate,8d2f29a1675b5e6853c6e45869030688,"Copy Python dictionary before converting to R named list (fixes issue with dictionaries that are mutated during iteration, e.g. sys.modules)",1,376,FALSE,NA
reticulate,4c8c1192534fb36c4abbc74a846d18b1,Ensure that existing warning filters aren't reset by py_suppress_warnings,1,377,FALSE,NA
reticulate,ee292cea36f40a8bfbecb9f86e965cd9,Detect older versions of Anaconda during registry scanning.,1,378,FALSE,NA
reticulate,3c027bc61e3a2c3d053f44313538882a,Don't probe python versions on windows when no executable is found,1,379,FALSE,NA
reticulate,60cf086b119ee529f8f5cf7d3fb77b7b,Poll for interrupts every 500ms rather than 100ms,1,380,FALSE,NA
reticulate,a7451a970b8ef0385456a9aaa2e0910b,Provide sys.stdout and sys.stderr when they are None (e.g. in R GUI),1,381,FALSE,NA
reticulate,c95ae1c7ba44f7821ca1a0f66371cd4d,Add Scripts directory to PATH on Windows,1,382,FALSE,NA
reticulate,39e87224373dae74b4509667f5b8d577,Add iter_next function for element-by-element access to iterators,1,383,FALSE,NA
reticulate,e1c780c6c773fc81eed6db84bb252065,Eliminate special print method for iterators/generators,1,384,FALSE,NA
reticulate,f22949d3aba7205a4df1079f60a72b2e,Added `py_help()` function for printing documentation on Python objects,1,385,FALSE,NA
reticulate,ce3a10862011b60263e140696e46e85f,Added `conda_version()` function.,1,386,FALSE,NA
reticulate,cc964c29cb9c1e7dfe0dc7e1acf26e85,Search `dict()` parent frames for symbols; only use symbols which inherit from python.builtin.object as keys.,1,387,FALSE,NA
reticulate,d07aaf8eaac60039d4e4205816f23a4a,Add `import_from_path()` function for importing Python modules from the filesystem.,1,388,FALSE,NA
reticulate,cd330c9d0ff024786a176db4c02373e1,Add `py_discover_config()` function to determine which versions of Python will be discovered and which one will be used by reticulate.,1,389,FALSE,NA
reticulate,895048312ad45b1a4bf87b269ad104ce,Add `py_function_docs()` amd `py_function_wrapper()` utility functions for scaffolding R wrappers for Python functions.,1,390,FALSE,NA
reticulate,e20c9751e034eb287743e0dadd425b41,Add `py_last_error()` function for retrieving last Python error.,1,391,FALSE,NA
reticulate,b2ef3ff9c59621112f6ccb42f43abe2a,Convert 0-dimension NumPy arrays (scalars) to single element R vectors,1,392,FALSE,NA
reticulate,a034c8f86ca798c25d66f1f8150f7729,"Convert ""callable"" Python objects to R functions",1,393,FALSE,NA
reticulate,6d061fae8c05c908202885b81c070cd4,Automatically add Python bin directory to system PATH for consistent version usage in reticulate and calls to system,1,394,FALSE,NA
reticulate,b5d49228812eca6add45aec7f0841044,Added `length()` method for tuple objects,1,395,FALSE,NA
reticulate,0de6bf9f800b383348c0ecb0b1d673b8,Enable specification of `__name__` for R functions converted to Python functions.,1,396,FALSE,NA
reticulate,ef17272140e66cf82a032c37ffc9a16a,Give priority to the first registered delay load module (previously the last registered module was given priority),1,397,FALSE,NA
reticulate,0919a91fa3b138e1b50859bb87dac7cd,Add additional safety checks to detect use of NULL xptr objects (i.e. objects from a previous session). This should mean that S3 methods no longer need to check whether they are handling an xptr.,1,398,FALSE,NA
reticulate,a02ca934c82606f7704185d40512a647,Added `py_eval()` function for evaluating simple Python statements.,1,399,FALSE,NA
reticulate,9ba6e0df6911dd38c07a08b16d5c650b,Add `local` option to `py_run_string()` and `py_run_file()`. Modify behavior to return local execution dictionary (rather than a reference to the main module).,1,400,FALSE,NA
reticulate,ca18415f91c4d741ebdc5df73279541f,Use `PyImport_Import` rather than `PyImport_ImportModule` for `import()`,1,401,FALSE,NA
reticulate,575e56b79128ceccacee980dfd272286,Added ability to customize mapping of Python classes to R classes via the `as` argument to `import()` and the `register_class_filter()` function,1,402,FALSE,NA
reticulate,f68825dafcadd2e2f8a28b6c2a98567f,Added separate `on_load` and `on_error` functions for `delay_load`,1,403,FALSE,NA
reticulate,d06890187db2dc5a8f77ff0044861d57,Scan customary root directories for virtualenv installations,1,404,FALSE,NA
reticulate,67dd27c227ed5ff8d22963c38ba825ab,Allow calling `__getitem__` via `[[` operator (zero-based to match Python style indexing),1,405,FALSE,NA
reticulate,c3e08f2b8e2a2fd9d2abcd9f902662bb,Added `conda_*` family of functions for using conda utilities from within R.,1,406,FALSE,NA
reticulate,2f88cd072e87544a4ff5ebbb58647dce,"Implement comparison operators (e.g. `==`, `>=`, etc.) for Python objects",1,407,FALSE,NA
reticulate,5155dc29c70828c283887d04a12f973b,Implement `names()` generic for Python objects,1,408,FALSE,NA
reticulate,a56cf49f9d6fbc894cf65da110fa0f8c,Improve performance for marshalling of large Python dictionaries and iterators that return large numbers of items.,1,409,FALSE,NA
reticulate,f1d3bc40e9098bb163e921b2605809f9,"Implement `str` methods for Python List, Dict, and Tuple (to prevent printing of very large collections via default `str` method)",1,410,FALSE,NA
reticulate,97fe0d83ec7c979b987d16b0782a9ad1,Use `grepl()` rather than `endsWith()` for compatibility with R \<= 3.2,1,411,FALSE,NA
reticulate,c8cd9abc1cce829989aeb88fa466a129,Use `inspect.getmro` rather than `__bases__` for enumerating the base classes of Python objects.,1,412,FALSE,NA
reticulate,c2641028a11ac55b70518293588875b6,Fix `PROTECT`/`UNPROTECT` issue detected by CRAN,1,413,FALSE,NA
reticulate,5c0a3000d091b1fe6f1307821bcf6b3a,Correct conversion of strings with Unicode characters on Windows,1,414,FALSE,NA
reticulate,107a30dc2dee5e822ba3548a7564c3db,Fix incompatibility with system-wide Python installations on Windows,1,415,FALSE,NA
reticulate,cdc883dad365b854d47738d8406de4a1,Fix issue with Python dictionary keys that shared names with primitive R functions (don't check environment inheritance chain when looking for dictionary key objects by name).,1,416,FALSE,NA
reticulate,16f0df7e4de78ee781fd823b3b8e5225,Propagate `convert` parameter for modules with `delay_load`,1,417,FALSE,NA
reticulate,c0d3cf65acef47fd8f1d35c613fabc0e,Initial CRAN release,1,418,FALSE,NA
rmarkdown,9928150c7cf9c576c5ef573ca00a97e1,**rmarkdown** now requires **knitr** \>= 1.43.,1,1,FALSE,NA
rmarkdown,6ff688c94d4affb26ffe6d06ea1488d7,"Get rid of the superfluous warning in `find_pandoc()` (thanks, @​jszhao, #2527).",1,2,FALSE,NA
rmarkdown,7814792534698f3cf15fff060f16217b,"Removed the **stringr** dependency since it is used only once in the package and the equivalent base R code is simple enough (thanks, @​etiennebacher, #2530).",1,3,FALSE,NA
rmarkdown,3c1aa1446bc01ecd5434a4a11f801eb5,"For the output format option `fig_crop: auto`, it will now use the same logic as in **knitr** to decide if cropping is possible (yihui/knitr#2246).",1,4,FALSE,NA
rmarkdown,3373b19bb113cf613a1802bc195a6552,"Avoid corrupting input files by accident (thanks, @​J-Moravec, #2534).",1,5,FALSE,NA
rmarkdown,16339daf046b1e135d69e42b7ce2126c,"Fixed a bug that filenames beginning with `-` cause incorrect invocation of Pandoc (thanks, @​mbaynton, #2503).",1,6,FALSE,NA
rmarkdown,ba974bcd467d26a1f6ce1634863c9b4a,"Documented how to merge `output_format_dependency()` to the output format (thanks, @​atusy, #2508).",1,7,FALSE,NA
rmarkdown,753fb5f8fc7897075095888517b28c24,"`ioslides_presentation()` now correctly works with new **shiny** 1.7.5 (thanks, @​nicolasgaraycoa, #2514, @​gadenbuie, #2516).",1,8,FALSE,NA
rmarkdown,75da4c2017878a3fb534f233ca9b8063,"Added a new argument `metadata` to the `pre_knit` function in `output_format()` so that users will have access to the YAML metadata of the input document before knitting it (#2485). Please note that if you define `pre_knit` for a custom output format, you are strongly recommended to leave a `...` argument in `pre_knit`, so we (**rmarkdown** package authors) are free to add more arguments to `pre_knit` without breaking your code. If your `pre_knit` function does not have the `...` argument, you will get a warning.",1,9,FALSE,NA
rmarkdown,778e368ee47df13dc2d85be79f0899a6,"Fixed `file_scope` being lost when extending output formats that considers the `file_scope` using `output_format()`. Merge behavior is to apply overlay `file_scope` function onto the result of `base_format`'s `file_scope` function. This implies that `file_scope` gains second argument which receives the returned values of the base `file_scope` (thanks, @​atusy, #2488).",1,10,FALSE,NA
rmarkdown,988ec547cb04b60217d7202f9b545174,"Added `output_format_dependency()` which allows extending output format from within chunks (thanks, @​atusy, #2462)",1,11,FALSE,NA
rmarkdown,9833d187ddfd3cc9c143ccaaaba8cfab,"Fix an issue with shiny prerendered document where dependencies context were written twice leasing to parsing error (thanks, @​gadenbuie, rstudio/learn#597, #2500).",1,12,FALSE,NA
rmarkdown,69aa61d628791a110a883a7650ae343d,"`find_external_resources()` works with formats defining there own `theme` argument, like `cleanrmd::html_document_clean()`, not related to **bslib** supports (thanks, @​gadenbuie, #2493, r-lib/pkgdown#2319).",1,13,FALSE,NA
rmarkdown,9e0cbf877a6c09b5c06bc61f01bd9460,Fixed version number comparison problems as requested by CRAN.,1,14,FALSE,NA
rmarkdown,477397e550cf1ff335dacf7810423f7a,"Using `css` with `.scss` and `.sass` file, or with a bslib theme, now works as expected with a shiny runtime (thanks, @​cpsievert, #2443, #2447).",1,15,FALSE,NA
rmarkdown,6a1fc36dc4749b2dab3d8fc6c9991ddf,Add a `pandoc_metadata_file_arg()` function to match Pandoc's CLI flag `--metadata-file`.,1,16,FALSE,NA
rmarkdown,ddbd2cadfad516ddaee691d3173e573c,"Mentions that **webshot** or **webshot2** is required to take screenshot of HTML widget. When not installed, an error message mentioning `always_allow_html: true` solution will be shown, but setting this is not the solution (quarto-dev/quarto-cli#4225).",1,17,FALSE,NA
rmarkdown,95dac4cee75c9618a98f45c5dfba3ec9,"`html_dependency_jqueryui()` updated to 1.13.2 from version bundled in shiny (thanks, @​daschnerm, #2477).",1,18,FALSE,NA
rmarkdown,e80997fe61ff0af62416fd4a3496886f,"Fix an issue with YAML header ending with a commented line containing incomplete yaml (thanks, @​keithnewman, #2483).",1,19,FALSE,NA
rmarkdown,066d78e1796b9494a966e530a0bee427,"When code folding is enabled in `html_document()`, the text on the button to show the content has been changed from ""Code"" to ""Show"", because the content to show is not necessarily code, e.g., yihui/knitr#2227.",1,20,FALSE,NA
rmarkdown,9bb89e20323c7cc5eaa95d638775302e,"Now HTML output formats use the Font Awesome HTML dependency from the **fontawesome** package instead of shipping an outdated version of Font Awesome in **rmarkdown** (thanks, @​rich-iannone, #2451).",1,21,FALSE,NA
rmarkdown,dea577227d09e15e9e2cd0cea4693dea,"Fixed a bug caused by a change in the `is_blank()` function in **xfun** 0.38 (thanks, @​andreahgsin, #2469).",1,22,FALSE,NA
rmarkdown,0c2aac8a8f50d47f52d2c1e2f0bb6c34,The defunct `tufte_handout()` has been removed from **rmarkdown**. Please use `tufte::tufte_handout()` instead.,1,23,FALSE,NA
rmarkdown,684ba0cae39ef0b1175c6e02535cab0d,"If an input path to `rmarkdown::render()` is a symbolic link, it is no longer resolved to its real path (thanks, @​SamDM @​jmw86069, #1508).",1,24,FALSE,NA
rmarkdown,a8d526b73f81845ef0a6c69933adba38,"Make sure to avoid creating invalid paths when copying resources (thanks, @​mnazarov, #2429).",1,25,FALSE,NA
rmarkdown,55bec50288c29d2198d3098dd022bdd0,"Make sure `logo` is properly embedded in `ioslides_presentation()` when `self_contained = TRUE` (thanks, @​mnazarov, #2428).",1,26,FALSE,NA
rmarkdown,a621f23e25c08ff0c10445e34eab278f,No longer use `xfun::isFALSE()` internally.,1,27,FALSE,NA
rmarkdown,5065c53ea5fb52fc0f3dffd3dd1ed334,"`rmarkdown::render()` argument `output_file` is now used for all output formats, if there is only one name for multiple output formats (thanks, @​MaelAstruc, #2421).",1,28,FALSE,NA
rmarkdown,0c5b89e5ecec7889d5f4033da87349b7,"Custom output formats can provide a custom function to convert Markdown input to the desired output format now. To do so, define the output format via `output_format(pandoc = pandoc_options(convert_fun = function(...) {}))`. The default converting function is `pandoc_convert()` in this package. See the help page `?pandoc_options` for more details.",1,29,FALSE,NA
rmarkdown,9cddacb6e531376beda560defb983c1a,"`rmarkdown::render_site()` will now also look for `index.rmd` in addition to `index.Rmd` for custom site generator in YAML with `site:` (thanks, @​kamalsacranie, #2409).",1,30,FALSE,NA
rmarkdown,dea78cc26ca12bd35df54b969ccea198,"Icons in tabset dropdown are now correctly shown, including when `self_contained: false` (thanks, @​cpsievert, #1697).",1,31,FALSE,NA
rmarkdown,beada590fc39271e65bdf7bb679d8170,"Pandoc 2.19 has deprecated the argument `--self-contained`. If you have installed Pandoc 2.19+, **rmarkdown** will use `--embed-resources --standalone` as recommended by Pandoc for output formats that use the option `self_contained = TRUE` (#2382).",1,32,FALSE,NA
rmarkdown,b6630f69d69679415fdd9b7e3623901c,"`pandoc_version()` returns a version number of the form `X.Y.Z.YYYY.MM.DD` for the nightly build of Pandoc now, where `YYYY.MM.DD` is its build date. Previously it would return `X.Y.Z.9999` to indicate the nightly version.",1,33,FALSE,NA
rmarkdown,0cf87191986ce7f2e6b1b176e44b3c2d,"Fix navbar issue with website when using Boostrap 5 with **bslib** (thanks, @​guasi, #2379, @​cpsievert, #2384).",1,34,FALSE,NA
rmarkdown,1e7e73587fb6ebc2bb26f39277604b8c,"The `tufte_handout()` function inside **rmarkdown** is defunct now. Its codebase was moved to the **tufte** package in 2016, and this function was marked as deprecated in 2021. Please use `tufte::tufte_handout()` instead of `rmarkdown::tufte_handout()`. The latter will be removed eventually from this package.",1,35,FALSE,NA
rmarkdown,61ee3324f2e78e5b8c51fb959be28fdb,"`github_document()` gains `math_method = ""default""` and defaults to it. No special processing will be done to inline maths in `$` and block maths in `$$` as now Github supports it and will render using Mathjax (thanks, @​kylebutts, #2361).",1,36,FALSE,NA
rmarkdown,0acdf265957d271e0c0d649791bf3188,Improved highlighting theme `arrow` regarding accessibility.,1,37,FALSE,NA
rmarkdown,7f89e8d2e95059488835dfdb907599b3,"Fixed an issue with `site_generator()` detection of a site project (thanks, @​bhattmaulik, #2344).",1,38,FALSE,NA
rmarkdown,7db9b5c96fc202934e6f44117ca3d389,"Fixed an issue with Shiny prerendered documents and Pandoc not correctly rendering last Markdown paragraph in HTML (thanks, @​gadenbuie, #2336).",1,39,FALSE,NA
rmarkdown,29e04fb19769ae9ad1c3397906eb21ea,"Fixed a bug that `site_generator()` fails to detect the root dir of the site and causes infinite recursion (thanks, @​fisher-j, #2339).",1,40,FALSE,NA
rmarkdown,fd3d605eb31c1920114d1c9d4bd33424,"`html_vignette()` gains `code_folding` argument (thanks, @​atusy, #2340).",1,41,FALSE,NA
rmarkdown,32bc7fb6c5b86cea1dd8c926d35bf17d,"`html_document()` can opt-out `code_folding = ""show""` or `""hide""` for individual code blocks by adding the `fold-none` class to the code blocks (thanks, @​atusy, #2348).",1,42,FALSE,NA
rmarkdown,7f1f0831163af98148847d7dd6b3360a,"When using a development version of Pandoc, a `.9999` suffix is appended to version number so that `pandoc_available()` can correctly compared version with last release.",1,43,FALSE,NA
rmarkdown,ddb2fbe912287bf1bb217cdad44a6c4e,Fix an issue with older R version and vignette building (#2324).,1,44,FALSE,NA
rmarkdown,ed61f321bc653977e52a18b79ad586e7,Fix an issue with older R version and `preserve_yaml = TRUE` in `md_document()` (#2325).,1,45,FALSE,NA
rmarkdown,9b0cd965ce0a7ba2167625d3257a2b4b,"Long title in `ioslides_presentation` failed to work with Pandoc 2.17.x (thanks, @​Am386DX-40, #2327).",1,46,FALSE,NA
rmarkdown,3b1539f5e55155cf16ef4502dbff9dae,"`html_document()` and `html_document_base()` gains the `math_method` argument to support all the math rendering engines from Pandoc: ""mathjax"", ""katex"", ""mathml"", ""webtex"", and ""gladtex"". For backward compatibility, the `mathjax` argument still works and will take precedence over `math_method`, but we recommend using the new `math_method` argument instead of the `mathjax` argument, and the latter could be deprecated in the future. You can specify a math engine via `math_method` as an engine name, e.g.,",1,47,FALSE,NA
rmarkdown,3b1539f5e55155cf16ef4502dbff9dae,"```
``` yaml
output:
  html_document:
    math_method: katex
```",1,48,TRUE,NA
rmarkdown,3b1539f5e55155cf16ef4502dbff9dae,"or provide both a name and a URL (for `mathjax`, `katex` and `webtex`):",1,48,FALSE,NA
rmarkdown,3b1539f5e55155cf16ef4502dbff9dae,"```
``` yaml
output:
  html_document:
    math_method: 
      engine: mathjax
      url: https://cdn.jsdelivr.net/npm/mathjax@​3/es5/tex-chtml-full.js
```",1,49,TRUE,NA
rmarkdown,3b1539f5e55155cf16ef4502dbff9dae,"For `math_method = ""katex""`, KaTeX CDN will be inserted in version 0.15.2 by default (from jsdelivr). A custom URL toward another CDN can be passed as `url`. For `math_method = ""webtex""`, it will default to inset SVG using `https://latex.codecogs.com/svg.image?`. Use `https://latex.codecogs.com/png.image?` for PNG. See https://latex.codecogs.com for supported options (dpi, background, ...). Most HTML output format using `html_document()` or `html_document_base()` as based format should benefit from this new feature. See `?rmarkdown::html_document()` for details (thanks, @​atusy, #1940).",1,49,FALSE,NA
rmarkdown,6e5f7dc2d45f3541e3aa03c7f88573d5,"`github_document()` also gains the `math_method` argument set to `""webtex""` by default so that LaTeX equations can be rendered in the Github Markdown document as images. Previously, LaTeX equations were not rendered. Set `math_method = NULL` to deactivate.",1,50,FALSE,NA
rmarkdown,b75422537d4a5940c349da5e48cc21d6,"Added support for **katex** R package as a math engine with `math_method = ""r-katex""` in HTML documents. This method offers server-side rendering of all the equations, which means no JS processing is needed in the browser as with usual KaTeX or MathJaX methods. (thanks, @​jeroen, #2304).",1,51,FALSE,NA
rmarkdown,321d7e5c697ee99a63b7736fa6338dc1,`anchor_sections` can now be easily customized using `style` or `depth` element for `anchor_sections`. For example:,1,52,FALSE,NA
rmarkdown,321d7e5c697ee99a63b7736fa6338dc1,"```
``` yaml
output:
  html_document:
    anchor_sections:
      style: symbol # use symbol style (""hash"", ""symbol"", ""icon"")
      depth: 2 # max depth to apply anchor on (default to max which is 6)
```",1,53,TRUE,NA
rmarkdown,321d7e5c697ee99a63b7736fa6338dc1,Customizing using a CSS rule is still possible. Detailed explanation and examples have been added to the help page `?html_document`.,1,53,FALSE,NA
rmarkdown,6387f5f1b7511753be64852368525b8e,Improved the highlighting mechanism in formats that supports `highlight` argument:,1,54,FALSE,NA
rmarkdown,6387f5f1b7511753be64852368525b8e,• It is now possible to pass a custom theme file `.theme` in `highlight` argument for customizing the syntax highlighting style used by Pandoc.,2,55,FALSE,Improved the highlighting mechanism in formats that supports `highlight` argument:
rmarkdown,6387f5f1b7511753be64852368525b8e,"• In addition to Pandoc's own supported themes, two more themes are bundled in the package: `highlight: arrow` a theme optimized for accessibility and color contrast (thanks to @​apreshill), and `highlight: rstudio` to mimic the RStudio editor theme.",2,56,FALSE,Improved the highlighting mechanism in formats that supports `highlight` argument:
rmarkdown,6387f5f1b7511753be64852368525b8e,"• For HTML output only, added optional downlit support in `html_document()` for R syntax highlighting and autolinking. Use `highlight_downlit = TRUE` to activate it (same argument as in **distill**). This features require the **downlit** package.",2,57,FALSE,Improved the highlighting mechanism in formats that supports `highlight` argument:
rmarkdown,3fc53afa4cc365957c1b82f650fb2e9b,Templates for `html_document()` and `ioslides_presentation()` gained a new CSS rule to display single line `<summary>` content inline (rstudio/rstudio#10589).,1,58,FALSE,NA
rmarkdown,be1c5c283a60fc009c84b09bb81f1c6d,"`md_document()` gained a new `standalone` argument, which is `FALSE` by default unless `toc = TRUE`. This allows to output authors, date and other metadata per the Pandoc's template. Due to limitation in how Pandoc is handling metadata blocks in its extensions `yaml_metadata_block`, `preserve_yaml = TRUE` now deactivate any extension to let **rmarkdown** directly handle the keeping of YAML block - this means it does not set `standalone = TRUE` by default. Meanwhile, `github_document()` gained the `preserve_yaml` argument (thanks, @​florisvdh, #2297).",1,59,FALSE,NA
rmarkdown,5c71e2b543ade61a275a43c60912b701,Added `available_templates()` to list all the templates from a specific package that can be used with `rmarkdown::draft()`.,1,60,FALSE,NA
rmarkdown,109b212ad5847fa3f75cebf55ebbcdf0,"Following support in Pandoc 2.15, `powerpoint_presentation()` gained a `incremental` argument as other slide formats. As a reminder, setting `incremental = TRUE` will make lists to display incrementally. See more in Pandoc's MANUAL.",1,61,FALSE,NA
rmarkdown,6423f449e529f90990be5dc7e55511e6,Added support for Pandoc's `dir` variable in HTML templates. This is the second Language Variables after `lang`.,1,62,FALSE,NA
rmarkdown,b53a32dc887ebd66e2ebdef830231d32,"Added a global option `rmarkdown.html_dependency.header_attr` (`TRUE` by default). It can be set to `FALSE` to opt-out the HTML dependency `html_dependency_header_attrs()` in documents based on `html_document_base()` (thanks, @​salim-b rstudio/bookdown#865, @​maelle r-lib/downlit#1538).",1,63,FALSE,NA
rmarkdown,605aefb17eee3fb784ef5ea847322256,"Rendering using `runtime: shiny_prerendered` or `runtime: shinyrmd` now natively supports custom templates. Previously since 2.8, developers had to add a special comment, `<!-- HEAD_CONTENT -->`, conditionally to `shiny-prerendered` variable. (See also NEWS from 2.8 for the previous behavior). The new behavior inserts required special comment `<!-- HEAD_CONTENT -->` as a last element of `$header-includes$`. If templates rely on the old behavior and require some contents between `$header-includes$` and `<!-- HEAD_CONTENT -->`, consider including them with `$header-includes$` (thanks, @​atusy, @​gadenbuie #2249).",1,64,FALSE,NA
rmarkdown,e0e8ae5a16199a138df3b7347466f3ca,"A shiny prerendered document with only a empty server context does not error anymore. Document will be rendered with a empty server function and `server.R` file will be ignored. To use `server.R`, no server context should be present in the Rmd document (thanks, @​jcheng5, #2305).",1,65,FALSE,NA
rmarkdown,aa27d04b0b3c6f4e904c4ca9ed7b34b3,"Fixed a regression with rendering `shiny_prerendered` document (thanks, @​aronatkins, @​gadenbuie, #2218).",1,66,FALSE,NA
rmarkdown,dac69e675e76ee053d8e356616478338,"Fixed an issue in `beamer_presentation()` where `header-includes` would be overwritten by `includes = list(in_header =)` (thanks, @​samcarter, #2294). Same fix as for `pdf_document()` (#1359).",1,67,FALSE,NA
rmarkdown,91171ed9e05ead691164f06b5cb240a2,"Fixed broken links to section headers when `number_sections = TRUE` is specified in `md_document` and `github_document` (thanks, @​atusy, #2093).",1,68,FALSE,NA
rmarkdown,2b47d36b02170ca269f4b84d82134991,`draft()` now works with `devtools::load_all()` and **testthat** when used in other packages.,1,69,FALSE,NA
rmarkdown,1bc8d64597486de039fcb6ec3f7e0bcd,Lua Filters: Added two more functions in `shared.lua` for other package to use:,1,70,FALSE,NA
rmarkdown,1bc8d64597486de039fcb6ec3f7e0bcd,• Added `type()` function backward compatible following Pandoc 2.17 changes.,2,71,FALSE,Lua Filters: Added two more functions in `shared.lua` for other package to use:
rmarkdown,1bc8d64597486de039fcb6ec3f7e0bcd,• Added `print_debug()` for easier logging during debug.,2,72,FALSE,Lua Filters: Added two more functions in `shared.lua` for other package to use:
rmarkdown,6c77c570b3dfd1077c06410ae09e3623,"Add opt-in `tabset` option to the `html_vignette`. In contrast to the similar feature from `html_document`, this feature supports navigation from ToC and URL. Any custom formats can introduce this feature by using an exported function `html_dependency_tabset()` (thanks, @​atusy, #2313).",1,73,FALSE,NA
rmarkdown,620f3d6ffe5a293e98831330527c130a,"Relative paths in parent directories in the `css` argument of `html_document()` were incorrectly normalized to absolute paths by #2095 in v2.8. Now relative paths in parent directories will no longer be converted to absolute paths (thanks, @​daijiang, yihui/xaringan#331).",1,74,FALSE,NA
rmarkdown,dc463f542f1e63e7660463f96d390f72,"It is possible to specify the version of jQuery via a global option now, e.g., `options(rmarkdown.jquery.version = 2)` (note that the default major version is `3`). This is mainly for advanced users and developers to test different versions of jQuery.",1,75,FALSE,NA
rmarkdown,1c63b4e7770c1ef5518138b67d9b55a5,"`pandoc_citeproc_convert()` now handles correctly bib file containing specific UTF-8 characters on non default UTF-8 systems like Windows (thanks, @​mitchelloharawild, #2195).",1,76,FALSE,NA
rmarkdown,fa535dbf9930b6073ea024d273e16ee5,"Shiny prerendered documents are now pre-rendered in a child environment to avoid allowing the results of static code chunks to exist in the Shiny app environment (@​gadenbuie, #2203).",1,77,FALSE,NA
rmarkdown,4b7742ebfd885e7c8791680d1ec833df,"The previously unexported function `convert_ipynb()` is exported now (thanks, @​acircleda).",1,78,FALSE,NA
rmarkdown,3197996e7313a3ed3e04e4a06d7946cc,`md_document()` will now handle correctly `preserve_yaml` value for all variants and all pandoc versions (#2190).,1,79,FALSE,NA
rmarkdown,3197996e7313a3ed3e04e4a06d7946cc,"• with `preserve_yaml = TRUE`, markdown output will keep the YAML metadata block from the Rmd file.",2,80,FALSE,`md_document()` will now handle correctly `preserve_yaml` value for all variants and all pandoc versions (#2190).
rmarkdown,3197996e7313a3ed3e04e4a06d7946cc,"• with `preserve_yaml = FALSE`, markdown output will have no YAML metadata block.",2,81,FALSE,`md_document()` will now handle correctly `preserve_yaml` value for all variants and all pandoc versions (#2190).
rmarkdown,e1830bd00f6bcb9203753f57e7514f6f,"This fixes a breaking change in Pandoc 2.13 regarding `gfm`, `commonmark` and `commonmark_x` which now supports `yaml_metadata_block` by default (#2118).",1,81,FALSE,NA
rmarkdown,885a73f4a3cc2a9090fb97c9aef6c6f9,New supported syntax for Shiny prerendered documents: you can now use `server: shiny` or `server: type: shiny`.,1,82,FALSE,NA
rmarkdown,0711d43b0898411eb7089e8943c79935,"Ability to inject additional functions into Shiny prerendered server scope using the ""server-extras"" context.",1,83,FALSE,NA
rmarkdown,33647b24280d692fdfdec3d453224099,"Fixed the syntax highlighting issue with R's pipe operator `|>` (thanks, @​edzer, rstudio/bookdown#1157).",1,84,FALSE,NA
rmarkdown,97ddee397566147405b1c077c3f5b990,"Fix a regression in version 2.8 when a url is used in `css` argument (thanks, @​vnijs, #2163).",1,85,FALSE,NA
rmarkdown,03ca2fbd92e32c85455b94ecaffab22b,"All HTML dependencies are now correctly supported, included those with only an `href` component but not `file` component in their `src` attribute. Previously, **rmarkdown** would throw the error `'path for html_dependency not provided'` when rendering documents containing HTML dependencies with `href` components (thanks, @​crazycapivara, @​matthewstrasiotto, #1805, #1948, #2151).",1,86,FALSE,NA
rmarkdown,9a651acbf035b43a98c34d6b4076c320,"Fix an error thrown with output format using a `file_scope` function (like in **bookdown**) (thanks, @​rfaelens, #2149).",1,87,FALSE,NA
rmarkdown,2b3e2349c1793b7600152ba172696845,"Fix an issue with `copy_ressource = TRUE` in `html_document_base` where very long HTML documents were truncated during post processing (thanks, @​oliviermeslin, #2145).",1,88,FALSE,NA
rmarkdown,292f970cd43528ee8cd2ad9fbc93dd4f,"When `run()`-ing a `runtime: shiny` document, an extra temp folder will be used in the output path. With the extra temp random folder in the path, predictable output file names may be used. (#2137)",1,89,FALSE,NA
rmarkdown,fd06e49aea65545188c69434c520742f,"When `run()`-ing a `runtime: shiny` document with a `{bslib}` theme, the global theme value wasn't being restored properly. (#2160)",1,90,FALSE,NA
rmarkdown,4a1449bc80c5d6e02fe144b6043b05e7,"Floating ToC in `html_document` can now hide headings with unnumbered and unlisted classes (thanks, @​atusy, #1993).",1,91,FALSE,NA
rmarkdown,142989330fee7e97a3c19e448ca4cb0d,"Fix prefix handling in R Markdown website's navbar for Fontawesome V5 and compatibility with V4. For icon only available in V5, the full prefix + name should be use, especially with new `fab` prefix (e.g. `fab fa-r-project`). If no prefix is used (e.g `fa-home` instead of `fas fa-home`), the `fa` prefix will be added for V4 compatibility as it has been deprecated in V5. We advice to use the full prefix + name for icons following Fontawesome documentation. (#1994)",1,92,FALSE,NA
rmarkdown,8fe6a758e0f516c23d388d8b8feb996b,"`rmarkdown::site_generator()` can hang session waiting for input when the `site` field is not found in the YAML frontmatter of `index.Rmd` (thanks, @​kevinushey @​mirh, #2043).",1,93,FALSE,NA
rmarkdown,7459c36ee5da719e6ee0c96ba75c8b9b,"Fix a issue with Pandoc 2.5 and `latex-div.lua` - documents can now be rendered as expected without error (thanks, @​davidwales, #2121).",1,94,FALSE,NA
rmarkdown,e41a4eb029075e8aee06726ef4ce26b7,"Fix an issue with styling and code folding button behavior when default is `code-folding: show`. The Button can now be correctly style according to state as `aria-expanded` attributes is correctly updated. Also, new classes has been added on the button to allow styling during transition: `btn-collapsing` and `btn-expanding` are respectively applied during transition Show to Hide and Hide to Show. (This follow Bootstrap behavior for the collapsible block) (thanks, @​steveharoz, #2085).",1,95,FALSE,NA
rmarkdown,3e981fd278254de31fc46a1db9b90658,"Fix an issue with `citation_package` having no effect when using `.md` file as input to `render()` with latex and PDF output formats (thanks, @​andrewheiss, #2113).",1,96,FALSE,NA
rmarkdown,fde016506bc4d467dbe4842c61627e21,A new internal option `rmarkdown.knit.ext` has been added to control the extension of the intermediary knit output during a rendering. It defaults to `md` to produce `*.knit.md`. Only useful for very advanced usage (#2098).,1,97,FALSE,NA
rmarkdown,91ecf097a613396a0d3d9fd31469359f,"`render()` won't produce any `*.utf8.md` intermediary file anymore. This was a leftover from previous versions of **rmarkdown**. Since **knitr** 1.24 and **rmarkdown** 2.0, only UTF-8 input files are allowed. (#2098).",1,98,FALSE,NA
rmarkdown,4c93e1c36016d31ab03ddbd36e7f2c46,"Fix an `Invalid cross-device link` error when `tempdir()` is used for `intermediates_dir` in `render()` (thanks, @​gorgitko, #2096).",1,99,FALSE,NA
rmarkdown,e440a96bcfc95e08839e6372e3920771,"Fix a regression in HTML default template with floating toc incorrectly placed on small size window (thanks, @​grimbough, #2071)",1,100,FALSE,NA
rmarkdown,5cb58879840c2b4b3e6102c00d8e1e08,"Provided a `runtime: shiny` fix for output formats that pass a modified `bslib::bs_theme()` object to `html_document_base()`'s `theme` (thanks, @​cpsievert, #2049).",1,101,FALSE,NA
rmarkdown,1307f51329ba528ae8df4194f478ec33,"Rendering using `runtime: shiny_prerendered` or `runtime: shinyrmd` will now produce valid HTML by not inserting anymore the full document as body in the resulting shiny apps (thanks, @​dakep, #1912). Header content usually containing html dependencies will be inserted in the HTML document at the end of the head before `</head>`, unless the rendered HTML contains `<!-- HEAD_CONTENT -->` special comment (see `htmltools::renderDocument()`). A new Pandoc variable is set in for shiny prerendered document to allow conditional insertion of such content in the the HTML template using `$if(shiny-prerendered)$`. This has been done in all HTML template in this package. Users of custom template should make this change to provide support for this runtime. See **rmarkdown** default template (`default.html`) for an example (#2064).",1,102,FALSE,NA
rmarkdown,7e723bed0b0ca3554536d4cb6648369a,"Added `tectonic` as a supported LaTeX engine for generating PDF output (thanks, @​dpryan79, #2078). You can specify to use this by adding `engine: ""tectonic""` to your output format in YAML, such as `pdf_document`.",1,103,FALSE,NA
rmarkdown,9f558375bdd1a4dec4206471042bb3b6,"When no `output_format` is provided in any way but an `output_file` is provided in `render()`, the default format will be determined based on the extension: `""pdf_document""` for `.pdf`, or `""word_document""` for `.docx`. Otherwise, it will be `""html_document""` as previous version (thanks, @​pearsonca, #1569).",1,104,FALSE,NA
rmarkdown,4b4dc845995f32c78e46313b154e956f,"Added a new global option `rmarkdown.render.message`. When set `FALSE`, `render()` will not output the message starting by `Output created:` allowing RStudio IDE to open a preview of the document. This is useful for package developers that would need to emit there own output message for there custom format. See `?render_site` for more info on this special message (#2092).",1,105,FALSE,NA
rmarkdown,29ccea52877e3483a4386fb57600dadb,"Internal changes regarding Lua filters. They have now an explicit Pandoc version minimal requirement: A filter will be skipped with a warning printed by the Lua filter if this requirement is not met. For now, all filters work for Pandoc 2.1 and above (thanks, @​atusy, #2088). There is also now a new mechanism to have a share Lua filter script loadable by other Lua files: `render()` will set the `RMARKDOWN_LUA_SHARED` env var to the path of Lua filter `shared.lua` so that other filters can access functions defined in it using `dofile(os.getenv 'RMARKDOWN_LUA_SHARED')`. This is for internal usage only to avoid duplication (thanks, @​tarleb, #2103).",1,106,FALSE,NA
rmarkdown,0b74eb0d045b2d9b844825851999a595,"`html_document_base` gains a `css` argument, to which `html_document`'s `css` argument is now passed. This also fix an issue when `.sass` or `.scss` files are used with this `css` argument when `self_contained: FALSE`. Moreover, **sass** caching mechanism can now be used when passing `.sass` or `.scss` files to the `css` argument (thanks, @​cpsievert, #2095).",1,107,FALSE,NA
rmarkdown,40893b9351f195a3d226c46b5bc41e64,"The `fig_crop` option of PDF document formats (such as `pdf_document` and `beamer_presentation`) supports the value `""auto""` now, which means `fig_crop = TRUE` when figure cropping tools `pdfcrop` and `ghostscript` are available.",1,108,FALSE,NA
rmarkdown,c7ff0a967f4ae4ec31b2d8692ee2a6be,"The default value of the `fig_crop` option of PDF output formats has been changed from `TRUE` to `""auto""` (#2077).",1,109,FALSE,NA
rmarkdown,68a9707959109cdc293e8bace69c6e9c,`rmarkdown::tufte_handout` has been deprecated and will be removed in the future from this package. It has been moved to the **tufte** package since **rmarkdown** 0.9.5 (released on 2016-02-22). Please use `tufte::tufte_handout` instead.,1,110,FALSE,NA
rmarkdown,23b2bdde00d71529e04787caebf347c2,"`html_document` (and `html_document_base`)'s `theme` parameter now understands `bslib::bs_theme()` objects/arguments, meaning that one may opt-into Bootstrap 4 and more easily create custom themes. For examples, see https://github.com/rstudio/rmarkdown/pull/1706, and for context, see https://rstudio.github.io/bslib/ (thanks, @​cpsievert, #1706).",1,111,FALSE,NA
rmarkdown,c53a1048242cce54b003ae3e8f8cc69a,"Files with `.scss`/`.sass` extension (i.e., Sass files) provided to `html_document`'s `css` parameter are now compiled to CSS using the `{sass}` package. Also, if `theme` is a `{bslib}` object, these Sass files may utilize Sass code inside the `theme` (thanks, @​cpsievert, #1706).",1,112,FALSE,NA
rmarkdown,4904d62b81d68c3ac0f9e0e3c7c8adb6,"Fix an issue with line numbering in code chunks when `.numberlines` with Pandoc's highlighting (thanks, @​aosavi, #1876).",1,113,FALSE,NA
rmarkdown,ebbd988637ff561c9bbd2290b12ebce5,"Fix an issue with shiny runtime and `global.R` (thanks, @​liaojiahui-r, rstudio/flexdashboard#298).",1,114,FALSE,NA
rmarkdown,930628114cd1bba788b17f0501d1c13f,"Accept `latex=""{options}""`, `latex=1`, or `latex=true` for Latex Divs.",1,115,FALSE,NA
rmarkdown,48e0cb97485b37fc21f92b344a0f6a6d,Add `output_format_filter` function to `default_site_generator()`. Enables custom site generators to customize or even entirely replace the output format right before rendering of each page.,1,116,FALSE,NA
rmarkdown,3b23e9e3c10b7ed10bfad604991f3261,"Automatically exclude **renv** directory for `render_site()` (thanks, @​jmbuhr, #1996)",1,117,FALSE,NA
rmarkdown,1eee27625e89e6535a26ebf391464e7a,"Do not force `options(htmltools.preserve.raw = TRUE)` when this option has been set, otherwise it is impossible for other packages to turn this option off, e.g., yihui/xaringan#293.",1,118,FALSE,NA
rmarkdown,fbd991a9fdc08d0fbf79de2c2bc7a5db,"`knitr_options_pdf()` will now throw a warning when `fig_crop = TRUE` but is disabled because required tools `pdfcrop` and/or `ghostscript` are missing (thanks, @​netique, #2016).",1,119,FALSE,NA
rmarkdown,66f27b1e4533afc23859e42c2055d644,"Eliminated the unnecessary padding in code blocks in the `html_document` output with Bootstrap 4 themes (thanks, @​atusy, #2019).",1,120,FALSE,NA
rmarkdown,f44d4975cac937ead962dd9ea425e064,`github_document()` will produce a working TOC even if some headers start with number (#2039).,1,121,FALSE,NA
rmarkdown,2650913600adcc5c837a927722f3c0c9,Fix an issue with `knit_print.data.frame`. The `...` arguments are no more passed to `print()` to avoid passing `knit_print()` arguments `options` and `encoding` to custom `print()` methods (#2047).,1,122,FALSE,NA
rmarkdown,36f0183585622c7fdaa0d17fed72313f,"Encoding is correctly handled now in `html_vignette` when checking for identical title and vignette index entry (thanks, @​py-b, #1978).",1,123,FALSE,NA
rmarkdown,626d03b4237780aa363f94d41d36d857,"`clean_site()` now default to `preview = TRUE` and will no more remove files without notice. This change will affect the ""Clean All"" button in the ""Build"" pane for website project. `clean_site(preview = FALSE)` must be run to effectively remove files (#1973).",1,124,FALSE,NA
rmarkdown,be393eae9ca7cde1bda14344e334fc0d,"The intermediate `.tex` file is now correctly deleted if `keep_tex = FALSE` when the R Markdown document is not rendered from the working directory (thanks, @​vqv, #1308).",1,125,FALSE,NA
rmarkdown,3b13320cfe06c506e12dc8c4b23b7b79,"Fix a bug causing certain resources files to be deleted as intermediate files when `intermediates_dir` is the same as the input (thanks, @​bellma-lilly, #1248).",1,126,FALSE,NA
rmarkdown,00875322fa272c82bccda045650ed147,"Fix issues with `anchor_sections = TRUE` and **learnr** (thanks, @​gadenbuie, #1938).",1,127,FALSE,NA
rmarkdown,0983673a7c3c39448f5d4522b7dc2018,Enable use of `server.R` and `global.R` alongside `runtime: shinyrmd` documents.,1,128,FALSE,NA
rmarkdown,775c8babe50de75542f9a083cc480479,`pkg_file_lua()` now works with `devtools::load_all()` and **testthat** when used in other packages.,1,129,FALSE,NA
rmarkdown,9f880e7d15334f78af9336cfff0c9b41,"Fix `pandoc_convert(citeproc = TRUE)` not supressing the `--natbib` or `--biblatex` options (thanks, @​atusy, #1932).",1,130,FALSE,NA
rmarkdown,a402b746335a9dd6349a0eff9f0a11b5,"`pandoc-citeproc` is now activated if a `bibliography` field is defined in another YAML block instead of the first YAML block (thanks, @​bwiernik, #1364).",1,131,FALSE,NA
rmarkdown,f47cb107b0345f27e7f24cd78b57c356,Specify that `htmltools::htmlPreserve()` should use the pandoc raw attribute rather than preservation tokens when pandoc \>= v2.0. Note that this option will have the intended effect only for versions of htmltools \>= 0.5.0.9003.,1,132,FALSE,NA
rmarkdown,78f7cff0644760dcc5724170dd5ae389,"`anchor_sections` in `html_documents()` now defaults to `FALSE`. It was introduced in previous version with a default to `TRUE`, but it is reverted now after hearing feedbacks from the community (thank you!). The `#` is still used as the character for the anchor but you can easily change that using CSS rules. Examples have been added to the help page `?html_document`.",1,133,FALSE,NA
rmarkdown,d9fda9a3ac718ba50afde0919280bd1b,"Using Pandoc's default for `--email-obfuscation` now. Previously, it was set to `none` explicitly, which is the default for Pandoc 1.17.2+ anyway. Only users with a Pandoc version before 1.17.2 may see a change in the content of the html source file produced if the document contains email addresses. This change allows to pass the Pandoc's command line flag if you want to set it to another value (thanks,@​seankross, #1969).",1,134,FALSE,NA
rmarkdown,d9fda9a3ac718ba50afde0919280bd1b,"```
``` yaml
output:
  html_document: 
    pandoc_args: [""--email-obfuscation"", ""javascript""]
```",1,135,TRUE,NA
rmarkdown,d9fda9a3ac718ba50afde0919280bd1b,See Pandoc's manual for the meaning of this option.,1,135,FALSE,NA
rmarkdown,6a98bbb40b713b2b4eff14ce8315b715,Fix Fontawesome 5 icons in navbar by correctly handling new prefix as `fa` has been deprecated in favor of `fas` or `fab` (#1967),1,136,FALSE,NA
rmarkdown,d690320832c1b0080e9f4b5016de1ecf,"Tables without header rows (wich can be possible in Pandoc's simple table) are now formatted correctly when using `html_document()` format (thanks, @​fkohrt, #1893).",1,137,FALSE,NA
rmarkdown,1760f55403e0b56c77515d7cc970fea0,"`html_document()` gains the `anchor_sections` argument, which is `TRUE` by default, so that readers can get links to section headers easily---when you mouse over a section header, you will see a hash symbol `#` at the end of the header, which contains the anchor link to this header. You can click on this link and get the URL in the addres bar of your web browser, or right-click on it and copy the URL from the context menu. The hash symbol is defined by the CSS rule `a.anchor-section::before {content: '#';}`. You can customize it by overriding this rule (e.g., via the `css` argument of `html_document`) and use any other symbols or icons, e.g., `content: ""\02AD8;""` (thanks, @​atusy, #1884).",1,138,FALSE,NA
rmarkdown,2ea37e17d5b49561b969e395d5d33876,`pkg_file_lua()` should have thrown an error if the expected Lua file does not exist.,1,139,FALSE,NA
rmarkdown,962fc8f569ed884d98e36668108cba84,Provide `files_dir` and `intermediates_dir` as attributes on return from `render()` when `run_pandoc = FALSE`.,1,140,FALSE,NA
rmarkdown,ee44cad81c4be7e7c78cb5440f99dd6d,Supports new Pandoc 2.11 `--citeproc` flags usage instead of `pandoc-citeproc` external filter. `pandoc_convert()` and `pandoc_citeproc_convert()` will now use the correct flags according to the Pandoc version used. The logic is exported in `pandoc_citeproc_args()`. See Pandoc release note for more information about the new `citeproc` processing (#1916).,1,141,FALSE,NA
rmarkdown,1a7c1980db19a08e48d4d06e3aa1e70f,"Fixed the code highlighting when code block is hidden. Previous version introduced a regression where non default code highlighting was still shown when `code_folding` is activated and code block is hidden (thanks, @​matthewcarlucci, #1921).",1,142,FALSE,NA
rmarkdown,6894dfbb361f640d93c4774edb168c4b,"The minimal required version for the **xfun** package (v0.15) has been specified for R Markdown Notebooks to work properly (thanks, @​jmcphers, #1923).",1,143,FALSE,NA
rmarkdown,29989ab3c68f356cbd4a800416f3ea7c,"Fixed a bug in `convert_ipynb()` when the language is not specified in the `.ipynb` file (thanks, @​acca3003, #1925).",1,144,FALSE,NA
rmarkdown,e8758af2a49ac8e8d655c3cc52cebb3a,Introduce `runtime: shinyrmd` as a more user friendly alias for `runtime: shiny_prerendered`.,1,145,FALSE,NA
rmarkdown,c436dff397e60ad7906c827840036d50,Lua filters handling has been improved internally with some user-facing changes (#1899):,1,146,FALSE,NA
rmarkdown,c436dff397e60ad7906c827840036d50,• New exported function `pandoc_lua_filter_args()` to return the Pandoc command-line argument to add a Lua filter.,2,147,FALSE,Lua filters handling has been improved internally with some user-facing changes (#1899):
rmarkdown,c436dff397e60ad7906c827840036d50,• New argument `lua_filters` in `pandoc_options()` to pass the Lua filter paths to use with a format. This allow output format authors to add filters for a custom format using the `pandoc` argument of `output_format()` and to get filters from a format using `fmt$pandoc$lua_filters`.,2,148,FALSE,Lua filters handling has been improved internally with some user-facing changes (#1899):
rmarkdown,c436dff397e60ad7906c827840036d50,"• The Lua filters of an output format are now passed to Pandoc in `render()`. By default, they are passed to Pandoc before any other format-defined or user-defined Pandoc arguments (usually via the `pandoc_args` option of an output format). This ensures that filters of an output format are executed first. To change the default, you need to deal with it in a custom format (i.e., modify the elements in `fmt$pandoc$lua_filters`, such as reordering them).",2,149,FALSE,Lua filters handling has been improved internally with some user-facing changes (#1899):
rmarkdown,c436dff397e60ad7906c827840036d50,"• New exported function `pkg_file_lua()` to get the full system path of a Lua filter included in a package source within the `inst/rmarkdown/lua` folder (thanks, @​atusy, #1903).",2,150,FALSE,Lua filters handling has been improved internally with some user-facing changes (#1899):
rmarkdown,29038b0debd308b4965cff2db3ca4c57,"Fixed the path separators for the `css` parameter in YAML frontmatter for HTML output files under Windows. Previously, forward slashes in `css` paths were converted to backslashes (thanks, @​jonathan-g, #1862).",1,151,FALSE,NA
rmarkdown,2aff30498bce9e2b336d41fcf30c62c1,"Since **rmarkdown** 1.16, Pandoc's fenced `Div`'s are converted to LaTeX environments when the output format is LaTeX, e.g., `::: {.center data-latex=""""}` is converted to `\begin{center}`. The attribute `data-latex` of the `Div` was mandatory, even if it is empty. In **rmarkdown** 2.2, we silently drop this requirement, which means `::: {.center}` is converted to `\begin{center}`. This turns out to be a bad idea, because users have no control over which Div's to be converted to LaTeX environments. Previously, they could opt-in by the `data-latex` attribute, but with **rmarkdown** 2.3, all Div's are converted to LaTeX environments unconditionally. What's more, this change led to bugs like https://stackoverflow.com/q/62340425/559676 and https://github.com/rstudio/bookdown/issues/883. Therefore the `data-latex` attribute became mandatory again in this version. If the LaTeX environment does not need arguments, you may use `data-latex=""""`.",1,152,FALSE,NA
rmarkdown,c831cc552403f06dae3f0e512a96dd5a,"The two Lua fitlers `pagebreak.lua` and `latex-div.lua` (introduced in **rmarkdown** 1.16) are also applied to the output format `beamer_presentation` now (thanks, @​XiangyunHuang, #1815).",1,153,FALSE,NA
rmarkdown,1f271f687ffd8fd49fe1c794bbae50f7,"When customizing formats with the `output_format` function, `pre_knit`, `opts_hooks`, and `knit_hooks` can now refer to `rmarkdown::metadata`. Previously, `rmarkdown::metadata` returned `list()` in these functions (thanks, @​atusy, #1855).",1,154,FALSE,NA
rmarkdown,8511a6a1b13de0595273fb3154853b18,"`rmarkdown::find_external_resources()` now discovers external template files. This in turn fixes the rendering issue of `html_document` with the `shiny` runtime and `intermediate_dir` set (thanks, @​atusy, @​cderv, #1865).",1,155,FALSE,NA
rmarkdown,a5261b90796c1ba7aa8c5ac5613411fa,"Added the `number_sections` argument to following formats: `github_document`, `ioslides_presentation`, `md_document`, `odt_document`, `powerpoint_presentation`, `rtf_document`, `slidy_presentation`, `word_document`. These are powered by a Lua filter and requires Pandoc \> 2.0. It will silently have no effect has before with previous pandoc version (thanks @​atusy 1893). Pandoc \>= 2.10.1 adds `--number-sections` for docx format, and thus `word_document` prefers the native feature to the Lua filter (thanks, @​jooyoungseo, #1869).",1,156,FALSE,NA
rmarkdown,585d1c582b84670ef955425f54fbf90c,"For the output format `pdf_document`, the option `fig_crop` will not be enabled unless both the programs `pdfcrop` and `ghostscript` are found (thanks, @​dalupus, yihui/knitr#954).",1,157,FALSE,NA
rmarkdown,1ec328c89c2918f8d03c2b9c112e9867,"Fixed a bug that a chunk with a class `fold-hide` hides the rest of the chunks even the output format setting `html_document(code_folding = ""show"")` (thanks, @​atusy, #1906).",1,158,FALSE,NA
rmarkdown,1d9d7b94249e53e0d426c8ef60cbc092,"Updated documentation for `render()` to make it clearer how options are set for the `output_format` parameter (thanks, @​jonathan-g, #1907 and rstudio/bookdown#930).",1,159,FALSE,NA
rmarkdown,bf220f20efe2bd6a368e4ea2918196ba,"Ported some CSS styles (e.g., underlines, small caps, and multi-column layouts) from the latest Pandoc's HTML template into **rmarkdown**s HTML templates (thanks, @​atusy, #1878, #1908).",1,160,FALSE,NA
rmarkdown,65b876e668f8da5e1e3e114cd308301d,"Addressed an accessibility issue in highlighted code blocks of HTML output for screen reader users: screen readers no longer read out an unnecessary code line id values (thanks, @​jooyoungseo and @​atusy, #1833).",1,161,FALSE,NA
rmarkdown,03f4e61cf49d30c71b4fad342571cc79,Added `file_scope` option to output format definition. This enables handling of duplicate numeric footnote identifiers (e.g. across bookdown chapters) via the pandoc `--file-scope` option (#1837).,1,162,FALSE,NA
rmarkdown,62b6acfe35f108e4112df09f6dce4337,"Added the customizable `lang` attribute to `ioslides_presentation` output (thanks, @​jooyoungseo, #1841).",1,163,FALSE,NA
rmarkdown,f73471160e8bdaaefca151d313ae3da5,"Added `publish_site()` function for ""one-button"" publishing of R Markdown websites.",1,164,FALSE,NA
rmarkdown,c183d7e4ea1472ccaaca8fae8f59b266,"When the `df_print` option is `kable` and the output format is not HTML, `<div class=""kable-table"">` is no longer added to the `kable()` output, because recent versions of Pandoc will convert the `div` to a LaTeX environment when the output format is LaTeX (thanks, Laurens, https://stackoverflow.com/q/62340425/559676).",1,165,FALSE,NA
rmarkdown,e1e952d79d8b6eeb8f0baf43ba4ce9c7,"`html_vignette()` only warns against differences in the vignette title and the vignette index entry for R \>= 3.6.0 (thanks, @​krlmlr, #1832).",1,166,FALSE,NA
rmarkdown,382293cbc0edb9d1b976fd079d15373b,"`html_document()` can apply `code_folding` on any chunk engines if the `foldable` class is added to a source code block via the chunk options (`class.source` or `attr.source`). You may apply this feature to all the source code blocks, for example, by setting `knitr::opts_chunk$set(class.source = ""foldable"")` at the beginning of your document (thanks, @​atusy, #1835).",1,167,FALSE,NA
rmarkdown,f2338b0deeb64670663ceb4debaa0fcd,"Exported the internal function `find_pandoc()`, and also added two arguments, `dir` and `version`, so that users can provide a custom directory under which this function may find Pandoc, as well as an expected version of Pandoc to be found (thanks, @​connorp, #1785).",1,168,FALSE,NA
rmarkdown,874ee0fcd6e7eb54ff3ca470f5ba5f5f,"`pandoc_metadata_arg()` is a new Pandoc helper function to generate `--metadata` argument for Pandoc command line (thanks, @​cderv, #1789).",1,169,FALSE,NA
rmarkdown,7b70cd3b91343da36ff2d10d25f1249c,The output format `html_vignette()` now warns against differences in the vignette title specified in the `title` field in the YAML metadata and the one specified inside `\VignetteIndexEntry{}`. Normally they are expected to be identical (#1789).,1,170,FALSE,NA
rmarkdown,f3f02dc10161b37bb1a2306c6587ecbc,"Fixed a bug with encoding when rendering `html_notebook` containing HTML widgets (thanks, @​cderv, #1799).",1,171,FALSE,NA
rmarkdown,1c40da90258891af35800fa09ee7745e,"TOC title can now be specified for `html_document` via the top-level option `toc-title` in the YAML frontmatter (thanks, @​atusy, #1771).",1,172,FALSE,NA
rmarkdown,dc61f64ae68976b39f74c0f682858a31,"Floating TOC can now distinguish upper/lower-cases (thanks, @​atusy, #1783).",1,173,FALSE,NA
rmarkdown,d964032061faa7e9852aaf8f5410930a,"When `code_folding='show'` for the output format `html_document`, code blocks can be individually hidden initially by specifying the chunk option `class.source='fold-hide'` (thanks, @​atusy, #1798).",1,174,FALSE,NA
rmarkdown,bfc3d3ebc0d3453cfb83e5c14123eea3,"For LaTeX/PDF output formats `pdf_document`, `beamer_presentation`, and `context_document`, the argument `citation_package = 'none'` was deprecated, and `citation_package = 'default'` should be used instead if citations are to be processed by `pandoc-citeproc` (thanks, @​njbart, rstudio/bookdown#754).",1,175,FALSE,NA
rmarkdown,766ea7a35aef6c6c489d27bc75006fd8,"`output_format()` can now inherit `keep_md` and `clean_supporting` from `base_format` when `NULL` is passed to these arguments. Previously, you must explicitly specify `keep_md` and/or `clean_supporting` as `TRUE` or `FALSE` in `output_format()` since they could not inherit the corresponding options of `base_format`. This behavior was not consisent with other arguments of `output_format()` (thanks, @​atusy, #1823).",1,176,FALSE,NA
rmarkdown,6e5bfce6cb5d68d49352c6b0593849b0,"The `smart` argument of most output formats has been removed, because Pandoc's `smart` extension is enabled by default, and setting `smart: false` for an output format did not really have any effect (which could be considered a bug, but we want to get rid of this option since it existed only for a historical reason for Pandoc 1.x, and Pandoc 2.x has been released for more than two years). If you want to disable the `smart` extension, you can use the option `md_extensions: -smart` of the output format (thanks, @​atusy, #1774).",1,177,FALSE,NA
rmarkdown,7a2386e41ac5cd1ef06c7fb3c9420ba0,"`pdf_document()` should not specify the `geometry` variable when the `documentclass` variable is passed to Pandoc (thanks, @​jpcirrus, #1782).",1,178,FALSE,NA
rmarkdown,77c5e61d75b2644aa7aaa40f1836675c,"`render()` now respects the YAML metadata in the R script when rendering the script with Pandoc 2.8 or later (thanks, @​nsoranzo #1740, @​cderv #1741).",1,179,FALSE,NA
rmarkdown,934feb4fce15b112c0252af77a645187,"For `pandoc_convert()`, when the argument `to = 'pdf'`, it will be changed to `'latex'` internally (thanks, @​JohannesFriedrich, #1802).",1,180,FALSE,NA
rmarkdown,ccf4525d79eb1f27abb5e6876c77b57b,"`render(run_pandoc = FALSE)` no longer cleans up the Markdown file (typically knitted from Rmd) (thanks, @​BrianDiggs, #1812).",1,181,FALSE,NA
rmarkdown,dabdc3241d57c3394695437cd595666d,"Added the returned output from `shiny::runApp()` within `rmarkdown::run()` (thanks, @​schloerke, #1760).",1,182,FALSE,NA
rmarkdown,9929f1f7194ff4e4c62542638eb9fc89,"YAML header is now correctly parsed in `html_notebook`'s intermediate `.knit.md` file so that features like adding bibliography works again (thanks, @​everdark, @​cderv, #1747).",1,183,FALSE,NA
rmarkdown,2dedda5d234f69e207bd736c45f7048d,"`ioslides_presentation` template no longer generates an empty `<h2>` tag when `subtitle` is not specified in YAML (thanks, @​jooyoungseo #1735, @​cgrudz #1663).",1,184,FALSE,NA
rmarkdown,e311e0cdcb81a49f60fa027cec0dac4c,"No longer center the `#header` element in the `html_vignette()` output (thanks, @​EmilHvitfeldt, #1742).",1,185,FALSE,NA
rmarkdown,33e063dcef8670ee5eb212bbc9207841,"Ensure the `tempdir()` exists (via `tempdir(TRUE)`) when writing HTML dependencies to a temporary file, because this directory might be erased by accident (thanks, Kurt Hornik, and also @​karawoo #1743).",1,186,FALSE,NA
rmarkdown,ebda117a7fb65f275f31d02283265507,Added the `slide_level` argument to `slidy_presentation()` (https://stackoverflow.com/q/59157211/559676).,1,187,FALSE,NA
rmarkdown,aa10d01ceb7bc25bbf57ea625bdcd3e2,"Removed the jQuery dependency in `html_document_base()` (#1723). To avoid bugs like #1723, Pandoc 2.8 users have to upgrade to Pandoc 2.9+.",1,188,FALSE,NA
rmarkdown,e4d1131546c51d9a3a7f92efccf8f0a0,"For `pdf_document`, horizontal rules generated by Pandoc (before v2.8) stopped working in recent versions of TeX Live, and the same fix as the one to https://github.com/jgm/pandoc/issues/5801 (i.e., hard-code `\linethickness` to `0.5pt`) was applied in **rmarkdown** (thanks, @​cderv, https://stackoverflow.com/a/58646915/559676).",1,189,FALSE,NA
rmarkdown,5154b4d770ed6b13178fff87dc31c817,"For the output format `pdf_document()`, we no longer adjust the vertical spacing of the title area. This means there will be a larger spacing above the document title in PDF. If you prefers the old (smaller) spacing, please download https://github.com/rstudio/rmarkdown/blob/f6961af/inst/rmd/latex/compact-title.tex and include it to the preamble via the `includes` option of `pdf_document`. However, please note that this means you won't be able to have multiple authors in the `author` field of the YAML frontmatter, unless you use a custom LaTeX template. With the default LaTeX template, you will run into the error in #1716. Besides, the `compact-title` option in YAML is no longer supported.",1,190,FALSE,NA
rmarkdown,e329843ceb6b14a1e4d53604dc1b8223,"R code in the `header-includes` field in the YAML frontmatter stopped working in the previous version of **rmarkdown**. The code should be evaluated before passing to Pandoc (thanks, @​mcol #1709, @​cderv #1710).",1,191,FALSE,NA
rmarkdown,52b8793b39d31b2eb0c5948f08589bcf,"The `encoding` argument is no longer passed to the `intermediates_generator` of R Markdown output formats. The `intermediates_generator` function can only accept arguments `input_file` and `intermediates_dir` now (see `?rmarkdown::output_format`). This is a breaking change to developers. If you are an output format developer, you have to remove the `encoding` argument in your `intermediates_generator` if your output format uses this function.",1,192,FALSE,NA
rmarkdown,fabe84d02a6bb311e29ebe86f7160f8b,The `encoding` argument is no longer passed to the `render` element of the site generator (see `?rmarkdown::render_site`).,1,193,FALSE,NA
rmarkdown,a55756a7a9935003eb596bb58d6a8b80,"The `encoding` argument has been removed from many of the internal functions in the **rmarkdown** package. Now all input files are assumed to be encoded in UTF-8. If you see an error message like ""Error in `FUN(arg = ...)`: unused argument (`arg = ...`)"", please file an issue (with a reproducible example) to https://github.com/rstudio/rmarkdown.",1,194,FALSE,NA
rmarkdown,f989d5c3ee36ff7a523cbdfe05f8904e,"Added a new output format `context_document()` to support ConTeXT output (thanks, @​RLesur #1725, @​jooyoungseo #1713).",1,195,FALSE,NA
rmarkdown,d0627a33396207f175356a2ad5fda430,"`render_site()` can render R scripts in addition to Rmd files if you set `autospin: true` in `_site.yml` (thanks, @​zeehio, #1564).",1,196,FALSE,NA
rmarkdown,3052492a528daca12081e4012e693bd2,"Added `ext` argument to `md_document()`. Its default value is "".md"". This argument is intended to be used together with `variant` argument (e.g., `variant = ""context""` and `ext = "".pdf""`) (thanks, @​atusy, #1715).",1,197,FALSE,NA
rmarkdown,0955fa7b37e1fb73eb4ecd58bad5ebbc,"`ioslides_presentation()` stylesheet is updated for printing. Browsers are notified that the presentation should preferentially be printed in landscape orientation and without margin (thanks, @​RLesur, #1718).",1,198,FALSE,NA
rmarkdown,91e3e5fd452854ea52c4b0f4c12de8ee,"Reverted the fix #1703 and applied an alternative fix to #1700, because the original fix brought a new bug #1714 (thanks, @​pablobernabeu @​cderv @​everron @​aronatkins).",1,199,FALSE,NA
rmarkdown,30860c7c8ede1d92704ccaa4fea1d0f2,"Tabsets don't work with Pandoc 2.8 (thanks, @​mnazarov, #1723).",1,200,FALSE,NA
rmarkdown,efc161b7c56acae9e3c3285347a23d3f,"The `pdf_document` format failed to work if the `header-includes` field in YAML is an empty list (thanks, @​cderv, #1728).",1,201,FALSE,NA
rmarkdown,bdc28f06471f574610549f08b476b56a,"For `pdf_document()`, now we patch Pandoc's built-in LaTeX template to include the document subtitle (unnecessary with pandoc 2.6 onwards) and reduce the vertical spacing before title using `--include-in-header` rather than overwriting the built-in template, avoiding compability problems with newer versions of Pandoc (thanks, @​adunning, #1563).",1,202,FALSE,NA
rmarkdown,0ac142e44c6cad29e98ee1ab1dd4f89b,"`find_external_resources()` works now when multiple files are specified in the `includes` option of the output format (thanks, @​andrie, #1677).",1,203,FALSE,NA
rmarkdown,0ee98401a8f0e3811a317419ec18b2af,"`find_external_resources()` can find external resources specified in the output format's `reference_doc` or `reference_docx` option now (thanks, @​jmcphers, #1696).",1,204,FALSE,NA
rmarkdown,920627d29537aad65675215c0e8b6abd,"`rmarkdown::run(file = NULL, dir = ""foo/"")` failed to run Rmd files under the `foo/` directory (thanks, @​jenzopr, #1703).",1,205,FALSE,NA
rmarkdown,8f8e7bbafb54b160331edb2232265100,Reverted the fix for #1692 since it is no longer necessary (https://github.com/yihui/tinytex/issues/152#issuecomment-552796864).,1,206,FALSE,NA
rmarkdown,227a8cb9e8fb60253486e873c6d55904,"The `header-includes` field in the YAML metadata will no longer be overwritten by the command-line option `--include-in-header` (thanks, @​crsh @​mnazarov, #1359).",1,207,FALSE,NA
rmarkdown,9592f17ae86def5fceca69c7df29d8e4,"Removed the `xmlns` attribute in the `<html>` tag in the default HTML template (thanks, @​grady #1640, @​spgarbet #995).",1,208,FALSE,NA
rmarkdown,13eeecf4743eb1a6c56e0512b12b5656,"`html_vignette()` passes `self_contained` argument value to base format (thanks, @​cderv, #1668).",1,209,FALSE,NA
rmarkdown,aafe2f201a95f008a8d5084e32362bc9,"`find_external_resources()` works for the `html_vignette` type again, this fixes rendering vignettes with external resources in pkgdown (regression introduced in rmarkdown 1.16, #1668).",1,210,FALSE,NA
rmarkdown,90c2738d53ff296807cfcc2a780f3728,"`render(..., clean = TRUE)` may fail to clean the `*_files` directory when the output format is `prettydoc::html_pretty` (thanks, @​yixuan, #1664).",1,211,FALSE,NA
rmarkdown,c85671645ea2b8c9d6f31c8e33daec3e,"For `ioslides_presentation`, images with atributes (e.g., `![](sample.png){width=80%}`) can be correctly embedded in the self-contained mode now (thanks, @​hadley, #1687).",1,212,FALSE,NA
rmarkdown,63175ab91658c7b68460810f8171ee3c,"Fixed the Pandoc LaTeX templates to avoid the error `File`grffile.sty' not found\`. This is because the LaTeX **grffile** is no longer available in TeX Live (thanks, @​cderv #1691, @​smmurphy #1692, @​JacobD05 https://github.com/yihui/tinytex/issues/152).",1,213,FALSE,NA
rmarkdown,08d81387d5dc6a3e4fddbdb3f8363cea,"The `pandoc-citeproc` binary can now be found correctly on Windows. This fixes an issue with `pandoc_citeproc_convert()` (thanks @​cderv, #1651).",1,214,FALSE,NA
rmarkdown,3cef68b09328fbd52d6eb16d3a94f89b,"Added `self_contained` argument to `html_vignette` to keep intermediate directory if `self_contained = FALSE` (thanks, @​cderv, #1641).",1,215,FALSE,NA
rmarkdown,0c7e0cebc7726e4658f637fd8fd1d0f6,"It is now possible to add pagebreak in HTML, Word, LaTeX, and ODT documents using the `\newpage` or `\pagebreak` command in an Rmd file. This is possible thanks to the Pandoc's pagebreak Lua filter. See `vignette(""lua-filters"", package = ""rmarkdown"")` (thanks, @​cderv, #1626).",1,216,FALSE,NA
rmarkdown,cea945a18c014ccebda6e951261e6802,"The Pandoc extension `ascii_identifiers` is no longer enabled by default. If you still need it, you may use the argument `md_extensions = ""+ascii_identifiers""` in the output format function. However, please note that this will trigger an error in a future version of Pandoc.",1,217,FALSE,NA
rmarkdown,4b7811ae4f4fc08733fc80da48a1d5c0,"Output formats can be configured by arbitrary YAML files, which used to be restricted to `_output.yml` or `_output.yaml`. They can be specified via the `output_yaml` argument of `render()` or the `output_yaml` top-level parameter of YAML front matter, and the first existing one will be used. If `output_yaml` is specified both for `render()` and YAML front matter, then `render()` has the priority. If none are found, then `_output.yml` or `_output.yaml` will be used if they exist (thanks, @​atusy, #1634).",1,218,FALSE,NA
rmarkdown,c5f92fe9be914b63de4f38f68667bf1e,"Added a Pandoc Lua filter to convert fenced Divs to LaTeX environments when the output format is `latex` or `beamer`. Basically a fenced Div `::: {.NAME data-latex=""[OPTIONS]""}` is converted to `\begin{NAME}[OPTIONS] \end{NAME}` in LaTeX. The attribute `data-latex` must be provided, even if it is an empty string (meaning that the LaTeX environment does not have any optional arguments). For example, `::: {.verbatim data-latex=""""}` generates a `verbatim` environment, and `::: {.minipage data-latex=""{.5\textwidth}""}` generates `\begin{minipage}{.5\textwidth}`. This Lua filter was originally written by @​RLesur at https://github.com/yihui/bookdown-crc/issues/1. It will allow users to create custom blocks that work for both HTML and LaTeX output (e.g., info boxes or warning boxes).",1,219,FALSE,NA
rmarkdown,84a9d19d98763318f003a4dbe8a2b78c,"Added `keep_html` argument to `github_document` so to save a preview HTML file in a working directory (thanks, @​atusy, #1650).",1,220,FALSE,NA
rmarkdown,45fe1daabb48ef7ce745f67b3796594c,"Exclude `README.R?md` from files processed by `render_site()`,",1,221,FALSE,NA
rmarkdown,662c5f2d0ab4d859fd46f5082c9f1932,"`html_document` with `code_folding: hide` supports showing individual source code chunks if they are assigned the `fold-show` class via the chunk option `class.source=""fold-show""` (thanks, @​atusy, #1602).",1,222,FALSE,NA
rmarkdown,0c0a483061a5e5ff5d49033cb40359ed,The `extra_dependencies` argument only works with `template: default` in `pdf_document`. Now it works with any Pandoc LaTeX templates as long as the template uses the `header-includes` variable.,1,223,FALSE,NA
rmarkdown,35fc4376c11713026f46108645c955f7,"Fixed a regression in `ioslides_presentation` that background colors via the `data-background` attribute on slides stopped working (thanks, @​ShKlinkenberg, #1265).",1,224,FALSE,NA
rmarkdown,2b4f708bc9e26aaf5b501f1c8ab749ab,"Fixed the bug #1577 introduced in **rmarkdown** v1.12: tabsets, floating TOC, and code folding in the `html_document` format no longer work with the `shiny` runtime (thanks, @​RLesur for the fix #1587, and @​fawda123 @​ColinChisholm @​JasonAizkalns for the bug report).",1,225,FALSE,NA
rmarkdown,f05531678384d299739c37dee9fce3f1,"Added the `keep_md` argument to `pdf_document()` to keep the intermediate `.md` output file (thanks, @​broomej, #1001).",1,226,FALSE,NA
rmarkdown,d5c62ca56a357ab434b97c4dc4b3666c,"For `render()`, if the input filename contains special characters such as spaces or question marks (as defined in `rmarkdown:::.shell_chars_regex`), the file will be temporarily renamed with the special characters replaced by `-` (dash) instead of `_` (underscore, as in previous versions of **rmarkdown**). This change will affect users who render such files with caching (cache will be invalidated and regenerated). The change is due to the fact that `-` is generally a safer character than `_`, especially for LaTeX output (#1396).",1,227,FALSE,NA
rmarkdown,62b97e2df3ca04db982993743b59c43f,"Added a **pkgdown** site for the **rmarkdown** package: https://rmarkdown.rstudio.com/docs/ (thanks, @​apreshill, #1574).",1,228,FALSE,NA
rmarkdown,ede7d4638dfa35e024397ad4501338cd,"Fixed the bug #1593: in HTML documents, when a MathJax URL is used with a custom template, the source code of the MathJax library is included in the document. This bug was first declared in **bookdown** (thanks, @​topepo for the bug report rstudio/bookdown#683, and @​RLesur for the fix #1594).",1,229,FALSE,NA
rmarkdown,828ae4eeb835c1e307a9fac4970f06fa,"For `pdf_document()`, do not override margins to 1 inch when a custom document class or geometry settings are specified in the YAML front matter (thanks, @​adunning, #1550)",1,230,FALSE,NA
rmarkdown,f21e08691829cfb501ba751d9b019aa9,"The default value of the `encoding` argument in all functions in this package (such as `render()` and `render_site()`) has been changed from `getOption(""encoding"")` to `UTF-8`. We have been hoping to support UTF-8 only in **rmarkdown**, **knitr**, and other related packages in the future. For more info, you may read https://yihui.org/en/2018/11/biggest-regret-knitr/.",1,231,FALSE,NA
rmarkdown,7c8ad3f49b5acd39b1cc11c8a5b9f8ac,"The option `toc_float: true` for `html_document` now preserves the text formatting (thanks, @​codetrainee, #1548).",1,232,FALSE,NA
rmarkdown,3132cfd26eb98150a0ab419eaad33c49,"For the `output_file` argument of `render()`, a file extension will be automatically added if the filename does not contain an extension (e.g., `render('foo.Rmd', 'html_document', output_file = 'bar')` will generate `bar.html`); see the help page `?rmarkdown::render` for details (thanks, @​apreshill, #1551).",1,233,FALSE,NA
rmarkdown,ba21faa621d5ebb7445f635a9abd3f7e,"TOC items are not correctly indented when `toc_float` is enabled for the `html_document` format (thanks, @​carolynwclayton #1235 and @​RLesur #1243).",1,234,FALSE,NA
rmarkdown,169c7fd48f6dc1ea692235b3ffc9daae,"Fixed rstudio/shiny#2307 where the second execution of a `shiny_prerendred` document with `href` dependencies would cause a prerender check error (thanks, @​schloerke, #1562).",1,235,FALSE,NA
rmarkdown,c2bf5c65c30e8a1dfa39b04673cc1209,"The `*_files` directory is not properly cleared due to the inappropriate fix for #1503 and #1472 in the last version (thanks, @​wxli0 #1553, @​cderv #1566).",1,236,FALSE,NA
rmarkdown,e8a5efc7b2d22f92b8b5a71d89c5d09a,"Added an `output_extensions` argument to `pdf_document()` to make it possible to enable/disable Pandoc extensions for the LaTeX output format (thanks, @​hongyuanjia, rstudio/bookdown#687).",1,237,FALSE,NA
rmarkdown,969eadfbba1aa241b04fff3b7e38beca,"Fixed file extensions of output files when using non-markdown Pandoc extensions such as `docx+styles` (#1494, @​noamross).",1,238,FALSE,NA
rmarkdown,21555b299a980db5b9b81955b51366c8,"Added a new argument `extra_lines` to `latex_dependency()` to allow users to add extra lines of LaTeX code after `\usepackage{}`. Also added a helper function `latex_dependency_tikz()` based on `latex_dependency()` (#1502, @​malcolmbarrett).",1,239,FALSE,NA
rmarkdown,8fcb86a5554942ca8b77ae139270ca8d,"Fixed #1529: when the path of an Rmd file contains Unicode characters that cannot be represented in the system native encoding (especially on Windows), `rmarkdown::render()` may fail.",1,240,FALSE,NA
rmarkdown,dac9e9804e6b0f9646a726caa4b7e615,Applied a correct fix to an old **plotly** issue ropensci/plotly#463.,1,241,FALSE,NA
rmarkdown,559abece3e785219e7479fce202d5347,HTML widgets used to be hidden when printing ioslides to PDF in Chrome. Now they will be printed correctly.,1,242,FALSE,NA
rmarkdown,c443767ce6dd20f2e07754e19d2b6d0f,"`render(output_format = 'all')` may delete the figure directories that are still needed by certain output formats when one output format doesn't need its figure directory (thanks, @​rmcd1024 #1472, @​cderv #1503).",1,243,FALSE,NA
rmarkdown,817fca138894731dc1543ac58e6f0047,"The `<em>` tags in the subtitle, date, and author are removed from the default HTML template (thanks, @​royfrancis, #1544).",1,244,FALSE,NA
rmarkdown,23536cb835779d3344d331f42f32a1ed,"Fixed #1483, which prevented the triangle to be displayed in Firefox when `<details><summary>...</summary></details>` was used (#1485, @​bisaloo)",1,245,FALSE,NA
rmarkdown,24cb3dd07b57f05cdb59c99dfbeae20a,"Provided `rmarkdown.pandoc.args` as a **knitr** package option in `knitr::opts_knit` (#1468, @​noamross).",1,246,FALSE,NA
rmarkdown,48cf0eda086173231f72e317f65ac67e,"Added the exported function `pandoc_exec()`, which returns the path of the pandoc binary used by the package (#1465, #1466 @​noamross).",1,247,FALSE,NA
rmarkdown,bbea56bae93928037b7622f099b6ae44,"`new_session: true` in `_site.yml` causes `render_site()` to render each file in a new R session, eliminating some cross-file difficulties, such as function masking (#1326, #1443 @​jennybc).",1,248,FALSE,NA
rmarkdown,9cdc84fcfc92a113aac8ebc4f0949a86,Added the LaTeX command `\passthrough` in the default LaTeX template for the `--listings` flag of Pandoc (rstudio/bookdown#591).,1,249,FALSE,NA
rmarkdown,be4a86c141da7d754348f2ef3b8b726d,"The icons in `flexdashboard::valueBox()` are not of the full sizes due to the upgrade of FontAwesome in #1340 in the previous version (#1388, rstudio/flexdashboard#189).",1,250,FALSE,NA
rmarkdown,5f8ff7ce3c78ce2616a9c45010c19010,"Added the ability to generate tabset dropdowns, usable by adding the `.tabset-dropdown` class to a header (e.g., `# Heading {.tabset .tabset-dropdown}`) (#1405). Thanks @​stefanfritsch for contributing the necessary code for this (#1116).",1,251,FALSE,NA
rmarkdown,e91181b5eeabc2b62909eefbaa2c6bdd,"The `darkly` theme (a darker variant of the Bootswatch `flatly` theme) has been added to `html_document` and `html_notebook` (#1409, #889).",1,252,FALSE,NA
rmarkdown,ff4852e6ae3a378211cf32490ecd3f05,"Fixed a regression that caused scrollbars on code blocks when the syntax highlighting theme is not the default (#654, #1399).",1,253,FALSE,NA
rmarkdown,be3eb8459e4afa8acbea43073fd3255a,Fixed #1407: reactive expressions can break the section headers of Shiny R Markdown documents.,1,254,FALSE,NA
rmarkdown,8f78b40d94a3e4a479a3fd68a0f6a76a,Fixed #1431: `render()` with the `intermediates_dir` argument when the output format is `powerpoint_presentation` with a custom `reference_doc` fails to find the reference document.,1,255,FALSE,NA
rmarkdown,f5c544d32afbb5b9c41b48d0eedcab55,"Fixed the website navbar not being able to display submenus properly (#721, #1426).",1,256,FALSE,NA
rmarkdown,d8dfcc9a7669829d3b48c43f41054df8,"Added checks for shiny-prerendered documents to find all html dependencies, match all execution packages, and match the major R version (#1420).",1,257,FALSE,NA
rmarkdown,12ec2d68b8931c1a44ed3b3b4132fd37,"Added an argument `cache = TRUE` to the internal function `rmarkdown:::find_pandoc()`, so that users can invalidate the cached path of Pandoc via `rmarkdown:::find_pandoc(cache = FALSE)` (thanks, @​hammer, #1482).",1,258,FALSE,NA
rmarkdown,5d1472d6c3eec61f4b7460537f3a5d16,"Added an RStudio project template for simple R Markdown websites, so that users can create such websites from RStudio: `New Project -> New Directory -> Simple R Markdown Website` (thanks, @​kevinushey, #1470).",1,259,FALSE,NA
rmarkdown,303197c069e1fd6799f4bf7d4ec994ff,"Fixed #1471: Pandoc's (version 2.x) syntax highlighting themes don't work well with the Bootstrap style (thanks, @​gponce-ars #1471, @​cderv #1489).",1,260,FALSE,NA
rmarkdown,9881f4c34f5c2a10a2d0690d20fb9373,Fixed the warnings in #1224 and #1288 when calling `render()` with an absolute `output_dir` or `intermediates_dir`.,1,261,FALSE,NA
rmarkdown,a6b0c37a7ea6d7698a7376012f91bcf0,Fixed #1300: calling `render()` with `intermediates_dir` may fail when the intermediate dir is on a difference device or filesystem.,1,262,FALSE,NA
rmarkdown,7545b6439f6a0cf3071f65543720fa7c,Fixed #1358: calling `render()` with `intermediates_dir` will fail if the Rmd document contains bibliography files that are dynamically generated.,1,263,FALSE,NA
rmarkdown,7a7ad9eba81032078e66e337f2a4e15e,Added a new argument `slide_level` to `powerpoint_presentation()` (#1270).,1,264,FALSE,NA
rmarkdown,754b135eb4354770d5331e187f9774f6,The **tinytex** package has become a required dependency (to build R Markdown to PDF).,1,265,FALSE,NA
rmarkdown,dc3654a00f92e9eed687fb37890ba731,Added `compact-title` variable to the LaTeX default templates to control use of LaTeX `titling` package; defaults to `true` (#1284).,1,266,FALSE,NA
rmarkdown,fefa635baafc3e387549ee9c118c2be6,`pdf_document(template = NULL)` does not work (#1295).,1,267,FALSE,NA
rmarkdown,a905e993022c4fd113b15b5c66a26ee6,Restore ability to use any HTML format with R Markdown Websites (#1328).,1,268,FALSE,NA
rmarkdown,85537f397bed685630d1c2b91b1d30f1,Add `options` argument to `paged_table()` to enable explicit passing of display options.,1,269,FALSE,NA
rmarkdown,f69ed2a72047a75cc57483450af27eff,Add `pandoc_citeproc_convert()` function for conversion of bibliography files (e.g. BibTeX files).,1,270,FALSE,NA
rmarkdown,297951f1bc6242b5bdd9c3a5e5a008ce,Update to Font Awesome version 5.0.13 (#1340).,1,271,FALSE,NA
rmarkdown,b8e246c315e63df9fc01d51dd3224cda,Add `site_resources()` function for computing resource files required for a website.,1,272,FALSE,NA
rmarkdown,c190f50fa5a3f53e7037ec487766a2cc,Export `default_site_generator()` function.,1,273,FALSE,NA
rmarkdown,400c78db08d0dc6185cceebd5f2b9458,"The `latex_document()` format should not clean up the figure directory (thanks, @​emiltb, rstudio/bookdown#582).",1,274,FALSE,NA
rmarkdown,fdfbbcafca9c6687dab7e9d76b1a7a0b,Enable post processors that change the output file to specify that the base post processor should still be applied to the original output file.,1,275,FALSE,NA
rmarkdown,36ca05339c4cb922b8408a584a9b9c5f,"Added a new (experimental) output format `powerpoint_presentation`. If you want to test it, you will need Pandoc \>= 2.1 (#1231).",1,276,FALSE,NA
rmarkdown,c3d3ac7ba0609ef3ba7f23b5655533d6,"If the **tinytex** package is installed, PDF output is built through `tinytex::latexmk()`, otherwise it is generated by `rmarkdown:::latexmk()`, which has been factored out and improved in the **tinytex** package, so it is recommended that you install the **tinytex** package (#1222).",1,277,FALSE,NA
rmarkdown,a8ba224b325fda06c15fce5b502e3f62,"Temporary files created in `render()` may be cleaned up prematurely, which can cause problems with Shiny R Markdown documents (#1184).",1,278,FALSE,NA
rmarkdown,bdb13905362073440cf1df7fc2886f2e,"Further improvements regarding compatibility with Pandoc 2.0, e.g. tabbed sections don't work (https://community.rstudio.com/t/3019).",1,279,FALSE,NA
rmarkdown,21f5afb93ac37cb7bd11ab8f6f531a2b,"When `preserve_yaml = TRUE` in `md_document()`, `toc = TRUE` fails to create the table of contents (thanks, @​stla, #1216).",1,280,FALSE,NA
rmarkdown,c029bc6affe16d5a2cef372e87bda5b1,"Suppress confusing error messages from `knitr::purl()` during `rmarkdown::find_external_resources()` (thanks, @​aronatkins #1247, and @​paulobrecht #1154).",1,281,FALSE,NA
rmarkdown,0358298d34ac262c828d9f4d156969fa,"Fixed the obscure error `Error: path for html_dependency not found:`, which was due to the HTML dependency of highlight.js (thanks, @​bborgesr, #1213).",1,282,FALSE,NA
rmarkdown,0fafb5cdd46c2d3e0af65e1502b6a046,`render_site()` does not work with `_site.yml` that does not have the `output` setting (#1189).,1,283,FALSE,NA
rmarkdown,614e6ae5b07ff18861361c7165ff40ce,The variables `input` and `output` do not work in Shiny R Markdown documents (#1193).,1,284,FALSE,NA
rmarkdown,1fa5195f2c3ac8cb4e5219530276ba3b,`ioslides_presentation` fails to embed images (#1197).,1,285,FALSE,NA
rmarkdown,f3278c7324ffe451e00c86c8e665e0e9,"With Pandoc 2.x, `github_document()` generates the wrong filename extension `.gfm-ascii_identifiers` instead of `.md`, and line height of code blocks in the HTML preview is too big (#1200).",1,286,FALSE,NA
rmarkdown,43e18ef3130b91e405983bc0997e184d,Fixed an issue with `df_print: paged` where row names where not printed and added support for `rownames.print` option to control when they print.,1,287,FALSE,NA
rmarkdown,79d4fc0ed9aa8bdd7ab455d546ef1a88,Add `smart` option for `word_document()` format.,1,288,FALSE,NA
rmarkdown,816fa268b0ad31c54bcbd0d0b93f27f6,Save render intermediates when generating beamer presentations (fixes #1106).,1,289,FALSE,NA
rmarkdown,dc03d418b241b1679355f32612a785db,Fixed issues when specifying NULL/null/empty parameter values (#729 and #762).,1,290,FALSE,NA
rmarkdown,0ddfc4c75eb909205400de5d72017a61,Better error message when unable to prerender a document. (#1125),1,291,FALSE,NA
rmarkdown,c656ccbfd072ec6a9943c7fcd7568bc0,`shiny::renderText()` does not work in Markdown section headings (#133).,1,292,FALSE,NA
rmarkdown,128ac356887531c79acf043aee6c8083,The `value` argument of `pandoc_variable_arg()` can be missing now (#287).,1,293,FALSE,NA
rmarkdown,bf37f0497b709d5c68ecdbd6c2a5e3d1,Background colors and images are supported for ioslides presentations (#687).,1,294,FALSE,NA
rmarkdown,ccb3082c5ce96d92d3f18f0b86a498d2,HTML widgets in an Rmd document cannot be rendered if another Rmd document is rendered via `rmarkdown::render()` in this document (#993).,1,295,FALSE,NA
rmarkdown,46f455466c4cd8ec377f86a2f4a167e2,Try harder to clean up temporary files created during `render()` (#820).,1,296,FALSE,NA
rmarkdown,f3864ec3e29665843b7926adc5fe66da,"Wrong environment for evaluating R code chunks in Shiny R Markdown docs (#1162, #1124).",1,297,FALSE,NA
rmarkdown,1a37bdbacea2b1f14b3df2106b370a3c,Do not call `bibtex` to create the bibliography when there are no citations in the document and the output format is `pdf_document()` with `citation_package = 'natbib'` (#1113).,1,298,FALSE,NA
rmarkdown,9ea8a16702a47adc6ef9aac4d416f97c,`render()` will stop if the output format is PDF but there are any errors during building the index or bibliography (#1166).,1,299,FALSE,NA
rmarkdown,bda6ffa40a5b8af76dbbd3810ba4ecc6,`beamer_presentation()` doesn't work when `citation_package != 'none'` (#1161).,1,300,FALSE,NA
rmarkdown,360007021e16b1c613afed44fe8f33ba,File-based inputs don't work in parameterized documents (#919).,1,301,FALSE,NA
rmarkdown,4cd3960d5760aa0cd921f201dca05561,rmarkdown is compatible with Pandoc 2.0 now (#1120).,1,302,FALSE,NA
rmarkdown,b3a1626fe1bceef119ce614484fc69e0,`render()` with `intermediates_dir` fails with R plots (#500).,1,303,FALSE,NA
rmarkdown,edb7242e86b057b6c566518db737ce21,Added two new output formats `latex_document()` and `latex_fragment()` (#626).,1,304,FALSE,NA
rmarkdown,6e39aa0d7494ebc145a142151ace3194,Relative paths of images in HTML output should not be resolved to absolute paths (#808).,1,305,FALSE,NA
rmarkdown,87597e0261a1b139d475738694755e1f,`render_site()` does not support multiple output formats for a single Rmd (#793).,1,306,FALSE,NA
rmarkdown,7813e1e87418eb017c69e7388de0b2c3,Unicode characters may be scrambled when downloading the Rmd source file using the download button generated by `html_document(code_download = TRUE)` (#722).,1,307,FALSE,NA
rmarkdown,507a1412588574fb4d7c640af7a99101,"Upgraded highlight.js from v1.1 to v9.12.0 (#988, #907).",1,308,FALSE,NA
rmarkdown,b0e2b965e1488f0c16450db6ca6ee0e1,"The argument `keep_md = TRUE` actually preserves the Markdown output file from `knitr::knit()` now (as documented). Previously, it generates a new Markdown file by concatenating the YAML metadata (title, author, date) with the body of the original Markdown output file (#450).",1,309,FALSE,NA
rmarkdown,6f3ee7b4b78d605471f737f4c5d5335a,"For `md_document()`, when `variant == 'markdown'` and `perserve_yaml = TRUE`, the Pandoc argument `--standalone` should not be used (#656).",1,310,FALSE,NA
rmarkdown,bc5038b00422891e22a01d4ae02bb911,Fixed an issue where headers with non-ASCII text would not be linked to correctly in the table of contents.,1,311,FALSE,NA
rmarkdown,7037ca037a7e1ae0a6892b10edcf02e4,"Support code folding for bash, python, sql, Rcpp, and Stan chunks.",1,312,FALSE,NA
rmarkdown,c6665dad7e21115a9ca10da37b853393,Provide rmarkdown.pandoc.id_prefix as Knit option,1,313,FALSE,NA
rmarkdown,58a20f1235249a980e57337274624481,"Fixed two issue with `df_print: paged`, one would prevent rendering data with lists of lists and the other where the column type would get cut off.",1,314,FALSE,NA
rmarkdown,d42ad374d6a08f452141938a3df6f0e9,Better support for `citation_package: biblatex` in `pdf_document()` (#1062).,1,315,FALSE,NA
rmarkdown,4ae5e79617562fdf199ed95fdd80e505,"On certain Windows platforms, compiling LaTeX to PDF may fail because `system2(stdout = FALSE)` is not supported, in which case the default `system2()` will be used (#1061).",1,316,FALSE,NA
rmarkdown,a26b1cc4962f67a2af47a47de9bede78,Allow paged tables to render even when page load / visibility has a long delay,1,317,FALSE,NA
rmarkdown,0410da15c8d8db82f2a7d4ca73133299,Fixed an issue where code within Shiny pre-rendered documents was not rendered correctly.,1,318,FALSE,NA
rmarkdown,1e00d9fe7ca7d714305d002c6035c02f,Add `includes` parameter to `html_fragment` format.,1,319,FALSE,NA
rmarkdown,fcf87c322b5aa3c4d6ec5573261cb1aa,Use RStudio redirection URL to replace deprecated MathJax CDN,1,320,FALSE,NA
rmarkdown,9327ec793b5f1342bb0512987e650e74,`data.table` expressions involving `:=` are no longer automatically printed within R Markdown documents. (#829),1,321,FALSE,NA
rmarkdown,4e64aab119ee69aa6e83100b47f0ce5c,Fix #910: the extra_dependencies argument of pdf_document() does not work when no code chunks contain LaTeX dependencies.,1,322,FALSE,NA
rmarkdown,aa62c9dca11f92552531c6b6d589849e,"The extra_dependencies of pdf_document() can also take a character vector of LaTeX package names, or a named list of LaTeX package options (with names being package names), which makes it much easier to express LaTeX dependencies via YAML.",1,323,FALSE,NA
rmarkdown,25d7da321316110d56efc675342b3b4c,Automatically ignore packrat directory for render_site,1,324,FALSE,NA
rmarkdown,1fdfae01f08030021bb3ed15335cbb0c,Fix #943: escape end tags in shiny_prerendered code contexts,1,325,FALSE,NA
rmarkdown,5fc8cb102ee54e009f0076af56b02082,Add support for sticky tabs in html_document via tabset-sticky class,1,326,FALSE,NA
rmarkdown,d22748f8230492d9cd8f98e9efb6272d,Process Rmd files with lowercase extension (.rmd) in render_site,1,327,FALSE,NA
rmarkdown,1edf9e90930febf6fd528afae5a99775,Fix stack space consumption issues with large JS payloads in chunks,1,328,FALSE,NA
rmarkdown,44d8e3360de8925a9402df04ca851e60,Add `section_divs` argument to html_document and html_fragment to control generation of section tags/divs.,1,329,FALSE,NA
rmarkdown,5e8818042db49072588aa3bffba57541,"Remove data-context=""(data\|server\|server-start)"" chunks from HTML served to client in shiny_prerendered",1,330,FALSE,NA
rmarkdown,4b4dc7003e9ed6844fe1de7b366df445,Fix v1.2 regression in ordering of CSS for ioslides_presentation.,1,331,FALSE,NA
rmarkdown,302da5d1253fffb54e39705452e37f7e,Fix rendering of pagedtables within html_notebook format.,1,332,FALSE,NA
rmarkdown,486757a3ac7d0b6d962572e5a1bc7ace,Ensure that html_prerendered UI is never cached.,1,333,FALSE,NA
rmarkdown,04124a40526682fc92c5aeee18a58253,Add `citeproc` argument to YAML header; controls whether pandoc-citeproc is used (#831),1,334,FALSE,NA
rmarkdown,3cc5b0f90d3fbdbb426e592c308f1d8f,"Add support for df_print to handle additional dplyr classes: grouped_df, rowwise_df and tbl_sql.",1,335,FALSE,NA
rmarkdown,bcb5a603085c09fa57acf6e63c06be7b,Add new `runtime: shiny_prerendered` mode for interactive documents.,1,336,FALSE,NA
rmarkdown,10faeed4695094edab857c3fecc6d277,"Prepend ""section-"" to ids in runtime: shiny\[\_prerendered\] to eliminate potential conflicts with shiny output ids",1,337,FALSE,NA
rmarkdown,7eebdc839313a748e59fcd1b404cb314,"Use html_dependencies for highlight.js, pagedtables, slidy, ioslides, & navigation (improved dependency behavior for runtime: shiny\[\_prerendered\])",1,338,FALSE,NA
rmarkdown,ad56b100bcc9ead10f919e88345671ae,Serialize runtime: shiny\[\_prerendered\] dependencies to JSON rather than .rds,1,339,FALSE,NA
rmarkdown,ff549e1192c4b96371e548391be8fc05,"ioslides: check for null before concatenating attr\[""class""\] (#836)",1,340,FALSE,NA
rmarkdown,dda41e47f24942c256aaa1bc21f64abf,Add rmarkdown.onKnit/onKnitCompleted package hooks,1,341,FALSE,NA
rmarkdown,c64c96150861547d9166733a9dfb19c6,"Non-ASCII keys in yaml file should be marked to UTF8 as well, when read into R as the name of a list (#841)",1,342,FALSE,NA
rmarkdown,68457da6d08cce74ee493f85f382bee5,Remove key-column special-case left alignment in pagedtables (#829),1,343,FALSE,NA
rmarkdown,6b06e2b5a8b166b35e495f07fddb4235,Replace backslashes in floating TOC headings (#849),1,344,FALSE,NA
rmarkdown,13b483f05e60b30bdd71d7b6469cf1bf,Suggests rather than Imports for tibble (R 3.0 compatibility),1,345,FALSE,NA
rmarkdown,9c7f7cd0931b4fca464750ee44f61073,Add `paged_table` function for printing paged tables within HTML documents,1,346,FALSE,NA
rmarkdown,090cd2a0abacb1697c53196d389d7242,Support `{.active}` attribute for setting initially active tab (#789),1,347,FALSE,NA
rmarkdown,a49700d8cf3d9e5642d4c88c03b4db7e,"Add `knit_root_dir` argument to `render()` and YAML header, a convenience for setting knitr's root.dir option",1,348,FALSE,NA
rmarkdown,ff9b2f90fd866c2cadff31f8ae9426de,Improve alignment of text in sub-topics for floating TOC,1,349,FALSE,NA
rmarkdown,a37029a50b9291661b6289c81d8f7c6d,Bibliography file paths in YAML containing forward slashes could not be rendered (#875),1,350,FALSE,NA
rmarkdown,fa6bde8ca57487868c26d4289f11fa17,Fixed an issue where attempts to render an R Notebook could fail if the path contained multibyte characters.,1,351,FALSE,NA
rmarkdown,6cd2b4ad100b96e2fbe0cc98aa76ac27,Fixed an issue where the default Beamer template did not provide vertical padding between paragraphs with certain versions of pandoc (\<= 1.17.2).,1,352,FALSE,NA
rmarkdown,c9b9514e7994aa6a4317a80114626810,Try to install latexmk automatically on Windows,1,353,FALSE,NA
rmarkdown,be0a7c0039c587926a5c10b0b7bf5b01,"Added `df_print` option to html_document format for optionally printing data frames using `knitr::kable`, the `tibble` package, or an arbitrary function",1,354,FALSE,NA
rmarkdown,d432b73c89d321d9ead7f613cd8d653d,Fix for render_site not showing Chinese characters correctly,1,355,FALSE,NA
rmarkdown,26487b5db781c72c47595d37e980ad2a,Fix for ignoring knit_meta that is explicitly passed to render,1,356,FALSE,NA
rmarkdown,9f78f34f9f635315b35bb8d35d662a54,Parameter editing: don't allow NULL to overwrite previous state,1,357,FALSE,NA
rmarkdown,36a9344c4752e71ee2bcdafdc57ac509,Parameter editing: fix incorrect name for parameters with expressions,1,358,FALSE,NA
rmarkdown,469511eb501af9e319cbf3cd9063dd11,"Parameter editing: allow multiple values when the parameter is configured to use a ""multiple"" selector",1,359,FALSE,NA
rmarkdown,91adf25b86bb53e8400bf944d3c1efc6,"Switched the order in which format dependencies are added for `html_document` so that `extra_dependencies` are added at the end, after bootstrap, etc. (#737)",1,360,FALSE,NA
rmarkdown,1249df4886f7901b35e071b4a28374a0,`pdf_document(keep_tex = TRUE)` will generate the .tex document even if PDF conversion fails (#779).,1,361,FALSE,NA
rmarkdown,effca68ca39bf690ea6897413ea6c85a,Move latex header includes to just before \\begin{document},1,362,FALSE,NA
rmarkdown,fb413f1be027c3af35c16e24e03f8db7,Special 'global' chunk label for runtime: shiny which designates a chunk to be run once and only once in the global environment (startup performance improvement for multi-user shiny documents),1,363,FALSE,NA
rmarkdown,7b3e11bc00c493ac306fa3eae202f13c,Ensure supporting files are writeable (#800),1,364,FALSE,NA
rmarkdown,348cfa28c93abf00566fad13b69c7ec2,"Make the ""show code"" buttons more CSS-friendly (#795)",1,365,FALSE,NA
rmarkdown,cfeab8a9974e7281d8b22494ad25374d,Exclude `output_dir` from site files (#803),1,366,FALSE,NA
rmarkdown,fe93312f2b3577f0fdf0d55246945c94,Export `navbar_html` and `yaml_front_matter` functions,1,367,FALSE,NA
rmarkdown,ec6e3edd73d3890ac94bb7e4477efd68,`toc_float` no longer automatically sets `toc = TRUE`,1,368,FALSE,NA
rmarkdown,4ad3a2fe916abc45ce7aa017637c4661,Added an argument `error` to `pandoc_available()` to signal an error when (if `error = TRUE`) pandoc with the required version is not found.,1,369,FALSE,NA
rmarkdown,35b18846e2670f3f507ab2b91f1b505a,Added `html_notebook` format for creating HTML documents that include source code and output.,1,370,FALSE,NA
rmarkdown,92d9c6c9b0476c6fc17f9550d2f7a4d2,Added `resolve_output_format` function (useful for front ends that need to mirror the default format resolution logic of `render`).,1,371,FALSE,NA
rmarkdown,1220cf947099cc5e9189081019f147c6,Added `code_download` option to `html_document` to provide an option to embed a downloadable copy of the Rmd source code within the document.,1,372,FALSE,NA
rmarkdown,bf074b04294d6b901faa53c6b61d06f3,Added `slide_level` option to ioslides_presentation to set the level of heading used for individual slides.,1,373,FALSE,NA
rmarkdown,96e1bd7ea5549d606c70fb9e7980b7c2,Added `hard_line_breaks` option to `github_document` to deal with change in behavior of GitHub's markdown renderer with respect to line breaks.,1,374,FALSE,NA
rmarkdown,f287f8a66a3c78d01bb1087f3b256506,"Use ""markdown_strict"" rather than ""markdown"" for `pandoc_self_contained_html` when pandoc \>= 1.17 (pandoc hanging bug was fixed in this version)",1,375,FALSE,NA
rmarkdown,4c1c9f02e79dafcbcd6cb16ccd42b46f,"Default highlighting engine for `html_document` now highlights bash, c++, css, ini, javascript, perl, python, r, ruby, scala, stan and xml",1,376,FALSE,NA
rmarkdown,9fe8f232cf8f9d9367729f0e3937e63e,Added `print` sub-option to `toc_float` to control whether the table of contents appears when user prints out the HTML page.,1,377,FALSE,NA
rmarkdown,d03da5f4de7d21dd5147c74eeebe19ad,Added `readme` option to `html_vignette` which automatically creates a package level README.md (for GitHub) in addition to rendering the vignette.,1,378,FALSE,NA
rmarkdown,f901e556b1efc0b4b93c1ca1bc4e5e37,Support for `keep_md` in `html_vignette` format.,1,379,FALSE,NA
rmarkdown,c42d092341fb9c7eaf599fb386409105,Try to install the latexmk package automatically on Windows if the executable latexmk.exe exists.,1,380,FALSE,NA
rmarkdown,d9be941ea1452a072e7a6002b4f46047,Ability to set `opts_hooks` in `knitr_options()` (#672),1,381,FALSE,NA
rmarkdown,c25f6ae43687124ea973045edd4b2cf0,Added `render_site` and related functions for rendering collections of documents within a directory as a website.,1,382,FALSE,NA
rmarkdown,f24954a157f153f81c86b08deb4f5a74,Ability to define html_document navigation bar using simple yaml format.,1,383,FALSE,NA
rmarkdown,559f764b248156cc59b271e8891dfae6,Added `pre_knit` and `post_knit` hooks for output formats.,1,384,FALSE,NA
rmarkdown,ebee019a751ac29d8bbd9658331b8c67,Discover `LaTeX` dependencies and add them to the `.tex` preamble (#647),1,385,FALSE,NA
rmarkdown,592c2461eab4fa98ca8ca73d88e9ec3f,Added new `all_output_formats` function to enumerate all output formats registered for an Rmd.,1,386,FALSE,NA
rmarkdown,999b71cd904d2d2949b583fbec0d4daa,Change `fig_caption` default to TRUE for all formats,1,387,FALSE,NA
rmarkdown,dfcc48b7fdfa4098bd31213810b7fc2b,Change `fig_retina` to 2 for HTML formats (no longer contingent on `fig_caption`),1,388,FALSE,NA
rmarkdown,2d949c3810cd7c7875b0ac21993360e5,Ensure pandoc binary exists before binding to pandoc directory (#632),1,389,FALSE,NA
rmarkdown,1339075232365bd099d7653b503b8cc2,Handle relative paths for 'default_output_format' (#638),1,390,FALSE,NA
rmarkdown,02d2a912d2591bb0c08132649d41d78b,Eliminate duplicate viewport meta tag from html_document,1,391,FALSE,NA
rmarkdown,1b196283dda45ff8f625f8ad0d5328a5,Added biblatex biblio-style support to the LaTeX template for Pandoc 1.15.2 (#643),1,392,FALSE,NA
rmarkdown,d3f3e6a79cc222f7823a06b71026c0ba,Allow override of header font-size in html_document custom css (#652),1,393,FALSE,NA
rmarkdown,84c1949831702a6b5df538a33eb76502,Fix for horizontal scrollbars appearing w/ code folding (#654),1,394,FALSE,NA
rmarkdown,983d879fe1eb5d83a6f46044fb4004ca,Specifying `toc_float` in `html_document` now automatically sets `toc = TRUE`,1,395,FALSE,NA
rmarkdown,d0919195d541b715e9e6d3d2730db995,Enable per-header opt-out of `toc-float` via {.toc-ignore} attribute,1,396,FALSE,NA
rmarkdown,339e7c6dc4c6fa319e883ea34ae885a7,Correctly handle soft line breaks in ioslides_presentation (#661),1,397,FALSE,NA
rmarkdown,51bc5ba29130d97f20442fb2157a0017,Don't use text-muted for code folding btns (text visibility in non-default themes),1,398,FALSE,NA
rmarkdown,1e15bbd24ac4988dd03e1fa3cb602f56,Fix for rendering non-HTML formats from .md files (resolve runtime before knit),1,399,FALSE,NA
rmarkdown,e25db37c0fd1d9bc648038306b14fb6d,"`html_dependency_bootstrap` now accepts theme = ""default"" argument",1,400,FALSE,NA
rmarkdown,5937144741c2331a0a401f43e940c14b,Use pandoc 1.17.0.2 compatible LaTeX template when pandoc \>= 1.17.0.2,1,401,FALSE,NA
rmarkdown,f693263ef5ee9b0d3ed53c62e1b0c9b7,Support custom template for `ioslides_presentation`,1,402,FALSE,NA
rmarkdown,d1701bbec96f7a71e3e3d3327f6ae3aa,Added `analytics` option for `ioslides_presentation` for Google Analytics,1,403,FALSE,NA
rmarkdown,5b258ff3c009d89abadb89b76027646f,"Removed the extra tag `<p></p>` around HTML output (typically generated by htmltools) from code chunks, to avoid invalid HTML like `<p><div>...</div><p>` (#685)",1,404,FALSE,NA
rmarkdown,6ee4f51abdffce6998092f1b701bb5ba,Added odt_document format for OpenDocument Text output,1,405,FALSE,NA
rmarkdown,63b02a91fd112325799fbf6f7c4d29c6,Added rtf_document format for Rich Text Format output,1,406,FALSE,NA
rmarkdown,d071dc47c0e64c81e7a4e0ad4e341ee3,Added github_document format for GitHub Flavored Markdown output,1,407,FALSE,NA
rmarkdown,a78ad374adf9a6b9a52758f3fb2cb7e2,Only apply white background for themed HTML documents (#588),1,408,FALSE,NA
rmarkdown,cf06ae7fd74db9268b6b63fa3ac55fb2,"Added ```{=html} <meta name=""viewport"" content=""width=device-width, initial-scale=1""> to the default HTML template to make it work better with mobile browsers. (#589)",1,409,FALSE,NA
rmarkdown,0ac7acbf77781ef6ac397d3cbb7ebdb0,Specify --filter pandoc-citeproc after custom pandoc args,1,410,FALSE,NA
rmarkdown,255ce3f44acb7210d51216a41998a141,Long lines in code blocks will be wrapped in the `html_vignette()` output (#595),1,411,FALSE,NA
rmarkdown,977b3ee25dcd1faf1b44a5d11f4edd3f,Added new arguments `run_pandoc = TRUE` and `knit_meta = NULL` to `render()`. See the help page of `render` for details. (#594),1,412,FALSE,NA
rmarkdown,b8a1fa72a77783e593f0765e8a198a05,The `tufte_handout` format now delegates to the `tufte` package and no longer provides a base template.,1,413,FALSE,NA
rmarkdown,26774f949aab71a4bd8a1bb40240cf48,Use pandoc 1.15.2 compatible LaTeX template when pandoc \>= 1.15.2,1,414,FALSE,NA
rmarkdown,04c231ef4f695520fe4d63bd09b985a4,Fix issue with Beamer template and pandoc 1.15.2,1,415,FALSE,NA
rmarkdown,770d223e18552d6a3afdd15d43d4226a,Updated embedded JQuery to v1.11.3 and Bootstrap to v3.3.5.,1,416,FALSE,NA
rmarkdown,e4744cbbc2f7c4c0f15e8533791d7ff6,Expose core HTML dependencies for use by custom R Markdown formats.,1,417,FALSE,NA
rmarkdown,02e82d30010657a4bc8f85d893a7d629,"New `html_document` themes: ""lumen"", ""paper"", ""sandstone"", ""simplex"", & ""yeti"".",1,418,FALSE,NA
rmarkdown,cbbc728a30e28da62e3a925997c75ca7,Ability to include bootstrap navbar for multi-page `html_document` websites,1,419,FALSE,NA
rmarkdown,53e555032192c06b332e94b85d172e45,Added support for `abstract` field to `html_document` format,1,420,FALSE,NA
rmarkdown,28ac099b65259d21f3326e9fcb385ad9,Added support for floating table of contents (via tocify) to `html_document`,1,421,FALSE,NA
rmarkdown,8143b8d3b009b9e017aa593b75e039a7,Added support for tabsets via use of {.tabset} class on top-level headings,1,422,FALSE,NA
rmarkdown,6d2429ccaf866edf168294be7f11bdf1,Added support for folding/unfolding of R code chunks in `html_document`,1,423,FALSE,NA
rmarkdown,6a45e8b254ad90cd9b51085fe3b28046,Support `url` references in CSS files for `runtime: shiny`,1,424,FALSE,NA
rmarkdown,27a88448f7888e6d499c6b9457c54ef1,Change name of common options file to `_output.yml`,1,425,FALSE,NA
rmarkdown,31bdbe91657b7d03f78e9c2265284e5b,"Tweak pandoc conversion used in `pandoc_self_contained_html` to prevent hanging with large script elements (use ""markdown"" rather than ""markdown-strict"" as input format)",1,426,FALSE,NA
rmarkdown,8709310ab409137598a801e4bd4f8a63,"The filename extension .bib will be removed before bibliography files are passed to Pandoc when the output is LaTeX/PDF and the citation package natbib or biblatex is used on Windows. This is because bibtex in MikTeX will always add the extension .bib to bibliography files, e.g. it treats foo.bib as foo.bib.bib. (#623)",1,427,FALSE,NA
rmarkdown,8899450c647d7ecf8b97bf5bf5de54fa,Render Shiny documents in a clean environment; fixes issue in which code in Shiny documents could access internal R Markdown state,1,428,FALSE,NA
rmarkdown,06ce449e0659c0b6628d243a655cadc6,Added a fix to #580 for Windows users.,1,429,FALSE,NA
rmarkdown,58a916303182f7a7f45a6377efd839dc,Fix for a bug causing certain files to be deleted as intermediate files. (#580),1,430,FALSE,NA
rmarkdown,8fc8a6e41d0229909d1a204a8409605d,"PDF/LaTeX output no longer uses natbib as the citation package by default. If you do want to use natbib or biblatex, you may still use the argument citation_package = 'natbib' or 'biblatex'. (#577)",1,431,FALSE,NA
rmarkdown,5ccd2ea6008fa486c12f8a051c26da40,Fix for JS exception in slidy_presentation when served from the filesystem (don't call pushState for file:// urls),1,432,FALSE,NA
rmarkdown,37a2a26bc418a42d3938715bb25c2ecd,Escape single quotes in file paths,1,433,FALSE,NA
rmarkdown,1beae37f34221f916a0edf856009dcb3,Fix for missing resources when rendering a filename with shell characters,1,434,FALSE,NA
rmarkdown,ec6b1446fcce2a1ca78f2aed4624341e,"For PDF/LaTeX output, citations are processed via natbib or biblatex instead of pandoc-citeproc. The ciation package natbib or biblatex can be chosen using the argument `citation_package` in `pdf_document()`, `beamer_presentation()`, and `tufte_handout()`. LaTeX is compiled to PDF via latexmk (https://www.ctan.org/pkg/latexmk/); if it is not installed, a simple emulation will be used (run pdflatex/xelatex/lualatex, bibtex, and makeindex a few times). You are recommended to install latexmk, and please note latexmk requires a Perl installation (this is important especially for Windows users).",1,435,FALSE,NA
rmarkdown,8137f41c5a48befe77452622497b5a86,Always use the graphics package for PDF output,1,436,FALSE,NA
rmarkdown,b25fe85e78675e921110cf970d196a75,"Fix for the error ""cannot change value of locked binding for 'metadata'"" when one call of rmarkdown::render() is nested in another one (#248)",1,437,FALSE,NA
rmarkdown,71ed147e8081d3b9763ec25bd020a5f2,Fix for an issue causing image paths to be rendered incorrectly in Windows when rendering an `html_document` with `self_contained: false` and a path is passed in argument `output_dir`. (#551),1,438,FALSE,NA
rmarkdown,5c55916a0baa7b9205ab4b1dc629d7da,Add always_allow_html option for preventing errors when html_dependencies are rendered in non-HTML formats (e.g. pdf_document or word_document).,1,439,FALSE,NA
rmarkdown,cba35501b8a39915f33be04452ad747e,"Fix for an issue causing resources not to be discovered in some documents containing an empty quoted string (`""""`) in an R chunk.",1,440,FALSE,NA
rmarkdown,df7c4dd35577bf0fa31fe40e4fa2843a,Support for table of contents in word_document (requires pandoc \>= 1.14),1,441,FALSE,NA
rmarkdown,905980de8489140feb38859e22b88740,Support for opts_template in knitr options,1,442,FALSE,NA
rmarkdown,c906f6d83f12658467aee35bac36d8f1,Don't implicitly discover directories when scanning for dependent resources,1,443,FALSE,NA
rmarkdown,33cb2aced04fd2c52f4d56ef7f0a2468,Fix for slide numbers not showing up in ioslides when served from the filesystem (don't call pushState for file:// urls),1,444,FALSE,NA
rmarkdown,79ac0b1997af9784cfcc7a867e2ba31f,Remove inlining of bootstrap CSS (was workaround for bug now fixed in pandoc),1,445,FALSE,NA
rmarkdown,c93db05207937fccfedb5c0cb09cf0b8,Allow specifying an R file in calls to find_all_resources,1,446,FALSE,NA
rmarkdown,7a02b5ac081672d3b20715041ae575fc,Add support for keep_md to word_document,1,447,FALSE,NA
rmarkdown,ee665b5996efd3e09f6bd336201ef62e,Increase pandoc stack size to 512M (often required for base64 encoding e.g. larger embedded leaflet maps). Stack size can also be controlled by the pandoc.stack.size option.,1,448,FALSE,NA
rmarkdown,f4ca33c6c4db43b26f6aecdabbb25dd0,Allow YAML front matter to be terminated with ...,1,449,FALSE,NA
rmarkdown,a089ff957924ecd945bc661de071fe9b,Automatically generate a user-interface (via a Shiny application) for user specification of values in parameterized reports.,1,450,FALSE,NA
rmarkdown,3441e3dbc2941131ed4e5c2b459b6355,Add tightlist macro for compatibility with pandoc \>= 1.14,1,451,FALSE,NA
rmarkdown,01534d6365300614bade519bbc5eafab,Bugfix: Don't merge render params recursively with knit_params,1,452,FALSE,NA
rmarkdown,bdb7a9ab31d3ad671d3a635521961783,Bugfix: Handle slashes correctly on Windows for slidy_presentation when self_contained = FALSE,1,453,FALSE,NA
rmarkdown,d51d5a38584932c391816a373dcb2ce1,Add latex_engine option to beamer_presentation format,1,454,FALSE,NA
rmarkdown,33a53b084e37e15b56268db0119c6287,Ensure that when LANG=en_US pandoc receives en_US.UTF-8 (prevent hang),1,455,FALSE,NA
rmarkdown,33cf81eb8151c6a0c7c987f4aa4656a2,Generate MathJax compatible output when using html_fragment format.,1,456,FALSE,NA
rmarkdown,dcc01fd28909b7e859e893dbb9cb61a4,Use pandoc built-in template for Beamer,1,457,FALSE,NA
rmarkdown,060da5124b886ae852fe132fbab429a1,Use pandoc 1.14 compatible LaTeX template when pandoc \>= 1.14,1,458,FALSE,NA
rmarkdown,77c8c00a66ee769b7291b6d4e8171967,Inline bootstrap.min.css to workaround pandoc 1.14 base64 encoding issue,1,459,FALSE,NA
rmarkdown,f1e417ccd02cefe8021b650ecb434ace,Add support for discovering references to external resources when the document output format is PDF,1,460,FALSE,NA
rmarkdown,7005380d5fa2d089f29c09b11d5f791a,"Fix several issues causing pandoc errors when an intermediates directory is used, including during render for Shiny documents",1,461,FALSE,NA
rmarkdown,97369dac326c81325b47358df3ae0282,Support for parameterized reports. Parameter names and default values are defined in YAML and can be specified via the 'params' argument to the render function,1,462,FALSE,NA
rmarkdown,6fdf461776d09fb33856ac36850c28af,'md_extensions' option to enable/disable markdown extensions for input files,1,463,FALSE,NA
rmarkdown,73c5740da109dbe0375a8fa12f40970a,"Automatically discover and include dependent resources (e.g. images, css, etc.) for interactive documents.",1,464,FALSE,NA
rmarkdown,f5434069f30841c4fb0bcd7346e0e5aa,Added pandoc_version function.,1,465,FALSE,NA
rmarkdown,9a1f29bf026d710b0dad287f5f696abe,Use VignetteEncoding directive in html_vignette format,1,466,FALSE,NA
rmarkdown,ec436439081854394839270bea573311,Fix issues related to use of non-ASCII characters in ioslides_presentation,1,467,FALSE,NA
rmarkdown,ef7a03efa225680ad0cf9414bfee27c7,"Non-ASCII characters in the YAML data are not marked with the UTF-8 encoding when they are read into R, so character strings in `rmarkdown::metadata` may be displayed incorrectly (#420)",1,468,FALSE,NA
rmarkdown,7f7e27f80426948eb6d644e6bef9a330,Various improvements to tufte_handout format,1,469,FALSE,NA
rmarkdown,c2886c7d1b67250ec48616a35764e780,Add 'dev' option to output formats to specify output device for figures,1,470,FALSE,NA
rmarkdown,4890ba08203d9de6028849772955bbe2,Enable use of footnotes in titles of LaTeX documents,1,471,FALSE,NA
rmarkdown,93d35d37abe99e4d5b2fe797d9c2d3a6,Various improvements related to directory detection/handling on Windows,1,472,FALSE,NA
rmarkdown,9fe437099c78200a7bf92fefadfc2a44,Sync to the latest LaTeX and Beamer templates from pandoc-templates,1,473,FALSE,NA
rmarkdown,87662d537bc6462a1d18131dafb30b89,"Switched from the Bootstrap 2 web framework to Bootstrap 3. This is designed to work with Shiny \>= 0.10.3, which has made the same switch",1,474,FALSE,NA
rmarkdown,9530774ba65b8022e684de84a432c5f3,Add CSS to restore responsive image behavior from Bootstrap 2,1,475,FALSE,NA
rmarkdown,6022ec09753b3f8eb171dc63cef72fd2,Use a more subtle treatment for inline code in Bootstrap themed documents,1,476,FALSE,NA
rmarkdown,9f418b36ee3c5b5722ab096046981e27,Improved support for multiple authors in ioslides,1,477,FALSE,NA
rmarkdown,46f07325db345a40944f0e54618a288c,Workaround for poor rendering of ioslides multi-columns lists in Safari 8,1,478,FALSE,NA
rmarkdown,cb9fdaca542807b77770af6190913f18,Serve index.html as fallback default file for rmarkdown::run,1,479,FALSE,NA
rsconnect,29ecbf4aec333e3037187d30de3b8c9f,Restore the `LC_TIME` locale after computing an RFC-2616 date. (#1035),1,1,FALSE,NA
rsconnect,7eb3b19dacd3dd3ba1a42e37b401b90f,"Address a problem inspecting Quarto content when the file names and paths needed to be quoted. The resulting manifest lacked information about the Quarto runtime, which caused difficult-to-understand deployment errors. (#1037)",1,2,FALSE,NA
rsconnect,f5554733c4617650c9ddd51d4a2c7512,Produce an error when Quarto content cannot be inspected. (#1032),1,3,FALSE,NA
rsconnect,5ef9285f6f98b1ec1d64001f2dc3c97b,"Addressed a number of republishing and collaboration issues where the content was incorrectly published to a new location rather than reusing an existing deployment. (#981, #1007, #1013, #1019)",1,4,FALSE,NA
rsconnect,61ec176e10ab1020545123b40b17da19,"`showLogs()`, `configureApp()`, `setProperty()`, and `unsetProperty()` search for the application by name when there are no matching deployment records. (#985, #989)",1,5,FALSE,NA
rsconnect,2a7ebe226247499a8dd51a1b4f5ea731,"`rpubsUpload()` correctly records the initial RPubs destination, allowing republishing. (#976)",1,6,FALSE,NA
rsconnect,d0e8d8fd210446b4a97d06a4d90e393e,`deployApp()` and friends record multi-value `metadata` entries as comma-separated values. (#1017),1,7,FALSE,NA
rsconnect,088d17455200aaa8dc2ce4b12ebc3795,`accountInfo()` includes `name` and `username` fields. Older versions of rsconnect store account records with a `username` field. Recent rsconnect versions record `name`. Both `name` and `username` should contain the same value. (#1024),1,8,FALSE,NA
rsconnect,73b8e949866052a07896214433e25840,Added `space` parameter to deploy directly to a space in Posit Cloud.,1,9,FALSE,NA
rsconnect,d0b477f78e30a1fac5c1bde7aa6847be,Improve reporting of errors returned by shinyapps.io. (#997),1,10,FALSE,NA
rsconnect,71a2dbf513993948b3a54b249519c235,Remove most directory layout validation checks. (#998),1,11,FALSE,NA
rsconnect,8a54253ad333549af359d260583409ec,"Do not use `getOption(""available_packages_filters"")` option when calling `available.packages()`. (#1002)",1,12,FALSE,NA
rsconnect,25cc3ac35aa7a1380436a7b6e9b093ed,Packages installed from source within an renv project are not associated with repositories. (#1004),1,13,FALSE,NA
rsconnect,e50fa468a3b0ec9847526441f84c86cf,Fixed analysis of directories that were smaller than the `rsconnect.max.bundle.files=10000` limit but larger than the `renv.config.dependencies.limit=1000` limit. (#968),1,14,FALSE,NA
rsconnect,0d092c0a765397912bc4083213915118,"Ignore `.env`, `.venv`, and `venv` files only when they reference Python virtual environments. (#972)",1,15,FALSE,NA
rsconnect,30b0c60ac7bbb8f4864dff578665a0b6,"`deployApp()` and `writeManifest()` accept optional `envManagement`, `envManagementR`, and `envManagementPy` arguments. These args specify whether Posit Connect should install packages in the package cache. If `envManagement` is `FALSE` then Connect will not perform any package installation and it is the administrator's responsibility to ensure the required R/Python packages are available in the runtime environment. This is especially useful if off-host execution is enabled, when the execution environment (specified by the `image` argument) already contains the required packages. These values are ignored when `Applications.ManifestEnvironmentManagementSelection = false`. Requires Posit Connect `>=2023.07.0`. (#977)",1,16,FALSE,NA
rsconnect,fbf0bb00b6eeab2c90574d411b22e3ec,Fix account discovery by `showProperties()`. (#980),1,17,FALSE,NA
rsconnect,1719ddca376105abad64fd53efe66217,"Fixed redeployments to shinyapps.io where `appName` is provided, but no local record of the deployment exists. (#932)",1,18,FALSE,NA
rsconnect,daaae312e5e17d019b87a2da30c71624,`deployApp()` and `writeManifest()` now error if your library and `renv.lock` are out-of-sync. Previously it always used what was defined in the `renv.lock` but that was (a) slow and (b) could lead to different results than what you see when running locally (#930).,1,19,FALSE,NA
rsconnect,f9b0a83fd2a74f726c2dfbd570720acd,Deploying from an renv project includes the `renv.lock` in the bundle. A manifest created for an renv project references the `renv.lock` in the `manifest.json`. (#926),1,20,FALSE,NA
rsconnect,4bdc9fd0d0c6ae7fc942b45802bffc32,"Use the environment variable `RSCONNECT_PACKRAT` to analyze dependencies using packrat, as was done prior to rsconnect-1.0.0. Use of the `rsconnect.packrat` option is discouraged, as it is not effective when using push-button deployment in the RStudio IDE. (#935)",1,21,FALSE,NA
rsconnect,24e9d4b0132c314d980670af51c78361,The `renv.lock` is ignored when the `RSCONNECT_PACKRAT` environment variable or the `rsconnect.packrat` option is set. (#936),1,22,FALSE,NA
rsconnect,3c3f17e91dbbe0ded4690fa9215a9b98,The content type is inferred by analyzing the set of top-level files. (#942),1,23,FALSE,NA
rsconnect,2070df1bc914c7e93d0163ecf1021184,"`deployApp()` and `writeManifest()` accept an optional `appMode` argument. Provide this argument if your project includes auxiliary files which mislead the existing `appMode` inference. For example, if an HTML project includes a downloadable Shiny `app.R`, that content will be assumed to be a Shiny application even if that application is not meant to be run. (#948)",1,24,FALSE,NA
rsconnect,605d765832f12a845552fa1d8efe5fd1,`appDependencies()` accepts an `appFileManifest` argument as an alternate way of providing the target set of files.,1,25,FALSE,NA
rsconnect,0bf5146fca809b304d916098e5cc7962,"`deployDoc()` includes `.Rprofile`, `requirements.txt` and `renv.lock` when deploying `.Rmd` or `.qmd`. These additional files are not included with rendered HTML documents. (#919)",1,26,FALSE,NA
rsconnect,634c2cc8dac202f086ad95179397de5e,Explicit renv dependencies are preserved. (#916),1,27,FALSE,NA
rsconnect,2c3690927c89308515ac732cdfeb15c2,`deployApp()` and `deployDoc()` now support deploying static content to Posit Cloud. Static RMarkdown and Quarto content can be rendered server-side.,1,28,FALSE,NA
rsconnect,b72bccfc41620325545845ca291a31d7,rsconnect requires renv 1.0.0.,1,29,FALSE,NA
rsconnect,363767193446ba32e56a39b7bcd861c1,"`deployApp()` and `writeManifest()` now respect renv lock files, if present. If you don't want to use these lockfiles, and instead return the previous behaviour of snapshotting on every deploy, add your `renv.lock` to `.rscignore` (#671). Learn more `?appDependencies()`. Additionally, `deployApp()` and `writeManifest()` now use renv to capture app dependencies, rather than packrat. If this causes a previously working deploy to fail, please file an issue then set `options(rsconnect.packrat = TRUE)` to revert to the previous behaviour.",1,30,FALSE,NA
rsconnect,a25b77bf1e0da5e89cc44224a3e7f99f,"`deployApp()`'s `quarto` argument now takes values `TRUE`, `FALSE` or `NA`. The previous value (a path to a quarto binary) is now ignored, and instead we automatically figure out the package from `QUARTO_PATH` and `PATH` env vars (#658). `deploySite()` now supports quarto websites (#813).",1,31,FALSE,NA
rsconnect,7e531f25b4039a061bc307265a3bbb5b,"`deployApp()` gains a new `envVars` argument which takes a vector of the names of environment variables that should be securely copied to the server. The names (not values) of these environment variables are also saved in the deployment record and will be updated each time you re-deploy the app (#667). This currently only works with Connect, but we hope to add support to Posit cloud and shinyapps.io in the future.",1,32,FALSE,NA
rsconnect,57ec1decde26545b903455bbcb35f2fa,"rsconnect gains two new functions for understanding and updating the environment variables that your apps currently use. `listServerEnvVars()` will return a data frame of applications, with a `envVars` list-column giving the names of the environment variables used by each application. `updateServerEnvVars()` will update all applications that use a specific environment variable with the current value of that environment variable (#667).",1,33,FALSE,NA
rsconnect,2d0c2221819ec6255e4d2b09401e65f7,"Non-libcurl `rsconnect.http` options have been deprecated. This allows us to focus our efforts on a single backend, rather than spreading development efforts across five. The old backends will remain available for at least 2 years, but if you are using them because libcurl doesn't work for you, please report the problem ASAP so we can fix it.",1,34,FALSE,NA
rsconnect,44edb07a0318f6dfd62124a8ef86bcde,`addConnectServer()` has been deprecated because it does the same thing as `addServer()` now that `addServer()` also validates URLs.,1,35,FALSE,NA
rsconnect,a1f95cf321e92e583b134a68c002d34f,"`deployTFModel()` is defunct. Posit Connect no longer supports hosting of TensorFlow Model APIs. A TensorFlow model can be deployed as a Plumber API, Shiny application, or other supported content type.",1,36,FALSE,NA
rsconnect,b230813143b72ef4fe17139a85513bc6,`discoverServer()` has been deprecated; it never worked.,1,37,FALSE,NA
rsconnect,cb5be222bbe90ea637ad43c35f4254d1,"`deployApp(""foo.Rmd"")` has been deprecated. It was never documented, and it does the same job as `deployDoc()` (#698).",1,38,FALSE,NA
rsconnect,1ba92c474b58677e93656aa3e529ac44,"New `rsconnect.http.headers` and `rsconnect.http.cookies` allow you to set extra arbitrary additional headers/cookies on each request (#405). Their use is documented in the new `vignette(""custom-http"")`.",1,39,FALSE,NA
rsconnect,071e26800fc0c7f2840abe3f363f79aa,Uploading large files to RPubs works once more (#450).,1,40,FALSE,NA
rsconnect,762dfa1bc972f4395394e329ebd8573d,"When recording details about deployments to Posit Cloud, appId now represents the content id (as seen in URLs of the format `https://posit.cloud/content/{id}`) instead of the application id.",1,41,FALSE,NA
rsconnect,e0a5ebab59e72fc0de9dccd26e6276c1,"Deployment records no longer contain the time the app was deployed (`when`) or when it's metadata was last synced (`lastSyncTime`) as these variables are not very useful, and they lead to uninteresting diffs if you have committed the deployment records to git (#770). A `version` field has been added to deployment DCF files to facilitate future file format changes, if needed. Its value for this release is `1`.,",1,42,FALSE,NA
rsconnect,e3d4561538d2a147592af937d8869983,`accounts()` returns a zero-row data frame if no accounts are registered.,1,43,FALSE,NA
rsconnect,c2ad60a8f3247782709755f5f3ad5c4e,`accountInfo()` and `removeAccount()` no longer require `account` be supplied (#666).,1,44,FALSE,NA
rsconnect,e7cdcefd2791135118756de42e77e38f,"`accountInfo()` and `servers()` redact sensitive information (secrets, private keys, and certificates) to make it hard to accidentally reveal such information in logs (#675).",1,45,FALSE,NA
rsconnect,da69f63d3d8b7b4211a4595497774cf7,"`addServer()` includes the port in the default server name, if present.",1,46,FALSE,NA
rsconnect,0710b74e62654fc961a3944068270c43,"`appDependencies()` includes implicit dependencies, and returns an additional column giving the Repository (#670). Its documentation contains more information about how dependency discovery works, and how you can control it, if needed.",1,47,FALSE,NA
rsconnect,b8d250037996515fa71ccb139e6eba5d,"`applications()` now returns the application title, if available (#484), and processes multiple pages of results from a Connect server (#860).",1,48,FALSE,NA
rsconnect,cbae71fe9b26f1ee9d8c3a9496326b10,`connectApiUser()` now clearly requires an `apiKey` (#741).,1,49,FALSE,NA
rsconnect,b0d37026f2672bf88441bfd74f17b858,"`deployApp()` output has been thoroughly reviewed and tweaked. As well as general polish it now gives you more information about what it has discovered about the deployment, like the app name, account & server, and which files are included in the bundle (#669).",1,50,FALSE,NA
rsconnect,2663b13945203364026b147fc60e64b9,"`deployApp()` is more aggressive about saving deployment data, which should make it less likely that you need to repeat yourself after a failed deployment. In particular, it now saves both before and after uploading the contents (#677) and it saves when you're updating content originally created by someone else (#270).",1,51,FALSE,NA
rsconnect,9b6516f8374c45f42d9103aaa58452ae,`deployApp()` now gives an actionable error if you attempt to set visibility of an app deployed to posit.cloud (#838).,1,52,FALSE,NA
rsconnect,699749325609d9f4d5410716d9a995fd,`deployApp()` now uses a stricter policy for determining whether or not a locally installed package can be successfully installed on the deployment server. This means that you're more likely to get a clean failure prior to deployment (#659).,1,53,FALSE,NA
rsconnect,d9eed9eb8b0cfba744dffbaba404001a,`deployApp()` will now detect if you're attempting to publish to an app that has been deleted and will prompt you to create a new app (#226).,1,54,FALSE,NA
rsconnect,6fa3b47569a20616784754dde3258bc5,`deployApp()` includes some new conveniences for large uploads including reporting the size of the bundle you're uploading and showing a progress bar in interactive sessions (#754).,1,55,FALSE,NA
rsconnect,8d8a401027126973a380f587b32c2e13,"`deployApp()` now follows redirects, which should make it more robust to your server moving to a new url (#674).",1,56,FALSE,NA
rsconnect,1bb97b24119892acb54c5b7fe95a56cc,"`deployApp()` uses simpler logic for determining whether it should create a new app or update an existing app. Now `appName`, `account`, and `server` are used to find existing deployments. If none are found, it will create a new deployment; if one is found, it'll be updated; if more than one are found, it will prompt you to disambiguate (#666).",1,57,FALSE,NA
rsconnect,0fc370dcc489527ed13c173a3c03372d,"`deployApp()` improves account resolution from `account` and `server` arguments by giving specific recommendations on the values that you might use in the case of ambiguity or lack of matches (#666). Additionally, you'll now receive a clear error if you accidentally provide something other than a string or `NULL` to these arguments.",1,58,FALSE,NA
rsconnect,6ee045926e79b4caa219765ccb21410b,`deployApp()` now generates an interactive prompt to select `account`/`server` (if no previous deployments) or `appName`/`account`/`server` (if multiple previous deployments) (#691).,1,59,FALSE,NA
rsconnect,0ea25f3cbfe8f766393f60f2b3cf1ad2,"`deployApp()` now advertises which startup scripts are run at the normal `logLevel`, and it evaluates each script in its own environment (#542).",1,60,FALSE,NA
rsconnect,8d68bfa8ef64082e34960ed3b95ec46e,"`deployApp()` now derives `appName` from `appDir` and `appPrimaryDoc`, never using the title (#538). It now only simplifies the path if you are publishing to shinyapps.io, since its restrictions on application names are much tighter than those of Posit Connect.",1,61,FALSE,NA
rsconnect,a103ed650c34c10d92f1483cc0f5347f,"`deployApp()` will now warn if `appFiles` or `appManifestFiles` contain files that don't exist, rather than silently ignoring them (#706).",1,62,FALSE,NA
rsconnect,d7745ae7a58d5218b7532476c96ca9ef,"`deployApp()` excludes temporary backup files (names starting or ending with `~`) when automatically determining files to bundle (#111) as well as directories that are likely to be Python virtual environments (#632). Additionally, ignore rules are always now applied to all directories; previously some (like `.Rproj.user` and `""manifest.json""`) were only applied to the root directory. It correctly handles `.rscignore` files (i.e. as documented) (#568).",1,63,FALSE,NA
rsconnect,78d72fc4c763f8372eeb0cc210f61277,`deployApp(appSourceDoc)` has been deprecated; it did the same job as `recordDir`.,1,64,FALSE,NA
rsconnect,4403c6ced8e22db1204a2b322f1645ee,"`deployDoc()` includes a `.Rprofile` in the bundle, if one is found in the same directory as the document.",1,65,FALSE,NA
rsconnect,eced1def4f0d223352ca0c051b885706,`lint()` should have fewer false positives for path problems: the relative path linter has been removed (#244) and the case-sensitive linter now only checks strings containing a `/` (#611).,1,66,FALSE,NA
rsconnect,6d21a62765bf98d21f1d3d42d843097e,"New `listDeploymentFiles()`, which supsersedes `listBundleFiles()`. It now errors when if the bundle is either too large or contains too many files, rather than silently truncating as before (#684).",1,67,FALSE,NA
rsconnect,6c7011cd1428193444e60a1b4be89aec,`serverInfo()` and `removeServer()` no longer require a `server` when called interactively.,1,68,FALSE,NA
rsconnect,dd5258d4e13848b879c5d58cf1f0a3af,`showMetrics()` once again returns a correctly named data frame (#528).,1,69,FALSE,NA
rsconnect,8b5acb6a421043834beac86de4d0d30e,"Removed Rmd generation code (`writeRmdIndex()`) which had not worked, or been necessary, for quite some time (#106, #109).",1,70,FALSE,NA
rsconnect,31b6795844e8985a62ffba41705c9bc5,Locale detection has been improved on windows (#233).,1,71,FALSE,NA
rsconnect,8b204655b9e144dfd56b953081b6d14c,"The `rsconnect.pre.deploy` and `rsconnect.post.deploy` hooks are now always called with the content directory, not sometimes the path to a specific file (#696).",1,72,FALSE,NA
rsconnect,5a660057655c1ead8580da65cc71b810,"Functions that should only interact with shinyapps.io enforce the server type. Updated `addAuthorizedUser()`, `removeAuthorizedUser()`, `showUsers()`, `showInvited()`, `resendInvitation()`, `configureApp()`, `setProperty()`, `unsetProperty()`, `purgeApp()`, `restartApp()`, `terminateApp()`, `showUsage()`, and `showMetrics()` (#863, #864).",1,73,FALSE,NA
rsconnect,1db332323ad690ae10770f716e417fe7,"When needed packages are not installed, and you're in an interactive environment, rsconnect will now prompt you to install them (#665).",1,74,FALSE,NA
rsconnect,bbc255d7d22ebc8dd9fcdd904e12f344,"The confirmation prompt presented upon lint failures indicates ""no"" as its default. (#652)",1,75,FALSE,NA
rsconnect,090636ccf9a03c55f829902993bc1abe,Introduced support for publishing to Posit Cloud. This feature is currently in closed beta and requires access to an enabled account on Posit Cloud. See Posit Cloud's Announcement for more information and to request access.,1,76,FALSE,NA
rsconnect,c6feb3d4a58d585d96fee3e00bcf0ea4,Update company and product names for rebranding to Posit.,1,77,FALSE,NA
rsconnect,4944d1684a17c3dfe35ee56119a5d3d3,"Shiny applications and Shiny documents no longer include an implicit dependency on `ragg` when that package is present in the local environment. This reverts a change introduced in 0.8.27. Shiny applications should add an explicit dependency on `ragg` (usually with a `library(""ragg"")` statement) to see it used by `shiny::renderPlot` (via `shiny::plotPNG`). The documentation for `shiny::plotPNG` explains the use of `ragg`. (#598)",1,78,FALSE,NA
rsconnect,e9a906e8bfdc3f7f6ea3bee741e83def,"Fix bug that prevented publishing or writing manifests for non-Quarto content when a Quarto path was provided to the `quarto` argument of `writeManifest()`, `deployApp()`, and related functions.",1,79,FALSE,NA
rsconnect,952d487c0a178f7f07175f5fc2666a6f,Escape account names when performing a directory search to determine an appropriate server. (#620),1,80,FALSE,NA
rsconnect,253162493fbbb8fa6b538c1e7f4d21a2,"Quarto content will no longer silently deploy as R Markdown content when Quarto metadata is missing or cannot be gathered. Functions will error, requesting the path to a Quarto binary in the `quarto` argument. (#594)",1,81,FALSE,NA
rsconnect,5a76a548e65ce49260a29aa7c9177070,Fix typo for `.rscignore`. (#599),1,82,FALSE,NA
rsconnect,e7a349daadc05b3b6ec829dc28fe6b7c,"Quarto deployments specifying only an `appDir` and `quarto` binary but not an `appPrimaryDoc` work more consistently. A directory containing a `.qmd` file will deploy as Quarto content instead of failing, and a directory containing an `.Rmd` file will successfully deploy as Quarto content instead of falling back to R Markdown. (#601)",1,83,FALSE,NA
rsconnect,14779aab81a0c67823dee598c639e079,"If the `ragg` package is installed locally, it is now added as an implicit dependency to `shiny` apps since `shiny::renderPlot()` now uses it by default (when available). This way, `shiny` apps won't have to add `library(ragg)` to get consistent (higher-quality) PNG images when deployed. (#598)",1,84,FALSE,NA
rsconnect,4afee0125743e8a3fa473bc583b471f3,Add ability to resend shinyapps.io application invitations (#543),1,85,FALSE,NA
rsconnect,819eae3486b1c57aceb991d402266486,Show expiration status in shinyapps.io for invitations (#543),1,86,FALSE,NA
rsconnect,5856843874f1f2bbb17455d2c8050a24,Allow shinyapps.io deployments to be private at creation time (#403),1,87,FALSE,NA
rsconnect,7167eef90e75a0c1379afa53a0599b8b,Update the minimum `openssl` version to 2.0.0 to enable publishing for users on FIPS-compliant systems without the need for API keys. (#452),1,88,FALSE,NA
rsconnect,ebdfbe304c718989988b0775cd7c885f,"Added Quarto support to `writeManifest`, which requires passing the absolute path to a Quarto executable to its new `quarto` parameter",1,89,FALSE,NA
rsconnect,506586e1cea26726f6b6f42869836b88,Added `quarto` parameter to `deployApp` to enable deploying Quarto documents and websites by supplying the path to a Quarto executable,1,90,FALSE,NA
rsconnect,8103be51f429b09868b23dc3dcc83c44,Added support for deploying Quarto content that uses only the `jupyter` runtime,1,91,FALSE,NA
rsconnect,c4983af3b4a67da473dc5e4dda232914,Added support for selecting a target `image` in the bundle manifest,1,92,FALSE,NA
rsconnect,b3f6c5c7984123e5af8d036c38489cbe,The `showLogs` function takes a `server` parameter. (#57),1,93,FALSE,NA
rsconnect,d04623aff07ab8f2177ca8e70edd09f7,"Added the `rsconnect.tar` option, which can be used to specify the path to a `tar` implementation instead of R's internal implementation. The previous method, using the `RSCONNECT_TAR` environment variable, still works, but the new option will take precedence if both are set.",1,94,FALSE,NA
rsconnect,c51a9fbfb033853537419b62664f926b,Use the `curl` option `-T` when uploading files to avoid out of memory errors with large files. (#544),1,95,FALSE,NA
rsconnect,cf3bfb4c265c055e3414e880a97dfaa3,"The `rsconnect.max.bundle.size` and `rsconnect.max.bundle.files` options are enforced when processing an enumerated set of files. Previously, these limits were enforced only when bundling an entire content directory. (#542)",1,96,FALSE,NA
rsconnect,6e22f9239f0490c83874cda582c1cd94,"Preserve file time stamps when copying files into the bundle staging directory, which then propagates into the created tar file. (#540)",1,97,FALSE,NA
rsconnect,d9fe1498025b1f1c4c61e471bf0a8feb,Configuration directories align with CRAN policy and use the location named by `tools::R_user_dir`. Configuration created by earlier versions of this package is automatically migrated to the new location. (#550),1,98,FALSE,NA
rsconnect,1609d888de2d8fa8380af67558c8f832,Added support for publishing Quarto documents and websites,1,99,FALSE,NA
rsconnect,d8edc1880df1b1c4c6821ca344852e4b,Added support for `.rscignore` file to exclude files or directories from publishing (#368),1,100,FALSE,NA
rsconnect,58460306a1773ceb247d9244e61b0b8a,Fixed issue causing missing value errors when publishing content containing filenames with extended characters (#514),1,101,FALSE,NA
rsconnect,44c52746006f69688b6c96673dc92fa6,Fixed issue preventing error tracebacks from displaying (#518),1,102,FALSE,NA
rsconnect,0649ae95e3e7d689833688c2c96b065e,Fixed issue causing configuration directory to be left behind after `R CMD CHECK`,1,103,FALSE,NA
rsconnect,6363e7a11969bad040e963b24e7445ff,Fixed incorrect subdirectory nesting when storing configuration in `R_USER_CONFIG_DIR`,1,104,FALSE,NA
rsconnect,57c5652d97a2aba665775b6e8eabf672,Added linter for different-case Markdown links (#388),1,105,FALSE,NA
rsconnect,84667292d906b6f9d7e383322988ebbd,"Use new Packrat release on CRAN, 0.6.0 (#501)",1,106,FALSE,NA
rsconnect,70ddb70249ea9f2093150fde70933f39,Fix incorrect linter messages referring to `shiny.R` instead of `server.R` (#509),1,107,FALSE,NA
rsconnect,bfcfab6f2b861bca06cca54d271f1083,"Warn, rather than err, when the repository URL for a package dependency cannot be validated. This allows deployment when using archived CRAN packages, or when using packages installed from source that are available on the server. (#508)",1,108,FALSE,NA
rsconnect,db4f8887bc91b2555a2cbd76c954d509,Err when the app-mode cannot be inferred; seen with empty directories/file-sets (#512),1,109,FALSE,NA
rsconnect,af857c08cc9f2286847fbacaf9a3562d,Add `verbose` option to `writeManifest` utility (#468),1,110,FALSE,NA
rsconnect,b83989b598d96ca92d01fadedb23ae2b,Fixed issue where setting `options(rsconnect.http.trace.json = TRUE)` could cause deployment errors with some HTTP transports (#490),1,111,FALSE,NA
rsconnect,92b44ab471fc945f7053fb8200b89221,Improve how large bundles (file size and count) are detected (#464),1,112,FALSE,NA
rsconnect,5369dbefa78ab7dddac2401d07c0413e,The `RSCONNECT_TAR` environment variable can be used to select the tar implementation used to create bundles (#446),1,113,FALSE,NA
rsconnect,d3308fd533624ad42b134af55caae36e,"Warn when files are owned by users or groups with long names, as this can cause the internal R tar implementation to produce invalid archives (#446)",1,114,FALSE,NA
rsconnect,02db031bd3d4d934119cda123f8ddd1e,Add support for syncing the deployment metadata with the server (#396),1,115,FALSE,NA
rsconnect,53ea1fedd968a78dd04fb6dfda4116e7,Insist on ShinyApps accounts in `showUsers()` (#398),1,116,FALSE,NA
rsconnect,71b7933aef83415d52f4b7e56c9e6bc1,Improve the regex used for the browser and browseURL lints to include a word boundary (#400),1,117,FALSE,NA
rsconnect,37c68b8a48750e0d9628865818bf60aa,Fixed bug where `connectApiUser()` did not set a user id (#407),1,118,FALSE,NA
rsconnect,c0c5ad26b1c0eb68bfab6838b371720f,New arguments to `deployApp` to force the generation of a Python environment file or a `requirements.txt` file (#409),1,119,FALSE,NA
rsconnect,94d71b7b2d2b8ee94545b052377fac6d,Fail when no repository URL is available for a dependent package (#410),1,120,FALSE,NA
rsconnect,002743efe1c882075b258415c2995147,"Fix error when an old version of a package is installed and a current version isn't available (#431, #436)",1,121,FALSE,NA
rsconnect,abe1a05386f47bc3f1b890531ca9107b,"Fix error where packages couldn't be found with nonstandard contrib URLs. (#451, #457)",1,122,FALSE,NA
rsconnect,8a9b02dd1a627e148d0bcb94917435e0,Improve detection of Shiny R Markdown files when `server.R` is present (#461),1,123,FALSE,NA
rsconnect,34de9f9f0d9276a4a8e04b113458432a,Fix failure to write manifest when package requires a newer R version than the active version (#467),1,124,FALSE,NA
rsconnect,9420e4171373a5265995ecec0fd2b6cd,Increase default HTTP timeout on non-Windows platforms (#476),1,125,FALSE,NA
rsconnect,433647ddcd76a7ff5559097868788f1f,Require `packrat` 0.5 or later (#434),1,126,FALSE,NA
rsconnect,79a3e96c5941ef3d8772feac0a135a45,"Fix error when handling empty application / content lists (#417, #395)",1,127,FALSE,NA
rsconnect,63fb7b2ab162c37416c97e4e1389ec81,Calls to `writeManifest()` no longer reference `packrat` files in the generated `manifest.json`. The `packrat` entries were transient and only existed while computing dependencies. (#472),1,128,FALSE,NA
rsconnect,a65418ec09bcd924d82696e9dfdab055,Fix `applications` when ShinyApps does not return `size` details (#496),1,129,FALSE,NA
rsconnect,e2eaf406fc98c0534e5f29e25f0610cb,GitLab is seen as a valid SCM source (#491),1,130,FALSE,NA
rsconnect,c6ce0c71ec6145bf3e86b70faa5a4940,Prevent attempts to deploy Connect applications without uploading (#145),1,131,FALSE,NA
rsconnect,4c50d46e3829f2f242d15e96cf3e68f1,Flag usage of `browser()` debugging calls when deploying (#196),1,132,FALSE,NA
rsconnect,42d782b4284f0016bc7d186c79fde1a7,Prevent accidental deployment of Plumber APIs to shinyapps.io (#204),1,133,FALSE,NA
rsconnect,c34d626e6a44ed5f337c53b5dd670fb5,Allow `appId` and other global deployment parameters to `deploySite` (#231),1,134,FALSE,NA
rsconnect,ba10687ca2505e539b091e0bf895f6a2,Fix error when running `deployments()` without any registered accounts (#261),1,135,FALSE,NA
rsconnect,1edccffca0ffcea8c2ae7f44bf1a4a9d,Omit `renv` files from deployment bundle (#367),1,136,FALSE,NA
rsconnect,245efef905785b4c10b6b85765362e9a,Fix failure to deploy in Packrat projects (#370),1,137,FALSE,NA
rsconnect,1c2c3958e6580d5892a8277c882eb609,Fix issue deploying when a package exists in multiple repos (#372),1,138,FALSE,NA
rsconnect,53fe74f11f5301f8b9c2c9588f87120b,Honor `RETICULATE_PYTHON` when writing manifests (#374),1,139,FALSE,NA
rsconnect,e0db59ec4611e7613f0af0ede64b2c5f,Add `on.failure` user hook to run a function when `deployApp()` fails (#375),1,140,FALSE,NA
rsconnect,985539f4e92dd03f390529e8e97eadfc,Fix error when showing non-streaming logs (#377),1,141,FALSE,NA
rsconnect,d6769bb7b6b55dc57c2723ed02cf9708,"Use internally computed MD5 sums when MD5 is disabled in FIPS mode (#378, #382)",1,142,FALSE,NA
rsconnect,bc4c6f3334a02dbe4634f14e312a59fb,Make it clearer which log entries are emitted by RStudio Connect (#385),1,143,FALSE,NA
rsconnect,f2366af093fd4b8e14008f66e7570065,"Add support for `requirements.txt` for Python, if it exists (#386)",1,144,FALSE,NA
rsconnect,cae26b0b329583ff80de3be91e2a261f,Restore compatibility with R \< 3.5 (#394),1,145,FALSE,NA
rsconnect,9d418f237a772d70f83da7ce34bdfa22,Add support for authenticating with Connect via an API key rather than a token (#393),1,146,FALSE,NA
rsconnect,810340a6bef9ec30ab4d51937ef30035,Switch from **RCurl** to **curl** as the default HTTP backend (#325),1,147,FALSE,NA
rsconnect,96798caca3be10a038727e005616d6fb,Add `purgeApp()` function to purge previously deployed shinyapps.io applications (#352),1,148,FALSE,NA
shiny,e971472d729751ba35387acb3fce71a2,"Both `conditionalPanel()` and `uiOutput()` are now styled with `display: contents` by default in Shiny apps that use Bootstrap 5. This means that the elements they contain are positioned as if they were direct children of the parent container holding the `conditionalPanel()` or `uiOutput()`. This is probably what most users intend when they use these functions, but it may break apps that applied styles directly to the container elements created by these two functions. In that case, you may include CSS rules to set `display: block` for the `.shiny-panel-conditional` or `.shiny-html-output` classes. (#3957, #3960)",1,1,FALSE,NA
shiny,a60149f62cfce15b22507ffc6c568d42,Added an console that shows some errors in the browser. Also provide better error messages for duplicate input and output bindings. (#3931),1,2,FALSE,NA
shiny,e4bbea856aec6eb58f02d8f1330bf921,"Added a new `ExtendedTask` abstraction, for long-running asynchronous tasks that you don't want to block the rest of the app, or even the rest of the session. Designed to be used with new `bslib::input_task_button()` and `bslib::bind_task_button()` functions that help give user feedback and prevent extra button clicks. (#3958)",1,3,FALSE,NA
shiny,d4c0722b94d8291bf57743d733a8244f,Notifications are now constrained to the width of the viewport for window widths smaller the default notification panel size. (#3949),1,4,FALSE,NA
shiny,0ca36974104cf3b1966e7846f47b3272,"Fixed #2392: `downloadButton()` now visibly returns its HTML tag so that it renders correctly in R Markdown and Quarto output. (Thanks to @​fennovj, #2672)",1,5,FALSE,NA
shiny,546a936d864aa2141b414e0cc2211bf5,"Closed #3899: The JS function `Shiny.bindAll()` is now asynchronous. This change is driven by the recent push toward making dynamic UI rendering asynchronous, which is necessary for shinylive (and should've happened when it was first introduced in Shiny v1.7.5). The vast majority of existing `Shiny.bindAll()` uses should continue to work as before, but some cases may break if downstream code relies on it being synchronous (i.e., blocking the main thread). In this case, consider placing any downstream code in a `.then()` callback (or `await` the result in a `async` function). (#3929)",1,6,FALSE,NA
shiny,546a936d864aa2141b414e0cc2211bf5,"• Since `renderContent()` calls `bindAll()` (after it inserts content), it now returns a `Promise<void>` instead of `void`, which can be useful if downstream code needs to wait for the binding to complete.",2,7,FALSE,"Closed #3899: The JS function `Shiny.bindAll()` is now asynchronous. This change is driven by the recent push toward making dynamic UI rendering asynchronous, which is necessary for shinylive (and should've happened when it was first introduced in Shiny v1.7.5). The vast majority of existing `Shiny.bindAll()` uses should continue to work as before, but some cases may break if downstream code relies on it being synchronous (i.e., blocking the main thread). In this case, consider placing any downstream code in a `.then()` callback (or `await` the result in a `async` function). (#3929)"
shiny,4855373c85edd6118565f6d52814a268,"Updated `selectizeInput()`'s selectize.js dependency from v0.12.4 to v0.15.2. In addition to many bug fixes and improvements, this update also adds several new plugin options. (#3875)",1,8,FALSE,NA
shiny,26d92c6411920c8215b098fbdd89efbf,"Shiny's CSS styling (for things like `showNotification()`, `withProgress()`, `inputPanel()`, etc.), has been updated with `{bslib}`'s upcoming CSS-only dark mode feature in mind. (#3882, #3914)",1,9,FALSE,NA
shiny,5aa108c1d711ad2e18b21c2b69960114,"Default styles for `showNotification()` were tweaked slightly to improve accessibility, sizing, and padding. (#3913)",1,10,FALSE,NA
shiny,814d542d7c072e92f3a94a34b9c604d6,"Shiny inputs and `{htmlwidgets}` are no longer treated as draggable inside of `absolutePanel()`/`fixedPanel()` with `draggable = TRUE`. As a result, interactions like zooming and panning now work as expected with widgets like `{plotly}` and `{leaflet}` when they appear in a draggable panel. (#3752, #3933)",1,11,FALSE,NA
shiny,dfb5ed26bd6b9dfa40469c8067ac974c,"For `InputBinding`s, the `.receiveMessage()` method can now be asynchronous or synchronous (previously it could only be synchronous). (#3930)",1,12,FALSE,NA
shiny,64dc26c4e6d2ee23cc12f039dcee3f1f,`fileInput()` no longer has unwanted round corners applied to the `buttonLabel`. (#3879),1,13,FALSE,NA
shiny,21280aba4c5e72d9e9c4a1d314fc8943,Fixed #3898: `wrapFunctionLabel()` no longer throws an error if the `name` is longer than 10000 bytes. (#3903),1,14,FALSE,NA
shiny,d29eeccfa3e928d74d7224c171a6ffe1,"On r-devel (R \> 4.3.1), `isTruthy(NULL)` now returns `FALSE` (as it does with older versions of R). (#3906)",1,15,FALSE,NA
shiny,098810c4b9f9ce29c5e9a40d4e99f313,"For `reactiveValues()` objects, whenever the `$names()` or `$values()` methods are called, the keys are now returned in the order that they were inserted. (#3774)",1,16,FALSE,NA
shiny,6cd20aa63f1b8435dd476385e9c81d29,"The value provided to `options(shiny.json.digits)` is now interpreted as number of *digits after the decimal* instead of *significant digits*. To treat the value as significant digits, wrap it in `I()` (e.g., `options(shiny.json.digits = I(4))`). This new default behavior not only helps with reducing digits in testing snapshots, but is also more consistent with `{jsonlite}`'s default behavior. (#3819)",1,17,FALSE,NA
shiny,ec9abeae560d01c5ab7bef79926af0f6,"Closed #789: Dynamic UI is now rendered asynchronously, thanks in part to the newly exported `Shiny.renderDependenciesAsync()`, `Shiny.renderHtmlAsync()`, and `Shiny.renderContentAsync()`. Importantly, this means `<script>` tags are now loaded asynchronously (the old way used `XMLHttpRequest`, which is synchronous). In addition, `Shiny` now manages a queue of async tasks (exposed via `Shiny.shinyapp.taskQueue`) so that order of execution is preserved. (#3666)",1,18,FALSE,NA
shiny,7b59f8c14f69dcb9dab51dd46a23ab40,"Fixes #3840: `updateSliderInput()` now warns when attempting to set invalid `min`, `max`, or `value` values. Sending an invalid update message to an input no longer causes other update messages to fail. (#3843)",1,19,FALSE,NA
shiny,fed3af47671562b5d4efe951c78a8b56,`sliderInput()` now has a larger target area for clicking or tapping on the slider handle or range. (#3859),1,20,FALSE,NA
shiny,e61d7718320523ef58238cb3b9e7e142,"Closed #2956: Component authors can now prevent Shiny from creating an input binding on specific elements by adding the `data-shiny-no-bind-input` attribute to the element. The attribute may have any or no value; its presence will prevent binding. This feature is primarily useful for input component authors who want to use standard HTML input elements without causing Shiny to create an input binding for them. Additionally, Shiny now adds custom classes to its inputs. For example, `checkboxInput()` now has a `shiny-input-checkbox` class. These custom classes may be utilized in future updates to Shiny's input binding logic. (#3861)",1,21,FALSE,NA
shiny,0b38b6838b4a85c49ca93bfbee04ac9b,`Map` objects are now initialized at load time instead of build time. This avoids potential problems that could arise from storing `fastmap` objects into the built Shiny package. (#3775),1,22,FALSE,NA
shiny,a72340705b3780862aee0d06f0b6fe79,Fixed #3771: Sometimes the error `ion.rangeSlider.min.js: i.stopPropagation is not a function` would appear in the JavaScript console. (#3772),1,23,FALSE,NA
shiny,f2e0c6250f2ed077fa9eec872668d6e0,"Fixed #3833: When `width` is provided to `textAreaInput()`, we now correctly set the width of the `<textarea>` element. (#3838)",1,24,FALSE,NA
shiny,5cfc4fb35ad330d90a0686578d4be221,"Closed #3849: In R-devel, a warning was raised when Shiny was loaded because `as.numeric_version()` was called with a number instead of a string. (#3850)",1,25,FALSE,NA
shiny,8271f04f69f87171572cf74e472a7fba,"Closed #3719: Output container sizes, which are available via `session$clientData` and `getCurrentOutputInfo()`, no longer round to the nearest pixel (i.e., they are now more exact, possibly fractional values). (#3720)",1,26,FALSE,NA
shiny,749615211dbea6a5b19e90d1a78ef298,"Closed #3704, #3735, and #3740: `renderPlot()` no longer generates an error (or segfault) when it executes before the output is visible. Instead, it'll now use the graphics device's default size for it's initial size. Relatedly, `plotPNG()` now ignores `NULL` values for `width`/`height` (and uses the device's default `width`/`height` instead). (#3739)",1,27,FALSE,NA
shiny,3404fc164c7a172d5a533c4935770e71,"`plotOutput()`, `imageOutput()`, and `uiOutput()` gain a `fill` argument. If `TRUE` (the default for `plotOutput()`), the output container is allowed to grow/shrink to fit a fill container (created via `htmltools::bindFillRole()`) with an opinionated height. This means `plotOutput()` will grow/shrink by default inside of `bslib::card_body_fill()`, but `imageOutput()` and `uiOutput()` will have to opt-in to similar behavior with `fill = TRUE`. (#3715)",1,28,FALSE,NA
shiny,4e2739a2540c035e73059b2615a33de5,Closed #3687: Updated jQuery-UI to v1.13.2. (#3697),1,29,FALSE,NA
shiny,aa0112bc8fe1e137ae03ef96c3a2cc41,Internal: Added clearer and strict TypeScript type definitions (#3644),1,30,FALSE,NA
shiny,3fb8595dd151ec714c3124bf5372d695,"Shiny 1.7.0 changed the `icon(lib=""fontawesome"")` implementation from a bundled copy of fontawesome, to the {fontawesome} package. This led to issue #3688, where icons that were previously working, were now breaking. That's because {fontawesome} 0.3.0 and earlier did not have support for icon names used in Font Awesome 5 and earlier, only the newest icon names used in Font Awesome 6. Now, {fontawesome} 0.4.0 has restored support for those older icon names, and Shiny 1.7.2.1 has updated its {fontawesome} requirement to \>=0.4.0.",1,31,FALSE,NA
shiny,3ebe061dc1cadc0dfbb10aed3bdf0ff1,"Closed #3626: `renderPlot()` (and `plotPNG()`) now uses `ragg::agg_png()` by default when the `{ragg}` package is installed. To restore the previous behavior, set `options(shiny.useragg = FALSE)`. (#3654)",1,32,FALSE,NA
shiny,b50b309389cc01b5508e8e8d57016053,Closed #1545: `insertUI()` now executes `<script>` tags. (#3630),1,33,FALSE,NA
shiny,9d1ca05264eb27e6f2639a5afd59c83c,"`fileInput()` can set the `capture` attribute to facilitates user access to a device's media capture mechanism, such as a camera, or microphone, from within a file upload control (W3C HTML Media Capture). (Thanks to khaled-alshamaa, #3481)",1,34,FALSE,NA
shiny,a6dcfa6456696684f5854bd3511ac531,"Closed tidyverse/dplyr#5552: Compatibility of dplyr 1.0 (and rlang chained errors in general) with `req()`, `validate()`, and friends.",1,35,FALSE,NA
shiny,c3e38658a2d8dc4efa903218eabf974f,Closed tidyverse/dplyr#6154: Values from an `actionButton()` had S3 classes in the incorrect order.,1,36,FALSE,NA
shiny,c1740a86110b5ba2745bb85d96de7bc3,"Closed #3346: Default for `ref` input in `runGithub()` changed from `""master""` to `""HEAD""`. (#3564)",1,37,FALSE,NA
shiny,ef80017cb7d423ea35e513026da6d1eb,"Closed #3619: In R 4.2, `splitLayout()` no longer raises warnings about incorrect length in an `if` statement. (Thanks to @​dmenne, #3625)",1,38,FALSE,NA
shiny,a33bfc3b39b4a5dc3774ff26c1f43957,"Closed #3250:`{rlang}`/`{tidyeval}` conditions (i.e., warnings and errors) are no longer filtered from stack traces. (#3602)",1,39,FALSE,NA
shiny,2a597165afcde3baa9cc4dd9c13a5335,Closed #3581: Errors in throttled/debounced reactive expressions no longer cause the session to exit. (#3624),1,40,FALSE,NA
shiny,4695d85f698e2225fcf8c2845698a4c9,"Closed #3657: `throttle.ts` and the `Throttler` typescript objects it provides now function as intended. (Thanks gto @​dvg-p4, #3659)",1,41,FALSE,NA
shiny,e80a4ba97ba9f4d77231434d996e00a4,"The auto-reload feature (`options(shiny.autoreload=TRUE)`) was not being activated by `devmode(TRUE)`, despite a console message asserting that it was. (#3620)",1,42,FALSE,NA
shiny,8990ee42a4f28b7d3d09c21b46e590b0,"Closed #2297: If an error occurred in parsing a value in a bookmark query string, an error would be thrown and nothing would be restored. Now a message is displayed and that value is ignored. (Thanks to @​daattali, #3385)",1,43,FALSE,NA
shiny,9c77b79f606763ffedaf92b3e97adf60,Restored the previous behavior of automatically guessing the `Content-Type` header for `downloadHandler` functions when no explicit `contentType` argument is supplied. (#3393),1,44,FALSE,NA
shiny,62b615c2cd3772cb7784703f644ff603,"Previously, updating an input value without a corresponding Input binding element did not trigger a JavaScript `shiny:inputchanged` event. Now, if no Input binding element is found, the `shiny:inputchanged` event is triggered on `window.document`. (#3584)",1,45,FALSE,NA
shiny,7b85404ea2b6ad47bf700038c0dbe761,"Closed #2955: Input and output bindings previously attempted to use `el['data-input-id']`, but that never worked. They now use `el.getAttribute('data-input-id')` instead. (#3538)",1,46,FALSE,NA
shiny,f5d7cc83af16ff37497a456f2ce718e6,"When taking a test snapshot, the sort order of the json keys of the `input`, `output`, and `export` fields is currently sorted using the locale of the machine. This can lead to inconsistent test snapshot results. To opt-in to a consistent ordering of snapshot fields with `{shinytest}`, please set the global option `options(shiny.snapshotsortc = TRUE)`. `{shinytest2}` users do not need to set this value. (#3515)",1,47,FALSE,NA
shiny,aa4b2ff3e13d4e8512dbeba5ba00c189,"Closed rstudio/shinytest2#222: When restoring a context (i.e., bookmarking) from a URL, Shiny now better handles a trailing `=` after `_inputs_` and `_values_`. (#3648)",1,48,FALSE,NA
shiny,cfc3d00d080183ae72d9867e449f5413,Shiny's internal HTML dependencies are now mounted dynamically instead of statically. (#3537),1,49,FALSE,NA
shiny,8c91fee1a665df7005f1a92ac164db8a,"HTML dependencies that are sent to dynamic UI now have better type checking, and no longer require a `dep.src.href` field. (#3537)",1,50,FALSE,NA
shiny,f23224f24e703493fe879788bd70fcca,Closed #3516: Fix regression in repeated calls to `appendTab()` when `navbarMenu()` is already present within a `tabsetPanel()`/`navbarPage()`. (#3518),1,51,FALSE,NA
shiny,21afe55d2d2346502ce9d54947e075cb,Re-arranged conditions for testthat 1.0.0 compatibility. (#3512),1,52,FALSE,NA
shiny,ef0c531301ac8d3493a92061b435fa7f,The `format` and `locale` arguments to `sliderInput()` have been removed. They have been deprecated since 0.10.2.2 (released on 2014-12-08).,1,53,FALSE,NA
shiny,35d43dea5616df69708afba0bc445597,"Closed #3403: `insertTab()`'s `position` parameter now defaults to `""after""` instead of `""before""`. This has the benefit of allowing us to fix a bug in positioning when `target = NULL`, but has the drawback of changing the default behavior when `target` is not `NULL`. (#3404)",1,54,FALSE,NA
shiny,15f3dbd933180b4489d2f2d3e0835025,Bootstrap 5 support. (#3410 and rstudio/bslib#304),1,55,FALSE,NA
shiny,15f3dbd933180b4489d2f2d3e0835025,"• As explained here, to opt-in to Bootstrap 5, provide `bslib::bs_theme(version = 5)` to a page layout function with a `theme` argument (e.g., `fluidPage()`, `navbarPage()`, etc).",2,56,FALSE,Bootstrap 5 support. (#3410 and rstudio/bslib#304)
shiny,dabf9266808d31d06dd652aa62588aab,"Closed #3322, #3313, #1823, #3321, #3320, #1928, and #2310: Various improvements to `navbarPage()`, `tabsetPanel()`, `tabPanel()`, `navbarMenu()`, etc. Also, these functions are now powered by the `{bslib}` package's new `nav()` API (consider using `{bslib}`'s API to create better looking and more fully featured navs). (#3388)",1,57,FALSE,NA
shiny,68d367e347088d52d41dcda09709f8a3,"All uses of `list(...)` have been replaced with `rlang::list2(...)`. This means that you can use trailing `,` without error and use rlang's `!!!` operator to ""splice"" a list of argument values into `...`. We think this'll be particularly useful for passing a list of `tabPanel()` to their consumers (i.e., `tabsetPanel()`, `navbarPage()`, etc). For example, `tabs <- list(tabPanel(""A"", ""a""), tabPanel(""B"", ""b"")); navbarPage(!!!tabs)`. (#3315 and #3328)",1,58,FALSE,NA
shiny,e183d1b081b62967312daa61f2c25dac,`installExprFunction()` and `exprToFunction()` are now able to handle quosures when `quoted = TRUE`. So `render`-functions which call these functions (such as with `htmlwidgets`) can now understand quosures. Users can also use `rlang::inject()` to unquote a quosure for evaluation. This also means that `render` function no longer need `env` and `quoted` parameters; that information can be embedded into a quosure which is then passed to the `render` function. Better documentation was added for how to create `render` functions. (#3472),1,59,FALSE,NA
shiny,b498ac119e24a55337a60c3003bed38e,"`icon(lib=""fontawesome"")` is now powered by the `{fontawesome}` package, which will make it easier to use the latest FA icons in the future (by updating the `{fontawesome}` package). (#3302)",1,60,FALSE,NA
shiny,7fe83733752d1e1b9b64a10dfb6e2d40,Closed #3397: `renderPlot()` new uses `ggplot2::get_alt_text()` to inform an `alt` text default (for `{ggplot2}` plots). (#3398),1,61,FALSE,NA
shiny,81c96148f7df878d557fae054ffae235,"`modalDialog()` gains support for `size = ""xl""`. (#3410)",1,62,FALSE,NA
shiny,3d24c8efe9fd004309b5eb6de42d17c2,"Addressed #2521: Updated the list of TCP ports that will be rejected by default in runapp.R, adding 5060, 5061 and 6566. Added documentation describing the port range (3000:8000) and which ports are rejected. (#3456)",1,63,FALSE,NA
shiny,86a3e4e37520c3bded3d53cf84e3fea4,"Shiny's core JavaScript code was converted to TypeScript. For the latest development information, please see the README.md in `./srcts`. (#3296)",1,64,FALSE,NA
shiny,f4433abda7efd7baf7b858dfd0e68116,Switched from `digest::digest()` to `rlang::hash()` for hashing. (#3264),1,65,FALSE,NA
shiny,bd5262750d6aaebea903e780aad86739,"Switched from internal `Stack` class to `fastmap::faststack()`, and used `fastmap::fastqueue()`. (#3176)",1,66,FALSE,NA
shiny,e1c1f736fe7196d282dd97cdb551d099,Some long-deprecated functions and function parameters were removed. (#3137),1,67,FALSE,NA
shiny,ff7f69894abc0e1d32f0980cdc67b0ff,Closed #3345: Shiny now correctly renders `htmltools::htmlDependency()`(s) with a `list()` of `script` attributes when used in a dynamic UI context. This fairly new `htmlDependency()` feature was added in `{htmltools}` v0.5.1. (#3395),1,68,FALSE,NA
shiny,bb43f99c74cf14b88751aecbadb68d59,Fixed #2666 and #2670: `nearPoints()` and `brushedPoints()` weren't properly account for missing values (#2666 was introduced in v1.4.0). (#2668),1,69,FALSE,NA
shiny,7251bc29de60296a306c46794295dcf0,"Closed #3374: `quoToFunction()` now works correctly with nested quosures; and as a result, quasi-quotation with rendering function (e.g., `renderPrint()`, `renderPlot()`, etc) now works as expected with nested quosures. (#3373)",1,70,FALSE,NA
shiny,0b87efa4c5c299943c7bd1b194eacd92,Exported `register_devmode_option()`. This method was described in the documentation for `devmode()` but was never exported. See `?devmode()` for more details on how to register Shiny Developer options using `register_devmode_option()`. (#3364),1,71,FALSE,NA
shiny,9fc4db1a0f32a7ebd5230e8aef89706c,"Closed #3484: In the RStudio IDE on Mac 11.5, selected checkboxes and radio buttons were not visible. (#3485)",1,72,FALSE,NA
shiny,c7ae84a3e6f854e8d2ce9574e0693cfd,Closed #3286: Updated to Font-Awesome 5.15.2. (#3288),1,73,FALSE,NA
shiny,9f5d83d9da10d9034b4ebfb2a46bfa35,Updated to jQuery 3.6.0. (#3311),1,74,FALSE,NA
shiny,f409efe3de0f37ab4b826df16d28cb5c,"The `theme` argument of `fluidPage()`, `navbarPage()`, and `bootstrapPage()` all now understand `bslib::bs_theme()` objects, which can be used to opt-into Bootstrap 4, use any Bootswatch theme, and/or implement custom themes without writing any CSS.",1,75,FALSE,NA
shiny,66e77efd6a7cc23bd0137431d2506d55,"The `session` object now includes `$setCurrentTheme()` and `$getCurrentTheme()` methods to dynamically update (or obtain) the page's `theme` after initial load, which is useful for things such as adding a dark mode switch to an app or some other ""real-time"" theming tool like `bslib::bs_themer()`.",1,76,FALSE,NA
shiny,6aaac09e7e18fc08c6e238e7ba13e5e5,"For more details, see `{bslib}`'s website",1,77,FALSE,NA
shiny,e42cc9c767f2e46bb4138239621060ab,"Such expressions automatically cache their *most recent value*, which helps to avoid redundant computation within a single ""flush"" of reactivity. The new `bindCache()` function can be used to cache *all previous values* (as long as they fit in the cache). This cache may be optionally scoped within and/or across user sessions, possibly leading to huge performance gains, especially when deployed at scale across user sessions.",1,78,FALSE,NA
shiny,66bca6ea1be55d1d172fb5a42df80da5,"For more details, see `help(bindCache, package = ""shiny"")`",1,79,FALSE,NA
shiny,d70cc968b4575931dbcdacf91671380e,"For more details, see the accessibility section below.",1,80,FALSE,NA
shiny,f190c1ba5e41120f4b5df16d4a8596d4,Closed #3074: Shiny no longer supports file uploads for Internet Explorer 8 or 9. (#3075),1,81,FALSE,NA
shiny,ed9f3c19ba795e8d31c4e3b85aaa6de3,"Subtle changes, and some soft-deprecations, have come to `freezeReactiveValue` and `freezeReactiveVal` (#3055). These functions have been fragile at best in previous releases (issues #1791, #2463, #2946). In this release, we've solved all the problems we know about with `freezeReactiveValue(input, ""x"")`, by 1) invalidating `input$x` and set it to `NULL` whenever we freeze, and 2) ensuring that, after a freeze, even if the effect of `renderUI` or `updateXXXInput` is to set `input$x` to the same value it already has, this will result in an invalidation (whereas by default, Shiny filters out such spurious assignments). Similar problems may exist when using `freezeReactiveVal`, and when using `freezeReactiveValue` with non-`input` reactive values objects. But support for those was added mostly for symmetry with `freezeReactiveValue(input)`, and given the above issues, it's not clear to us how you could have used these successfully in the past, or why you would even want to. For this release, we're soft-deprecating both of those uses, but we're more than willing to un-deprecate if it turns out people are using these; if that includes you, please join the conversation at https://github.com/rstudio/shiny/issues/3063. In the meantime, you can squelch the deprecation messages for these functions specifically, by setting `options(shiny.deprecation.messages.freeze = FALSE)`.",1,82,FALSE,NA
shiny,c2e5050979b1896f9c537d9229f9c198,"Added bootstrap accessibility plugin under the hood to improve accessibility of shiny apps for screen-reader and keyboard users: the enhancements include better navigations for alert, tooltip, popover, modal dialog, dropdown, tab Panel, collapse, and carousel elements. (#2911)",1,83,FALSE,NA
shiny,0e4a94efdaf1de08d71afc3d783836ab,"Closed #2987: Improved accessibility of ""live regions"" -- namely, `*Output()` bindings and `update*Input()`. (#3042)",1,84,FALSE,NA
shiny,b7d815ce2ea4f4e434c9c3faf71234b8,"Added appropriate labels to `icon()` element to provide screen-reader users with alternative descriptions for the `fontawesome` and `glyphicon`: `aria-label` is automatically applied based on the fontawesome name. For example, `icon(""calendar"")` will be announced as ""calendar icon"" to screen readers. ""presentation"" aria role has also been attached to `icon()` to remove redundant semantic info for screen readers. (#2917)",1,85,FALSE,NA
shiny,9c3b711baa2a62cdfa977d1a1b10ac29,Closed #2929: Fixed keyboard accessibility for file picker button: keyboard users can now tab to focus on `fileInput()` widget. (#2937),1,86,FALSE,NA
shiny,9a5165b60b1b2ef214caae2c74d7757e,Fixed #2951: screen readers correctly announce labels and date formats for `dateInput()` and `dateRangeInput()` widgets. (#2978),1,87,FALSE,NA
shiny,b22d1e5111741a9b4318c9b60f2e06a4,"Closed #2847: `selectInput()` is reasonably accessible for screen readers even when `selectize` option is set to TRUE. To improve `selectize.js` accessibility, we have added selectize-plugin-a11y by default. (#2993)",1,88,FALSE,NA
shiny,b6b227b9816b5c2217df48f64016629c,"Closed #612: Added `alt` argument to `renderPlot()` and `renderCachedPlot()` to specify descriptive texts for `plotOutput()` objects, which is essential for screen readers. By default, alt text is set to the static text, ""Plot object,"" but even dynamic text can be made with reactive function. (#3006, thanks @​trafficonese and @​leonawicz for the original PR and discussion via #2494)",1,89,FALSE,NA
shiny,c1c6e177e8ea5cc2663989acdc7fca01,"Added semantic landmarks for `mainPanel()` and `sidebarPanel()` so that assistive technologies can recognize them as ""main"" and ""complementary"" region respectively. (#3009)",1,90,FALSE,NA
shiny,5079d5fba39c65632aecf5b17dc1876e,"Closed #2844: Added `lang` argument to ui `*Page()` functions (e.g., `fluidPage`, `bootstrapPage`) that specifies document-level language within the app for the accessibility of screen readers and search-engine parsers. By default, it is set to empty string which is commonly recognized as a browser's default locale. (#2920)",1,91,FALSE,NA
shiny,bbce7919ec694ce99bf713ba7b5c22e0,"Improved accessibility for `radioButtons()` and `checkboxGroupInput()`: All options are now grouped together semantically for assistive technologies. (thanks @​jooyoungseo, #3187).",1,92,FALSE,NA
shiny,4fc3e3e671adf3a950664c94844b9b91,"Added support for Shiny Developer Mode. Developer Mode enables a number of `options()` to make a developer's life easier, like enabling non-minified JS and printing messages about deprecated functions and options. See `?devmode()` for more details. (#3174)",1,93,FALSE,NA
shiny,ecfa81fa892a0c466bc11e403725caf2,New `reactiveConsole()` makes it easier to interactively experiment with reactivity at the console (#2518).,1,94,FALSE,NA
shiny,1f1dfe61e257b477633c37d3212e8ee8,"When UI is specified as a function (e.g. `ui <- function(req) { ... }`), the response can now be an HTTP response as returned from the (newly exported) `httpResponse()` function. (#2970)",1,95,FALSE,NA
shiny,ba7bfd4a4e2a582f732a2ef5d5965fea,"`selectInput` and `selectizeInput` now warn about performance implications when thousands of choices are used, and recommend server-side selectize be used instead. (#2959)",1,96,FALSE,NA
shiny,5e739961af02cc531b99951377573add,Closed #2980: `addResourcePath()` now allows paths with a leading `.` (thanks to @​ColinFay). (#2981),1,97,FALSE,NA
shiny,cfe679833c201754d4c37c463bb7bf02,Closed #2972: `runExample()` now supports the `shiny.port` option (thanks to @​ColinFay). (#2982),1,98,FALSE,NA
shiny,0636186fdcfa39d8f4901b7235d9f174,Closed #2692: `downloadButton()` icon can now be changed via the `icon` parameter (thanks to @​ColinFay). (#3010),1,99,FALSE,NA
shiny,b24945f755658a127f98e4f9592e094f,Closed #2984: improved documentation for `renderCachedPlot()` (thanks to @​aalucaci). (#3016),1,100,FALSE,NA
shiny,6e58599aaaf5ef8ca1c9d30190bebc71,`reactiveValuesToList()` will save its `reactlog` label as `reactiveValuesToList(<ID>)` vs `as.list(<ID>)` (#3017),1,101,FALSE,NA
shiny,fd86256344588638d20ae6463a436d8e,Removed unused (and non-exported) `cacheContext` class.,1,102,FALSE,NA
shiny,4a2dc5fff81a76dc2de52d539543494c,`testServer()` can accept a single server function as input (#2965).,1,103,FALSE,NA
shiny,6b699a0aa2b5c42c258c18166443c012,"`shinyOptions()` now has session-level scoping, in addition to global and application-level scoping. (#3080)",1,104,FALSE,NA
shiny,3e566399b0a6b43cdd35a9f072e69de6,`runApp()` now warns when running an application in an R package directory. (#3114),1,105,FALSE,NA
shiny,ec2911ecb7527eaaa1b1e8f280e6fd14,"Shiny now uses `cache_mem` from the cachem package, instead of `memoryCache` and `diskCache`. (#3118)",1,106,FALSE,NA
shiny,2d3a8864dd81162bd19a90c305a939ca,Closed #3140: Added support for `...` argument in `icon()`. (#3143),1,107,FALSE,NA
shiny,191e48a34cb4919d6bb1fb12a0737cfe,"Closed #629: All `update*` functions now have a default value for `session`, and issue an informative warning if it is missing. (#3195, #3199)",1,108,FALSE,NA
shiny,d671429ed3284de75532a24460aaa99b,"Improved error messages when reading reactive values outside of a reactive domain (e.g., `reactiveVal()()`). (#3007)",1,109,FALSE,NA
shiny,3d0903b2415ebba822567b944db606b0,"Fixed #1942: Calling `runApp(""app.R"")` no longer ignores options passed into `shinyApp()`. This makes it possible for Shiny apps to specify what port/host should be used by default. (#2969)",1,110,FALSE,NA
shiny,149ba320288f2ecade4d7ef08065b7a6,"Fixed #3033: When a `DiskCache` was created with both `max_n` and `max_size`, too many items could get pruned when `prune()` was called. (#3034)",1,111,FALSE,NA
shiny,3a3beb6e3e8eb7618cf5ec72cac8a8c3,"Fixed #2703: Fixed numerous issues with some combinations of `min`/`value`/`max` causing issues with `date[Range]Input()` and `updateDate[Range]Input()`. (#3038, #3201)",1,112,FALSE,NA
shiny,827b8988ba5de4d04dfa87c066a5a988,Fixed #2936: `dateYMD` was giving a warning when passed a vector of dates from `dateInput` which was greater than length 1. The length check was removed because it was not needed. (#3061),1,113,FALSE,NA
shiny,b08e2d7b8fffc7f197b7a9f271459ef5,"Fixed #2266, #2688: `radioButtons` and `updateRadioButtons` now accept `character(0)` to indicate that none of the options should be selected (thanks to @​ColinFay). (#3043)",1,114,FALSE,NA
shiny,8d15502e499dd8fbec0f91a4ffca37b4,Fixed a bug that `textAreaInput()` doesn't work as expected for relative `width` (thanks to @​shrektan). (#2049),1,115,FALSE,NA
shiny,d94ea1cfc487e2630dead5729603fd37,"Fixed #2859: `renderPlot()` wasn't correctly setting `showtext::showtext_opts()`'s `dpi` setting with the correct resolution on high resolution displays; which means, if the font was rendered by showtext, font sizes would look smaller than they should on such displays. (#2941)",1,116,FALSE,NA
shiny,bebb2b17ad830d82a48bd811231be083,"Closed #2910, #2909, #1552: `sliderInput()` warns if the `value` is outside of `min` and `max`, and errors if `value` is `NULL` or `NA`. (#3194)",1,117,FALSE,NA
shiny,e5a7c8210d8b442af8bb958928b438da,"Removed html5shiv and respond.js, which were used for IE 8 and IE 9 compatibility. (#2973)",1,118,FALSE,NA
shiny,1133e10c368b20bc3c731ced147317fa,"Removed es5-shim library, which was internally used within `selectInput()` for ECMAScript 5 compatibility. (#2993)",1,119,FALSE,NA
shiny,283fb44b681bfd068d889f511a3cb2db,"Fixed #2869: Until this release, `renderImage()` had a dangerous default of `deleteFile = TRUE`. (Sorry!) Going forward, calls to `renderImage()` will need an explicit `deleteFile` argument; for now, failing to provide one will result in a warning message, and the file will be deleted if it appears to be within the `tempdir()`. (#2881)",1,120,FALSE,NA
shiny,606c768e4aa99047678256596b310e55,"The new `shinyAppTemplate()` function creates a new template Shiny application, where components are optional, such as helper files in an R/ subdirectory, a module, and various kinds of tests. (#2704)",1,121,FALSE,NA
shiny,db8bf6483c854df4dc3e39d6f2c16676,"`runTests()` is a new function that behaves much like R CMD check. `runTests()` invokes all of the top-level R files in the tests/ directory inside an application, in that application's environment. (#2585)",1,122,FALSE,NA
shiny,bc3b4c1cc836b4d57419d5372c91a518,"`testServer()` is a new function for testing reactive behavior inside server functions and modules. (#2682, #2764, #2807)",1,123,FALSE,NA
shiny,b4a949ea5032f9f87618a2b5b3655884,The new `moduleServer` function provides a simpler interface for creating and using modules. (#2773),1,124,FALSE,NA
shiny,c04fb96e9b5a629d9de8a4aa643a5c31,Resolved #2732: `markdown()` is a new function for writing Markdown with Github extensions directly in Shiny UIs. Markdown rendering is performed by the commonmark package. (#2737),1,125,FALSE,NA
shiny,869e997a94444ea957e07901fb0448b0,"The `getCurrentOutputInfo()` function can now return the background color (`bg`), foreground color (`fg`), `accent` (i.e., hyperlink) color, and `font` information of the output's HTML container. This information is reported by `plotOutput()`, `imageOutput()`, and any other output bindings containing a class of `.shiny-report-theme`. This feature allows developers to style an output's contents based on the container's CSS styling. (#2740)",1,126,FALSE,NA
shiny,812448233bbc3152fcde8fde7dceafd1,"Fixed #2042, #2628: In a `dateInput` and `dateRangeInput`, disabled months and years are now a lighter gray, to make it easier to see that they are disabled. (#2690)",1,127,FALSE,NA
shiny,b83fac1933fa6de75f16f5f646ef690c,`getCurrentOutputInfo()` previously threw an error when called from outside of an output; now it returns `NULL`. (#2707 and #2858),1,128,FALSE,NA
shiny,1a9b83d2e0e810a5e029a29871b3a6ed,Added a label to observer that auto-reloads `R/` directory to avoid confusion when using `reactlog`. (#58),1,129,FALSE,NA
shiny,2aa42cc3ba281d612e7f8df8796cefbf,`getDefaultReactiveDomain()` can now be called inside a `session$onSessionEnded` callback and will return the calling `session` information. (#2757),1,130,FALSE,NA
shiny,59d4f517cbaeb67f8b9cf0d8a08e2c01,Added a `'function'` class to `reactive()` and `reactiveVal()` objects. (#2793),1,131,FALSE,NA
shiny,24ba7c049cf4771a098345f32bbe3a99,"Added a new option (`type = ""hidden""`) to `tabsetPanel()`, making it easier to set the active tab via other input controls (e.g., `radioButtons()`) rather than tabs or pills. Use this option in conjunction with `updateTabsetPanel()` and the new `tabsetPanelBody()` function (see `help(tabsetPanel)` for an example and more details). (#2814)",1,132,FALSE,NA
shiny,5e3d46400ab4f55939a1d45743abea3b,Added function `updateActionLink()` to update an `actionLink()` label and/or icon value. (#2811),1,133,FALSE,NA
shiny,a47900a5cb117aa92fb829714d64b007,Fixed #2856: Bumped jQuery 3 from 3.4.1 to 3.5.1. (#2857),1,134,FALSE,NA
shiny,cfe4c3889426920d2f9bae5641c06548,Fixed #2606: `debounce()` would not work properly if the code in the reactive expression threw an error on the first run. (#2652),1,135,FALSE,NA
shiny,b4ce76815f988bbcdc0435c265979568,Fixed #2653: The `dataTableOutput()` could have incorrect output if certain characters were in the column names. (#2658),1,136,FALSE,NA
shiny,a98f757efd1ee75ef017e10a81286da4,"Updated from Font-Awesome 5.3.1 to 5.13.0, which includes icons related to COVID-19. For upgrade notes, see https://github.com/FortAwesome/Font-Awesome/blob/master/UPGRADING.md. (#2891)",1,137,FALSE,NA
shiny,1845379d69e3edb4901215f95e04364a,"Resolved #2554: Upgraded jQuery from v.1.12.4 to v3.4.1 and bootstrap from v3.3.7 to v3.4.1. (#2557). Since the jQuery upgrade may introduce breaking changes to user code, there is an option to switch back to the old version by setting `options(shiny.jquery.version = 1)`. If you've hard-coded `shared/jquery[.min].js` in the HTML of your Shiny app, in order to downgrade, you'll have to change that filepath to `shared/legacy/jquery[.min].js`.",1,138,FALSE,NA
shiny,8a477e0a2bc52f23843dec586de95a7f,"Resolved #1433: `plotOutput()`'s coordmap info now includes discrete axis limits for **ggplot2** plots. As a result, any **shinytest** tests that contain **ggplot2** plots with discrete axes (that were recorded before this change) will now report differences that can safely be updated. This new coordmap info was added to correctly infer what data points are within an input brush and/or near input click/hover in scenarios where a non-trivial discrete axis scale is involved (e.g., whenever `scale_[x/y]_discrete(limits = ...)` and/or free scales across multiple discrete axes are used). (#2410)",1,139,FALSE,NA
shiny,29ff6be4d39c4581838343ad3d26ba5a,"Resolved #2402: An informative warning is now thrown for mis-specified (date) strings in `dateInput()`, `updateDateInput()`, `dateRangeInput()`, and `updateDateRangeInput()`. (#2403)",1,140,FALSE,NA
shiny,dbf111e880076c424000df64d2415eb3,"If the `shiny.autoload.r` option is set to `TRUE`, all files ending in `.r` or `.R` contained in a directory named `R/` adjacent to your application are sourced when your app is started. This will become the default Shiny behavior in a future release (#2547)",1,141,FALSE,NA
shiny,c1250c7227ce706bff0cb0d892cae32b,Resolved #2442: The `shiny:inputchanged` JavaScript event now triggers on the related input element instead of `document`. Existing event listeners bound to `document` will still detect the event due to event bubbling. (#2446),1,142,FALSE,NA
shiny,10c6bcad21d27afaa254cf3e73fbc7ae,"Fixed #1393, #2223: For plots with any interactions enabled, the image is no longer draggable. (#2460)",1,143,FALSE,NA
shiny,03f8c66b120bec818315feeab8d6f846,Resolved #2469: `renderText` now takes a `sep` argument that is passed to `cat`. (#2497),1,144,FALSE,NA
shiny,889c14876feff62acace2c774272b1bd,Added `resourcePaths()` and `removeResourcePaths()` functions. (#2459),1,145,FALSE,NA
shiny,44c4726ea58fc2a59958aa538520f508,Resolved #2433: An informative warning is now thrown if subdirectories of the app's `www/` directory are masked by other resource prefixes and/or the same resource prefix is mapped to different local file paths. (#2434),1,146,FALSE,NA
shiny,8519f0422433495836a5f470d43ca2aa,"Resolved #2478: `cmd + shift + f3` and `ctrl + shift + f3` can now be used to add a reactlog mark. If reactlog keybindings are used and the reactlog is not enabled, an error page is displayed showing how to enable reactlog recordings. (#2560)",1,147,FALSE,NA
shiny,df219ee4dd4b6f3ba56b099e1098ff16,"Partially resolved #2423: Reactivity in Shiny leaked some memory, because R can leak memory whenever a new symbols is interned, which happens whenever a new name/key is used in an environment. R now uses the fastmap package, which avoids this problem. (#2429)",1,148,FALSE,NA
shiny,0e21ca63c087cf69fa6c860d3268fb29,Fixed #2267: Fixed a memory leak with `invalidateLater`. (#2555),1,149,FALSE,NA
shiny,46f9fd2e3fd4e66013e82ba395344ddd,Fixed #1548: The `reactivePoll` function leaked an observer; that is the observer would continue to exist even if the `reactivePoll` object was no longer accessible. #2522,1,150,FALSE,NA
shiny,45709c0689d96a35d4ca4dbedff25512,Fixed #2116: Fixed an issue where dynamic tabs could not be added when on a hosted platform. (#2545),1,151,FALSE,NA
shiny,578033d03bb91a0e330419054d7c29a9,"Resolved #2515: `selectInput()` and `selectizeInput()` now deal appropriately with named factors. Note that `updateSelectInput()` and `updateSelectizeInput()` **do not** yet handle factors; their behavior is unchanged. (#2524, #2540, #2625)",1,152,FALSE,NA
shiny,11c35d0178642c9774a0ecfe4cafe323,Resolved #2471: Large file uploads to a Windows computer were slow. (#2579),1,153,FALSE,NA
shiny,28fce1b837dd247d2b1605c78541a3f0,"Fixed #2387: Updating a `sliderInput()`'s type from numeric to date no longer changes the rate policy from debounced to immediate. More generally, updating an input binding with a new type should (no longer) incorrectly alter the input rate policy. (#2404)",1,154,FALSE,NA
shiny,210be75d37f7e55eb41de968d19c2426,"Fixed #868: If an input is initialized with a `NULL` label, it can now be updated with a string. Moreover, if an input label is initialized with a string, it can now be removed by updating with `label=character(0)` (similar to how `choices` and `selected` can be cleared in `updateSelectInput()`). (#2406)",1,155,FALSE,NA
shiny,22accc2e8e853c739894e3f318b3b28e,"Fixed #2250: `updateSliderInput()` now works with un-specified (or zero-length) `min`, `max`, and `value`. (#2416)",1,156,FALSE,NA
shiny,13239bce4d2564db0229da5dd6b5ef3e,"Fixed #2396: `selectInput(""myID"", ...)` resulting in an extra `myID-selectized` input (introduced in v1.2.0). (#2418)",1,157,FALSE,NA
shiny,b1346255f77351625caeb333ee8d93c3,"Fixed #2233: `verbatimTextOutput()` produced wrapped text on Safari, but the text should not be wrapped. (#2353)",1,158,FALSE,NA
shiny,f6c8b3befcc26b87a4788f2df6b4ea11,"Fixed #2335: When `dateInput()`'s `value` was unspecified, and `max` and/or `min` was set to `Sys.Date()`, the value was not being set properly. (#2526)",1,159,FALSE,NA
shiny,39585e6c3982c04a755d61c2a8a14c75,Fixed #2591: Providing malformed date-strings to `min` or `max` no longer results in JS errors for `dateInput()` and `dateRangeInput()`. (#2592),1,160,FALSE,NA
shiny,655d874dd6ff877fd8fc070005951b99,Fixed rstudio/reactlog#36: Changes to reactive values not displaying accurately in reactlog. (#2424),1,161,FALSE,NA
shiny,46650a7f9aa2796ee50f81760e80217e,Fixed #2598: Showcase files don't appear with a wide window. (#2582),1,162,FALSE,NA
shiny,96ead496b311d71c13702c8438b6b2e9,"Fixed #2329, #1817: These bugs were reported as fixed in Shiny 1.3.0 but were not actually fixed because some JavaScript changes were accidentally not included in the release. The fix resolves issues that occur when `withProgressBar()` or bookmarking are combined with the networkD3 package's Sankey plot.",1,163,FALSE,NA
shiny,c412c6ca032a8b4a8c88ca1c204158db,Fixed #2385: Static CSS/JS resources in subapps in R Markdown documents did not render properly. (#2386),1,164,FALSE,NA
shiny,a75e50b66e74526381e225b6bfa87fe6,Fixed #2280: Shiny applications that used a www/index.html file did not serve up the index file. (#2382),1,165,FALSE,NA
shiny,c3454900df2b8d94d027ba58fd169458,Fixed a performance issue introduced in v1.3.0 when using large nested lists within Shiny. (#2377),1,166,FALSE,NA
shiny,3f85057900a79ed03444a092b0dc34d9,"Revamped Shiny's reactlog viewer which debugs reactivity within a shiny application. This allows users to traverse the reactivity history of a shiny application, filter to the dependency tree of a selected reactive object, and search for matching reactive objects. See `?reactlogShow` for more details and how to enable this feature. (#2107)",1,167,FALSE,NA
shiny,a86cc196fc912534cc6184cfd5c0c3f7,"Shiny now serves static files on a background thread. This means that things like JavaScript and CSS assets can be served without blocking or being blocked by the main R thread, and should result in significantly better performance for heavily loaded servers. (#2280)",1,168,FALSE,NA
shiny,fbd2e4a67cf65fcf8ec1078837f6a008,The `Shiny-Shared-Secret` security header is now checked using constant-time comparison to prevent timing attacks (thanks @​dirkschumacher!). (#2319),1,169,FALSE,NA
shiny,43bdbc6aae74a9a8ebc587f21adcfbdc,Fixed #2245: `updateSelectizeInput()` did not update labels. (#2248),1,170,FALSE,NA
shiny,8c84d25e9d5bccca5095405aacc101f3,"Fixed #2308: When restoring a bookmarked application, inputs with a leading `.` would not be restored. (#2311)",1,171,FALSE,NA
shiny,507a0545ffff68ce0324b67d47016378,"Fixed #2305, #2322, #2351: When an input in dynamic UI is restored from bookmarks, it would keep getting set to the same value. (#2360)",1,172,FALSE,NA
shiny,4a15cbc4549c0c55611e6fa524b68976,"Fixed #2349, #2329, #1817: These were various bugs triggered by the presence of the networkD3 package's Sankey plot in an app. Impacted features included `dateRangeInput`, `withProgressBar`, and bookmarking (#2359)",1,173,FALSE,NA
shiny,d36b083a2da5fbf971f080eed0849848,"Fixed #2247: `renderCachedPlot` now supports using promises for either `expr` or `cacheKeyExpr`. (Shiny v1.2.0 supported async `expr`, but only if `cacheKeyExpr` was async as well; now you can use any combination of sync/async for `expr` and `cacheKeyExpr`.) #2261",1,174,FALSE,NA
shiny,23ce4d2901f2085b445d3749099bc7aa,"The URL paths for FontAwesome CSS/JS/font assets have changed, due to our upgrade from FontAwesome 4 to 5. This shouldn't affect you unless you're using `www/index.html` to provide your UI and have hardcoded the old FontAwesome paths into your HTML. If that's you, consider switching to HTML templates, which give you the syntax of raw HTML while still taking advantage of Shiny's automatic management of web dependencies.",1,175,FALSE,NA
shiny,268d541ac27351db63a5ba290da1772d,"Added `renderCachedPlot()`, which stores plots in a cache so that they can be served up almost instantly. (#1997)",1,176,FALSE,NA
shiny,1c9cba9b2babad9f3fe7e773742abd1c,"Upgrade FontAwesome from 4.7.0 to 5.3.1 and made `icon` tags browsable, which means they will display in a web browser or RStudio viewer by default (#2186). Note that if your application or library depends on FontAwesome directly using custom CSS, you may need to make some or all of the changes recommended in Upgrade from Version 4. Font Awesome icons can also now be used in static R Markdown documents.",1,177,FALSE,NA
shiny,fa0dc8c0bec27092170a5300583603db,"Address #174: Added `datesdisabled` and `daysofweekdisabled` as new parameters to `dateInput()`. This resolves #174 and exposes the underlying arguments of Bootstrap Datepicker. `datesdisabled` expects a character vector with values in `yyyy/mm/dd` format and `daysofweekdisabled` expects an integer vector with day interger ids (Sunday=0, Saturday=6). The default value for both is `NULL`, which leaves all days selectable. Thanks, @​nathancday! (#2147)",1,178,FALSE,NA
shiny,22621458863e86f658be101bbbb1814b,"Support for selecting variables of a data frame with the output values to be used within tidy evaluation. Added functions: `varSelectInput`, `varSelectizeInput`, `updateVarSelectInput`, `updateVarSelectizeInput`. (#2091)",1,179,FALSE,NA
shiny,fa1c055756ca6e1b3dd501c5f7e51fb8,Addressed #2042: dates outside of `min`/`max` date range are now a lighter shade of grey to highlight the allowed range. (#2087),1,180,FALSE,NA
shiny,5a9ea5989636b3e1ab0eb5520ee024de,Added support for plot interaction when the plot is scaled. (#2125),1,181,FALSE,NA
shiny,3f07fd4883046398598bf07a61532a4d,Fixed #1933: extended server-side selectize to lists and optgroups. (#2102),1,182,FALSE,NA
shiny,077b979a9eb6054ed0152f715d325e7d,Added namespace support when freezing reactiveValue keys. #2080,1,183,FALSE,NA
shiny,948ee59ea4cbc5a116fa8095efcc6369,Upgrade selectize.js from 0.12.1 to 0.12.4 #2028,1,184,FALSE,NA
shiny,8eb7c2f06942a8e4ab85d8faa956c87b,"Addressed #2079: Added `coords_img`, `coords_css`, and `img_css_ratio` fields containing x and y location information for plot brush, hover, and click events. #2183",1,185,FALSE,NA
shiny,973c8b7718deacc0ebc99b72c7cfd6e4,"Fixed #2033: RStudio Viewer window not closed on `shiny::stopApp()`. Thanks, @​vnijs! #2047",1,186,FALSE,NA
shiny,a49f572d2dc4cf0f69f47395642fecc9,Fixed #1935: correctly returns plot coordinates when using outer margins. (#2108),1,187,FALSE,NA
shiny,cf8ce1d4202504fca3f4d021db55d9e9,Resolved #2019: `updateSliderInput` now changes the slider formatting if the input type changes. (#2099),1,188,FALSE,NA
shiny,7191f5922b082f51a60836d7903fcf42,Fixed #2138: Inputs that are part of a `renderUI` were no longer restoring correctly from bookmarked state. #2139,1,189,FALSE,NA
shiny,c92aa392a3d8e56685ebabc31d46a2fd,"The `knit_print` methods from htmltools are no longer imported into shiny and then exported. Also, shiny's `knit_print` methods are no longer exported. #2166",1,190,FALSE,NA
shiny,e53c3ffe7fa66d731d0faa15c27ade94,Fixed #2093: Make sure bookmark scope directory does not exist before trying to create it. #2168,1,191,FALSE,NA
shiny,74df146c5bbf368b7f47b4ea828184cf,Fixed #2177: The session name is now being recorded when exiting a context. Multiple sessions can now view their respective reactlogs. #2180,1,192,FALSE,NA
shiny,77cea605545b5631767bb7fa5a3a6cc7,"Fixed #2162: `selectInput` was sending spurious duplicate values to the server when using backspace. Thanks, @​sada1993! #2187",1,193,FALSE,NA
shiny,168d6e88188c59e0f741cf314e54c82e,Fixed #2142: Dropping files on `fileInput`s stopped working on recent releases of Firefox. Thanks @​dmenne for reporting! #2203,1,194,FALSE,NA
shiny,b706d0722b7394f9bfedea132d342a65,Fixed #2204: `updateDateInput` could set the wrong date on days where DST begins. (Thanks @​GaGaMan1101!) #2212,1,195,FALSE,NA
shiny,3ef42fbbc603b608bbc872a6e2bb1e47,Fixed #2225: Input event queue can stall in apps that use async. #2226,1,196,FALSE,NA
shiny,0e682b76a0a104bfb86b3db96620016e,"Fixed #2228: `reactiveTimer` fails when not owned by a session. Thanks, @​P-Bettega! #2229",1,197,FALSE,NA
shiny,d77e3bff052c5e373b6ab2617a62d8f4,Addressed #1864 by changing `optgroup` documentation to use `list` instead of `c`. (#2084),1,198,FALSE,NA
shiny,730c3a61656da4d38fc8151c01fd22cb,"`extractStackTrace` and `formatStackTrace` are deprecated and will be removed in a future version of Shiny. As far as we can tell, nobody has been using these functions, and a refactor has made them vestigial; if you need this functionality, please file an issue.",1,199,FALSE,NA
shiny,061873343fec9fa19e11ba248038f762,"Support for asynchronous operations! Built-in render functions that expected a certain kind of object to be yielded from their `expr`, now generally can handle a promise for that kind of object. Reactive expressions and observers are now promise-aware as well. (#1932)",1,200,FALSE,NA
shiny,ea8fa7bbfe2a03ea3cf2eec0496fe944,"Introduced two changes to the (undocumented but widely used) JavaScript function `Shiny.onInputChange(name, value)`. First, we changed the function name to `Shiny.setInputValue` (but don't worry--the old function name will continue to work). Second, until now, all calls to `Shiny.onInputChange(inputId, value)` have been ""deduplicated""; that is, anytime an input is set to the same value it already has, the set is ignored. With Shiny v1.1, you can now add an options object as the third parameter: `Shiny.setInputValue(""name"", value, {priority: ""event""})`. When the priority option is set to `""event""`, Shiny will always send the value and trigger reactivity, whether it is a duplicate or not. This closes #928, which was the most upvoted open issue by far! Thanks, @​daattali. (#2018)",1,201,FALSE,NA
shiny,fda4cba9701e502db3580e1216d722ce,"Addressed #1978: `shiny:value` is now triggered when duplicate output data is received from the server. (Thanks, @​andrewsali! #1999)",1,202,FALSE,NA
shiny,75cb31dc59ea7570fb9787da1227665f,"If a shiny output contains a css class of `shiny-report-size`, its container height and width are now reported in `session$clientData`. So, for an output with an id with `""myID""`, the height/width can be accessed via `session$clientData[['output_myID_height']]`/`session$clientData[['output_myID_width']]`. Addresses #1980. (Thanks, @​cpsievert! #1981)",1,203,FALSE,NA
shiny,20702500bf9d743f3cd210d559a15e6e,"Added a new `autoclose = TRUE` parameter to `dateInput()` and `dateRangeInput()`. This closed #1969 which was a duplicate of much older issue, #173. The default value is `TRUE` since that seems to be the common use case. However, this will cause existing apps with date inputs (that update to this version of Shiny) to have the datepicker be immediately closed once a date is selected. For most apps, this is actually desired behavior; if you wish to keep the datepicker open until the user clicks out of it use `autoclose = FALSE`. (#1987)",1,204,FALSE,NA
shiny,f5cd127eb2e7684e70dedcc87c68c1e1,"The version of Shiny is now accessible from Javascript, with `Shiny.version`. There is also a new function for comparing version strings, `Shiny.compareVersion()`. (#1826, #1830)",1,205,FALSE,NA
shiny,fbbe0104aa25761cbc23a9dbff6f09c4,Addressed #1851: Stack traces are now smaller in some places `do.call()` is used. (#1856),1,206,FALSE,NA
shiny,e7e031c07f5956df0ad6a19681bd16bf,"Stack traces have been improved, with more aggressive de-noising and support for deep stack traces (stitching together multiple stack traces that are conceptually part of the same async operation).",1,207,FALSE,NA
shiny,223946083602abba7a61ac1c61aa55fd,Addressed #1859: Server-side selectize is now significantly faster. (Thanks to @​dselivanov #1861),1,208,FALSE,NA
shiny,8c9911d6832ad8c8f84acbd1be1dc77f,"#1989: The server side of outputs can now be removed (e.g. `output$plot <- NULL`). This is not usually necessary but it does allow some objects to be garbage collected, which might matter if you are dynamically creating and destroying many outputs. (Thanks, @​mmuurr! #2011)",1,209,FALSE,NA
shiny,fe61c081d49c51218ccf77cdb77bedd7,"Removed the (ridiculously outdated) ""experimental feature"" tag from the reference documentation for `renderUI`. (#2036)",1,210,FALSE,NA
shiny,02a4ab6d6579c28fa9d558de7ce2d081,"Addressed #1907: the `ignoreInit` argument was first added only to `observeEvent`. Later, we also added it to `eventReactive`, but forgot to update the documentation. Now done, thanks @​flo12392! (#2036)",1,211,FALSE,NA
shiny,8aa18ec50e6550b1a663246be900eb44,Fixed #1006: Slider inputs sometimes showed too many digits. (#1956),1,212,FALSE,NA
shiny,5e8da0bf64d156c5fe671d974d717c1c,Fixed #1958: Slider inputs previously displayed commas after a decimal point. (#1960),1,213,FALSE,NA
shiny,84bb8456553caa9320299d1c0e72aa5c,"The internal `URLdecode()` function previously was a copy of `httpuv::decodeURIComponent()`, assigned at build time; now it invokes the httpuv function at run time.",1,214,FALSE,NA
shiny,5a7d3ed01fa36b35f687e4fe6e8ea360,"Fixed #1840: with the release of Shiny 1.0.5, we accidently changed the relative positioning of the icon and the title text in `navbarMenu`s and `tabPanel`s. This fix reverts this behavior back (i.e. the icon should be to the left of the text and/or the downward arrow in case of `navbarMenu`s). (#1848)",1,215,FALSE,NA
shiny,6ffb731f622e0729edae325f05f53a71,Fixed #1600: URL-encoded bookmarking did not work with sliders that had dates or date-times. (#1961),1,216,FALSE,NA
shiny,f50862711dcb05ed97315a17d1f85f01,Fixed #1962: File dragging and dropping broke in the presence of jQuery version 3.0 as introduced by the rhandsontable htmlwidget. (#2005),1,217,FALSE,NA
shiny,b219fadf43ba40f0a0fa4b372258af76,"Improved the error handling inside the `addResourcePath()` function, to give end users more informative error messages when the `directoryPath` argument cannot be normalized. This is especially useful for `runtime: shiny_prerendered` Rmd documents, like `learnr` tutorials. (#1968)",1,218,FALSE,NA
shiny,f801300f7bf46b21f0ab10c2bde9b331,"Changed script tags in reactlog (inst/www/reactive-graph.html) from HTTP to HTTPS in order to avoid mixed content blocking by most browsers. (Thanks, @​jekriske-lilly! #1844)",1,219,FALSE,NA
shiny,6876f9f6d3ca607afff854cc5fa48c0f,"Addressed #1784: `runApp()` will avoid port 6697, which is considered unsafe by Chrome.",1,220,FALSE,NA
shiny,e2129a8a0af4197b8f00b9cd31a710c0,"Fixed #2000: Implicit calls to `xxxOutput` not working inside modules. (Thanks, @​GregorDeCillia! #2010)",1,221,FALSE,NA
shiny,de00d508a025e41d965bedeeb39fc97d,Fixed #2021: Memory leak with `reactiveTimer` and `invalidateLater`. (#2022),1,222,FALSE,NA
shiny,07f6056d138fe747a7076a228d844b49,Updated to ion.rangeSlider 2.2.0. (#1955),1,223,FALSE,NA
shiny,f2d55620771085f82a9a19e7fac7628d,Fixed #1818: `conditionalPanel()` expressions that have a newline character in them caused the application to not work. (#1820),1,224,FALSE,NA
shiny,432da600ae297e85183af8f8566d9880,Added a safe wrapper function for internal calls to `jsonlite::fromJSON()`. (#1822),1,225,FALSE,NA
shiny,254c0ff7675971740b7878a58c7084c5,Fixed #1824: HTTP HEAD requests on static files caused the application to stop. (#1825),1,226,FALSE,NA
shiny,9b89d3a0d15fb43103a59885842ada26,"Implemented #1668: dynamic tabs: added functions (`insertTab`, `appendTab`, `prependTab`, `removeTab`, `showTab` and `hideTab`) that allow you to do those actions for an existing `tabsetPanel`. (#1794)",1,227,FALSE,NA
shiny,dad2a6d09ff937c64f3dbd1523390a23,"Implemented #1213: Added a new function, `onStop()`, which can be used to register callback functions that are invoked when an application exits, or when a user session ends. (Multiple sessions can be connected to a single running Shiny application.) This is useful if you have finalization/clean-up code that should be run after the application exits. (#1770",1,228,FALSE,NA
shiny,75bf01934cd4e54bd444955036fed4bb,Implemented #1155: Files can now be drag-and-dropped on `fileInput` controls. The appearance of `fileInput` controls while files are being dragged can be modified by overriding the `shiny-file-input-active` and `shiny-file-input-over` classes. (#1782),1,229,FALSE,NA
shiny,28635d921a62e82d9d84a177431ae5c2,"Addressed #1688: trigger a new `shiny:outputinvalidated` event when an output gets invalidated, at the same time that the `recalculating` CSS class is added. (#1758, thanks @​andrewsali!)",1,230,FALSE,NA
shiny,95c217b8d47d5631df766899ef41761d,Addressed #1508: `fileInput` now permits the same file to be uploaded multiple times. (#1719),1,231,FALSE,NA
shiny,57b73617e35223ed4832534f8542912c,Addressed #1501: The `fileInput` control now retains uploaded file extensions on the server. This fixes readxl's `readxl::read_excel` and other functions that must recognize a file's extension in order to work. (#1706),1,232,FALSE,NA
shiny,d8b92267613a48245d1f5b087bad2f26,"For `conditionalPanel`s, Shiny now gives more informative messages if there are errors evaluating or parsing the JavaScript conditional expression. (#1727)",1,233,FALSE,NA
shiny,2201fc19725c0e0c3bc5318273d0acab,Addressed #1586: The `conditionalPanel` function now accepts an `ns` argument. The `ns` argument can be used in a module UI function to scope the `condition` expression to the module's own input and output IDs. (#1735),1,234,FALSE,NA
shiny,e55fa0ef07422e0f473011204f0ff2a9,"With `options(shiny.testmode=TRUE)`, the Shiny process will send a message to the client in response to a changed input, even if no outputs have changed. This helps to streamline testing using the shinytest package. (#1747)",1,235,FALSE,NA
shiny,f208742df67a8ed2ff398ea8b5232c38,Addressed #1738: The `updateTextInput` and `updateTextAreaInput` functions can now update the placeholder. (#1742),1,236,FALSE,NA
shiny,3c29afc0c096b9a683f2536cdbcd727b,"Converted examples to single file apps, and made updates and enhancements to comments in the example app scripts. (#1685)",1,237,FALSE,NA
shiny,784002dafde3e60f3809040c7a254933,"Added new `snapshotPreprocessInput()` and `snapshotPreprocessOutput()` functions, which is used for preprocessing and input and output values before taking a test snapshot. (#1760, #1789)",1,238,FALSE,NA
shiny,7a221eeb5c24182e64705ca607b5c233,"The HTML generated by `renderTable()` no longer includes comments with the R version, xtable version, and timestamp. (#1771)",1,239,FALSE,NA
shiny,8edf11b98e054c76fc329991941d31c2,Added a function `isRunning` to test whether a Shiny app is currently running. (#1785),1,240,FALSE,NA
shiny,129969ef07a4628b5f5db4b6e2ce62bc,"Added a function `setSerializer`, which allows authors to specify a function for serializing the value of a custom input. (#1791)",1,241,FALSE,NA
shiny,a1504e4f2d4d6fe27d8acc8cc5eec41d,"Fixed #1546: make it possible (without any hacks) to write arbitrary data into a module's `session$userData` (which is exactly the same environment as the parent's `session$userData`). To be clear, it allows something like `session$userData$x <- TRUE`, but not something like `session$userData <- TRUE` (that is not allowed in any context, whether you're in the main app, or in a module) (#1732).",1,242,FALSE,NA
shiny,c31109a071dbd4ba4af39e50c94ec7ae,Fixed #1701: There was a partial argument match in the `generateOptions` function. (#1702),1,243,FALSE,NA
shiny,f675c767e9f38e8cc75bc206e5184b7f,Fixed #1710: `ReactiveVal` objects did not have separate dependents. (#1712),1,244,FALSE,NA
shiny,225dec4b040da3b7efde0d3e0a7c2556,Fixed #1438: `unbindAll()` should not be called when inserting content with `insertUI()`. A previous fix (#1449) did not work correctly. (#1736),1,245,FALSE,NA
shiny,7e7a98eba59f0caea541c96089b45834,Fixed #1755: dynamic htmlwidgets sent the path of the package on the server to the client. (#1756),1,246,FALSE,NA
shiny,6ba1eb0b364d4ebb0366060b69dda298,Fixed #1763: Shiny's private random stream leaked out into the main random stream. (#1768),1,247,FALSE,NA
shiny,1ef21169afb9d68ade36dd79158438a5,Fixed #1680: `options(warn=2)` was not respected when running an app. (#1790),1,248,FALSE,NA
shiny,1739a08b49ea1231a2f218c4312f1700,Fixed #1772: ensure that `runApp()` respects the `shinyApp(onStart = function())` argument. (#1770),1,249,FALSE,NA
shiny,8dca6cbc1a9935882e726f4fabccc30c,Fixed #1474: A `browser()` call in an observer could cause an error in the RStudio IDE on Windows. (#1802),1,250,FALSE,NA
shiny,e9092a57bb3ad2fa5a82fe9961df792a,"Fixed #1672: When an error occurred while uploading a file, the progress bar did not change colors. (#1673)",1,251,FALSE,NA
shiny,86b9b85584f00d982c9c1e54fcf2e311,"Fixed #1676: On R 3.4.0, running a Shiny application gave a warning: `Warning in body(fun) : argument is not a function`. (#1677)",1,252,FALSE,NA
shiny,dac67aa2ce817287a942d9cbb3268c69,"Added a `shiny:sessioninitialized` Javascript event, which is fired at the end of the initialize method of the Session object. This allows us to listen for this event when we want to get the value of things like `Shiny.user`. (#1568)",1,253,FALSE,NA
shiny,397ccd217cf6eb0b2fe17e097181663b,Fixed #1649: allow the `choices` argument in `checkboxGroupInput()` to be `NULL` (or `c()`) to keep backward compatibility with Shiny \< 1.0.1. This will result in the same thing as providing `choices = character(0)`. (#1652),1,254,FALSE,NA
shiny,41d654d7528c56e81f323282196379e4,The official URL for accessing MathJax libraries over CDN has been deprecated and will be removed soon. We have switched to a new rstudio.com URL that we will support going forward. (#1664),1,255,FALSE,NA
shiny,3827be87527c091464ed71aea17c4d85,Fixed #1653: wrong code example in documentation. (#1658),1,256,FALSE,NA
shiny,44712e3371e2566dbaae08cd5e2f2a0b,"The functions `radioButtons()`, `checkboxGroupInput()` and `selectInput()` (and the corresponding `updateXXX()` functions) no longer accept a `selected` argument whose value is the name of a choice, instead of the value of the choice. This feature had been deprecated since Shiny 0.10 (it printed a warning message, but still tried to match the name to the right choice) and it's now completely unsupported.",1,257,FALSE,NA
shiny,1948e23a32167d2d01dcbe05c73cb0a2,"Added `reactiveVal` function, for storing a single value which can be (reactively) read and written. Similar to `reactiveValues`, except that `reactiveVal` just lets you store a single value instead of storing multiple values by name. (#1614)",1,258,FALSE,NA
shiny,1edd626ff0c46ce00600bc191829136d,Fixed #1637: Outputs stay faded on MS Edge. (#1640),1,259,FALSE,NA
shiny,6bccfbdd5dc72249d72ef418760249a7,"Addressed #1348 and #1437 by adding two new arguments to `radioButtons()` and `checkboxGroupInput()`: `choiceNames` (list or vector) and `choiceValues` (list or vector). These can be passed in as an alternative to `choices`, with the added benefit that the elements in `choiceNames` can be arbitrary UI (i.e. anything created by `HTML()` and the `tags()` functions, like icons and images). While the underlying values for each choice (passed in through `choiceValues`) must still be simple text, their visual representation on the app (what the user actually clicks to select a different option) can be any valid HTML element. See `?radioButtons` for a small example. (#1521)",1,260,FALSE,NA
shiny,4b537cc13dac6e2b3d18d2fb02d95132,Updated `tools/README.md` with more detailed instructions. (#1616),1,261,FALSE,NA
shiny,43c46e17ca3b1d400e68ff8f9129d2d7,"Fixed #1565, which meant that resources with spaces in their names return HTTP 404. (#1566)",1,262,FALSE,NA
shiny,512bdfb933edaaf2e362191d7df76f38,Exported `session$user` (if it exists) to the client-side; it's accessible in the Shiny object: `Shiny.user`. (#1563),1,263,FALSE,NA
shiny,55bf687f6e097d66613a41343e5a3a23,"Added support for HTML5's `pushState` which allows for pseudo-navigation in shiny apps. For more info, see the documentation (`?updateQueryString` and `?getQueryString`). (#1447)",1,264,FALSE,NA
shiny,e1b4ba768547677ee86610ba4f30b8aa,Fixed #1121: plot interactions with ggplot2 now support `coord_fixed()`. (#1525),1,265,FALSE,NA
shiny,e2292c762e22aabe8f62470881f81df2,"Added `snapshotExclude` function, which marks an output so that it is not recorded in a test snapshot. (#1559)",1,266,FALSE,NA
shiny,eec628e1e710489e5ea88e4d198de205,"Added `shiny:filedownload` JavaScript event, which is triggered when a `downloadButton` or `downloadLink` is clicked. Also, the values of `downloadHandler`s are not recorded in test snapshots, because the values change every time the application is run. (#1559)",1,267,FALSE,NA
shiny,03957080398dd43a231273ccf0d4dfcd,Added support for plot interactions with ggplot2 \> 2.2.1. (#1578),1,268,FALSE,NA
shiny,c018b5220e7adf62c3aff31380ea191f,"Fixed #1577: Improved `escapeHTML` (util.js) in terms of the order dependency of replacing, XSS risk attack and performance. (#1579)",1,269,FALSE,NA
shiny,f19f7fdbb3fcd949f636d9db3e3ce37a,"The `shiny:inputchanged` JavaScript event now includes two new fields, `binding` and `el`, which contain the input binding and DOM element, respectively. Additionally, `Shiny.onInputChange()` now accepts an optional argument, `opts`, which can contain the same fields. (#1596)",1,270,FALSE,NA
shiny,2d68a1d59dc180614d8da855655a06e8,The `NS()` function now returns a vectorized function. (#1613),1,271,FALSE,NA
shiny,5c17357b4b0495e9af010921399ffa45,Fixed #1617: `fileInput` can have customized text for the button and the placeholder. (#1619),1,272,FALSE,NA
shiny,a3cc3101aa88342e1ee36b9129dcb0a3,"Fixed #1511: `fileInput`s did not trigger the `shiny:inputchanged` event on the client. Also removed `shiny:fileuploaded` JavaScript event, because it is no longer needed after this fix. (#1541, #1570)",1,273,FALSE,NA
shiny,1fbc0556ad43c9faffdd77c6a9252e66,"Fixed #1472: With a Progress object, calling `set(value=NULL)` made the progress bar go to 100%. Now it does not change the value of the progress bar. The documentation also incorrectly said that setting the `value` to `NULL` would hide the progress bar. (#1547)",1,274,FALSE,NA
shiny,9894e0a5d9432d887cbcaf6d419fc61d,"Fixed #162: When a dynamically-generated input changed to a different `inputType`, it might be incorrectly deduplicated. (#1594)",1,275,FALSE,NA
shiny,ac2d8427e2475b94a7bb586825b958f0,Removed redundant call to `inputs.setInput`. (#1595),1,276,FALSE,NA
shiny,6f069398860302faeec20399b39eee3b,Fixed bug where `dateRangeInput` did not respect `weekstart` argument. (#1592),1,277,FALSE,NA
shiny,afc0ce59fdb5a05157a1775e23144acb,Fixed #1598: `setBookmarkExclude()` did not work properly inside of modules. (#1599),1,278,FALSE,NA
shiny,90e353580e00cce5acd6cb0dde122dc6,Fixed #1605: sliders did not move when clicked on the bar area. (#1610),1,279,FALSE,NA
shiny,42a4eca0e63c69b961fe233c7dc07e36,"Fixed #1621: if a `reactiveTimer`'s session was closed before the first time that the `reactiveTimer` fired, then the `reactiveTimer` would not get cleared and would keep firing indefinitely. (#1623)",1,280,FALSE,NA
shiny,f3439a34921ebc879f4038b4c6716730,"Fixed #1634: If brushing on a plot causes the plot to redraw, then the redraw could in turn trigger the plot to redraw again and again. This was due to spurious changes in values of floating point numbers. (#1641)",1,281,FALSE,NA
shiny,a134df0f1ec1aa5b6b51f5dcc8f7995a,Closed #1500: Updated ion.rangeSlider to 2.1.6. (#1540),1,282,FALSE,NA
shiny,34cb6196a5ac02b625027c40d56179ab,"Added a new `placeholder` argument to `verbatimTextOutput()`. The default is `FALSE`, which means that, if there is no content for this output, no representation of this slot will be made in the UI. Previsouly, even if there was no content, you'd see an empty rectangle in the UI that served as a placeholder. You can set `placeholder = TRUE` to revert back to that look. (#1480)",1,283,FALSE,NA
shiny,1a1b9333e0db5639172a1c98d02eb60b,"Added support for testing Shiny applications with the shinytest package. (#18, #1464)",1,284,FALSE,NA
shiny,37bbfb331a4c567f75ef74c2a36ca8e8,"Added `debounce` and `throttle` functions, to control the rate at which reactive values and expressions invalidate. (#1510)",1,285,FALSE,NA
shiny,b24662a32e09be4cd058e34557fc8f93,"Addressed #1486 by adding a new argument to `observeEvent` and `eventReactive`, called `ignoreInit` (defaults to `FALSE` for backwards compatibility). When set to `TRUE`, the action (i.e. the second argument: `handlerExpr` and `valueExpr`, respectively) will not be triggered when the observer/reactive is first created/initialized. In other words, `ignoreInit = TRUE` ensures that the `observeEvent` (or `eventReactive`) is *never* run right away. For more info, see the documentation (`?observeEvent`). (#1494)",1,286,FALSE,NA
shiny,ef90d041b9d7a69a0097d72f8fa0c785,"Added a new argument to `observeEvent` called `once`. When set to `TRUE`, it results in the observer being destroyed (stop observing) after the first time that `handlerExpr` is run (i.e. `once = TRUE` guarantees that the observer only runs, at most, once). For more info, see the documentation (`?observeEvent`). (#1494)",1,287,FALSE,NA
shiny,8aeef3b01cdc01301ad84345c14bf955,Addressed #1358: more informative error message when calling `runApp()` inside of an app's app.R (or inside ui.R or server.R). (#1482),1,288,FALSE,NA
shiny,cdd1e224ad7505e18997949c1a69c6fc,Added a more descriptive JS warning for `insertUI()` when the selector argument does not match anything in DOM. (#1488),1,289,FALSE,NA
shiny,348252a2dfc4ca01c0acc4c697c7b794,Added support for injecting JavaScript code when the `shiny.testmode` option is set to `TRUE`. This makes it possible to record test events interactively. (#1464),1,290,FALSE,NA
shiny,2d1228efd4c1c75ec98c8bae54fdea17,Added ability through arguments to the `a` tag function called inside `downloadButton()` and `downloadLink()`. Closes #986. (#1492),1,291,FALSE,NA
shiny,91b40a77b5f92d06dd2b996b770ed51f,"Implemented #1512: added a `userData` environment to `session`, for storing arbitrary session-related variables. Generally, session-scoped variables are created just by declaring normal variables that are local to the Shiny server function, but `session$userData` may be more convenient for some advanced scenarios. (#1513)",1,292,FALSE,NA
shiny,1137b3c9c4782e09b464aa5dec7fd9fe,Relaxed naming requirements for `addResourcePath()` (the first character no longer needs to be a letter). (#1529),1,293,FALSE,NA
shiny,d351a9541938e564754c6eb6e9c636e3,Fixed #969: allow navbarPage's `fluid` param to control both containers. (#1481),1,294,FALSE,NA
shiny,9703631d843995d28ed167f7d67dc78b,Fixed #1438: `unbindAll()` should not be called when inserting content with `insertUI()` (#1449),1,295,FALSE,NA
shiny,750cddaa80f6378707e5ba99759a4199,Fixed bug causing `<meta>` tags associated with HTML dependencies of Shiny R Markdown files to be rendered incorrectly. (#1463),1,296,FALSE,NA
shiny,0f8475a065d304ea60effcc81a0d9740,Fixed #1359: `shinyApp()` options argument ignored when passed to `runApp()`. (#1483),1,297,FALSE,NA
shiny,6fdf5a65ae096a782e7f498f119b44d0,"Fixed #117: Reactive expressions now release references to cached values as soon as they are invalidated, potentially making those cached values eligible for garbage collection sooner. Previously, this would not occur until the next cached value was calculated and stored. (#1504)",1,298,FALSE,NA
shiny,e78ae03548fdf3432ccfd34cb39f5c76,Fixed #1013: `flushReact` should be called after app loads. Observers set up outside of server functions were not running until after the first user connects. (#1503),1,299,FALSE,NA
shiny,139ad7d7dede567d2bbc673b61d2c539,"Fixed #1453: When using a modal dialog with `easyClose=TRUE` in a Shiny gadget, pressing Esc would close both the modal and the gadget. Now pressing Esc only closes the modal. (#1523)",1,300,FALSE,NA
shiny,fefd24a87bedcac014dd8156372c013a,Updated to Font Awesome 4.7.0.,1,301,FALSE,NA
shiny,a6988a0e2e11a697bd0d62ec52343490,Added a `fade` argument to `modalDialog()` -- setting it to `FALSE` will remove the usual fade-in animation for that modal window. (#1414),1,302,FALSE,NA
shiny,b1c22dd1f6c7d31c66fc9192f2a353e3,"Fixed a ""duplicate binding"" error that occurred in some edge cases involving `insertUI` and nested `uiOutput`. (#1402)",1,303,FALSE,NA
shiny,5e8711151f54ec120e20c25a2c87ee8e,"Fixed #1422: When using the `shiny.trace` option, allow specifying to only log SEND or RECV messages, or both. (PR #1428)",1,304,FALSE,NA
shiny,7641268444a3e1134869a64792a108f6,Fixed #1419: Allow overriding a JS custom message handler. (PR #1445),1,305,FALSE,NA
shiny,96860a54ebc37fcb68eee5b614c5ea9d,"Added `exportTestValues()` function, which allows a test driver to query the session for values internal to an application's server function. This only has an effect if the `shiny.testmode` option is set to `TRUE`. (#1436)",1,306,FALSE,NA
shiny,71f7c68ebb75d2ede85338ac93c68d09,Fixed #1427: make sure that modals do not close incorrectly when an element inside them is triggered as hidden. (#1430),1,307,FALSE,NA
shiny,359ce7dfe431e5cc224a045838879db3,"Fixed #1404: stack trace tests were not compatible with the byte-code compiler in R-devel, which now tracks source references.",1,308,FALSE,NA
shiny,4994cabbe9892bbeea1d7c24ede66d80,"`sliderInputBinding.setValue()` now sends a slider's value immediately, instead of waiting for the usual 250ms debounce delay. (#1429)",1,309,FALSE,NA
shiny,3f30035affb1363267a04f834881d167,"Fixed a bug where, in versions of R before 3.2, Shiny applications could crash due to a bug in R's implementation of `list2env()`. (#1446)",1,310,FALSE,NA
shiny,e022ea8f99cf76ce68eb61452fa6ea92,"Restored file inputs are now copied on restore, so that the restored application can't modify the bookmarked file. (#1370)",1,311,FALSE,NA
shiny,edbe4265bb748c104eb195e4cb46bb18,"Added support for plot interaction in the development version of ggplot2, 2.1.0.9000. Also added support for ggplot2 plots with `coord_flip()` (in the development version of ggplot2). (hadley/ggplot2#1781, #1392)",1,312,FALSE,NA
shiny,e11a097863bcf1683b2cfb6a6381704a,"Fixed #1093 better: `updateRadioButtons()` and `updateCheckboxGroupInput()` were not working correctly if the choices were given as a numeric vector. This had been solved in #1291, but that introduced a different bug #1396 that this better fix avoids. (#1370)",1,313,FALSE,NA
shiny,103da54e166f393615256be2eebd72bb,"Fixed #1368: If an app with a file input was bookmarked and restored, and then the restored app was bookmarked and restored (without uploading a new file), then it would fail to restore the file the second time. (#1370)",1,314,FALSE,NA
shiny,ed1f12cf4ba750eb857b34e855b8b25b,Fixed #1369: `sliderInput()` did not allow showing numbers without a thousands separator.,1,315,FALSE,NA
shiny,b99da4cc3778cdeb285ab25f89a57a49,Fixed #1346 and #1107 : jQuery UI's datepicker conflicted with the bootstrap-datepicker used by Shiny's `dateInput()` and `dateRangeInput()`. (#1374),1,316,FALSE,NA
shiny,7c7a2f84ddab3b21849278ec7bde4e71,"Updated to bootstrap-datepicker 1.6.4. (#1218, #1374)",1,317,FALSE,NA
shiny,b311b0bc17fc4db8a102cb0b44b5f3d1,"Updated to jQuery UI 1.12.1. Previously, Shiny included a build of 1.11.4 which was missing the datepicker component due to a conflict with the bootstrap-datepicker used by Shiny's `dateInput()` and `dateRangeInput()`. (#1374)",1,318,FALSE,NA
shiny,c92d30fa75a9000444974d64af42cfa5,"**Error Sanitization**: you now have the option to sanitize error messages; in other words, the content of the original error message can be suppressed so that it doesn't leak any sensitive information. To sanitize errors everywhere in your app, just add `options(shiny.sanitize.errors = TRUE)` somewhere in your app. Read this article for more, or play with the demo app.",1,319,FALSE,NA
shiny,a6a49c13a91f62307b7561dc2082ffa1,"**Code Diagnostics**: if there is an error parsing `ui.R`, `server.R`, `app.R`, or `global.R`, Shiny will search the code for missing commas, extra commas, and unmatched braces, parens, and brackets, and will print out messages pointing out those problems. (#1126)",1,320,FALSE,NA
shiny,72583853753b2ac1d4cdf1682afaec84,"**Reactlog visualization**: by default, the `showReactLog()` function (which brings up the reactive graph) also displays the time that each reactive and observer were active for: ```{=html} <p align=""center""> `<img src=""http://shiny.rstudio.com/images/reactlog.png"" alt=""modal-dialog"" width=""75%""/>`{=html} ```{=html} </p> This new feature can be turned off with `showReactLog(time = FALSE)`. This may be convenient if you have a large graph and don't want to have this new information cluttering it up. The elapsed time info shows up above each relevant node's label, and the time is also coded by color: the slowest reactive will be dark red and the fastest will be light red. Additionally, to organize the graph, you can now drag any of the nodes to a specific position and leave it there.",1,321,FALSE,NA
shiny,5b002536184d203280a633e9f4d9b802,"**Nicer-looking tables**: we've made tables generated with `renderTable()` look cleaner and more modern. While this won't break any older code, the finished look of your table will be quite a bit different, as the following image shows: ```{=html} <p align=""center""> `<img src=""http://shiny.rstudio.com/images/render-table.png"" alt=""render-table"" width=""75%""/>`{=html} ```{=html} </p> For more, read our short article about this update, experiment with all the new features in this demo app, or check out the reference documentation.",1,322,FALSE,NA
shiny,f010bcd720c7302bb879ec36da62b96f,"Progress indicators can now either use the new notification API, using `style = ""notification""` (default), or be displayed with the previous styling, using `style = ""old""`. You can also call `shinyOptions(progress.style = ""old"")` in the server function to make all progress indicators use the old styling. Note that if you had customized your progress indicators with additional CSS, you'll need to use the old style if you want your UI to look the same (#1160 and #1329).",1,323,FALSE,NA
shiny,ae73ad774314e49ac8b5fc894607cabf,Closed #1161: Deprecated the `position` argument to `tabsetPanel()` since Bootstrap 3 stopped supporting this feature.,1,324,FALSE,NA
shiny,f223a0c2f4737c7d3d5adb13d4d1cf37,The long-deprecated ability to pass a `func` argument to many of the `render` functions has been removed.,1,325,FALSE,NA
shiny,75999e8fdc018100aaf122d55172965a,Added the ability to bookmark and restore application state. (main PR: #1209),1,326,FALSE,NA
shiny,1356a7d2fa0e151b07747f8afe113c3f,"Added a new notification API. From R, there are new functions `showNotification` and `hideNotification`. From JavaScript, there is a new `Shiny.notification` object that controls notifications. (#1141)",1,327,FALSE,NA
shiny,b5f800023d20b72b323c502a69a3899a,Progress indicators now use the notification API. (#1160),1,328,FALSE,NA
shiny,033789d2af37279f499e1a32a5d717ec,"Added the ability for the client browser to reconnect to a new session on the server, by setting `session$allowReconnect(TRUE)`. This requires a version of Shiny Server that supports reconnections. (#1074)",1,329,FALSE,NA
shiny,69b656fefd09c05ab735ccd22228f638,Added modal dialogs. (#1157),1,330,FALSE,NA
shiny,c2d9aa010c8e587b8ac05f57923941ed,"Added insertUI and removeUI functions to be able to add and remove chunks of UI, standalone, and all independent of one another. (#1174 and #1189)",1,331,FALSE,NA
shiny,7347577504d16083e7c697fc81abf506,Improved `renderTable()` function to make the tables look prettier and also provide the user with a lot more parameters to customize their tables with. (#1129),1,332,FALSE,NA
shiny,24f571cc82da808032debddc9afba7ce,Added support for the `pool` package (use Shiny's timer/scheduler). (#1226),1,333,FALSE,NA
shiny,a8f199d67e15fcbb85b4f767ef3cca30,"Added `cancelOutput` argument to `req()`. This causes the currently executing reactive to cancel its execution, and leave its previous state alone (as opposed to clearing the output). (#1272)",1,334,FALSE,NA
shiny,3fa36df80cace4fb43e3d1f11c23172f,"`Display: Showcase` now displays the .js, .html and .css files in the `www` directory by default. In order to use showcase mode and not display these, include a new line in your Description file: `IncludeWWW: False`. (#1185)",1,335,FALSE,NA
shiny,ef0b28d81ccab6cf15be377158c5fd60,"Added an error sanitization option: `options(shiny.sanitize.errors = TRUE)`. By default, this option is `FALSE`. When `TRUE`, normal errors will be sanitized, displaying only a generic error message. This changes the look of an app when errors are printed (but the console log remains the same). (#1156)",1,336,FALSE,NA
shiny,281d0c431d5ca759258b77bc7f506b72,"Added the option of passing arguments to an `xxxOutput()` function through the corresponding `renderXXX()` function via an `outputArgs` parameter to the latter. This is only valid for snippets of Shiny code in an interactive `runtime: shiny` Rmd document (never for full apps, even if embedded in an Rmd). (#1443)",1,337,FALSE,NA
shiny,7632eb813b353e3e99b10bff73036f17,"Added `updateActionButton()` function, so the user can change an `actionButton`'s (or `actionLink`'s) label and/or icon. It also checks that the icon argument (for both creation and updating of a button) is valid and throws a warning otherwise. (#1134)",1,338,FALSE,NA
shiny,9818f29d97fa2d744c6728c6f963d70c,"Added code diagnostics: if there is an error parsing ui.R, server.R, app.R, or global.R, Shiny will search the code for missing commas, extra commas, and unmatched braces, parens, and brackets, and will print out messages pointing out those problems. (#1126)",1,339,FALSE,NA
shiny,bab2b35b66eca66d022904b05cfc5ee3,Added support for horizontal dividers in `navbarMenu`. (#1147),1,340,FALSE,NA
shiny,c524d66ad150078ffbb4b9f48e43ef63,Added `placeholder` option to `passwordInput`. (#1152),1,341,FALSE,NA
shiny,d07d1d0c083cdbaa22c5677b5fb1bb1f,Added `session$resetBrush(brushId)` (R) and `Shiny.resetBrush(brushId)` (JS) to programatically clear brushes from `imageOutput`/`plotOutput`. (#1197),1,342,FALSE,NA
shiny,74bbaa33548932eb00ac9aa7cee6b3ea,"Added textAreaInput. (thanks, @​nuno-agostinho! #1300)",1,343,FALSE,NA
shiny,cc751fd7e075c105be145d7394733226,"Added `session$sendBinaryMessage(type, message)` method for sending custom binary data to the client. See `?session`. (thanks, @​daef! #1316 and #1320)",1,344,FALSE,NA
shiny,4c1d4ea8de94c78b0c730996d6542ec2,"Almost all code examples now have a runnable example with `shinyApp()`, so that users can run the examples and see them in action. (#1158)",1,345,FALSE,NA
shiny,85da065fdcff2dbbed605041a94a6e33,"When resized, plots are drawn with `replayPlot()`, instead of re-executing all plotting code. This results in faster plot rendering. (#1112)",1,346,FALSE,NA
shiny,70dc7db434ccb745afb8cfb46051c0de,Exported the `isTruthy()` function. (part of PR #1272),1,347,FALSE,NA
shiny,8cb9e543ca622b57f3ebe6d482568548,Reactive log now shows elapsed time for reactives and observers. (#1132),1,348,FALSE,NA
shiny,4e7dd3da17fe6082f1bea2178ae6281a,Nodes in the reactlog visualization are now sticky if the user drags them. (#1283),1,349,FALSE,NA
shiny,acdac37caf558ca248a71629b9c180e7,Fixed #1350: Highlighting of reactives didn't work in showcase mode.,1,350,FALSE,NA
shiny,739d75a9c1f91bda2e22b658aba92255,Fixed #1331: `renderPlot()` now correctly records and replays plots when `execOnResize = FALSE`.,1,351,FALSE,NA
shiny,f8ec2b4c51fc1fd004920f727e9b3151,"`updateDateInput()` and `updateDateRangeInput()` can now clear the date input fields. (thanks, @​gaborcsardi! #1299, #1315 and #1317)",1,352,FALSE,NA
shiny,915467cf954249eb2f6a0ddb274cfa03,Fixed #561: DataTables previously might pop up a warning when the data was updated extremely frequently.,1,353,FALSE,NA
shiny,24075ce99426576c038a5e2d5e10a641,"Fixed #776: In some browsers, plots sometimes flickered when updated.",1,354,FALSE,NA
shiny,e6f885000c900b8fe99733567d2e0341,"Fixed #543 and #855: When `navbarPage()` had a `navbarMenu()` as the first item, it did not automatically select an item.",1,355,FALSE,NA
shiny,dce49323a0ddc23b33d23556eaae75cb,Fixed #970: `navbarPage()` previously did not have an option to set the selected tab.,1,356,FALSE,NA
shiny,3e7317dbef6bc8695cd94fa272021dde,Fixed #1253: Memory could leak when an observer was destroyed without first being invalidated.,1,357,FALSE,NA
shiny,16c19ee3666c44e85491982dbc9ff9a3,Fixed #931: Nested observers could leak memory.,1,358,FALSE,NA
shiny,83179bf07ad055f1c94fb86f5df908f7,"Fixed #1144: `updateRadioButton()` and `updateCheckboxGroupInput()` broke controls when used in modules (thanks, @​sipemu!).",1,359,FALSE,NA
shiny,6e9647e3ef7152fe9a3533eb11f411ca,Fixed #1093: `updateRadioButtons()` and `updateCheckboxGroupInput()` didn't work if `choices` was numeric vector.,1,360,FALSE,NA
shiny,578ba6d1b9e4412165650a58b7d887e0,Fixed #1122: `downloadHandler()` popped up empty browser window if the file wasn't present. It now gives a 404 error code.,1,361,FALSE,NA
shiny,1dd036f935ab626c624373e0bd291c91,Fixed #1278: Reactive system was being flushed too often (usually this just means a more-expensive no-op than necessary).,1,362,FALSE,NA
shiny,65efb57951ee80befe2c44625fde794f,Fixed #803 and #1179: handling malformed dates in `dateInput` and `updateDateInput()`.,1,363,FALSE,NA
shiny,2aaa950bf46bd2a136c59a287ff9810f,Fixed #1257: `updateSelectInput()` didn't work correctly in IE 11 and Edge.,1,364,FALSE,NA
shiny,e0ac1abce5d7e036f79aea6aff2918b3,Fixed #971: `runApp()` would give confusing error if `port` was not numeric.,1,365,FALSE,NA
shiny,029e694f8c8dd8532bf3bcd70af7c12c,Shiny now avoids using ports that Chrome deems unsafe. (#1222),1,366,FALSE,NA
shiny,f25e695697d04e741d35258a6dbda6e2,"Added workaround for quartz graphics device resolution bug, where resolution is hard-coded to 72 ppi.",1,367,FALSE,NA
shiny,1d58d6292ae3b2c1ff5e05e3a45a93bc,Updated to ion.RangeSlider 2.1.2.,1,368,FALSE,NA
shiny,bb6486b30eef2c1f1c979d9e3460b351,Updated to Font Awesome 4.6.3.,1,369,FALSE,NA
shiny,b0f2c7df3c25887417ad0b93219a51d3,Updated to Bootstrap 3.3.7.,1,370,FALSE,NA
shiny,dbdfc94a7e6310ad54b78f1d958001da,Updated to jQuery 1.12.4.,1,371,FALSE,NA
shiny,7cfecf5e6c87af258388f7ad509c7041,Updated documentation for `htmlTemplate`.,1,372,FALSE,NA
shiny,ffa626700459ebe72388396aec7236f7,`flexCol` did not work on RStudio for Windows or Linux.,1,373,FALSE,NA
shiny,9d9e12150454c7f33fd68cffa1db9641,Fixed RStudio debugger integration.,1,374,FALSE,NA
shiny,674c87718204759f3eeb7e9807a7474e,BREAKING CHANGE: The long-deprecated ability to pass functions (rather than expressions) to reactive() and observe() has finally been removed.,1,375,FALSE,NA
shiny,33c997d30b871bb5c4f116b15575bd78,Fixed #962: plot interactions did not work with the development version of ggplot2 (after ggplot2 1.0.1).,1,376,FALSE,NA
shiny,d2e0c1a52739dca643c6af2a57f5f41c,Fixed #902: the `drag_drop` plugin of the selectize input did not work.,1,377,FALSE,NA
shiny,2846817d0ab901f7f98e184dff315064,Fixed #933: `updateSliderInput()` does not work when only the label is updated.,1,378,FALSE,NA
shiny,d898d5d0a0830b40f3ad093df70675de,Multiple imageOutput/plotOutput calls can now share the same brush id. Shiny will ensure that performing a brush operation will clear any other brush with the same id.,1,379,FALSE,NA
shiny,975fb6b2c404da7693e5d324468617ea,Added `placeholder` option to `textInput`.,1,380,FALSE,NA
shiny,9b4b6260e07bb1ceb9064956f0481274,Improved support for Unicode characters on Windows (#968).,1,381,FALSE,NA
shiny,5439d5b666f92e961424cf2ead67ae82,Fixed bug in `selectInput` and `selectizeInput` where values with double quotes were not properly escaped.,1,382,FALSE,NA
shiny,5e99ea0d2e9b62c5eb7f3a7513591045,"`runApp()` can now take a path to any .R file that yields a `shinyApp` object; previously, the path had to be a directory that contained an app.R file (or server.R if using separately defined server and UI). Similarly, introduced `shinyAppFile()` function which creates a `shinyApp` object for an .R file path, just as `shinyAppDir()` does for a directory path.",1,383,FALSE,NA
shiny,0e4e59142a1fddf978add867d9627175,"Introduced Shiny Modules, which are designed to 1) simplify the reuse of Shiny UI/server logic and 2) make authoring and maintaining complex Shiny apps much easier. See the article linked from `?callModule`.",1,384,FALSE,NA
shiny,f187fc4e0bd374e0eaef7332b4c84189,`invalidateLater` and `reactiveTimer` no longer require an explicit `session` argument; the default value uses the current session.,1,385,FALSE,NA
shiny,d8c9171f9d0ff34a28e42a0670f128d9,"Added `session$reload()` method, the equivalent of hitting the browser's Reload button.",1,386,FALSE,NA
shiny,90eed53c0f90870ba72ec00a22122ee3,"Added `shiny.autoreload` option, which will automatically cause browsers to reload whenever Shiny app files change on disk. This is intended to shorten the feedback cycle when tweaking UI code.",1,387,FALSE,NA
shiny,2e47da3fc9d80bf343601a7200dc43a7,"Errors are now printed with stack traces! This should make it tremendously easier to track down the causes of errors in Shiny. Try it by calling `stop(""message"")` from within an output, reactive, or observer. Shiny itself adds a lot of noise to the call stack, so by default, it attempts to hide all but the relevant levels of the call stack. You can turn off this behavior by setting `options(shiny.fullstacktrace=TRUE)` before or during app startup.",1,388,FALSE,NA
shiny,7962babd579888b2e9980808bb933f64,Fixed #1018: the selected value of a selectize input is guaranteed to be selected in server-side mode.,1,389,FALSE,NA
shiny,8c83c3470072c7c0d2b21f8e608ac136,"Added `req` function, which provides a simple way to prevent a reactive, observer, or output from executing until all required inputs and values are available. (Similar functionality has been available for a while using validate/need, but req provides a much simpler and more direct interface.)",1,390,FALSE,NA
shiny,662596d653bd2447160e94bdd17be3a8,"Improve stability with Shiny Server when many subapps are used, by deferring the loading of subapp iframes until a connection has first been established with the server.",1,391,FALSE,NA
shiny,226143693134a88dc2c3f1f44ad82ded,Upgrade to Font Awesome 4.5.0.,1,392,FALSE,NA
shiny,15f96608f07abce07acf34af14b05c9b,Upgraded to Bootstrap 3.3.5.,1,393,FALSE,NA
shiny,ad624e29e1d6c623d029598f8f66d30b,Upgraded to jQuery 1.12.4,1,394,FALSE,NA
shiny,d790c13191796108b0ec40e8d7e0e3f1,"Switched to an almost-complete build of jQuery UI with the exception of the datepicker extension, which conflicts with Shiny's date picker.",1,395,FALSE,NA
shiny,4f8f7ccc66d96e8ecf73c0ebefca65db,"Added `fillPage` function, an alternative to `fluidPage`, `fixedPage`, etc. that is designed for apps that fill the entire available page width/height.",1,396,FALSE,NA
shiny,1a253435a006063c52771015a5bb575e,"Added `fillRow` and `fillCol` functions, for laying out proportional grids in `fillPage`. For modern browsers only.",1,397,FALSE,NA
shiny,4c96c23e973b4a1cfa0064f40d864640,"Added `runGadget`, `paneViewer`, `dialogViewer`, and `browserViewer` functions to support Shiny Gadgets. More detailed docs about gadgets coming soon.",1,398,FALSE,NA
shiny,5e367c4df28d20f7677b9513fc3b8736,"Added support for the new htmltools 0.3 feature `htmlTemplate`. It's now possible to use regular HTML markup to design your UI, but still use R expressions to define inputs, outputs, and HTML widgets.",1,399,FALSE,NA
shiny,fd6d93187f8125d13444e9a21714faf2,"GitHub changed URLs for gists from .tar.gz to .zip, so `runGist` was updated to work with the new URLs.",1,400,FALSE,NA
shiny,4d6f1de896f9eb90de6dca6f43f00f2e,Callbacks from the session object are now guaranteed to execute in the order in which registration occurred.,1,401,FALSE,NA
shiny,8513eaf2ce74fb45d01f4a6a265257d9,Minor bugs in sliderInput's animation behavior have been fixed. (#852),1,402,FALSE,NA
shiny,830a215d2938320233636d001af25eee,Updated to ion.rangeSlider to 2.0.12.,1,403,FALSE,NA
shiny,e63615c8cb368f6ff62c726eadb0a7d5,"Added `shiny.minified` option, which controls whether the minified version of shiny.js is used. Setting it to FALSe can be useful for debugging. (#826, #850)",1,404,FALSE,NA
shiny,71446a47ef4b14449c8f1fa7e6cf6eea,"Fixed an issue for outputting plots from ggplot objects which also have an additional class whose print method takes precedence over `print.ggplot`. (#840, 841)",1,405,FALSE,NA
shiny,0f06e2caa49ac8648e322689b1f20037,"Added `width` option to Shiny's input functions. (#589, #834)",1,406,FALSE,NA
shiny,018cc72ae376ddfcfb5eae94bbb459e8,Added two alias functions of `updateTabsetPanel()` to update the selected tab: `updateNavbarPage()` and `updateNavlistPanel()`. (#881),1,407,FALSE,NA
shiny,7e50d3764c8bf05a7eedb3de73144293,"All non-base functions are now explicitly namespaced, to pass checks in R-devel.",1,408,FALSE,NA
shiny,3d66f8f8f58f9ec297ce4d0637fe3075,Shiny now correctly handles HTTP HEAD requests. (#876),1,409,FALSE,NA
shiny,a91ca2ae44855fb343b7f49948410ba1,Fixed an issue where unbindAll() causes subsequent bindAll() to be ignored for previously bound outputs. (#856),1,410,FALSE,NA
shiny,cbefffbd19628d0b27bbf2f319c6e42b,"Undeprecate `dataTableOutput` and `renderDataTable`, which had been deprecated in favor of the new DT package. The DT package is a bit too new and has a slightly different API, we were too hasty in deprecating the existing Shiny functions.",1,411,FALSE,NA
shiny,548326d728d7fc936e45a80a6d8035d7,"Switched from RJSONIO to jsonlite. This improves consistency and speed when converting between R data structures and JSON. One notable change is that POSIXt objects are now serialized to JSON in UTC8601 format (like ""2015-03-20T20:00:00Z""), instead of as seconds from the epoch).",1,412,FALSE,NA
shiny,c6b168b9e0ef534876f6b0e03e428db0,"In addition to the existing support for clicking and hovering on plots created by base graphics, added support for double-clicking and brushing. (#769)",1,413,FALSE,NA
shiny,db3bcdafd4635b1caf9bf98604d37f00,"Added support for clicking, hovering, double-clicking, and brushing for plots created by ggplot2, including support for facets. (#802)",1,414,FALSE,NA
shiny,bdf3b20826465f385bf5e3a59464612f,"Added `nearPoints` and `brushedPoints` functions for easily selecting rows of data that are clicked/hovered, or brushed. (#802)",1,415,FALSE,NA
shiny,6692c744de506049886a7b9fdcf29468,"Added `shiny.port` option. If this is option is set, `runApp()` will listen on this port by default. (#756)",1,416,FALSE,NA
shiny,aa947f96893d84cb0c67e15ead5a2b52,"`runUrl`, `runGist`, and `runGitHub` now can save downloaded applications, with the `destdir` argument. (#688)",1,417,FALSE,NA
shiny,6539cd6bcbc0369bc6c96906ed8a4ad3,Restored ability to set labels for `selectInput`. (#741),1,418,FALSE,NA
shiny,be1f7b31d3504778e701a49d18bf951b,Travis continuous integration now uses Travis's native R support.,1,419,FALSE,NA
shiny,a7f5a62e2bd23a8e86f2f2af9c5e768b,Fixed encoding issue when the server receives data from the client browser. (#742),1,420,FALSE,NA
shiny,9f29efdf3f63165a933d1af9288cf1cc,"The `session` object now has class `ShinySession`, making it easier to test whether an object is indeed a session object. (#720, #746)",1,421,FALSE,NA
shiny,926c64e1579315d7a04849c927081b5b,"Fix JavaScript error when an output appears in nested uiOutputs. (Thanks, Gregory Zhang. #749)",1,422,FALSE,NA
shiny,766cc0d116f506ae9d69630cd05b96fb,Eliminate delay on receiving new value when `updateSliderInput(value=...)` is called.,1,423,FALSE,NA
shiny,b7bd23744a8dce95b73eb641b80b0d67,Updated to DataTables (Javascript library) 1.10.5.,1,424,FALSE,NA
shiny,af2b42a9fd8e7a87b92fd48e07002620,"Fixed downloading of files that have no filename extension. (#575, #753)",1,425,FALSE,NA
shiny,7b75021ebf94ea06a49dc8fd46b86f9b,"Fixed bug where nested UI outputs broke outputs. (#749, #750)",1,426,FALSE,NA
shiny,cde153a67b2b90d34198e1934e1a8f8e,Removed unneeded HTML ID attributes for `checkboxGroupInputs` and `radioButtons`. (#684),1,427,FALSE,NA
shiny,38830d7a3cc5df405e1761f15b5310cb,Fixed bug where checkboxes were still active even after `Shiny.unbindAll()` was called. (#206),1,428,FALSE,NA
shiny,6b4ab723f71bfda891314d9f8b284a30,The server side selectize input will load the first 1000 options by default before users start to type and search in the box. (#823),1,429,FALSE,NA
shiny,6841cfdf21a62741476b0a6885ce41ee,renderDataTable() and dataTableOutput() have been deprecated in shiny and will be removed in future versions of shiny. Please use the DT package instead: http://rstudio.github.io/DT/ (#807),1,430,FALSE,NA
shiny,773b58ae66d70a37cb0f9cdcbcac44fc,"Major client-side performance improvements for pages that have many conditionalPanels, tabPanels, and plotOutputs. (#693, #717, #723)",1,431,FALSE,NA
shiny,4178851f4f71ecc7ffe4d5f6518fb78c,"`tabPanel`s now use the `title` for `value` by default. This fixes a bug in which an icon in the title caused problems with a conditionalPanel's test condition. (#725, #728)",1,432,FALSE,NA
shiny,7bd611ade8cd2cc71db980e355b83275,`selectInput` now has a `size` argument to control the height of the input box. (#729),1,433,FALSE,NA
shiny,119015af292a4d6f25e79d00831a30de,`navbarPage` no longer includes a first row of extra whitespace when `header=NULL`. (#722),1,434,FALSE,NA
shiny,2ca1ca3239bc6c130c922603b503a7a1,`selectInput`s now use Bootstrap styling when `selectize=FALSE`. (#724),1,435,FALSE,NA
shiny,b03cb431be859e08ef4d5bf035466c90,Better vertical spacing of label for checkbox groups and radio buttons.,1,436,FALSE,NA
shiny,174afe85591ba15634f64445845f15c1,`selectInput` correctly uses width for both selectize and non-selectize inputs. (#702),1,437,FALSE,NA
shiny,62f203a4d8c9b6752e780dc080a946ca,"The wrapper tag generated by `htmlOutput` and `uiOutput` can now be any type of HTML tag, instead of just span and div. Also, custom classes are now allowed on the tag. (#704)",1,438,FALSE,NA
shiny,cb2a67867f9607bc24be8c7077703fc2,Slider problems in IE 11 and Chrome on touchscreen-equipped Windows computers have been fixed. (#700),1,439,FALSE,NA
shiny,3e42fa729713f750486cf13fd92dd719,Sliders now work correctly with draggable panels. (#711),1,440,FALSE,NA
shiny,1cba3e9f4eb9a383db28f50765698f7e,Fixed arguments in `fixedPanel`. (#709),1,441,FALSE,NA
shiny,b5c84e92cc91dc005f60ae942c71794b,"downloadHandler content callback functions are now invoked with a temp file name that has the same extension as the final filename that will be used by the download. This is to deal with the fact that some file writing functions in R will auto-append the extension for their file type (pdf, zip).",1,442,FALSE,NA
shiny,afdc0d0951b1979421190f2c11bcf756,"In Bootstrap 3, images in `<img>` tags are no longer automatically scaled to the width of their container. If you use `img()` in your UI code, or `<img>` tags in your raw HTML source, it's possible that they will be too large in the new version of Shiny. To address this you can add the `img-responsive` class:",1,443,FALSE,NA
shiny,d3d72231b92bbadb6f42300907ba95fc,"The sliders have been replaced. Previously, Shiny used the jslider library, but now it uses ion.RangeSlider. The new sliders have an updated appearance, and they have allowed us to fix many long-standing interface issues with the sliders.",1,445,FALSE,NA
shiny,f1ec800d17e3c289b7a4cc2258b60c71,"The `sliderInput()` function no longer uses the `format` or `locale` options. Instead, you can use `pre`, `post`, and `sep` options to control the prefix, postfix, and thousands separator.",1,446,FALSE,NA
shiny,149ee685829ac13d202dc0c8d16bed1a,"`updateSliderInput()` can now control the min, max, value, and step size of a slider. Previously, only the value could be controlled this way, and if you wanted to change other values, you needed to use Shiny's dynamic UI.",1,447,FALSE,NA
shiny,1936b7bfc7caa39b89210f2ba5ede070,"If in your HTML you are using custom CSS classes that are specific to Bootstrap, you may need to update them for Bootstrap 3. See the Bootstrap migration guide.",1,448,FALSE,NA
shiny,234776e2dbe1897ef546c614a695214a,"Changed sliders from jquery-slider to ion.rangeSlider. These sliders have an improved appearance, support updating more properties from the server, and can be controlled with keyboard input.",1,450,FALSE,NA
shiny,ef8a9af30637ace7fadde35cded0bf46,"Switched from Bootstrap 2 to Bootstrap 3. For most users, this will work seamlessly, but some users may need to use the shinybootstrap2 package for backward compatibility.",1,451,FALSE,NA
shiny,0082915aa28ab0c69cc33a86aed4cf65,The UI of a Shiny app can now have a body tag. This is useful for CSS templates that use classes on the body tag.,1,452,FALSE,NA
shiny,5d14bf7ff4e7fef7744e848ad63699ca,`actionButton` and `actionLink` now pass their `...` arguments to the underlying tag function. (#607),1,453,FALSE,NA
shiny,c01789c3337a5958d7df9f8d5165e007,"Added `observeEvent` and `eventReactive` functions for clearer, more concise handling of `actionButton`, plot clicks, and other naturally-imperative inputs.",1,454,FALSE,NA
shiny,0dfb42ab7b4eff2462035c09560acb66,"Errors that happen in reactives no longer prevent any remaining pending observers from executing. It is also now possible for users to control how errors are handled, with the 'shiny.observer.error' global option. (#603, #604)",1,455,FALSE,NA
shiny,c617af7f206b331ea40c0bdd37f780d3,"Added an `escape` argument to `renderDataTable()` to escape the HTML entities in the data table for security reasons. This might break tables from previous versions of shiny that use raw HTML in the table content, and the old behavior can be brought back by `escape = FALSE` if you are aware of the security implications. (#627)",1,456,FALSE,NA
shiny,ff26a9cbff98f729e6b5a1ae0d57cfa5,"Changed the URI encoding/decoding functions internally to use `encodeURI()`, `encodeURIComponent()`, and `decodeURIComponent()` from the httpuv package instead of `utils::URLencode()` and `utils::URLdecode()`. (#630)",1,457,FALSE,NA
shiny,e9b1f0e2893879953443d475f91cc959,Shiny's web assets are now minified.,1,458,FALSE,NA
shiny,8a2db570084bdf2d3dd09648ced834f8,The default reactive domain is now available in event handler functions. (#669),1,459,FALSE,NA
shiny,62e9f63792e7dec99bc5b36413531628,"Password input fields can now be used, with `passwordInput()`. (#672)",1,460,FALSE,NA
shiny,77a5c8cd638e3631144d82da88a5745b,"Remove use of `rstudio::viewer` in a code example, for R CMD check.",1,461,FALSE,NA
shiny,a02658e702e2b99978d8b403eb257852,Changed some examples to use `\donttest `{=tex}instead of `\dontrun`{=tex}.,1,462,FALSE,NA
shiny,c454579251e308922335450678b5a075,The minimal version of R required for the shiny package is 3.0.0 now.,1,463,FALSE,NA
shiny,51bda67886ebbb0d0bce6b6dfb65f587,"Shiny apps can now consist of a single file, app.R, instead of ui.R and server.R.",1,464,FALSE,NA
shiny,c224e870f64ad2eb03651d962dcd388a,Upgraded DataTables from 1.9.4 to 1.10.2. This might be a breaking change if you have customized the DataTables options in your apps. (More info: https://github.com/rstudio/shiny/pull/558),1,465,FALSE,NA
shiny,9e3963b59a8cd23be597d6f67e5eea31,"File uploading via `fileInput()` works for Internet Explorer 8 and 9 now. Note: IE8/9 do not support multiple files from a single file input. If you need to upload multiple files, you have to use one file input for each file.",1,466,FALSE,NA
shiny,58d2669c408dd2368e098f9f04a77a1e,Switched away from reference classes to R6.,1,467,FALSE,NA
shiny,359f86291ddd45e96f682b4f8c0f5ee2,Reactive log performance has been greatly improved.,1,468,FALSE,NA
shiny,67b7be235cd8036602bc49c34828fc0a,"Added `Progress` and `withProgress`, to display the progress of computation on the client browser.",1,469,FALSE,NA
shiny,1a2105c17d6792c89b79aebf830b439c,"Fixed #557: updateSelectizeInput(choices, server = TRUE) did not work when `choices` is a character vector.",1,470,FALSE,NA
shiny,979b817b24df7768f96a172593767558,"Searching in DataTables is case-insensitive and the search strings are not treated as regular expressions by default now. If you want case-sensitive searching or regular expressions, you can use the configuration options `search$caseInsensitive` and `search$regex`, e.g. `renderDataTable(..., options = list(search = list(caseInsensitve = FALSE, regex = TRUE)))`.",1,471,FALSE,NA
shiny,e3e962b9310588a8d1684927d675f7e1,Added support for `htmltools::htmlDependency`'s new `attachment` parameter to `renderUI`/`uiOutput`.,1,472,FALSE,NA
shiny,bb5b935ab92b1f2b9090ec001e8d5c43,Exported `createWebDependency`. It takes an `htmltools::htmlDependency` object and makes it available over Shiny's built-in web server.,1,473,FALSE,NA
shiny,c2a35060c82602df8d5976d2e96ab819,Custom output bindings can now render `htmltools::htmlDependency` objects at runtime using `Shiny.renderDependencies()`.,1,474,FALSE,NA
shiny,b4c0771f872b5b9a7205578c08dda88e,"Fixes to rounding behavior of sliderInput. (#301, #502)",1,475,FALSE,NA
shiny,6f936c7808108dc68af7f34a0f086772,Updated selectize.js to version 0.11.2. (#596),1,476,FALSE,NA
shiny,c6c02d416d3a49d7292a143e4a47658c,Added `position` parameter to `navbarPage`.,1,477,FALSE,NA
shiny,8e7d233c01b0f0c0aea343c11ee8905c,Added Unicode support for Windows. Shiny apps running on Windows must use the UTF-8 encoding for ui.R and server.R (also the optional global.R) if they contain non-ASCII characters. See this article for details and examples: http://shiny.rstudio.com/gallery/unicode-characters.html (#516),1,478,FALSE,NA
shiny,89c546ea2e6d12e5125897bab04dbd27,"`runGitHub()` also allows the 'username/repo' syntax now, which is equivalent to `runGitHub('repo', 'username')`. (#427)",1,479,FALSE,NA
shiny,5690eb4184280ddcc1ceab585a1bf782,`navbarPage()` now accepts a `windowTitle` parameter to set the web browser page title to something other than the title displayed in the navbar.,1,480,FALSE,NA
shiny,0488cf37e975be37b5c5092ba0bdfed3,"Added an `inline` argument to `textOutput()`, `imageOutput()`, `plotOutput()`, and `htmlOutput()`. When `inline = TRUE`, these outputs will be put in `span()` instead of the default `div()`. This occurs automatically when these outputs are created via the inline expressions (e.g. `r renderText(expr)`) in R Markdown documents. See an R Markdown example at http://shiny.rstudio.com/gallery/inline-output.html (#512)",1,481,FALSE,NA
shiny,16ecd1e30ee652c0bb84728f1d1bfd1f,"Added support for option groups in the select/selectize inputs. When the `choices` argument for `selectInput()`/`selectizeInput()` is a list of sub-lists and any sub-list is of length greater than 1, the HTML tag `<optgroup>` will be used. See an example at http://shiny.rstudio.com/gallery/option-groups-for-selectize-input.html (#542)",1,482,FALSE,NA
shiny,e02529375afce645750bba5ab88a5086,"BREAKING CHANGE: By default, observers now terminate themselves if they were created during a session and that session ends. See ?domains for more details.",1,483,FALSE,NA
shiny,03e4b8013d1631265391f332c6843650,"Shiny can now be used in R Markdown v2 documents, to create ""Shiny Docs"": reports and presentations that combine narrative, statically computed output, and fully dynamic inputs and outputs. For more info, including examples, see http://rmarkdown.rstudio.com/authoring_shiny.html.",1,484,FALSE,NA
shiny,36dbd22acb04dad13c7bd58e23fb4228,"The `session` object that can be passed into a server function (e.g. shinyServer(function(input, output, session) {...})) is now documented: see `?session`.",1,485,FALSE,NA
shiny,48d8a9f893fa67784038e17d9b518947,Most inputs can now accept `NULL` label values to omit the label altogether.,1,486,FALSE,NA
shiny,6098c870b133d1d69bb51a7ae04f639c,"New `actionLink` input control; like `actionButton`, but with the appearance of a normal link.",1,487,FALSE,NA
shiny,b7d9fa8b5bd43b64b9f7bf9536af41a1,`renderPlot` now calls `print` on its result if it's visible (i.e. no more explicit `print()` required for ggplot2).,1,488,FALSE,NA
shiny,e96b72eb51ecc87f67a731e9744a1e66,"Introduced Shiny app objects (see `?shinyApp`). These essentially replace the little-advertised ability for `runApp` to take a `list(ui=..., server=...)` as the first argument instead of a directory (though that ability remains for backward compatibility). Unlike those lists, Shiny app objects are tagged with class `shiny.appobj` so they can be run simply by printing them.",1,489,FALSE,NA
shiny,faaa1f45517e7e0e0568985f93dae166,"Added `maskReactiveContext` function. It blocks the current reactive context, to evaluate expressions that shouldn't use reactive sources directly. (This should not be commonly needed.)",1,490,FALSE,NA
shiny,fb0508c6463fe4279518c485b5b41e6c,"Added `flowLayout`, `splitLayout`, and `inputPanel` functions for putting UI elements side by side. `flowLayout` lays out its children in a left-to-right, top-to-bottom arrangement. `splitLayout` evenly divides its horizontal space among its children (or unevenly divides if `cellWidths` argument is provided). `inputPanel` is like `flowPanel`, but with a light grey background, and is intended to be used to encapsulate small input controls wherever vertical space is at a premium.",1,491,FALSE,NA
shiny,03fb70beb3152d67f3db9eef55eff6de,Added `serverInfo` to obtain info about the Shiny Server if the app is served through it.,1,492,FALSE,NA
shiny,f1f63e3c44e018a2d455467c857ca7a5,"Added an `inline` argument (TRUE/FALSE) in `checkboxGroupInput()` and `radioButtons()` to allow the horizontal layout (inline = TRUE) of checkboxes or radio buttons. (Thanks, @​saurfang, #481)",1,493,FALSE,NA
shiny,3fdb9b45aeb27967c358040f0e422979,"`sliderInput` and `selectizeInput`/`selectInput` now use a standard horizontal size instead of filling up all available horizontal space. Pass `width=""100%""` explicitly for the old behavior.",1,494,FALSE,NA
shiny,b5899fd48af76b79ed7719e4a54cde43,"Added the `updateSelectizeInput()` function to make it possible to process searching on the server side (i.e. using R), which can be much faster than the client side processing (i.e. using HTML and JavaScript). See the article at http://shiny.rstudio.com/articles/selectize.html for a detailed introduction.",1,495,FALSE,NA
shiny,cf6bd01b0a2f490778ce49af64a3bdec,"Fixed a bug of renderDataTable() when the data object only has 1 row and 1 column. (Thanks, ZJ Dai, #429)",1,496,FALSE,NA
shiny,2eb409e7057d5fb45f109017fb93f99c,"`renderPrint` gained a new argument 'width' to control the width of the text output, e.g. renderPrint({mtcars}, width = 40).",1,497,FALSE,NA
shiny,9fa78468eb1f29eb0130eccb5668e93e,"Fixed #220: the zip file for a directory created by some programs may not have the directory name as its first entry, in which case runUrl() can fail. (#220)",1,498,FALSE,NA
shiny,ab0bc74f6d3edc2cb035f7e1d06801cb,"`runGitHub()` can also take a value of the form ""username/repo"" in its first argument, e.g. both runGitHub(""shiny_example"", ""rstudio"") and runGitHub(""rstudio/shiny_example"") are valid ways to run the GitHub repo.",1,499,FALSE,NA
shiny,91d6cf47ebc7ab3f06cc5184b566ab21,"Fixed warning 'Error in Context\$new : could not find function ""loadMethod""' that was happening to dependent packages on ""R CMD check"".",1,500,FALSE,NA
shiny,9d26f7068cfcd08002b85d7d4a0c7fc9,"BREAKING CHANGE: Added a `host` parameter to runApp() and runExample(), which defaults to the shiny.host option if it is non-NULL, or ""127.0.0.1"" otherwise. This means that by default, Shiny applications can only be accessed on the same machine from which they are served. To allow other clients to connect, as in previous versions of Shiny, use ""0.0.0.0"" (or the IP address of one of your network interfaces, if you care to be explicit about it).",1,501,FALSE,NA
shiny,66eb3452fa77fe961f308aca3aceb449,"Added a new function `selectizeInput()` to use the JavaScript library selectize.js (https://github.com/brianreavis/selectize.js), which extends the basic select input in many aspects.",1,502,FALSE,NA
shiny,7094b406e261222dcca7daf6c298f792,"The `selectInput()` function also gained a new argument `selectize = TRUE` to makes use of selectize.js by default. If you want to revert back to the original select input, you have to call selectInput(..., selectize = FALSE).",1,503,FALSE,NA
shiny,04635711982b7c2deb78a98f80573fc0,"Added Showcase mode, which displays the R code for an app right in the app itself. You can invoke Showcase mode by passing `display.mode=""showcase""` to the `runApp()` function. Or, if an app is designed to run in Showcase mode by default, add a DESCRIPTION file in the app dir with Title, Author, and License fields; with ""Type: Shiny""; and with ""DisplayMode: Showcase"".",1,504,FALSE,NA
shiny,2969c70b46410f8810c9a6e24da8fd16,Upgraded to Bootstrap 2.3.2 and jQuery 1.11.0.,1,505,FALSE,NA
shiny,60833ab10fbb167846e5f49cfdbdfd9f,"Make `tags$head()` and `singleton()` behave correctly when used with `renderUI()` and `uiOutput()`. Previously, ""hoisting content to the head"" and ""only rendering items a single time"" were features that worked only when the page was initially loading, not in dynamic rendering.",1,506,FALSE,NA
shiny,c8ff5759c1067476a2dcbcd1aa952682,"Files are now sourced with the `keep.source` option, to help with debugging and profiling.",1,507,FALSE,NA
shiny,1e6fb7f1a388867084d0eebfc6d50713,Support user-defined input parsers for data coming in from JavaScript using the parseShinyInput method.,1,508,FALSE,NA
shiny,d319103ef479f0209aa14c33d1cf0b58,Fixed the bug #299: renderDataTable() can deal with 0-row data frames now. (reported by Harlan Harris),1,509,FALSE,NA
shiny,bb96dfdcc42da41588c53cc04c9aa543,Added `navbarPage()` and `navbarMenu()` functions to create applications with multiple top level panels.,1,510,FALSE,NA
shiny,58c1bf12230b7b5c0e9d6e98580c3bc6,Added `navlistPanel()` function to create layouts with a bootstrap navlist on the left and tabPanels on the right,1,511,FALSE,NA
shiny,2466c00702fc5014c69d6fd2f7abeed1,Added `type` parameter to `tabsetPanel()` to enable the use of pill style tabs in addition to the standard ones.,1,512,FALSE,NA
shiny,fe3ab152f0cb93e525dad0adfc4148c1,"Added `position` paramter to `tabsetPanel()` to enable positioning of tabs above, below, left, or right of tab content.",1,513,FALSE,NA
shiny,2be63379b176f7ffd6dacde0bdd34d7b,Added `fluidPage()` and `fixedPage()` functions as well as related row and column layout functions for creating arbitrary bootstrap grid layouts.,1,514,FALSE,NA
shiny,576d80bff5f337d0dbc05c38a5031b07,Added `hr()` builder function for creating horizontal rules.,1,515,FALSE,NA
shiny,1ba417ecca6297e0b27141e8f54ad44c,Automatically concatenate duplicate attributes in tag definitions,1,516,FALSE,NA
shiny,bf5ae57877add39ffe58d039235aef16,Added `responsive` parameter to page building functions for opting-out of bootstrap responsive css.,1,517,FALSE,NA
shiny,c7b2af5ba41a3c006a77b05025be8db6,Added `theme` parameter to page building functions for specifying alternate bootstrap css styles.,1,518,FALSE,NA
shiny,ffdc979ea04585f0ddca32ed1da09e9e,Added `icon()` function for embedding icons from the font awesome icon library,1,519,FALSE,NA
shiny,6992e2928b59eec83ec8cf197c9b269e,"Added `makeReactiveBinding` function to turn a ""regular"" variable into a reactive one (i.e. reading the variable makes the current reactive context dependent on it, and setting the variable is a source of reactivity).",1,520,FALSE,NA
shiny,5f59d1b24451ffa22364d68b7171fbd9,Added a function `withMathJax()` to include the MathJax library in an app.,1,521,FALSE,NA
shiny,afd978b309fc59b0c4ed217b08ddf6a6,"The argument `selected` in checkboxGroupInput(), selectInput(), and radioButtons() refers to the value(s) instead of the name(s) of the argument `choices` now. For example, the value of the `selected` argument in selectInput(..., choices = c('Label 1' = 'x1', 'Label 2' = 'x2'), selected = 'Label 2') must be updated to 'x2', although names/labels will be automatically converted to values internally for backward compatibility. The same change applies to updateCheckboxGroupInput(), updateSelectInput(), and updateRadioButtons() as well. (#340)",1,522,FALSE,NA
shiny,ff93223f79a99ebbe08fe9af591f5e03,"Now it is possible to only update the value of a checkbox group, select input, or radio buttons using the `selected` argument without providing the `choices` argument in updateCheckboxGroupInput(), updateSelectInput(), and updateRadioButtons(), respectively. (#340)",1,523,FALSE,NA
shiny,46546254ba87d693a29426a04f275c32,Added `absolutePanel` and `fixedPanel` functions for creating absolute- and fixed-position panels. They can be easily made user-draggable by specifying `draggable = TRUE`.,1,524,FALSE,NA
shiny,f37445fd64092e9b2544cf6d794630a4,"For the `options` argument of the function `renderDataTable()`, we can pass literal JavaScript code to the DataTables library via `I()`. This makes it possible to use any JavaScript object in the options, e.g. a JavaScript function (which is not supported in JSON). See `?renderDataTable` for details and examples.",1,525,FALSE,NA
shiny,4eae89c11601c9bd50c62f0de664c718,DataTables also works under IE8 now.,1,526,FALSE,NA
shiny,73c730342e0cb827abab250f55a28b21,"Fixed a bug in DataTables pagination when searching is turned on, which caused failures for matrices as well as empty rows when displaying data frames using renderDataTable().",1,527,FALSE,NA
shiny,5ab27a240118033e1b6abbf11dadb5d3,The `options` argument in `renderDataTable()` can also take a function that returns a list. This makes it possible to use reactive values in the options. (#392),1,528,FALSE,NA
shiny,31a6e17ec5c6c1d6bfe8492f1f6d9032,"`renderDataTable()` respects more DataTables options now: (1) either bPaginate = FALSE or iDisplayLength = -1 will disable pagination (i.e. all rows are returned from the data); besides, this means we can also use -1 in the length menu, e.g. aLengthMenu = list(c(10, 30, -1), list(10, 30, 'All')); (2) we can disable searching for individual columns through the bSearchable option, e.g. aoColumns = list(list(bSearchable = FALSE), list(bSearchable = TRUE),...) (the search box for the first column is hidden); (3) we can turn off searching entirely (for both global searching and individual columns) using the option bFilter = FALSE.",1,529,FALSE,NA
shiny,382b9fad491ce1526c0ee8c5acefb3ef,Added an argument `callback` in `renderDataTable()` so that a custom JavaScript function can be applied to the DataTable object. This makes it much easier to use DataTables plug-ins.,1,530,FALSE,NA
shiny,3403694eb2e5573815f09fbe8213a67e,"For numeric columns in a DataTable, the search boxes support lower and upper bounds now: a search query of the form ""lower,upper"" (without quotes) indicates the limits \[lower, upper\]. For a column X, this means the rows corresponding to X \>= lower & X \<= upper are returned. If we omit either the lower limit or the upper limit, only the other limit will be used, e.g. "",upper"" means X \<= upper.",1,531,FALSE,NA
shiny,7195978db992b74fadaccb0f93af09bd,"`updateNumericInput(value)` tries to preserve numeric precision by avoiding scientific notation when possible, e.g. 102145 is no longer rounded to 1.0214e+05 = 102140. (Thanks, Martin Loos. #401)",1,532,FALSE,NA
shiny,9b9115f56527f6153ff1b3326cbc360c,"`sliderInput()` no longer treats a label wrapped in HTML() as plain text, e.g. the label in sliderInput(..., label = HTML('`<em>`{=html}A Label`</em>`{=html}')) will not be escaped any more. (#119)",1,533,FALSE,NA
shiny,1154fbec2a3b535d1f45f82dc3b4fa90,"Fixed #306: the trailing slash in a path could fail `addResourcePath()` under Windows. (Thanks, ZJ Dai)",1,534,FALSE,NA
shiny,630b5970af9ec8a4a39f1548df1b9744,"Dots are now legal characters for inputId/outputId. (Thanks, Kevin Lindquist. #358)",1,535,FALSE,NA
shiny,ba9665ed02b4858741d38bc5e67d8bd7,"Debug hooks are registered on all user-provided functions and (reactive) expressions (e.g., in renderPlot()), which makes it possible to set breakpoints in these functions using the latest version of the RStudio IDE, and the RStudio visual debugging tools can be used to debug Shiny apps. Internally, the registration is done via installExprFunction(), which is a new function introduced in this version to replace exprToFunction() so that the registration can be automatically done.",1,536,FALSE,NA
shiny,d13273838746732512b6d3f8410cd60b,"Added a new function renderDataTable() to display tables using the JavaScript library DataTables. It includes basic features like pagination, searching (global search or search by individual columns), sorting (by single or multiple columns). All these features are implemented on the R side; for example, we can use R regular expressions for searching. Besides, it also uses the Bootstrap CSS style. See the full documentation and examples in the tutorial: http://rstudio.github.io/shiny/tutorial/#datatables",1,537,FALSE,NA
shiny,c6391fa484a2782b492659b0c2452187,"Added a new option `shiny.error` which can take a function as an error handler. It is called when an error occurs in an app (in user-provided code), e.g., after we set options(shiny.error = recover), we can enter a specified environment in the call stack to debug our code after an error occurs.",1,538,FALSE,NA
shiny,a6f8894c62ba470e7df7859979d6c438,"The argument `launch.browser` in runApp() can also be a function, which takes the URL of the shiny app as its input value.",1,539,FALSE,NA
shiny,1f382893bf5245e75d1a13090c9fea77,runApp() uses a random port between 3000 and 8000 instead of 8100 now. It will try up to 20 ports in case certain ports are not available.,1,540,FALSE,NA
shiny,6ff33e9c1ed266a4dc3923602c12f15c,"Fixed a bug for conditional panels: the value `input.id` in the condition was not correctly retrieved when the input widget had a type, such as numericInput(). (reported by Jason Bryer)",1,541,FALSE,NA
shiny,f27406eb47691d2e36ab11ac2a4f9ba3,"Fixed two bugs in plotOutput(); clickId and hoverId did not give correct coordinates in Firefox, or when the axis limits of the plot were changed. (reported by Chris Warth and Greg D)",1,542,FALSE,NA
shiny,d74bb7dc9f8fcfc99e43c4f37495ae8f,The minimal required version for the httpuv package was increased to 1.2 (on CRAN now).,1,543,FALSE,NA
shiny,d9b95c1778c26e5dc1c474108211ff50,Stopped sending websocket subprotocol. This fixes a compatibility issue with Google Chrome 30.,1,544,FALSE,NA
shiny,86cb7a9667d43fb5441c22169e71c816,The `input` and `output` objects are now also accessible via `session$input` and `session$output`.,1,545,FALSE,NA
shiny,b0b99153ee4c7d2c3aefa04648a57a2d,Added click and hover events for static plots; see `?plotOutput` for details.,1,546,FALSE,NA
shiny,0a349ab7c57b2d049e40c434a9493f9b,"Added optional logging of the execution states of a reactive program, and tools for visualizing the log data. To use, start a new R session and call `options(shiny.reactlog=TRUE)`. Then launch a Shiny app and interact with it. Press Ctrl+F3 (or for Mac, Cmd+F3) in the browser to launch an interactive visualization of the reactivity that has occurred. See `?showReactLog` for more information.",1,547,FALSE,NA
shiny,f82659cbaba3ace0b18b7c54cc383bf3,Added `includeScript()` and `includeCSS()` functions.,1,548,FALSE,NA
shiny,65243aa9acb847ef5945cab030b41749,"Reactive expressions now have class=""reactive"" attribute. Also added `is.reactive()` and `is.reactivevalues()` functions.",1,549,FALSE,NA
shiny,9c931a9f24106681a4858b96efe0b161,"New `stopApp()` function, which stops an app and returns a value to the caller of `runApp()`.",1,550,FALSE,NA
shiny,7afb00977e6e228d99ba54402655fb07,"Added the `shiny.usecairo` option, which can be used to tell Shiny not to use Cairo for PNG output even when it is installed. (Defaults to `TRUE`.)",1,551,FALSE,NA
shiny,cb0c0b3196a89e22fcc4c75bd960c206,"Speed increases for `selectInput()` and `radioButtons()`, and their corresponding updater functions, for when they have many options.",1,552,FALSE,NA
shiny,e4f99aec6937d504bb8e659df1772831,Added `tagSetChildren()` and `tagAppendChildren()` functions.,1,553,FALSE,NA
shiny,45807e949e750d33a1a02d6a7585ec98,"The HTTP request object that created the websocket is now accessible from the `session` object, as `session$request`. This is a Rook-like request environment that can be used to access HTTP headers, among other things. (Note: When running in a Shiny Server environment, the request will reflect the proxy HTTP request that was made from the Shiny Server process to the R process, not the request that was made from the web browser to Shiny Server.)",1,554,FALSE,NA
shiny,83ead48311155c3d23e5f45a669f4461,"Fix `getComputedStyle` issue, for IE8 browser compatibility (#196). Note: Shiny Server is still required for IE8/9 compatibility.",1,555,FALSE,NA
shiny,67609dda7d7b040a4d530971a1392812,"Add shiny.sharedSecret option, to require the HTTP header Shiny-Shared-Secret to be set to the given value.",1,556,FALSE,NA
shiny,65d58696448a69c8a5587740a256bd12,`tabsetPanel()` can be directed to start with a specific tab selected.,1,557,FALSE,NA
shiny,0eb08fac0ae909298cb824bb0fb7bd54,Fix bug where multiple file uploads with 3 or more files result in incorrect data.,1,558,FALSE,NA
shiny,258e2f0465f7b32c88de1267b1e149d6,Add `withTags()` function.,1,559,FALSE,NA
shiny,469a56f59879e924e3a01eecafb820cb,Add dateInput and dateRangeInput.,1,560,FALSE,NA
shiny,3b89e83b8138ce4e04e693d7105f6a32,"`shinyServer()` now takes an optional `session` argument, which is used for communication with the session object.",1,561,FALSE,NA
shiny,90af9a058152821feea24a139c8e8497,"Add functions to update values of existing inputs on a page, instead of replacing them entirely.",1,562,FALSE,NA
shiny,de41237763c15696ac1cf61fdb69b49d,Allow listening on domain sockets.,1,563,FALSE,NA
shiny,d739fce6c97f642658c16ee9405de94c,Added `actionButton()` to Shiny.,1,564,FALSE,NA
shiny,bfa735f57b74edff90451eabed639480,"The server can now send custom JSON messages to the client. On the client side, functions can be registered to handle these messages.",1,565,FALSE,NA
shiny,3f5822b09b2e47ab725fbf931afa83bc,Callbacks can be registered to be called at the end of a client session.,1,566,FALSE,NA
shiny,d3c9614348a42c74698a449dddaa9ed3,Add ability to set priority of observers and outputs. Each priority level gets its own queue.,1,567,FALSE,NA
shiny,4970011c899ad0ce4aefdbe6a84fed62,Fix bug where the presence of a submit button would prevent sending of metadata until the button was clicked.,1,568,FALSE,NA
shiny,e4557ec5ca3ffb713fb9ed4edb7c8a68,`reactiveTimer()` and `invalidateLater()` by default no longer invalidate reactive objects after the client session has closed.,1,569,FALSE,NA
shiny,0d9e682445f7a8601a35e95844731484,Shiny apps can be run without a server.r and ui.r file.,1,570,FALSE,NA
shiny,4db7781809164d76de97aa98713caba9,Switch from websockets package for handling websocket connections to httpuv.,1,571,FALSE,NA
shiny,1c863cfc77595b0d09bde6ecaaa1cc6e,"New method for detecting hidden output objects. Instead of checking that height and width are 0, it checks that the object or any ancestor in the DOM has style display:none.",1,572,FALSE,NA
shiny,e2c18691dd3d68603eea2476ebb6b570,"Add `clientData` reactive values object, which carries information about the client. This includes the hidden status of output objects, height/width plot output objects, and the URL of the browser.",1,573,FALSE,NA
shiny,743df01533efe673daf1685750e40fa2,Add `parseQueryString()` function.,1,574,FALSE,NA
shiny,1d6b25cd65bf4bcf1b35f5c407a8bab1,"Add `renderImage()` function for sending arbitrary image files to the client, and its counterpart, `imageOutput()`.",1,575,FALSE,NA
shiny,43fe675b7bff27d7643a422c9c8c3337,Add support for high-resolution (Retina) displays.,1,576,FALSE,NA
shiny,fe06fb0a987e49afa686895109f025b3,"Fix bug #55, where `renderTable()` would throw error with an empty data frame.",1,577,FALSE,NA
shiny,c20511b166544061739a63b9d89c6679,Fix bug where width and height weren't passed along properly from `reactivePlot` to `renderPlot`.,1,578,FALSE,NA
shiny,c7a24403fb04c54e59c62a9b798eeb3f,Fix bug where infinite recursion would happen when `reactivePlot` was passed a function for width or height.,1,579,FALSE,NA
shiny,746d88b0ec3b8a8900fa6b0bda3393c8,Added suspend/resume capability to observers.,1,580,FALSE,NA
shiny,c0fb0216cf2143236f6aa7713bd48f11,Output objects are automatically suspended when they are hidden on the user's web browser.,1,581,FALSE,NA
shiny,a3cb13d78a90d9f3319be5e0089ea44c,"`runGist()` accepts GitHub's new URL format, which includes the username.",1,582,FALSE,NA
shiny,245f67cd6a96e4b7df6110ca87415940,`reactive()` and `observe()` now take expressions instead of functions.,1,583,FALSE,NA
shiny,3310140391179b54531dd1df82e78fe9,"`reactiveText()`, `reactivePlot()`, and so on, have been renamed to `renderText()`, `renderPlot()`, etc. They also now take expressions instead of functions.",1,584,FALSE,NA
shiny,82f8fbbd160872a45c8949e276c1456e,Fixed a bug where empty values in a numericInput were sent to the R process as 0. They are now sent as NA.,1,585,FALSE,NA
shiny,ff270924ab79cd10f7421f86b1a4098e,Fix issue #91: bug where downloading files did not work.,1,586,FALSE,NA
shiny,f19b5b5fa3167e3ab560abb3fe579d57,"Add \[\[\<- operator for shinyoutput object, making it possible to assign values with `output[['plot1']] <- ...`.",1,587,FALSE,NA
shiny,bdf25c98890da5b111b22b8089f449cb,Reactive functions now preserve the visible/invisible state of their returned values.,1,588,FALSE,NA
shiny,842a7ed4e8532cde2cdb8d823c9cd618,Reactive functions are now evaluated lazily.,1,589,FALSE,NA
shiny,84c421b625732c4cc8c72c405d8cf649,Add `reactiveValues()`.,1,590,FALSE,NA
shiny,d4a4b8ae7450d48aff7a7f609ce9b86e,Using `as.list()` to convert a reactivevalues object (like `input`) to a list is deprecated. The new function `reactiveValuesToList()` should be used instead.,1,591,FALSE,NA
shiny,e63afbd7bca8f85c5cbd3dda14463a72,"Add `isolate()`. This function is used for accessing reactive functions, without them invalidating their parent contexts.",1,592,FALSE,NA
shiny,715be5ac8997e2bbaedd7e841f9e226a,Fix issue #58: bug where reactive functions are not re-run when all items in a checkboxGroup are unchecked.,1,593,FALSE,NA
shiny,0f344ef8de4d61aebd0eeed813e2f3e2,"Fix issue #71, where `reactiveTable()` would return blank if the first element of a data frame was NA.",1,594,FALSE,NA
shiny,a27b6cb92555641f2aecb6f6c4d1e5b6,"In `plotOutput`, better validation for CSS units when specifying width and height.",1,595,FALSE,NA
shiny,1d6018a72d1da2c22c299a5d4f5ea201,`reactivePrint()` no longer displays invisible output.,1,596,FALSE,NA
shiny,5c8bdc887465abe66c2a86e00acadf03,"`reactiveText()` no longer displays printed output, only the return value from a function.",1,597,FALSE,NA
shiny,f14c8644ca37e6a7bcc6ab37f7a531bf,"The `runGitHub()` and `runUrl()` functions have been added, for running Shiny apps from GitHub repositories and zip/tar files at remote URLs.",1,598,FALSE,NA
shiny,abb125f4d7770d52a7a11055710ce379,"Fix issue #64, where pressing Enter in a textbox would cause a form to submit.",1,599,FALSE,NA
shiny,d9b3245343e7ba4e5e369033d4a0dcb6,`runGist` has been updated to use the new download URLs from https://gist.github.com.,1,600,FALSE,NA
shiny,d002516a1a9e869004377ee357f321df,"Shiny now uses `CairoPNG()` for output, when the Cairo package is available. This provides better-looking output on Linux and Windows.",1,601,FALSE,NA
shiny,c9c80f4d16da30640cdca27aa3ff735a,Ignore request variables for routing purposes,1,602,FALSE,NA
shiny,31f80aa84106d05b6fc0714c072779a5,Fix CRAN warning (assigning to global environment),1,603,FALSE,NA
shiny,568bc7de06edbf9e53fad41353941221,"\[BREAKING\] Modify API of `downloadHandler`: The `content` function now takes a file path, not writable connection, as an argument. This makes it much easier to work with APIs that only write to file paths, not connections.",1,604,FALSE,NA
shiny,98f63621ffdeef3a29c40383c0732ae0,Fix subtle name resolution bug--the usual symptom being S4 methods not being invoked correctly when called from inside of ui.R or server.R,1,605,FALSE,NA
shiny,767a349062dd291cf811fcdc8db5ca6a,"Fix slider animator, which broke in 0.1.10",1,606,FALSE,NA
shiny,9c112c6e109a84c63f4a72afa59ca98a,Fix temp file leak in reactivePlot,1,607,FALSE,NA
shiny,b7aa6e4cfe51184e252e1fbb7efce919,Fix problems with runGist on Windows,1,608,FALSE,NA
shiny,ba0a754c923c217115fe1a89f2941cf3,"Add feature for on-the-fly file downloads (e.g. CSV data, PDFs)",1,609,FALSE,NA
shiny,8b185e263a7bf833f45b663c08d5c9af,Add CSS hooks for app-wide busy indicators,1,610,FALSE,NA
shiny,6880acc505f070e95262a952de8e042e,Fix input binding with IE8 on Shiny Server,1,611,FALSE,NA
shiny,4e899aeeea24a56ed00ba559468ab302,Fix issue #41: reactiveTable should allow print options too,1,612,FALSE,NA
shiny,2eae379411f1d4f4db3a022947fcfa8e,Allow dynamic sizing of reactivePlot (i.e. using a function instead of a fixed value),1,613,FALSE,NA
shiny,321ecb56ec99f14d2b2da60c130a95b2,Support more MIME types when serving out of www,1,614,FALSE,NA
shiny,3b4d88dad745be2b617dfffcf5db80ba,Fix issue #35: Allow modification of untar args,1,615,FALSE,NA
shiny,b077e1c19d93d6c29717574f3d598a31,headerPanel can take an explicit window title parameter,1,616,FALSE,NA
shiny,c16d92d69af2ed839f9c65d0c218a18b,checkboxInput uses correct attribute `checked` instead of `selected`,1,617,FALSE,NA
shiny,3240f97e37eb009ac8134605f1226cd7,Fix plot rendering with IE8 on Shiny Server,1,618,FALSE,NA
shiny,fb745c841878260b909fe14b53486ae5,Much less flicker when updating plots,1,619,FALSE,NA
shiny,559ced63e744fdea46915720eea66521,More customizable error display,1,620,FALSE,NA
shiny,561f563cefe8439458aef74d3e421e23,"Add `includeText`, `includeHTML`, and `includeMarkdown` functions for putting text, HTML, and Markdown content from external files in the application's UI.",1,621,FALSE,NA
shiny,78fb0fbb12401d150f9a1dece9ab2cb6,Add `runGist` function for conveniently running a Shiny app that is published on gist.github.com.,1,622,FALSE,NA
shiny,cab8c33e491cac5ad043ccb5e633f614,Fix issue #27: Warnings cause reactive functions to stop executing.,1,623,FALSE,NA
shiny,d640d1f804f2dfe1a6d23b41b3253e83,The server.R and ui.R filenames are now case insensitive.,1,624,FALSE,NA
shiny,5464e59bb50f0fe02eeaef84ff591401,Add `wellPanel` function for creating inset areas on the page.,1,625,FALSE,NA
shiny,eb1c990206cc9eb9dd6519083b0cad55,Add `bootstrapPage` function for creating new Bootstrap based layouts from scratch.,1,626,FALSE,NA
shiny,e88645a95cf3779f196a90c54ad0968e,Fix issue #26: Shiny.OutputBindings not correctly exported.,1,627,FALSE,NA
shiny,50de9d8ea938a71c607c103fd049d1da,Add `repeatable` function for making easily repeatable versions of random number generating functions.,1,628,FALSE,NA
shiny,fa7fe7bc33abe4d33009c3ad52d198a8,Transcode JSON into UTF-8 (prevents non-ASCII reactivePrint values from causing errors on Windows).,1,629,FALSE,NA
shiny,63684a40f48635f5962e4074a39ceea4,"Import package dependencies, instead of attaching them (with the exception of websockets, which doesn't currently work unless attached).",1,630,FALSE,NA
shiny,add4096ae91723cb81f1cea7b8137085,"conditionalPanel was animated, now it is not.",1,631,FALSE,NA
shiny,c63bb0b36c4146ba06f3699b25bdd15f,bindAll was not correctly sending initial values to the server; fixed.,1,632,FALSE,NA
shiny,a331e21f85229957c88fd34098a5ea88,BREAKING CHANGE: JS APIs Shiny.bindInput and Shiny.bindOutput removed and replaced with Shiny.bindAll; Shiny.unbindInput and Shiny.unbindOutput removed and replaced with Shiny.unbindAll.,1,633,FALSE,NA
shiny,8cd0635e22b8c630fd6d791065958937,"Add file upload support (currently only works with Chrome and Firefox). Use a normal HTML file input, or call the `fileInput` UI function.",1,634,FALSE,NA
shiny,247f3d1cd897c7aa940e0aeddae55b7a,"Shiny.unbindOutputs did not work, now it does.",1,635,FALSE,NA
shiny,fd75c6ea444101662efa436134a55129,Generally improved robustness of dynamic input/output bindings.,1,636,FALSE,NA
shiny,77a93123f16c15a3495b7e315e49353c,"Add conditionalPanel UI function to allow showing/hiding UI based on a JS expression; for example, whether an input is a particular value. Also works in raw HTML (add the `data-display-if` attribute to the element that should be shown/hidden).",1,637,FALSE,NA
shiny,65a1d4f154035b3ea4d6cc3ba45436ee,htmlOutput (CSS class `shiny-html-output`) can contain inputs and outputs.,1,638,FALSE,NA
shiny,9d0e5f81de11978076b88e6af8b0968d,Allow Bootstrap tabsets to act as reactive inputs; their value indicates which tab is active,1,639,FALSE,NA
shiny,566a6edb511909d64b901802aa0d0bfc,Upgrade to Bootstrap 2.1,1,640,FALSE,NA
shiny,661d696235aa2595d684a8da45fcac26,"Add `checkboxGroupInput` control, which presents a list of checkboxes and returns a vector of the selected values",1,641,FALSE,NA
shiny,ef2823009d64d039d507b3278dbb3e4f,"Add `addResourcePath`, intended for reusable component authors to access CSS, JavaScript, image files, etc. from their package directories",1,642,FALSE,NA
shiny,494451904b288b6febead8f0c39943bb,"Add Shiny.bindInputs(scope), .unbindInputs(scope), .bindOutputs(scope), and .unbindOutputs(scope) JS API calls to allow dynamic binding/unbinding of HTML elements",1,643,FALSE,NA
shiny,6096938ceb6dc3bfe7c1766367f92849,"Introduce Shiny.inputBindings.register JS API and InputBinding class, for creating custom input controls",1,644,FALSE,NA
shiny,81e30bdcc9bfa4c14a7f5580068f1b05,Add `step` parameter to numericInput,1,645,FALSE,NA
shiny,75cdfbbeab7704913d505d1b909f20a6,Read names of input using `names(input)`,1,646,FALSE,NA
shiny,8f5408e7615c08da58fd5063808740c0,Access snapshot of input as a list using `as.list(input)`,1,647,FALSE,NA
shiny,5b32735c5e8ffacdd998129afcccaa16,Fix issue #10: Plots in tabsets not rendered,1,648,FALSE,NA
shiny,d73e83540415fde5a26238c9cef6c5f0,Initial private beta release!,1,649,FALSE,NA
shinydashboard,07ce1fcf2eff1ffe2ab7fbfcb8373402,Fixed #369: `renderMenu()` did not work correctly when shinydashboard was built against shiny 1.6.0 (and older) but used with shiny 1.7.0 (and higher). (#370),1,1,FALSE,NA
shinydashboard,5182afec42aaec91039466c98b920ada,"Shiny async support: render functions can now handle promises. Instead of returning a `valueBox` to `renderValueBox`, return a promise that resolves to a `valueBox` (for example).",1,2,FALSE,NA
shinydashboard,f1515f18e651ad505505fcfba063b35c,Fixed #297: recent versions of Shiny caused the sidebar toggle icon to not render because FontAwesome was upgraded in Shiny. (#299),1,3,FALSE,NA
shinydashboard,1ebc466b2529037f5a8736aecc13e0d0,Changed license from GPL-2 to GPL\>=2 (meaning GPL version 2 or later). (#258),1,4,FALSE,NA
shinydashboard,cc3e0efd33766898578caa9054400ad1,Fixed shinytest/#167: shinydashboard did not work properly with shinytest. (#256\](https://github.com/rstudio/shinydashboard/pull/256)),1,5,FALSE,NA
shinydashboard,40bd8725f01546ec869278b3f5b8f1b1,Fixed #257: Calling the `setValue()` method on `sidebarmenuExpandedInputBinding` did not cause the submenu to expand. This caused screenshots from shinytest to be incorrect.,1,6,FALSE,NA
shinydashboard,feb87b4efc3996452adbf31971a42d01,Fixed #235: make sure that the text input field and search button line up when using `sidebarSearchForm`. (#243),1,7,FALSE,NA
shinydashboard,cf06bfa47639b29c2a6ffe56b49360e6,"Fixed #229: only run `ensureActivatedTab()` after `renderMenu()` is called **if** the `el` in question has class `""sidebar-menu""`. Since this function is used for both `dropdownMenuOutput` and `sidebarMenuOutput`, we have to make sure that `ensureActivatedTab()` is only called if it's the latter case (otherwise, you get unexpected tab redirections when updating a dropdown menu). (#233)",1,8,FALSE,NA
shinydashboard,b42a2f3bcb0289e87017a77fc35ac978,Fixed #214: make sure that the `data-value` attribute of `.sidebarMenuSelectedTabItem` is always set in the body of the `ensureActivatedTab()` function. (#216),1,9,FALSE,NA
shinydashboard,004097838d3fadae6dbfb552c0481596,Fixed #217: correct `input$sidebarCollapsed` value for edge cases by attaching the change event to the end of the sidebar CSS transitions (instead of when the toggle button is clicked). Also make sure that `input$sidebarCollapsed` is set to `FALSE` when the app starts up with the sidebar already collapsed. (#222),1,10,FALSE,NA
shinydashboard,8ec60ae2d542ba23abe557e8abbfe001,Address #179 support for bookmarking the expanded/collapsed state of the whole sidebar. (commit e71c93f),1,11,FALSE,NA
shinydashboard,f0f053f198e62404cb05e71193cb8f80,"Added Shiny input to keep track of which sidebar `menuItem` is expanded (if any), which makes bookmarking the exact state of the sidebar trivial. (commit 6901b90)",1,12,FALSE,NA
shinydashboard,75da2a6147a79fee9c0c9861cdfd39e0,"Addressed #165: added a new optional argument, called `headerText` to the `dropdownMenu()` function. If provided by the user, this text (instead of the default) will be shown on the header of the menu (only visible when the menu is expanded). See `?dropdownMenu` for more details. #207",1,13,FALSE,NA
shinydashboard,3c93793641b107a81e3e043a260e3b96,Split JS files. (commit ea91503). More updates to Gruntfile and structure. (commit 4e80616),1,14,FALSE,NA
shinydashboard,f1a2b109fe8510eae6cb5e8b66a2ef15,Better shown/hidden mechanic for Shiny inputs inside collapsible `menuItem`s. (commit 6901b90),1,15,FALSE,NA
shinydashboard,f8d5b80a6be8006378093aacd01ce357,"Added hack on adminLTE/app.js in order to make the `slideUp`/`slideDown` css transitions look reasonable when its content is initially empty (use case is for hidden Shiny outputs that are not rendered until the first time the `menuItem` is expanded and reveal them -- i.e. first time that `trigger(""shown"")` is called). (commit 25725a6)",1,16,FALSE,NA
shinydashboard,08380985931570a2c5db786d94a01203,Added manual tests for bookmarking and the shown/hidden events that happen on the sidebar. (commit 9e3e55d),1,17,FALSE,NA
shinydashboard,d63bde62082e12b9859b61b056bcd1a3,Fixed #71 and #87: detect and enforce selected tab for dynamic sidebar menus by calling `ensureActivatedTab()` for these. (commit 9b88a79),1,18,FALSE,NA
shinydashboard,6f9b02bd99ab09634a4b7639a6f290cb,"Fixed #127 and #177: previously, if `dashboardSidebar()` was called with an explicit `width` parameter, mobile rendering would look weird (the sidebar wouldn't completely disappear when it was collapsed, and content in the dashboard body would be hidden under the still-visible sidebar). (#204)",1,19,FALSE,NA
shinydashboard,80b66c3945f84d24dbeccdf4a4805c81,Fixed #79: Re-enable slight css transition when the sidebar is expanded/collapsed. (#205).,1,20,FALSE,NA
shinydashboard,da9d6e243ad510dbc5fe1b0908faf264,"Fixed #89: We claimed that `dashboardPage()` would try to extract the page's title from `dashboardHeader()` (if the title is not provided directly to `dashboardPage()`); however, we were selecting the wrong child of the header tag object (#203)",1,21,FALSE,NA
shinydashboard,9e8dc594254a08e03299cc7658fb6d71,Fixed #129: Trigger shown/hidden event for Shiny outputs in the sidebar. (#194),1,22,FALSE,NA
shinydashboard,238fa5eb28aa7a0599376279f0966541,"Fixed #73: add `collapsed` argument to `dashboardSidebar()`, which allows it to start off collapsed. (#186)",1,23,FALSE,NA
shinydashboard,d412d335c3c4fd69e87f781b8e2d72c5,Fixed #62: make images resize when the sidebar collapses/expands. #185,1,24,FALSE,NA
shinydashboard,0697564fcb80cb5223945e5983dee7ea,Fixed #176 (making buttons look good on the sidebar) by giving Shiny action buttons and links some margin space. (#182),1,25,FALSE,NA
shinydashboard,6ea81758c0bee08216864af48bd7d9f8,Update documentation to newest version of roxygen. (commit #541d3c1),1,26,FALSE,NA
shinydashboard,f9ab9735e2cc2b099ae7359141fb396d,Addressed #178: switch from `npm` to `yarn`. Also upgraded all yarn packages to the `latest` tag (all major changes). #184,1,27,FALSE,NA
shinydashboard,43734b49acd459643497e5dc77e6dc4f,Updated to AdminLTE 2.3.11. (#181),1,28,FALSE,NA
shinydashboard,a1dc1f2b1446732e6e38d951e4fcd86d,"Fixed (#160: Using a dynamically-created `sidebarMenu` without an `id` argument would cause the app to not start, when used with Shiny 0.14.",1,29,FALSE,NA
shinydashboard,05e36ea10fb1281980af19a4fbc59937,"Added ability to bookmark and restore tabs, when used with Shiny 0.14 and above. (#152, #157)",1,30,FALSE,NA
shinydashboard,2cb48f8e183d38dba16f3f14b1b6d4a3,Fixed issue with R CMD check and Shiny version 0.14.,1,31,FALSE,NA
shinydashboard,7ecb50a70f9bef918f4b065edcbf9c5b,Updated to AdminLTE 2.3.2 (1ee281b).,1,32,FALSE,NA
shinydashboard,50edbb4d977549c6c3e4619100042c10,"Logout panels from Shiny Server Pro were previously not visible, but now they are.",1,33,FALSE,NA
shinydashboard,55e408a02adfc2b9b7e452f5503b9cbb,"If a `sidebarUserPanel` doesn't have an image, space for the image is no longer allocated.",1,34,FALSE,NA
shinydashboard,6bf7bf0f88466b2dc90453a54c4c8b1c,`tabNames` are now validated so that illegal characters result in an error early. (#66),1,35,FALSE,NA
shinydashboard,49d5555ddf531a05858c8e2d2e5bb3c3,`sidebarUserPanel` now displays properly. (#70),1,36,FALSE,NA
shinydashboard,92599d2362b7490c98e322fca9dc5991,"`radioButtons` did not wrap, but now they do. (#60)",1,37,FALSE,NA
shinydashboard,34203734d540639ed03b8ee1060b43ac,"Updated to AdminLTE 2.1.2 (406de4e). Please note that some CSS selectors have changed, so if you are using custom CSS, it may require modification. The documentation at http://rstudio.github.io/shinydashboard/appearance.html has some updated examples.",1,38,FALSE,NA
shinydashboard,4725ed96d4945e0151ee0e84b704e40c,shinydashboard now respects the `shiny.minified` option.,1,39,FALSE,NA
shinydashboard,b33ed82809f445547e7cee9467ba8422,"Collapse buttons on boxes trigger `shown` and `hidden` events. Previously they did not, which resulted in dynamic content not working for boxes that started collapsed. (#17, #42)",1,40,FALSE,NA
shinydashboard,0e80a66151f0099679c22973431ce64b,Dynamic menuSubItems now work in the sidebar. (#54),1,41,FALSE,NA
shinydashboard,99970679b42f06629a44566024a3e1a2,"Arbitrary content may now be used in a `sidebarMenu()`, not just `menuItem`s. (#44)",1,42,FALSE,NA
shinydashboard,3b3b8da3d1f8d336fcf278f3ec84b9d1,"Added options to set the width of `dashboardHeader()` and `dashboardSidebar()`. (#43, #45, #54)",1,43,FALSE,NA
shinytest2,5762d1b6c2bcbdba9f31ce4b3ec1ea76,"`AppDriver$get_screenshot()`/`AppDriver$expect_screenshot()` now default an underlying `deviceScaleFactor` option to 0 instead of 1. This ensures that image sizes are more consistent across devices. To revert to prior behavior, provide `screenshot_args = list(scale = 1)` to `get_screenshot()`/`expect_screenshot()` (#350).",1,1,FALSE,NA
shinytest2,c5d45b328ef217c1030051e7b4fd6218,"`AppDriver$get_screenshot(selector=)`, `AppDriver$expect_screenshot(selector=)`'s default `selector` value changed from the HTML DOM selector `""html""` to `""scrollable_area""`. `""scrollable_area""` is a custom `{shinytest2}` selector that will take a screenshot of the entire scrollable area. While a breaking change, this new default value is more intuitive and robust to non-standard CSS height and width values that fail with `""html""`. (#325)",1,2,FALSE,NA
shinytest2,a293b8f38dce292124202066a8e6137d,"`AppDriver$get_screenshot(selector=)`, `AppDriver$expect_screenshot(selector=)`, and their corresponding `selector` values inside `screenshot_args=`, gained two custom `{shinytest2}` values: `""scrollable_area""` and `""viewport""`. `""scrollable_area""` is the new default value and it takes a screenshot of the entire scrollable area. This is more intuitive than the previous value of the HTML DOM selector `""html""` which may result in a surprising height and width. `""viewport""` will take a screenshot of the current browser viewport. This means it will take a screenshot of whatever `$view()` is currently looking at. (#325)",1,3,FALSE,NA
shinytest2,b89638c1186f510e3d974f7859d19ef5,GitHub Action `rstudio/shinytest2/actions/test-app` added support for multiple directories in `app-dir`. These can be supplied using multiline string yaml syntax. See use-ci vignette for more details. (#332),1,4,FALSE,NA
shinytest2,f06aebcc0d1ac133dec3e84d2c77a629,GitHub Action `rstudio/shinytest2/actions/test-app` changed the default value of `upload-snapshots` from `false` to `true`. This is in preparation for automated snapshot handling. (#332),1,5,FALSE,NA
shinytest2,7cb2e6eb920f2a04ffff9741972f63ba,Set the directory to the Shiny App directory before starting the background R process. This allows for local `.Rprofile` and `.Renviron` files to be found naturally. (#275),1,6,FALSE,NA
shinytest2,242eb8f044e4817090ac0b5d8489ffbc,Fixed request from CRAN to correct C++11 problems in web checks (#326),1,7,FALSE,NA
shinytest2,0faba2836df4d993146f3e467113c6a4,Fixed bug where `compare_screenshot_threshold()` did not safe guard against errors thrown by `screenshot_max_difference()` (#276),1,8,FALSE,NA
shinytest2,f5b7ae6998a016191f4588095433b130,Fixed bug where preview overflow did not have length of 1 (@​cpsievert #291),1,9,FALSE,NA
shinytest2,0d0e0e364a6ddc8cdf446df6b1674eb7,Better support for saving global variables for a Shiny server function (#307),1,10,FALSE,NA
shinytest2,e9953de7e176be76549d1e5aed22568a,Better error message when both app.R and server.R are found (#284),1,11,FALSE,NA
shinytest2,26a0db9b650f056a8415df0acc32de66,Force JS code to be a character for `{glue}` support (#288),1,12,FALSE,NA
shinytest2,1dcc577d64de271a17ef3d8aea3516dd,"`AppDriver$get_logs()` has changed the `level` values when `location` equals `""shiny""`. The levels of `""error""` and `""info""` have been renamed to `""stderr""` and `""stdout""`. (#265)",1,13,FALSE,NA
shinytest2,d91f6ac8ac95c8e82d01320eb5a0535b,"All downloaded snapshots will contain a counter prefix (e.g. `003-` in `003-my_custom_name.txt`) to avoid having two files point to the same snapshot file location. Sharing the same snapshot file is dangerous as the last file written is stored as truth, overwriting any knowledge of the original file. (#261)",1,14,FALSE,NA
shinytest2,275794c73bf48766224bdba0d4876d24,"If a `content-disposition` header is provided and `AppDriver$expect_download(name = NULL)` (default), the snapshot file will try to be saved using the `content-disposition` header value. When paired with `compare = NULL` (default), `{testthat}` will choose the proper `compare` method between `compare_file_text()` and `compare_file_binary()`. See `?testthat::expect_snapshot_file` for more details. (#261)",1,15,FALSE,NA
shinytest2,e7dddcfdd743a18feea42e44bf73cecc,"`AppDriver$expect_download()` will now download snapshot files using a sanitized file name, e.g. `AppDriver$expect_download(name = ""my/custom/name.txt"")` will be stored in the file `tests/testthat/_snaps/003-my_custom_name.txt`. (#261)",1,16,FALSE,NA
shinytest2,dfd0ca7ed3ed9807183d0d18b4f279de,"`compare_screenshot_threshold()` is a new method to compare screenshots and allow small differences between two screenshots. This method checks every subset matrix of the pixel differences between the two images. If any total difference is larger than the `threshold` value, the two images are considered to be different. The subset matrix size can be increased by setting `kernel_size`. (#231)",1,17,FALSE,NA
shinytest2,8195c71c9afbc2bd1d27aaab2ff4b140,"Support for supplying your own compare method to `AppDriver$expect_screenshot(compare=)` has been added. By default, `AppDriver$expect_screenshot(compare=)` is set to `compare_screenshot_threshold(threshold = NULL)` which is equivalent to `testthat::compare_file_binary()`. No default screenshot expectation behavior has changed. (#231)",1,18,FALSE,NA
shinytest2,2095f948e6403c7c30e90426eced6732,"`test_app()` now inherits the existing test reporter when testing multiple apps within a package test file. This allows for a seamless, single reporter output instead of nested reporters being displayed. (#192)",1,19,FALSE,NA
shinytest2,be5cf4b0935271ae7833cd3078618d96,"The recording browser window is now closed when either the ""Save test and exit"" or ""Exit"" buttons are clicked. (@​daattali, #202)",1,20,FALSE,NA
shinytest2,66ad01ab35c333557d582f690e195628,"When testing and `{chromote}` can not be started, the test will be skipped. When testing on windows in CI, `{chromote}` will get an extra attempt to be started (#225)",1,21,FALSE,NA
shinytest2,c3a7f95d74dbdc6df0ae319d1fe1e087,"Make `{globals}` an `Imports` package, instead of a `Suggests` package (#223)",1,22,FALSE,NA
shinytest2,3077f106c935e05407061b60911b8f14,Add support for *not* recording the screen size when recording a test (#223),1,23,FALSE,NA
shinytest2,0dd5f7677f551122df6de7cb19957e5a,Fix set of bugs found by @​daattali including test files should be opened in the IDE after recording and test and replace missing images in the website (#199),1,24,FALSE,NA
shinytest2,5f5a195f759ecf52ef71b1cd8d954ec6,Provide example workflows on how to use `rstudio/shinytest2/actions/test-app` GHA action (#217),1,25,FALSE,NA
shinytest2,42aff99ed22ad630b526c233b02fcead,"When setting a date time slider value, it can now handle array inputs properly. When recording a date time slider value, numeric values will not be recorded as milliseconds instead of seconds since epoch. (#223)",1,26,FALSE,NA
shinytest2,047b8a4912b2dfd3c3217115fa31aad8,"When creating a test setup file for `{shinytest2}`, use the file path `tests/testthat/setup-shinytest2.R` instead of `tests/testthat/setup.R` to provide some quick context within the file name (#224)",1,27,FALSE,NA
shinytest2,ffce24c3a6216d6cf2e7b8acc8ef41ff,"Remove trailing comma causing render bug in recorder app (@​mehrnoushmalek, #239)",1,28,FALSE,NA
shinytest2,a6d13450956653703b1d7dd5da4dd5e2,Update {lintr} lints to v3 (#240),1,29,FALSE,NA
shinytest2,9f656ef163370867d885e3cc3c15a9d7,Fixed GHA links for `rstudio/shinytest2/actions/test-app@​v1` (#249),1,30,FALSE,NA
shinytest2,1157cd2272b6fe1cebc89e15b8dbabf0,"Fix documentation on on `AppDriver`'s `delay` parameter being in seconds, not *milli*seconds (#255)",1,31,FALSE,NA
shinytest2,1aad1b83d14106f08e286b4c9b620b3f,Escape JS text supplied to `AppDriver$wait_for_js(script=)` (#258),1,32,FALSE,NA
shinytest2,59bde1dd6e484007de69abc43e22d483,"Added support for `AppDriver$stop(signal_timeout=)`. The default timeout when sending `SIGINT`, `SIGTERM`, and `SIGKILL` signals to the `{shiny}` process is now 500ms. However, if `{covr}` is running, the default timeout is 20,000 ms to allow time for the report to generate. (#259, #263)",1,33,FALSE,NA
shinytest2,4aabd299c71907fa49d1d679d44aa20f,Add example and FAQ entry on how to test bookmarking (#262),1,34,FALSE,NA
shinytest2,aca18ad12620857354751c0ead7825ac,Added a DOI badge to README.md (#267),1,35,FALSE,NA
shinytest2,08811a9745331f39e2d2a37d3324bc7e,Update docs for CRAN (#253),1,36,FALSE,NA
shinytest2,102154d07167b8fbf16597e8bcdb8660,Initial release of package,1,37,FALSE,NA
shinyuieditor,8e892341fc2839d0bdf90a756c975ba4,Tour works again in website live-demo mode,1,1,FALSE,NA
shinyuieditor,9a484e3eb2995bb87f795cb8a84d42df,Deleting the element in the value slot of a Value Box no longer causes a crash. (#241),1,2,FALSE,NA
shinyuieditor,e4a97ecf44f25ccaa02cfb9424f2b412,Switching between two elements of the same input or output type no longer causes the ID field to take the value of the *previous* element. (#245),1,3,FALSE,NA
shinyuieditor,bf101222341cf19629ec48f555f1a941,Deleting an output with a bound render function in the server will now ask if you want to delete the render function as well. (#213),1,4,FALSE,NA
shinyuieditor,20b4c58440e99a7e1e6dee8ab5be1fdf,Updating the id of an input or output will now update the corresponding id in the server code. (#212),1,5,FALSE,NA
shinyuieditor,13bcbc0895c9bc3c44230739526c549c,Removed support for multi-file apps. This was a major source of bugs and complexity and was not used by many people.,1,6,FALSE,NA
shinyuieditor,998d07756db07289401cc70b86b15863,New website based on Astro framework replaces the old one based on `pkgdown`. (#201),1,7,FALSE,NA
shinyuieditor,bb6c45bed17947407617cbf35c64b9e5,Replaced `shiny::tabPanel` with `bslib::nav_panel()` to keep up with modern shiny app components. `tabPanel`s will be auto upgraded when using editor. (#215),1,8,FALSE,NA
shinyuieditor,4085814753904dbe2b310d3d35798303,Switched underlying parsing to use TreeSitter instead of the built-in R parser. This simplifies codebase and also makes whole app faster.,1,9,FALSE,NA
shinyuieditor,88ee4ab33cc3231198be9083c15dcb62,CSS unit inputs now respect valid ranges for their corresponding units. E.g. can't go bigger than 100% or smaller than 0px. (26324946e132f38dd4183543c51e44392649fab7 and a3f385a75cb868b245a0762cd6fa04f5942177c3),1,10,FALSE,NA
shinyuieditor,f910fda9d4753e3dbee281314350b945,You can now pass a direct path to an app in `launch_editor()`. (c931639284ed2420afe3ddc21fbb0261a289f8f4),1,11,FALSE,NA
shinyuieditor,c43d80a44a048b2c30d1ac8116ca1e96,"No longer crashes when special characters (e.g. `\` or `""`) are put into string inputs (2e241278750b6af816e44bb51750646a6f5de393)",1,12,FALSE,NA
shinyuieditor,76b0a0219ee577dfe62b2b57cf47c88e,Fixed bug where refreshing the page when using the editor via the `launch_editor()` function (as opposed to the vscode extension) could cause app file to be erased. (6aa03f4),1,13,FALSE,NA
shinyuieditor,25bb8f18975c794189057ea5e4f8c3a2,Fixed visual bug where headers and footers of bslib cards would show up even when nothing was in them in the vscode extension. (7d253de),1,14,FALSE,NA
shinyuieditor,f31bdfbb955c2a1cdcd02ea2c7e328b8,"Fixed bug where non-bsicon versions of value boxes would be converted to `bsicons::bs_icon(""undefined"")`. (aefb778)",1,15,FALSE,NA
shinyuieditor,961bc36bd525df00fa0b23a7d24b6d1b,Value Boxes from `bslib` are now available to use,1,16,FALSE,NA
shinyuieditor,9b1e64f1b16efbe62bd6e65178d7a7af,Ability to hook into pre/post processing of a node when going from raw ast to ui node and from ui node to R code. This enables the ability to abstract away things like function calls for arguments into things like enums or strings and then convert them back to function calls when generating R code.,1,17,FALSE,NA
shinyuieditor,d286a857c8937f1d46d16ac498562572,Updated underlying data structures to allow for more flexible navigation of the editors internal data structures. This will allow for more advanced features in the future where ui nodes can be added not only as children but as named arguments.,1,18,FALSE,NA
shinyuieditor,4ad8aec7d0b9d3a3282ea6749dfd4fff,Failures in reading/ parsing the app files are now caught and communicated to the user in the main UI in addition to the R console/ VSCode output pane. This means most crashes caused by malformed apps can be recovered from by fixing the formatting without needing to restart editor. Issue #56,1,19,FALSE,NA
shinyuieditor,e523d57c3d7ef9349b191fa561880c03,Failures in the front-end of the editor are now isolated to their location and include options for remedying along with submitting bug reports to github. #155,1,20,FALSE,NA
shinyuieditor,1e9c3e0a5d80e3c76862ba83fd8db186,Fixed problem introduced in 0.4.1 where elements dropped onto a grid layout would not be properly wrapped in a grid card if neccessary.,1,21,FALSE,NA
shinyuieditor,806bee35de315dc0aa5bc9275af76c34,Fixed bug where reactive values (or any user-declared functions) were called in code. #148,1,22,FALSE,NA
shinyuieditor,388d15d4111eacc54dc8fe181c38cc5e,Fixed problem where hard-resetting the app preview server didn't work when running in HTTPUV mode.,1,23,FALSE,NA
shinyuieditor,f81e963ba074f7c179025d5ec106f17d,New more flexible `bslib::card()` based cards are now available along with the old grid cards being updated to reflect the new the `gridlayout` wrapper `gridlayout::grid_card()`.,1,24,FALSE,NA
shinyuieditor,bca974aa8dece263fd528ad6943eb01f,"You can now add plain text anywhere you could add normal elements. The new ""Static Text"" node let's you enter descriptions etc... The contents can also have basic styles applied such as sizing and decoration.",1,25,FALSE,NA
shinyuieditor,7ff87a3505d1637799242bdc40211f34,Cards now have a simple header by default,1,26,FALSE,NA
shinyuieditor,cbc47968216f98f530a380814d1a3321,"In vscode, if ui changes are made to the app the selection of output definitions and addition of new output definitions no longer breaks.",1,27,FALSE,NA
shinyuieditor,199c694e71215dd7371250c92e5a0b2b,Fixed problem where making lots of quick updates to the state would cause the app to crash due to backend and client getting out of sync.,1,28,FALSE,NA
shinyuieditor,8a53bf3281078b6a0ba3c680fdd6c4ea,Content of cards can no longer spill over obscuring other elements like grid tract resizers.,1,29,FALSE,NA
shinyuieditor,bfdea6e1d9ef9c220d0e4a00811cf3f4,The visual indicator for swapping positions of items on the grid no longer flickers and actually is legible.,1,30,FALSE,NA
shinyuieditor,aef3c4d6208004db167e68c1cd75edbb,The width argument of shiny text input elements is now reflected in the main editor view.,1,31,FALSE,NA
shinyuieditor,9b6028ee1dbbfd2578bc21b92dfafd0c,"plot outputs no longer have a fixed width of `200px` when their `width` argument is unset, instead filling width of container as they do in running app.",1,32,FALSE,NA
shinyuieditor,b6d6757f2b964c9991468e312cb32f56,Code/ functions that the editor doesn't know how to deal with (e.g. custom functions or non-implemented ui elements) no longer crash app to blank screen.,1,33,FALSE,NA
shinyuieditor,ff5f7ba7ec73460563d3fc2e2d73c103,VSCode extension can now highlight output definitions and input uses in the server code.,1,34,FALSE,NA
shinyuieditor,0191c70f74c93d5ee561c81ed2f66143,In embedded mode (on the main website) the ui editor now provides full code to reproduce the current app.,1,35,FALSE,NA
shinyuieditor,25d90856f056cd6ae0c8870ae7720a8c,There's now a VSCode extension for running the ui editor. It adds a button for jumping from an app script directly into the UI editor and opening app code alongside editor.,1,36,FALSE,NA
shinyuieditor,6d6d0916f41d4a5a909805e2b66d0fa1,"Elements can now be deleted and changes undone and redone using the keyboard (#131, #135)",1,37,FALSE,NA
shinyuieditor,84cf97e7013984c52bfea4f65640c10e,Fix bug where deleting the only item in a container then deleting that container could crash app (#a27d440),1,38,FALSE,NA
shinyuieditor,a2d0b59ecc55d69a747de16421fe0653,"When starting the ui editor on an empty app path a visual interface is provided for choosing between templates. These templates can be navigated into and back using undo/redo buttons to allow for ""shopping around"" for the best template. (#114, #115)",1,39,FALSE,NA
shinyuieditor,c205293db55edf33a7a2b2f2d0170c06,Switching from absolute to relative units in the grid tracts now results in the tract remaining (almost) the same size instead of jumping to a much bigger or much smaller size due to differences in magnitude of units. (#110),1,40,FALSE,NA
shinyuieditor,0114f42c72a2f4239c196398a7891073,Improved quality/polish of included template apps.,1,41,FALSE,NA
shinyuieditor,7e9fddaf7eccaf327019f12b736c9220,"Radio inputs, sliders, DT tables, and ui outputs now default to a 100% width instead of an unset one.",1,42,FALSE,NA
shinyuieditor,fa5bf6502a91527f8bca5a427c7b61f9,Dragging to resize a grid tract with focus still inside of a popup tract info widget now hides the widget so the drag-to-resize info popup is not obscured. (#110),1,43,FALSE,NA
shinyuieditor,5f94c69338b9ab4629df43003534e1c3,Starting the editor on an app with a single column or row gridlayout element no longer crashes the app.,1,44,FALSE,NA
shinyuieditor,f628ad65d73c064e9c551a6def9e25a7,"On case-sensitive file-path operating systems like linux, the editor will now be able to see apps weather using the lowercase `.r` or uppercase `.R` extensions. (`ff46cdd`)",1,45,FALSE,NA
shinyuieditor,a90d657a79eafe4c1d81ff2098dba45f,Typing in numeric inputs no longer forces you to prefix numbers with 0 if you delete back to nothing to type a new number. (#118),1,46,FALSE,NA
shinyuieditor,a3d5a5d639431ace82b26409efa162ec,Content in really small grid cards no longer overflows.,1,47,FALSE,NA
shinyuieditor,e2a4625f4383fc85f58fab13feaeb49a,Addition of ui node for adding `DT` tables to app with `DT::DTOutput()`.,1,48,FALSE,NA
shinyuieditor,b6f7b98d91d63da72c55180c844165f9,Addition of ui node for `plotly` plots with `plotly::plotlyOutput()`.,1,49,FALSE,NA
shinyuieditor,460b0aa19485244cb05d494e4baf0471,Arguments passed to a known ui function that are not known about are now shown and able to be deleted in the properties pane instead of silently being passed through.,1,50,FALSE,NA
shinyuieditor,559d315d3def95f8a8120ce9838ea661,Arguments that are of incorrect or unknown types for a ui function are now displayed as such with the opportunity to revert to a valid value.,1,51,FALSE,NA
shinyuieditor,17f6e30979604ac2ecff91b2d034e1d2,"(Developer) Adding a new ui node now only requires meta-data and a component for the ""App View"" as the properties panel is automatically constructed",1,52,FALSE,NA
shinyuieditor,17f6e30979604ac2ecff91b2d034e1d2,• Overriding for custom properties panel layouts etc is possible using the `settingsFormRender` property for the ui node definition.,2,53,FALSE,"(Developer) Adding a new ui node now only requires meta-data and a component for the ""App View"" as the properties panel is automatically constructed"
shinyuieditor,6baec70e0b8eda6a980664f942a80268,Numeric inputs now have incrementer buttons in firefox (#60),1,54,FALSE,NA
shinyuieditor,7c65b97bea4bb484b74341a046aac096,New option for base page layout: `shiny::navbarPage()` (#76),1,55,FALSE,NA
shinyuieditor,0cc24d97472dc5dd65e3ecdd201d494c,"Support for `shiny::tabsetPanel()`, `shiny::tabPanel()`, and `gridlayout::grid_container()`",1,56,FALSE,NA
shinyuieditor,6e2f134dc30f0ebebc13a26cc46e1f01,Updated styles for drop-targets. Now use pulsing background color instead of outlines to indicate possible drop targets.,1,57,FALSE,NA
shinyuieditor,19263157c9d6400df5680d752009d2f5,Improved accessability for settings panel inputs with properly scoped labels and aria descriptions,1,58,FALSE,NA
shinyuieditor,cd2b5b6ec853dcba976b89fb5ff710a2,Popups on hover over the elements panel now provide some context for the functionality of the element. (#74),1,59,FALSE,NA
shinyuieditor,53e4c76ffc819bd4f0f22e1c609b476b,Update to React v18 for improved performance,1,60,FALSE,NA
shinyuieditor,cb23eadb247df10efb53534584546f42,"Fixes bug where ui editor would not work on hosted services like RStudio Workbench. Thanks @​mdancho84! (#73, #90)",1,61,FALSE,NA
shinyuieditor,edc5cd7539cb5cd0173c8b4cf991f4c5,Nodes can now be dragged to to the child position to the left of any of their ancestor nodes.,1,62,FALSE,NA
shinyuieditor,7d67ac030f6be02d342724b3bed66040,Selection now properly follows node after move.,1,63,FALSE,NA
shinyuieditor,6586205d30264c91893e3d5514327d7e,Generated layout tables for gridlayout are now column aligned.,1,64,FALSE,NA
shinyuieditor,bedbc93178afbca26aaa3fae586a8c31,Edits can now be made in either ui editor *or* the in the code and the updates are now automatically synced (`fca63396948905055d6f42d05f87993bc3620c65`),1,65,FALSE,NA
shinyuieditor,9c1620aa89c157bc8ceba6490fab6431,New single-file starter templates (geyser and chick weights),1,66,FALSE,NA
shinyuieditor,c049467814207030bacd07a7c4f757c6,The main container for placing items on grid is now `gridlayout::grid_card()`,1,67,FALSE,NA
shinyuieditor,628d5e6c57a9386ad195ea9c11cdf4b1,Tract resizing is now much quicker and has less visual noise due to only showing small size-popups (`5e767eef9e62170f758d1aab87ba22464008cd7b`),1,68,FALSE,NA
shinyuieditor,96ebfa3ec35cb1c3fee4e5946c37aeb2,Website updated with a bunch of new articles,1,69,FALSE,NA
shinyuieditor,d746efc71fc01de16d42b2511d84aa53,Added some explanatory text about the format of grid-names to the popup for naming newly added grid items (`ca625edb3c65c5a0da4ebebb5b9d04013c4e84e5`),1,70,FALSE,NA
shinyuieditor,0b221dcba6d50c0ec6f14088671a0b4b,The app preview window now no-longer shoes up at all if there's no preview connection. (`ae5d8113bd687bd7f7c2d540347bf3289bb57f49`),1,71,FALSE,NA
shinyuieditor,60a4dc94768ac3d53073139dd9382850,Theme argument is now supported in `gridlayout::grid_page()` (#51),1,72,FALSE,NA
shinyuieditor,23f175ad81d707113cc7a567b2824290,"Numeric inputs are now *usable* in firefox (See ""Known bugs"" for more detail.)",1,73,FALSE,NA
shinyuieditor,e71fa577aa773c082324d8925d2b41b6,Firefox inputs don't have increment buttons (#60),1,74,FALSE,NA
shinyuieditor,43e2b968c855910e008f4013defd89cf,Arguments that a component knows about but are supplied a non-known argument type will simply get wiped away (#58),1,75,FALSE,NA
shinyuieditor,f4514262195ae0fa6b2462936d3c269f,Can fail installing on windows using `pak` (#53),1,76,FALSE,NA
shinyuieditor,089dc9b3df8f2d2152f51c414ef6abac,"Single-file apps are now supported (#41, #42)",1,77,FALSE,NA
shinyuieditor,2904ad525b606cf81b5f2826c7ed5be3,Rehauled the interface for updating the layout for `gridlayout::grid_page()`. Tracts can now be resized by dragging the divisions and the resizing controls hide when not in use to allow for more efficient use of space.,1,78,FALSE,NA
shinyuieditor,82993e0dbe2896b96ebf141a001a8b28,"Any code outside of the ui declaration is now preserved, along with `library()` calls (#38, #42)",1,79,FALSE,NA
shinyuieditor,44f69003e9fc7e198aa2633d135b3899,"By default, namespaces are omitted from generated code in favor of placing `library()` calls at the top of the file (#42)",1,80,FALSE,NA
shinyuieditor,93634b98c7be34e2da00a45187bd9e3d,"Refreshing the app preview now has animation to let the user know something actually happened (#34, #44)",1,81,FALSE,NA
shinyuieditor,b8378b5888f17439d9c6f613de36ebbc,"Arguments to functions that are not simple primative types are now preserved (#29, #37)",1,82,FALSE,NA
shinyuieditor,ce781917b1add559c45637536670d65d,"If the browser window containing the editor is closed, the ui server now terminates, freeing the terminal (#27, #43)",1,83,FALSE,NA
shinyuieditor,3dccf0662f33404e1a2ba9e55ae965e1,"Leaving early from the editor no longer returns `NULL` to the console (#36, #45)",1,84,FALSE,NA
shinyuieditor,5479290ebdd6c24c37ea9b0605c5b7aa,"Resizing grid panels to a smaller size now respects the grid tracts (#25, #46)",1,85,FALSE,NA
shinyuieditor,c9a17a6408f199bf57b6c5d0d2862df4,"Fixed accidental allowance of `gridlayout::grid_panel_plot()` being dropped into a `gridlayout::grid_panel_stack()` which could cause an invalid ui function state (#35, #49).",1,86,FALSE,NA
shinyuieditor,6ddc9d53289b12bf06376b1101b989c8,Editor now works with Safari (#33),1,87,FALSE,NA
shinyvalidate,4186f8ca893a1aca9afdc31b85b8eea1,"On r-devel (R \> 4.3.1), `input_provided(NULL)` now returns `FALSE` (as it does with older versions of R). (#72)",1,1,FALSE,NA
shinyvalidate,79689e48e9ca6e9dd529f789177c82f5,Support HTML messages when failing a validation. (#55),1,2,FALSE,NA
shinyvalidate,9043ad84319e99746fda3c1039667a9d,Fix an incompatibility between jQueryUI and shinyvalidate. (#32),1,3,FALSE,NA
shinyvalidate,f61eb7df626c531a6b1be1c99252e900,New package with 18 functions and one R6 class (`InputValidator`).,1,4,FALSE,NA
sortable,1e4b8a5fc33c0b39c63ed47c28d49cc5,Add support for `update_rank_list()` and `update_bucket_list()`,1,1,FALSE,NA
sortable,279f9ac8cea475504aa4626b1934b2d0,Add ability to switch the orientation of `rank_list()` items to horizontal. #92,1,2,FALSE,NA
sortable,e37f64d2fe96fb7c2cee05e1bab19f4b,"A `rank_list` now has a unique CSS id, to allow updating the `text` of the container.",1,3,FALSE,NA
sortable,cbc8019ce4db9ba4988728cf87f9b74b,Include `sortable.js` version 1.15.0,1,4,FALSE,NA
sortable,fa73134395d445f33eb1c5bd5158dbbd,"Include `sortable.js` version 1.14.0, as suggested by #82 and #73",1,5,FALSE,NA
sortable,32ab9d21c6a9f06f9ca0730e3edac0ba,Capture error if bucket_list header is empty #31,1,6,FALSE,NA
sortable,0281f38220d0a25ea42619864f4d181b,Fix rank-list-item that spills outside the container boundary #68,1,7,FALSE,NA
sortable,cc38b55055a47b86ef00a61951a46592,"Allow bucket_list to have empty header, and capture error better #69",1,8,FALSE,NA
sortable,d132cff84fb6f4297db8b89a6f6a5478,Upgrade tests to `testthat` version 3,1,9,FALSE,NA
sortable,00388f384daba9194c7e117d9580839e,No functional changes,1,10,FALSE,NA
sortable,f435504267127a0a4355dc2c8bfa1b8b,This release removes a Suggests dependency on `lifecycle` to comply with CRAN policy. The `lifecycle` package was not used in the project.,1,11,FALSE,NA
sortable,048ca52cf4b5848b4b4e6a2458b9233a,"Moved the `...` dots argument of `sortable_options()` to the first argument, where previously it was the last argument. This is to prevent partial name matching resulting in the incorrect sortable option being set.",1,12,FALSE,NA
sortable,5cf81ee40108c9b347e553e6dd07a2b2,Updated `sortable.js` to version 1.10.2,1,13,FALSE,NA
sortable,cbfda1abad87fca53df0f47b31ba6dce,"Added examples for using the `sortable.js` plugins, specifically multiDrag and swap.",1,14,FALSE,NA
sortable,f66e3cb72bf5b0478ea527d1f7ecadac,"Added vignette on cloning and removing, contributed by Maya Gans",1,15,FALSE,NA
sortable,416f7ebfba3a653248c60a4ab559d015,First release accepted by CRAN,1,16,FALSE,NA
sortable,2546fcc316e2bb8070f9b0b30d9c0e61,First candidate release to CRAN,1,17,FALSE,NA
tensorflow,110f2c61bbb6624084b2e6ad8f49cce8,`install_tensorflow()` installs TensorFlow v2.15 by default,1,1,FALSE,NA
tensorflow,74faba38ff1a0c1a5340acd24309aa11,Added compatibility with the latest release of reticulate (\> 1.34).,1,2,FALSE,NA
tensorflow,a8e9bf5dfdc1924e79626ff2df8603bb,`install_tensorflow()` changes:,1,3,FALSE,NA
tensorflow,a8e9bf5dfdc1924e79626ff2df8603bb,• Installs TensorFlow v2.14 by default.,2,4,FALSE,`install_tensorflow()` changes:
tensorflow,a8e9bf5dfdc1924e79626ff2df8603bb,"• Now will automatically install the required Nvidia CUDA runtime as a pip package if on Linux and a GPU is detected. You can opt-out by passing `install_tensorflow(cuda = FALSE)`. Aside from the Nvidia driver, no other pre-existing Nvidia CUDA packages are now necessary.",2,5,FALSE,`install_tensorflow()` changes:
tensorflow,a8e9bf5dfdc1924e79626ff2df8603bb,• The `configure_cudnn` argument is now superseded by the new argument `cuda`.,2,6,FALSE,`install_tensorflow()` changes:
tensorflow,a8e9bf5dfdc1924e79626ff2df8603bb,"• New argument `metal`, for specifying if the `tensorflow-metal` pip package should be installed on Arm Macs. Defaults to `TRUE` on Arm Macs.",2,7,FALSE,`install_tensorflow()` changes:
tensorflow,72f05b1426d2bc92b2681775c1a42944,Fixed an issue where `as.array()` and other methods might fail if the tensor had conversion disabled via `r_to_py()` or `convert = FALSE`.,1,8,FALSE,NA
tensorflow,107093990b1488a963b3fe59ef52c493,"Fixed an issue where Ops group generic dispatch would error one object was a tensor and the other was a non-tensor Python object (e.g., a numpy array).",1,9,FALSE,NA
tensorflow,8dd19f258a6ee6dc56a52916ac512825,"Removed long deprecated symbols: `install_tensorflow_extras()`, `tfe_enable_eager_execution()`",1,10,FALSE,NA
tensorflow,bee757c8435294af8cd3ef0d1002c2b3,tfestimator generics `train()` and `train_and_evaluate()` now warn about their deprecation status when called. The will be removed in a future release.,1,11,FALSE,NA
tensorflow,21bbf35347d7b63865962fce87aeba63,`install_tensorflow()` changes:,1,12,FALSE,NA
tensorflow,21bbf35347d7b63865962fce87aeba63,• Installs TensorFlow v2.13 by default now.,2,13,FALSE,`install_tensorflow()` changes:
tensorflow,21bbf35347d7b63865962fce87aeba63,"• The `envname` argument new default is `""r-tensorflow""`. This means that unless the `envname` argument supplied, `install_tensorflow()` will now install into the `""r-tensorflow""` environment, bootstrapping a venv of that name if necessary.",2,14,FALSE,`install_tensorflow()` changes:
tensorflow,21bbf35347d7b63865962fce87aeba63,"• gains a `new_env` argument. If `TRUE`, any existing environment specified by `envname` is deleted and created anew. Defaults to `TRUE` if envname is `""r-tensorflow""`, `FALSE` otherwise.",2,15,FALSE,`install_tensorflow()` changes:
tensorflow,21bbf35347d7b63865962fce87aeba63,"• If running on Linux, now detects if NVIDIA GPUs on Linux are installed, and if so, and installs cuDNN (via pip), configures symlinks for tensorflow to find cuDNN, and emits additional instructions for how to install the necessary CUDA drivers to enable GPU usage. Set new arg `configure_cudnn = FALSE` to disable.",2,16,FALSE,`install_tensorflow()` changes:
tensorflow,21bbf35347d7b63865962fce87aeba63,• `pip_ignore_installed` default is now `FALSE` again.,2,17,FALSE,`install_tensorflow()` changes:
tensorflow,21bbf35347d7b63865962fce87aeba63,"• On Arm Macs (M1/M2), the default tensorflow package is once again installed, rather than `tensorflow-macos` and `tensorflow-metal`.",2,18,FALSE,`install_tensorflow()` changes:
tensorflow,8b72119047988a0a17f48207bb0cf7ce,"New `pillar:type_sum()` method for Tensors, giving a more informative printout of Tensors in R tracebacks and tibbles.",1,19,FALSE,NA
tensorflow,9175e77bbe4171beb78d5852d8c6a3e0,`install_tensorflow()` now installs TF v2.11 by default.,1,20,FALSE,NA
tensorflow,43978cb324aee1cbd290b5bcba10e4ac,"`as_tensor()` now coerces bare R atomic vectors to R arrays before conversion. As a consequence, by default, R atomic double vectors now coerce to 'float64' dtype tensors instead of 'float32'.",1,21,FALSE,NA
tensorflow,d2ecf8e252ca23ff095dc61bb7dbd260,"`shape()` gains the ability to accept vectors of length \> 1 in `...`, including other `tf.TensorShape`s. Shapes are automatically flattened.",1,22,FALSE,NA
tensorflow,4a24c989b06a7a7c65ce2de2639d9099,"Fixed an issue where a `ListWrapper` object of trackable keras layers (e.g., as part of a keras model) would not convert to an R list.",1,23,FALSE,NA
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,Generic method updates:,1,24,FALSE,NA
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,"• New methods: all(), any(), sum(), prod(), min(), max(), mean(), range(), cbind(), rbind(), t(), aperm(), sort(), as.vector(), as.character(), as.raster(), is.infinite(), is.finite(), is.nan()",2,25,FALSE,Generic method updates:
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,• `^` will now invoke `tf.square()` or `tf.sqrt()` directly when appropriate,2,26,FALSE,Generic method updates:
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,"• `|`, `&`, and `!` now cast arguments to 'bool' dtype.",2,27,FALSE,Generic method updates:
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,• `print()` now shows 1d shapes without a trailing commas.,2,28,FALSE,Generic method updates:
tensorflow,d13382d31d1d038e1ebd54523e6ca2bc,• `str()` method for tensors now returns only a single compact line; `str()` on a list of tensors now does something sensible.,2,29,FALSE,Generic method updates:
tensorflow,8e6e0264ea275bbf8a939bfb1a646b4c,`install_tensorflow()` now install TensorFlow 2.9 by default.,1,30,FALSE,NA
tensorflow,e5c81a3a3852461ff3d3787f5c4c11c6,"`install_tensorflow()` no longer requires conda on Windows, now works in a regular venv.",1,31,FALSE,NA
tensorflow,927cb308cc9871c0abe51ad0a3b79e00,"Comparing two partially-defined `TensorShape` now returns TRUE if each dimension matches. e.g.: `shape(NA, 4) == shape(NA, 4)` now returns TRUE, previously FALSE.",1,32,FALSE,NA
tensorflow,bc4ee5441bd7a5c21c054b52a5528450,"Tensors with dtype 'string' now convert to R character vectors by methods `as.array()` and `as.matrix()`. (previously they converted to python.builtin.bytes, or an R list of python.builtin.bytes objects)",1,33,FALSE,NA
tensorflow,62778a8301ece7b072c889320fe8d0fe,`as_tensor()`:,1,34,FALSE,NA
tensorflow,62778a8301ece7b072c889320fe8d0fe,"• atomic R integer vectors now convert to 'int32', not 'int64'",2,35,FALSE,`as_tensor()`:
tensorflow,62778a8301ece7b072c889320fe8d0fe,• casting between integer and floating dtypes is now done via `tf$dtypes$saturate_cast()` instead of `tf$cast()`.,2,36,FALSE,`as_tensor()`:
tensorflow,62778a8301ece7b072c889320fe8d0fe,• `shape` argument now accepts a tensor.,2,37,FALSE,`as_tensor()`:
tensorflow,62778a8301ece7b072c889320fe8d0fe,• fixed issue where expanding a scalar tensor to an nd-array with `shape` provided as a tensor would raise an error.,2,38,FALSE,`as_tensor()`:
tensorflow,4dbf2f0802b7f306ccf4d710b2a78aff,"`tf.SparseTensor` objects now inherit from `""tensorflow.tensor""`.",1,39,FALSE,NA
tensorflow,46b8ff1d70bdead526566f3d94c9715c,Updated default Tensorflow version installed by `install_tensorflow()` to 2.8.,1,40,FALSE,NA
tensorflow,81d12dbaeba741e9b6fb9d7c3b54a205,"`as_tensor()` gains a `shape` argument, can be used to fill or reshape tensors. Scalars can be recycled to a tensor of arbitrary `shape`, otherwise supplied objects are reshaped using row-major (C-style) semantics.",1,41,FALSE,NA
tensorflow,deae78bfca77df191f1e974d7b23df20,"`install_tensorflow()` now provides experimental support for Arm Macs, with the following restrictions:",1,42,FALSE,NA
tensorflow,deae78bfca77df191f1e974d7b23df20,"• ""conda"" is the only supported installation method.",2,43,FALSE,"`install_tensorflow()` now provides experimental support for Arm Macs, with the following restrictions:"
tensorflow,deae78bfca77df191f1e974d7b23df20,• requests for non-default or older tensorflow versions are not supported.,2,44,FALSE,"`install_tensorflow()` now provides experimental support for Arm Macs, with the following restrictions:"
tensorflow,3682eaee136c75ddab00bce9202cb5a1,`install_tensorflow()` default conda_python_version changes from 3.7 to NULL.,1,45,FALSE,NA
tensorflow,b47c0f9c153aa26a373b3a4dd599208d,`tf.TensorShape()`'s gain `format()` and `print()` S3 methods.,1,46,FALSE,NA
tensorflow,8efe2246db4251650420721f06da29a3,"`[` method for slicing tensors now accepts `NA` as a synonym for a missing or `NULL` spec. For example `x[NA:3]` is now valid, equivalent to `x[:3]` in Python.",1,47,FALSE,NA
tensorflow,a0faec2ccb0904ff1057bfa83271147b,Default Tensorflow version installed by `install_tensorflow()` updated to 2.7,1,48,FALSE,NA
tensorflow,99a3c758e79b7627f655f4aab3277bc0,Breaking changes:,1,49,FALSE,NA
tensorflow,99a3c758e79b7627f655f4aab3277bc0,• `shape()` now returns a `tf.TensorShape()` object (Previously an R-list of `NULL`s or integers).,2,50,FALSE,Breaking changes:
tensorflow,99a3c758e79b7627f655f4aab3277bc0,"• `[` method for `tf.TensorShape()` objects also now returns a `tf.TensorShape()`. Use `[[`, `as.numeric`, `as.integer`, and/or `as.list` to convert to R objects.",2,51,FALSE,Breaking changes:
tensorflow,99a3c758e79b7627f655f4aab3277bc0,• `length()` method for `tensorflow.tensor` now returns `NA_integer_` for tensors with not fully defined shapes. (previously a zero length integer vector).,2,52,FALSE,Breaking changes:
tensorflow,99a3c758e79b7627f655f4aab3277bc0,• `dim()` method for `tensorflow.tensor` now returns an R integer vector with `NA` for dimensions that are undefined. (previously an R list with `NULL` for undefined dimension),2,53,FALSE,Breaking changes:
tensorflow,c120df8054a467c31dcce3b9ad3360da,"New S3 generics for `tf.TensorShape()`'s: `c`, `length`, `[<-`, `[[<-`, `merge`, `==`, `!=`, `as_tensor()`, `as.list`, `as.integer`, `as.numeric`, `as.double`, `py_str` (joining previous generics `[` and `[[`). See `?shape` for extended examples.",1,54,FALSE,NA
tensorflow,6278bec7883a3df8fa90c5d1dfbe5a2e,"Ops S3 generics for `tensorflow.tensor`s that take two arguments now automatically cast a supplied non-tensor to the dtype of the supplied tensor that triggered the S3 dispatch. Casting is done via `as_tensor()`. e.g., this now works: `as_tensor(5L) - 2 # now returns tf.Tensor(3, shape=(), dtype=int32)` previously it would raise an error: `` TypeError: `x` and `y` must have the same dtype, got tf.int32 != tf.float32 `` Generics that now do autocasting: +, -, \*, /, %/%, %%, \^, &, \|, ==, !=, \<, \<=, \>, \>=",1,55,FALSE,NA
tensorflow,ce5dc7375a0d615a98f8c7ea525de275,`install_tensorflow()`: new argument with default `pip_ignore_installed = TRUE`. This ensures that all Tensorflow dependencies like Numpy are installed by pip rather than conda.,1,56,FALSE,NA
tensorflow,57192478fe123878e1d5dc3d22a2c603,"A message with the Tensorflow version is now shown when the python module is loaded, e.g: ""Loaded Tensorflow version 2.6.0""",1,57,FALSE,NA
tensorflow,9b8b086cc678917ae6fc21bc79dd5e52,Updated default Tensorflow version to 2.6.,1,58,FALSE,NA
tensorflow,0c1a651dcd45a0f8abd1a231b7488a53,Changed default in `tf_function()` to `autograph=TRUE`.,1,59,FALSE,NA
tensorflow,c2c0af6bccb27c74185d75b975476ef7,Added S3 generic `as_tensor()`.,1,60,FALSE,NA
tensorflow,3bf28eef19e25b65350ca7d6c1f85795,tfautograph added to Imports,1,61,FALSE,NA
tensorflow,1264c371e58685356c240c5dceae2eba,"jsonlite removed from Imports, tfestimators removed from Suggests",1,62,FALSE,NA
tensorflow,8d15e1491a4b1f7a4637ada0314dc2a1,Refactored `install_tensorflow()`.,1,63,FALSE,NA
tensorflow,8d15e1491a4b1f7a4637ada0314dc2a1,"• Potentially breaking change: numeric versions supplied without a patchlevel now automatically pull the latest patch release. (e.g. `install_tensorflow(version=""2.4"")` will install `""2.4.2""`. Previously it would install ""2.4.0"")",2,64,FALSE,Refactored `install_tensorflow()`.
tensorflow,8cd597cc731e9ee210890ccb99eab59b,"Removed ""Config/reticulate"" declaration from DESCRIPTION.",1,65,FALSE,NA
tensorflow,8cd597cc731e9ee210890ccb99eab59b,"• Setting `RETICULATE_AUTOCONFIGURE=FALSE` environment variable when using non-default tensorflow installations (e.g., 'tensorflow-cpu') no longer required.",2,66,FALSE,"Removed ""Config/reticulate"" declaration from DESCRIPTION."
tensorflow,8cd597cc731e9ee210890ccb99eab59b,• Users will have to call `install_tensorflow()` for automatic installation.,2,67,FALSE,"Removed ""Config/reticulate"" declaration from DESCRIPTION."
tensorflow,40aa6efd433a69ecee3795a07b6f0129,Refactored automated tests to closer match the default installation procedure and compute environment of most user.,1,68,FALSE,NA
tensorflow,b225b8831a2e039650400b3453bb005e,"Expanded CI test coverage to include R devel, oldrel and 3.6.",1,69,FALSE,NA
tensorflow,e998b2df18f06f567ec900c5d6516aa7,"Fixed an issue where extra packages with version constraints like `install_tensorflow(extra_packages = ""Pillow<8.3"")` were not quoted properly.",1,70,FALSE,NA
tensorflow,c4fb8a558528752b1bdf4cf372426faf,"Fixed an issue where valid tensor-like objects supplied to `log(x, base)`, `cospi()`, `tanpi()`, and `sinpi()` would raise an error.",1,71,FALSE,NA
tensorflow,ba020ce770d5835dacb2d63a07990c6f,Updated default Tensorflow version to 2.5.,1,72,FALSE,NA
tensorflow,19fe5847864c949850c09d7a2bae3474,"Added support for additional arguments in `tf_function()` (e.g., `jit_compile`)",1,73,FALSE,NA
tensorflow,932c9dec79d5aa5a757f23d374a32d92,Added support for `expm1` S3 generic.,1,74,FALSE,NA
tensorflow,b481b96c5cf79109cc3f3ffb4953bf0f,`tfe_enable_eager_execution` is deprecated. Eager mode has been the default since TF version 2.0.,1,75,FALSE,NA
tensorflow,fd605a4d6310ebd8a49e8ea74339712f,Improved error message in `tf_config()` on unsuccessful installation.,1,76,FALSE,NA
tensorflow,72f75fce864d2cb8c64ff0460662ee08,Fixed error with `use_session_with_seed` (#428),1,77,FALSE,NA
tensorflow,64d4c97a9497d7187ccb53b4109090b2,Added a new `set_random_seed` function that makes more sense for TensorFlow \>= 2.0 (#442),1,78,FALSE,NA
tensorflow,48d9bbc1c8000dd3b3961fbc248b40fb,Updated the default version of TensorFlow to 2.4 as well as the default Python to 3.7 (#454),1,79,FALSE,NA
tensorflow,9aacffdd0d73b938b3cb1fda9311cf03,Bugfix with `all_dims` (#398),1,80,FALSE,NA
tensorflow,f4c7ea7ff542172b81a55b0b57d632b9,"Indexing for TensorShape & `py_to_r` conversion (#379, #388)",1,81,FALSE,NA
tensorflow,c62769f1a833213f73425f234cbe9cc0,Upgraded default installed version to 2.0.0.,1,82,FALSE,NA
tensorflow,c1b7f215c68c749c2991de609409cc23,Tensorboard log directory path fixes (#360).,1,83,FALSE,NA
tensorflow,30c2d50ec451c05f29182c605629f148,Allow for `v1` and `v2` compat (#358).,1,84,FALSE,NA
tensorflow,8ba766a1c1d68dd735f10ad6c93dd022,"`install_tensorflow` now does not installs `tfprobability`, `tfhub` and other related packages.",1,85,FALSE,NA
tensorflow,3d84a7bcf91a601fc23de8d7b9ee6db6,Upgraded default installed version to 1.14.0,1,86,FALSE,NA
tensorflow,bec5f54da54dec04083816c227a0bd87,"Refactored the `install_tensorflow` code delegating to `reticulate` (#333, #341): We completely delegate to installation to `reticulate::py_install`, the main difference is that now the default environment name to install is `r-reticulate` and not `r-tensorflow`.",1,87,FALSE,NA
tensorflow,bc73a56a194154632ddb9d543fcf846f,added option to silence TF CPP info output,1,88,FALSE,NA
tensorflow,ee6c6608b016f98006f6e870fc8097ee,`tf_gpu_configured` function to check if GPU was correctly,1,89,FALSE,NA
thematic,468fae71f61fa689c03bb3f9d8f49ef2,Accommodate for breaking changes in ggplot2 v3.5.0. (#148),1,1,FALSE,NA
thematic,703a0119ff651051ea54fee1626acebe,`{thematic}` now works with recent versions of the `{vdiffr}` package. (#149),1,2,FALSE,NA
thematic,b5e80c63a042bc2420b4c7347c88d266,"The `{httpgd}` graphics device (and thus, Github codespaces) is now supported. (#143)",1,3,FALSE,NA
thematic,81ced06099827451c8cbe49d373cd943,Closed #129: Fixed a bug with not being able override thematic inside geom_sf(). (#129),1,4,FALSE,NA
thematic,d9367fa19f779cbcf1aa9f7a860fbc9d,Closed #120: A warning about a `length-one vector` is no longer thrown on R 4.2. (#121),1,5,FALSE,NA
thematic,35f79ca1a67b0cbb3fea6bb1f52e3e92,Closed #111: `{thematic}` no longer throws an error when used with `ggiraph::dsvg()`. (#112),1,6,FALSE,NA
thematic,feb83ef0cba5b9a35e4bfd106ea161a7,Closed #89: `{thematic}` now works as expected with the `{gganimate}` package. (#96),1,7,FALSE,NA
thematic,393a26760f2dd0220ce49da80ab8a26b,Closed #93: Better support for `{ggplot2}` extensions that set geom/scale colour defaults to 0.,1,8,FALSE,NA
thematic,8bca0d6c48af5a5225d5bfa84d33eecd,Closed #90: Enabling thematic no longer fails when used with package(s) that register `{ggplot2}` methods via `registerS3method()` within `.onLoad()` (`{zoo}` is one such package that does this). (#90),1,9,FALSE,NA
thematic,500cba078b6942530b0953ad0c77d22d,Closed #86: `thematic_rmd()` now works as expected in `shiny: runtime` Rmd documents. (#87),1,10,FALSE,NA
thematic,df5a87bc0aaaa9f746e8d6dc36e28ea0,Closed #82: Fixed a bug with `ggplot2::element_blank()` in plot-specific user code not being respected by `{thematic}`. (#83),1,11,FALSE,NA
thematic,35b795b8bc61f9ebed7b158f9f9f5a28,"Initial release of the package, see https://rstudio.github.io/thematic/",1,12,FALSE,NA
vetiver,8abb89298d860991f7047adcfc132526,Fixed bug in generating plumber files (#257).,1,1,FALSE,NA
vetiver,4038ef1c76b6287e0f5ded970642c0b4,Fixed how plumber files are generated for `board_url()` (#241).,1,2,FALSE,NA
vetiver,a12f7e986a7586a56b089b608b67af03,Updated test involving renv and rsconnect (#230).,1,3,FALSE,NA
vetiver,13daab97162fb48e3826c2456a8227a2,Fixed a bug in where `vetiver_write_docker()` writes the renv lockfile (#212).,1,4,FALSE,NA
vetiver,5c1c284bab4be7fc3ec876605b865de4,Added new `/prototype` GET endpoint for a model's input data prototype (#220).,1,5,FALSE,NA
vetiver,1daf5ad299457aa8e326f4f1be0f92fe,"Added support for keras (#164), recipes (#179), and luz (#187, @​dfalbel).",1,6,FALSE,NA
vetiver,828935dcebd827bb0796142e9c1658dc,"Moved where `required_pkgs` metadata is stored remotely, from the binary blob to plain text YAML (#176).",1,7,FALSE,NA
vetiver,2cba6b1a1842fb38e4175d8a69a62eb5,"Added an optional renv lockfile that can be stored remotely in model metadata, with a new `check_renv` argument for reading/writing (#154, #192).",1,8,FALSE,NA
vetiver,e6b544bc6167b6e9405a791a0a479271,Exposed a new `base_image` argument for creating Dockerfiles (#182).,1,9,FALSE,NA
vetiver,2ae5b1b062ce754dafc6f1140f1b3c59,"Added new `vetiver_deploy_sagemaker()` function plus `vetiver_endpoint_sagemaker()` and other needed functionality for deploying on Amazon SageMaker (#186, @​DyfanJones).",1,10,FALSE,NA
vetiver,ab46863606888cde5fabd12310a6c13d,Added new additional GET endpoint for model `/metadata` (#194).,1,11,FALSE,NA
vetiver,60afb292cb0e4d0b47ce31376c1b2e35,The arguments for dealing with a model's input data prototype have changed from using `ptype` to using `prototype` (#166):,1,12,FALSE,NA
vetiver,60afb292cb0e4d0b47ce31376c1b2e35,"• In `vetiver_model()`, now use `save_prototype`.",2,13,FALSE,The arguments for dealing with a model's input data prototype have changed from using `ptype` to using `prototype` (#166):
vetiver,60afb292cb0e4d0b47ce31376c1b2e35,"• In `vetiver_api()`, now use `check_prototype`.",2,14,FALSE,The arguments for dealing with a model's input data prototype have changed from using `ptype` to using `prototype` (#166):
vetiver,1a8b2a194274d0395899d409970d25df,"Added support for k-Prototypes clustering from clustMixType (#163, thanks to @​galen-ft).",1,15,FALSE,NA
vetiver,bc06fe2a0352af289dbd208d9175d848,Now vendor renv directly in package (#157).,1,16,FALSE,NA
vetiver,e09507a3f2017dfbf9d5f7b1ca045a29,Fixed how `vetiver_ptype()` finds predictors for models (`lm()` and `glm()`) with interactions (#160).,1,17,FALSE,NA
vetiver,6f7e4fceb78da4dd223d349db79a53b1,"New argument added to `vetiver_write_docker()` to pass in additional packages to be installed, such as `required_pkgs(board)` (#159).",1,18,FALSE,NA
vetiver,331b6625464bcd1825c6f19d0d2655b7,New function `vetiver_prepare_docker()` creates all necessary files to deploy a basic vetiver model via Docker (#165).,1,19,FALSE,NA
vetiver,4a97d266b01aa50c543236c088b0a923,Fixed a bug in handling all-`NA` columns when predicting on a `vetiver_endpoint()` (#169).,1,20,FALSE,NA
vetiver,3e36d5b8bd4a0f7ca839d70cbe3a53b5,Trailing slashes are now removed from `vetiver_endpoint()` (#134).,1,21,FALSE,NA
vetiver,9e4999c1a1f28b4fa0d1facbda8a06cb,Added support for GAMs from mgcv (#135) and stacks (#138).,1,22,FALSE,NA
vetiver,9e6b855ce384eee341e4868df8247a6c,Added `augment` method for vetiver endpoint (#141).,1,23,FALSE,NA
vetiver,f5c9dd823c20a83c1b7c23cb7108c8f0,"Added `apt-get clean` to Dockerfile to reduce container size (#142, thanks to @​csgillespie).",1,24,FALSE,NA
vetiver,efd88d084abbc7022a6e9db626bdf7f9,"Fixed bug where not all system requirements were added to the Dockerfile (#142, thanks to @​csgillespie).",1,25,FALSE,NA
vetiver,4477157417e7b837ceef66e3c2494106,Added bundle support for relevant models (#145).,1,26,FALSE,NA
vetiver,205c42002cae72521b10124012114705,Fixed bug in generating Dockerfiles when explicitly requiring the stats package (#147).,1,27,FALSE,NA
vetiver,b814ff95224aeb677e2c0f9140a3ad91,"Now pass the dots for writing a pin through to vetiver allowing, for example, `vetiver_pin_write(b, v, access_type = ""all"")` on RStudio Connect (#121, #122).",1,28,FALSE,NA
vetiver,b05ce659d4f838b67c293d96ee539739,`vetiver_pin_metrics()` now finds the `type` of the existing pin and updates with the same type (#122).,1,29,FALSE,NA
vetiver,29dd46c0b3d8dd7c974e5cbe268cf896,"The lockfile created by `vetiver_write_docker()` can now be named via the argument `lockfile`, and its default is `vetiver_renv.lock` (#100).",1,30,FALSE,NA
vetiver,fa548db70137a84de3052d4772e84c37,Switched the default for `overwrite` in `vetiver_pin_metrics()` from `TRUE` to `FALSE`. Using `FALSE` is a better choice for interactive use while `TRUE` is probably the right choice for reports or dashboards that are executed on a schedule (#104).,1,31,FALSE,NA
vetiver,b2eb7cc5b22b930ed67c3f7c57ea88c9,"Added an optional `EXPOSE PORT` line to the generated Dockerfile, to help out Docker Desktop users (#105).",1,32,FALSE,NA
vetiver,c27b008f181f1d666307102e0a28174b,"Added model monitoring dashboard template (#98). To knit the example vetiver monitoring dashboard, execute `vetiver::pin_example_kc_housing_model()` to set up demo model and metrics pins.",1,33,FALSE,NA
vetiver,c485224ae06673e8da7df3331d21f20b,The OpenAPI spec generated for a vetiver model now includes the model *version* when applicable.,1,34,FALSE,NA
vetiver,c0c1b02ddf62fc2db8f9c0859d5a48b5,Added option to write a Plumber file without packages listed for RStudio Connect purposes (#112).,1,35,FALSE,NA
vetiver,d7f925e256d60b9185ee2df90543fe78,Added new function `vetiver_create_rsconnect_bundle()` as an alternative deployment strategy (#113).,1,36,FALSE,NA
vetiver,bafbf1539166af237b71efd6ba42c178,Add functions for model monitoring (#92).,1,37,FALSE,NA
vetiver,d6f954f7418ec6e00256024c00f454bd,Update all URLs in package for new documentation sites.,1,38,FALSE,NA
vetiver,3e708148b7221337936c3c6f357b878d,Improve how Dockerfiles are generated.,1,39,FALSE,NA
vetiver,923a223b97bb3c3984e1cefe0898d5bd,Update all tests to use redaction for snapshots.,1,40,FALSE,NA
vetiver,8c16dfa69d3a6cd068a530ad12f1a8a6,Use ranger conditionally in examples/tests.,1,41,FALSE,NA
vetiver,a0d052036c34035c73ad97be28ac92bb,Generate Dockerfiles to deploy model (#71).,1,42,FALSE,NA
vetiver,adb044c9963b59dd3b76c1bea4f9d6a3,Added support for glm (#75) and ranger (#76).,1,43,FALSE,NA
vetiver,42bcccf5f78597380dc670484864fade,Deprecated `vetiver_pr_predict()` in favor of using `vetiver_api()` (#77).,1,44,FALSE,NA
vetiver,7ce744ba6b41dea013a1f14440592c9b,"Added support for tidymodels (#51), caret (#52), and mlr3 (#56).",1,45,FALSE,NA
vetiver,645ae692431b1632819d74d643256ac5,Added vignette.,1,46,FALSE,NA
vetiver,ac828c6df08ed5119111abd662327c4d,Escalated parsing/conversion warnings to errors in `vetiver_type_convert()` (#60).,1,47,FALSE,NA
vetiver,da907d45d6585cb500fe7353a5b514a7,Added `predict` method for `vetiver_model()` (in addition to `vetiver_endpoint()`) (#61).,1,48,FALSE,NA
vetiver,e04a1bc75dd8c2f59f162929e31acbd5,New function `vetiver_deploy_rsconnect()` to deploy to RStudio Connect.,1,49,FALSE,NA
vetiver,6b6d7f91c76b9afec2ac846941621c9e,"Added R Markdown template for Model Card for responsible, transparent model reporting (#62, #63).",1,50,FALSE,NA
vetiver,07ad2a7f45ce4b53f0f8d5ef292fc182,Modularized `vetiver_pr_predict()` to support more advanced use cases (#67).,1,51,FALSE,NA
vetiver,2f3ec24c4f821e6ead24d106662c594f,Initial CRAN release of package.,1,52,FALSE,NA
webshot2,8f163d5b83a07886d22758d4a33b6aa3,`webshot()` now supports JPEG (`.jpg` or `.jpeg`) and WEBP (`.webp`) image formats. (@​trafficonese #45),1,1,FALSE,NA
webshot2,79e6c07b493080b166125533b6b7ac72,Fixed #52: `rmdshot()` did not work when used to screenshot an R Markdown document with `runtime: shiny` or `runtime: shinyrmd`. (#53),1,2,FALSE,NA
webshot2,a1e7c1d689786c7ddb0ba328b4399e1a,Fixed #24: Console messages from `webshot()` can now be suppressed by setting `quiet = TRUE` or using the `webshot.quiet` global option. (@​trafficonese #45),1,3,FALSE,NA
webshot2,90ee8b0eba07d050256c8b49d2e4dfe7,Added a `NEWS.md` file to track changes to the package.,1,4,FALSE,NA
pins,277996148d1ec94be88e8cb71a89cefd,Changed the function signature of `pin_upload()` to be consistent with `pin_write()` i.e. arguments like `tags` must be passed by name and not position (#809).,1,1,FALSE,NA
pins,32e0cf24be3350e62e0ddcbd81232fa8,Added example Python code to pin previews for Posit Connect (#806).,1,2,FALSE,NA
pins,5cc593f70a05794cafcc6d4b6c1dd46f,Fixed a bug in how pins with the same name but different owners on Posit Connect were identified (#808).,1,3,FALSE,NA
pins,a37a65f077427ed2a1c9844db98d44b8,"Fixed a bug in handling folders with duplicate names for Google Drive (#819, @​UchidaMizuki)",1,4,FALSE,NA
pins,59624c3b25cd5eab650356f885d47bd7,Changed the function signature of `pin_write()` so arguments like `type` and `title` must be passed by name and not position (#792).,1,5,FALSE,NA
pins,80e3e3e33531cd94e974fcaa2b2ef108,"Removed content and user caches for Connect altogether. Now, we look up usernames and content on the Connect server every time (#793).",1,6,FALSE,NA
pins,7b9c5004e24a0bf7f6bca1dfa1020eaf,Added new `urls` item to metadata for a pin (#795).,1,7,FALSE,NA
pins,ee02745ccdce6fe805ed02b292c061ab,Fixed how dots are checked in `pin_write()` to make user-facing messages more clear (#770).,1,8,FALSE,NA
pins,6568d4445646f134bb672afc9282f9fd,Improved documentation about Connect caches (#771) and deleting pin versions (#773).,1,9,FALSE,NA
pins,62cab9b539d2584bcb38419457098923,Added `board_deparse` for `board_url()` (#774).,1,10,FALSE,NA
pins,563b7e9cb0a916ca1b51e8c03ce62ee6,"Fixed how `board_gdrive()` handles dribble objects (#780, @​gorkang and #782).",1,11,FALSE,NA
pins,7b74dd2527c80afb4a54edb0050bd995,New environment variable `PINS_CACHE_DIR` controls the location of the default cache path (#748).,1,12,FALSE,NA
pins,ab15d414e7e77b64ca794c6e46f09db9,Added new board for Google Drive `board_gdrive()` (#749).,1,13,FALSE,NA
pins,00f9f39c35b2ceb80a59f3994088cd36,Updated test for new arrow release (#764).,1,14,FALSE,NA
pins,a707f172de73f93106183e43ed32b7f9,"`pin_write()` no longer writes identical pin contents by default, and gains a `force_identical_write` argument for writing even when the pin contents are identical to the last version (#735).",1,15,FALSE,NA
pins,4a12e15013f106e5f033a8e15ff02d7e,The `print` method for boards no longer calls `pin_list()` internally (#718).,1,16,FALSE,NA
pins,b91e3c7236b865e02a59b43fc872cb72,"`board_s3()` now uses pagination for listing and versioning (#719, @​mzorko).",1,17,FALSE,NA
pins,90d251c239e03f828b3d10e3e5381934,"Added `type = ""parquet""` to read and write Parquet files (#729).",1,18,FALSE,NA
pins,a635691f85994a81be326e1dfb7cfac2,Updated error messages and type checking (#731) along with testing strategy (#724).,1,19,FALSE,NA
pins,4f64896c3f04d77e8f7ae6c759b0adc7,"Added new check for whether a new version is the same as the previous version, as can happen when writing pin versions very quickly (#727).",1,20,FALSE,NA
pins,75e3b4acf4ec4ec0b92300d9b09811ff,"Added new `headers` argument for `board_url()`, mostly for authentication, as well as new board for Connect vanity URLs `board_connect_url()` (#732).",1,21,FALSE,NA
pins,dda5503082d3ed5edf052cf2ea82d7d3,Fixed bug in `cache_prune()` to correctly find caches for `board_url()` (#734).,1,22,FALSE,NA
pins,3dc33ae2ec2bdd18e93f55a537247ae9,"Change the function `board_rsconnect()` to `board_connect()`, following RStudio's rebranding to Posit (#689).",1,23,FALSE,NA
pins,9a44e19414fae1ead723c00c1ebedf13,"Changed `type = ""csv""` to use R's default value for `stringsAsFactors` i.e. `FALSE` (#664).",1,24,FALSE,NA
pins,3f0155cd600fb4488d04e8e2e16cad9b,Functions for viewing legacy API pins in the RStudio Viewer pane are now deprecated (when possible) or removed (#679).,1,25,FALSE,NA
pins,c937eeac6edd1004baa51c83b5605e95,The functions for accessing Kaggle resource as pins are no longer supported. We recommend you use the Kaggle CLI instead (#698).,1,26,FALSE,NA
pins,01df49e348fd8a47460c07a86d839271,"Added vignettes describing how to manage custom formats and web-based boards (#631, #685, @​ijlyttle).",1,27,FALSE,NA
pins,3dbb89e9e4018b32005d487223662e09,Added new board for Google Cloud Storage `board_gcs()` (#695).,1,28,FALSE,NA
pins,a780fc18171482d9cb49198204251af4,Added new `tags` item to metadata for a pin (#677).,1,29,FALSE,NA
pins,2ed6290ed54541d255d7e1917d67d801,Improved error message for `pin_versions()` (#657).,1,30,FALSE,NA
pins,65ba815105f0ce311ca7b045c4b106d0,Switched content and user caches for Connect to use environments instead of files on disk. This means caches will no longer persist between sessions but will be much less likely to end up in a broken state (#667).,1,31,FALSE,NA
pins,50469ca8e09868ba27045810c94eec13,"Added `write_board_manifest()` to write a manifest file `_pins.yaml` recording all pins and their versions to the board's root directory. This function only works for boards that are not read-only (#661, based on work of @​ijlyttle).",1,32,FALSE,NA
pins,c294ebed888854c3c303970278383ecb,"Updated `board_url()` to handle versions recorded via a manifest file (#681, based on work of @​ijlyttle).",1,33,FALSE,NA
pins,016c84938a9a22cb69c9bfd0b445b01f,Updated code preview on Posit Connect (#690).,1,34,FALSE,NA
pins,e2ad182554544f7e8d05c524f93ca91c,"The `arrow` package is now suggested, rather than imported (#644, @​jonthegeek).",1,35,FALSE,NA
pins,8aa07eb721cfefda02820348d6cb6234,"Fixed how Connect usernames are handled in messages, preview, etc (#643).",1,36,FALSE,NA
pins,86fc72e2ea8e14b2b10242034d52aa2c,"Increased datetime precision to the second, for `pin_versions()` and related functions (#642, @​tomsing1).",1,37,FALSE,NA
pins,b9fbbbb7882aab871323126fe1449465,"Pass the dots from `pin_write()` through to `s3_upload_file()` and `s3_uploade_yaml()` to support S3 tagging, encryption options, etc for pins (#648, #652, @​fh-mthomson).",1,38,FALSE,NA
pins,e9c1f7a5d9913253b630ad3431333542,"`board_rsconnect()` now correctly finds the created date for pins (#623, @​bjfletcher).",1,39,FALSE,NA
pins,98e734b062f3e374e2426f29d9c98c10,"`pin_upload()` now better handles path expansion (#585, @​sellorm).",1,40,FALSE,NA
pins,d542a4914a9d16c7d6a799ddeab0a206,"The `pin_reactive_*()` functions now use the hash (rather than the created date) for polling (#595, @​thomaszwagerman).",1,41,FALSE,NA
pins,e776601d1529eb68ac071dc79248524a,"`board_azure()` now allows you to set a `path` so that multiple boards can share the same container (#528, @​hongooi73).",1,42,FALSE,NA
pins,7459e80b642e4fc8af1c5954128fe6a9,`board_deparse()` is more likely to generate runnable code when used with `board_rsconnect()` (#553).,1,43,FALSE,NA
pins,c8c9470b80ea473aab8ddb5ad862dcb6,`legazy_azure()` works once again (#527).,1,44,FALSE,NA
pins,be5c218cb364867f5f7482a0bf8070cf,`legacy_github()` works once again (#549).,1,45,FALSE,NA
pins,196ea0b7a626038f84af0eae8ff6ceb4,`pin_meta()` now includes pin `name` (#544).,1,46,FALSE,NA
pins,094db56b1316676f15c30c80d9f282b0,"`board_register()` works better when called directly, due to standardisation of cache paths all computation (#529).",1,47,FALSE,NA
pins,3813a28b30eb8cddae294eb055fc2c19,Drop add-ins since they're not tested or documented (#525),1,48,FALSE,NA
pins,80893afdc41d02baa9d629ea71b772ae,"`pin_read()` and `pin_write()` replace most uses of `pin_get()` and `pin()`. `pin_write()` has a `type` argument that allows you to choose how to serialise your R objects to disk, allowing you to manage the tradeoffs between speed, generality, and language inter-op, and a `metadata` argument that allows you to store arbitrary metadata (#430).",1,50,FALSE,NA
pins,5727e4d15f4b4ce1029d7439bd53eb06,"`pin_download()` and `pin_upload()` are lower-level versions of `pin_read()` and `pin_write()` that work with file paths rather than R objects. They replace the use of `pin()` with a path and eliminate the type-instability in `pin_get()`, which can return either an R object or a character vector of paths.",1,51,FALSE,NA
pins,ddf6c4b1cd1e34bd3381db7904364ad7,"`pin_browse()` replaces `board_browse()`, and takes you to a specific pin, either the original source on the internet, or the cached version on your local file system (#435).",1,52,FALSE,NA
pins,1ab406b03d705f67ee39daa2ba5d257b,"`pin_delete()` replaces `pin_remove()`, and can delete multiple pins (#433).",1,53,FALSE,NA
pins,0cac2ba425d8b12a8bbbdf32433043a8,`pin_list()` lists all pins in a board.,1,54,FALSE,NA
pins,09f3e27d8baa88b0c523167b2c6bb4f9,`pin_meta()` replaces `pin_info()` and retrieves pin metadata (#418).,1,55,FALSE,NA
pins,95b8490b03c1e42642bd095cf546353d,`pin_search()` replaces `pin_find()`. It is much more limited because the previous version was based on assumptions that are not true for many boards.,1,56,FALSE,NA
pins,6521c25927123a7308018d238a9d017e,`pin_reactive_read()` and `pin_reactive_download()` replace `pin_reactive()`.,1,57,FALSE,NA
pins,ed68ea462ef672b6eb1317c35daeda60,`pin_exists()` reports whether or not a pin exists.,1,58,FALSE,NA
pins,a264b9198a0336ffc8d98bcf0810871c,"`pin_version_delete()` allows you to delete a single version. `pin_versions_prune()` (#459) allows you to easily prune old versions keeping either a specified number of versions, or all versions beneath a certain age.",1,59,FALSE,NA
pins,8e69aaafee1139289009cd1305420c08,`board_azure()` stores data in Azure's blob storage. It is built on top of AzureStor (#474).,1,60,FALSE,NA
pins,0e7d4d712148f170329230fcf2f2d0d5,"`board_folder()` is a generalised replacement for the legacy local board. `board_folder()` can store data in any directory, making it possible to share boards using shared network drives or on dropbox or similar. If you using pins casually and don't want to pick a directory, `board_local()` is a variant of `board_folder()` that stores data in a system data directory.",1,61,FALSE,NA
pins,89ccadff786d1558916afad694bd12fd,`board_kaggle_dataset()` and `board_kaggle_competition()` allow you to download data from Kaggle. The data is automatically cached so that it's only downloaded when it changes.,1,62,FALSE,NA
pins,ef6ad51bb6eebf97882afadfb2d8ac9f,"`board_ms365()` allow to pin data to MS One Drive and Sharpoint (#498, @​hongooi73).",1,63,FALSE,NA
pins,4386ce3629080839b879b91d8370e77a,"`board_rsconnect()` shares data on RStudio connect. This board supports both modern and legacy APIs, so that you and your colleagues can use a mixture of pins versions as you transition to pins 1.0.0. Note that the compatibility is one directional: you can `pin_read()` pins created by `pin()`, but you can't `pin_get()` pins created by `pin_write()`.",1,64,FALSE,NA
pins,a255c37580a9227832c67f9fb1a84492,`board_s3()` stores data in Amazon's S3 service. It is built on top of paws.,1,65,FALSE,NA
pins,3d392ecadc05a104c0fcaf3c0f64beb5,"`board_url()` lets you create a manual board from a vector of URLs. This is useful because `pin_download()` and `pin_read()` are cached, so they only re-download the data if it has changed since the last time you used it (#409). This board is a replacement for `pin()`'s ability to work directly with URLs",1,66,FALSE,NA
pins,0e3d7623537cf4f831bccdbb5e4f8e8f,All board objects now have class beginning with `pins_board_` and also inherit from common superclass `pins_board`.,1,67,FALSE,NA
pins,ca55289de52497975d24b453b5e81b50,Pins no longer works with the connections pane. This automatically registered code tended to be either dangerous (because it's easy to accidentally leak credentials) or useless (because it relied on variables that the connection pane doesn't capture).,1,68,FALSE,NA
pins,1e5ae3c5fba16048629295260246b1bd,Pinned data frames are longer converted to tibbles.,1,69,FALSE,NA
pins,267510a154559fdc7c9dabd919e115e0,"The ""packages"" board is no longer registered by default; if you want to use this you'll need to register with `board_register(""packages"")`. It has been radically simplified so that it will no longer download packages, and it `pin_find()` now searches all packages that you have installed, rather than a stale snapshot of data in CRAN packages. The CRAN files dataset has been removed from the package.",1,70,FALSE,NA
pins,d3f94063ae2b1d82aeea577f806fe989,`board_browse()` now works with local boards.,1,71,FALSE,NA
pins,4e99b0c4ddd1246f8d447c17e9441f80,`board_rsconnect()` will automatically connect to the current RSC pin board when run inside RSC itself (assuming you have version 1.8.8 or later) (#396).,1,72,FALSE,NA
pins,be7b2944eab02b826599d8de9d46db25,"`cache_browse()`, `cache_info()`, and `cache_prune()` provide some basic tooling around the local pins cache maintained by pins (#438).",1,73,FALSE,NA
pins,3ce06ccf4b65e35ba9b333563f2587c1,`pin_fetch()` has been removed,1,74,FALSE,NA
pins,c46f2b01d465ae5ad86625bae87be13f,`option(pins.invisible)` is now defunct and ignored.,1,75,FALSE,NA
pins,d32b10e578ae3f997c516245631c287a,You can no longer switch from a versioned pin to an unversioned pin without first deleting the pin (#410).,1,76,FALSE,NA
pins,ba1632dfe6b14578b20cae7463b8ef7a,Support downloading remote files when service returns incompatible `data.txt` file (#310).,1,77,FALSE,NA
pins,81b38ed4a17878c499ba016d1c39edf1,Support for pins over 100MB in Windows systems (#313).,1,78,FALSE,NA
pins,6f7b7b337040d5ceb1b38823a0090269,Avoid Windows crashing in `pin()` under some locales (#127).,1,79,FALSE,NA
pins,e1ad8c0281eaac345262f23782ca6a77,Silenced 'no encoding supplied' warning (#330).,1,80,FALSE,NA
pins,0600b56129d5a89f2522e30184fc276e,`pin_find()` no longer searches text with an undocumented regular expression syntax (#270).,1,81,FALSE,NA
pins,ce85e7463d2ff3532de4a9e0667fc2a6,Default to using HTTPS in S3 boards (#304).,1,82,FALSE,NA
pins,a0538c0bbd8c42da86d87c85b044c713,Support for AWS V4 signatures when registering S3 boards with `region` parameter (#304),1,83,FALSE,NA
pins,492e14ff0682f3175afc2c9ead58a5ee,"Support for `path` to register a board under a subpath for Azure, DigitalOcean, Google Cloud and S3 boards (#200).",1,84,FALSE,NA
pins,674e24b768456b3b149780156893d294,"Avoid creating pins named with unsupported characters for Azure, DigitalOcean, Google Cloud and S3 boards (#193).",1,85,FALSE,NA
pins,1633ace6bb96c425e7b4155063df8c5d,Properly store relative paths when `path` parameter is specified in GitHub boards (#199).,1,86,FALSE,NA
pins,7f1fe422daf649525b5e136ab70ea76f,Add support for repos with a 'main' branch as default (#336).,1,87,FALSE,NA
pins,c4ee44b051f30e043dfa9bff37c37b65,Add support for large file in private repo releases (#292).,1,88,FALSE,NA
pins,2d49064cbbdb6edf89ed32eeda2eb1e7,"When a board is registered with `versions = FALSE`, GitHub tags are also delete when large files are present (#285).",1,89,FALSE,NA
pins,74a5fcf7587a921b23d211d94c069783,Invalid 'account' or 'server' parameters show proper errors (#296).,1,90,FALSE,NA
pins,3005dcd72614058167dce5bd8218d7b0,"Increase total entries retrieved with `pin_find()`, configurable with `pins.search.count` (#296).",1,91,FALSE,NA
pins,46e049103f965511e5ccddaa771e500f,Fix regression introduced in pins 0.4.2 (#253) preventing users from collaborating on existing pins they have access to (#302).,1,92,FALSE,NA
pins,ac6f46e1fceceeb2aef60319270a2b6e,Avoid deleting pin when upload fails to avoid deleting versions (#306).,1,93,FALSE,NA
pins,3593722f80434858fa46fc6421bccff7,Support re-creating pins from pins not previously properly updated (#308).,1,94,FALSE,NA
pins,41e36a274f30d9a97b357af7e4f71b66,Adjust pin preview to only display 1K rows instead of 10K (#315).,1,95,FALSE,NA
pins,40bd8c8da129046b6474645a5d1a9c34,Avoid changing columns names on data frame preview (#190).,1,96,FALSE,NA
pins,0db69da24a9aab2bbaee02b7a1236971,Improve error message when token authentication fails (#327).,1,97,FALSE,NA
pins,1acce68c17842093ad0ce715f9aee134,"For files bigger than 100MB `pin()` creates symlinks to speed up uploads, can be configured using the `pins.link.size` option (#273).",1,98,FALSE,NA
pins,129224d5a9be340be3db6c155c4fe6fd,When using `pin(zip = TRUE)` the zip no longer contains local patahs (#277).,1,99,FALSE,NA
pins,6bf04b93aeb3e0814e33922a571ef950,Disable caching on `data.txt` to support creating multiple pins at once (#275).,1,100,FALSE,NA
pins,c4837ad080e3866ccaad6fe2b3e76ccb,Prevent connections pane from hanging when multiple pins are updated at once (#280).,1,101,FALSE,NA
pins,3cfcfe6e83b40acb816f1475d65e33fa,Support for `pin_get(download = FALSE)` to avoid checking for updates.,1,102,FALSE,NA
pins,10dd66239623030b18617bdf9629ddc9,Support for servers with mismatched `http` vs `https` protocols.,1,103,FALSE,NA
pins,dd2e7d4faed10f3103df8a3873e31886,Make use of `RSCONNECT_TAR` when running a report inside RStudio Connect (#293).,1,104,FALSE,NA
pins,0c4d9f5dce65ee2bfb2b337da06c4f1a,Properly export `board_pin_versions` to allow custom boards extending versions (#265).,1,105,FALSE,NA
pins,5fd6cd8f3ae58cf4620c6f25cc291b4c,Fix regression creating pins when using a brand new cloud board (#268).,1,106,FALSE,NA
pins,6a31fb48270ac4296b27914d95373ba1,Fix issue removing pins with custom domain names from cloud boards (#234).,1,107,FALSE,NA
pins,853980df7e31fa3b6cb7cf5b379516a7,Fix warning when using `pin()` against storage locations with custom domain name (#237).,1,108,FALSE,NA
pins,5e573ee1426a215214b403684166ff31,Fix issue where datatxt was not refreshing deleted entries (#239).,1,109,FALSE,NA
pins,fcea62779e0f6197b70af3ea8ce0a556,Support for `versions = FALSE` in `board_register()` to avoid using too much space when creating pins (#245).,1,110,FALSE,NA
pins,ff7ca57b1737c3e52636372065749d16,"Prevent administrators from overriding pins they don't own, unless the pin is specified as `user/name` (#253).",1,111,FALSE,NA
pins,529e7af51601b367f77a944807bc024a,Support to connect to servers that have a redirect configured when the full server URL is not specified in `board_register()` (#256).,1,112,FALSE,NA
pins,00e9e1c3cd91487905e58be3e667b5d4,Throw error when multiple accounts are associated to the same server (#261).,1,113,FALSE,NA
pins,528be6ce617b3f7cedf4a8b95158ed8e,"When running in production environments (which usually set the `R_CONFIG_ACTIVE` environment variable), avoid using shared caches.",1,114,FALSE,NA
pins,717fd3593b86b8f57fac56af87b9738b,Fix `pin()` failing to update cache when server returns `NULL` etag.,1,115,FALSE,NA
pins,c474707aab09afc6b774ba5fc47507e6,Support for `custom_metadata` in `pin()` to allow saving custom fields in `data.txt` file.,1,116,FALSE,NA
pins,e29493a444fd50b34c6c1e14f5cb974b,Improve performannce for `pin()` from URLs containing large files that are already been cached prerviously by `pin()` (#225).,1,117,FALSE,NA
pins,a600caea89ec5cc8bd06ab861526b272,Avoid showing upload or download progress when creating R Markdown documents and other non-interactive use cases (#227).,1,118,FALSE,NA
pins,b2fe5084dd1a01a10dabbc50de23d3dd,"When pin(url) fails and local cache exists, produce warning and retrieve cached version (#231).",1,119,FALSE,NA
pins,b9e14e60326ca5f972b745a9d952127d,Support for `pin(zip = TRUE)` to create a zip file of the given path before creating the pin (#232).,1,120,FALSE,NA
pins,d79f17983447eb405327b17c9297dd02,Fix when overriding pin with corrupt metadata.,1,121,FALSE,NA
pins,4c3f490c649aa886bfbf9af5178ef875,Avoid using shared caches when running inside RStudio Connect.,1,122,FALSE,NA
pins,8696958f7d000df48ece15bcca52df86,Fixed 'invalid uid' warning when creaating pin undner some Linux servers (#263).,1,123,FALSE,NA
pins,8e9f6a097c6e40eebde39a0a5f973968,Support to find and download competition datasets.,1,124,FALSE,NA
pins,85ed9f09b5a35c0a61752f87f8ec1f1e,Support for versioning in all boards.,1,125,FALSE,NA
pins,be05ad9999de94a2c4eaa887f54a7ba7,Support for DigitalOcean board.,1,126,FALSE,NA
pins,a9d8d88878807f511124cbab4522240c,Finding pins with `pin_find()` sort results by default (#201).,1,127,FALSE,NA
pins,241aa4b54c36da6d9f19cf465a2679f3,Avoid `incomplete final line found` warning error wheen reading manifests.,1,128,FALSE,NA
pins,c25cd91ed0f785bfc81de169a8fa6a6d,Support for using `pin()` across multiple concurrent processes (#182).,1,129,FALSE,NA
pins,7c9f131e49e45a06993bcd79c89a99a6,"Support in `pin_get()` to download arbitrary files from cloud boards like Azure, DigitalOcean, GitHub, Google Cloud, RStudio Connect, and S3.",1,130,FALSE,NA
pins,85dd3a93ad735c802b54b83a9d1dc478,Fix issue where http HEAD requests could tgimeout and prevent pin from downloading in very slow connections.,1,131,FALSE,NA
pins,b97e77770b82ca5e8ac57cb5c7a5c997,Support `access_type` parameter for RStudio Connect.,1,132,FALSE,NA
pins,49335322af19aef06466d3f8b6dce76c,`pin()` now refreshes the connections pane.,1,133,FALSE,NA
pins,9a92fc6ffef0aad22e7c18587cd8d358,`pin_remove()` now refreshes the connections pane.,1,134,FALSE,NA
pins,9fd2f72dd5e79bf98510174eed872fd5,Support for `code` parameter in `pin()` to customize R code used in the UI to retrieve the pin (#77).,1,135,FALSE,NA
pins,1327264f2732bcfb3f273b54f7bd0452,Improve error message for `pin_get()` with duplicate names (#171).,1,136,FALSE,NA
pins,fb50987d371d0b2fe1eccfc3ebdf9c61,Fix board register error when using URL with ports (#195).,1,137,FALSE,NA
pins,ae6fa3aac891a1d48b8bae2a4036c648,Enable retrieving public pins without authentication (#83).,1,138,FALSE,NA
pins,b42cfe2742ba0fdb52023ed4f96e5d4c,Support for `versions = FALSE` in `board_register()` to also delete release files when pin is removed (#91).,1,139,FALSE,NA
pins,2cc00dc97df9659fe017131de8807b99,Support for `versions = FALSE` in `board_register()` to avoid creating versioned GitHub releases (#197).,1,140,FALSE,NA
pins,ee85547eb7161e96190361c9f8d2dcac,Support for committing all github files with a single commit (#197).,1,141,FALSE,NA
pins,4f5373329f96f841a39d54471c54628b,Support for custom GitHub hosts including GitHub Enterprise using the `host` parameter in `board_register_github()` (#163).,1,142,FALSE,NA
pins,039d020b93f21f88a1480b0c3fba3aa9,"Using `pin()` now searches for `data.txt` files in URLs when the URL contains no file extension, behavior can be turnned off with the `pins.search.datatxt` option.",1,143,FALSE,NA
pins,d067b8855d3c3a4c9a5d9ff1e9ad8bb6,`pin_info()` adds support for `metadata` parameter to avoid retrieving pin contents.,1,144,FALSE,NA
pins,727e4fd7706071adeb5a8b31fd8220b9,"Added support for `host` parameter to configure ""s3.amazonaws.com"" to custom locations.",1,145,FALSE,NA
pins,242284b3cd891a3d45e2e3f09e43c625,Fix regression uploading large datasets as release files.,1,146,FALSE,NA
pins,1cd69440dc82488aa424c2e2fe7b75b0,`pin_info()` prints long character strings in their own line.,1,147,FALSE,NA
pins,4cbf7d76702bcd86571eaf958cba0bb2,"Fixed issue in `pin_remove()` for S3, Azure, GCloud, Google and website boards (#138).",1,148,FALSE,NA
pins,ccbadce1eedc0fb5ec3ca53324afad1c,Fixed issue when pinning complex data frames with nested lists (#142).,1,149,FALSE,NA
pins,7ee7d565fe171b5894ec8ed9f0a12b2d,Added missing `key` parameter in `board_register_azure()`.,1,150,FALSE,NA
pins,0dedeec02e3348986b58da2f01ad8936,Fixed connection suggested code when caused by `pin_find()` (#137).,1,151,FALSE,NA
pins,05ddff090fe7f72913b96e10744f93cc,Fixed connection launcher for Azure connections.,1,152,FALSE,NA
pins,43e07f2fd8e2e80b0c97146a6314652a,Fix issue uploading large pins causing `is.character(type) is not TRUE` error.,1,153,FALSE,NA
pins,7dbb677327e51a427628f23c7df1a4ad,Fix issue affecting boards registered with trailing slash (#151).,1,154,FALSE,NA
pins,34c0927e6916f06362f46da0f4d68d01,Improve error messages when a pin fails to be created (#149).,1,155,FALSE,NA
pins,07e7e1b4f5432eae4007deaa194b95f1,"Added support for `CONNECT_API_KEY` and `CONNECT_SERVER` in place of `RSCONNECT_API` and `RSCONNECT_SERVER`, which they are still supported for backwards-compatibility.",1,156,FALSE,NA
pins,6e43d54c6b7a87bc1ca13307c3b599df,Support for Azure board.,1,157,FALSE,NA
pins,183e9058b35feafa43534011686afc1f,Support for Google Cloud board.,1,158,FALSE,NA
pins,e0b409f58fb73b7089ff0c305afbd586,Support for S3 board.,1,159,FALSE,NA
pins,357bfc87f66304b0401c7d6a808ea7d2,"`pin()` extracts URLs that end in `.gz` and `zip`, which can be disabled with `pin(""<url>"", extract = FALSE)`.",1,160,FALSE,NA
pins,87e64f48f8d4d95d917d911a91a42e9d,"`pin()` no longer prints the pin, you can revert this behavior with `options(pins.invisible = FALSE)` (#122).",1,161,FALSE,NA
pins,c84ed8f11478fcf06faac7eda564c9e7,Show upload progress for files larger than 10mb.,1,162,FALSE,NA
pins,87bfd28eeb06380897d3e0174ffaf0f3,Avoid changing `data.table` when using `pin()` and `get_pin()`.,1,163,FALSE,NA
pins,2fc46a9d1cd6078f9ed98807a94014a8,Support for `pin_info()` to describe a pin and `extended = TRUE` in `pin_find()` to show all extended information about each pin.,1,164,FALSE,NA
pins,d501339bcb288c58e594ef858e5b2a2f,"Support for `extract` parameter in `pin_get()`, `pin()`, and `pin_reactive()` to override default file extraction behavior.",1,165,FALSE,NA
pins,e32db3482821133d1c8fd30ee5ed991f,Support to extract gzip files when the `R.utils` package is installed.,1,166,FALSE,NA
pins,0821a1d5c7de72880351a3b2b9797d86,Show download progress for files larger than 10mb.,1,167,FALSE,NA
pins,3f1c84320645fff8a9202aa3e15d5ee0,Support for `I()` to force a pin to be created without additional overhead of exporting CSV and other enhancements (#73).,1,168,FALSE,NA
pins,b823fee7375fcf5e8f59a126973638a2,Support creating automatic `name` when using `pin()` and multiple URL.,1,169,FALSE,NA
pins,ab7a25c40ad0365533f477b40262fa34,"Avoid ""cannot create dir"" warning in systems with an empty cache folder.",1,170,FALSE,NA
pins,2959cd0d6c68090e9a41d712b58cf51e,Gracefully handle errors when a pin's preview can't be created.,1,171,FALSE,NA
pins,f97ad5558d0bc12f01d351cca9ab96f7,Website boards now support the browse menu item in the connection.,1,172,FALSE,NA
pins,0baa53477cc53c13af94c66ea541fba4,Fix data frames previewing character columns with special characters.,1,173,FALSE,NA
pins,f8c82a63562159609090b9cbaad35ce6,Fix connection code when a board is registered automatically.,1,174,FALSE,NA
pins,5d26f5cd7025ae7c3908b3181bf99492,Fix issue where `pin_find()` would not show all available pins.,1,175,FALSE,NA
pins,b6481947f27fdc1a2acbaf867a6c5c32,Fix issue where RStudio Connections pane would not show all pins.,1,176,FALSE,NA
pins,68396580f1196bdf03ec291c116119ad,Store all downloaded content under user subfolder insited rsconnect cache.,1,177,FALSE,NA
pins,54100b9b98276d39cee3f6ffd4be145b,Removed `pin_find()` workaround for beta rsconnect server where searching was causing timeout.,1,178,FALSE,NA
pins,1e8ff9be3feb86f40a5c7fd59a0302c1,Fix for RStudio Connect servers where `/content/` is not used in content URLs.,1,179,FALSE,NA
pins,bbd4b5e4a7c00b93c131aebf91f2a9a6,Fix issue expanding pins columns in RStudio for pins with similar names in RStudio Connect boards.,1,180,FALSE,NA
pins,ba8e2f7fe305adb2c3425feb1ccd3c08,Fix issue removing pins with similar names in RStudio Connect boards.,1,181,FALSE,NA
pins,3ef393b79a58f16c4164b322dab9344f,Support for Python 3.,1,182,FALSE,NA
pins,fbf6c7c8637f0f9850feae87adc0abb6,The `name` parameter in `board_register_datatxt()` is now optional.,1,183,FALSE,NA
pins,cc63989a8e5a9ed9814fbe0514b09fc0,Fix in `pin_find()` to properly search desecription files.,1,184,FALSE,NA
pins,c71328ed50284783882469e2992b2cdf,Various fixes for GitHub boards using the `path` parameter when registering the board (#121).,1,185,FALSE,NA
pins,33fc336452a4fdbcc41d5c13cb1611e2,Support for retrieving pins shared by others in RStudio Connect boards.,1,186,FALSE,NA
pins,2c3183aa6649263a61fb71448de4156f,Support for RStudio Connect servers running under a subpath in the server.,1,187,FALSE,NA
pins,2f6fa645d771e579580ad14ad92b2c1a,Add support for `RSCONNECT_SERVER` environment variable to ease configuration of automated RStudio Connect reports.,1,188,FALSE,NA
pins,1db22f1ff06c3c8b24127cf42ec95495,Fix intermittent failure to retrieve pins from RStudio Connect boards while creating them.,1,189,FALSE,NA
pins,b79f48d75b948cd23bd0505873fc1d52,Fix in RStudio Connect boards to retrieve pins that match other pin names (#45).,1,190,FALSE,NA
pins,0e4ad0cf6b91ca01a144d62e4a58d4b6,Fix for data frames with nested data frames in rsconnect boards (#36).,1,191,FALSE,NA
pins,075be915fc2e4ddf9b4944ee8bb40cbf,`board_register_github()` now checks for the repo to exist (#63).,1,192,FALSE,NA
pins,316a6e663a4d00ae4883269cc5d79190,"Adjusted max upload file to 25mb to avoid ""server error"" in the API, larger files than 25mb uploaded as release files. This can be configured using the `pins.github.release` option, which deefaults to 25.",1,193,FALSE,NA
pins,471a7bdb98945f8594a60e6c1bbc8482,Allow overriding GitHub pin over a pin that partially failed to be created.,1,194,FALSE,NA
pins,cb2c4d7ce8ce29ffd784889fb66def9e,"Using a board will attempt to automatically register, such that `pin(iris, board = ""rsconnect"")` would work for the default configuration even when the board is not explicitly registered (#50).",1,195,FALSE,NA
pins,9907d12e748d35c503890b64f438343e,"Registers ""local"" board by default, you no longer need to explicitly run `board_register_local()` (#56).",1,196,FALSE,NA
pins,fc2c8f0812b86fee421456a5547ce4fd,"Make use of the `rappdirs` package to define the default cache path, replaces `~/.pins`. Use `board_cache_path()` to retrieve default cache path.",1,197,FALSE,NA
pins,e0e72cc514e4133e8a8cf2a6c6d28385,Fix for data.txt boards created from GitHub boards using large files.,1,198,FALSE,NA
pins,fbb3f192c4dc3ce10f029fbbf089b9c2,Support to upload files larger than 50mb in GitHub boards as release files.,1,199,FALSE,NA
pins,76b4cc87e5605ad430427b7f8601a590,Fix CRAN request to explicitly opt-in to use local home path as cache by running `board_register_local()`.,1,200,FALSE,NA
pins,43b9ebc7b2d371f5d50a57b35af1287a,Fix error when retrieving pins from Kaggle boards (#31).,1,201,FALSE,NA
pins,37170aaade18e7b496abb7026df42b25,Support for large files in GitHub board (#30).,1,202,FALSE,NA
pins,26da131758523b91ee0f83653e54301b,Support for local board.,1,203,FALSE,NA
pins,309da87cfbecbd4b39868e39c14ba63a,Support for Kaggle board.,1,204,FALSE,NA
pins,33f80129e548eba04360b59cadc1da90,Support for packages board.,1,205,FALSE,NA
pins,1a80a8fc6efe2aa76dc9cb10bd4a17f9,Support for RStudio Connect board.,1,206,FALSE,NA
pins,446838b8aa5a08a6e1369f493360958d,Support for GitHub board.,1,207,FALSE,NA
pins,2785d5dce17a83a1415910dba8c13ac7,Support for website board.,1,208,FALSE,NA
renv,721bf9c13a6078068bb3717014905917,`renv` now reports missing system libraries as part of its ABI checks in `renv::diagnostics()`.,NA,NA,NA,NA
ggplot2,e5663f8e4b8a32245c19d5d711a1485c,The default `vjust` for the `axis.title.y.right` element is now 1 instead of 0.,NA,NA,NA,NA
keras,589ceedc43d9564ccb357f022c4f7b6d,`op_convert_to_numpy()` now returns unconverted NumPy arrays.,NA,NA,NA,NA
keras,455049c25d0b147df9d993721d4831e1,`op_array()` and `op_convert_to_tensor()` no longer error when casting R doubles to integer types.,NA,NA,NA,NA
reticulate,a455b2094d027f33afd2ab7c18e28165,`iterate(simplify=TRUE)` rewritten in C for speed improvements.,NA,NA,NA,NA
blastula,e5144c78c85ba6801bbeaac9ee3fa628,Fixed Excel attachments which were broken due to faulty conversion into RFC2822. (#314),NA,NA,NA,NA
remotes,d48d0eaf1ab22fc1e580099c55dff7bd,"Add `additional_repositories` parameter to `dev_package_deps()` which allows user to choose whether `Additional_repositories` should be extracted from the `DESCRIPTION` file and appended to repos. (#782, @​maksymiuks)",NA,NA,NA,NA
rvest,14d483800e0f88ce97f7d8c52e3551ad,"New example vignette displays the same starwars data but rendered dynamically using JS, so you need to use `read_html_live()` to get the data.",NA,NA,NA,NA
bslib,e9f0c8299542c0f80c76731aa1f35f22,"`uiOutput()` no longer yields unwanted double padding when it's parent container uses `gap` for spacing multiple elements (e.g., `layout_columns()`, `page_fillable()`, etc). (#992)",NA,NA,NA,NA
ggplot2,cef7e61404da891816a4bc409ee70cb2,Fixed bug where discrete scales could not map aesthetics only consisting of `NA`s (#5623),NA,NA,NA,NA
ggplot2,b599b2cfaee34b84641c9e78b10c9fce,"Facet evaluation is better at dealing with inherited errors (@​teunbrand, #5670).",NA,NA,NA,NA
ggplot2,1c4fffd1990fadd329e4c92d76c54e66,Fixed spurious warnings from `sec_axis()` with `breaks = NULL` (#5713).,NA,NA,NA,NA
ggplot2,5184fb3cfde1a509ce61f3256d67adb6,"Patterns and gradients are now also enabled in `geom_sf()` (@​teunbrand, #5716).",NA,NA,NA,NA
ggplot2,7681f04ccaa2870875a4416a08b5e350,"`stat_bin()` deals with non-finite breaks better (@​teunbrand, #5665).",NA,NA,NA,NA
bslib,8ae620d5e192e7ec408d5bdef3406c9d,`page_navbar()` and `navset_bar()` now validate and transform `padding` and `gap` arguments into appropriate CSS values. (#991),NA,NA,NA,NA
gt,8da9465a5d90c2e300d14ef4e5b549e1,"`data_color()` throws a more informative error if a calculation failed (@​olivroy, #1373).",NA,NA,NA,NA
gt,72ef620413e7ef63a840d68bd8975236,"`gtsave()` saves correctly to .rtf if using `cols_label()` and `summary_rows()` or `grand_summary_rows()` (@​olivroy, #1233)",NA,NA,NA,NA
pointblank,cbe219916c24dd66cb67332f2214e29f,`interrogate()` gains two new options for printing progress in the console output:,NA,NA,NA,NA
pointblank,cbe219916c24dd66cb67332f2214e29f,"• `progress`: Whether interrogation progress should be printed to the console (`TRUE` for interactive sessions, same as before)",NA,NA,NA,NA
pointblank,cbe219916c24dd66cb67332f2214e29f,• `show_step_label`: Whether each validation step's label value should be printed alongside the progress.,NA,NA,NA,NA
pointblank,423f0a1941af0796890d6cb05dc8e02f,Fixes issue with rendering reports in Quarto html documents.,NA,NA,NA,NA
renv,ea6ee5447e2ef2c9dc2c981dd2d59816,`renv` now only writes a `.renvignore` file into the cache directory if the cache appears to be part of the current project.,NA,NA,NA,NA
pointblank,af1846154aeebfcc424f9380b7bbe0a4,Fixes issue with rendering reports in Quarto HTML documents.,NA,NA,NA,NA
pointblank,f3d19ed3da3651458a5735d1a6272a32,"When no columns are returned from a `{tidyselect}` expression in `columns`, the agent's report now displays the originally supplied *expression* instead of simply blank (e.g., in `create_agent(small_table) |> col_vals_null(matches(""z""))`).",NA,NA,NA,NA
lintr,8078253f913858054b3931e02c265078,"Drop support for posting GitHub comments from inside Travis, Wercker, and Jenkins CI tools (spurred by #2148, @​MichaelChirico). We rely on GitHub Actions for linting in CI, and don't see any active users relying on these alternatives. We welcome and encourage community contributions to get support for different CI system going again.",NA,NA,NA,NA
ggplot2,ef59506a8bf7dd36f057742a1ef5fe03,Fixed performance loss when the `.data` pronoun is used in `aes()` (#5730).,NA,NA,NA,NA
lintr,c76d1fd9ad1628c78cb10252ce07bce8,"`.lintr` configs set by option `lintr.linter_file` or environment variable `R_LINTR_LINTER_FILE` can point to subdirectories (#2512, @​MichaelChirico).",NA,NA,NA,NA
vetiver,0c618604f02edb3fb1fa811dfaa1a094,Added new `additional_pkgs` argument for writing plumber files (#271).,NA,NA,NA,NA
ragg,a37f5c7bfc6ae9d57b12ddcdd21cb4ea,Silence a bug in clang-ASAN that incorrectly reported sanitiser issues,NA,NA,NA,NA
renv,b06bdab2c4f863232b58dea50d08e52c,"`renv` now uses a platform-specific prefix on Linux for library and cache paths by default with R (\>= 4.4.0). This is equivalent to setting `RENV_PATHS_PREFIX_AUTO = TRUE`. If necessary, this behavior can be disabled by setting `RENV_PATHS_PREFIX_AUTO = FALSE` in an appropriate R startup file. (#1211)",NA,NA,NA,NA
renv,26bb9b9de49553f69037737d2d390669,Fixed an issue where attempts to install binary packages from older PPM snapshots could fail. (#1839),NA,NA,NA,NA
dbplyr,e70925af2bfd7e8f50317139a7261846,"Refined the `select()` inlining criteria to keep computed columns used to `arrange()` subqueries that are eliminated by a subsequent select (@​ejneer, #1437).",NA,NA,NA,NA
usethis,13458ec4af1a498063950e87e37ca6fb,"The `ui_*()` functions have been marked as superseded. External users of these functions are encouraged to use the cli package instead. The cli package did not have the required functionality when the `usethis::ui_*()` functions were first created, but it does now and it's the superior option. There is a cli vignette about how to make this transition: `vignette(""usethis-ui"", package = ""cli"")`. usethis no longer uses the `ui_*()` functions internally, in favor of new cli-based helpers that are not exported.",NA,NA,NA,NA
pillar,45166c3b541d18b95b4927b81a403c35,"Avoid displaying deprecated argument in `@​inheritDotParams` (@​olivroy, #657).",NA,NA,NA,NA
bslib,02d99790808b88db79520c02e9472598,`page_sidebar()` now places the `title` element in a `.navbar` container that matches the structure of `page_navbar()`. This ensures that the title elements of `page_sidebar()` and `page_navbar()` have consistent appearance. (#998),NA,NA,NA,NA
bslib,55a8aa92220dea58e8641f328b7ada58,We adjusted the shadows used for cards and popovers in the Shiny preset. Cards now use a slightly smaller shadow and the same shadow style is also now used by popovers. (#998),NA,NA,NA,NA
bslib,da87bc4e421ec2e05b6318581030e687,"We increased the spacing between elements just slightly in the Shiny preset. This change is most noticeable in the `layout_columns()` or `layout_column_wrap()` component. In these and other components, you can use `gap` and `padding` arguments to choose your own values, or you can set the `$bslib-spacer` (Sass) or `--bslib-spacer` (CSS) variable. (#998)",NA,NA,NA,NA
gt,8953e151e5acfce1ac435bbff18079ee,"PDF output now allows the font size of a table to be set using the table.font.size parameter in the tab_options function (#1472). The font sizes of individual table cells (including those in the body, stubs, column headings, etc.) can be set using tab_style function. Several other options specified in tab_style are now reflected in PDF output.",NA,NA,NA,NA
renv,03aa461b000db8a93e743f30929aca3a,"Added the `project.id` project setting, which is used primarily when forming external library paths for use with R package projects. This should help resolve issues seen when attempting to build vignettes during `R CMD build` with projects using renv. (#1798)",NA,NA,NA,NA
shiny,2429cfa26d8137e4a3fd536554f2d39a,"Added a `shiny.error.unhandled` option that can be set to a function that will be called when an unhandled error occurs in a Shiny app. Note that this handler doesn't stop the error or prevent the session from closing, but it can be used to log the error or to clean up session-specific resources. (thanks @​JohnCoene, #3989)",NA,NA,NA,NA
renv,c10beafe39937f68734473ab772aee38,Fixed an issue where `renv` could fail to update the project autoloader after calling `renv::upgrade()`. (#1837),NA,NA,NA,NA
tidyselect,48ee23c998e14622553db4288893da21,"Performance improvements (#337, #338, #339, #341)",NA,NA,NA,NA
pkgdown,f6df748aee01178d5f926d4a2fefc63a,"Fix parsing of github profiles and issues into links when present at the beginning of list items (@​pearsonca, #2122)",NA,NA,NA,NA
pkgdown,79f0815d1deb2602a89deee5dd83b41c,"Fix setting `seed` in `build_reference()`. The seed was reset too early, before. (@​salim-b, #2355)",NA,NA,NA,NA
pkgdown,033ed91d5176107a14e350508793801d,"Translates citation sections (@​eliocamp, #2410).",NA,NA,NA,NA
pkgdown,794afd4a46a900c4913391e5738b14c4,"Topic names that conflict with selector functions can now be listed as references in `_pkgdown.yml` (@​dmurdoch, #2397).",NA,NA,NA,NA
htmltools,34824f11fe657f0764a7557c915f3518,"`bindFillRole()` now attaches its `HTMLDependency()` to fill items, thus reducing the possibility of filling layout breaking due to missing CSS. (#421)",NA,NA,NA,NA
bslib,078053eebdb4f578a3b76ad7ed47139a,Fixed a couple `update_popover()` bugs. (#747),NA,NA,NA,NA
pkgdown,43036efa1277969668993a6dc1c9a887,"Allow detection of quarto `.qmd` articles and let them be processed using the `quarto` vignette builder (@​rcannood, #2404).",NA,NA,NA,NA
pkgdown,83b837c36d35194f22530725f1f3ae90,`\cr` is now translated to `<br>` not `<br />` (#2400).,NA,NA,NA,NA
pkgdown,4a2f49cf7a8cbd84e7c1f18ea81c11f2,"Set RNG seed before building articles by default. Use `build_articles(seed = NULL)` for the old (unreproducible) behaviour. (@​salim-b, #2354).",NA,NA,NA,NA
pkgdown,b6d60b7e7427c4daeb0eb6e8d1f7f0c3,"Set RNG seed for htmlwidgets IDs. This reduces noise in final HTML output, both for articles and examples in the reference that contain htmlwidgets (@​salim-b, #2294, #2354).",NA,NA,NA,NA
DT,6afec4098e583e62f99a702e4b294c61,"Added `outputArgs` parameter to `renderDataTable`, to allow width and height to be set when using interactive R Markdown documents.",NA,NA,NA,NA
rex,f9f4d081cb9e82f5311d4d2eae501f3f,Rex no longer changes the state of the random number generator when attached.,NA,NA,NA,NA
ragg,c403ee39f2d029bc5e048e8bc8ffa4ef,"Added supported for new graphics enigine features: Groups, paths, luminance masks, and glyphs",NA,NA,NA,NA
ragg,bd3c055c406af95e389104bbf35a66e5,Add a switch (defaults to on) to snapping rectangles to the pixel grid when they are only drawn with fill (no stroke),NA,NA,NA,NA
ragg,1df74efd6c257c2d5ff0549ca27e9a47,Fixed a bug causing repeated warnings when using a font at 0 size (#130),NA,NA,NA,NA
reticulate,b634ac90cc8f1f2e2e16cd135e40f630,Fixed an issue where `py_discover_config()` would discover `python` (v2) on the PATH in preference of `python3` on the PATH. (#1547),NA,NA,NA,NA
reticulate,792705d90d9ba96cbd229a7b638af19c,"Fixed an issue where reticulate would error when using conda environments created with the (new) `conda env create` command. (#1535, #1543)",NA,NA,NA,NA
renv,4afcb453fc3198daf5a1a775aeb9798a,"`renv::update()` gains the `lock` argument, which can be used to instruct `renv` to automatically update the lockfile after the requested packages have been updated. (#1849)",NA,NA,NA,NA
bslib,f034d5d9ca89a2620ca3a099c615e59b,"Both `card()` and `value_box()` now take an `id` argument that, when provided, is used to report the full screen state of the card or value box to the server. For example, when using `card(id = ""my_card"", full_screen = TRUE)` you can determine if the card is currently in full screen mode by reading the boolean value of `input$my_card$full_screen`. (#1006)",NA,NA,NA,NA
shiny,9c48f0883da2372a7b15afe67b7e443b,"Added `onUnhandledError()` to register a function that will be called when an unhandled error occurs in a Shiny app. Note that this handler doesn't stop the error or prevent the session from closing, but it can be used to log the error or to clean up session-specific resources. (thanks @​JohnCoene, #3993)",NA,NA,NA,NA
shiny,4496b9aa23180a79914659657c45c671,Calling `updateSelectizeInput()` with `choices` and `selected` now clears the current selection before updating the choices and selected value. (#3967),NA,NA,NA,NA
DT,48c06a738057d5ac8ee89dfb8e1ed155,Fixed a bug in `renderDT()`'s evaluation of `...` arguments when `quoted = TRUE` (#1130).,NA,NA,NA,NA
ragg,aee4a9c224b54d7fb1ead9bcae5b8d9e,Make sure the linejoin/linemitre setting is honored when drawing rectangles (#162),NA,NA,NA,NA
dbplyr,e3060c4599367ff6e1669afed307f416,"New translations for clock functions `add_years()`, `add_days()`, `date_build()`, `get_year()`, `get_month()`, `get_day()`, and `base::difftime()` on SQL server, Redshift, Snowflake, and Postgres.",NA,NA,NA,NA
dbplyr,5d17eeeb035a4af73919443d129a3481,"`select()` will keep computed columns used to `arrange()` subqueries that are eliminated by a subsequent select (@​ejneer, #1437).",NA,NA,NA,NA
dbplyr,5b048ecede4a20a731b3d1879f306e6e,"`semi_join()` will no longer inline away an aggregate filter (i.e. `HAVING` clause) that was followed by a `select()` (@​ejneer, #1474)",NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,Improved function translations:,NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,"• Functions qualified with the base namespace are now also translated, e.g. `base::paste0(x, ""_1"")` is now translated (@​mgirlich, #1022).",NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,• `-1 + x` now generates a translation instead erroring (#1420).,NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,• `x$name` never attempts to evaluate `name` (#1368).,NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,• You can once again use `NULL` on the LHS of an infix operator in order to generate SQL with unusual syntax (#1345).,NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,"• Namespaced calls now error if the function doesn't exist, or a translation is not available (#1426).",NA,NA,NA,NA
dbplyr,63d693cd9ecec72cdb12b7f3ac73bb87,• `lead()` translation coerces `n` to an integer.,NA,NA,NA,NA
dbplyr,6f793290cb3adbcd3a387663a231ee8c,Databricks: now supports creating non-temporary tables too (#1418).,NA,NA,NA,NA
dbplyr,1b3d1f7f882a38eea47688b0e07cb6d0,Oracle:,NA,NA,NA,NA
dbplyr,1b3d1f7f882a38eea47688b0e07cb6d0,"• `db_explain()` now works (@​thomashulst, #1353).",NA,NA,NA,NA
dbplyr,1b3d1f7f882a38eea47688b0e07cb6d0,• `as.Date()` works when applied to a string (#1389).,NA,NA,NA,NA
dbplyr,1b3d1f7f882a38eea47688b0e07cb6d0,"• `head()` is once again translated to `FETCH FIRST`. This does require Oracle 12c or newer, but it actually works, compared to the approach using `ROWNUM` from #1292 (#1436).",NA,NA,NA,NA
dbplyr,1b3d1f7f882a38eea47688b0e07cb6d0,"• Added support for `str_replace()` and `str_replace_all()` via `REGEXP_REPLACE()` (@​thomashulst, #1402).",NA,NA,NA,NA
dbplyr,2dcdf7b689ec6ed8d9b928bb363225ec,SQL server:,NA,NA,NA,NA
dbplyr,2dcdf7b689ec6ed8d9b928bb363225ec,• Now products a clear error if you attempt to use `n_distinct()` in `mutate()` or `filter()` (#1366).,NA,NA,NA,NA
dbplyr,2dcdf7b689ec6ed8d9b928bb363225ec,"• `filter()` does a better job of converting logical vectors from bit to boolean (@​ejneer, #1288).",NA,NA,NA,NA
dbplyr,165935de4cb3be766b441c83d0c68fda,"MySQL: `as.integer()` gets correct translation (@​krlmlr, #1375).",NA,NA,NA,NA
dbplyr,03252b2134c4c75c873c2c41d50b01fd,`compute()` passes additional arguments all the way to `sql_query_save()`-methods (@​rsund).,NA,NA,NA,NA
dbplyr,a0d22a699c9c813462933fa53dac3ec2,"New `simulate_mariadb()` (@​krlmlr, #1375).",NA,NA,NA,NA
bslib,b2382a2a93d46f6430147988048d2544,"Fixed an issue that could happen with a `card()` or `value_box()` that is rendered entirely via `renderUI()` when it is replaced by an updated card but the user had expanded the original card into full screen mode. Now the full screen state is reset for the new card or value box. If you want to update a card without potentially exiting the full-screen mode, update specific parts of the card using `uiOutput()` or `textOutput()`. (#1005)",NA,NA,NA,NA
dbplyr,56718d7bb89d91548e048f426ac11b66,"Deprecation status of functions deprecated in previous versions (at least 2 years old) have been advanced. In particular, `src_sql()` is now defunct, as is the use of `partial_eval()` with character `data`.",NA,NA,NA,NA
renv,fefc83dd4cd8cfb82ff07d06efb23de7,Fixed an issue where `renv` could incorrectly prompt the user to record a version of `renv` installed from GitHub in some cases. (#1857),NA,NA,NA,NA
shiny,efec3efc6145fb4ad2f17fa7620b3944,"Loading a Shiny app in a package-like directory will no longer warn if autoloading is disabled by the presence of an `R/_disable_autoload.R` file. (Thanks to @​krlmlr and @​tanho63, #3513)",NA,NA,NA,NA
remotes,4fc0d94a25f64cf8588704c286b3d6a8,"The `Remotes` field in `DESCRIPTION` now accepts explicit package names: `<pkgname>=<type>::<username>/<repo>` (#719, @​heavywatal).",NA,NA,NA,NA
remotes,0049b12335ca3083cd125a45e7f3efa6,"`dev_package_deps()` noq has a `remote_precedence` parameter which allows the user to choose whether remote sources should have a priority over CRAN sources (#732, @​maksymiuks).",NA,NA,NA,NA
remotes,dcbf5f5fa5d72f7846544768ed41d628,"`install_dev()` now ignores a trailing slash (#692, @​krlmlr).",NA,NA,NA,NA
remotes,215f4223ac15a942857aeded11908111,System requirements now support Ubuntu 22.04.,NA,NA,NA,NA
remotes,13ef956eb868e2f8ab8fe61d67bfdb63,"`local_package_deps()` now errors for non-existent directories (#772, @​MatthieuStigler).",NA,NA,NA,NA
pak,2fc46a55048402eb5e2197bc5f2d0385,pak now supports using parameters for all packages with the `*=?<param>` form. E.g. `*=?source` installs all packages from source.,NA,NA,NA,NA
pak,13ca2f3ce56963d3971c4221057c2756,"pak now supports R 4.4.0 again, and also Rtools44.",NA,NA,NA,NA
ggplot2,bb03b61e87e42e7c2f5dfe9132f21ae3,"`annotate()` now warns about `stat` or `position` arguments (@​teunbrand, #5151)",NA,NA,NA,NA
ggplot2,0c2f5cb393b47e2a76e00db7de98a95e,"When legends detect the presence of values in a layer, `NA` is now detected if the data contains values outside the given breaks (@​teunbrand, #5749).",NA,NA,NA,NA
ggplot2,fef34e9154fe447c9ec6c00b139c47ea,"`geom_step()` now supports `lineend`, `linejoin` and `linemitre` parameters (@​teunbrand, #5705).",NA,NA,NA,NA
ggplot2,80cf5ca36a1d291a08e695f70a11e8a0,"Fixed bug in `coord_radial()` where full circles were not treated as such (@​teunbrand, #5750).",NA,NA,NA,NA
ggplot2,ef344fc7e5693f919e77b2386987bbf2,"When passing a function to `stat_contour(breaks)`, that function is used to calculate the breaks even if `bins` and `binwidth` are missing (@​teunbrand, #5686).",NA,NA,NA,NA
ggplot2,7adbd1f45c535d49c7c7a8ef1da927ed,Theme elements that do not exist now throw warnings instead of errors (#5719).,NA,NA,NA,NA
ggplot2,a7a07c1e160faddf9f022326e795980a,`coord_map()` and `coord_polar()` throw informative warnings when used with the guide system (#5707).,NA,NA,NA,NA
ggplot2,778d3e2c73e313a41322fb54d76f0c78,"Fixed bug in `guide_bins()` and `guide_coloursteps()` where discrete breaks, such as the levels produced by `cut()`, were ordered incorrectly (@​teunbrand, #5757).",NA,NA,NA,NA
bslib,5ae5a9ae34f91c5864e553540ebf6f4e,"`value_box()`, `layout_columns()` and `layout_column_wrap()` now all have `min_height` and `max_height` arguments. These are useful in filling layouts, like `page_fillable()`, `page_sidebar(fillable = TRUE)` or `page_navbar(fillable = TRUE)`. For example, you can use `layout_columns(min_height = 300, max_height = 500)` to ensure that a set of items (likely arranged in a row of columns) are always between 300 and 500 pixels tall. (#1016)",NA,NA,NA,NA
bslib,ff074b40bd9eac93b7337dde77100eb9,"The `col_widths` argument of `layout_columns()` now sets the `sm` breakpoint by default, rather than the `md` breakpoint. For example, `col_widths = c(12, 6, 6)` is now equivalent to `breakpoints(sm = c(12, 6, 6))` rather than `breakpoints(md = c(12, 6, 6))`. (#1014)",NA,NA,NA,NA
bslib,0479ad32983c6b09200bc1d22779e660,Fixed an issue where the `xs` breakpoint in a `breakpoints()` object used for `row_heights` in `layout_columns()` would override all other breakpoints. (#1014),NA,NA,NA,NA
htmltools,a1952b40557067961a8300a4d408a259,The fill CSS attached to fillable containers and fill items with `bindFillRole()` now uses a CSS cascade layer named `htmltools` to reduce the precedence order of the fill CSS. (#425),NA,NA,NA,NA
htmltools,8799e72ca1aba0355cd8ded608a68ae4,"Improved documentation for boolean attributes in `tagAppendAttributes()` to note that they can be set via an `NA` value, e.g. `tagAppendAttributes(div(), contenteditable = NA)` creates `<div contenteditable></div>`. (thanks @​russHyde, #427)",NA,NA,NA,NA
shiny,985f779d7d083536a67509f666dcd55d,"`renderDataTable()`/`dataTableOutput()` are officially deprecated in favor of their `{DT}` equivalents, `renderDT()`/`DTOutput()`. In most cases, simply changing `renderDataTable()` to `DT::renderDT()` and `dataTableOutput()` to `DT::DTOutput()` is sufficient for upgrading. Also, to promote migration, when a recent version of `{DT}` is available, `renderDataTable()`/`dataTableOutput()` now automatically use their `{DT}` equivalent (and provide a message that they are doing so). If this happens to degrade an existing app, set `options(shiny.legacy.datatable = TRUE)` to get the old (i.e., non-`{DT}`) implementation. (#3998)",NA,NA,NA,NA
reticulate,e66a5180ba3410a7107c8ae17a5abca3,Fixed issue where callable python objects created with `convert = FALSE` would not be wrapped in an R function.,NA,NA,NA,NA
reticulate,afb34e4602900f6a22d807fbd7065fca,Fixed issue where `py_to_r()` S3 methods would not be called on arguments supplied to R functions being called from Python.,NA,NA,NA,NA
reticulate,5669c6893e953bb3d3a426cc2e303821,"py_to_r(x) now returns `x` unmodified if `x` is not a Python object, instead of signaling an error.",NA,NA,NA,NA
reticulate,25703abd99032b12b04eb46e902a28bb,"`attr(x, ""tzone"")` attributes are (better) preserved when converting POSIXt to Python. POSIXt types with a non-empty `tzone` attr convert to a datetime.datetime, otherwise they convert to NumPy datetime64\[ns\] arrays.",NA,NA,NA,NA
reticulate,be9f83f38d6d56a874b5795ac981a0eb,Fixed an issue where calling py_set_item() on a subclassed dict would not invoke a custom **setitem** method.,NA,NA,NA,NA
reticulate,603f6f6baa21f367802fd2f1ce3f87ae,"py_del_attr(x, name) now returns x invisibly",NA,NA,NA,NA
reticulate,5ab305363945435d2d209ae0392223d2,"source_python() no longer exports assigns the ""r"" symbol to the R globalenv(). (the ""R Interface object"" that is used by python code get a reference to the R globalenv)",NA,NA,NA,NA
reticulate,6d0e55dae7d7b3563b1865049e92abaf,Fixed an issue where calling `py_set_item()` on a subclassed dict would not invoke a custom `__setitem__` method.,NA,NA,NA,NA
reticulate,e3d831b573322a2742188bfd773e30ac,Fixed an issue where reticulate would error when using a conda environment where the original conda binary that was used to create the environment is no longer available (#1555),NA,NA,NA,NA
bslib,62e26099cb3ce959a822651d2c24fda7,"Fixed a handful of `update_popover()` bugs. (#747, #1017)",NA,NA,NA,NA
bslib,7f20852c149e91ed71994b144c11865a,`tooltip()` and `popover()` now work as expected when inserted into a navbar/navset via `nav_insert()`. (#1020),NA,NA,NA,NA
shiny,a990f77f698d8b0ec8c9ab54278eded6,"The examples behind `runExample()` now use `{bslib}` to generate a better looking result. To instead run the ""legacy"" examples, set `options(shiny.legacy.examples = TRUE)` before calling `runExample()`. (#3963)",NA,NA,NA,NA
shiny,40f5e9f2db6a90441af2b1c29bfcacef,"`runExamples()` now uses the `{bslib}` package to build the user interface (UI). It also gains a `package` argument so that other packages can leverage this same function to run Shiny app examples. For more, see `?runExamples`. (#3963, #4005)",NA,NA,NA,NA
rsconnect,8686cfde476e32892874d208f5541541,"Use internally computed SHA1 sums and PKI signing when SHA1 is disabled in FIPS mode (#768, #1054)",NA,NA,NA,NA
callr,a51d3950b37900f472af6aa67ba84475,"If the `CALLR_NO_TEMP_DLLS=true` env var is set then callr does not copy the dll the client DLL files from, in the subprocess. By default callr copies the DLL file that drives the callr subprocess into a temporary directory and loads it from there (#273).",NA,NA,NA,NA
keras,2306c54db1929327d9532fcd6ed3242f,"`quantize_weights()`: quantize model or layer weights in-place. Currently, only `Dense` and `EinsumDense` layers are supported (which is enough to cover the majority of transformers today)",NA,NA,NA,NA
keras,03bdfb0a7ad1b16ee37f2bd19d134ab9,`layer_mel_spectrogram()`,NA,NA,NA,NA
keras,73970ad72dd48276ffc98456d0040018,`random_beta()`,NA,NA,NA,NA
keras,7d838e67e6eb4134a6472d47721cea52,`random_binomial()`,NA,NA,NA,NA
keras,f3927c88c6372383ed5dcd76c3e50974,`config_set_backend()`: change the backend after Keras has initialized.,NA,NA,NA,NA
keras,0b1ea202b24ded40eb4ea01deb540de8,`config_dtype_policy()`,NA,NA,NA,NA
keras,c77a765a05ce67ddcbdb3892fd09aeea,`config_set_dtype_policy()`,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,New Ops,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,• `op_custom_gradient()`,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,• `op_batch_normalization()`,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,• `op_image_crop()`,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,• `op_divide_no_nan()`,NA,NA,NA,NA
keras,d21c2b54c9422ddee0c287e7e3c26067,• `op_normalize()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,New family of linear algebra ops,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_cholesky()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_det()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_eig()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_inv()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_lu_factor()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_norm()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_erfinv()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_solve_triangular()`,NA,NA,NA,NA
keras,65e4b6cf921d0df539f3a4932b3515cd,• `op_svd()`,NA,NA,NA,NA
keras,ff1562366205aa9b013382640df665fc,"`audio_dataset_from_directory()`, `image_dataset_from_directory()` and `text_dataset_from_directory()` gain a `verbose` argument (default `TRUE`)",NA,NA,NA,NA
keras,13ca75d04a74a79a632380d4087f30c0,`image_dataset_from_directory()` gains `pad_to_aspect_ratio` argument (default `FALSE`),NA,NA,NA,NA
lintr,cfe405244db5ab6c3f332e038177204e,"Fixed a test assuming a specific parser error message that recently changed in r-devel (#2527, @​IndrajeetPatil).",NA,NA,NA,NA
lintr,8583ab40eddc832ab4bee5e5c99f01a3,@​MichaelChirico has taken over CRAN maintainer duties for the package. Many thanks to @​jimhester for more than 10 years and 15 releases wearing that hat!!,NA,NA,NA,NA
reticulate,53cda7665529464456f22e56ce515998,`reticulate` now prefers using the agg matplotlib backend when the R session is non-interactive. The backend can also be overridden via the `MPLBACKEND` or `RETICULATE_MPLBACKEND` environment variables when necessary.,NA,NA,NA,NA
reticulate,e1281c550da77d9c584f470f2318a44d,"Fixed an issue where the would be unable to accept the prompt to create the default ""r-reticulate"" venv (#1557).",NA,NA,NA,NA
pointblank,84c69df6bede78b906a9a9fbe92cd0c3,Ensured that the column string is a symbol before constructing the expression for the `col_vals_*()` functions.,NA,NA,NA,NA
pointblank,84e10871ad228cc7b53523a54a03d026,No longer resolve columns with tidyselect when the target table cannot be materialized.,NA,NA,NA,NA
pointblank,48a511807d2e7da107c145f6bc76664f,Relaxed tests on tidyselect error messages.,NA,NA,NA,NA
rsconnect,17ee5bc2f8c7fd60f591b859fc5d9154,Allow Quarto content with a rendered script as its primary target. (#1055),NA,NA,NA,NA
reticulate,eb87acee11f408414535c2984985be1c,"Fixed an issue where printing a delayed module (`import(""foo"", delay_load = TRUE)`) would output `<pointer: 0x0>`.",NA,NA,NA,NA
reticulate,df7ef28b97a5fdc88124701099ceac16,`py_validate_xptr()` will now attempt to resolve delayed modules before signaling an error (#1561).,NA,NA,NA,NA
shiny,9b7858e3f2955f8d347ae85fd6f6e41a,"Added `ExtendedTask`, a new simple way to launch long-running asynchronous tasks that are truly non-blocking. That is, even *within* a session, an `ExtendedTask` won't block the main thread from flushing the reactive graph (i.e., UI updates won't be blocked). `ExtendedTask` pairs nicely with new `bslib::input_task_button()` and `bslib::bind_task_button()` functions, which help give user feedback and prevent extra button clicks. (#3958)",NA,NA,NA,NA
shiny,620d5b7390177a04cffa5bb05a831167,"Added a JavaScript error dialog, reporting errors that previously were only discoverable by opening the browser's devtools open. Since this dialog is mainly useful for debugging and development, it must be enabled with `shiny::devmode()`. (#3931)",NA,NA,NA,NA
reticulate,90d1e48d8d9d8488c554cd269c48d2e2,"Reticulate will no longer warn about ignored `use_python(,required = FALSE)` calls.",NA,NA,NA,NA
tensorflow,611e93b865d16525b9f3006d01abffd4,The package now Suggest 'keras3' instead of 'keras',NA,NA,NA,NA
tensorflow,d557141c14dcdfb25706a8da1656eef4,"If `install_tensorflow()` detects a GPU on Linux, it will automatically install the cuda package and configure required symlinks for cudnn.",NA,NA,NA,NA
leaflet,a6767f3f96d52434874208f0ca5b9909,"Relative protocols are used where possible when adding tiles (#526). In RStudio 1.1.x on Linux and Windows, a known issue of 'https://' routes fail to load, but works within browsers (rstudio/rstudio#2661).",NA,NA,NA,NA
DT,39b179d273d27072d12dd5cd838be076,"Maintain selected columns/rows/cells upon re-render (thanks, @​epruesse, #1125).",NA,NA,NA,NA
gh,49be7d62a00b6338804f3f51f5aef77c,"`gh_next()`, `gh_prev()`, `gh_first()` and `gh_last()` now work correctly again (#181).",NA,NA,NA,NA
gh,a6338bb2096cbeac1c0d5f9d0a06292c,"When the user sets `.destfile` to write the response to disk, gh now writes the output to a temporary file, which is then renamed to `.destfile` after performing the request, or deleted on error (#178).",NA,NA,NA,NA
reticulate,46c932e306dd8cb95e848b03172d0c7e,"Fixed an issue where nested `py_capture_output()` calls result in a lost reference to the original `sys.stdout` and `sys.stderr`, resulting in no further visible output from Python, and possibly a segfault. (#1564)",NA,NA,NA,NA
bslib,0ee1a25ee510afb68c498d8200083479,"`uiOutput()` and `conditionalPanel()` no longer result in unwanted double padding when their parent container uses `gap` for spacing multiple elements (e.g., `layout_columns()`, `page_fillable()`, etc). (#992, #1031)",NA,NA,NA,NA
reticulate,c9f31000d32858dd52ff44a0fda3524b,"R packages can now express multiple preferred Python environments to search for and use if they exist, by supplying a character vector to `import()`: `import(""foo"", delay_load = list(environment = c(""r-foo"", ""r-bar"")))`",NA,NA,NA,NA
reticulate,150af8de960c428cbe124bde4d50cc3c,`install_python()` will now build optimized versions of Python on macOS and Linux (#1567),NA,NA,NA,NA
reticulate,1d45f51c1e7000b7283ad8842a0fa8d9,New `as.data.frame()` method exported for Python Polars DataFrames (#1568),NA,NA,NA,NA
reticulate,fc54f750e094439ad7f71a0f1201c1e1,Many internal changes and optimizations should result in an overall substantially faster experience. I.e. a sample workload of `py_to_r(np_array(1:3) + np_array(1:3))` is approx 3.4x faster as compared to the current CRAN release.,NA,NA,NA,NA
reticulate,8bfd715e8b118d3cd26bddf81808cd0f,"`source_python()` no longer exports the `r` symbol to the R globalenv(). (the ""R Interface Object"" that is used by Python code get a reference to the R globalenv)",NA,NA,NA,NA
renv,c481eba401b14295472bbd8afb86158e,"Fixed an issue where `renv::snapshot()` did not properly normalize package records generated from packages installed using the `pak` package, e.g. via `pak::pkg_install(""cran::<package>"")`.",NA,NA,NA,NA
bslib,2aab63918234444ff654892a96afe562,For `sidebar()`:,NA,NA,NA,NA
bslib,2aab63918234444ff654892a96afe562,"• The page-level `sidebar` for `page_sidebar()`/`page_navbar()` is now always open (and not collapsible) by default on mobile screens. To revert to the old behavior, set `open = ""desktop""` in the `sidebar`. (#943)",NA,NA,NA,NA
bslib,2aab63918234444ff654892a96afe562,"• `open` now accepts a list with `mobile` and `desktop` values to control the sidebar's initial state on each screen size, choosing from `""open""`, `""closed""`, or `""always""` (for an always-open sidebar that cannot be collapsed). (#943)",NA,NA,NA,NA
bslib,2aab63918234444ff654892a96afe562,• The collapse toggle now has a high `z-index` value to ensure it always appears above elements in the main content area. The sidebar overlay also now receives the same high `z-index` on mobile layouts. (#958),NA,NA,NA,NA
bslib,9baf2b2eeae5e1eaeeb3159f6a600453,"Improved `card(full_screen = TRUE, ...)` accessibility:",NA,NA,NA,NA
bslib,9baf2b2eeae5e1eaeeb3159f6a600453,"• Full-screen cards are now supported on mobile devices: the *Expand card* button is revealed when a user taps on the card (thanks @​Damonsoul, #961).",NA,NA,NA,NA
bslib,9baf2b2eeae5e1eaeeb3159f6a600453,• The *Expand card* button is now accessible via keyboard navigation and appropriate ARIA attributes connect the card with the expand and close buttons.,NA,NA,NA,NA
bslib,9baf2b2eeae5e1eaeeb3159f6a600453,"• For JavaScript-oriented users, the expansion/collapse is now accompanied by a custom `bslib.card` event with the full screen state reported in the `event.detail.fullScreen` property. (#959)",NA,NA,NA,NA
bslib,fc0e5a5363a8109adb00ee7c6af11fe8,"Improvements to the default theme (i.e., Shiny preset):",NA,NA,NA,NA
bslib,fc0e5a5363a8109adb00ee7c6af11fe8,"• In the default theme, cards now use a slightly smaller shadow and the same shadow style is also now used by popovers. (#998)",NA,NA,NA,NA
bslib,fc0e5a5363a8109adb00ee7c6af11fe8,"• Increased spacing between elements. This change is most noticeable in the `layout_columns()` or `layout_column_wrap()` component. In these and other components, you can use `gap` and `padding` arguments to choose your own values, or you can set the `$bslib-spacer` (Sass) or `--bslib-spacer` (CSS) variable. (#998)",NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,For `layout_columns()`:,NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,"• `col_widths` now sets the `sm` breakpoint by default, rather than the `md` breakpoint. For example, `col_widths = c(12, 6, 6)` is now equivalent to `breakpoints(sm = c(12, 6, 6))` rather than `breakpoints(md = c(12, 6, 6))`. (#1014)",NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,"• When `col_widths` has a `breakpoints()` at `lg` or wider, it now uses a better default column width for the smaller breakpoints not listed in the `col_widths` value. That said, you can always include `sm` or `md` in your `breakpoints()` definition to have complete control over column widths at those sizes. (#931)",NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,"• When `row_heights` is a non-`breakpoints()` object, that value is used for the row heights at all breakpoints. Previously, it was used for the row heights from `""sm""` up. (#931)",NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,"• When an integer value for any breakpoint is provided to `col_widths`, a 12-unit grid is always used. For example, `breakpoints(md = 3, lg = NA)` will pick a best-fitting layout for large screen sizes using the 12-column grid. Previously, the best fit algorithm might adjust the number of columns as a shortcut to an easy solution. That shortcut is only taken when an auto-fit layout is requested for every breakpoint, e.g. `col_widths = breakpoints(md = NA, lg = NA)` or `col_widths = NA`. (#928)",NA,NA,NA,NA
bslib,5d99b7fd35a2fd18a5cd04859a152d7f,• Underlying logic moved from R to Typescript to improve the portability of the component. (#931),NA,NA,NA,NA
bslib,6d4f5aa7a4329764d862430405707a36,"`card()`s (and `value_box()`s) now correctly exit full screen mode when they are removed from the UI. If you want to update a card without potentially exiting the full-screen mode, update specific parts of the card using `uiOutput()` or `textOutput()`. (#1005)",NA,NA,NA,NA
shiny,1d299d0b29ae98aaf7f52c0c09861162,"In v1.8.1, shiny.js starting throwing an error when input/output bindings have duplicate IDs. This error is now only thrown when `shiny::devmode(TRUE)` is enabled, so the issue is still made discoverable through the JS error console, but avoids unnecessarily breaking apps that happen to work with duplicate IDs. (#4019)",NA,NA,NA,NA
lintr,e14f9d19b400ff7a2ad534458c80d4c9,"`make_linter_from_xpath()` errors up front when `lint_message` is missing (instead of delaying this error until the linter is used, #2541, @​MichaelChirico).",NA,NA,NA,NA
lintr,a2e82e2ebd74b580732c83249ad20790,"`object_name_linter()` and `object_length_linter()` ignore {rlang} name injection like `x |> mutate(""{new_name}"" := foo(col))` (#1926, @​MichaelChirico). No checking is applied in such cases. {data.table} in-place assignments like `DT[, ""sPoNGeBob"" := ""friend""]` are still eligible for lints.",NA,NA,NA,NA
ggplot2,d8103ab948b9f553d343e6096d22131d,`update_geom_defaults()` and `update_stat_defaults()` have a reset mechanism when using `new = NULL` and invisible return the previous defaults (#4993).,NA,NA,NA,NA
ggplot2,67b272cc43c4872df5835737e72bf4c0,"While axes in `coord_radial()` don't neatly fit the top/right/bottom/left organisation, specifying `position = ""top""` or `position = ""right""` in the scale will flip the placement of the radial axis (#5735)",NA,NA,NA,NA
ggplot2,08fc38ece4f75367e3f46d99bf7961e1,The default behaviour of `resolution()` has been reverted to pre-3.5.0 behaviour. Whether mapped discrete vectors should be treated as having resolution of 1 is controlled by the new `discrete` argument.,NA,NA,NA,NA
ggplot2,8ac63519961463cecc3bc10a37d52e45,"`guide_coloursteps(even.steps = FALSE)` now works with discrete data that has been formatted by `cut()` (@​teunbrand, #3877).",NA,NA,NA,NA
ggplot2,065e2d85371b0d8700a430a3fcfeecf7,"When facets coerce the faceting variables to factors, the 'ordered' class is dropped (@​teunbrand, #5666).",NA,NA,NA,NA
reticulate,4f0748d03843fe3d62c0f2b214e34403,"Output of `reticulate::py_last_error()` now includes a hint, showing how to access the full R call stack.",NA,NA,NA,NA
reticulate,2d0ea4eeb36d9da0ee1b73755636b042,`is_py_object()` is now exported.,NA,NA,NA,NA
reticulate,e5102dc3fb4d0ef6f33399f018db591d,Default Python version installed by `install_python()` is now 3.10 (was 3.9).,NA,NA,NA,NA
promises,43f3a1091b7a79edbeeb959f7655a7bf,`is.promising` is now an S3 method. (#104),NA,NA,NA,NA
rlang,669fdf58dd15f5d5477202da4e515528,Added missing C level `r_dyn_raw_push_back()` and `r_dyn_chr_push_back()` utilities (#1699).,NA,NA,NA,NA
lintr,835291e2b3866d30e581b05ccb5ee517,"`indentation_linter()` returns `ranges[1L]==1L` when the offending line has 0 spaces (#2550, @​MichaelChirico).",NA,NA,NA,NA
styler,f720c0d9844142b7bda39d4e9483c8bc,"Add a package sticker (#1172, #1173).",NA,NA,NA,NA
styler,013e5616d72b27c854205eb4e8a5a9e4,Improve error message for scope (#1176).,NA,NA,NA,NA
styler,734548fcf7949d7790364948827d54cc,Update lintr config and address newly found lints (#1158).,NA,NA,NA,NA
styler,4cb6c0fd1e0b77722b14bdb11f9dd59b,Fix new lints about implicit return (#1166).,NA,NA,NA,NA
styler,136591ac73328864cda810793dc3a66c,Clean new lints (#1149).,NA,NA,NA,NA
styler,e05a4bfa26e5eec31f70abc144d27b80,Clean up unnecessary YAML front matter in README (#1165).,NA,NA,NA,NA
styler,ca47e14fe1448e992bb022f259b9b460,"Update pre-commit and GitHub Actions (#1177, #1175, #1171, #1171, #1164, #1152, #1148).",NA,NA,NA,NA
styler,ab57bdeb1a9b9d7a33234dff6a30ca76,Delete URL check workflow (#1160).,NA,NA,NA,NA
styler,e9492cfb2c84890464164b4488673981,Suppress warning in io tests (#1169).,NA,NA,NA,NA
styler,c0d1a231a8072d89b7d0479de00c3c9a,Ensure unit tests check for appropriate error messages in the R parser for R \> 4.3 (#1180).,NA,NA,NA,NA
styler,f974563269c78f85cfa347c32585837a,Remove outdated test about repeated parsing (#1163).,NA,NA,NA,NA
styler,dc15b22bf949eec038fe868a479e40fb,Update roxygen test comments (#1162).,NA,NA,NA,NA
styler,281d0e866c9c198a1b9c4a10c04dacc1,Delete unused snapshot (#1159).,NA,NA,NA,NA
reticulate,ab3b74f705c481ec8f46b4a7978e3e9c,"Internal refactoring and optimization now give a faster experience, especially for workflows that frequently access Python objects from R. For example, simple attribute access like `sys$path` is \~2.5x times faster, and a sample workload of `py_to_r(np_array(1:3) + np_array(1:3))` benchmarks \~3.5x faster when compared to the previous CRAN release.",NA,NA,NA,NA
reticulate,7f7b6006967dbb36ee978e2bbeedfbfc,Fixed issue where callable python objects created with `convert = FALSE` would not be wrapped in an R function (#1522).,NA,NA,NA,NA
reticulate,86205d2c89fc042a11a3bf9eb4c9e5d5,Fixed issue where `py_to_r()` S3 methods would not be called on arguments supplied to R functions being called from Python (#1522).,NA,NA,NA,NA
reticulate,ba44f06dc06e60a97fdb6c64b4e8185d,Default Python version installed by `install_python()` is now 3.10 (was 3.9) (#1574).,NA,NA,NA,NA
reticulate,37ec2ff262fe5da39834ac4d5e7d433f,"Output of `reticulate::py_last_error()` now includes a hint, showing how to access the full R call stack (#1572).",NA,NA,NA,NA
reticulate,3d492f09b4d56c94310bc1e3ab5e177d,"R packages can now express multiple preferred Python environments to search for and use if they exist, by supplying a character vector to `import()`: `import(""foo"", delay_load = list(environment = c(""r-foo"", ""r-bar"")))` (#1559)",NA,NA,NA,NA
reticulate,9d19036a6bf8dc3894e271af9319e5ee,"Reticulate will no longer warn about ignored `use_python(,required = FALSE)` calls (#1562).",NA,NA,NA,NA
reticulate,36936ee71f510d1ac4b11efc1371ced7,`reticulate` now prefers using the agg matplotlib backend when the R session is non-interactive. The backend can also be overridden via the `MPLBACKEND` or `RETICULATE_MPLBACKEND` environment variables when necessary (#1556).,NA,NA,NA,NA
reticulate,86603070a390028f19ba4082559bd9ec,Fixed hang encountered (sometimes) when attempting to call `iterate()` on an exhausted `py_iterator()` object multiple times (#1539).,NA,NA,NA,NA
reticulate,d80ebace7f4e281ed1014eab80280449,`iterate(simplify=TRUE)` rewritten in C for speed improvements (#1539).,NA,NA,NA,NA
reticulate,9e43a3ad37045788facf2d45d64a113d,Updates for CRAN R-devel (R 4.4) (#1554).,NA,NA,NA,NA
reticulate,39e952b2dbf254367f0d2896c4070ef7,`is_py_object()` is now exported (#1573).,NA,NA,NA,NA
pkgdown,c53fd39e8985ed07972cd469549e409b,"pkgdown is now compatible with (and requires) bslib \>= 0.5.1 (@​gadenbuie, #2395).",NA,NA,NA,NA
pkgdown,32c621903d036b30b02bb8f4e5df756a,"pkgdown is now compatible with (and requires) bslib \>= 0.5.1 (@​gadenbuie, #2395), including a fix to BS5 navbar template to get `navbar.type: dark` to work with Bootstrap 5.3+ (@​tanho63, #2388)",NA,NA,NA,NA
pkgdown,ca9a73d190badd6c45dc4edbb01b1e0e,Now uses cli to provide interactive feedback.,NA,NA,NA,NA
pkgdown,38638ff4936f5fb36b084948c06a3222,Translations,NA,NA,NA,NA
pkgdown,38638ff4936f5fb36b084948c06a3222,"• New Catalan translation (@​jmaspons, #2333).",NA,NA,NA,NA
pkgdown,38638ff4936f5fb36b084948c06a3222,"• Citation sections are correctly translated (@​eliocamp, #2410).",NA,NA,NA,NA
pkgdown,903ada730905af42d380a390de822286,"`build_article_index()` now sorts vignettes and non-vignette articles alphabetically by their filename (literally, their `basename()`), by default (@​jennybc, #2253).",NA,NA,NA,NA
pkgdown,db831ad54fb39f7944b90aa21470b48b,"`build_articles()` now sets RNG seed by default. Use `build_articles(seed = NULL)` for the old (unreproducible) behaviour. (@​salim-b, #2354).",NA,NA,NA,NA
pkgdown,a97b7acd4e6e336d0bbe0f9ff6bf6205,"`build_articles()` will process `.qmd` articles with the quarto vignette builder (@​rcannood, #2404).",NA,NA,NA,NA
pkgdown,34cf6c0d7dc58a0236d9566420e80562,"`build_articles()` and `build_reference()` now set RNG seed for htmlwidgets IDs. This reduces noise in final HTML output, both for articles and examples that contain htmlwidgets (@​salim-b, #2294, #2354).",NA,NA,NA,NA
pkgdown,4f3c429c76539fa6687a4bf23d40dde5,"`build_news()` correctly parses of github profiles and issues into links when present at the beginning of list items (@​pearsonca, #2122)",NA,NA,NA,NA
pkgdown,288a29886f03f9ede56a837d55037ccf,"`build_reference()` sets `seed` correctly; it was previously reset too early (@​salim-b, #2355)",NA,NA,NA,NA
pkgdown,e6208e4c6928f98687aefb4c32cadb2a,Rd -\> html translation,NA,NA,NA,NA
pkgdown,e6208e4c6928f98687aefb4c32cadb2a,• `\cr` is now translated to `<br>` not `<br />` (#2400).,NA,NA,NA,NA
pkgdown,e6208e4c6928f98687aefb4c32cadb2a,• Correct usage for S3 methods with non-syntactic class names (#2384).,NA,NA,NA,NA
pkgdown,e6208e4c6928f98687aefb4c32cadb2a,"• Preserve Markdown code blocks with class rmd from roxygen2 docs (@​salim-b, #2298).",NA,NA,NA,NA
pkgdown,6d38bee8fa58d0f8b61052a5d36f2452,"`build_reference_index()` no longer generates redundant entries when multiple explicit `@​usage` tags are provided (@​klmr, #2302)",NA,NA,NA,NA
pkgdown,327436e9c8356e5e6fc285e436ba65ef,"`build_reference_index()` correctly handles topic names that conflict with selector functions (@​dmurdoch, #2397).",NA,NA,NA,NA
rmarkdown,6a8b10b643e930fcec16aeac07ffba7a,"Provide a global option `rmarkdown.files.suffix` to configure the suffix of the directory for auxiliary files (thanks, @​certara-tzweers, #2550). By default, this suffix is `_files`, which can cause HTML output files to be deleted automatically on Microsoft OneDrive or Google Drive. If that is the case for you, you may set a different suffix in your `.Rprofile`, e.g., `options(rmarkdown.files.suffix = ""_rmdfiles"")`.",NA,NA,NA,NA
reticulate,fd33cb552e207fb6b8bef0ec4d26119f,"Fixed issues reported by rchk, as requested by CRAN (#1581).",NA,NA,NA,NA
bslib,e665c6fe24adf340cf3dcf60938dfcea,"Adjusted the border color of checkbox and radio buttons to match the border color of the input group in `bs_theme(preset=""shiny"")` . (#1038)",NA,NA,NA,NA
shiny,bb5463175308366f1b3a6d9cef99daa1,Fixed a recent issue with `uiOutput()` and `conditionalPanel()` not properly lower opacity when recalculation (in a Bootstrap 5 context). (#4027),NA,NA,NA,NA
shinytest2,793de8ac9b541e434757c319191727ed,"`{shinytest2}` now uses `{rlang}` and longer depends on `{ellipsis}` (@​olivroy, #382).",NA,NA,NA,NA
shinytest2,29651ad32f38386efede4ce8d276a017,shinytest2 no longer checks if the computer running the tests is connected to the internet when determining if shinytest2 can connect to the server hosting the Shiny app being tested. (@​Riraro #364),NA,NA,NA,NA
renv,bb7e82e8bbecda890b2767eee019bc3b,Fixed an issue where downloads could fail with curl \>= 8.7.1. (#1869),NA,NA,NA,NA
renv,cf5cac2237b5f6f17c451f0dabf5b689,Fixed an issue where `renv`'s activate script failed to report version conflict errors when starting up. (#1874),NA,NA,NA,NA
pkgdown,08b4d0eb451c57c80d99965fdb60759e,"`build_home()` no longer renders Github issue and pull request templates (@​hsloot, #2362)",NA,NA,NA,NA
pkgdown,13e6233d6a3a442556a655d0f982c8e5,Preview links now work once again (#2435).,NA,NA,NA,NA
keras,8ff7513e812e35d8a3d5eddfa57dd7c8,`layer_flax_module_wrapper()`,NA,NA,NA,NA
keras,ea6eb0e9b4a0bfc71c013c12565a61a8,`layer_jax_model_wrapper()`,NA,NA,NA,NA
keras,08fffb04b94d4ea39e08e08c95201dcc,`loss_dice()`,NA,NA,NA,NA
keras,0fee1aa546fefe9a1aff9d4f5580f922,`export_savedmodel()` now works with a Jax backend.,NA,NA,NA,NA
keras,7e1724ac8e130867e5858919cf851650,`Metric()$add_variable()` method gains arg: `aggregration`.,NA,NA,NA,NA
keras,a7b258a10f34f62141df912221844e73,"`Layer()$add_weight()` method gains args: `autocast`, `regularizer`, `aggregation`.",NA,NA,NA,NA
keras,95a72c2ac7b648539131bd89909a90b3,"`op_bincount()`, `op_multi_hot()`, `op_one_hot()`, and `layer_category_encoding()` now support sparse tensors.",NA,NA,NA,NA
keras,fa9a6652e8d7e8a1876316fa82ddadd4,`op_custom_gradient()` now supports the PyTorch backend,NA,NA,NA,NA
keras,a62afda4a3d9c13a5a7701528db3976a,"`layer_lstm()` and `layer_gru()` gain arg `use_cudnn`, default `'auto'`.",NA,NA,NA,NA
tibble,020f884129bf2ce662ce832ed71f6c26,"`new_tibble()` and `as_tibble()` support attributes named `""n""` and `""x""` (#1573, #1574).",NA,NA,NA,NA
pkgdown,2d38fd99ed3fca9441b0ab8cd08f0e7a,"It is now easier to preview parts of the website locally interactively. `build_reference_index()` and friends will call `init_site()` internally instead of erroring (@​olivroy, #2329).",NA,NA,NA,NA
pkgdown,7f8386843f3ff06f4816e9d1ece25b36,"`build_article()` gains a new `new_process` argument which allows to build a vignette in the current process for debugging purposes. We've also improved the error messages and tracebacks if an article fails to build, hopefully also making debugging easier (#2438).",NA,NA,NA,NA
pkgdown,7608fd7e3d7302e16f653a51b09d012c,"Fixed an issue introduced in 2.0.8 where pkgdown was not using the Bootstrap version specified in a template package (@​gadenbuie, #2443).",NA,NA,NA,NA
keras,fc1eb3c9b687b97549135931779f5781,Fixed an issue where `application_preprocess_inputs()` would error if supplied an R array as input.,NA,NA,NA,NA
pkgdown,a57d2fbd27295c630c0893f805c10123,`check_pkgdown()` no longer errors if your intro vignette is an article is not listed in `_pkgdown.yml` (@​olivroy #2150).,NA,NA,NA,NA
pkgdown,fa0c497e0ebf523cb00695976f143b61,"`build_news()` now warns if it doesn't find any version headings, suggesting that that `NEWS.md` is structured incorrectly (#2213).",NA,NA,NA,NA
pkgdown,c632cefcdf24cc83725eca419c851b23,"`build_article_index()` and `build_reference_index()` use an improved BS5 template that correctly wraps each section description in a `<div>`, rather than a `<p>`. This eliminates an empty pargraph tag that preceded each section description (#2352).",NA,NA,NA,NA
pkgdown,34f1bdf3b7387bfc762d22f00b43d948,The left and right footers no longer contain an extra empty paragraph tag and the footer gains additional padding-top to keep the whitespace constant (#2381).,NA,NA,NA,NA
pkgdown,6e5e5c58c985de89b511d5d7b721ffe6,`build_reference_index()` gives more informative errors if your `contents` field is malformed (#2323).,NA,NA,NA,NA
pkgdown,a1aeb204a9bf9cdba7dbba0e9cd73caa,The skip link now becomes visible when focussed (#2138). Thanks to @​glin for the styles!,NA,NA,NA,NA
gt,3f686195a95388c84522963470d4aff7,"interactive tables are now rendering the first level of column groups, added by `tab_spanner()` (@​obsaditelnost, #1618)",NA,NA,NA,NA
shinytest2,792b7d41e71544b9e666a71a194b15fb,"`{shinytest2}` now warns rather than erroring when a potentially non-existent global variable is found in the server function, such as when column names are passed to `dplyr::select()` (thanks @​matt-sd-watson @​MichalLauer, #385).",NA,NA,NA,NA
pkgdown,7f2dd49f6b53c759cdf07f174c34d2ed,`data_template()` gives a more informative error if you've misspecified the navbar (#2312).,NA,NA,NA,NA
pkgdown,8b83b63b0dc5f4bafb242106f7f42478,"Clipboard buttons report their action again (""Copied!"") (#2462)",NA,NA,NA,NA
pkgdown,76eb9aa9155222c2858885a99951208d,"`build_readme()` now correctly tweaks links to markdown files that use an anchor, e.g. `foo.md#heading-name` (#2313).",NA,NA,NA,NA
pkgdown,01e2c17c5e2f256f26f07ecee278a357,`build_home()` no longer errors when you have an empty `.md` file (#2309).,NA,NA,NA,NA
pkgdown,d73ff206f5fc098529a0c2c140a9db5f,Fixes for regressions in 2.0.8:,NA,NA,NA,NA
pkgdown,d73ff206f5fc098529a0c2c140a9db5f,• Output links generated when building the site work once again (#2435).,NA,NA,NA,NA
pkgdown,d73ff206f5fc098529a0c2c140a9db5f,"• pkgdown once again uses Bootstrap version specified in a template package (@​gadenbuie, #2443).",NA,NA,NA,NA
pkgdown,3a22ae24bb50901d51e218873907108d,Front-end improvements:,NA,NA,NA,NA
pkgdown,3a22ae24bb50901d51e218873907108d,• The skip link now becomes visible when focussed (#2138). Thanks to @​glin for the styles!,NA,NA,NA,NA
pkgdown,3a22ae24bb50901d51e218873907108d,• The left and right footers no longer contain an extra empty paragraph tag and the footer gains additional padding-top to keep the whitespace constant (#2381).,NA,NA,NA,NA
pkgdown,3a22ae24bb50901d51e218873907108d,"• Clipboard buttons report their action again (""Copied!"") (#2462)",NA,NA,NA,NA
pkgdown,4e4b33fa6d028bb0b9e8897a0f5e131d,"`build_home()` no longer errors when you have an empty `.md` file (#2309). It alos no longer renders Github issue and pull request templates (@​hsloot, #2362)",NA,NA,NA,NA
reticulate,697b2dd19a6f6dd1c26da901efaf958d,"Fix issue where `py_to_r()` method for Pandas DataFrames would error if `py_to_r()` S3 methods were defined for Pandas subtypes, (as done by {anndata}) (#1591).",NA,NA,NA,NA
reticulate,80e9ac5b474c4313837af29df3244c0e,"""Python Dependencies"" vignette edits (@​salim-b, #1586)",NA,NA,NA,NA
pkgdown,9a70c637b1e8d4e3bc3556dc8b680b3f,"New translation for ""Search site"", the label applied to the search box for screenreaders. This was previously incorrectly labelled as ""Toggle navigation"" (#2320).",NA,NA,NA,NA
pkgdown,7de529cbd3afa6910e9c02c5afe7e54a,"You can now choose where the search box is placed with the ""search"" navbar component. This has been documented for a very long time, but as far as I can tell, never worked (#2320). If you have made your own template with a custom `navbar`, you will need to remove the `<form>` with `role=""search""` to avoid getting two search boxes.",NA,NA,NA,NA
pkgdown,cad655a34f12e729b9d100ee093fae26,"The mobile version of pkgdown sites no longer has a scrollburglar (a small amount of horizontal scroll) (#2179, @​netique).",NA,NA,NA,NA
reticulate,91639810d64385cb4df2c382468f2e1d,"Added an option for extra command-line arguments in `conda_create()`, `conda_install()` (#1585).",NA,NA,NA,NA
pkgdown,29a14f9debb928265492b93548b8d6cb,`<source>` tags now have their `srcref` attributes tweaked in the same way that the `src` attributes of `<img>` tags are (#2402).,NA,NA,NA,NA
pkgdown,7d0b887ac4a25c172b0f44aed03f2d3f,`build_reference()` matches usage for S3 and S4 methods to the style used by R 4.0.0 and later (#2187).,NA,NA,NA,NA
reticulate,ee658deac4f48249bbe402e283b1edf1,Fixed issue where `conda_install()` ignores user-specified channels during Python installation (#1594).,NA,NA,NA,NA
pkgdown,4a8ff73b34b6785452867cd38aa6f54e,`build_article()` no longer generates the wrong source link when you build your site outside of the root directory (#2172).,NA,NA,NA,NA
renv,0ff990943654a32d0a9e836845367d13,"Fixed an issue where installation of packages from local sources, as via `install(""<package>"", repos = NULL, type = ""source"")`, could fail. (#1880)",NA,NA,NA,NA
pkgdown,789a7d48c3d3d6203d325b2130a883f8,"The `template.bslib` item now also accepts a `bootswatch` key (@​gadenbuie, #2483).",NA,NA,NA,NA
bslib,4e7d0d109c6399618e2d51303b1fb05f,"`toggle_sidebar()` once again correctly closes a sidebar. (@​fredericva, #1043)",NA,NA,NA,NA
renv,3656f27ad957cf20fe390cdf1a1abd1e,Fixed an issue where `renv` could silently prompt the user for input when running the autoloader inside an RStudio R session. (#1879),NA,NA,NA,NA
reticulate,f2c381ab386a6b687bb0eb0d416290ab,`virtualenv_starter()` no longer warns when encountering broken symlinks (#1598).,NA,NA,NA,NA
pkgdown,159762a7de9f7e9d884cb5e8c5354900,"pkgdown no longer overrides the default selection colours. This improves accessibility for users who have set their own colours in their browser settings (#2139, @​glin).",NA,NA,NA,NA
pkgdown,e895d6fe6c7db8fcadc5e609460009e9,`build_article()` now escapes html characters in the title (#2286).,NA,NA,NA,NA
pkgdown,2293c96fb69ba7333d9ed8cfcf94279d,The `repo.source.url` field no longer requires a trailing slash (#2017).,NA,NA,NA,NA
pkgdown,4ea54e46debe74de5a58393815c1e88e,"Anywhere you can use `_pkgdown.yml`, you can now use `_pkgdown.yaml` (#2244).",NA,NA,NA,NA
pkgdown,48069c434b02b07be948a51dcbe5530e,Very wide words are now automatically broken across lines and hyphenated (when possible) when they'd otherwise create a horizontal scrollbar on mobile (#1888).,NA,NA,NA,NA
bslib,b97d9dc908b01fe9e9fe6c734a8963dc,"bslib now avoids re-defining its components when used in a context where they are already available, e.g. in a Quarto dashboard. (#1045)",NA,NA,NA,NA
keras,bda82b57d78eae55f0608336006804f1,new function: `op_ctc_decode()`,NA,NA,NA,NA
keras,7a330092e42786a55b3a6cc4e7b7d5b6,new function: `op_eigh()`,NA,NA,NA,NA
keras,1d8fc426a80d4c0461a5fba18fe33d85,new function: `op_select()`,NA,NA,NA,NA
keras,5f3d457456b21566f397cbd8449a6952,new function: `op_vectorize()`,NA,NA,NA,NA
keras,221a6f0776bbf14c1ce0ea6dea71b35f,new function: `op_image_rgb_to_grayscale()`,NA,NA,NA,NA
keras,e5c28eea0c4d336393c6274d4d368cf0,new function: `loss_tversky()`,NA,NA,NA,NA
keras,bd8c18efe36b59571b8561fc8f5ad016,"new args: `layer_resizing(pad_to_aspect_ratio, fill_mode, fill_value)`",NA,NA,NA,NA
keras,c61c56b6cc50e7ac142efcc334041719,new arg: `layer_embedding(weights)` for providing an initial weights matrix,NA,NA,NA,NA
keras,597deb41355b5684616ea49e366637bd,"new args: `op_nan_to_num(nan, posinf, neginf)`",NA,NA,NA,NA
keras,04cee19e2bd566b05db3fbf6441afcf9,"new args: `op_image_resize(crop_to_aspect_ratio, pad_to_aspect_ratio, fill_mode, fill_value)`",NA,NA,NA,NA
keras,c42d48495566c291a79a4b1d8bdec83c,new args: `op_argmax(keepdims)` and `op_argmin(keepdims)`,NA,NA,NA,NA
keras,a077c73b3ed8d1f2828c86b70ac0c3c7,new arg: `clear_session(free_memory)` for clearing without invoking the garbage collector.,NA,NA,NA,NA
keras,bab471ae6bb945ea3b5e06c199de2b51,"`metric_kl_divergence()` and `loss_kl_divergence()` clip inputs (`y_true` and `y_pred`) to the `[0, 1]` range.",NA,NA,NA,NA
keras,0b12e3c2d155229955e948d6b1f0d030,"new `Layer()` attributes: `metrics`, `dtype_policy`",NA,NA,NA,NA
keras,4a4faa0099f15f2b967dfa458b18f535,Added initial support for float8 training,NA,NA,NA,NA
keras,b76a9103b2830d4102187bd861814b19,`layer_conv_*d()` layers now support LoRa,NA,NA,NA,NA
keras,5e2b465976f8d32c39e53e018f0663cf,`op_digitize()` now supports sparse tensors.,NA,NA,NA,NA
keras,efcddeaf1fc2706721a1ef8b3cdfb16e,Models and layers now return owned metrics recursively.,NA,NA,NA,NA
keras,f8ed3f1633142cd2d1e16302ed8ea591,"Add pickling support for Keras models. (e.g., via `reticulate::py_save_object()`) Note that pickling is not recommended, prefer using Keras saving APIs.",NA,NA,NA,NA
pkgdown,6e68d42b453c94598e00254e056ca34c,"`init_site()` once again describes one copy per line, and now uses a better prefix when copying assets from pkgdown itself (#2445).",NA,NA,NA,NA
rsconnect,d9759a76c16bcc39da7720f173d0107a,"`deployApp(logLevel = ""quiet"")` suppresses Posit Connect deployment task output. (#1051)",NA,NA,NA,NA
rsconnect,65dc274d269bafdb39baead659cfc5e9,"`deployApp(logLevel = ""quiet"")` and `writeManifest(quiet=TRUE)` suppress output when using renv to analyze dependencies. (#1051)",NA,NA,NA,NA
rsconnect,6f9ff156433ff171d1d0f7a8f958c976,`deployApp()` and `writeManifest()` receive the default value for the `image` argument from the `RSCONNECT_IMAGE` environment variable. (#1063),NA,NA,NA,NA
pkgdown,ae94bf1c96d4917a44950588f23d1452,"`as.pkgdown()` will no longer prompt you to install a missing template package from CRAN, since these are almost always found in GitHub (#2076).",NA,NA,NA,NA
debugme,182e1c5465363bc07a1435fd74a392fd,"debugme now does not instrumented code multiple times, this could happen if environments were referenced from multiple places (#15).",NA,NA,NA,NA
debugme,f2e47e2fc5c3d9b8a27c479ae7c613c6,"debugme now correctly instruments functions with attributes, the attributes are kept now. Some packages, e.g. `assertthat` create such functions.",NA,NA,NA,NA
debugme,e63b49a06d78c4b95b1c2d6923bfc02e,"debugme now supports debug levels. Relatedly, `debugme()` has a `level` argument now (#49, @​krlmlr).",NA,NA,NA,NA
debugme,a10d882250a539355437b48515f3cc95,debugme now correctly instruments functions with `NULL` body and functions with no arguments.,NA,NA,NA,NA
debugme,afd801e346365be13549a2e94be39356,"Nested calls are printed better now, with indentation (#44, @​krlmlr).",NA,NA,NA,NA
debugme,2b1cb67590b84eb24578ba3b820244ee,"`debugme()` now re-reads the `DEBUGME` environment variable (#45, @​krlmlr).",NA,NA,NA,NA
debugme,3d048969382406181a3b7e2d6c750697,"New `DEBUGME_SHOW_TIMESTAMP` environment variable to hide timestamp output for reproducibility (#49, @​krlmlr).",NA,NA,NA,NA
debugme,224d3244f9bd208d6a8e3fc9eccdec0e,debugme now does not change the random seed (#50).,NA,NA,NA,NA
dbplyr,af459cf44b1f99eca942c586a460964d,"`across(everything())` doesn't select grouping columns created via `.by` in `summarise()` (@​mgirlich, #1493).",NA,NA,NA,NA
ggplot2,7b1f8f2ca8b8b1fbec3e132050110489,(Internal) Applying defaults in `geom_sf()` has moved from the internal `sf_grob()` to `GeomSf$use_defaults()` (@​teunbrand).,NA,NA,NA,NA
ggplot2,af5b1b8473e26bbf32f262ff99fc5780,"`facet_wrap()` has new options for the `dir` argument to more precisely control panel directions (@​teunbrand, #5212)",NA,NA,NA,NA
ggplot2,d31767c9299f7f034be36b3224a2cf54,"Prevented `facet_wrap(..., drop = FALSE)` from throwing spurious errors when a character facetting variable contained `NA`s (@​teunbrand, #5485).",NA,NA,NA,NA
ggplot2,b39ba7a605b5d3c87b375e09d41f33c2,"`geom_curve()` now appropriately removes missing data instead of throwing errors (@​teunbrand, #5831).",NA,NA,NA,NA
ggplot2,5ee1d9ba2ae25729afe62542fbf0e0f3,"Fixed regression in axes where `breaks = NULL` caused the axes to disappear instead of just rendering the axis line (@​teunbrand, #5816).",NA,NA,NA,NA
ggplot2,00da29c513c433b386989e72637cf709,"`geom_point()` can be dodged vertically by using `position_dodge(..., orientation = ""y"")` (@​teunbrand, #5809).",NA,NA,NA,NA
ggplot2,a658141f90d25491d2f59e8a248cc7e8,"Fixed bug where `na.value` was incorrectly mapped to non-`NA` values (@​teunbrand, #5756).",NA,NA,NA,NA
ggplot2,2e0ad3a21c37259619da2113314dc418,"Fixed bug in `guide_custom()` that would throw error with `theme_void()` (@​teunbrand, #5856).",NA,NA,NA,NA
ggplot2,8ea80fb6ae7ca77845d18c0879d23d97,"New helper function `ggpar()` to translate ggplot2's interpretation of graphical parameters to {grid}'s interpretation (@​teunbrand, #5866).",NA,NA,NA,NA
fs,6e1f2be933ee7c725a8bee8b93dcd479,"`path_ext()` returns extension when multiple dots are present in file name (@​IndrajeetPatil, #452).",NA,NA,NA,NA
fs,32dfa21af32ae6474e443d19163d05c2,No changes.,NA,NA,NA,NA
pkgdown,499cfabfb2ccfeb7dc85e3b022376224,`build_redirects()` now automatically adds redirects for topic aliases. This matches the behaviour of `?` and will help keep links stable in the long term (#1876).,NA,NA,NA,NA
pkgdown,2b9200147da5b83df2769a8662f3326a,`build_redirects()` now reports which redirects it is generating.,NA,NA,NA,NA
pkgdown,a6a0757aba6689a5fe417a9ef8d3df63,"The addin now runs `build_site()` instead of `build_site_external()`, which generally should be more reliable (#2252).",NA,NA,NA,NA
pkgdown,47a768e8d704e20e3e8305a76127be23,Anchors are displayed when they're the target of a link.,NA,NA,NA,NA
pkgdown,8e6187ffcf08ce90c7332a697dbcd47a,"`build_reference()` adds anchors to arguments making it possible to link directly to an argument, if desired. A subtle visual treatment makes it easy to see which argument is targeted (#2228).",NA,NA,NA,NA
pkgdown,38cd26988d01c50c1be43cab7a698c48,`build_redirects()` is now exported to make it easier to document (#2500).,NA,NA,NA,NA
pkgdown,919666cc13201a42601462101f9383f6,`build_reference()` now automatically renders any tables created by gt (#2326).,NA,NA,NA,NA
pkgdown,5ad94cc445716960b1b0168e2d79d3bd,"`build_articles()` now drops a section called ""internal"". This allows you to have articles that either aren't indexed at all or are included manually elsewhere in the navbar (#2205).",NA,NA,NA,NA
ragg,831dd80478d8b97386a08e804d2998e3,Fix a bug with resetting clipping during group and pattern rendering,NA,NA,NA,NA
ragg,414c7cb308d866fa48b9c794907de9e6,Fix scaling of raster glyphs in drawGlyph,NA,NA,NA,NA
gt,3bec9294870f2e3b6804e4080d8d2076,"`cols_hide()` no longer errors if no column was supplied. Error messages are also clearer when supplying a column that doesn't exist (@​olivroy, #1631).",NA,NA,NA,NA
renv,5c452f2a373217a2b054aeb444b84880,Fixed an issue with `renv`'s `pak` integration where `renv` could install the wrong version of a GitHub package during restore if `options(renv.config.pak.enabled = TRUE)` was set. (#1883),NA,NA,NA,NA
rmarkdown,02556490c172d3ebc18abb61c37a3864,Fix a regression in 2.26 regarding image paths post-processing in `html_document_base()`. Now absolute paths to image in the output directory (`output_dir`) are correctly made relative to the output directory again.,NA,NA,NA,NA
shiny,aba3e3e996eb3e3756b25e2b984b5159,"Output bindings now include the `.recalculating` CSS class when they are first bound, up until the first render. This makes it possible/easier to show progress indication when the output is calculating for the first time. (#4039)",NA,NA,NA,NA
shiny,c5711946a1baab34d216d4bcf06482cb,"Output bindings that are removed, invalidated, then inserted again (while invalidated) now correctly include the `.recalculating` CSS class. (#4039)",NA,NA,NA,NA
pak,450332fe3310056cf9d0610f98963e10,"The metadata cache now does not use source URLs for packages in `Archive` on Posit Package Manager repositories. This URLs may serve a different package, even a source package when the main URL for the same package serves a binary package. The alternative URLs are not needed on PPM, anyway, because PPM is in a consistent state w.r.t. metadata and package files (#623).",NA,NA,NA,NA
reticulate,2b30d6b8c7ff001eefab4a46af67872c,"Interrupting Python no longer leads to segfaults (#1601, fixed in #1602).",NA,NA,NA,NA
pkgdown,9e7020ca68362f553edf2c66079850f7,"The title for the ""Reference"" page is now ""Package index"" since this page might contain more than just function details (#2181).",NA,NA,NA,NA
reticulate,4b8f338825a83ba9aac668d0fa327aa8,Print method for Python callables now includes the callable's signature (#1605),NA,NA,NA,NA
pkgdown,17239d8a6aa5d4748d3c1cbc783ccd4d,"If you put a dropdown menu (e.g. articles) on the right hand side of the navbar, it will now be right aligned. This makes longer titles more likely to stay on the page (#2421).",NA,NA,NA,NA
pkgdown,6fbb5260da5fa5d3c3059a24a34ba4f9,`build_home()` now includes the contents of `inst/AUTHORS` on the authors page (#2506).,NA,NA,NA,NA
fs,3ae8dc09265871f58daa822c003f9a58,"`path_ext()` and `path_ext_remove()` return correct extension and path, respectively, when multiple dots are present in file name (@​IndrajeetPatil, #452, #453).",NA,NA,NA,NA
fs,3076d9cbb2308d8b2216beffce302a1a,"`path_rel()` provides an informative error message when multiple starting directory paths are specified (@​IndrajeetPatil, #454).",NA,NA,NA,NA
lintr,f20da372ebf095da090be490a21a1048,"`paste_linter()` is extended to recommend using `paste()` instead of `paste0()` for simply aggregating a character vector with `collapse=`, i.e., when `sep=` is irrelevant (#1108, @​MichaelChirico).",NA,NA,NA,NA
lintr,f0da074ee659e2079e28ddbbbb96d825,"`literal_coercion_linter()` doesn't surface a warning about NAs during coercion for code like `as.integer(""a"")` (#2566, @​MichaelChirico).",NA,NA,NA,NA
keras,c4035b24e1e008dfe4be00196a7b4bbc,Chains of `layer_*` calls with `|>` now instantiate layers in the same order as `%>%` pipe chains: left-hand-side first (#1440).,NA,NA,NA,NA
shiny,56362478b8351b47849162318cee73cf,`downloadButton()` and `downloadLink()` are now disabled up until they are fully initialized. This prevents the user from clicking the button/link before the download is ready. (#4041),NA,NA,NA,NA
pkgdown,1becb753aee866a3894921512ec7fbab,"`build_home()` no longer checks if the README is missing any images. This check is now performed in `build_site()`, after `build_articles()` so you can refer to images created by vignettes with warnings (#2194).",NA,NA,NA,NA
keras,369ae62b733a5f5b901064b844cfbf8f,"`iterate()`, `iter_next()` and `as_iterator()` are now reexported from reticulate.",NA,NA,NA,NA
pkgdown,23a38158dbc30ce4933137cc63dd6d92,"`build_reference()` now supports `\Sexpr[results=verbatim]` (@​bastistician, #2510).",NA,NA,NA,NA
reticulate,3573aa8c4dc6a8283074c58ea2718453,"Print method for Python callables now includes the callable's signature (#1605, #1607)",NA,NA,NA,NA
lintr,1ce96b223963bbdc2bfd71f9bbcf5031,"`cyclocomp_linter()` is no longer part of the default linters (#2555, @​IndrajeetPatil) because the tidyverse style guide doesn't contain any guidelines on meeting certain complexity requirements. Note that users with `cyclocomp_linter()` in their configs may now need to install {cyclocomp} intentionally, in particular in CI/CD pipelines.",NA,NA,NA,NA
roxygen2,90e4ddaddcc8235c228a78b791b9a22a,`@​includeRmd` now additionally sets `options(cli.hyperlink = FALSE)` to make code run in included `.Rmd`s even more consistent across sessions (#1620).,NA,NA,NA,NA
pointblank,50a621689f1d52cec433ec6ab8d15c33,"Fixed a regression in `col_vals_*()` functions, where `vars(""col"")` was evaluating to the string `""col""`. Behavior of `vars(""col"")` is now aligned back with `vars(col)` - both evaluate to the column name `col`.",NA,NA,NA,NA
pkgdown,01e926e4abad1cbd4f70f8c03623a226,"Tweaked navbar display on mobile so that long titles in drop downs (e.g. article titles) are now wrapped, and the search input spans the full width (#2512).",NA,NA,NA,NA
pkgdown,f02b1e448dc7050d5e6d496b98a2204c,"`build_reference()` now automatically translates `--`, `---`, ``` `` ```, and `''` to their unicode equivalents (#2530).",NA,NA,NA,NA
shiny,dc1cad3892118f78c2832ad83488ea62,"Added new functions, `useBusyIndicators()` and `busyIndicatorOptions()`, for enabling and customizing busy indication. Busy indicators provide a visual cue to users when the server is busy calculating outputs or otherwise serving requests to the client. When enabled, a spinner is shown on each calculating/recalculating output, and a pulsing banner is shown at the top of the page when the app is otherwise busy. (#4040)",NA,NA,NA,NA
pkgdown,62bd5851a5ab1a28343217dfc04c3076,"New `vignette(""accessibility"")` describes what manual tasks you need to perform to make your site as accessible as possible (#2344).",NA,NA,NA,NA
pkgdown,5b4a7d1005b38c708c67ef454bd5f2e3,"`check_pkgdown()` and `pkgdown_sitrep()` have been unified so that they both report on the same problems. They now only differ in the style of their output: `pkgdown_sitrep()` reports whether each category is ok or not ok, while `check_pkgdown()` errors on the first issue (#2463).",NA,NA,NA,NA
pkgdown,66aeffd7dab59e4db0066f1ca8266eaa,`build_site()` automatically runs `pkgdown_sitrep()` at the start of the process (#2380).,NA,NA,NA,NA
pkgdown,f0e2aea39a774935d1cc3ac006619abe,`build_articles()` now reports if you are missing alt-text for any images (#2357).,NA,NA,NA,NA
reticulate,547185f68386223c4a581f0a7b9d2677,Fixed issue where a configured `mamba` binary was overriden with `conda` (#1608).,NA,NA,NA,NA
ragg,c42b29a70155251244c8727201adab4e,Fix a bug in how groups are defined and recalled,NA,NA,NA,NA
pkgdown,44e147b8e385bcb913cab739c4c1919e,BS5 templates no longer include empty link to logo when none exists (#2536).,NA,NA,NA,NA
vctrs,5cb0a81da85289ad5769f2d3c8251053,"`vec_detect_complete(NULL)` now returns `logical()`, consistent with `vec_detect_missing(NULL)` (#1916).",NA,NA,NA,NA
fastmap,1a97cbffd5ce8ac5d6822fdf5a816f0a,Previously calling `$mset()` with empty input would result in an error; now it is a no-op. (#38),NA,NA,NA,NA
pkgdown,b6777bb9858bf235d007413fc215cf30,`build_home_index()` now renders math if you use it in your home page (#2263).,NA,NA,NA,NA
pkgdown,535a3814b49c4dd1206b3de04af57157,`build_home()` now correctly escapes special HTML characters in the bibtex citation (#2022).,NA,NA,NA,NA
pkgdown,20c3161f46f73ea2bae31e04e3f0743a,Improve HTML5 compliance (#2369):,NA,NA,NA,NA
pkgdown,20c3161f46f73ea2bae31e04e3f0743a,• No longer support IE9 or earlier,NA,NA,NA,NA
pkgdown,20c3161f46f73ea2bae31e04e3f0743a,• Strip trailing whitespace,NA,NA,NA,NA
pkgdown,20c3161f46f73ea2bae31e04e3f0743a,• Label `<nav>`s and improve navbar html.,NA,NA,NA,NA
dplyr,2a5805fcbaf265fdb492138a42143050,R \>=3.6.0 is now explicitly required (#7026).,NA,NA,NA,NA
gt,eeb2825b52b7954ee7db90ea7decc660,"`data_color()` throws a more informative error message if `rows` didn't resolve to anything (@​olivroy, #1659).",NA,NA,NA,NA
rsconnect,b7a21bbb6f385aae3c9c4edadf9bcb1e,`deployTF()` can deploy a TensorFlow model to Posit Connect. Requires Posit Connect 2024.05.0 or higher.,NA,NA,NA,NA
pkgdown,3a6254fa609bb63f013bb670b06f6a9f,"Bootstrap 3 has been deprecated. It was superseded in December 2021, and now we're starting to more directly encourage folks to move away from it.",NA,NA,NA,NA
reticulate,1f11aaf5a40ddb4d0dacf420e4e73f79,"Reticulate now installs successfully on Windows ARM64 (#1609, contributed by @​andrjohns).",NA,NA,NA,NA
tibble,d0b14083fae661d5b44e388f4932cbe6,Snapshot updates (#1580).,NA,NA,NA,NA
ggplot2,1782913d526eb81d263cb011fb370b56,"Position scales combined with `coord_sf()` can now use functions in the `breaks` argument. In addition, `n.breaks` works as intended and `breaks = NULL` removes grid lines and axes (@​teunbrand, #4622).",NA,NA,NA,NA
ggplot2,b10e0c51cbc350660100e002485af5a7,"`scale_{x/y}_discrete()` can now accept a `sec.axis`. It is recommended to only use `dup_axis()` to set custom breaks or labels, as discrete variables cannot be transformed (@​teunbrand, #3171).",NA,NA,NA,NA
ggplot2,6cf6542b482344cd38e057115b2cc8f5,"`stat_ecdf()` now has an optional `weight` aesthetic (@​teunbrand, #5058).",NA,NA,NA,NA
ggplot2,055860c6c663f3cc667f23f33034a547,"`stat_density()` has the new computed variable: `wdensity`, which is calculated as the density times the sum of weights (@​teunbrand, #4176).",NA,NA,NA,NA
ggplot2,48a9613db823d4b836e07e6316663312,"The default `se` parameter in layers with `geom = ""smooth""` will be `TRUE` when the data has `ymin` and `ymax` parameters and `FALSE` if these are absent. Note that this does not affect the default of `geom_smooth()` or `stat_smooth()` (@​teunbrand, #5572).",NA,NA,NA,NA
ggplot2,574f0d5796d2a48a823ef71bd0936304,The bounded density option in `stat_density()` uses a wider range to prevent discontinuities (#5641).,NA,NA,NA,NA
ggplot2,0355aedabe2ed02b7d89a001bf8ca94e,`geom_raster()` now falls back to rendering as `geom_rect()` when coordinates are not Cartesian (#5503).,NA,NA,NA,NA
ggplot2,af98caa93a854c645366d5b88243e3db,"`theme()` gets new `spacing` and `margins` arguments that all other spacings and (non-text) margins inherit from (@​teunbrand, #5622).",NA,NA,NA,NA
ggplot2,b77441c237ca557419cb80283e301d89,"`geom_ribbon()` can have varying `fill` or `alpha` in linear coordinate systems (@​teunbrand, #4690)",NA,NA,NA,NA
ggplot2,b21989840c72a48be3c9cf14f3e9c4cb,"`geom_tile()` computes default widths and heights per panel instead of per layer (@​teunbrand, #5740).",NA,NA,NA,NA
ggplot2,a6799eb0499add2aeaa1c0b8c89e2748,"Discrete scales now support `minor_breaks`. This may only make sense in discrete position scales, where it affects the placement of minor ticks and minor gridlines (#5434).",NA,NA,NA,NA
ggplot2,6d2e45ba75c679271b22c9c3553f650f,"Discrete position scales now expose the `palette` argument, which can be used to customise spacings between levels (@​teunbrand, #5770).",NA,NA,NA,NA
ggplot2,1e455bf65f8c65ad3332be401129e955,The `fill` of the `panel.border` theme setting is ignored and forced to be transparent (#5782).,NA,NA,NA,NA
ggplot2,4f55f48ab598caecb92b29a805a71efa,`stat_align()` skips computation when there is only 1 group and therefore alignment is not necessary (#5788).,NA,NA,NA,NA
ggplot2,b2e76b6043804230c255df640f15e818,`position_stack()` skips computation when all `x` values are unique and therefore stacking is not necessary (#5788).,NA,NA,NA,NA
ggplot2,af6827b642027036e0ce98449f78bfb8,New function `complete_theme()` to replicate how themes are handled during plot building (#5801).,NA,NA,NA,NA
ggplot2,9941adaff110ce9888dda74aef7bf90d,"Special getter and setter functions have been renamed for consistency, allowing for better tab-completion with `get_*`- and `set_*`-prefixes. The old names remain available for backward compatibility (@​teunbrand, #5568). New name Old name ---------------------- ------------------- `get_theme()` `theme_get()` `set_theme()` `theme_set()` `replace_theme()` `theme_replace()` `update_theme()` `theme_update()` `get_last_plot()` `last_plot()` `get_layer_data()` `layer_data()` `get_layer_grob()` `layer_grob()` `get_panel_scales()` `layer_scales()`",NA,NA,NA,NA
ggplot2,81985aaf383a13c83c2be0b84265031c,"A new `ggplot_build()` S3 method for `<ggplot_built>`{=html} classes was added, which returns input unaltered (@​teunbrand, #5800).",NA,NA,NA,NA
ggplot2,b545626f22e47b0eec6b14086708e88c,`width` is implemented as aesthetic instead of parameter in `geom_col()` and `geom_bar()` (#3142).,NA,NA,NA,NA
ggplot2,28090f4ffee72972e4c704bf023f3d14,"Fixed bug where binned guides would keep out-of-bounds breaks (@​teunbrand, #5870).",NA,NA,NA,NA
ggplot2,414539316c5933f711d8472e86264f42,The size of the `draw_key_polygon()` glyph now reflects the `linewidth` aesthetic (#4852).,NA,NA,NA,NA
ggplot2,c763fab1ba28e0409cf420cd92b456b0,"Fix a bug in `position_jitterdodge()` where different jitters would be applied to different position aesthetics of the same axis (@​teunbrand, #5818).",NA,NA,NA,NA
ggplot2,71655d8a2356d3245e50011e5a355534,"In `stat_bin()`, the default `boundary` is now chosen to better adhere to the `nbin` argument (@​teunbrand, #5882, #5036)",NA,NA,NA,NA
pkgdown,ad0b78d9de956aafba321dc08f60186b,`build_home_index()` now reports when rendering the home page (#2544).,NA,NA,NA,NA
pkgdown,03a78a7dd2695bc2db47fd379529eeb6,`init_site()` will no longer automatically build favicons on CI systems (e.g. GHA). This is an expensive operation that uses an external service so it should only be run locally (#2553).,NA,NA,NA,NA
ggplot2,7d44bdcdcc293fdeca8945fac16ba0fc,"The `arrow.fill` parameter is now applied to more line-based functions: `geom_path()`, `geom_line()`, `geom_step()` `geom_function()`, line geometries in `geom_sf()` and `element_line()`.",NA,NA,NA,NA
reticulate,5f8cf3e22134ca0fe431a18ade4c3709,"Fixed issue where configuring reticulate `conda_*` functions to use the executable `mamba` instead of `conda` was ignored. (#1608, contributed by @​AlexandreGuinaudeau)",NA,NA,NA,NA
pkgdown,b1c5043bf4dfeff04251d1ea160726a7,Custom navbars that specify `icon` but not `aria-label` will now generate a message reminding you to provide one for to improve accessibility (#2533).,NA,NA,NA,NA
pkgdown,e2804c4ef80d887c5ac12d1f71d3e2fe,`template_reference()` and `template_article()` now only add backticks to function names if needed (#2561).,NA,NA,NA,NA
keras,80b625d11c9ed901cfd9049ffe6c043e,"new functions: `op_slogdet()`, `op_psnr()`",NA,NA,NA,NA
keras,1070d2eb404400634eaf23844f4a1e63,"`clone_model()` gains new args: `call_function`, `recursive` Updated example usage.",NA,NA,NA,NA
keras,c849eaada283c17e85335faebf9f58b8,"`op_ctc_decode()` strategy argument has new default: `""greedy""`. Updated docs.",NA,NA,NA,NA
keras,d9c68e6218e0d2ef70811e189411843a,"`loss_ctc()` default name fixed, changed to `""ctc""`",NA,NA,NA,NA
lintr,9003e70a0129ec950136337107b573ec,"`scalar_in_linter` is now configurable to allow other `%in%` like operators to be linted. The data.table operator `%chin%` is no longer linted by default; use `in_operators = ""%chin%""` to continue linting it. (@​F-Noelle)",NA,NA,NA,NA
pkgdown,18c4d6560699f895ad0f3fa4b772b066,YAML validation has been substantially improved so you should get much clearer errors if you have made a mistake (#1927). Please file an issue if you find a case where the error message is not helpful.,NA,NA,NA,NA
ggplot2,7a212aa3911a4d06649122ca109e1e66,`after_stat()` and `after_scale()` throw warnings when the computed aesthetics are not of the correct length (#5901).,NA,NA,NA,NA
renv,379a1a466c6c65f6f4f1464e13732e47,"`renv::install()` now respects the `prompt` parameter when `pak` is enabled, as via `options(renv.config.pak.enabled = TRUE)`. (#1907)",NA,NA,NA,NA
pkgdown,169bbda8a1b21b3407130f06c6ffd466,"`vignette(""search"")` has been removed since BS3 is deprecated and all the BS5 docs are also included in `build_search()` (#2564).",NA,NA,NA,NA
rsconnect,b31684d315ab191068d3a4144c2a65ee,Skip tests when suggested packages are not available. Skip Quarto tests when run by CRAN. (#1074),NA,NA,NA,NA
pkgdown,90aef85133301a7071b23b925ff50f3f,New light switch makes it easy for users to switch between light and dark themes for the website (based on work in bslib by @​gadenbuie). For now this behaviour is opt-in with `template.light-switch: true` but in the future we may turn it on automatically. See the customization vignette for details (#1696).,NA,NA,NA,NA
pkgdown,aa7693c7620de74bee9d46dc12589424,The search dropdown has been tweaked to look more like the other navbar menu items (#2338).,NA,NA,NA,NA
pkgdown,afa7e05fecab3640a215f718cd79228d,`build_articles()` now recognises a new `external-articles` top-level field that allows you to define articles that live in other packages (#2028).,NA,NA,NA,NA
pkgdown,96e9ab5aff3026e9cd8d22858f5f1850,`build_reference_index()` now displays lifecycle badges next to the function name (#2123). You can now also use `has_lifecycle()` to select functions by their lifecycle status.,NA,NA,NA,NA
bslib,4cd7c43850816e25e17c35e399803296,"Improved the appearance of cards with sidebars and headers in the Shiny preset, especially when custom card color themes are used, e.g. with `text-bg-primary` or other Bootstrap utility classes. (#1056)",NA,NA,NA,NA
lintr,e49c7362df8e0ba9af16c50e98456978,"`expect_no_lint()` was added as new function to cover the typical use case of expecting no lint message, akin to the recent {testthat} functions like `expect_no_warning()` (#2580, @​F-Noelle).",NA,NA,NA,NA
rsconnect,a54f4afdbd7785715fe7a5eb2cfc47ec,"Skip tests when packages ""foreign"" and ""MASS"" are not available. (#1081)",NA,NA,NA,NA
reticulate,99ec0990a58683398bf0cb40356a0bb2,"Fixed an issue where attempting to convert a non-simple NumPy array to R would signal an error. (#1613, fixed in #1614).",NA,NA,NA,NA
pkgdown,74928c948dcc811926b3421700b457ef,"All external assets (JS, CSS, fonts) are now directly included in the site instead of fetched from external CDN (@​salim-b, #2249)",NA,NA,NA,NA
bslib,9876aa798b0ac7b26217e9466848ed91,"Page functions (e.g., `page_fixed()`, `page_fluid()`, etc) now include `shiny::useBusyIndicators()` automatically if available. If this behavior isn't desirable (perhaps because a package like `{shinycssloaders}` is being used to indicate busy state), then disable by putting `shiny::useBusyIndicators(spinners=FALSE, pulse=FALSE)` in the page. (#1053)",NA,NA,NA,NA
bslib,d6fda98fdf820103599b0a7b79acff48,The main content area of `page_sidebar()` and `page_navbar()` with a `sidebar` now have a minimum height and width to avoid squashed content in fillable layouts. The minimum height and width are controllable via Sass and CSS variables (see the pull request for details). (#1057),NA,NA,NA,NA
bslib,c39e59ebfaee6f036c6412760bdbd347,"The main content area of `page_sidebar()` and `page_navbar()` with a `sidebar` now have a minimum height and width to avoid squashed content in fillable layouts. The minimum height and width are controllable via Sass and CSS variables (see the pull requests for details). (#1057, #1059)",NA,NA,NA,NA
pkgdown,77f468104d8c1bd70f92f3d6a7e6bca1,`build_sitemap()` no longer includes redirected pages (#2582).,NA,NA,NA,NA
pkgdown,ede12ad5055df199e2f7e5b84e1b5e23,pkgdown now uses httr2 instead of httr (#2600).,NA,NA,NA,NA
pkgdown,3ae1cb874e3f088d730c07771710f4e5,"New `template.math-rendering` allows you to control how math is rendered across your site. The default uses `mathml` which is low-dependency, but has the lowest fidelity. You can also use `mathjax`, the previous default, and `katex`, a faster alternative. (#1966).",NA,NA,NA,NA
pkgdown,6da42f77ba1a7bc9c2c5870c33c80b3a,Mathjax now uses version 3.2.2.,NA,NA,NA,NA
shiny,88f7c676678cfc70ad0c486b9a4ba699,"A new `shiny.client_devmode` option controls client-side devmode features, in particular the client-side error console introduced in shiny 1.8.1, independently of the R-side features of `shiny::devmode()`. This usage is primarily intended for automatic use in Shinylive. (#4073)",NA,NA,NA,NA
pkgdown,ab8fe8846ffa4b2076ac2745d9bc2ad1,`pkgdown_sitrep()`/`check_pkgdown()` now check that you have up-to-date favicons if you have a package logo.,NA,NA,NA,NA
reticulate,eea5da8c1a63efbd766e1d145e3b96fc,"Python Exceptions converted to R conditions are now R lists instead of R environments, for compatability with {rlang} and {purrr}. (tidyverse/purrr#1104, r-lib/rlang#1664, #1617)",NA,NA,NA,NA
pkgdown,b6f4963c5b5e648fb6f186214331e8bc,@​olivroy is now a pkgdown author in recognition of his contributions.,NA,NA,NA,NA
pkgdown,f1a883434c1df5ad9bcfee4308a1d44a,Methods that use `<` or `>` no longer generate invalid R code in the usage section (#2303).,NA,NA,NA,NA
pkgdown,0f887df11cb719becf2a380768c2f547,`build_reference()` now generates the usage that users actually type for infix and replacement methods (#2303).,NA,NA,NA,NA
pkgdown,03117f45d9b1b759ec47bcbb4db44c1a,"New `vignette(""non-english"")` that discusses non-English sites including how to submit new translations (#2605).",NA,NA,NA,NA
pkgdown,eba980362d750c2c076bbb0dba3f4129,"When built on GitHub, source urls now use the name of the current upstream branch (rather than `HEAD`), which is more likely to generate correct links (#2597).",NA,NA,NA,NA
ggplot2,c0baa3a8b350017ad4587fac73c8feb9,"`position_jitterdodge()` now dodges by `group` (@​teunbrand, #3656)",NA,NA,NA,NA
ggplot2,1659a23d472de223c0666a2d42f78c1e,"`facet_wrap()` has new options for the `dir` argument to more precisely control panel directions. Internally `dir = ""h""` or `dir = ""v""` is deprecated (@​teunbrand, #5212).",NA,NA,NA,NA
ggplot2,7e719e90eedcfd4b0207c95a395ee95f,"`position_dodge(preserve = ""single"")` now handles multi-row geoms better, such as `geom_violin()` (@​teunbrand based on @​clauswilke's work, #2801).",NA,NA,NA,NA
pkgdown,348d8dd4bdace69f204a5fd16de0fd33,`build_reference()` does a better job of parsing `\value{}` blocks (#2371).,NA,NA,NA,NA
pkgdown,a67acd8248036232f9208e79ef332e86,"`build_article()` no long has a `data` argument. This is technically a breaking change, but I can't figure out why anyone would have ever used it.",NA,NA,NA,NA
pkgdown,45d20f7139a42ef59f529d203ceceeef,`build_reference()` no longer displays `\dontshow{}` or `\testonly{}` blocks in examples. It will run the code in `\dontshow{}`; it won't run the code in `\testonly{}`(#2188).,NA,NA,NA,NA
ggplot2,01cdc0c1e9cc6be30223130fda90011c,"`geom_rug()` prints a warning when `na.rm = FALSE`, as per documentation (@​pn317, #5905)",NA,NA,NA,NA
pkgdown,f1da12450b98dfcca8e54996c1848887,"`build_news()` only syntax highlights the page once, not twice, which prevents every block of R code getting a blank line at the start (#2630).",NA,NA,NA,NA
pkgdown,f1da12450b98dfcca8e54996c1848887,"```
1 + 1
```",NA,NA,NA,NA
pkgdown,12a76155c1db9d10e3aaedb04578348f,`document` in `build_site()` and `build_reference()` has been removed after being deprecated in pkgdown 1.4.0. `devel` should be used instead.,NA,NA,NA,NA
pkgdown,27d9f5023f216ce3df8396433838ea5f,`autolink_html()` was deprecated in pkgdown 1.6.0 and now warns every time you use it. `downlit::downlit_html_path()` should be used instead.,NA,NA,NA,NA
pkgdown,8f3046ce171fa03782664f9187373f8f,`build_*()` (apart from `build_site()`) functions no longer default to previewing in interactive sessions since they now all emit specific links to newly generated files.,NA,NA,NA,NA
gt,d2da80910da1ee3e7e49e3ff85324a4b,"Replaced all `match.arg()` calls with `rlang::arg_match()` for better error output (#672). (#1099, thanks @​mojister!)",NA,NA,NA,NA
lintr,f9d9c350b6f9c3c20a045fec62074a7d,"`expect_identical_linter()` also skips `expect_equal()` comparison to *negative* non-integers like `-1.034` (#2411, @​Bisaloo). This is a parity fix since *positive* reals have always been skipped because ""high-precision"" comparisons are typically done to get tests within `tolerance`, so `expect_identical()` is not a great substitution.",NA,NA,NA,NA
pointblank,32e6154a0a1bff4f9f6ab1a60c05914e,`col_vals_expr()` now shows used columns in the agent report,NA,NA,NA,NA
bslib,137d66de93f8f0a6949eb08dce50e0a7,"Example apps provided with bslib have now moved from `examples` to `examples-shiny` to take advantage of the new `package` argument in `shiny::runExample()` with shiny \>= 1.8.1. For example, try `shiny::runExample(""build-a-box"", package = ""bslib"")`. (#1049)",NA,NA,NA,NA
pkgdown,2bb8c5e8edaebe1d712e241b8486e743,"`build_article()` now translates the ""Abstract"" title if it's used.",NA,NA,NA,NA
bslib,a1c86f88e1f2433e60543150103239aa,"When `card_body(fillable = FALSE)`, bslib now preserves flow-layout margin bottom settings. (#1073)",NA,NA,NA,NA
pkgdown,c5d2956cb7c31f5487b113f685681619,`preivew_page()` has been deprecated (#2650).,NA,NA,NA,NA
dbplyr,efcd4661011898091fe74a6745d7d103,"Spark SQL backend now supports persisting tables with `compute(x, name = I(""x.y.z""), temporary = FALSE)` (@​zacdav-db, #1502).",NA,NA,NA,NA
lintr,90d80d0521eb26d8f239707331beca53,"All user-facing messages are now prepared using the `{cli}` package (#2418, @​IndrajeetPatil). All messages have been reviewed and updated to be more informative and consistent.",NA,NA,NA,NA
diffviewer,a4ab2544d6b31f1c7a16d0123342370c,diffviewer gets a sizing policy that works better in Rmds.,NA,NA,NA,NA
diffviewer,46e67ea85649ec092ef3626cee5f45fd,"diffviewer gets a sizing policy that works better in Rmds, and some css tweaks to ensure it's readable in dark mode.",NA,NA,NA,NA
pkgdown,bbcb86c943672e3462fe2dbe2e9c8c4f,@​olivroy and @​salim-b are now pkgdown authors in recognition of their contributions.,NA,NA,NA,NA
lintr,13579cc26f8fbb176126229c907f66be,"{lintr} now depends on R version 4.0.0. It already does so implicitly due to recursive upstream dependencies requiring this version; we've simply made that dependency explicit and up-front (#2569, @​MichaelChirico).",NA,NA,NA,NA
pointblank,352bf4f8ca2c1f30f55ce387670a5a47,"Warnings/errors arising from comparing `columns` to a `value` of different class (for example, comparing a datetime column to a date value `Sys.Date()` instead of another datetime value `Sys.time()`) are now signalled appropriately at `interrogate()`.",NA,NA,NA,NA
keras,82e1720c39a8b0bbfb382ccca1445e88,"Fixed issue where GPUs would not be found when running on Windows under WSL Linux. (reported in #1456, fixed in #1459)",NA,NA,NA,NA
keras,063b98ff15f836f020d5e66e379398a0,The package has been rebuilt for Keras 3.0. Refer to https://blogs.rstudio.com/ai/posts/2024-05-21-keras3/ for an overview and https://keras.posit.co for the current up-to-date documentation.,NA,NA,NA,NA
tensorflow,33a20ed91216dfd870dbc68741821651,"Fixed an issue where GPUs would not be found when running on Windows WSL Linux (reported in rstudio/keras3#1456, fixed in #599)",NA,NA,NA,NA
pkgdown,d38e2bdf306972f5f8fdcbd52680f71a,"`build_articles()` and `build_article()` now support articles/vignettes written with quarto. Combining the disparate quarto and pkgdown templating systems is a delicate art, so while I've done my best to make it work, there may be some rough edges. So please file an issue you encounter quarto features that don't work quite right. Learn more in `vignette(""quarto"")`(#2210).",NA,NA,NA,NA
gt,8bed7c76daf4adeccbd1b0f91b073f52,"`opt_interactive()` now shows row names if `rownames_to_stub = TRUE` (@​olivroy, #1702).",NA,NA,NA,NA
rmarkdown,e117a57410b608aaf6dcb73cb5ad63bf,"`beamer_presentation` support handling latex dependencies via the new `extra_dependencies` argument and declarations within chunks (e.g., `knitr::asis_output("""", meta = list(rmarkdown::latex_dependency(""longtable"")))`) (thanks, @​cderv, @​atusy, #2478).",NA,NA,NA,NA
reticulate,8a19165e358cfd57d44c3af81214745e,Internal updates for NumPy 2.0 (#1621),NA,NA,NA,NA
reticulate,997712c215a3c0eb6e08dd4662d41f9b,Added support for converting NumPy StringDType arrays to R character arrays. (#1623),NA,NA,NA,NA
renv,586726518c0c022b1e97599d50639e98,"`renv` now normalizes lockfile entries for Bioconductor packages installed via `pak::pkg_install()`, to help prevent spurious diffs being produced via `renv::status()`. (#1920)",NA,NA,NA,NA
reticulate,957ad6b17f68cf49e103aac8cb1940ed,Internal updates for compliance with R's upcoming formalized C API. (#1625),NA,NA,NA,NA
tensorflow,5a5f8ac869e16d7eb6c2c759f451c691,Fixes for NumPy 2.0 (#601),NA,NA,NA,NA
gt,698be6b8b0cd2b11962f2eeded9989e0,"`opt_interactive()` gains `height` to help specify your widget's height (@​olivroy, #1544).",NA,NA,NA,NA
lintr,cc7295136f7910e529cd21b4647cf29e,"`lint()` and friends now normalize paths to forward slashes on Windows (@​olivroy, #2613).",NA,NA,NA,NA
cli,0357927d6e80331a7271838cdd041783,cli now builds on ARM Windows.,NA,NA,NA,NA
cli,5485e9fc68eebf021a3b59adad43ae27,"""Solarized Dark"" is now the default syntax highlighting theme in terminals.",NA,NA,NA,NA
cli,5d99c08ffb74d03480cb96f5b4f042f0,The `{.obj_type_friendly}` inline style now only shows the first class name (#669 @​olivroy).,NA,NA,NA,NA
cli,49a2840040f1632ac9cf87e63ef18eda,Syntax highlighting now does not fail in RStudio if the rstudioapi package is not installed (#697).,NA,NA,NA,NA
gt,840fe433cb9e027f45311158f8dadf69,"`opt_interactive()` has better support for displaying group columns if present (`row_groups_as_column` has no effect on the output) (@​olivroy, #1705).",NA,NA,NA,NA
ggplot2,50393debbb3efcf78de5f9f35f420414,(internal) rearranged the code of `Facet$draw_paensl()` method (@​teunbrand).,NA,NA,NA,NA
pillar,72de6f7f1c796c6ff92da89c56c3847f,"Math operations on `num()` objects now pass additional arguments to the mathematical function (@​gvelasq, #659, #660).",NA,NA,NA,NA
ggplot2,d9cef3b7aa88841b096335305dabe42a,(internal) The plot's layout now has a coord parameter that is used to prevent setting up identical panel parameters (#5427),NA,NA,NA,NA
keras,82e99fc5813ec10a11435e447e60aa61,`keras_shape` objects (as returned by `keras3::shape()`) gain `==` and `!=` methods.,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,New function:,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_argpartition()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_map()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_scan()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_switch()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_dtype()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_lstsq()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_image_hsv_to_rgb()`,NA,NA,NA,NA
keras,407430d4d65b515438744d843fa827e9,• `op_image_rgb_to_hsv()`,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,Changes:,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,"• Added support for arbitrary, deeply nested input/output structures in Functional models (e.g. lists of lists of lists of inputs or outputs...)",NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• Add support for `optional` Functional inputs.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,‣ `keras_input()` gains an `optional` argument.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,‣ `keras_model_sequential()` gains a `input_optional` argument.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• Add support for `float8` inference for `Dense` and `EinsumDense` layers.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• Enable `layer_feature_space()` to be used in a `{tfdatasets}` pipeline even when the backend isn't TensorFlow.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `layer_string_lookup()` can now take `tf$SparseTensor()` as input.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,"• `layer_string_lookup()` returns `""int64""` dtype by default in more modes now.",NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `Layer()` instances gain attributes `path` and `quantization_mode`.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `Metric()$variables` is now recursive.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• Add `training` argument to `Model$compute_loss()`.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `split_dataset()` now supports nested structures in dataset.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,"• All applications gain a `name` argument, accept a custom name.",NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `layer_multi_head_attention()` gains a `seed` argument.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• All losses gain a `dtype` argument.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `loss_dice()` gains an `axis` argument.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,"• `op_ctc_decode()`, new default for `mask_index = 0`",NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• All `op_image_*` functions now use default `data_format` value to `config_image_data_format()`,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,"• `op_isclose()` gains arguments `rtol`, `atol`, `equal_nan`.",NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• `save_model()` gains argument `zipped`.,NA,NA,NA,NA
keras,71b74729e20b86a6f191f671cc4b13e3,• Bugs fixes and performance improvements.,NA,NA,NA,NA
gt,cf18cb7ca5837f5f560e4144bf9c44b0,"gt now depends on R 3.6 (@​olivroy, #1731).",NA,NA,NA,NA
usethis,a9419e4ae79e3672b4ff963048c92c56,"The URLs baked into the badge generated by `use_coverage(type = ""codecov"")` no longer specify a branch (#2008).",NA,NA,NA,NA
gt,0afa7d5d83cb5d1d86bc618482108d6c,"`cols_units()`, `tab_footnote()` and `tab_style()` now give better error messages when `locations` is not correctly specified (@​olivroy, #475, #1638 , #1640, #1733).",NA,NA,NA,NA
usethis,f8bda64f9e74421ad854ef9ffb3a8f6e,`usethis::use_version()` now tolerates empty / blank lines preceding the first section title in the package NEWS file. (#1976),NA,NA,NA,NA
tibble,b4fc0c651fd95bcea46cd369b6e61958,"Upkeep drop crayon + mockr (@​olivroy, #1587).",NA,NA,NA,NA
tibble,c7576f6005a27c5f9c5c70d5b5fc37e2,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/9687521438,NA,NA,NA,NA
tibble,a0bc2e283865031c1ac06432e2f9900f,"Replace non-API `SET_S4_OBJECT()` with `Rf_asS4()` (@​olivroy, #1588).",NA,NA,NA,NA
tibble,6922d6925fe5a96afb6091bb49ff9584,Fix.,NA,NA,NA,NA
tibble,34b08a88667ad8c1f8dd1f2fb4e02204,Remove dead workflow.,NA,NA,NA,NA
tibble,d196ccca86294f8a1b56c39d943138e4,Recent updates.,NA,NA,NA,NA
keras,146ddd0f22aa641af3ed260e774aa4fb,Added compatibility with Keras v3.4.1 (no R user facing changes).,NA,NA,NA,NA
pillar,36d95e59b595ee97497f1f07a59f4f8e,Auto-update from GitHub Actions. Run: https://github.com/r-lib/pillar/actions/runs/9691618335,NA,NA,NA,NA
pillar,046f5ed4ecafa88238a9a18378c78dfc,Avoid checking bashisms on Windows.,NA,NA,NA,NA
pillar,e52d245c1544d6c461613ba32db5f93a,Better commit message.,NA,NA,NA,NA
pillar,fdf1da3bf4dc6736eff8d85bc89d1598,"Bump versions, better default, consume custom matrix.",NA,NA,NA,NA
pillar,fd3687e9d8c976d15c423e7492c1f240,Recent updates.,NA,NA,NA,NA
tibble,3fea56edb416a0c98b6daa839c1b441f,Avoid checking bashisms on Windows.,NA,NA,NA,NA
tibble,51b1ef77dad35f82421c068e669ee2db,Better commit message.,NA,NA,NA,NA
tibble,a98380263e95895134ebf8fef7d05578,"Bump versions, better default, consume custom matrix.",NA,NA,NA,NA
reticulate,8bfcb10f028d1e0a4261bf1847a8d594,Fixed error when importing a module named `config` (#1628),NA,NA,NA,NA
usethis,bd6c6c9b11dceff43da8cd84b3409ac1,"`use_test()` and `use_r()` now work when you are in `tests/testthat/_snaps/{foo}.md` (@​olivroy, #1988).",NA,NA,NA,NA
ggplot2,d331c903ce96753681d9dc6c90fd0cb4,"`stat_bin()` now accepts functions for argument `breaks` (@​aijordan, #4561)",NA,NA,NA,NA
pointblank,5d1779a2e73ec6ab70464663781f129d,Improved readability of error and warning messages rendered as tooltip to the agent report.,NA,NA,NA,NA
usethis,c4d859eea92c6ca7e8f61eb625fbba41,`use_git()` no longer asks if you want to restart RStudio when using Positron.,NA,NA,NA,NA
pillar,ac26283023c62e0377c3dc11cce8ab4c,Only implement `type_sum.accel()` in pkgdown mode (#661).,NA,NA,NA,NA
pillar,0dbe33ce6ee59edee6f599c64baa3f17,Auto-update from GitHub Actions. Run: https://github.com/r-lib/pillar/actions/runs/9728438554,NA,NA,NA,NA
tibble,d84b2aa7ab73a74ab005287b1cae7f85,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/9728440241,NA,NA,NA,NA
pillar,2c5830b382db555ceca7e4b87bf90306,Add Aviator configuration.,NA,NA,NA,NA
pillar,52c2eade3be8baef0b9388f29c15c74d,"Drop `scale_name` ggplot2 arg and drop fansi dep (@​olivroy, #663).",NA,NA,NA,NA
pillar,8457cb45c7847088c0e4af1b8ed16d3e,"Fix on Windows, tweak lock workflow.",NA,NA,NA,NA
tibble,f5422758e8698cec2918ae8cb51b38eb,"Drop fansi and import cli (@​olivroy, #1589).",NA,NA,NA,NA
tibble,c3a1b64e373268809d2e40ec65e9e852,"Fix on Windows, tweak lock workflow.",NA,NA,NA,NA
rlang,2d348d11393ce5a40f29e94e512ea826,`env_unlock()` is now defunct because recent versions of R no long make it possible to unlock an environment. Make sure to use an up-to-date version of pkgload (\>= 1.4.0) following this change.,NA,NA,NA,NA
rlang,f1ddb855da29b9b729340140f42c4940,`env_browse()` and `env_is_browsed()` are now defunct as they require an API that is no longer available to packages (#1727).,NA,NA,NA,NA
rlang,5c286e74b227c702b86d14763ff336e9,`env_unlock()` is now defunct because recent versions of R no long make it possible to unlock an environment (#1705). Make sure to use an up-to-date version of pkgload (\>= 1.4.0) following this change.,NA,NA,NA,NA
profvis,0d448786d83414777922efe605465021,`profvis()` now uses elapsed time where possible (#72).,NA,NA,NA,NA
pkgdown,8a28dc5a981e34cd7428f547aa621206,"Updated translations from @​jplecavalier, @​dieghernan, @​krlmlr, @​LDalby, @​rich-iannone, @​jmaspons, and @​mine-cetinkaya-rundel (#2659).",NA,NA,NA,NA
profvis,ded009ca09de209bdccf5ea0ec5f72a5,"profvis no longer requires purrr or stringr, and no longer suggests ggplot2, devtools, knitr, or rmarkdown.",NA,NA,NA,NA
rsconnect,3f0e95abd981bbb5443f9915eff02ed5,Use the public Connect server API endpoint `/v1/tasks/{id}` to poll task progress. (#1088),NA,NA,NA,NA
keras,fd9036acbbd7f5a1203d1706b8c4f7c6,Fixed warning from `tfruns::training_run()` being unable to log optimizer learning rate.,NA,NA,NA,NA
pkgdown,0e411ec908d227419fd606941821a0f2,`build_news()` now works if your package has been archived at some point (#2687).,NA,NA,NA,NA
gt,c58853d893928b73ae87244f3443c3ee,`info_time_style()` and `info_date_style()` gain a `locale` argument to preview datetime formatting in a given locale.,NA,NA,NA,NA
renv,f4bbab95ea405a41ada6d38831f4ede7,"`renv` no longer interacts with the user during autoloading, which coincides with R startup. If the IDE offers a session init hook (RStudio does), loading is deferred until startup is complete and interaction is possible. Otherwise, any suggested renv actions, such as `renv::restore()`, are emitted as a message for the user to act on. (#1879, #1915).",NA,NA,NA,NA
httr2,907679dab825b9056b96820d338a4b1d,Corrupt `rds` files no longer cause the request to fail.,NA,NA,NA,NA
reprex,293a3a964b164ef8eb942480d19cb583,`reprex(style = FALSE)` will never nag about installing styler (#461).,NA,NA,NA,NA
reprex,fa0b8084f50d31986df7f8902f9a1b66,"Various URLs have been updated (#458, @​olivroy).",NA,NA,NA,NA
gt,8cbde38b426b2a4897744b67811f4270,"`summary_rows()` now throws a more informative error message that you should use `grand_summary_rows()` if no row groups are detected (@​olivroy, #1292). This change was introduced in gt 0.9.0",NA,NA,NA,NA
renv,46244068f946b519089cb1dc1dde6fc2,"A new function, `renv::lockfile_validate()`, can be used to validate your `renv.lock` against a default or custom schema. (#1889)",NA,NA,NA,NA
pillar,c7098136ac2591088e3eb0026050bfed,"Show missing values in red in `glimpse()` (@​ryanzomorrodi, #662).",NA,NA,NA,NA
pillar,616758c35df50e59c9db983dd239a1ed,Auto-update from GitHub Actions. Run: https://github.com/r-lib/pillar/actions/runs/9830060650,NA,NA,NA,NA
ggplot2,b3f4c4b317ea3c7daffa66c4007155e5,"All position scales now use the same definition of `x` and `y` aesthetics. This lets uncommon aesthetics like `xintercept` expand scales as usual. (#3342, #4966, @​teunbrand)",NA,NA,NA,NA
ggplot2,8fbd98dc9f3141653242a9fa6eb6ff5a,Bare numeric values provided to Date or Datetime scales get inversely transformed (cast to Date/POSIXct) with a warning (@​teunbrand).,NA,NA,NA,NA
ggplot2,c2f7498aa6d60acc31652d9970aa9b1f,"`geom_hline()` and `geom_vline()` now have `position` argument (@​yutannihilation, #4285).",NA,NA,NA,NA
renv,09b4317eb7a6390d378454c0aceba262,"Fixed an issue where `renv` could fail during installation of packages stored within repository sub-directories, if that repository also contained a top-level DESCRIPTION file. (#1941)",NA,NA,NA,NA
renv,01472c76b83bc6e32201f887d6689db6,`renv` now also passes any custom headers available to `utils::available.packages()` during bootstrap. (#1942),NA,NA,NA,NA
renv,399da83bbcfe97e683a8da75b4861514,"`renv` now infers a dependency on the `svglite` package if it detects calls of the form `ggsave(filename = ""path.svg"")`. (#1930)",NA,NA,NA,NA
renv,dbfe187dff65451803caa97934e2ff0f,"`renv` now supports setting of GitHub authentication credentials via any of `GITHUB_TOKEN`, `GITHUB_PAT`, and `GH_TOKEN`. (#1937)",NA,NA,NA,NA
renv,d0d9625f1d0ede4a4b76ae1d4f8e15d5,`renv::install()` now properly delegates the `type` and `rebuild` arguments to `pak` when `options(renv.config.pak.enabled = TRUE)` is set. (#1924),NA,NA,NA,NA
renv,5ad6605096033a7bfa24cbb9b1863afc,"Fixed an issue where `renv::dependencies()` could emit a warning when attempting to parse chunks using chunk options like `#| eval: c(1, 2)`. (#1906)",NA,NA,NA,NA
roxygen2,ff30a3b181ab2bf37bcac1a74b9743dd,"Custom `@​family` titles now support Markdown syntax (#1608, @​salim-b). \# roxygen2 7.3.2",NA,NA,NA,NA
gt,3ecb59073a3507bdb60a5ec9ffb35471,"**gt** tables can now be rendered in the grid graphics system with the new `as_gtable()` function (#180, #420, #509, #961, #1652, #1701). Thank you @​teunbrand for this valuable contribution! (#1563, #1648, #1655, #1727)",NA,NA,NA,NA
gt,17e5c871725facb20459e2ccfe1eb5e8,"With the new `fmt_chem()` function, it's possible to format chemical formulas and chemical equations in the table body. (#1636)",NA,NA,NA,NA
gt,bb2726ff56de89a27ef7521fad536310,We added `fmt_email()` we can transform email addresses in table cells into usable 'mailto:' links. This operates similarly to `fmt_url()` but removes some unneeded anchor tag attributes (#1616). (#1649),NA,NA,NA,NA
gt,6ce28214fbaf59799fb01e14101ebb82,"The new `fmt_tf()` function lets you format logical values in a **gt** table. You could express these as a 'yes' or 'no', a 'true' or 'false', or, perhaps use pairings of complementary symbols that make sense in a table (#1650). (#1654)",NA,NA,NA,NA
gt,7a06e49080d2c2c78f8c90aa004c1c55,"The new `fmt_country()` was added to help with making country names consistent and localizable. The input text can either consist of 2- or 3-letter ISO 3166-1 country codes. (#1645, #1696)",NA,NA,NA,NA
gt,d10f6c396e701eb203b6932f6f13b1f8,"Math formulas (written in LaTeX) can now be rendered to HTML through `md()` and `fmt_markdown()`. The LaTeX formulas can be set between `$` or `$$` delimiters for inline and block rendering styles. While this requires the **katex** package to work (it's an optional dependency), the rendering of formulas is dependency-free in the output (#375, #616, #1163). (#1578)",NA,NA,NA,NA
gt,e06983bc984923487b530f1fab68a7ae,"We added the `unit_conversion()` helper function to help you perform unit conversions. This function returns a conversion factor for transforming a value from one form of measurement units to a target form. This works wonderfully in the `scale_by` argument that is present in many number-based `fmt_*()` functions. (#1704, #1709, #1710, #1729)",NA,NA,NA,NA
gt,d39d4451f86325f6271dc50309e475b4,"The `plot()` method was added for `gt_tbl` so that one can quickly create a reprex visual example (e.g., `exibble |> gt() |> plot()`). (#1742)",NA,NA,NA,NA
gt,5f928fdd3b9c01d1131941760307f0a2,`info_time_style()` and `info_date_style()` gain a `locale` argument to preview time and date formatting in a specific locale. (#1747),NA,NA,NA,NA
gt,5421c5889f3c05bc3f49f93108e0cf4c,"Several datasets were added to the package: `reactions`, `photolysis`, `peeps`, `nuclides`, `gibraltar`, and `films`. (#1619, #1641, #1664, #1668, #1686, #1695)",NA,NA,NA,NA
gt,78044abde057a24f864cc112d6ffa823,"A host of improvements were made to LaTeX output such that styling made through `tab_options()` and `tab_style()` is now honored. The styling implemented now includes: (1) font size, underlining, italicizing, bolding, indenting text, coloring text, filling cell backgrounds, and modifying text case (i.e., uppercase, lowercase, sentence case) (#1472). (#1594, #1603, #1746, thanks so much @​kbrevoort)",NA,NA,NA,NA
gt,ef16b799356bbebd6a1c258717f15af6,"Text in spanner labels is now nicely wrapped in LaTeX output, where before there would be no wrapping at all (#1656). (#1716, #1746)",NA,NA,NA,NA
gt,cfb7c1a114437ef8368eb5e366627385,The `gt()` setting of `row_group_as_column == TRUE` is now implemented in LaTeX output. (#1716),NA,NA,NA,NA
gt,e3ba5c76ce139a0d5d33b869c3eeb777,LaTeX output now understands and can convert from lengths expressed in pixels (an internal conversion to pt units is performed) (#1582). (#1595),NA,NA,NA,NA
gt,4710f47c9c1075c1aacf727127921a5a,"A fix was made to correct an error related to converting px units to pt units for LaTeX output. (#1591, thank you @​AaronGullickson)",NA,NA,NA,NA
gt,cd820b397df62cb5f99957386309d2a7,The performance of interactive table rendering through `opt_interactive()` has been improved (#1289). (#1735),NA,NA,NA,NA
gt,ddf2aa416565175f4e47528b7c1f0a03,"There's now better support for displaying group columns, if present, in interactive tables (#1705). (@​olivroy, #1725, #1758, #1760)",NA,NA,NA,NA
gt,1a648909517103983663b1794861d03a,"Interactive tables can now display the stub header label created with `tab_stubhead()`. (@​olivroy, #1758).",NA,NA,NA,NA
gt,eadfdad996c3f4417a03ec41283bbf18,"There is no longer an error when having a hidden column under a spanner label in an interactive HTML table (i.e., `opt_interactive()`) context. (#1629)",NA,NA,NA,NA
gt,ce15836783ad3d152f7e2dfb4ebc7c85,Interactive tables now render the first level of column groups added by `tab_spanner()` (#1618). Thanks @​obsaditelnost for your work on this! (#1623),NA,NA,NA,NA
gt,c9f811fb7acfb6c7cf09d05103ec4bcb,"The `opt_interactive()` function now has the `height` argument to help specify the height of an interactive table (#1544). (@​olivroy, #1723).",NA,NA,NA,NA
gt,b6ef163f29bf4a874225fbfa925b5d4b,When using `opt_interactive(use_pagination = FALSE)` the pagination controls are now entirely removed instead of merely being non-functional (#1542). (#1642),NA,NA,NA,NA
gt,e40dc6e33d97dfaf133f99ab83ed42c0,"When supplying a locale value to an interactive table, we now ensure that the supplied locale is normalized (so `""fr_CH""` will be internally corrected to `""fr-CH""`) (#1637). (#1643)",NA,NA,NA,NA
gt,2dff8dfbc6a34076a0b52a1d02a2b27b,The `fill_color` argument in `fmt_icon()` now allows the use of named vector/list to apply different colors to different icons (#1560). (#1647),NA,NA,NA,NA
gt,459a4eee990f8f7a549cf14bf45d727b,`fmt_flag()` gains a `locale` argument so that SVG title text displays country names in any locale language. (#1645),NA,NA,NA,NA
gt,1fdb7f3f476e8aa698e5addc8482d507,"To better represent missing values in nanoplots, the `""marker""` option has been added in `cols_nanoplot()` (#1567). (#1587)",NA,NA,NA,NA
gt,27ac1ec2396c66d0a9dd94e2938cca06,"Many of the `info_*()` functions were upgraded with better functionality and a refreshed look. (#1720, #1748, #1754)",NA,NA,NA,NA
gt,dcbaa7f108484fb1ca05616ddd580d13,The `metro` dataset has been updated with six new Line 11 stations that opened on 2024-06-13. (#1708),NA,NA,NA,NA
gt,8cb3cd330e8a2c36237229a70835bafe,"For HTML tables produced in Quarto, we now use the `data-qmd-base64` attribute along with base64 text when passing Markdown text to Quarto (which handles the Markdown conversion) (#1487, #1488). (#1688, #1690, #1734)",NA,NA,NA,NA
gt,79c1b62a00baf4c49bc33836469b4cf3,Scientific and engineering notation will no longer unexpectedly wrap lines in HTML for smaller column widths. (#1621),NA,NA,NA,NA
gt,c234242168f0e714d52bf248366f5058,Footnote marks in HTML table outputs no longer unexpectedly increase the text line height (#1556). (#1644),NA,NA,NA,NA
gt,7b1cc1731e0e68e1b2c18cccea2ca895,We now ensure tables print correctly when called from inline code in `.qmd` or `.Rmd` documents (#1055). (#1689),NA,NA,NA,NA
gt,5b5277a47d9fac6c6ccdcf1725141d62,"`data_color()` throws a more informative error if an internal calculation failed (e.g., presence of infinite values) (#1373). (@​olivroy, #1585)",NA,NA,NA,NA
gt,77a2a45c12f9e57cad6b47d4825ff39c,"`summary_rows()` now throws a more informative error message that you should use `grand_summary_rows()` if no row groups are detected (#1292). (@​olivroy, #1752)",NA,NA,NA,NA
gt,87f7f86aaec233a022bb31584635ab4d,Boxplot-based nanoplots now correctly determine which data points are outliers. (#1756),NA,NA,NA,NA
gt,866fbb6cc79909f1b052cc1f0dc558cb,"The issue where having a row group set as a column in the stub, corrupting the setting of column widths in HTML output tables, has been fixed (#1253, #1510). (#1744)",NA,NA,NA,NA
gt,a9663bd4a2bb8ba39fd388af2c2745eb,"The rendering of footnotes and source notes received fixes to ensure that all requested notes are inserted and also that the typesetting options in `tab_options()` is implemented (#1505, #1615). (#1620, #1751)",NA,NA,NA,NA
gt,bbc58d151dd2e84f0a3a0156796172e4,Using a `fmt_*()` function while the stub is composed of Markdown or HTML no longer results in an error (#1600). (#1627),NA,NA,NA,NA
gt,1d5160e2d17a3c018d4605036ed2d633,The combination of using `cols_label()` + `summary_rows()` / `grand_summary_rows()` no longer causes an error for RTF output through `gtsave()` (#1233). (#1596),NA,NA,NA,NA
gt,1f7d59a9c31649689ecc2e195cec327d,We now ensure that `id` values are stripped of HTML tags when using `tab_row_group()`. Previously this condition would create corrupted row group labels (#1143). (#1750),NA,NA,NA,NA
gt,f87e0233589c9756ebe0caf8852aa30d,`cols_hide()` no longer errors if a column wasn't supplied. Error messages are also clearer when supplying a column that doesn't exist (#1631). (#1632),NA,NA,NA,NA
gt,7c454389cffaa34fd48918916313c799,"Error messages are now improved for `rm_spanners()`, `rm_footnotes()`, and `rm_source_notes()` (#1638). (#1661)",NA,NA,NA,NA
gt,c467ab5e5852f13d2198ef9656fe4b16,Error messages for the `vec_*()` functions are now standardized with `check_vector_valid()`. (#1662),NA,NA,NA,NA
gt,e8c428f59e9a6590b015647d52dd07ee,Running **testthat** tests no longer fails on Windows due to `gtsave()` path incompatibilities (#1626). (#1627),NA,NA,NA,NA
gt,fe7cc0ef4b2b8e4e352c210388ebed6f,Tests run on Windows are less noisy now (no more render related warnings). (#1634),NA,NA,NA,NA
gt,6bbc555663a884b8434fa353732e228b,"Much code refactoring, linting, and test improvements were performed by @​olivroy, resulting in many performance gains. (#1666, #1683, #1694, #1699, #1715, #1718, #1728, #1730, #1731, #1732, #1733, #1753)",NA,NA,NA,NA
gt,29cfee30d9e953d619f5f3cea42c3925,"**gt** now depends on R 3.6. (#1599, #1731).",NA,NA,NA,NA
gt,e85db56cf28b50b717e17e42d9351bc7,"Many small documentation fixes were performed. (#1555, #1598, #1633, #1658, #1663, #1676, #1685, #1700, #1703, #1717, #1719, #1721)",NA,NA,NA,NA
gt,c5a3e0e3cccb34e89f9f18bb5c2e066e,"More examples were added to further demonstrate how various functions can be used. (#1646, #1667, #1677, #1698, #1724, #1737)",NA,NA,NA,NA
gt,84240134e420c6989d46decf35af20d2,Code and test refactoring was performed to generally improve performance and code readability. (#1480),NA,NA,NA,NA
gt,edc5386e64655ca351c4f20f87ac8f9d,The `gtsave()` function now returns the file path invisibly instead of `TRUE`. (#1478),NA,NA,NA,NA
gt,051383a516d79b6b52cc7baed5a9b644,"Most functions now produce better error messages if not provided with a `gt_tbl` object. (#1504, #1624)",NA,NA,NA,NA
renv,7671cf2f77e861580e0bd9a435c305ec,`renv` now infers a dependency on the `xml2` package for projects using the `testthat::JunitReporter` for tests. (#1936),NA,NA,NA,NA
roxygen2,ff49aed737c51646d8c5b331fe3aac2b,"The check for unexported S3 methods was improved, so it does not hang any more if a largish data object is in the package (#1593, @​jranke).",NA,NA,NA,NA
roxygen2,d885df17b4f33986cf9589a0eb22eea3,"Custom `@​family` titles now support Markdown syntax (#1608, @​salim-b).",NA,NA,NA,NA
ggplot2,6cfe29b50d36968b1dcea4ccf817f623,"ggplot2 no longer imports {glue} (@​teunbrand, #5986).",NA,NA,NA,NA
ggplot2,f5b7baee49d9e91ee7130b64f6a4100e,"`geom_rect()` can now derive the required corners positions from `x`/`width` or `y`/`height` parameterisation (@​teunbrand, #5861).",NA,NA,NA,NA
httr2,136c37ee3170805c9140b5455884798f,`req_perform_parallel()` now works when downloading 0 byte files (#478),NA,NA,NA,NA
httr2,2d6ad677db522498e2ea7066dd12048c,"`req_body_file()` now only opens a connection when the request actually needs data. In particular, this makes it work better with `req_perform_parallel()` (#487).",NA,NA,NA,NA
roxygen2,f717a5c3a366075761ff661a2f7d7f05,"`@​examplesIf` always uses `withAutoprint()` (@​MichaelChirico, #1581). The raw Rd will be cleaner, but such examples will now only run under R\>=3.4.0 (2017).",NA,NA,NA,NA
renv,44db80c833c5d2941772ae2161a0a28c,"`renv::restore()` gains the `transactional` argument, which can be used to control whether `renv` will allow successfully-installed packages remain in the project library even if a package fails to install during a later step. (#1109)",NA,NA,NA,NA
thematic,a0c9ed3244ba74d685b0c132e1d97b2f,Add basic positron IDE support. (#152),NA,NA,NA,NA
thematic,38cb3c030ac23e55b199f5791d531413,Update for now deprecated `systemfonts::match_font()`. (#153),NA,NA,NA,NA
pillar,05258f1332308afbe3f381c855349352,Remove empty snapshot tests (#664).,NA,NA,NA,NA
tibble,6f0ac3382a2de2a56fc064b97cc69967,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/9884064046,NA,NA,NA,NA
tibble,5c190b3cbcfdb3a04cdeaac6f4674a5a,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/9871752503,NA,NA,NA,NA
tibble,3f3629c21fc9b5cae2d08dc205320ea5,Use roxygen2 PR to fix documentation.,NA,NA,NA,NA
tibble,4eec44193dcf158f4cd2a1b056319ac2,Snapshot updates for rcc-smoke (null) (#1597).,NA,NA,NA,NA
renv,de3c3b465a3320b6969ad91fbc30b1c3,"`renv::init(bioc = ""<version>"")` now prompts the user in interactive sessions when requesting a version of Bioconductor which is not compatible with the current version of R. (#1943)",NA,NA,NA,NA
renv,2c8e73e31089d147b50ccdf3cbb48905,"`renv` now emits clickable hyperlinks for runnable code snippets and help, for front-ends which support the `ide:run` and `ide:help` ANSI escapes.",NA,NA,NA,NA
httr2,d1fb8c494bfa14282d2a2b83503166e9,`req_perform_parallel()` now works correctly with `req_cache()` (#447).,NA,NA,NA,NA
httr2,3b01ecec402cafa0ddbf9dd033d8954e,`req_url_query()` now allows you to opt out of escaping for multi-value parameters (#404).,NA,NA,NA,NA
httr2,cccadc1df2f696b66f58ba47e69309f4,`req_cache()` no longer fails if the `rds` files are somehow corrupted,NA,NA,NA,NA
ggplot2,cb0c2352a02f1431f7f06195c1496d24,Themes gain an additional `header_family` argument to easily set the font for headers and titles (#5886).,NA,NA,NA,NA
ggplot2,b19729e8d4bb4118c54104f2906fa7c9,"The `plot.subtitle`, `plot.caption` and `plot.tag` theme elements now inherit from the root `text` element instead of the `title` element (#5886).",NA,NA,NA,NA
ggplot2,4b04438e3abcb78f480f2c3c3e16cf5f,"`position_dodge()` and `position_jitterdodge()` now have a `reverse` argument (@​teunbrand, #3610)",NA,NA,NA,NA
ggplot2,ab1e60cd6dd271e7340c14ad7dadb39c,"`coord_radial(r.axis.inside)` can now take a numeric value to control placement of internally placed radius axes (@​teunbrand, #5805).",NA,NA,NA,NA
ggplot2,b7120b4dfa28a2fb655caec534f885c0,"(internal) default labels are derived in `ggplot_build()` rather than in `ggplot_add.Layer()` (@​teunbrand, #5894)",NA,NA,NA,NA
ggplot2,c4bf41d3d213605d9f60b8c23bd1f2a5,"An attempt is made to use a variable's label attribute as default label (@​teunbrand, #4631)",NA,NA,NA,NA
ggplot2,204893b1067ed509ed98ae270dbc99d6,"`guide_colourbar()` now correctly hands off `position` and `available_aes` parameters downstream (@​teunbrand, #5930)",NA,NA,NA,NA
ggplot2,a635293d9ecf2ad469295b71a651736f,"New function `get_strip_labels()` to retrieve facet labels (@​teunbrand, #4979)",NA,NA,NA,NA
ggplot2,eeceb4946671a4ea6ecbf56bd42437dd,"`geom_step()` now supports the `orientation` argument (@​teunbrand, #5936).",NA,NA,NA,NA
ggplot2,34b536f8cc7061a4dae75051f334984a,"Fixed bug in `position_dodge2()`'s identification of range overlaps (@​teunbrand, #5938, #4327).",NA,NA,NA,NA
gt,7dc5d956616ab4bc8c709d0d2c3cb19d,"`tab_row_group()` gives a more precise error message when `rows` can't be resolved correctly (#1535). (@​olivroy, #1770)",NA,NA,NA,NA
gt,b681743ba5ade04d268baa09ba12a0f7,"Fixed an issue where `md("""")` would fail in Quarto. (@​olivroy, #1769)",NA,NA,NA,NA
gt,2a616f6d9037f4deb24bac369de93531,"Improved error messages for the `text_transform()` function if `locations` couldn't be resolved. (@​olivroy, #1774)",NA,NA,NA,NA
ggplot2,b83a6a2f395e4ceab8562277572cd187,"Missing values from discrete palettes are no longer translated (@​teunbrand, #5929).",NA,NA,NA,NA
ggplot2,489e3aa5400b16b69e447417197d49f1,"Fixed bug in `facet_grid(margins = TRUE)` when using expresssions (@​teunbrand, #1864).",NA,NA,NA,NA
ggplot2,35a9740aad0b3d57eb914cb1803c5727,"Fixed bug where empty discrete scales weren't recognised as such (@​teunbrand, #5945).",NA,NA,NA,NA
httr2,3c68238c68c20fde58a447677c0cc6cf,`req_cache()` now defaults the `debug` argument to the `httr2_cache_debug` option to make it easier to debug caching buried in other people's code (#486).,NA,NA,NA,NA
httr2,d1a02e8e9ad794b848e45c2531f2cd43,`req_oauth_password()` now only asks for your password once (#498).,NA,NA,NA,NA
gt,b0aa0335cc982ba0e06968515c7bf142,"Fixed a bug in using `pct()` column widths with `as_gtable()` (@​teunbrand, #1771)",NA,NA,NA,NA
tibble,271e43aeb1c303dd69131319289579e9,Request to not edit `NEWS.md`.,NA,NA,NA,NA
pkgdown,d11f5205a85ad7e7b6436c3138564b31,pkgdown now depends on R \>= 4.0.0 (#2714),NA,NA,NA,NA
httr2,6a8d1c2bda71c456825c35fdeb52bab4,"`req_perform_stream()` no longer applies the `callback` to unsuccessful responses, instead creating a regular response. It also now sets `last_request()` and `last_response()` (#479).",NA,NA,NA,NA
pkgdown,0bc02601678d6ceeb7eb99bea5e99cee,New `clean_cache()` function removes the contents of the cache directory (#2718).,NA,NA,NA,NA
bslib,400554ab55b051832ceeb83a2301b4e8,bslib now re-exports `htmltools::css()` to make it easier to specify style declarations. (#1086),NA,NA,NA,NA
bslib,19632c4161fe3686a4fbbb17843e8ef5,`card_image()` was improved in a few ways (#1076):,NA,NA,NA,NA
bslib,19632c4161fe3686a4fbbb17843e8ef5,"• `alt` is now included in the function inputs and is set to `""""` by default. This default value marks images as decorative; please describe the image in the `alt` attribute if it is not decorative.",NA,NA,NA,NA
bslib,19632c4161fe3686a4fbbb17843e8ef5,"• `border_radius` now defaults to `""auto""` by default, in which case the image's position in the card will automatically determine whether it should receive the `.card-img-top` (first child), `.card-img-bottom` (last child) or `.card-img` (only child).",NA,NA,NA,NA
bslib,19632c4161fe3686a4fbbb17843e8ef5,"• `file` is designed to accept a path to a local (server-side) file, but now recognizes remote files that start with a protocol prefix, e.g. `https://`, or two slashes, e.g. `//`. Local files are base64-encoded and embedded in the HTML output, while remote files are linked directly. To use a relative path for a file that will be served by the Shiny app, use `src` instead of file, e.g. `card_image(src = ""cat.jpg"")` where `cat.jpg` is stored in `www/`.",NA,NA,NA,NA
bslib,19632c4161fe3686a4fbbb17843e8ef5,• `container` is now `NULL` by default to avoid wrapping the card image in an additional card body container and `fill` is now `FALSE` by default to avoid stretching the image. These changes makes it easier to construct cards with image caps.,NA,NA,NA,NA
gt,5da2410babdcbfbf199e5013ce1f036a,"`opt_interactive()` now works when columns are merged with `cols_merge()` (@​olivroy, #1785).",NA,NA,NA,NA
gt,b3edab5437df63ddcdc4ca4b2a25031f,"`opt_interactive()` now works when columns are substituted with `sub_*()` (@​olivroy, #1759).",NA,NA,NA,NA
bslib,d9f6c43c17ba8501756e027fa603f6d1,"The `open` argument of `layout_sidebar()` now includes the option to place a sidebar that's always open on mobile screens *above the main content* with `open = list(mobile = ""always-above"")`. (#1088)",NA,NA,NA,NA
bslib,02fa7f12fa4c07d44f4f0c61207c67de,Fixed a bug in `layout_sidebar()` that caused a spurious and confusing error message. (#1081),NA,NA,NA,NA
bslib,815a8d14d8f6c1434e9b30abf5d7d9cc,We've adjusted the sidebar design when collapsible on mobile screens to reduce the space used by the sidebar toggle button and to ensure that main and sidebar content do not scroll underneath the toggle button when the sidebar is collapsed. (#1084),NA,NA,NA,NA
bslib,437006e5dabc2e600932ea6a9a2aab3f,"The main content area of `page_sidebar()` and `page_navbar()` with a `sidebar` now have a minimum height and width to avoid squashed content in fillable layouts. The minimum height and width are controllable via Sass and CSS variables (see the pull requests for details). (#1057, #1059, #1084)",NA,NA,NA,NA
gt,d095be536bff4564a2edd84229c550de,"PDF output now defaults to a full-width floating environment using `tabular*` (@​AronGullickson, #1588). Float position can be controlled by the `latex.tbl.pos` argument in `tab_options`. Quarto users can alternatively use the `tbl-pos` argument to control positioning. To use a `longtable` environment instead, use `tab_option(latex.use_longtable = TRUE)`.",NA,NA,NA,NA
httr2,d6fe308949602d99adb70389a53e200a,"New function `req_perform_promise()` allows creating a `promises::promise` for a request that runs in the background (#501, @​gergness).",NA,NA,NA,NA
gt,798c145841aac2657b631202abde08b1,"`data_color()` provides an error message if `rows` doesn't resolve to anything (#1659). (@​olivroy, #1660).",NA,NA,NA,NA
gt,8c92870ecdb04b5d142f53f2fe4a19d9,"`data_color()` no longer errors when a tidyselect selection is empty (like `fmt_*()` functions) (@​olivroy, #1665).",NA,NA,NA,NA
stringr,b6f874874bdb8f35748ca571bfdb23d6,"In `str_replace_all()`, a `replacement` function now receives all values in a single vector. This radically improves performance at the cost of breaking some existing uses (#462).",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,Added compatibility with Keras v3.4.0. User facing changes:,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,• New functions:,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_argpartition()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_map()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_scan()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_switch()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_dtype()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_lstsq()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_image_hsv_to_rgb()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `op_image_rgb_to_hsv()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,• Changes:,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,"‣ Added support for arbitrary, deeply nested input/output structures in Functional models (e.g. lists of lists of lists of inputs or outputs...)",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ Add support for `optional` Functional inputs.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,⁃ `keras_input()` gains an `optional` argument.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,⁃ `keras_model_sequential()` gains a `input_optional` argument.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ Add support for `float8` inference for `Dense` and `EinsumDense` layers.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ Enable `layer_feature_space()` to be used in a `{tfdatasets}` pipeline even when the backend isn't TensorFlow.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `layer_string_lookup()` can now take `tf$SparseTensor()` as input.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,"‣ `layer_string_lookup()` returns `""int64""` dtype by default in more modes now.",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `Layer()` instances gain attributes `path` and `quantization_mode`.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `Metric()$variables` is now recursive.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ Add `training` argument to `Model$compute_loss()`.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `split_dataset()` now supports nested structures in dataset.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,"‣ All applications gain a `name` argument, accept a custom name.",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `layer_multi_head_attention()` gains a `seed` argument.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ All losses gain a `dtype` argument.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `loss_dice()` gains an `axis` argument.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,"‣ `op_ctc_decode()`, new default for `mask_index = 0`",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ All `op_image_*` functions now use default `data_format` value to `config_image_data_format()`,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,"‣ `op_isclose()` gains arguments `rtol`, `atol`, `equal_nan`.",NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ `save_model()` gains argument `zipped`.,NA,NA,NA,NA
keras,8f4d4c73e49281ae9587a6e494fb3223,‣ Bugs fixes and performance improvements.,NA,NA,NA,NA
gt,d87ee2cb37c7863404634371c0347885,"Interactive tables will show no border if `opt_table_lines(extent = ""none"")` is specified (#1307).",NA,NA,NA,NA
gt,6332b68895aa70a3c50b53e46358ce58,Interactive tables now respect more styling options.,NA,NA,NA,NA
gt,6332b68895aa70a3c50b53e46358ce58,"• `column_labels.background.color`, `row_group.background.color`, `row_group.font.weight`, `table_body.hlines.style`, `table.font.weight`, `table.font.size`, `stub.font.weight` (#1693).",NA,NA,NA,NA
clock,1b09ec812111eeb10e28d1a91f81f90e,Removed usage of non-API `STRING_PTR()` in favor of `STRING_PTR_RO()`.,NA,NA,NA,NA
clock,f31ff122ad2a01ce7323b26f5770cf2b,Fixed a gcc warning reported by CRAN related to templated C++ constructors (#371).,NA,NA,NA,NA
gt,6265337c504caabeb33bd1db9cb37031,"Fixed a bug where `gt(row_group_as_column = TRUE)` would create the wrong layout with `as_gtable()` when all groups are unique (@​olivroy, #1803).",NA,NA,NA,NA
gt,ac3ec245b509384102c43d5cfafbc0d6,"grid output has been improved. Namely, showing currency symbols now works (@​olivroy, #1788).",NA,NA,NA,NA
gt,a154fb39e15531fb236701d227d14729,"Fixed a bugs that caused an error in Latex when `row_group_as_column = TRUE`, the row groups were specified using the `tab_row_group`, and the user specified a width for the row name columns (@​kbrevoort, #1804).",NA,NA,NA,NA
gt,7211d7edce8c5ccfaf68bd6c5e1f4e5b,"Improve the centering of the stubhead label in Latex when `row_group_as_column = TRUE` and the width of the row name column is specified (@​kbrevoort, #1804).",NA,NA,NA,NA
vetiver,fe3625af6254ab6ae2b677dd2cf9bc3c,Updated to use recipes' new ability to provide input data prototype (#287).,NA,NA,NA,NA
pillar,07fc8f47c9cb531230da0d533d9f5d01,"Update \_pkgdown.yml to bring back search bar (@​olivroy, #667).",NA,NA,NA,NA
shiny,b0077ae88612d6d001d758dc6b41af29,Added function `reactlogAddMark()` to programmatically add \_mark_ed locations in the reactlog log without the requirement of keyboard bindings during an idle reactive moment. (#4103),NA,NA,NA,NA
usethis,b2e6e4b1ff0412a50f5673513f043520,"`use_github()` now knows that you can reuse the name of an earlier repo that has since been renamed (@​ateucher, #1893).",NA,NA,NA,NA
usethis,694429a4b2cc5176af964a89d4b20df0,"The README templates now recommend pak instead of devtools for package installation (@​olivroy, #1723).",NA,NA,NA,NA
usethis,e51b0d240829d6c3edc7f8c85a98e836,`use_release_issue()` and `use_upkeep()` behave better when the user has a fork. The user is asked just once to choose between `origin` and `upstream` as the target repo (#2023).,NA,NA,NA,NA
shiny,bb00b9f253572d26a55b1adda068b3d5,The client-side TypeScript code for Shiny has been refactored so that the `Shiny` object is now an instance of class `ShinyClass`. (#4063),NA,NA,NA,NA
shiny,c50baf9c29fbc95c209e1a2a219df820,"In TypeScript, the `Shiny` object has a new property `initializedPromise`, which is a Promise-like object that can be `await`ed or chained with `.then()`. This Promise-like object corresponds to the `shiny:sessioninitialized` JavaScript event, but is easier to use because it can be used both before and after the events have occurred. (#4063)",NA,NA,NA,NA
usethis,dc24554caf8c79a22360607be2fd1a5c,"`use_standalone()` inserts an improved header that includes the code needed to update the standalone file (@​krlmlr, #1903).",NA,NA,NA,NA
usethis,b7fc5d5f5f71ba68564f17a93d513daa,"`edit_rstudio_snippets()` now accepts yaml snippets (@​olivroy, #1941).",NA,NA,NA,NA
waldo,f2f0f88a821a0a92a6cdbe053ecd6174,"waldo no longer imports fansi (@​olivroy, #192).",NA,NA,NA,NA
usethis,92c9adba627376c54415ab73517e11fd,"`pr_merge_main()` now offers the choice to not open the files with merge conflicts (@​olivroy, #1720).",NA,NA,NA,NA
bslib,c9866c60b56fd8e3b33bb107513c3835,"To help reduce the potential for squashed content, the main content area of `page_sidebar()` and `page_navbar()` with a `sidebar` now have a (customizable) minimum height and width on a ""medium-sized"" window. To revert to previous behavior, set `theme = bs_theme(""bslib-page-main-min-height"" = ""unset"", ""bslib-page-main-min-width"" = ""unset"")`. (#1057, #1059, #1084)",NA,NA,NA,NA
bslib,ef39ca2613edd02f760e7253e35db1e7,`card_image()` had a couple breaking changes (#1076):,NA,NA,NA,NA
bslib,ef39ca2613edd02f760e7253e35db1e7,"• `fill` now defaults to `FALSE` to avoid stretching/shrinking the image vertically (and thus, changing it's aspect ratio). To restore the previous behavior, set `fill = TRUE`.",NA,NA,NA,NA
bslib,ef39ca2613edd02f760e7253e35db1e7,"• `container` now defaults to `NULL` instead of `card_body`. As a result, `card_image()` no longer has padding around it, making it easier to create ""full-bleed"" card images (for example). To restore the previous behavior, wrap `card_image()` in a `card_body()`.",NA,NA,NA,NA
bslib,c52a419c857e7af2c390d7f3363cc5a5,`card_image()` gains several new features (#1076):,NA,NA,NA,NA
bslib,c52a419c857e7af2c390d7f3363cc5a5,"• `alt` is now a formal argument and is set to `""""` by default. This default value marks images as decorative; please describe the image in the `alt` attribute if it is not decorative.",NA,NA,NA,NA
bslib,c52a419c857e7af2c390d7f3363cc5a5,"• `border_radius` now defaults to `""auto""` by default, in which case the image's position in the card will automatically determine whether it should receive the `.card-img-top` (first child), `.card-img-bottom` (last child) or `.card-img` (only child).",NA,NA,NA,NA
bslib,c52a419c857e7af2c390d7f3363cc5a5,"• `file` is designed to accept a path to a local (server-side) file, but now recognizes remote files that start with a protocol prefix, e.g. `https://`, or two slashes, e.g. `//`. Local files are base64-encoded and embedded in the HTML output, while remote files are linked directly. To use a relative path for a file that will be served by the Shiny app, use `src` instead of file, e.g. `card_image(src = ""cat.jpg"")` where `cat.jpg` is stored in `www/`.",NA,NA,NA,NA
bslib,989cf24effd5f91590ee42063818e745,"On mobile, the main and sidebar content areas of a `layout_sidebar()` no longer overlap with the sidebar toggle button. (#1084)",NA,NA,NA,NA
usethis,cf7df8f5dc477e2674a01bba51c4021e,"`browse_github_token()`, `browse_github_pat()`, and `github_token()` have been removed after being deprecated in usethis 2.0.0. `create_github_token()`, `gh::gh_token()`, and `gh_token_help()` should be used instead.",NA,NA,NA,NA
usethis,20ec9f3d7569b766d528e574574c4e3d,`pr_pull_upstream()` and `pr_sync()` have been removed after being deprecated in usethis 2.0.0. `pr_merge_main()` and `pr_push()` should be used instead.,NA,NA,NA,NA
usethis,6e50b33867680e5a0554e5392ce93d35,Switch from git2r to gert (+ credentials).,NA,NA,NA,NA
usethis,be11fe91d2aede0bc4beccf3bdcff903,"Use of git config and the gh package to infer, e.g., the target repo spec.",NA,NA,NA,NA
usethis,3bccf257f1795574a594eb068d20157c,Pivot towards GitHub Actions and away from Travis and AppVeyor.,NA,NA,NA,NA
usethis,12c8ec4e673889db306e26560bb02482,`git_credentials()`,NA,NA,NA,NA
usethis,96f1f4ccc2b0cd4da9b21c567ba96471,`use_git_credentials()`,NA,NA,NA,NA
usethis,68fec6f60ac2b8a9b41788a7fb55d9bd,`browse_github_token()` (do `create_github_token()`),NA,NA,NA,NA
usethis,4bf00ff5e1d19f59983e2333b0055ec5,`browse_github_pat()` (do `create_github_token()`),NA,NA,NA,NA
usethis,3b48562a835cfa8913cbfe7b10a69ac6,`github_token()` (do `gh_token_help()` or `gh::gh_token()`),NA,NA,NA,NA
usethis,3a2a061986cee2ad89f88c2d0cddea35,`pr_pull_upstream()` (do `pr_merge_main()`),NA,NA,NA,NA
usethis,828c8b3b084f9cbb21fa8e422a499071,`pr_sync()` (do `pr_merge_main(); pr_push()`),NA,NA,NA,NA
usethis,a25e8a042e1a0760bad47ced7273c862,`use_appveyor()`,NA,NA,NA,NA
usethis,65bd0903a9984d949acce102049a87c7,`use_appveyor_badge()`,NA,NA,NA,NA
usethis,214ea441e3b991440baec7982c416ea3,`use_travis()`,NA,NA,NA,NA
usethis,3048692c6447e783cd254729bbeec081,`use_travis_badge()`,NA,NA,NA,NA
usethis,725e64900750815ea6cc3574d7dda0f4,`browse_travis()`,NA,NA,NA,NA
usethis,276478cce7918272803f833105222e85,`use_pkgdown_travis()`,NA,NA,NA,NA
usethis,e791c808b6bf8616437283e3d3219968,`use_tidy_ci()` *deprecated in v2.1.0* (do `use_tidy_github_actions()`),NA,NA,NA,NA
usethis,e4a1eb7d7f60c17f6a96cca37a4e8184,`use_tidy_labels()` *deprecated in v2.1.0* (do `use_tidy_github_labels()`),NA,NA,NA,NA
usethis,920bac3830f7ae608e246cf141a86d76,"`create_from_github(auth_token =, credentials =)`",NA,NA,NA,NA
usethis,86eb294541d023ce57c308c727c99bd9,"`use_github(auth_token =, credentials =)`",NA,NA,NA,NA
usethis,6eed560b94ebf27c3fecd2865269da86,"`use_github_labels(repo_spec =, host =, auth_token =)`",NA,NA,NA,NA
usethis,802a5ef34307ff340bb608cbf4770cb2,"`use_github_links(auth_token =, host =)`",NA,NA,NA,NA
usethis,fafa6a546d6e21d7af36042f54c5c27f,"`use_github_release(host =, auth_token =)`",NA,NA,NA,NA
usethis,796d1f6c5f4df264105c80190a5b55b5,"`use_cpp11()` makes it easier to update `NAMESPACE` (@​pachadotdev, #1921).",NA,NA,NA,NA
usethis,50adbad5931a8fd8830b606f8a56c711,"`use_test_helper()` is a new function to create a test helper file (@​olivroy, #1822).",NA,NA,NA,NA
pak,2412f4d90a191f7f5e31a65e66361600,`pkg_deps()` now accepts a vector of package names.,NA,NA,NA,NA
leaflet,aee5b25e5888a90ce95854e5232642e4,"Color palette improvements. All color palette functions now support all `{viridisLite}` palettes (""magma"", ""inferno"", ""plasma"", ""viridis"", ""cividis"", ""rocket"", ""mako"", and ""turbo"").",NA,NA,NA,NA
shiny,a62cfd2d95efa5663aa6a99ddac54e3e,Image outputs that were scaled by CSS had certain regions that were unresponsive to hover/click/brush handlers. (#3234),NA,NA,NA,NA
usethis,6a8eafce1a277bde88d4b917abf12a69,"`use_zip()` and `use_course()` are equipped to handle a ZIP where the parent folder is implicit (@​burnsal, #1961).",NA,NA,NA,NA
usethis,a3b520845a1bf48cd303ceff3568432a,`usethis::use_version()` now tolerates empty lines preceding the first section title in the package NEWS file. (#1976),NA,NA,NA,NA
devtools,d059fb905848a9934c1b98cd0b31ed83,"Functions that use httr now explicitly check that it is installed (@​catalamarti, #2573).",NA,NA,NA,NA
withr,017553a7a5295c703d6d4cc071be95a0,`local_tempfile()` now writes `lines` in UTF-8 (#210) and always uses `\n` for newlines (#216).,NA,NA,NA,NA
httr2,0d9629c3a8e10382f0f308798463c10a,"`jwt_encode_hmac()` now calls correct underlying function `jose::jwt_encode_hmac()` and has correct default size parameter value' (@​denskh, #508).",NA,NA,NA,NA
shiny,2e2d1e7eac41d77e9dd3d2e05d34549d,Fixed a bug introduced in v1.9.0 where the boundaries of hover/click/brush regions on plots were being incorrectly scaled when browser zoom was used. (#4111),NA,NA,NA,NA
roxygen2,21dc9c79f1428bc7f3e55af331ecb1b4,Unqualified markdown links to topics in external packages are now automatically resolved (#1612).,NA,NA,NA,NA
pillar,0977eb0f1476937e059e2d9daa5eff76,Auto-update from GitHub Actions. Run: https://github.com/r-lib/pillar/actions/runs/10200114378,NA,NA,NA,NA
pillar,7692655f7cf134efa0a37a1f4ea9051a,Use dev roxygen2 and decor.,NA,NA,NA,NA
tibble,27be6937bae93d0178e86f9aff5593ef,Use dev roxygen2 and decor.,NA,NA,NA,NA
renv,f0deaec13bc000a34b2325af0d2df7d7,Fixed an issue where `renv::load()` could fail to load an alternate project when `options(renv.config.autoloader.enabled = FALSE)` was set. (#1959),NA,NA,NA,NA
pillar,856929c9befc97248df7aa946b1df211,Auto-update from GitHub Actions. Run: https://github.com/r-lib/pillar/actions/runs/10224241696,NA,NA,NA,NA
pillar,f8744b8999a75984564d12314db8d385,"Refactor dep-suggests-matrix, avoid killing base and recommended packages.",NA,NA,NA,NA
tibble,92bab953b5cdb7c3a84887541093fc5b,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/10224243858,NA,NA,NA,NA
slider,bb27407226002e660d943f435ca044b4,Updated snapshot tests to use the latest version of cli.,NA,NA,NA,NA
dplyr,4c07516adde1b09a00b4b4f38f01a3d1,Fixed an issue where duckplyr's ALTREP data frames were being materialized early due to internal usage of `ncol()` (#7049).,NA,NA,NA,NA
lintr,7731630454ebfb519efb26f578e72db2,"`lint()` and friends emit a message if no lints are found (#2643, @​IndrajeetPatil).",NA,NA,NA,NA
renv,9dc7327cf869b234e270a83cff52013d,`renv` now preserves `Remote` fields present on packages installed from public package repositories (e.g. https://r-universe.dev/). (#1961),NA,NA,NA,NA
pillar,bfb168f217d05ad48118c9ea3c329d5f,Inline action.,NA,NA,NA,NA
tibble,116ce9dbc541ac710992c7624c563692,Inline action.,NA,NA,NA,NA
gt,eb592a4d2128a9127c3989d3cac1260a,"Performance improvement for footnote rendering (@​olivroy, #1818).",NA,NA,NA,NA
leaflet,4f727f8b8038fba853444fe8a9103a84,"Color palette improvements. All color palette functions now support all `{viridisLite}` palettes (""magma"", ""inferno"", ""plasma"", ""viridis"", ""cividis"", ""rocket"", ""mako"", and ""turbo"") (@​jack-davison, #924).",NA,NA,NA,NA
leaflet,ca29bf4fa291816509f30a28931c0cde,"Updated vignettes to replace `{sp}`/`{raster}` usage with `{sf}`/`{terra}` and their corresponding examples. (@​jack-davison, #928)",NA,NA,NA,NA
leaflet,7c62771e1f38d68e882737bfcc360460,"Updated vignettes to replace `{sp}`/`{raster}` usage with `{sf}`/\`{terra} and their corresponding examples. (@​jack-davison, #928)",NA,NA,NA,NA
leaflet,a622dda55d28cf2e206b8dbe77f0dc79,"`addProviderTiles()` will now error if the chosen `provider` does not match any currently loaded provider (by default, those in `providers`). This behaviour can be toggled off by setting the new `check` argument to `FALSE` (@​jack-davison, #929)",NA,NA,NA,NA
pak,93bb264994034d4ad45f28316ab8a40e,"pak now supports `gitlab::` package sources better, by adding explicit syntax to specify subdirectories (https://github.com/r-lib/pkgdepends/issues/353, @​dgkf).",NA,NA,NA,NA
pak,537a7de394c7ba07070eee8a99dbf23b,"`gitlab::` and `git::` package sources now support git submodules if the `git-submodules` configuration option is set to `TRUE`. See `?""pak-config""` (https://github.com/r-lib/pkgdepends/issues/354).",NA,NA,NA,NA
pak,e205321e5f150aed732c02fd22c37b4b,The new `?ignore-unavailable` parameter makes it easy to ignore soft dependencies that are unavailable (#606).,NA,NA,NA,NA
pak,719feda67d0c646083c94469c02cb271,pak now automatically ignores soft dependencies that have an incompatible OS type (`OS_type` entry in `DESCRIPTION`) when installing packages.,NA,NA,NA,NA
pak,60ce00c876acb7613e7a2ee1e4ab903c,"`repo_add()` and the `ppm_*()` functions, e.g. `ppm_snapshots()`, now work again after the PPM API changes (https://github.com/r-lib/pkgcache/issues/110, https://github.com/r-lib/pkgcache/issues/115).",NA,NA,NA,NA
reticulate,33452ab3ac1acf80744510b1a3100afa,"`conda_run2()` is now exported (#1637, contributed by @​dramanica)",NA,NA,NA,NA
lintr,1b1b11d1d0253403b8665d5fe98197b6,"File locations in lints and error messages contain clickable hyperlinks to improve code navigation (#2645, #2588, @​olivroy).",NA,NA,NA,NA
rmarkdown,d7244d1d161ffc98e0fef8425969a329,"Add classes `odd`, `even`, and `header` back to table rows for Pandoc \>= 3.2.1, so tables can be styled properly (thanks, @​therealgenna, #2567).",NA,NA,NA,NA
reticulate,504b727d92fa34f7ef72f2fc865c6bba,Python background threads can now run in parallel with the R session (#1641).,NA,NA,NA,NA
pillar,7b9573fac7e459593e87c23fbacff353,Fix edge case of no suggested packages.,NA,NA,NA,NA
pillar,ffd9b38a131dda772d2ec204200b9e49,Use v2 instead of master.,NA,NA,NA,NA
tibble,d63a5490966c2b137d9aa56cba8c0efe,Use v2 instead of master.,NA,NA,NA,NA
reticulate,c13d061afec1c0c4b3c6f746b29a2f19,Fixes for CRAN check failures (#1645),NA,NA,NA,NA
gt,500ea1d5e29ecaad711be74c645824b9,"Fixed an issue with `text_case_match(.replace = ""all"", .locations = cells_column_spanners())` (@​olivroy, #1823).",NA,NA,NA,NA
gt,139c8dbc7e3d26f77df15c505747a70c,"Fixed an issue where `tab_spanner_delim()` would fail to resolve a duplicate id (@​olivroy, #1821).",NA,NA,NA,NA
gt,823c33bf4599526cb842a9caaadcdc90,More support for `cells_stubhead()` styling in interactive tables.,NA,NA,NA,NA
renv,99fa71315fd6978ec99110ea5fb35cf4,"`renv` gains the function `renv::retrieve()`, which can be used to download packages without installing them. This is primarily useful in CI / CD scenarios, where you might want to download packages in a single stage before attempting to install / restore them. (#1965)",NA,NA,NA,NA
purrr,20e07c90ead8f1a2c1db1d7e2a0eab4a,"`set_names()` is a snake-case alternative to `setNames()` with stricter equality checking, and more convenient defaults for pipes: `x |> set_names()` is equivalent to `setNames(x, x)` (#119).",NA,NA,NA,NA
purrr,c099ea2cccba726ee004504cf289f164,"`map()` now always returns a list. Data frame support has been moved to `map_df()` and `dmap()`. The latter supports sliced data frames as a shortcut for the combination of `by_slice()` and `dmap()`: `x |> by_slice(dmap, fun, .collate = ""rows"")`. The conditional variants `dmap_at()` and `dmap_if()` also support sliced data frames and will recycle scalar results to the slice size.",NA,NA,NA,NA
dplyr,48f6897aeb1c073f99cb50669d3619a2,"`if_any()` and `if_all()` are now fully consistent with `any()` and `all()`. In particular, when called with empty inputs `if_any()` returns `FALSE` and `if_all()` returns `TRUE` (#7059, @​jrwinget).",NA,NA,NA,NA
purrr,e87ca5d9238c28c24b8f657abd6fc260,Added `imap_vec()` (#1084),NA,NA,NA,NA
purrr,07c5ba71acf7fc724e79cf1d78247e58,"`list_transpose()` inspects all elements to determine the correct template if it's not provided by the user (#1128, @​krlmlr).",NA,NA,NA,NA
stringr,f431d985cfa285858ce24182b5917113,"Adds `[[.stringr_pattern` method to go along with existing `[.stringr_pattern` method (@​edward-burn, #569).",NA,NA,NA,NA
tidyr,44918b8a108de5daaa4b11b3646939d1,"`pivot_wider_spec()` now throws a more informative error on non-data frame inputs (@​catalamarti, #1510).",NA,NA,NA,NA
tidyr,9e9f7346e45cdc1ca410b0c0c1ae963a,"tidyr now requires dplyr \>=1.1.0 (#1568, @​catalamarti).",NA,NA,NA,NA
usethis,51b5c796151b3d67d3902d137572aa1f,"Reverse dependency checks are only suggested if they exist (#1817, @​seankross).",NA,NA,NA,NA
ggplot2,6f4f8a56379fc8e5d742eacd081b6074,"Fixed bug in `stat_function()` so x-axis title now produced automatically when no data added. (@​phispu, #5647).",NA,NA,NA,NA
ggplot2,8a7d85684ba8448b433342e3ba33751e,"geom_sf now accepts shape names (@​sierrajohnson, #5808)",NA,NA,NA,NA
ggplot2,89992bd33ebdbba8b099bf8f716dcf64,"Added `gg` class to `labs()` (@​phispu, #5553).",NA,NA,NA,NA
rlang,7573cd07793ce2a9b3f3ef0fa2d10c74,"`is_dictionaryish()` now will return TRUE for NULL (@​ilovemane, #1712).",NA,NA,NA,NA
gh,a8fa6e489a2e21d6477a3627918cac73,"Removes usage of mockery (@​tanho63, #197)",NA,NA,NA,NA
usethis,22f06cf1d86603126250e86fba89c43a,"`use_data()` now uses serialization version 3 by default. (@​laurabrianna, #2044)",NA,NA,NA,NA
dplyr,624662fa388e5b34e1a84940ddf68c0e,Fixed an edge case when coercing data frames to matrices (#7004).,NA,NA,NA,NA
pkgdown,5387f0d8c1276e6153a84bc360192c40,"The `BugReports` field can now be an email (@​catalamarti, #2275).",NA,NA,NA,NA
usethis,910696d7d48a95c9ddd0aa99e88230c2,"`use_package()` now decreases a package minimum version required when `min_version` is lower than what is currently specified in the DESCRIPTION file (@​jplecavalier, #1957).",NA,NA,NA,NA
gt,a645bd077c38483c3bf7796c74b91260,"`tidyselect::where()`, `tidyselect::all_of()`, `tidyselect::any_of()` are now re-exported by gt.",NA,NA,NA,NA
renv,0564765e8dd263021b21ee01a951e340,"Fixed an issue where `renv::checkout()` omitted some fields from lockfile records when using `actions = c(""snapshot"", ""restore"")`. (#1969)",NA,NA,NA,NA
gt,5d6a7a137dd381130df78ff8c9943c7d,"`tab_footnote()` now correctly adds footnote marks in the `cells_stub_summary()` and `cells_stub_grand_summary()` (@​olivroy, #1832).",NA,NA,NA,NA
gt,a4def5185e7889c754da3197708e9cea,"Fixed an issue with multiple `text_replace()` calls would produce bad result with `cells_column_labels()` (@​olivroy, #1824).",NA,NA,NA,NA
httr2,edf48d4c03f98063f4dbe97e897805fd,"`req_cache()` now prunes cache *before* checking if a given key exists, eliminating the occassional error about reading from an invalid RDS file. It also no longer tests for existence then later reads the cache, avoiding potential race conditions.",NA,NA,NA,NA
pkgdown,710ebeb1e46cbbde5161856664b1e1b4,"Updated GitHub Actions advice and workflows around Quarto install (@​tanho63, #2743)",NA,NA,NA,NA
pkgdown,de64c4791b58311b6b6b34971ff66379,"Added keyboard shortcut, `/`, to focus search bar (#2423)",NA,NA,NA,NA
pillar,c1b26d7606a56e82c275cfc785b36fd1,Sync with latest developments.,NA,NA,NA,NA
tibble,a59253dbda7d338eb6eb7d007eb73274,Sync with latest developments.,NA,NA,NA,NA
gt,09099e44f041bb23a2cd027002791468,"`vec_fmt_markdown()` works correctly inside Quarto again (@​olivroy, #1840).",NA,NA,NA,NA
bslib,7a3299e0a089541c97d79fca9e7b7e9b,"`navset_card_pills()`, `navset_card_underline()`, `navset_card_tabs()` fixed to now respect header/footer arguments (@​tanho63, #1024)",NA,NA,NA,NA
ggplot2,a5d81fb25089a3809ad151567031740e,"Axis labels are now justified across facet panels (@​teunbrand, #5820)",NA,NA,NA,NA
ggplot2,1e3f17cc09ccfbc145f8f76278cb59b1,"(internal) improvements to `pal_qualitative()` (@​teunbrand, #5013)",NA,NA,NA,NA
ggplot2,af32043ec3c0c4414f0e9f23ce58216f,"`coord_radial(clip = ""on"")` clips to the panel area when the graphics device supports clipping paths (@​teunbrand, #5952).",NA,NA,NA,NA
ggplot2,b7ae4c0f64fe726b18f99af25f3b9a27,(internal) Panel clipping responsibility moved from Facet class to Coord class through new `Coord$draw_panel()` method.,NA,NA,NA,NA
ggplot2,81e990940d6cdb3e7ab9ea880ebab171,"`theme(strip.clip)` now defaults to `""on""` and is independent of Coord clipping (@​teunbrand, 5952).",NA,NA,NA,NA
httr2,5226514ea8548fb080e2c7edd564e03a,`req_perform_parallel()` now respects error handling in `req_error()`.,NA,NA,NA,NA
renv,a50defb55713e1b91761366341a46a24,`renv::checkout()` now also checks out the version of `renv` available and associated with the requested snapshot date. (#1966),NA,NA,NA,NA
renv,02c03730f9cc4c5f9cb660b1fa1f8e61,Fixed an issue where `renv::hydrate()` did not hydrate packages which were also listed as dependencies within a project's `DESCRIPTION` file. (#1970),NA,NA,NA,NA
stringr,5f55eaa9db19cd3e5b631d4740b46aa4,"New `str_ilike()` that follows the conventions of the SQL ILIKE operator (@​edward-burn, #543).",NA,NA,NA,NA
stringr,04ac58c38c6ec3254d02654832aec62c,"`str_like(ignore_case)` is deprecated, with `str_like()` now always case sensitive to better follow the conventions of the SQL LIKE operator (@​edward-burn, #543).",NA,NA,NA,NA
stringr,141d3cd1689842228ef8ee6e266d5a30,`str_sub<-` now gives a more informative error if `value` is not the correct length.,NA,NA,NA,NA
stringr,d5dd471ce03f6670ead4127a882a15eb,"Add `sep` argument to `str_dup()` so that it is possible to repeat a string and add a separator between every repeated value (@​edward-burn, #564).",NA,NA,NA,NA
stringr,3a01dba59b20929a041d8cb94e52fbe4,"`str_*` now errors if `pattern` includes any `NA`s (@​nash-delcamp-slp, #546).",NA,NA,NA,NA
stringr,b6d348a1060df1a976640ab98b48a1ff,"`str_view()` now displays a message when called with a zero-length character vector (@​LouisMPenrod, #497).",NA,NA,NA,NA
purrr,22d71b9abe426720af7e6a11f739bab5,"`list_transpose()` now works with data.frames (@​KimLopezGuell, #1109).",NA,NA,NA,NA
gh,4dd58bab0be12b51aaaf58c37b086846,"`gh()` now uses a cache provided by httr2. This cache lives in `tools::R_user_dir(""gh"", ""cache"")`, maxes out at 100 MB, and can be disabled by setting `options(gh_cache = FALSE)` (#203).",NA,NA,NA,NA
purrr,427755f3f5047fef8098de2c017fe0b3,"Added a test to assert that `list_transpose()` does not work on data frames (@​KimLopezGuell, #1141, #1149).",NA,NA,NA,NA
reticulate,46ec400c736e4f7ab045f4f2e02d4a56,Internal updates for NumPy 2.1 (#1651),NA,NA,NA,NA
profvis,800d5a82f6db807b6cb7554599c2f98c,"The version of jQuery bundled in profvis has been upgraded to 3.7.1 (@​hedsnz, #139).",NA,NA,NA,NA
reticulate,44866041626c2b2c226ae99860247386,"New `as.raw()` method for `python.builtin.bytes` (#1649, #1652)",NA,NA,NA,NA
reticulate,9e815cf2ba88ca10a03de7cfdaad4741,"`as.character()` method for `python.builtin.bytes` gains a `nul` argument, allowing for convenient handling of embedded NULs in the string. (#1652)",NA,NA,NA,NA
profvis,855edd5e446302e64225a793705c7f7b,`profvis()` now uses doubles instead of integers (#114).,NA,NA,NA,NA
profvis,68129d0a66e15a9b31abf0bcf6da1adb,Fixed #73: profvis would throw an error if used on code sourced from a remote URL.,NA,NA,NA,NA
profvis,208689575a37b6c1c8ff925b39445334,profvis now relies on R 4.0.0.,NA,NA,NA,NA
gt,47fd36d19a82f1e1e7c7c71fdd222ea7,Fixed a bug where spanners didn't render correctly in Quarto (#1839).,NA,NA,NA,NA
gt,c32ebd89c095f38bf99f3bbe985b06f3,"Improved footnote rendering in Quarto with `fmt_markdown()` (@​olivroy, #1773)",NA,NA,NA,NA
reticulate,d9e423e631c9ceebd8c82d1c718c8b5b,"The knitr engine now avoids overwriting Altair's default chart dimensions with the values of `ut.width.px` and `ut.height.px`. Instead, use `altair.fig.height`, `altair.fig.width`, or Altair's `width` and `height` parameters to adjust chart dimensions. (#1646, contributed by @​joelostblom)",NA,NA,NA,NA
reticulate,cb0580b9a53728e09db9ed898794540b,New `as.character()` method for `python.builtin.str` with support for handling embedded NULs in strings. (#1653),NA,NA,NA,NA
ggplot2,17963acff13f2c485da8a9ee2c844e38,"Layers can have names (@​teunbrand, #4066).",NA,NA,NA,NA
ggplot2,af8385219d5ddb5831d62202c455768b,"New `reset_geom_defaults()` and `reset_stat_defaults()` to restore all geom or stat default aesthetics at once (@​teunbrand, #5975).",NA,NA,NA,NA
ggplot2,f39c89f2f47acae55919f5cdf08ddc99,"`facet_wrap()` can have `space = ""free_x""` with 1-row layouts and `space = ""free_y""` with 1-column layouts (@​teunbrand)",NA,NA,NA,NA
ggplot2,65bc7eca1413d65261269611b9825cd9,"Secondary axes respect `n.breaks` setting in continuous scales (@​teunbrand, #4483).",NA,NA,NA,NA
ggplot2,74260c3211a8d363320b753982431910,"(internal) The summary function of `stat_summary()` and `stat_summary_bin()` is setup once in total instead of once per group (@​teunbrand, #5971)",NA,NA,NA,NA
ggplot2,823f3850a24dc54d1d1e4b82cc8d560d,"`facet_grid(space = ""free"")` can now be combined with `coord_fixed()` (@​teunbrand, #4584).",NA,NA,NA,NA
ggplot2,2f8a4979013271da55dddb5b44f50d32,"Moved {mgcv} from Imports to Suggests (@​teunbrand, #5986)",NA,NA,NA,NA
ggplot2,c6ac6f613b9745ec9cc6f026fc35ebdd,"`theme_classic()` now has black ticks and text instead of dark gray. In addition, `theme_classic()`'s axis line end is `""square""` (@​teunbrand, #5978).",NA,NA,NA,NA
ggplot2,c0f2b5eca22d4135ddcc71044f2030c1,"Passing empty unmapped aesthetics to layers raises a warning instead of throwing an error (@​teunbrand, #6009).",NA,NA,NA,NA
ggplot2,d46d9681d7e8f35ef555612cc6689087,"{tibble} is now suggested instead of imported (@​teunbrand, #5986)",NA,NA,NA,NA
ggplot2,6291cbe4a809b9d377bd53b9db43c2ff,"(Breaking) The defaults for all geoms can be set at one in the theme. (@​teunbrand based on pioneering work by @​dpseidel, #2239)",NA,NA,NA,NA
ggplot2,6291cbe4a809b9d377bd53b9db43c2ff,• A new `theme(geom)` argument is used to track these defaults.,NA,NA,NA,NA
ggplot2,6291cbe4a809b9d377bd53b9db43c2ff,• The `element_geom()` function can be used to populate that argument.,NA,NA,NA,NA
ggplot2,6291cbe4a809b9d377bd53b9db43c2ff,• The `from_theme()` function allows access to the theme default fields from inside the `aes()` function.,NA,NA,NA,NA
dplyr,926d14b2760b1892fb6fd33c7af19a1e,"`case_when()` now throws a better error if one of the conditions is an array (#6862, @​ilovemane).",NA,NA,NA,NA
dplyr,b0b6ab1aa903b9e095c11abf9d333451,"`between()` gains a new `ptype` argument, allowing users to specify the desired output type. This is particularly useful for ordered factors and other complex types where the default common type behavior might not be ideal (#6906, @​JamesHWade).",NA,NA,NA,NA
tidyr,b86fb1dfd67b82e4451f20e1e6cfc6bb,"`unite()` no longer errors if you provide a selection that doesn't select any columns. Instead, it returns a column containing the empty string (#1548, @​catalamarti).",NA,NA,NA,NA
tidyr,748e7a6c48574c3f25f5edf969064e10,"`expand_grid()` gains a new `.vary` argument, allowing users to control whether the first column varies fastest or slowest (#1543, @​JamesHWade).",NA,NA,NA,NA
pins,1098d75494bff37ab342f194c0d15d25,"Fixed how previously deleted pin versions are detected (#838, @​MichalLauer)",NA,NA,NA,NA
ggplot2,089aae938dc2c2bf3ebd2a668c59e623,"`coord_*(expand)` can now take a logical vector to control expansion at any side of the panel (top, right, bottom, left) (@​teunbrand, #6020)",NA,NA,NA,NA
ggplot2,bc85147dad44890321eae6d016ea12dc,"The ellipsis argument is now checked in `fortify()`, `get_alt_text()`, `labs()` and several guides (@​teunbrand, #3196).",NA,NA,NA,NA
ggplot2,774415805622fc065948bda88cb03b7f,"`guide_bins()`, `guide_colourbar()` and `guide_coloursteps()` gain an `angle` argument to overrule theme settings, similar to `guide_axis(angle)` (@​teunbrand, #4594).",NA,NA,NA,NA
ggplot2,cde7efce5fb0518462272dd39d95b800,"`stat_summary_bin()` no longer ignores `width` parameter (@​teunbrand, #4647).",NA,NA,NA,NA
cli,cb1d7d3c2948d6f451fe7f27165aec5f,"`ansi_collapse()` and inline collapsing now uses `last` as the separator (without the serial comma) for two-element vectors if `sep2` is not given (@​rundel, #681).",NA,NA,NA,NA
cli,c39908c7438c7f6e92f5c5129f10d1f1,"`ansi_collapse()` is now correct for length-1 vectors with style ""head"" if width is specified (@​rundel, #590).",NA,NA,NA,NA
cli,28bf51049734999d843866d6925d5fb1,"`num_ansi_colors()` now does not warn in Emacs if the `INSIDE_EMACS` environment variable is not a proper version number (@​rundel, #689).",NA,NA,NA,NA
tidyr,eee1a25825153bbc89df73e3a3f8c043,"`unchop()` produces a more helpful error message when columns cannot be cast to `ptype` (@​mgirlich, #1477).",NA,NA,NA,NA
cli,3ec822171db3a5b41d5bd54ad803743a,`cli_progress_bar()` now accepts `total` = Inf or -Inf which mimics the behavior of when `total` is NA.,NA,NA,NA,NA
desc,db64a303ba1cfea0e938a6f398946ea3,"An empty `Depends` field is now properly normalized and formatted. (#148, @​kevinushey)",NA,NA,NA,NA
rcmdcheck,6a24298c7a51c3f5067fbffde44c2b0b,"Fixed an issue where check output could be malformed when testing packages with multiple test files (#205, @​kevinushey).",NA,NA,NA,NA
sessioninfo,3b0f7eeffe397965e4d056a76deab70c,"`session_info()` no longer produces an error when `info` has length \> 1 (@​nash-delcamp-slp, #96).",NA,NA,NA,NA
desc,65c325c3c1012fc8b25d1a2eaa1cf30a,"`desc_get_built()` no longer fails if Built spans multiple lines (#145, @​seankross).",NA,NA,NA,NA
tidyr,fa514136b8cd14a246f9d4e093dad2f5,"`fill()` gains a `.by` argument as an alternative to `dplyr::group_by()` for applying the fill per group, similar to `nest(.by =)` and `dplyr::mutate(.by =)` (@​olivroy, #1439).",NA,NA,NA,NA
httr2,7690d030cfb865b70a0b54a44387bfd2,"New `req_perform_connection()` for working with streaming data. Unlike `req_perform_stream()` which uses callbacks, `req_perform_connection()` returns a regular response object with a connection as the body. It's paired with `resp_stream_bytes()`, `resp_stream_lines()`, and `resp_stream_sse()` that allows you to stream chunks as you want them. Unlike `req_perform_stream()` it supports `req_retry()` (with @​jcheng5, #519).",NA,NA,NA,NA
httr2,3f64cda251eb868b79f6383a4ef668c7,"`req_retry()` now correctly tries `max_tries` times, rather than `max_tries - 1`.",NA,NA,NA,NA
chromote,98e19f05d4239048cb30606dc7e408b9,"The headless mode used by Chrome can now be selected with the `chromote.headless` option or `CHROMOTE_HEADLESS` environment variable. In Chrome v128, a new headless mode became the default. The new mode uses the same browser engine as the regular Chrome browser, whereas the old headless mode is built on a separate architecture. The old headless mode may be faster to launch and is still well-suited to many of the tasks for which chromote is used. For now, to avoid disruption, chromote defaults to using the old headless mode. In the future, chromote will follow Chrome and default to `""new""` headless mode. (And at some point, Chrome intends to remove the old headless mode which is now offered as a separate binary.) To test the new headless mode, use `options(chromote.headless = ""new"")` or `CHROMOTE_HEADLESS=""new""` (in `.Renviron` or via `Sys.setenv()`). (#172)",NA,NA,NA,NA
gt,db78d6276246af0bed3f9332fd8b344d,"Creating a caption with `tab_caption()` will now be preserved in Latex output with `as_latex()`. Cross-referencing a table using the internal cross-referencing system of **bookdown** is now enabled for PDF and HTML outputs (for HTML, set `options(""htmltools.preserve.raw"" = FALSE)`). Quarto users should use the `tbl-cap` and `label` cell options.",NA,NA,NA,NA
chromote,9dc1d01a120e8f4eee3dbd3c60922d60,Fixed a typo that caused `launch_chrome()` to throw an error. (#175),NA,NA,NA,NA
blob,4f0bebe2bd6d2f22b5e3d2c8d518b72e,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/blob/actions/runs/10425482785,NA,NA,NA,NA
blob,aed0d91676ce989d1c3edc9be5fb93e3,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/blob/actions/runs/10200111385,NA,NA,NA,NA
blob,cf8afb4bda6d50722835d3619aca6523,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/blob/actions/runs/9728444615,NA,NA,NA,NA
blob,8a18d27596dedc385705bc1b6bbd4738,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/blob/actions/runs/9691616480,NA,NA,NA,NA
blob,dc19de983d9ede003338385a79ce71ee,Install local package for pkgdown builds.,NA,NA,NA,NA
blob,99cdd4fe88a05aa978196761448cc925,Improve support for protected branches with fledge.,NA,NA,NA,NA
blob,bfdf1d8d770aa9ffe05de95c8392d0f0,"Improve support for protected branches, without fledge.",NA,NA,NA,NA
blob,2eead7a52f1767cf7e7f46395d8d9ab0,Sync with latest developments.,NA,NA,NA,NA
blob,a7aec0b9bd1b1bd05e72770bd0ac76f9,Use v2 instead of master.,NA,NA,NA,NA
blob,ee60ff52800baffbb779a1428591e748,Inline action.,NA,NA,NA,NA
blob,9b08638ac927319d0037d241e0ddcebe,Use dev roxygen2 and decor.,NA,NA,NA,NA
blob,a76df5c8da3621ccf1f8fa3099d3d974,"Fix on Windows, tweak lock workflow.",NA,NA,NA,NA
blob,1505e15aaba98f47687c0683fbb74cc5,Avoid checking bashisms on Windows.,NA,NA,NA,NA
blob,f28fe4f38b3ce4765a6626b0f1d4125e,Better commit message.,NA,NA,NA,NA
blob,e1f8a78bfac9232f0abb89e7c802af3c,"Bump versions, better default, consume custom matrix.",NA,NA,NA,NA
blob,b7606d0099c1ec310078e474d37035b5,Recent updates.,NA,NA,NA,NA
hms,c443c8aa3b86a056c87d4ac2a7bb1358,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/hms/actions/runs/10425483161,NA,NA,NA,NA
hms,5d5de3fddeb37b4657cda690dd2a9d34,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/hms/actions/runs/10200113283,NA,NA,NA,NA
hms,83eaa31056cb1abf17fd37446aa896c9,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/hms/actions/runs/9728444063,NA,NA,NA,NA
hms,dfbda0436b518749eb2a51177213412c,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/hms/actions/runs/9691617778,NA,NA,NA,NA
hms,ba579ca8f7d3dad86f22f12c5b8a9da2,Install local package for pkgdown builds.,NA,NA,NA,NA
hms,121c21247802eacc9e5b0172d5145365,Improve support for protected branches with fledge.,NA,NA,NA,NA
hms,257e4672b43ab2663aa3c354b0356a60,"Improve support for protected branches, without fledge.",NA,NA,NA,NA
hms,28acd7726f7522317e1ebb85f9525397,Sync with latest developments.,NA,NA,NA,NA
hms,86d708c7d7fd213f692930a1e8489df2,Use v2 instead of master.,NA,NA,NA,NA
hms,6b047cc601cc13f9ddb94985b2f68510,Inline action.,NA,NA,NA,NA
hms,1a7d9fb920d070b144a903665c4f55d8,Use dev roxygen2 and decor.,NA,NA,NA,NA
hms,cb21a27d969d174bb429b24ba7a00b78,"Fix on Windows, tweak lock workflow.",NA,NA,NA,NA
hms,c738370a8ed463ec9f77471678085680,Avoid checking bashisms on Windows.,NA,NA,NA,NA
hms,10ece8a50ff032267e8230a1579cc465,Better commit message.,NA,NA,NA,NA
hms,11ea58f0f6bd332cfc1cbce9499e56bf,"Bump versions, better default, consume custom matrix.",NA,NA,NA,NA
hms,a99f0e1d9157659e658f295346028114,Recent updates.,NA,NA,NA,NA
pillar,099121607c5ddc495f5018a3ea058b46,Install local package for pkgdown builds.,NA,NA,NA,NA
pillar,02562bbfe32a43634532efb2c2fe1bc4,Improve support for protected branches with fledge.,NA,NA,NA,NA
pillar,84d78bbe1f43fb0bd607b4631a715d4f,"Improve support for protected branches, without fledge.",NA,NA,NA,NA
tibble,ab426467e5ac38a3be4ff0ee1da84817,Install local package for pkgdown builds.,NA,NA,NA,NA
tibble,ac9853d6092ff0a8c85a2045c064117d,Improve support for protected branches with fledge.,NA,NA,NA,NA
tibble,ab10731cbd90cdede6940cb745f9d530,"Improve support for protected branches, without fledge.",NA,NA,NA,NA
httr2,ac72794d8c732d56dc65037df2b95a22,`req_body_file()` now works with files \>64kb once more (#524).,NA,NA,NA,NA
httr2,89f5e023f3e0bae78faa6e32c8cf0306,`resp_body_html()` and `resp_body_xml()` now work when `req_perform()` is given a path (#448).,NA,NA,NA,NA
reticulate,c58fd8a7d1006e0c8f4f5c439d1d3158,"In Positron, `repl_python()` will now use the Positron Python console. (#1648)",NA,NA,NA,NA
reticulate,46cd48cd7684b4a0c0a65ad7c2cf56c8,`py_main_thread_func()` is deprecated; every R function can now safely be called from background Python threads. (#1648),NA,NA,NA,NA
reticulate,b60f18112cc788f43cb4498d504c7677,"Calls from a Python thread into R will now notify the main thread using R's native event loop, ensuring that these calls are handled even when the main thread is engaged in non-Python tasks. (#1648)",NA,NA,NA,NA
reticulate,83a4b075b81cc9f32128f9fb5fe71035,The Python session is now finalized when the R session exits (#1648).,NA,NA,NA,NA
httr2,a4c3f0c3cf621b0c764b9c313035b1f3,`req_cache()` now re-caches the response if the body is hasn't been modified but the headers have changed (#442).,NA,NA,NA,NA
httr2,a77c0d2ac57679ffc79c833e641508cc,`req_cache()` works better when `req_perform()` sets a path (#442).,NA,NA,NA,NA
httr2,cdd8e2111037f37cfb4cb88cbe501b56,`req_body_*()` now give informative error if you attempt to change the body type (#451).,NA,NA,NA,NA
shinytest2,b309fefb06a17496d7fe2b235f0104ba,Add support for `$click()`ing `{bslib}`'s `input_task_button()` (#829).,NA,NA,NA,NA
R6,5675ed0ed2597de38755d50ff0597780,R6 methods no longer recommends `initialize` or `.__enclos_env__` in autocomplete.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,Added compatibility with Keras v3.5.0. User facing changes:,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• New functions:,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,‣ `op_associative_scan()`,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,‣ `op_searchsorted()`,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,‣ `optimizer_lamb()`,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,"• `keras$DTypePolicy` instances can now be supplied to `dtype` argument for losses, metrics, and layers.",NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Add integration with the Hugging Face Hub. You can now save models to Hugging Face Hub directly `save_model()` and load .keras models directly from Hugging Face Hub with `load_model()`.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Added compatibility with NumPy 2.0.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Improved `keras$distribution` API support for very large models.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Bug fixes and performance improvements.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Add `data_format` argument to `layer_zero_padding_1d()` layer.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Miscellaneous documentation improvements.,NA,NA,NA,NA
keras,1c61ed47b0d0647c33273224e40cc4c1,• Bug fixes and performance improvements.,NA,NA,NA,NA
reticulate,dd2f9697370e508512cb8b2092ed62dc,Reticulate will now use the `RETICULATE_VIRTUALENV_ROOT` environment variable when determining where to resolve virtual environments. (#1657),NA,NA,NA,NA
reticulate,d5169d7921e52ee62b7a791e017fb846,"Fixed an error where opening a Python subprocess in Positron on Windows resulted in ""OSError: \[WinError 6\] The handle is invalid."" (#1658, posit-dev/positron#4457)",NA,NA,NA,NA
renv,bd6d62bc9a3c8d686dc2895041a5cbb6,`renv::install()` now errs if an incompatible `type` argument is provided.,NA,NA,NA,NA
reticulate,9796e83abfdb36ebd6d9d533555b1ba2,Fixes for CRAN check failures on macOS-oldrel (#1645).,NA,NA,NA,NA
httr2,1cef62216a17d638695b4c2a2154e228,`req_perform()` no longer displays a progress bar when sleeping during tests. You can override this behaviour by setting the option `httr2_progress`.,NA,NA,NA,NA
httr2,1301e985353dc3d913cdb589d46539cf,New `req_cookie_set()` allows you to set client side cookies (#369).,NA,NA,NA,NA
httr2,c303a75d7958ffbc42845df56b70f27d,`req_body_file()` no longer leaks a connection if the response doesn't complete succesfully (#534).,NA,NA,NA,NA
sortable,a1e09855bbd99b33af5b027f9fad50f5,Update `Sortable.js` to version 1.15.3,NA,NA,NA,NA
lintr,d903c373adaf78db62b66756ec5f669c,"`undesirable_function_linter()`, `undesirable_operator_linter()`, and `list_comparison_linter()` were removed from the tag `efficiency` (@​IndrajeetPatil, #2655). If you use `linters_with_tags(""efficiency"")` to include these linters, you'll need to adjust your config to keep linting your code against them. We did not find any such users on GitHub.",NA,NA,NA,NA
lintr,9c4cc11cb6f541f16eb5b1015ce36ef8,"`object_usage_linter()` finds global variables assigned with `=` or `->`, which avoids some issues around ""undefined global variables"" in scripts (#2654, @​MichaelChirico).",NA,NA,NA,NA
httr2,4508dc184fbfb9a42cc9659e3ac606b9,`req_perform_iterative()` is no longer experimental.,NA,NA,NA,NA
renv,51fb764686c823a1e541ac21ecc1dfd8,"`renv` now automatically generates a lockfile when loading a project containing a `manifest.json` file (typical for application bundles published to Posit Connect). (#1980, @​toph-allen)",NA,NA,NA,NA
ggplot2,3e57c26d521676a80ec62cc13bad50c1,"The `summary()` method for ggplots is now more terse about facets (@​teunbrand, #5989).",NA,NA,NA,NA
reticulate,6257320cb3980929d348a4592ab4b622,"Fixed segfault encountered when running Python finalizer (#1663, #1664)",NA,NA,NA,NA
reticulate,fbe4bffe0bb80bb14e562990fa208e86,Fixed segfault encountered in RStudio when rapidly switching between R and Python chunks in a Quarto document (#1665).,NA,NA,NA,NA
gh,35419d7634966110a142d1ce40afc8fc,New `gh_token_exists()` tells you if a valid GH token has been set.,NA,NA,NA,NA
dbplyr,c280e6d1449e09f4f768d5842533cdc1,"Translations of `difftime()` for Postgres, SQL server, Redshift, and Snowflake previously returned the wrong sign and are now correct (@​edward-burn, #1532).",NA,NA,NA,NA
profvis,16b51133e60ce5993085787b215dc5a4,Bundled `highlight.js` updated to the latest version 11.10.0.,NA,NA,NA,NA
profvis,32c76aa7ebaa3b043e7fb989baf8640e,"The CSS for profvis code is scoped so that it does not affect other blocks of code, such as those from RMarkdown or Quarto (@​wch, #140).",NA,NA,NA,NA
httr2,fd6a917eda91c6dc808a78628511112b,`req_retry()` no longer treates low-level HTTP failures the same way as transient errors by default. You can return to the previous behaviour with `retry_on_error = TRUE`.,NA,NA,NA,NA
bslib,b2d872a6dcc1d4c10357f67f6ce2332f,"Fixed a bug in `bs_themer()` (and `bs_theme_preview()`) that caused it to stop applying changes if a Sass variable was `NULL`. (@​meztez, #1112)",NA,NA,NA,NA
ragg,83812ed0e84bfb125efba860dfa39826,Fixed a regression from upstream changes in Freetype (#172),NA,NA,NA,NA
sortable,6ba456573fea82dbf47d1d6172647124,New function `update_bucket_list()` to update the items in a bucket list,NA,NA,NA,NA
sortable,10b870e3be532a8322c96ff92a4d25c6,New functionality to update `labels` in `update_rank_list()`,NA,NA,NA,NA
sortable,09c2567b9de0a8b62bc4046645a3f0b2,Add support for `update_rank_list()`,NA,NA,NA,NA
rmarkdown,a689bcd22dbf2c1f0317727a42f157c5,"`find_external_resources()` now correctly detects knitr child document provided with option like `child = c(""child.Rmd"")` (thanks, @​rempsyc, #2574).",NA,NA,NA,NA
ggplot2,1629820c1ca3f2066e73afeb8e2f49cf,Built-in `theme_*()` functions now have `ink` and `paper` arguments to control foreground and background colours respectively (@​teunbrand),NA,NA,NA,NA
httr2,8a49b41f3d9eed7fa877e5e6f3193fc0,`req_body_file()` now works with files \>64kb once more (#524) and no longer leaks a connection if the response doesn't complete succesfully (#534).,NA,NA,NA,NA
httr2,91388ba11ee613b5a0402c87b8ebf953,`req_cache()` now re-caches the response if the body is hasn't been modified but the headers have changed (#442). It also works better when `req_perform()` sets a path (#442).,NA,NA,NA,NA
httr2,8c2b9b3f03dec1bbded56dee0b515a97,"New `req_perform_connection()` for working with streaming data. Unlike `req_perform_stream()` which uses callbacks, `req_perform_connection()` returns a regular response object with a connection as the body. Unlike `req_perform_stream()` it supports `req_retry()` (with @​jcheng5, #519).",NA,NA,NA,NA
httr2,66917b995fe5cbd10863db2be030e103,"New `resp_stream_bytes()`, `resp_stream_lines()`, and `resp_stream_sse()` for streaming chunk from a connection response (#519).",NA,NA,NA,NA
rmarkdown,85f7c814bda3e0d9bc5de68a3701f1f6,"`knit_params_ask()` uses a `select` input for parameters which allow multiple selected values. Previously, a `radio` input was incorrectly used when the parameter had a small number of choices.",NA,NA,NA,NA
rmarkdown,85f7c814bda3e0d9bc5de68a3701f1f6,"```
``` yaml
params:
    primaries:
        choices: [""red"", ""yellow"", ""blue""]
        multiple: true
```",NA,NA,NA,NA
rmarkdown,85f7c814bda3e0d9bc5de68a3701f1f6,"When `multiple` is not enabled, parameter configuration still uses `radio` when there are fewer than five choices. The `input` parameter field can still be used to force the configuration control.",NA,NA,NA,NA
rmarkdown,85f7c814bda3e0d9bc5de68a3701f1f6,"```
``` yaml
params:
    grade:
        input: radio
        choices: [""A"", ""B"", ""C"", ""D"", ""F""]
```",NA,NA,NA,NA
blob,70f688f6b5f8c7ee79d6a993e758f77e,"Install via R CMD INSTALL ., not pak (#30).",NA,NA,NA,NA
blob,70f688f6b5f8c7ee79d6a993e758f77e,"• ci: Install via R CMD INSTALL ., not pak",NA,NA,NA,NA
blob,70f688f6b5f8c7ee79d6a993e758f77e,• ci: Bump version of upload-artifact action,NA,NA,NA,NA
hms,8d69847f6726a3393b1ca85da72ddf1b,"Install via R CMD INSTALL ., not pak (#122).",NA,NA,NA,NA
hms,8d69847f6726a3393b1ca85da72ddf1b,"• ci: Install via R CMD INSTALL ., not pak",NA,NA,NA,NA
hms,8d69847f6726a3393b1ca85da72ddf1b,• ci: Bump version of upload-artifact action,NA,NA,NA,NA
pillar,fb9a143dd6bb7ecd82f79f73613197c5,"Install via R CMD INSTALL ., not pak (#672).",NA,NA,NA,NA
pillar,fb9a143dd6bb7ecd82f79f73613197c5,"• ci: Install via R CMD INSTALL ., not pak",NA,NA,NA,NA
pillar,fb9a143dd6bb7ecd82f79f73613197c5,• ci: Bump version of upload-artifact action,NA,NA,NA,NA
tibble,45ae7848d6f7fdfd6918b5f7d25ecfbc,"Install via R CMD INSTALL ., not pak (#1601).",NA,NA,NA,NA
tibble,45ae7848d6f7fdfd6918b5f7d25ecfbc,"• ci: Install via R CMD INSTALL ., not pak",NA,NA,NA,NA
tibble,45ae7848d6f7fdfd6918b5f7d25ecfbc,• ci: Bump version of upload-artifact action,NA,NA,NA,NA
reticulate,a88e132b0728ba9af8627fb925b2c33e,"Fixed error when using reticulate with radian (#1668, #1670).",NA,NA,NA,NA
profvis,d9f6d93661097de169f79918344167bb,"New technique for trimming uninteresting frames from the stack (#130). This requires a new evaluation model where the code you supply to `profvis()` is turned into the body of a zero-argument anonymous function that is then called by profvis. This subtly changes the semantics of evaluation, but it's very unlikely to affect the type of code that you are typically profiling.",NA,NA,NA,NA
profvis,09b22398ce31aea93d9efc9dd8b1bcf3,"profvis now requires R 4.0.0. The bundled version of jQuery has been upgraded to 3.7.1 (@​hedsnz, #139) and the bundled `highlight.js` has been updated to the 11.10.0 (#140). It no longer longer requires purrr or stringr, and no longer suggests ggplot2, devtools, knitr, or rmarkdown.",NA,NA,NA,NA
profvis,1b7a529b19483d56101e4056aca7c6d6,"`provis()` uses a new technique for trimming uninteresting frames from the stack (#130). This requires a new evaluation model where the code you supply to `profvis()` is turned into the body of a zero-argument anonymous function that is then called by profvis. This subtly changes the semantics of evaluation, but the primary effect is that if you create variables inside of the profiled code they will no longer be available outside of it.",NA,NA,NA,NA
httr2,ddbf0f3e61ba1b20ae2a7f151ca8947a,`req_perform_parallel()` and `req_perform_promise()` now correctly set up the method and body (#549).,NA,NA,NA,NA
gt,f44eb2e8ac9ce185907d504fe433f0d6,"Fixed an issue where `md()` and `fmt_markdown()` would render factors as their numeric levels rather than their text labels (@​rossellhayes, #1883).",NA,NA,NA,NA
reticulate,20fd125d3f959d5b420cdf474dd6fa33,Fixed error when converting an empty NumPy char array to R (#1662).,NA,NA,NA,NA
reticulate,7c5b8afe1ca196ad77fc6cedd125f543,"Improved behavior when the conda binary used to create an environment could not be resolved (contributed by @​tl-hbk, #1654, #1659)",NA,NA,NA,NA
reticulate,c25b1d2e0badffe5df84ec1cac48aa39,"Fixed error where `py_discover_config()` attempted to detect Windows App Store Python installations, which are now excluded from discovery by both `py_discover_config()` and `virtualenv_starter()` (#1656, #1673).",NA,NA,NA,NA
renv,11c30d09038577c07d374d468dcea272,"`renv` now infers a dependency on the `ragg` package when the `ragg_png` device is used in R Markdown / Quarto documents, for documents using the code `knitr::opts_chunk$set(dev = ""ragg_png"")`. (#1985)",NA,NA,NA,NA
pointblank,203af085882dd0449ea46ee4bbff4370,"New argument `extract_tbl_checked` in `interrogate()`. When `FALSE`, the `$tbl_checked` column from the validation set will be dropped before returning the agent. This may be helpful in reducing object size for large agents. (#554)",NA,NA,NA,NA
pointblank,a7d02dccd42d5e47f652cbc93b89079e,"New argument `na_rm` in `snip_list()`. When `TRUE`, `NA` values will not be included in the list of items in the snippet. (#556)",NA,NA,NA,NA
pointblank,0a8f445e3b6e7b83a8bb8d610d54f3f1,Improved readability of error messages rendered as tooltip to the agent report. (#543),NA,NA,NA,NA
pointblank,d0b3d91847f152612d5c9ed37119ffdc,`col_vals_expr()` shows used columns in the agent report when interrogated (#570),NA,NA,NA,NA
pointblank,109f1a733735af425b33c28f4fa72b64,"Functions accepting `...` now use `rlang::list2()`, enabling dynamic dots. For example, a multiagent can now be constructed from a `list()` of agents using `create_multiagent(!!!list_of_agents)`. (#553)",NA,NA,NA,NA
pointblank,9623ec88fe953a9053b03b66d8ddc278,Fixed bug with non-standard column names in some validation functions (#555),NA,NA,NA,NA
pointblank,a58e10999ed24fbef7f760aa2b70c543,"Fixed a regression in `col_vals_*()` functions, where `vars(""col"")` was evaluating to the string `""col""`. Behavior of `vars(""col"")` is now aligned back with `vars(col)` - both evaluate to the column name `col`. (#535)",NA,NA,NA,NA
pointblank,598193d7ff64220ac9453ec8460ff635,"Problems arising from comparing `columns` to a `value` of different class (for example, comparing a datetime column to a date value `Sys.Date()` instead of another datetime value `Sys.time()`) are now signalled appropriately at `interrogate()`. (#539)",NA,NA,NA,NA
pointblank,4d66445c93c82953a8685e8ed18ed912,Fixed bug in `has_columns()` failing to detect non-existing columns when supplied as a character vector. (#540),NA,NA,NA,NA
duckplyr,c9c5c12accbdfbf93375626b01625829,Detect functions from the duckplyr package (#246).,1,1,FALSE,NA
duckplyr,6454c7dc336694ec16abc1127ab86435,"New `duckplyr_execute()` to execute configuration queries against the default duckdb connection (#39, #165, #227).",1,2,FALSE,NA
duckplyr,dcf6db80fc9dd01050f9e466a3667231,"`as_duckplyr_tibble()` supports dbplyr connections to a duckdb database (#86, #211, #226).",1,3,FALSE,NA
duckplyr,83e4cd888eaf18a34e478240e8a64cf7,Avoid failures if artifact is missing.,1,4,FALSE,NA
duckplyr,7f3719edac0b106a732e94cb9bb92312,Store SHA as artifact.,1,5,FALSE,NA
duckplyr,693b790cb5eb8196a2be9bdc47a7006a,Move towards external status updates.,1,6,FALSE,NA
duckplyr,0dc145efe1255cddb8b41deb202abf3c,Tweak status workflow.,1,7,FALSE,NA
duckplyr,f310bf07e6e5ff33b40188b575adcb36,Use token.,1,8,FALSE,NA
duckplyr,252c09c470667bc9bb77f14c75ceacc0,Add external workflow to update commit statuses.,1,9,FALSE,NA
duckplyr,a3cb026ea47215937ab7d8beb89a2e43,Avoid manually installing package for pkgdown (#245).,1,10,FALSE,NA
duckplyr,27ecff2cc6a7b6a24443a1f065315793,Fix fledge (#243).,1,11,FALSE,NA
duckplyr,035941815f07ce7d298daa225d034185,Use proper remote repo (#241).,1,12,FALSE,NA
duckplyr,fe34b16ffcf5fa4775b65762074df7eb,Add permissions to fledge workflow (#238).,1,13,FALSE,NA
duckplyr,535510eb92db44b710e04c59103c4f0a,Fix tests without suggested packages (#236).,1,14,FALSE,NA
duckplyr,e921719ddfaa579b6933f42e449ca6d4,Add permissions to fledge workflow (#235).,1,15,FALSE,NA
duckplyr,e84052157f13d07134e21f7ec944d218,Add permissions to fledge workflow (#234).,1,16,FALSE,NA
duckplyr,8dcb26a92a5bdedf4ecdc4cd434c03fd,Add input to fledge workflow (#233).,1,17,FALSE,NA
duckplyr,4fba03c9216f0d38dc036fc94b742238,Use proper token for fledge (#232).,1,18,FALSE,NA
duckplyr,4d0059b185a9d17345a908688e092666,Fix fledge workflow (#231).,1,19,FALSE,NA
duckplyr,edacbead8941cf1f029a205c8ae5545f,Bump version via PR (#230).,1,20,FALSE,NA
duckplyr,990e42e983ea3df537ca838397e59be9,Sync with duckdb.,1,21,FALSE,NA
duckplyr,f60c6f3fbfd25d296beba53ca4571205,Move to tidyverse (#225).,1,22,FALSE,NA
duckplyr,643ad84de5a9afea045e8e9121eb1444,Merge branch 'cran-0.4.1'.,1,23,FALSE,NA
duckplyr,b261d22eab74c9a7f88c7d7951e5fa42,Merge branch 'cran-0.4.1'.,1,24,FALSE,NA
duckplyr,6443511aaf333ae27ac77418f5012c74,"`df_from_file()` and related functions support multiple files (#194, #195), show a clear error message for non-string `path` arguments (#182), and create a tibble by default (#177).",1,25,FALSE,NA
duckplyr,6f9966dedb84d1a193366da0e15be03f,New `as_duckplyr_tibble()` to convert a data frame to a duckplyr tibble (#177).,1,26,FALSE,NA
duckplyr,40fec22c1c9c659bec1b17c46f7e5c82,"Support descending sort for character and other non-numeric data (@​toppyy, #92, #175).",1,27,FALSE,NA
duckplyr,b5965393edb5012ed5e55f138371b138,Avoid setting memory limit (#193).,1,28,FALSE,NA
duckplyr,d258b2fba358b17f64e0edecd6db9fb2,"Check compatibility of join columns (#168, #185).",1,29,FALSE,NA
duckplyr,6afb365d4252dac68e52910872ad36b5,"Explicitly list supported functions, add contributing guide, add analysis scripts for GitHub activity data (#179).",1,30,FALSE,NA
duckplyr,31cb4a4eebdeb97de9c142a0eba3d0a3,Add contributing guide (#179).,1,31,FALSE,NA
duckplyr,e23808b8be3427c5e7da31328dc0988a,"Show a startup message at package load if telemetry is not configured (#188, #198).",1,32,FALSE,NA
duckplyr,37496ca842bcb9a356c05eaa0bfab728,"`?df_from_file` shows how to read multiple files (#181, #186) and how to specify CSV column types (#140, #189), and is shown correctly in reference index (#173, #190).",1,33,FALSE,NA
duckplyr,28dd6e4f1168c8e4c9e5303264dfad9d,"Discuss dbplyr in README (#145, #191).",1,34,FALSE,NA
duckplyr,06b3893a5b5e6b6c0c092b51fea69a45,Add analysis scripts for GitHub activity data (#179).,1,35,FALSE,NA
duckplyr,8015939f1badd936dd9e0dbf26d6f5a8,"Use built-in rfuns extension to implement equality and inequality operators, improve translation for `as.integer()`, `NA` and `%in%` (#83, #154, #148, #155, #159, #160).",1,36,FALSE,NA
duckplyr,5bd3357a4e025f043a9d872a4ff96f87,"Reexport non-deprecated dplyr functions (#144, #163).",1,37,FALSE,NA
duckplyr,f64b030b250de2f87748126a164df3cc,`library(duckplyr)` calls `methods_overwrite()` (#164).,1,38,FALSE,NA
duckplyr,46241619bd678ec808d12ef2da865534,Only allow constant patterns in `grepl()`.,1,39,FALSE,NA
duckplyr,259c2903d4ff7eaf362ef29c9080a040,Explicitly reject calls with named arguments for now.,1,40,FALSE,NA
duckplyr,1be89a17773844b9e37b16b6fccd6599,Reduce default memory limit to 1 GB.,1,41,FALSE,NA
duckplyr,50123e16049f3720e32fac8d3f34368e,"Stricter type checks in the set operations `intersect()`, `setdiff()`, `symdiff()`, `union()`, and `union_all()` (#169).",1,42,FALSE,NA
duckplyr,d7dbf652d9a3dd5b1c1f6736e87e82fd,Distinguish between constant `NA` and those used in an expression (#157).,1,43,FALSE,NA
duckplyr,03198cdd55442e71fdd19829fd6e35f4,"`head(-1)` forwards to the default implementation (#131, #156).",1,44,FALSE,NA
duckplyr,df2a690da5f0de162f4e9e9a75607278,Fix cli syntax for internal error message (#151).,1,45,FALSE,NA
duckplyr,fee8a3d7337c8b2fc97b1e7bd0648474,More careful detection of row names in data frame.,1,46,FALSE,NA
duckplyr,9aae6fac7d93c9282bfd9a8becf90091,Always check roundtrip for timestamp columns.,1,47,FALSE,NA
duckplyr,c43372483c6e240fff870b6f293992d1,`left_join()` and other join functions call `auto_copy()`.,1,48,FALSE,NA
duckplyr,1044cb49dc5ed0d6205ead8f511a9afc,Only reset expression depth if it has been set before.,1,49,FALSE,NA
duckplyr,6a3174ecc237aa99e8d842a88eb51857,Require fallback if the result contains duplicate column names when ignoring case.,1,50,FALSE,NA
duckplyr,816f057af420c424b2ff60884bd58b9b,`row_number()` returns integer.,1,51,FALSE,NA
duckplyr,d7af52a77a65d372bb350370954ed859,`is.na(NaN)` is `TRUE`.,1,52,FALSE,NA
duckplyr,f3d3f926883b689efa7e13e7125051ea,"`summarise(count = n(), count = n())` creates only one column named `count`.",1,53,FALSE,NA
duckplyr,0fb87a1acd01bfd1bc2a357a96984d7a,"Correct wording in instructions for enabling fallback logging (@​TimTaylor, #141).",1,54,FALSE,NA
duckplyr,cb3bcb20afd923d2a1e3c43a817c2535,"Remove styler dependency (#137, #138).",1,55,FALSE,NA
duckplyr,3a67d1f9f11ba18aa72bfb067ed417bd,Avoid error from stats collection.,1,56,FALSE,NA
duckplyr,93db9ad2669543e6071909096b140ebb,"Mention wildcards to read multiple files in `?df_from_file` (@​andreranza, #133, #134).",1,57,FALSE,NA
duckplyr,f553d4d8284a96901bc4f2442df11f68,Reenable tests that now run successfully (#166).,1,58,FALSE,NA
duckplyr,5d967e82f4dbd86bb6bc367f5f7adb74,Synchronize tests (#153).,1,59,FALSE,NA
duckplyr,d7ebe05c2b8bebd531fff00fad8cbc6a,Test that `vec_ptype()` does not materialize (#149).,1,60,FALSE,NA
duckplyr,f8a362bebaae3e3ca8be8607a3c43fcf,Improve telemetry tests.,1,61,FALSE,NA
duckplyr,7b6c5612257a9f85ec2e9ba634f8a3a8,Promote equality checks to `expect_identical()` to capture differences between doubles and integers.,1,62,FALSE,NA
duckplyr,9d50e6688d0f8bd4c5513269df184fe6,Run autoupload in function so that it will be checked by static analysis (#122).,1,63,FALSE,NA
duckplyr,81ffd2c2b0bdcdf4a26a569af82a13f0,"New `df_to_parquet()` to write to Parquet, new convenience functions `df_from_csv()`, `duckdb_df_from_csv()`, `df_from_parquet()` and `duckdb_df_from_parquet()` (#87, #89, #96, #128).",1,64,FALSE,NA
duckplyr,d07afed69146bb77257625914a3dc6fd,"Forbid reuse of new columns created in `summarise()` (#72, #106).",1,65,FALSE,NA
duckplyr,88f1ce6202e176b1fc15441eda3e0123,`summarise()` no longer restores subclass.,1,66,FALSE,NA
duckplyr,36924ad9ee15d76c9c58039b3ad0447b,Disambiguate computation of `log10()` and `log()`.,1,67,FALSE,NA
duckplyr,3beda9a53ce3c7ee6df9f03f8ce4e0eb,Fix division by zero for positive and negative numbers.,1,68,FALSE,NA
duckplyr,d7c19b135a373147e08a22dafdb59e82,"New `fallback_sitrep()` and related functionality for collecting telemetry data (#102, #107, #110, #111, #115). No data is collected by default, only a message is displayed once per session and then every eight hours. Opt in or opt out by setting environment variables.",1,69,FALSE,NA
duckplyr,bc1b86ae4635d5410e46e1f4760141d3,"Implement `group_by()` and other methods to collect fallback information (#94, #104, #105).",1,70,FALSE,NA
duckplyr,672e81d2ebf7cf59633cc260124e8f41,Set memory limit and temporary directory for duckdb.,1,71,FALSE,NA
duckplyr,3194704816d04dc0643f7e4b7bbf0112,Implement `suppressWarnings()` as the identity function.,1,72,FALSE,NA
duckplyr,80c95f844d0f35cb032d2ef29bd588b8,Prefer `cli::cli_abort()` over `stop()` or `rlang::abort()` (#114).,1,73,FALSE,NA
duckplyr,a29386f5610610eca7990955d55a1195,Translate `.data$a` and `.env$a`.,1,74,FALSE,NA
duckplyr,5d7f1ce7a3b655d89c0388ef2dc76da9,"Strict checks for column class, only supporting `integer`, `numeric`, `logical`, `Date`, `POSIXct`, and `difftime` for now.",1,75,FALSE,NA
duckplyr,de4b2855a7ea65b56f3ba1ab6e22656d,"If the environment variable `DUCKPLYR_METHODS_OVERWRITE` is set to `TRUE`, loading duckplyr automatically calls `methods_overwrite()`.",1,76,FALSE,NA
duckplyr,5ef7426c0d08260afb1f2c21bcf4bccc,Better duckdb tests.,1,77,FALSE,NA
duckplyr,6da82cc7bedd545d28858d4078e0bb84,Use standalone purrr for dplyr compatibility.,1,78,FALSE,NA
duckplyr,e0f18a2a8836fa0f99444683f8e26625,Add tests for correct base of `log()` and `log10()`.,1,79,FALSE,NA
duckplyr,86e051c4e02672932ea9786b11386841,`methods_overwrite()` and `methods_restore()` show a message.,1,80,FALSE,NA
duckplyr,42f1b8a6b2b3cad9a0319c7a7933a40e,`grepl(x = NA)` gives correct results.,1,81,FALSE,NA
duckplyr,e45eb90b596fb8a661259c17d6ea9167,Fix `auto_copy()` for non-data-frame input.,1,82,FALSE,NA
duckplyr,d96794e51d5f26a8c2552f11c11ad0cf,Add output order preservation for filters.,1,83,FALSE,NA
duckplyr,d45143a02b743976105f2c2c01c89569,"`distinct()` now preserves order in corner cases (#77, #78).",1,84,FALSE,NA
duckplyr,cbb9aa5447412a166cd1c957772c529a,"Consistent computation of `log(0)` and `log(-1)` (#75, #76).",1,85,FALSE,NA
duckplyr,7d8f108e65493f5050bdd81832344a19,Only allow constants in `mutate()` that are actually representable in duckdb (#73).,1,86,FALSE,NA
duckplyr,b0181d77a9deecefaa7e65522c758178,"Avoid translating `ifelse()`, support `if_else()` (#79).",1,87,FALSE,NA
duckplyr,750d72b48b50be0d9240ec56a4581edf,"Separate and explain the new relational examples (@​wibeasley, #84).",1,88,FALSE,NA
duckplyr,93978296a2837808cf23b3aa4f013fc2,Add test that TPC-H queries can be processed.,1,89,FALSE,NA
duckplyr,f622030282544f7c80f527416d50b979,Sync with dplyr 1.1.4 (#82).,1,90,FALSE,NA
duckplyr,23aa077b1d8c90e767250166b839ec84,Remove `dplyr_reconstruct()` method (#48).,1,91,FALSE,NA
duckplyr,bdc87b49a3090137243464379ddc18d1,Render README.,1,92,FALSE,NA
duckplyr,46f5fbcc4abca0ec14cda9d305a7b9ca,Fix code generated by `meta_replay()`.,1,93,FALSE,NA
duckplyr,423a4bfbe311c40521db9f2083e8dc0e,Bump constructive dependency.,1,94,FALSE,NA
duckplyr,f98e47d1d1ba3dfc0cb9b95296d4944b,Fix output order for `arrange()` in case of ties.,1,95,FALSE,NA
duckplyr,66cab6b408a8d6130d8868e1d90c32dd,Update duckdb tests.,1,96,FALSE,NA
duckplyr,a6f398b314d899c28bc6780e478dd360,"Only implement newer `slice_sample()`, not `sample_n()` or `sample_frac()` (#74).",1,97,FALSE,NA
duckplyr,d330526f3ac25f146aee450dc96fa0c5,Sync generated files (#71).,1,98,FALSE,NA
duckplyr,567ab1fa52857c388c3fe6c6465a11eb,"Join using `IS NOT DISTINCT FROM` for faster execution (duckdb/duckdb-r#41, #68).",1,99,FALSE,NA
duckplyr,ae28caed81e9f7dc2d741d4ffe3e9c29,"Add stability to README output (@​maelle, #62, #65).",1,100,FALSE,NA
duckplyr,8578f860123b92963d18cc818389174f,"`summarise()` keeps `""duckplyr_df""` class (#63, #64).",1,101,FALSE,NA
duckplyr,6f44e35aea34831e46fd2e2aa2e99737,Fix compatibility with duckdb \>= 0.9.1.,1,102,FALSE,NA
duckplyr,0a83a96b9d9b392cc50d950b99568539,Skip tests that give different output on dev tidyselect.,1,103,FALSE,NA
duckplyr,1cd6552f2325a121b3872ed90e2e6339,Import `utils::globalVariables()`.,1,104,FALSE,NA
duckplyr,2e87610f5e49dff4e7e76d444ef29f83,"Small README improvements (@​maelle, #34, #57).",1,105,FALSE,NA
duckplyr,4cb8cfaf4b7e3076092b27f9d5340d8a,Fix 301 in README.,1,106,FALSE,NA
duckplyr,2cf2c48a7910912428c6bb96882221c1,Improve documentation.,1,107,FALSE,NA
duckplyr,5d9b8bc2ad4742163654aeb2034f9a1f,Work around problem with `dplyr_reconstruct()` in R 4.3.,1,108,FALSE,NA
duckplyr,55a6ce7e26c88b09e486a2b1e17d148f,Rename `duckdb_from_file()` to `df_from_file()`.,1,109,FALSE,NA
duckplyr,8b3c32fbcc85e0fa34ecba700640b4d5,"Unexport private `duckdb_rel_from_df()`, `rel_from_df()`, `wrap_df()` and `wrap_integer()`.",1,110,FALSE,NA
duckplyr,e67649d461eb27e993d3c48100ce8efb,Reexport `%>%` and `tibble()`.,1,111,FALSE,NA
duckplyr,84172b2a9f72521869701104c55dbe63,Implement relational API for DuckDB.,1,112,FALSE,NA
duckplyr,874012e6598aed7d16a7d0d9b1e486e0,Fix examples.,1,113,FALSE,NA
duckplyr,c571226e4de37d870350c0e6c451dcad,Add CRAN install instructions.,1,114,FALSE,NA
duckplyr,0b5a198db69996dc418d1ee2224d0792,Satisfy `R CMD check`.,1,115,FALSE,NA
duckplyr,a19e6937f7f0f6e2396270d9655cd9ba,Document argument.,1,116,FALSE,NA
duckplyr,23fea4fc7c6c9382c7ff6d8ec33d8f16,Error on NOTE.,1,117,FALSE,NA
duckplyr,72fbd854606fa47352941be56a3a2b93,Remove `relexpr_window()` for now.,1,118,FALSE,NA
duckplyr,79c59c6b81bd726c87f26441c494a0f9,Clean up reference.,1,119,FALSE,NA
quarto,ee8328dacf143b531217c599bdbcd8f3,"Add `quarto.quiet` options to allow more verbose error message when `quarto_*` function are used inside other package. For example, inside **pkgdown** for building Quarto vignettes. **pkgdown** sets `quiet = TRUE` internally for its call to `quarto_render()`, and setting `options(quarto.quiet = TRUE)` allows to overwrite this.",1,1,FALSE,NA
quarto,7507a717308e493bb0c44fbdbfb28973,"`quarto_path()` now returns a normalized path with potential symlink resolved, for less confusion with `quarto_binary_sitrep()` (thanks, @​jennybc).",1,2,FALSE,NA
quarto,4eabcafc3e291a8bc23858129b3d87ff,"Fix an error with interactive prompt for extension approval (thanks, @​wjschne, #212).",1,3,FALSE,NA
quarto,8d3e2a7d96094cf987c855f53d066bcb,"`quarto_preview()` now looks at `quarto preview` log to browse to the correct url when inside RStudio viewer (thanks, @​aronatkins, #167).",1,4,FALSE,NA
quarto,bd414ceece23e647faab720c68e5aeb6,"This package now uses the x.y.z.dev versionning scheme to indicate development, patch, minor and major versions. This follows Tidyverse package version conventions.",1,5,FALSE,NA
quarto,ee864353ebfa2f07915290a2d64d2742,Adapt tests for CRAN checks issues due to Quarto v1.5.54 regression (though it is fixed upstream).,1,6,FALSE,NA
quarto,0f6df608d56f285d92170d8917da9c83,"Approval check in `quarto_add_extension()` and `quarto_use_template()` now works correctly (thanks, @​eveyp, #172).",1,7,FALSE,NA
quarto,eddcae515c99c381390490251076f795,This version is now adapted to Quarto 1.4 latest stable release.,1,8,FALSE,NA
quarto,f9db65b4094b7bd16fdda250ed685393,"Add registration of vignette engine to use `quarto` as a vignette builder, and use `.qmd` file as vignette. See `vignette(""hello"", package = ""quarto"")`. (thanks, @​dcnorris, #57).",1,9,FALSE,NA
quarto,dde53aad60d2e86224d7931f5763a303,"New `quarto_binary_sitrep()` checks possible difference in Quarto binary used by this package, and the one used by RStudio IDE (thanks, @​jthomasmock, #12).",1,10,FALSE,NA
quarto,8eef6e17eed7b2e95dc82957be7d347f,"New `is_using_quarto()` to check if a directory requires using Quarto (i.e. it has a `_quarto.yml` or at least one `*.qmd` file) (thanks, @​hadley, #103).",1,11,FALSE,NA
quarto,d824f45e78463c9be6b7f6152659a312,"New `quarto_create_project()` calls `quarto create project <type> <name>` (thanks, @​maelle, #87).",1,12,FALSE,NA
quarto,c2f2c4bff291bf2699f126b7c260387e,"New `quarto_add_extension()` and `quarto_use_template()` to deal with Quarto extensions for a Quarto project. (thanks, @​mcanouil, #45, @​remlapmot, #42).",1,13,FALSE,NA
quarto,883818a4891bec2c16478ec190ccc7b8,"`quarto_render()` and `quarto_inspect()` gains a `profile` argument (thanks, @​andrewheiss, #95, @​salim-b, #123).",1,14,FALSE,NA
quarto,82c82d420fefa5c447d9106effff64a4,"`quarto_render()` gains `metadata` and `metadata_file` arguments. They can be used to pass modified Quarto metadata at render time. If both are set, `metadata` will be merged over `metadata_file` content. Internally, metadata will be passed as a `--metadata-file` to `quarto render` (thanks, @​mcanouil, #52, @​maelle, #49).",1,15,FALSE,NA
quarto,415957d5ffa45d04b0e23b0123b51562,"`quarto_render()` and all other relevant functions gain a `quarto_args` argument. It allows to pass additional options flag to `quarto` CLI. This is for advanced usage e.g. when new options are added to Quarto CLI that would not be user-facing in this package's functions (thanks, @​gadenbuie, #125).",1,16,FALSE,NA
quarto,e018ed4561d7cd50427bd5cb3753a746,Add `quiet` argument in most functions to remove warnings and messages. It default to `FALSE` in most function to match with `quarto` CLI default.,1,17,FALSE,NA
quarto,77c1cec2a061e67902c299bf20e4b074,"In `quarto_render()`, `execute_params` now converts boolean value to `true/false` correctly as expected by `quarto render` (thanks, @​marianklose, #124).",1,18,FALSE,NA
quarto,2206989ede5af8831554ac3cb4261331,"Error message now advises to re-run with `quiet = FALSE` because `quarto_render(quiet = TRUE)` will run `quarto render` in quiet mode (thanks to @​gadenbuie, #126, @​wlandau, #16).",1,19,FALSE,NA
quarto,1a73f03a373f80c0fd36440a53d8a565,**rsconnect** R package dependency has been moved to Suggest to reduce this package's overall number of dependencies. **rsconnect** package is only required for publishing using `quarto_publish_*()` functions. Users will be prompted to install (when in interactive mode) if not installed.,1,20,FALSE,NA
quarto,982324615a5658c82eb3a7eaee256db8,Added a `NEWS.md` file to track changes to the package.,1,21,FALSE,NA
ggplot2,2208f7d6d5cc40aa564fd5289565b7d1,"New `get_labs()` function for retrieving completed plot labels (@​teunbrand, #6008).",NA,NA,NA,NA
ggplot2,7556276132d4f28746eabb9312ac99b6,"Fixed bug where the `ggplot2::`-prefix did not work with `stage()` (@​teunbrand, #6104).",NA,NA,NA,NA
renv,3271042c9afee63dff0aebc3a8f6f1d3,"Fixed an issue where code following `source(""renv/activate.R"")` in the project `.Rprofile` was not invoked for projects using RStudio. (#1990)",NA,NA,NA,NA
renv,12407d38b6b0c90742c82b03a1460534,Fixed an issue where repository URLs were inappropriately transformed into binary repository URLs on Linux. (#1991),NA,NA,NA,NA
gt,05c4792e9ba1b8022415c21c088d3b5e,"`vec_fmt_*()` (and incidentally `cols_nanoplot()`) should be faster now (@​olivroy, #1888, #1891).",NA,NA,NA,NA
gt,d870c205418554616a0757ad7ca708cd,`cols_add()` works in more cases (#1893).,NA,NA,NA,NA
shiny,7c810a1eb6ca049fc4c358cf76e8f638,Small improvements to the default pulse busy indicator to better blend with any background. It's also now slightly smaller by default. (#4122),NA,NA,NA,NA
shiny,1e106a7993593a5145eaecd53ebcaaa0,"Fixed a bug in `conditionalPanel()` that would cause the panel to repeatedly show/hide itself when the provided condition was not boolean. (@​kamilzyla, #4127)",NA,NA,NA,NA
shiny,ede01975c9eb9eb52619ced8780100b7,Fixed a bug with `input_slider()` when used as a range slider that made it impossible to change the slider value when both handles were at the maximum value. (#4131),NA,NA,NA,NA
shiny,df99cc4bd5948526d9effec57d516a73,Fixed a bug with `sliderInput()` when used as a range slider that made it impossible to change the slider value when both handles were at the maximum value. (#4131),NA,NA,NA,NA
gt,c7ab05c022554b50f3b8226d7ec1ad28,"The `locale` argument of `gt()` now defaults to `getOption(""gt.locale"")` if set (#1894).",NA,NA,NA,NA
renv,51a458728be4d986a77c113e170422f7,Fixed an issue where `renv` tests could fail if the `parallel` package was loaded during test execution.,NA,NA,NA,NA
renv,b0ef5b452c13b619d6c041801eedb84c,`renv` now determines a package repository's type through the HTTP headers provided when accessing `src/contrib/PACKAGES`. This is mainly relevant when detecting Nexus and Artifactory repositories.,NA,NA,NA,NA
gt,7c12a1b056d8e3abc06c399aa80d8d17,"The `extract_body()` function now, by default, will not display columns that have been hidden (e.g., by `cols_hide()` or `cols_merge*()`); the previous behavior can be restored by using `incl_hidden_cols = TRUE`.",NA,NA,NA,NA
gt,764d35ebfcfac4a780cb98b0abe5822c,New arguments have been added to `extract_body()` to better control which columns will be present in the returned data (#1875). (#1889),NA,NA,NA,NA
shiny,c7e62e8df5d2de180af7ecb729c63bfa,"When spinners and the pulse busy indicators are enabled, Shiny now shows the pulse indicator when dynamic UI elements are recalculating if no other spinners are present in the app. (#4137)",NA,NA,NA,NA
renv,21369bcdffaea3cfe3c66ac71e05f6b3,Fixed a performance regression in `renv::dependencies()`. (#1999),NA,NA,NA,NA
shiny,56e6077cf10aeeaaef1663a373dd16ad,"`dateInput` and `dateRangeInput` no longer send immediate updates to the server when the user is typing a date input. Instead, it waits until the user presses Enter or clicks out of the field to send the update, avoiding spurious and incorrect date values. Note that an update is still sent immediately when the field is cleared. (#3664)",NA,NA,NA,NA
tibble,990e85bdb47cf8ffcd36c7f7e30b75f4,"Rework `view()` to better work with RStudio and Positron (@​DavisVaughan, #1551, #1603).",NA,NA,NA,NA
gt,5a5a987863762613188b0a0dce6ad20d,Fixed an issue where column widths weren't set properly using `col_widths()` for LaTeX output. (#1837),NA,NA,NA,NA
gt,5997e36b0b05db0a0cb8285a42c9ee35,"LaTeX now correctly renders if text size is changed (@​olivroy, #1885).",NA,NA,NA,NA
pins,a7d93613aa0a934690b17eb1ddc6e718,"Added new board for Databricks Volumes `board_databricks()` (#839, @​edgararuiz).",NA,NA,NA,NA
pool,28ec6981a68e5df98a01799ee6c6cf9d,Switched from hosted MySQL database to local SQLite database.,NA,NA,NA,NA
pins,fe9fa822348010596bb78d8182e6d3ff,"Switched writing with `type = ""parquet""` to use the nanoparquet package (#843).",NA,NA,NA,NA
gt,65fb9f9139d0973556fc54db6fd36eac,"Creating a caption with `tab_caption()` will now be preserved in LaTeX output with `as_latex()`. Cross-referencing a table using the internal cross-referencing system of **bookdown** is now enabled for PDF and HTML outputs (for HTML, set `options(""htmltools.preserve.raw"" = FALSE)`). Quarto users should use the `tbl-cap` and `label` cell options. (@​nielsbock, #1800)",NA,NA,NA,NA
gt,996b6888335a38cca2cc64878db09bb0,"Fixed a bug that caused an error in LaTeX when (1) `row_group_as_column = TRUE`, (2) the row groups were specified using `tab_row_group()`, and (3) the user specified a width for the row label column. (@​kbrevoort, #1804)",NA,NA,NA,NA
gt,55337b0e5c6fd03f223cf3897aa639a8,"Fixed an issue where column widths weren't set properly using `col_widths()` for LaTeX output (#1837). (@​snhansen, #1867)",NA,NA,NA,NA
gt,beeb20a23b43ef9524603ac2fa95610f,"Interactive tables now respect more styling options, namely: `column_labels.background.color`, `row_group.background.color`, `row_group.font.weight`, `table_body.hlines.style`, `table.font.weight`, `table.font.size`, and `stub.font.weight`. (#1693)",NA,NA,NA,NA
gt,3abaeb44f08595afcb32ee85791574d5,"The optional argument `levels` was added to `cells_column_spanners()` to constrain targeting of column spanners by their level. (@​obsaditelnost, #1858)",NA,NA,NA,NA
gt,4620f0e6fa381c3d23fcb31489534d8c,"Fixed a bug in using `pct()` column widths with `as_gtable()` (#1771). (@​teunbrand, #1776)",NA,NA,NA,NA
gt,6e97ed1dd663a1894118a289fb3f044a,"Showing currency symbols in grid output now works. (@​olivroy, #1788)",NA,NA,NA,NA
gt,3ba4c7eb51047652575c694687b441a5,"`data_color()` no longer errors when a tidyselect selection is empty (like `fmt_*()` functions) (#1665). (@​olivroy, #1795)",NA,NA,NA,NA
gt,af21510997d242e2a5bacd1f55c1c365,"Improved performance during footnote rendering. (@​olivroy, #1818)",NA,NA,NA,NA
gt,48ab7712ab8773679890a4e144960ca9,"Improved footnote rendering in Quarto with `fmt_markdown()` (#1773). (@​olivroy, #1860)",NA,NA,NA,NA
gt,2ac7274682b5e0fef71f945d592bd5ba,Fixed a bug where spanners didn't render correctly in Quarto (#1839). (#1856),NA,NA,NA,NA
gt,18e78ee050cc012f252d82e61db7af43,"Fixed an issue where `tab_spanner_delim()` would fail to resolve a duplicate ID value. (@​olivroy, #1821)",NA,NA,NA,NA
gt,6daa3671d5bf320bd2c3b8040047a520,`cols_add()` works correctly in more cases. (#1893),NA,NA,NA,NA
gt,429dd29e70440b8287b1e16a4f23e956,"`tidyselect::where()`, `tidyselect::all_of()`, and `tidyselect::any_of()` are now re-exported by gt. (#1830)",NA,NA,NA,NA
gt,56389deddac2425cf65263a683ce3b66,"`vec_fmt_*()` (and incidentally `cols_nanoplot()`) should be faster now. (@​olivroy, #1888, #1891, #1896, #1901)",NA,NA,NA,NA
pins,2fda1b346c3715a167bfe35e4cd39db1,Started gradual deprecation process for legacy pins functions such as `pin()` (#844).,NA,NA,NA,NA
pool,19e4a5f64356b6634bd6fbaf49ca6498,Switched from hosted MySQL database to local SQLite database in examples.,NA,NA,NA,NA
reticulate,7e4e6982f7e9b8fe38c1c40682b05429,Fixed error when attempting to use a python venv created with `uv` (#1678),NA,NA,NA,NA
shinytest2,7af7b36e70c795e73c834a73114d2080,"Improved the error message when an app takes too long to start up (@​LouisLeNezet, #394).",NA,NA,NA,NA
renv,5d77d59254018fc883ae8ecf72386197,Fixed an issue where `renv::snapshot()` could fail if the project contained a call to `module()` with no arguments. (#2007),NA,NA,NA,NA
renv,a797ce1ebd98cb605237a6c5170bd33f,`renv` now includes compiled extensions on Linux + macOS. These extensions are primarily used to improve the performance of `renv::dependencies()` and other static analysis code. Support for Windows will come in a future release.,NA,NA,NA,NA
renv,ee2f32d3cb70672932a72e25bc084bf4,`renv` now assumes that Artifactory package repositories will use a CRAN-like layout of packages for packages in the archive. (#1996),NA,NA,NA,NA
renv,042ce71f5fca9e774ddcc28293a40dae,Fixed an issue where headers were not properly passed to `available.packages()` during `renv` bootstrap. (#1942),NA,NA,NA,NA
renv,b40a4e4dfe7bc8cc54be4f069767a799,Fixed an issue where `renv::restore()` could fail when using `pak` if one or more of the packages to be installed declared remotes that were incompatible with the package records recorded in the `renv` lockfile. (#1883),NA,NA,NA,NA
renv,718394810c2afd8d0653b67f4e76ff86,"On Linux, `renv` now emits a message on load if the R temporary directory is within a folder that has been mounted as 'noexec'. This message can be suppressed by setting the `RENV_TEMPDIR_NOEXEC_CHECK=FALSE` environment variable.",NA,NA,NA,NA
renv,b8be98c124514cb4581c526030f795b1,Fixed an issue where `renv` could erroneously create a binding called 'object' in the global environment on startup. (#2017),NA,NA,NA,NA
rstudioapi,b411819835825028a78b179c89880db1,"Added `getMode()`, which can be used to differentiate between Desktop and Server installations of RStudio. (#280)",NA,NA,NA,NA
keras,cc7bad19dd6f50b74ee06a889e42c188,"`install_keras()` changes: if a GPU is available, the default is now to install a CPU build of TensorFlow and a GPU build of JAX. To use a GPU in the current session, call `use_backend(""jax"")`.",NA,NA,NA,NA
keras,44bbd92f1c2250bf0d488f042439401d,"When using `get_file()` with `extract = TRUE` or `untar = TRUE`, the return value is now the path of the extracted directory, rather than the path of the archive.",NA,NA,NA,NA
keras,6c74feb2491ceffbc2969d96a9ec21c5,"Logging is now asynchronous in `fit()`, `evaluate()`, and `predict()`. This enables 100% compact stacking of `train_step` calls on accelerators (e.g. when running small models on TPU).",NA,NA,NA,NA
keras,6c74feb2491ceffbc2969d96a9ec21c5,"• If you are using custom callbacks that rely on `on_batch_end`, this will disable async logging. You can re-enable it by adding `self$async_safe <- TRUE` to your callbacks. Note that the TensorBoard callback is not considered async-safe by default. Default callbacks like the progress bar are async-safe.",NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,New bitwise operations:,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_and()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_invert()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_left_shift()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_not()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_or()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_right_shift()`,NA,NA,NA,NA
keras,e1750055b7f9d6379aeec3c951781390,• `op_bitwise_xor()`,NA,NA,NA,NA
keras,e1664a00e5488dc505dddf87f8010c1d,New math operations:,NA,NA,NA,NA
keras,e1664a00e5488dc505dddf87f8010c1d,• `op_logdet()`,NA,NA,NA,NA
keras,e1664a00e5488dc505dddf87f8010c1d,• `op_trunc()`,NA,NA,NA,NA
keras,e1664a00e5488dc505dddf87f8010c1d,• `op_histogram()`,NA,NA,NA,NA
keras,c864ef459d698a106bc147d75d8b284c,New neural network operation: `op_dot_product_attention()`,NA,NA,NA,NA
keras,b439c5f2b0f3b885e7a162c870adb079,New image preprocessing layers:,NA,NA,NA,NA
keras,b439c5f2b0f3b885e7a162c870adb079,• `layer_auto_contrast()`,NA,NA,NA,NA
keras,b439c5f2b0f3b885e7a162c870adb079,• `layer_solarization()`,NA,NA,NA,NA
keras,d5fca22d5c8f400c2650e67eeebc09bc,"New Model functions `get_state_tree()` and `set_state_tree()`, for retrieving all model variables, including trainable, non-trainable, optimizer variables, and metric variables.",NA,NA,NA,NA
keras,9bcb5c859075149b7530b4bbd70976f0,"New `layer_pipeline()` for composing a sequence of layers. This class is useful for building a preprocessing pipeline. Compared to a `keras_model_sequential()`, `layer_pipeline()` has a few key differences:",NA,NA,NA,NA
keras,9bcb5c859075149b7530b4bbd70976f0,"• It's not a Model, just a plain layer.",NA,NA,NA,NA
keras,9bcb5c859075149b7530b4bbd70976f0,"• When the layers in the pipeline are compatible with `tf.data`, the pipeline will also remain `tf.data` compatible, regardless of the backend you use.",NA,NA,NA,NA
keras,3e8a107af1aa6a32cde411c0074bfecd,New argument: `export_savedmodel(verbose = )`,NA,NA,NA,NA
keras,f6f3b6419ed8d5a21d4beee41884a81d,New argument: `op_normalize(epsilon = )`,NA,NA,NA,NA
keras,7c552d8d95b8d9663316e71437ad255a,Various documentation improvements and bug fixes.,NA,NA,NA,NA
rsconnect,833104c30e134226ebc8c57112f8b094,"Primary Quarto document detection only considers `.R`, `.Rmd`, and `.qmd` as end-of-file extensions. Previously, a file with `.R` elsewhere in its name, such as `.Rprofile`, was incorrectly considered. (#1106)",NA,NA,NA,NA
dbplyr,947fc66e87417c1c290ccf77cbbb8111,"New translations of clock function `date_count_between()` for SQL server, Redshift, Snowflake, Postgres, and Spark (@​edward-burn, #1495).",NA,NA,NA,NA
cli,bf430fa2e269b729b9673444e32dd9de,"New `hash_xxhash()` etc. functions to calculate the xxHash of strings, raw vectors, objects, files.",NA,NA,NA,NA
pillar,9f80faaf34a7e5dbd5aefcb7f11aff9d,Revdepcheck results.,NA,NA,NA,NA
scales,59dae55293c8e5460edc76a2dccbe78d,"`label_log()` has a `signed` argument for displaying negative numbers (@​teunbrand, #421).",NA,NA,NA,NA
scales,bd1624c27255f1c446bfb774be282438,The scales package now keeps track of known palettes. These can be retrieved using `get_palette()` or registered using `set_palette()` (#396).,NA,NA,NA,NA
scales,ac0f96b2157f6c8df77168e2fc73f4c6,New `label_date_short(leading)` argument to replace leading zeroes (#442),NA,NA,NA,NA
scales,7064f3433a0a2431f24f3c8166ddb4f6,`breaks_pretty()` will return the input limit when it has no range (#446),NA,NA,NA,NA
scales,8dcd4196afac9c174a984dfa2ea40be3,"`transform_exp()` now has more sensible breaks, available in `breaks_exp()` (@​teunbrand, #405).",NA,NA,NA,NA
waldo,e0f6996315080aedba7e9fbb59373a8e,"waldo no longer imports tibble and rematch2 (@​olivroy, #196).",NA,NA,NA,NA
waldo,2d3306021083ef6a7ea5726da5834ef0,waldo now requires R 4.0.0.,NA,NA,NA,NA
waldo,d2ab3314b8b629498a171c3e4d9d7c07,`compare()` can now distinguish between objects that differ only in the value of their S4 bit (#189).,NA,NA,NA,NA
waldo,9df036a34bdbe41729b00fc6c5c2fe2f,Double comparisons now always display one more digit than the absolute minimum necessary (#141).,NA,NA,NA,NA
waldo,480d64d126738c06933bf4e5575d2d9d,`as_map()` now preserves attributes (#185).,NA,NA,NA,NA
waldo,57a6fdac3dcfc04d0b2379e0a5956a38,waldo gains basic support for S7 objects (#200).,NA,NA,NA,NA
tidyverse,622e6dfe348f4580e6a6d80ba5cd8f81,tidyverse now requires R 4.0.0.,NA,NA,NA,NA
waldo,a483f8fe511fbd12e4cc9b139193b2ac,`compare()` now gives informative errors if you misspecify the argument types (#181),NA,NA,NA,NA
tidyverse,be24fb9a1ba1b99a6863ed3bb302f874,Drop modelr since it's superseded.,NA,NA,NA,NA
scales,766a7d10e1ba0fdb8a6b2242800974f0,New `label_glue()` labelling function for interpolated strings (#457).,NA,NA,NA,NA
scales,7c432b8849945a5d9c1312b72a02f2b0,`fullseq()` and by extension `breaks_width()` can now deal with unsorted ranges (#435).,NA,NA,NA,NA
scales,dc92e777563e58bff6373ef97daa24bd,New `label_dictionary()` for named lookup of labels (#458).,NA,NA,NA,NA
scales,dbf40f30dcc54ba448df78b04309f05b,New function `compose_label()` to chain together label formatting functions (#462),NA,NA,NA,NA
usethis,24cec79303ac8a2ef14c5b23643b8b64,`use_tidy_upkeep_issue()` now records the year it is being run in the `Config/usethis/upkeep` field in DESCRIPTION. If this value exists it is furthermore used to filter the checklist when making the issue.,NA,NA,NA,NA
rstudioapi,719a2cc3a98026107bc9f6b4e380fa04,Ensure a more appropriate error message is emitted for calls to `rstudioapi::getVersion()` and `rstudioapi::getMode()` outside of RStudio.,NA,NA,NA,NA
tidyselect,01ccf7c6d52fdc0d67cb0de3722caad9,"`eval_select(allow_empty = FALSE)` gains a new argument to yield a better error message in case of empty selection (@​olivroy, #327)",NA,NA,NA,NA
tidyselect,2b069d52eb3f7599cbe9ecee254e8dec,`eval_select()` and `eval_relocate()` gain a new `error_arg` argument that can be specified to throw a better error message when `allow_empty = FALSE`.,NA,NA,NA,NA
tidyselect,6b3273b97cbf3bdcfed1634a2e6d7153,"`eval_select()` and `eval_relocate()` throw a classed error message when `allow_empty = FALSE` (@​olivroy, #347).",NA,NA,NA,NA
waldo,c415f3398d0526a40808322bcc5c7e1d,"waldo no longer imports tibble and rematch2 (@​olivroy, #196), and requires R 4.0.0.",NA,NA,NA,NA
waldo,99eab8af2269964b3c6bb41c94860661,"`compare()` displays an extract digit in numeric comparisons, making it a bit easier to see the different (#141). It can also show numeric differences between int64 objects and integers/doubles when `tolerance` is set (#159).",NA,NA,NA,NA
waldo,c6a61daf6ca865d75312a58473fdbbbd,"`compare()` gains basic support for S7 objects (#200), and can now distinguish between objects that differ only in the value of their S4 bit (#189).",NA,NA,NA,NA
waldo,2246ff2fdaa6d02b70282f4c930b9d16,`compare(list_as_map = TRUE)` now preserves attributes (#185).,NA,NA,NA,NA
pointblank,36dd1e5d0189a9afee4c4e64d2f09af6,The new argument `na_rm` in `snip_list()` suppresses any `NA` values so that they won't included in the snippet's list of items (#547). (#556),NA,NA,NA,NA
pointblank,e9a853eae13e13d0be60b83d55a997d5,Improved the matching of rows between `agent$validation_step` and the rows of the agent report (#563). (#565),NA,NA,NA,NA
pointblank,9d0edce5583a0b42036b922fcc000c80,"Fixed bug with non-standard column names in some validation functions (#545, #546). (#555)",NA,NA,NA,NA
pointblank,eee48ab0d177a485d992259489312dc2,"Problems arising from comparing `columns` to a `value` of different class (for example, comparing a datetime column to a date value `Sys.Date()` instead of another datetime value `Sys.time()`) are now signalled appropriately at `interrogate()` (#536, #537). (#539)",NA,NA,NA,NA
pointblank,bdef6db59df37348a38663014b8daf02,"Replace uses of `crayon::make_style()` with `cli::make_ansi_style()`, removing the `crayon` dependency. (#559, thanks @​olivroy!)",NA,NA,NA,NA
pointblank,e98035d559e001716be86db6d37472d0,"Use `rlang::check_installed()` to perform checks of optional package installs. (#559, @​olivroy)",NA,NA,NA,NA
pointblank,0a1cd7f73c7ca8b51f8c6388b8daf036,"Modernized CI workflows with dedicated linting action. (#560, @​olivroy)",NA,NA,NA,NA
pointblank,9f94691e38390eace03adbedd709bde8,"Avoid unwanted equation formatting in agent report arising from arbitrary `""$""` characters (#561). (#562)",NA,NA,NA,NA
rsconnect,5cfa8e0c52f49f64bf284f1493b31dd5,Remove remaining directory layout validation check. (#1102),NA,NA,NA,NA
httr2,d296d21add52c32c070c0d6544ac568a,"New `req_auth_aws_v4()` signs request using AWS's special format (#562, #566).",NA,NA,NA,NA
httr2,58c8bea979cf39815f50ae03d4b85456,New `resp_stream_aws()` to retrieve AWS's special streaming format. With thanks to https://github.com/lifion/lifion-aws-event-stream/ for a simple reference implementation.,NA,NA,NA,NA
dbplyr,f7b4686b1ab3c7f21b3a80d743940820,"Translations for `as.double()` and `as.character()` with Teradata previously raised errors and are now correct (@​rplsmn, #1545).",NA,NA,NA,NA
reticulate,0f97650aa0d3dae75dd28c298972935a,`py_is_null_xptr()` and `[[` now load delayed modules (#1688).,NA,NA,NA,NA
rsconnect,239f506f94a47b63f02ff20b923d477a,"Use the repository name identified by renv when `available.packages()` does not enumerate the package, which occurs for archived packages. (#1110)",NA,NA,NA,NA
lintr,7aad69f5c8b497e362a9fee1403bba6f,"`commented_code_linter()` can detect commented code that ends with a pipe (#2671, @​jcken95)",NA,NA,NA,NA
tidyselect,7fa67712c75256cc335927e5e0bbfb6e,"`eval_select()` and `eval_relocate()` gain a new `error_arg` argument that can be specified to throw a better error message when `allow_empty = FALSE` or `allow_rename = FALSE` (@​olivroy, #327).",NA,NA,NA,NA
tidyselect,28dd0dd811910b00785fef6582a583ec,"`vars_pull()` now also warns when using `.data` (#335). Please use string-quotation programmatic usage, consistently with other tidyselect contexts.",NA,NA,NA,NA
tidyselect,378d2ac94e3d257116443b16280fa1a7,"`num_range()` now recycles its arguments using tidyverse rules (#355). In addition, it gains a `cross` argument that allows you to take the cartesian product of these arguments instead.",NA,NA,NA,NA
httr2,cb3ffe77ea4476265b9bc300bf5a2fa3,`req_cache()` no longer retrieves anything but `GET` requests from the cache.,NA,NA,NA,NA
slider,8a24e5434a6257cd472012a749cebb11,Removed usage of non-API `STRING_PTR()` (#209).,NA,NA,NA,NA
slider,3c89e3b0633e2234aadb7a3607e6fa94,"R \>=4.0.0 is now required, inline with tidyverse guidelines.",NA,NA,NA,NA
blob,5b21428e233b99f757ddb1425a18e09a,Trigger run (#32).,NA,NA,NA,NA
blob,0058927fdd19624ebd1601a07dedf1df,Use pkgdown branch (#31).,NA,NA,NA,NA
blob,0058927fdd19624ebd1601a07dedf1df,• ci: Use pkgdown branch,NA,NA,NA,NA
blob,0058927fdd19624ebd1601a07dedf1df,• ci: Updates from duckdb,NA,NA,NA,NA
hms,07e4b963f068554a94299d0678616abc,Trigger run (#124).,NA,NA,NA,NA
hms,07cc8ebd59e719ecdfe1b13d46b4ef7c,Use pkgdown branch (#123).,NA,NA,NA,NA
hms,07cc8ebd59e719ecdfe1b13d46b4ef7c,• ci: Use pkgdown branch,NA,NA,NA,NA
hms,07cc8ebd59e719ecdfe1b13d46b4ef7c,• ci: Updates from duckdb,NA,NA,NA,NA
pillar,7a8e8a2145fa38e818955592716a81fe,Trigger run (#675).,NA,NA,NA,NA
pillar,a763d7755916876d96684e5901036d97,Use pkgdown branch (#674).,NA,NA,NA,NA
pillar,a763d7755916876d96684e5901036d97,• ci: Use pkgdown branch,NA,NA,NA,NA
pillar,a763d7755916876d96684e5901036d97,• ci: Updates from duckdb,NA,NA,NA,NA
tibble,92a1f2a4ef6c6b91ccabcc560f7a75c7,Use pkgdown branch (#1604).,NA,NA,NA,NA
tibble,92a1f2a4ef6c6b91ccabcc560f7a75c7,• ci: Use pkgdown branch,NA,NA,NA,NA
tibble,92a1f2a4ef6c6b91ccabcc560f7a75c7,• ci: Updates from duckdb,NA,NA,NA,NA
tibble,92a1f2a4ef6c6b91ccabcc560f7a75c7,• ci: Trigger run,NA,NA,NA,NA
withr,4ce7fbb31e6d6fa765800be3cfeffc1c,"`local_language()` now never warns when set to `""C""` (#254). This is a cross-platform and silent way of disabling `gettext()` translations.",NA,NA,NA,NA
tidyselect,fa240152144b1e27dfbf03ec28fb9467,`matches()` now uses `perl = TRUE` by default. This makes it more consitent with regular expressions in stringr (#330).,NA,NA,NA,NA
tidyselect,e638142b43b8c8ea48759d709eca2157,`eval_select()` now fails when data has duplicate names and a character vector is provided as input (#346).,NA,NA,NA,NA
tidyselect,21de925b121beba1c44d33146aa3eaa5,New `args_tidy_select` documentation topic. Use the following tags to document tidyselect arguments in your functions:,NA,NA,NA,NA
tidyselect,21de925b121beba1c44d33146aa3eaa5,"```
#' @​param ... <[`tidy-select`][tidyselect::args_tidy_select]> *doc*
#' @​param sel <[`tidy-select`][tidyselect::args_tidy_select]> *doc*
```",NA,NA,NA,NA
ggplot2,d117de03282c66f6e5e3203a30afc17e,"Fixed bug where binned scales wouldn't simultaneously accept transformations and function-limits (@​teunbrand, #6144).",NA,NA,NA,NA
testthat,c43ea6ac256185666050a6264f810228,"`LANGUAGE` is now set to `""C""` in reprocucible environments (i.e. `test_that()` blocks) to disable translations. This fixes warnings about being unable to set the language to `""en""` (#1925).",NA,NA,NA,NA
shiny,25bcb70bcbb278cd1dfd99221312be69,Fixed a bug in `onBookmark` hook that caused elements to not be excluded from URL bookmarking. (#3762),NA,NA,NA,NA
reticulate,8e116617d7ed1bc6a098be639368e095,"The S3 classes for some (rarely encountered) Python objects have changed. Only Python objects with non-standard `__module__` values are affected. If a Python object's parent class's `__module__` attribute does not resolve to a string, reticulate:",NA,NA,NA,NA
reticulate,8e116617d7ed1bc6a098be639368e095,"• Attempts to resolve it from the class's class, if it's a metaclass.",NA,NA,NA,NA
reticulate,8e116617d7ed1bc6a098be639368e095,"• If no string can be resolved, reticulate no longer implicitly prepends 'python.builtin.' as the class prefix, instead it uses just the `__name__`. (See #1686 for more context)",NA,NA,NA,NA
reticulate,281c5e33ff464360e657311fde838bda,"Added support for Python 3.13. Note that Python 3.13 removed support for `classmethod` descriptors, which may affect the S3 class of some Python objects that use metaclass properties to resolve a class's `__module__` or `__name__` attribute. (#1686)",NA,NA,NA,NA
testthat,d086b38a2dc9a53c8e29d9942907da51,"`expect_condition()` and friends now include the `class` of the expected condition in the failure mesage, if used (#1987).",NA,NA,NA,NA
httr2,7a9120a4a0d513e891c6a022492c9c12,"Fix stochastic test failure, particularly on CRAN (#572)",NA,NA,NA,NA
testthat,e3f07f4b535ef683897b3e31cda4f2a9,"`expect_snapshot()` now strips line breaks in test descriptions (@​LDSamson, #1900).",NA,NA,NA,NA
testthat,92c9a3798dbf2a8147a95bb409e3fb0c,"`expect_snapshot()` now errors when called from a `test_that()` that has an empty description (2, #1980).",NA,NA,NA,NA
testthat,941874b932c6e1cb38a5288bfbe22cb1,"`skip_if_not_installed()` produces a clearer message (@​MichaelChirico, #1959).",NA,NA,NA,NA
testthat,03165998034de4fab031666df5407f9c,`with_mock()` and `local_mock()` have been unconditionally deprecated as they will no longer work in future versions of R (#1999).,NA,NA,NA,NA
ggplot2,d28d730cb1328842a056dc6a27caab5f,"`ggsave()` now offers to install svglite if needed (@​eliocamp, #6166).",NA,NA,NA,NA
ggplot2,f9a6824e43231f110db322b3c4d4666e,"(internal) Using `after_scale()` in the `Geom*$default_aes()` field is now evaluated in the context of data (@​teunbrand, #6135)",NA,NA,NA,NA
ggplot2,27ebc70008ebb084f62fed014dec000e,"Added `keep.zeroes` argument to `stat_bin()` (@​teunbrand, #3449)",NA,NA,NA,NA
testthat,50b960c0a202f2c9d03f308e128452ee,`expect_visible()` and `expect_invisible()` have improved failure messages (#1966).,NA,NA,NA,NA
renv,545aad5253528dc277b070446d627231,The performance of `renv`'s built-in JSON reader has been improved. (#2021),NA,NA,NA,NA
scales,021908491e8f0a1873ad283af7441ee8,"Palette function now have classes, attributes and coercion methods (@​teunbrand, #426).",NA,NA,NA,NA
scales,9e505220f42e6e104590ddbdfcde1552,"Added colour manipulation functions: `col_shift()`, `col_saturate()`, `col_darker()`, `col_lighter()` and `col_mix()` (@​teunbrand, #423)",NA,NA,NA,NA
dbplyr,3563999df9af7fef2b89a5148df6b73f,"`clock::add_years()` translates to correct SQL on Spark (@​ablack3, #1510).",NA,NA,NA,NA
dbplyr,8cfb481a745a63bd9791066a52638a94,"Tightened argument checks for Snowflake SQL translations. These changes should result in more informative errors in cases where code already failed; if you see errors with code that used to run without issue, please report them to the package authors (@​simonpcouch, #1554).",NA,NA,NA,NA
httr2,202b37863404f966d8ca0dd940064de2,New `oauth_cache_clear()` is an exported end point to clear the OAuth cache.,NA,NA,NA,NA
testthat,7421780898358d9a0a86d294c85e69c3,Require the latest version of waldo (0.6.0) in order to get the latest goodies (#1955).,NA,NA,NA,NA
testthat,c63d09ff3c7b7621ab6f9698b2e44825,`expect_no_*()` expectations no longer incorrectly emit a passing test result if they in fact fail (#1997).,NA,NA,NA,NA
testthat,59c487b66706e3c061f47cd99013e054,`expect_true()` and `expect_false()` give better errors if `actual` isn't a vector (#1996).,NA,NA,NA,NA
testthat,a8c295c060dd1c8d2eb9a05d4c4efa36,`expect_setequal()` correctly identifies what is missing where (#1962).,NA,NA,NA,NA
testthat,38703001765afd7e314059c160fd8698,New `expect_s7_class()` for testing if an object is an S7 class (#1580).,NA,NA,NA,NA
testthat,ad355b44640888dd8f62e8c33724dfd6,`expect_error()` and friends now error if you supply `...` but not `pattern` (#1932).,NA,NA,NA,NA
testthat,932fb732804b76760e12f979ef6021d2,"New `expect_no_failure()`, `expect_no_success()` and `expect_snapshot_failure()` provide more options for testing expectations.",NA,NA,NA,NA
testthat,0c93817e76b6b84acfbe780ee71c0d65,`expect_error()` and friends no longer give an uninformative error if they fail inside a magrittr pipe (#1994).,NA,NA,NA,NA
gt,c9cce08f6ef2fd12e76a11bd22ce3abc,"Interactive tables can support selection through the `ihtml.selection_mode` option. (@​jonthegeek, #1909)",NA,NA,NA,NA
gt,629c06c6c173cb1cf37f5496416c9313,"Tables embedded in Shiny apps with `gt_output()` and `render_gt()` with `ihtml.selection_mode` enabled also act as inputs, reporting the row numbers that are selected (#354, #1368). (@​jonthegeek, #1909)",NA,NA,NA,NA
waldo,e357942777ce9c97176f4fa5e19dfdc4,Only use special bit64 comparison if package is installed.,NA,NA,NA,NA
testthat,d7c2a93ce484cef1dfe1fe5c32a9d87f,`expect_s7_class()` tests if an object is an S7 class (#1580).,NA,NA,NA,NA
testthat,c69e2748d71866cb093b55378ade566e,"`expect_no_failure()`, `expect_no_success()` and `expect_snapshot_failure()` provide more options for testing expectations.",NA,NA,NA,NA
testthat,ca12ac0b75417f6827ef4c557c1bd78c,testthat now requires waldo 0.6.0 or later to access the latest features (#1955).,NA,NA,NA,NA
testthat,cb026e5e5f1ced40cec7a9a804c6ed13,`expect_error()` and friends now error if you supply `...` but not `pattern` (#1932). They no longer give an uninformative error if they fail inside a magrittr pipe (#1994).,NA,NA,NA,NA
testthat,807002151ea954cfc7096136c570069b,"`expect_snapshot()` now strips line breaks in test descriptions (@​LDSamson, #1900), and errors when called from a `test_that()` that has an empty description (2, #1980).",NA,NA,NA,NA
testthat,74b377a60a7bdd1e15d5fcba180f9be3,"`local_reproducible_output()` (used in `test_that()` blocks) now sets `LANGUAGE` to `""C""` instead of `""en""` to disable translations, avoiding warnings on some platforms (#1925).",NA,NA,NA,NA
testthat,290dcd3fa9d1c675ab35e2e7ba753988,"`skip_if_not_installed()` generates a clearer message that sorts better (@​MichaelChirico, #1959).",NA,NA,NA,NA
pkgdown,3ae20de4038be03b2362a2d0ef52aa5d,"Support ANSI sequences in `index.md` (@​krlmlr, #2787).",NA,NA,NA,NA
blob,311cd4eba8b55206f5502ed654a8e1c6,Trigger run (#33).,NA,NA,NA,NA
blob,311cd4eba8b55206f5502ed654a8e1c6,• ci: Trigger run,NA,NA,NA,NA
blob,311cd4eba8b55206f5502ed654a8e1c6,• ci: Latest changes,NA,NA,NA,NA
hms,7e497ed23ce7a93102d0f148fd0642cd,Trigger run (#126).,NA,NA,NA,NA
hms,7e497ed23ce7a93102d0f148fd0642cd,• ci: Trigger run,NA,NA,NA,NA
hms,7e497ed23ce7a93102d0f148fd0642cd,• ci: Latest changes,NA,NA,NA,NA
pillar,dd9c711b259dcf2513617e7065ed87fc,Trigger run (#676).,NA,NA,NA,NA
pillar,dd9c711b259dcf2513617e7065ed87fc,• ci: Trigger run,NA,NA,NA,NA
pillar,dd9c711b259dcf2513617e7065ed87fc,• ci: Latest changes,NA,NA,NA,NA
tibble,3299f9eada2bcf1735af679f2efc7557,Trigger run (#1606).,NA,NA,NA,NA
tibble,3299f9eada2bcf1735af679f2efc7557,• ci: Trigger run,NA,NA,NA,NA
tibble,3299f9eada2bcf1735af679f2efc7557,• ci: Latest changes,NA,NA,NA,NA
ggplot2,ebc12ffa6533f3f9b6d851f7c19f251a,"`geom_contour()` should be able to recognise a rotated grid of points (@​teunbrand, #4320)",NA,NA,NA,NA
ggplot2,65adfac66c6949a92e15681255f1b231,"`geom_errorbarh()` is deprecated in favour of `geom_errorbar(orientation = ""y"")` (@​teunbrand, #5961).",NA,NA,NA,NA
ggplot2,10bf627007910d72c2d554726bbaf689,"The helper function `is.waiver()` is now exported to help extensions to work with `waiver()` objects (@​arcresu, #6173).",NA,NA,NA,NA
ggplot2,7a662092f954dd168959f5f92d04573f,"Date(time) scales now throw appropriate errors when `date_breaks`, `date_minor_breaks` or `date_labels` are not strings (@​RodDalBen, #5880)",NA,NA,NA,NA
ggplot2,a8e774d7a0587ac37299bc8ab826ed76,"When discrete breaks have names, they'll be used as labels by default (@​teunbrand, #6147).",NA,NA,NA,NA
ggplot2,79f0a2c413b818c1fa004fd3991cb2f2,"`coord_sf()` no longer errors when dealing with empty graticules (@​teunbrand, #6052)",NA,NA,NA,NA
httr2,7d5426775ac63afc4a53b97fd5b2eb9e,`req_perform_promise()` upgraded to use event-driven async based on waiting efficiently on curl socket activity (#579).,NA,NA,NA,NA
ggplot2,b63b638537b9c311438f0d7f7f9e83b0,"Custom and raster annotation now respond to scale transformations, and can use AsIs variables for relative placement (@​teunbrand based on @​yutannihilation's prior work, #3120)",NA,NA,NA,NA
cli,8ccf28d48cf34be88173243a0869a84d,"The format of the URI part of ""run"", ""help"" and ""vignette"" hyperlinks can now be configured via options and env vars (@​jennybc, #739).",NA,NA,NA,NA
renv,df74f963376a40d335ca080c165d0ead,`renv` now infers a dependency on `rmarkdown` and `knitr` for R scripts which include YAML front-matter. (#2023),NA,NA,NA,NA
renv,376af92e71237b1265fd0a0505b5e82b,"`renv::run()` gains the `args` parameter, which can be used to pass command-line arguments to a script. (#2015)",NA,NA,NA,NA
reticulate,e97fc505dedff5451ba0f3ce5d00e34f,"Resolved an issue where `py_discover_config()` attempted to detect Windows App Store Python installations. These are now excluded from discovery by both `py_discover_config()` and `virtualenv_starter()` (#1656, #1673).",NA,NA,NA,NA
reticulate,c4321663a7f20d759c300ca7ac774bc1,Resolved a segfault in RStudio when rapidly switching between R and Python chunks in a Quarto document (#1665).,NA,NA,NA,NA
reticulate,891025352c600756c86de59e9984b52e,"Added Positron support for the Variables Pane and `repl_python()` (#1692, #1641, #1648, #1658, #1681, #1687).",NA,NA,NA,NA
httr2,3408367fb816210c1e82494d8cf93b52,"New `req_oauth_token_exchange()` and `oauth_flow_token_exchange()` functions implement the OAuth token exchange protocol from RFC 8693 (@​atheriel, #460).",NA,NA,NA,NA
plumber,83aab442f6eb8987f35805b8c3126009,Added support for graphic devices provided by ragg and svglite (@​thomasp85 #964),NA,NA,NA,NA
fontawesome,7dfb176725546c25d48edf83e65a7d6a,Updated icon set to that of Font Awesome 6.5.2. (#119),NA,NA,NA,NA
fontawesome,80e6b6cd2d2460e98d53e7e0bcd9694f,Added page on pkgdown site that contains a table showing all of the icons available in the package. (#113),NA,NA,NA,NA
fontawesome,ff469df88f64a87b6e784db35f808a25,The `fa()` function now allows percentage values to be used as `height` and `width` args (#117). (#125),NA,NA,NA,NA
fontawesome,5872758bb492cc7ad063cbcc02fccd01,"When using `fa_i()`, the `class` value is appended when a fully-qualified `name` is used (#122. (#123, thanks @​averissimo!)",NA,NA,NA,NA
blob,faf76a91112d306fb4ef82333218dade,Use stable pak (#34).,NA,NA,NA,NA
hms,7c52112238c2f190573a6d99fa90211b,Use stable pak (#129).,NA,NA,NA,NA
pillar,46937ece14c57fad4fce50491381e923,Use stable pak (#677).,NA,NA,NA,NA
tibble,cb946574498258d4faba884aacae0b65,Use stable pak (#1607).,NA,NA,NA,NA
rsconnect,6f96cf14580eb1e1984fa56d8c8fb5e7,"Avoid ""legacy"" time zone names in tests, as they are not available by default in all environments. Addresses CRAN test failures. (#1115)",NA,NA,NA,NA
renv,48fe8ce1d7d98901b6be57bb07e6619b,Fixed an issue where `renv` library paths were not properly reset following a suspend / resume in RStudio Server. (#2036),NA,NA,NA,NA
renv,9d24f7fb013740c68020a025dfe2d0d2,`renv` now supports updating of currently-installed packages via `renv::install()` when configured to use `pak`. (#2037),NA,NA,NA,NA
renv,7d86b7a01b93073aa4e77ccb3f278b55,Fixed an issue where `renv` erroneously reported that installed packages were cached when the cache was not writable. (#2041).,NA,NA,NA,NA
blob,2f3c9ed8481cd1e618bff37a264d1bdd,Correctly detect branch protection (#35).,NA,NA,NA,NA
tibble,3d3280734443408702301ed95cafc187,Correctly detect branch protection (#1608).,NA,NA,NA,NA
gt,83b0d7e3c13665e60dc979b16eb068d0,"Significantly faster rendering of certain large tables, by optimizing the internal `rownum_translation()` utility. (@​magnusdv, #1924)",NA,NA,NA,NA
pillar,3b2d6f0c47605935d4498705ba71e533,New `tbl_nrow()` to support lazy data frames (#679).,NA,NA,NA,NA
pillar,b81b184a465b7e9525eae468b54fd90c,Fix vignette building if tibble is missing (#681).,NA,NA,NA,NA
pillar,7791956e87857d9c719c755e1404381d,Refactorings to improve duckplyr support (#682).,NA,NA,NA,NA
pillar,8fda3aad38b818d6608f87d3dd644849,Use styler from PR.,NA,NA,NA,NA
pillar,5f490344e4568edf02796d86ea1307a5,Correctly detect branch protection (#678).,NA,NA,NA,NA
blob,f93f571e199d1efdddf168edcf727dba,Need to install R on Ubuntu 24.04 (#38).,NA,NA,NA,NA
blob,5fa255fc57ffc61141957b0e53a7d64a,Use Ubuntu 24.04 and styler PR (#36).,NA,NA,NA,NA
pillar,a31da533fe7eee0f86496270afec45f9,Need to install R on Ubuntu 24.04 (#689).,NA,NA,NA,NA
pillar,f009a16ae34d05fa5d6bea5bd84ed1aa,Use Ubuntu 24.04 and styler PR (#687).,NA,NA,NA,NA
tibble,f628bf0985dd71169daebbae01c95d42,Need to install R on Ubuntu 24.04 (#1612).,NA,NA,NA,NA
tibble,88392639d097b672ce7e81b4607eb848,Use Ubuntu 24.04 and styler PR (#1610).,NA,NA,NA,NA
usethis,4d2fb3673c0b0492b143b706b0d91316,"`use_vignette()` and `use_article()` now support Quarto. The `name` of the new vignette or article can optionally include a file extension to signal whether `.Rmd` or `.qmd` is desired, with `.Rmd` remaining the default for now. Thanks to @​olivroy for getting the ball rolling (#1997).",NA,NA,NA,NA
usethis,4568808b40ec6804ca80f2d636736300,"`use_data()` defaults to serialization version 3 (@​laurabrianna, #2044).",NA,NA,NA,NA
usethis,4cd925ea697fe3a75a16c5b826c8f8d0,"`use_package()` can lower a minimum version requirement (@​jplecavalier, #1957).",NA,NA,NA,NA
usethis,b311f466488dacaed28ff489e59a9a9f,"`use_release_issue()` only suggests doing reverse dependency checks if there are, in fact, reverse dependencies (#1817, @​seankross).",NA,NA,NA,NA
pkgdown,f19f70589a9afabd15452ecaa1fb822c,"The language of the site is set from the first `Language:` in the `DESCRIPTION` if it is available and no other language is specified (@​jonthegeek, #2808).",NA,NA,NA,NA
bslib,a4dc734c44e1ccf8e00387b15f6bdc3f,Optimized for better performance the internal functions that compile Sass to call the `color-contrast()` algorithm. (#1140),NA,NA,NA,NA
DT,5e635a0a143a63f8a737a7cbae302d37,"Added `lazyRender` parameter to `DT::datatable()`, which gives the option for the table to be rendered immediately rather than waiting for it to become visible (thanks, @​Mosk915, #1156).",NA,NA,NA,NA
blob,213c6be938a781167d09bd977b69b6f9,Use styler from main branch (#39).,NA,NA,NA,NA
pillar,6adf5d6086a34b5d496c3447d643c5a1,Use styler from main branch (#691).,NA,NA,NA,NA
tibble,518f3995661132c3a56b64aec3b48bda,Use styler from main branch (#1613).,NA,NA,NA,NA
ggplot2,af3ff13dbd12c7c7d2b7795c5b0f80a0,"The following methods have been deprecated: `fortify.lm()`, `fortify.glht()`, `fortify.confint.glht()`, `fortify.summary.glht()` and `fortify.cld()`. It is recommend to use `broom::augment()` and `broom::tidy()` instead (@​teunbrand, #3816).",NA,NA,NA,NA
promises,04152f95da3a94d8cb8c4ec659a5df78,Fixed bug where promise domains were forgotten when handlers were registered from within other handlers. (#110),NA,NA,NA,NA
pkgdown,4632db68ee167a20684f8cbb26f7bf3f,Links to favicons in page headers were updated to reflect changes to https://realfavicongenerator.net/ (#2804). Favicons should be re-generated by manually removing the `pkgdown/favicon` directory and then running `pkgdown::build_favicons()`.,NA,NA,NA,NA
blob,858209e51183c2770b27886e11a89fc2,Explicit permissions (#40).,NA,NA,NA,NA
pillar,ce18a03bb723a16e86151cbe95141672,Explicit permissions (#693).,NA,NA,NA,NA
tibble,543a53853c37fccb74f88ac04493ea1a,Explicit permissions (#1614).,NA,NA,NA,NA
ggplot2,8e2795f3b58939ae9610b3dda24f1627,"In non-orthogonal coordinate systems (`coord_sf()`, `coord_polar()` and `coord_radial()`), using 'AsIs' variables escape transformation when both `x` and `y` is an 'AsIs' variable (@​teunbrand, #6205).",NA,NA,NA,NA
promises,d69028d40d0979d4029ee3cd87c4b12e,"Fixed bug introduced in 1.3.1, where promise domains that are active at promise resolution time stay active during handler callback, even if they weren't active when the handler was registered. This was causing stack overflow for long promise chains with many active promise domains. (#115)",NA,NA,NA,NA
blob,3133c5c66a78199f1b80da3f2db87b34,Ignore errors when removing pkg-config on macOS (#41).,NA,NA,NA,NA
pillar,6e982d51fdb6e161a56e900a0812020e,Ignore errors when removing pkg-config on macOS (#695).,NA,NA,NA,NA
tibble,7523e05357e7eaf808a49877c42addfb,Ignore errors when removing pkg-config on macOS (#1615).,NA,NA,NA,NA
pkgdown,a15b541d725ac850039e02e444d62bcf,New `clean_site(force = TRUE)` for cleaning of `docs/` regardless of whether it was built by pkgdown (#2827).,NA,NA,NA,NA
lubridate,e0a497317ad5f86ac5f07193e3ccb57b,Don't use CET and EST as timezones to accomodate the upgrade of tzdata in the R-devel,NA,NA,NA,NA
ggplot2,6d8a76acb2a8275f951a78c5ebfc519d,Added `theme_transparent()` with transparent backgrounds (@​topepo).,NA,NA,NA,NA
ggplot2,ca680dad6f1f0ed25ce645145ac5feca,"Binned guides now accept expressions as labels (@​teunbrand, #6005)",NA,NA,NA,NA
ggplot2,1f220f82d6ab1ba434fa3c9372a3392a,(internal) `Scale$get_labels()` format expressions as lists.,NA,NA,NA,NA
ggplot2,3ec9ecefb3844ec3ced4312e6f3bf434,"New theme elements `palette.{aes}.discrete` and `palette.{aes}.continuous`. Theme palettes replace palettes in scales where `palette = NULL`, which is the new default in many scales (@​teunbrand, #4696).",NA,NA,NA,NA
ggplot2,e647f9a7778fffb05d40113e73afb535,"Fixed bug in out-of-bounds binned breaks (@​teunbrand, #6054)",NA,NA,NA,NA
ggplot2,e0cf4ee4d8914c1d407cb117fabfa0d0,"`guide_axis()` no longer reserves space for blank ticks (@​teunbrand, #4722, #6069).",NA,NA,NA,NA
ggplot2,76b09aa7fe183fc14e5967aebd49b5b2,"New argument `labs(dictionary)` to label based on variable name rather than based on aesthetic (@​teunbrand, #5178)",NA,NA,NA,NA
DT,9e6f85334bb145d177c21615f15ee5ee,"Moved **httpuv** from `Imports` to `Suggests` in `DESCRIPTION` (thanks, @​MichaelChirico, #1159).",NA,NA,NA,NA
bslib,d4d00c80c8f5228420b7123a533aea6f,"The navbar-related style options of `page_navbar()` and `navset_bar()` have been consolidated into a single `navbar_options` argument that pairs with a new `navbar_options()` helper. Using the direct `position`, `bg`, `inverse`, `collapsible`, and `underline` arguments will continue to work with a deprecation message. (#1141) Related to the above change, `navset_bar()` now defaults to using `underline = TRUE` so that both `page_navbar()` and `navset_bar()` use the same set of default `navbar_options()`.",NA,NA,NA,NA
lintr,c2b0556ec8c55011b94a9f787808273e,"Some code with parameters accepting regular expressions is less strict about whether there are capture groups (#2678, @​MichaelChirico). In particular, this affects `unreachable_code_linter(allow_comment_regex=)` and `expect_lint(checks=)`.",NA,NA,NA,NA
ggplot2,5634f74d6713da183cffd77def057927,"Reversal of a dimension, typically 'x' or 'y', is now controlled by the `reverse` argument in `coord_cartesian()`, `coord_fixed()`, `coord_radial()` and `coord_sf()`. In `coord_radial()`, this replaces the older `direction` argument (#4021, @​teunbrand).",NA,NA,NA,NA
ggplot2,ac3a0bb777978cc9c9a8ddcc05b3438c,`coord_radial()` displays minor gridlines now (@​teunbrand).,NA,NA,NA,NA
ggplot2,47dc82375e7ceeb6958d26a52d77de60,(internal) `continuous_scale()` and `binned_scale()` sort the `limits` argument internally (@​teunbrand).,NA,NA,NA,NA
ggplot2,90e03f46bbc94dc1d3356b2aa28591a5,"Theme margins can have NA-units to inherit from parent elements. The new function `margin_part()` has NA-units as default (@​teunbrand, #6115)",NA,NA,NA,NA
ggplot2,3ad5e8b70fe80dc3c1650da5e00e4778,New `margin_auto()` specification for theme margins.,NA,NA,NA,NA
ggplot2,28911ffc0b09255c76218ee68afc223d,"(internal) removed barriers for using 2D structures as aesthetics (@​teunbrand, #4189).",NA,NA,NA,NA
ggplot2,eebde2a03c755b51b9808e37ca83c88a,"`geom_abline()` clips to the panel range in the vertical direction too (@​teunbrand, #6086).",NA,NA,NA,NA
ggplot2,5987453006d781fce4e05e1d1f696017,"New stat: `stat_manual()` for arbitrary computations (@​teunbrand, #3501)",NA,NA,NA,NA
ggplot2,dde5a35c7e7831b84cead30c1ec8a7a5,"Added `panel.widths` and `panel.heights` to `theme()` (#5338, @​teunbrand).",NA,NA,NA,NA
shiny,0590a59dd07312458074bbb519c70fe5,"Fixed a bug with stack trace capturing that caused reactives with very long async promise chains (hundreds/thousands of steps) to become extremely slow. Chains this long are unlikely to be written by hand, but {coro} async generators and {elmer} async streaming were easily creating problematically long chains. (#4155)",NA,NA,NA,NA
lubridate,c8b1004670625964316b13bfa6109688,"#1170 Fix `as_datetime` to parse partial timestamps (ex. ""2009-01-01 20:30"") just as as.POSIXct does.",NA,NA,NA,NA
renv,ca10c6f1bad45238b15f16878fad1e2e,Fixed an issue where ignore rules of the form `!*.*` were not parsed and handled correctly during dependency discovery. (#2052),NA,NA,NA,NA
ggplot2,f42842c6f8723326db20f86b63f2896a,"`guide_*()` can now accept two inside legend theme elements: `legend.position.inside` and `legend.justification.inside`, allowing inside legends to be placed at different positions. Only inside legends with the same position and justification will be merged (@​Yunuuuu, #6210).",NA,NA,NA,NA
renv,88ccf9e29cadb63c8620e2c12670e301,Fixed an issue where `renv::init()` could fail when using named remotes in a DESCRIPTION file's `Remotes:` field. (#2055),NA,NA,NA,NA
shiny,22206a971dc75a86257380b7ed2debfa,"Improve collection of deep stack traces (stack traces that are tracked across steps in an async promise chain) with `coro` async generators such as `elmer` chat streams. Previously, Shiny treated each iteration of an async generator as a distinct deep stack, leading to pathologically long stack traces; now, Shiny only keeps/prints unique deep stack trace, discarding duplicates. (#4156)",NA,NA,NA,NA
shiny,51c35ddd3cdf51e5cfcd13717adcf691,Added an example to the `ExtendedTask` documentation. (@​daattali #4087),NA,NA,NA,NA
shiny,de28d4bec3e3d6917b55fe95dafe9cc7,Updating the choices of a `selectizeInput()` via `updateSelectizeInput()` with `server = TRUE` no longer retains the selected choice as a deselected option if the current value is not part of the new choices. (@​dvg-p4 #4142),NA,NA,NA,NA
renv,36e37ebd06b85a9e0ad16d84cd4e89e5,`renv::use()` no longer re-installs packages which are already installed and compatible with the requested packages. (#2044),NA,NA,NA,NA
shiny,2772f432e44419e94480fa610ecb3d95,"Duplicate input and output IDs -- e.g. using `""debug""` for two inputs or two outputs -- or shared IDs -- e.g. using `""debug""` as the `inputID` for an input and an output -- now result in a console warning message, but not an error. When `devmode()` is enabled, an informative message is shown in the Shiny Client Console. We recommend all Shiny devs enable `devmode()` when developing Shiny apps locally. (#4101)",NA,NA,NA,NA
blob,6d72502b639ceacd38517a47f3131e6a,Use larger retry count for lock-threads workflow (#42).,NA,NA,NA,NA
hms,103e91a8dde1b45d6ff3e1faa92edda1,"Sub-second value parsing accurately (@​eitsupi, #127, #128).",NA,NA,NA,NA
hms,d61ebd7df6a4a6c4719b1a164141bc2b,Use larger retry count for lock-threads workflow (#152).,NA,NA,NA,NA
hms,e79d659c6bf8c614ae9bd9a1ebe43806,Ignore errors when removing pkg-config on macOS (#142).,NA,NA,NA,NA
hms,61fc798a11b41569c2396ea7ef134e1e,Explicit permissions (#140).,NA,NA,NA,NA
hms,f7f4b3c0aae4c98fe30225116ec1be85,Use styler from main branch (#138).,NA,NA,NA,NA
hms,a1f643ca16dbbf8094c17290664e6631,Need to install R on Ubuntu 24.04 (#136).,NA,NA,NA,NA
hms,f3e9a798bf4ba593c463e4ee04914173,Use Ubuntu 24.04 and styler PR (#134).,NA,NA,NA,NA
hms,b628a18f886a7a3685f0afab88f17571,Correctly detect branch protection (#130).,NA,NA,NA,NA
hms,594039a2ec6f7cc7fbd03e93ca390ccf,PLACEHOLDER https://github.com/tidyverse/hms/pull/16 (#16).,NA,NA,NA,NA
pillar,c04b0e4f601ff8fde28f2771779d2cc7,Use larger retry count for lock-threads workflow (#701).,NA,NA,NA,NA
tibble,93071940224ffe3261eafe00016e55d3,Use larger retry count for lock-threads workflow (#1616).,NA,NA,NA,NA
blob,0c3f063480edcf7759a109d0b95f3f19,Fetch tags for fledge workflow to avoid unnecessary NEWS entries (#43).,NA,NA,NA,NA
hms,d6ea5dfb6312d4260ba6061b9cf64d11,Fetch tags for fledge workflow to avoid unnecessary NEWS entries (#154).,NA,NA,NA,NA
pillar,85730dc93fd038c71aabe36854107ac7,Fetch tags for fledge workflow to avoid unnecessary NEWS entries (#703).,NA,NA,NA,NA
tibble,e85c8bfc03dc97981c65ff26f306301e,Fetch tags for fledge workflow to avoid unnecessary NEWS entries (#1617).,NA,NA,NA,NA
blob,cf7675f3f4500ea0ce1b222e5c3b6374,Avoid failure in fledge workflow if no changes (#44).,NA,NA,NA,NA
duckplyr,ca68724d4ea09b73d046724c97c568f0,`check_duplicate_names()` (#317).,NA,NA,NA,NA
duckplyr,f8e64f567e695778f690bb2e3d0486a8,Check perfect roundtrip for constants again (#307).,NA,NA,NA,NA
duckplyr,e5f233fb7eb8f63ae58e5c606d8f0edb,Correctly handle missing values in `if_else()`.,NA,NA,NA,NA
duckplyr,cbac94cd33a2085dcc468a268ba82e4f,"Use relational operators from the rfuns extension as aliases, not as macros (#291).",NA,NA,NA,NA
duckplyr,62dd37a3329b932777d48b0678845ae4,"Compute ptype only for join columns in a safe way without materialization, not for the entire data frame (#289).",NA,NA,NA,NA
duckplyr,1f746f1812aa9915ffbd4e846bb81658,Edge case for `count()` (#282).,NA,NA,NA,NA
duckplyr,64a52f61409d352e2228ed20b6802b78,"Attaching duckplyr via `library()` overwrites all dplyr methods again (#217, #276).",NA,NA,NA,NA
duckplyr,10a0701f17bbca6ee71e37344ac850cc,"`expr_scrub()` can handle function-definitions (@​toppyy, #268, #271).",NA,NA,NA,NA
duckplyr,ab2521d29bac695023a0d7f3d19c1d8f,`mutate()` constructs intermediate data frames for each new variable (#332).,NA,NA,NA,NA
duckplyr,0a17f9a9a2df5187aeac11b22f7d9563,Harden telemetry code against invalid arguments (#321).,NA,NA,NA,NA
duckplyr,0c20d7c12e9944fcf9edf923a3c50bb5,`across()` tweaks (#318).,NA,NA,NA,NA
duckplyr,457400549c47da57b514563a57965930,Fall back to dplyr when passing `multiple` with joins (#323).,NA,NA,NA,NA
duckplyr,8da5278c4899150baac87db8e99df5c6,Limit number of items that can be handled with `%in%` (#319).,NA,NA,NA,NA
duckplyr,2aafdaef7a480bda5e70c2b1ef122f0c,Use Ubuntu noble for touchstone (#314).,NA,NA,NA,NA
duckplyr,112bb52a23008146b6cf2423668f6cba,Enable touchstone (#313).,NA,NA,NA,NA
duckplyr,6234f772f4eda45cd60cca699b63bfab,Use touchstone for continuous benchmarking (#311).,NA,NA,NA,NA
duckplyr,d6e83e09faa6d03e743607b26d1acab6,More complete `across()` (#306).,NA,NA,NA,NA
duckplyr,b70fd62a63ac95526196a2b6c547b23e,Add more tests from dplyr (#305).,NA,NA,NA,NA
duckplyr,ecfda7084fb6758db71af57fa44fc143,Partial support for `across()` in `mutate()` and `summarise()` (#296).,NA,NA,NA,NA
duckplyr,b992432dfc7e11f0fb510e88d07fb581,Rely on duckdb to check const feasibility (#293).,NA,NA,NA,NA
duckplyr,e991ded3f3b54272a9657a2d88b1a1ba,Allow R 4.0 (#285).,NA,NA,NA,NA
duckplyr,aff28b289bd90f03996e4c681099acec,"Avoid resetting expression depth, now in duckdb (#280).",NA,NA,NA,NA
duckplyr,887e8311c667825698e6f1de6775ae05,Record and replay functionality now includes the top-level function being called (#273).,NA,NA,NA,NA
duckplyr,6bf6a627f1fd041516e49ebbd4e67bdf,"Set the `duckdb.materialize_message` option on load only if not previously specified (@​stefanlinner, #220).",NA,NA,NA,NA
duckplyr,c33371156cbbf6a07908b55268246b89,Configure IDE.,NA,NA,NA,NA
duckplyr,9e42052c533b4b1b570050f0b55857fe,"Add lifecycle badges (#350, #353).",NA,NA,NA,NA
duckplyr,de6c6ec7d8787fa940bc3774efb7056a,Comment design choice.,NA,NA,NA,NA
duckplyr,58671b98a3ef471f06063bbc84cee35b,"`explain()` returns the input, invisibly (#331).",NA,NA,NA,NA
duckplyr,b480653b1c4e7789b610c35abe03e1b7,Sync (#329).,NA,NA,NA,NA
duckplyr,c1c8d38007dc21ddc83fefe0e5b6dc67,Nicer fallback error when function cannot be translated (#324).,NA,NA,NA,NA
duckplyr,4edee5a9cf74a05d1545006e2347e572,Fix glue syntax.,NA,NA,NA,NA
duckplyr,34ba4d7c5cd8ba7181c0b742bae6e8f6,Tweak workflow (#316).,NA,NA,NA,NA
duckplyr,d2003d7737910caa3cdf83bf436d8313,Test touchstone (#315).,NA,NA,NA,NA
duckplyr,2d1604465af2a81906dd3df4b5ba16e4,Avoid copying copy.,NA,NA,NA,NA
duckplyr,187cb75747ca526d5dd7d8bee2859ddd,Sync tests with dplyr dev version (#304).,NA,NA,NA,NA
duckplyr,d08660ff1ea1bcb635b0a77d94844d1f,Update snapshots.,NA,NA,NA,NA
duckplyr,05d9aab7088c630baf82d59df0c29cad,Fix sync (#290).,NA,NA,NA,NA
duckplyr,34e738f7601767e73ed32766a6335be7,Apply styler (#281).,NA,NA,NA,NA
duckplyr,b2a1ef274eceb4c4fa9dfd98709f05f2,Sync patches (#277).,NA,NA,NA,NA
duckplyr,8a588517ab20707daed24667544538ef,Fix typo.,NA,NA,NA,NA
duckplyr,3ef042d169ec1efb3db68248b628e8db,Sync docs.,NA,NA,NA,NA
duckplyr,bbf05120b66006e7128a541b06e19325,Sync docs branch (#266).,NA,NA,NA,NA
duckplyr,adfdc83582c9f4ba129d91afd8ba670f,Avoid failure in fledge workflow if no changes (#368).,NA,NA,NA,NA
duckplyr,72c75f2b12bf58b3a7f5c825013199ec,Fetch tags for fledge workflow to avoid unnecessary NEWS entries (#366).,NA,NA,NA,NA
duckplyr,1db397a409319dff301dab2c5d774450,Use styler PR (#362).,NA,NA,NA,NA
duckplyr,a45bcd7f1bde7133db8e13b25a78fe94,Run in Ubuntu Noble to support r-universe binaries (#352).,NA,NA,NA,NA
duckplyr,25a1b2fa41170887df2e9044e23787eb,Correctly detect branch protection (#345).,NA,NA,NA,NA
duckplyr,48a63770459db9e57a348fee842b9830,Use stable pak (#344).,NA,NA,NA,NA
duckplyr,c98d1e79a9ed04d6da1de8bf15a12650,Latest changes (#328).,NA,NA,NA,NA
duckplyr,e7349c09cf2b7090662f21dc7ebf14ba,Revert to status workflow (#326).,NA,NA,NA,NA
duckplyr,3d88e5e18d0969cdb990c47f653d7754,Trigger run (#288).,NA,NA,NA,NA
duckplyr,d53ed9166375e0d93ec37c78bbc067ce,Trigger run (#287).,NA,NA,NA,NA
duckplyr,2e5cf8b43ae40db0cdd223783cd16fd3,Updates from duckdb (#286).,NA,NA,NA,NA
duckplyr,204788937b8f265e8312db7419e99c33,Install local package for pkgdown builds (#258).,NA,NA,NA,NA
duckplyr,1dbcb0c5de4face72cce011c1165ccaa,Fix condition for fledge workflow (#248).,NA,NA,NA,NA
duckplyr,e03605ecd955ba1434e7f254ec09422d,Use curl.,NA,NA,NA,NA
duckplyr,b2078ae75a62c6f544a771f3b1f5835a,Use gh to download artifact.,NA,NA,NA,NA
duckplyr,009013632ffb71659351fffe4ecb7e85,Don't need to unzip artifact.,NA,NA,NA,NA
duckplyr,9054847d7dfd2eb9a174779c679f2b4d,Restrict commit again to own PRs.,NA,NA,NA,NA
duckplyr,5b1dd00ac2070575d842e84ac24bff9a,"Avoid `\code{}` (#340, #354).",NA,NA,NA,NA
duckplyr,3081ab81888df85d9859c8c16f66c7e5,"Include section on code generation in contributing guide (#24, #348).",NA,NA,NA,NA
duckplyr,1c16b8f606c2415d1927a5dfb985dfc0,Update README.,NA,NA,NA,NA
duckplyr,39054c09e7a0d087afdded8bc9d1f73e,Sync.,NA,NA,NA,NA
duckplyr,b0beda5690914b69cf272355d4e653b4,Sync.,NA,NA,NA,NA
duckplyr,32f0e411bb087a99849f6f77d013a5f0,Sync.,NA,NA,NA,NA
duckplyr,e701c212b82704d1dce32b5a41ebd3ca,Move logo.,NA,NA,NA,NA
duckplyr,40e7c6424426be836a38b8ab75f5fc45,"Need file, not link, for logo on GitHub.",NA,NA,NA,NA
duckplyr,04a74c7b93e1eee2c376231ae27db53d,Fix logo on GitHub.,NA,NA,NA,NA
duckplyr,9b52753d4fadb84309ca0f0fe677d10b,Use downlit only for GitHub README (#262).,NA,NA,NA,NA
duckplyr,74d1eadcf878297cc4309f6d889b60eb,"Add logo to README (@​luisDVA, #259).",NA,NA,NA,NA
duckplyr,a03a9132fd577b2f0a5dba8d4e7917da,"Fix cut-and-paste typo (@​joakimlinde, #240).",NA,NA,NA,NA
duckplyr,d83c3b4c28d212d48d20d2224cb6be47,"Enable plausible (#250, #251).",NA,NA,NA,NA
duckplyr,24ae130cdd736f2d2309c7c6462fbca8,Use new URL for pkgdown (#247).,NA,NA,NA,NA
duckplyr,709ef62deeac1d886ef603e1d5673fc7,Snapshot updates for rcc-smoke (null) (#356).,NA,NA,NA,NA
duckplyr,6b6a246d52c146eccf0e346a62d45174,Add snapshot instead of output (#346).,NA,NA,NA,NA
duckplyr,b4929c12c74cab59ce11b0653ef1d574,Snapshot updates for rcc-smoke (null) (#302).,NA,NA,NA,NA
duckplyr,8dc7365e2ae7dc7c11029f8b3419a9b7,Test telemetry code (#275).,NA,NA,NA,NA
duckplyr,37f4ec856b3ce06de59bfa8afcee9bfe,Adapt tests to duckdb release candidate (#261).,NA,NA,NA,NA
hms,687f0666f1f916cbc8ae7ec70fd26a47,Avoid failure in fledge workflow if no changes (#156).,NA,NA,NA,NA
pillar,fd0f7b70b76d792f59a5203ebb917213,Avoid failure in fledge workflow if no changes (#705).,NA,NA,NA,NA
tibble,f95c9cf67ee11665e90df4ef209b05f9,Avoid failure in fledge workflow if no changes (#1618).,NA,NA,NA,NA
gt,6ce2bec31981c41a0953beee15fbfa17,"Improved width calculations in `as_gtable()` (@​teunbrand, #1923)",NA,NA,NA,NA
renv,ac5288962c82aadeab827acdb3cc7a30,Fixed an issue where `renv` could fail to check for updates for packages installed using `pak` without an explicit branch specified. (#2040),NA,NA,NA,NA
shiny,4de761e90d0ff7f9e4a5a0774f2509cb,Fixed a bug where stack traces from `observeEvent` were being stripped of stack frames too aggressively.,NA,NA,NA,NA
pkgdown,cd7c80aced81dee9f3c5933422202206,"Articles (i.e., vignettes in `vignettes/articles`, created by `usethis::use_article()` and available on pkgdown sites but not included in a built package) have improved test cases (thanks to @​venpopov and @​ethanbass).",NA,NA,NA,NA
renv,40c814067d987f68e1b28ac337fd973e,"`renv::install()` gains the `include` parameter, which can be useful when you'd like to install a subset of dependencies within a project while also respecting any declared remotes in that project's `DESCRIPTION` file. (#2055)",NA,NA,NA,NA
renv,5fc7fbc71b0d45a4da33639c42fa8cea,Fixed an issue where the repositories provided to `renv::init()` were ignored when also initializing `renv` with a specific version of Bioconductor.,NA,NA,NA,NA
pins,3360a1f5eb4775fa08352b76c7310467,Support new `preview_data` parameter for pin previews on Posit Connect (#850).,NA,NA,NA,NA
testthat,ebaf8be194085267bc4193fa5a7f2c47,"Fixed an issue where calling `skip()` outside of an active test could cause an unexpected error (2, #2039).",NA,NA,NA,NA
httr2,10fa16ee8b77a9ffc7aa5067a3cc40ef,"Errors thrown during the parsing of an OAuth response now have a dedicated `httr2_oauth_parse` error class that includes the original response object (@​atheriel, #596).",NA,NA,NA,NA
pkgdown,00421d73fd56f5d5006c69639b778b9a,"Reinstate Rd macro loading, which was accidentally disabled in v2.1.1 (#2782).",NA,NA,NA,NA
pins,c84ee89cded385234cc04d70cb56327d,Fixed a bug in how `pin_upload()` handles pin names (#852).,NA,NA,NA,NA
pins,478f09798dba637d70ea6f977beb0806,Improved documentation for S3-compatible object storage (#853).,NA,NA,NA,NA
duckplyr,1e0346e3d24c651905f36ec51a464c2a,Bump duckdb dependency.,NA,NA,NA,NA
duckplyr,e66c6be62973aaeede03f3d290e28ff8,Tweak method and behavior (#373).,NA,NA,NA,NA
duckplyr,7bf04ff72d80005479f67de50f7545c8,"Add manual pages for dplyr methods (@​maelle, #214, #359).",NA,NA,NA,NA
pillar,92d8c255b918247624fee70c877e3770,"`tbl_format_setup()` gains a `setup` argument that supports printing the header before the data for the body is available, e.g., for remote backends such as databases (#686).",NA,NA,NA,NA
pillar,7482071d7c1cae3b0a759b975cec5fc2,"Update `_pkgdown.yml` to bring back search bar (@​olivroy, #667).",NA,NA,NA,NA
duckplyr,0796adc2e250c2eec11287dc9438d39a,"New `last_rel()` to retrieve the last relation object used in materialization (#209, #375).",NA,NA,NA,NA
duckplyr,0c91b938b60a7261437637e777340688,"Improve `as_duckplyr_df()` error message for invalid `.data` (@​maelle, #339).",NA,NA,NA,NA
duckplyr,3a1ab59f232a17e152eaed56a1c1db2c,Add read-only markers for overwrite + restore.,NA,NA,NA,NA
duckplyr,3b6d551a35cf4e5bc10ec71042a0b57f,Cleanup (#377).,NA,NA,NA,NA
duckplyr,b9a8e286cdc3cf6946e1abab5048c867,"Avoid `""duckdb.materialize_message""` option (#376).",NA,NA,NA,NA
duckplyr,be4b317350bdd4e3b2da8a6eb403dd2f,Update TPCH outputs to account for data changes in duckdb 0.8.0 (#294).,NA,NA,NA,NA
duckplyr,b84c2855132d9898cdeee38ff23a86d8,Fix rendering in vanilla session.,NA,NA,NA,NA
duckplyr,0c8bad8a4998e1222f17fe5e7d04d0c2,"Add vignette about missing parts (@​maelle, #218, #371).",NA,NA,NA,NA
duckplyr,a09913e88f99ba13022828c771d10780,"Refactor README (@​maelle, #208, #334, #370).",NA,NA,NA,NA
duckplyr,ed3f0571164ae5696ae46d586a23549b,"Comparison expressions are translated in a way that allows them to be pushed down to Parquet (@​toppyy, #270).",NA,NA,NA,NA
duckplyr,8dd8f688b51fd094b02f0323a857ae49,Add snapshot test for conversion error in `as_duckplyr_df()`.,NA,NA,NA,NA
pillar,b13e63bf99ddb8535c0fc71724743016,"Fix printing of infinite times (#645, #710).",NA,NA,NA,NA
pillar,d6572a0084f518e178c7efe0d1453e84,"Fix tibble tests (#665, #709).",NA,NA,NA,NA
pillar,4a1788db1c897c93a4e3f06ded50bd58,Add `index.md`.,NA,NA,NA,NA
pillar,f58b61e1b8538ff346e75643efcf782d,"Describe `getOption(""width"")` (#671, #708).",NA,NA,NA,NA
xml2,aec90c864b24045f630e74eeb9fec876,Windows: use libxml2 from Rtools if found,NA,NA,NA,NA
duckplyr,67dd5d6d4d15759c6f0afe2a04855404,Use `as_duckplyr_df_impl()` in verbs (#386).,NA,NA,NA,NA
duckplyr,08734ced8956562f8137f2acf2a14b39,Use `as_ducktbl()` in touchstone script (#385).,NA,NA,NA,NA
duckplyr,f82f3ffc3eb98b9ffdfe7d5acdcd1abf,"New `as_ducktbl()`, replaces `as_duckplyr_tibble()` and `as_duckplyr_df()` (#383).",NA,NA,NA,NA
duckplyr,8925006cdec16a62fca1c93fde9c6aca,New `ducktbl()` (#382).,NA,NA,NA,NA
duckplyr,fa55196d0336baa656cb77da0aff8423,Fix comment in touchstone script (#387).,NA,NA,NA,NA
duckplyr,e652a9252f2b97d69c8955d991325d03,Use `as_duckplyr_df_impl()` in generated code (#384).,NA,NA,NA,NA
duckplyr,982d942536e77eb15fce4de365f9e22e,Legacy duckdb script.,NA,NA,NA,NA
duckplyr,adc0c8d9ed07a801f8212e8210db4ca6,"Printing a duckplyr frame no longer materializes (#255, #378).",NA,NA,NA,NA
duckplyr,eb48a83b6868ae1aaa6d54c8e9635623,Use `ducktbl()` in tests (#388).,NA,NA,NA,NA
duckplyr,85e766ffcab54e2bf2866183be8dd5fd,Avoid `as_duckplyr_df()` (#389).,NA,NA,NA,NA
duckplyr,f686550e0d2f686eaf8be29b52cfb920,Skip test that requires dplyr \> 1.1.4.,NA,NA,NA,NA
pillar,f5da54a3a2159b898370455f04acd999,"Breaking change: Hard-deprecate ellipsis for printing and formatting (#585, #637).",NA,NA,NA,NA
pillar,0d74ba91fcab9d5997305dd858128a01,"Snapshot updates for R-CMD-check-dev ({""package"":""ggplot2""}) (#670).",NA,NA,NA,NA
pillar,4fea8c209513ae48e19524477b904719,Fix tests for older R versions.,NA,NA,NA,NA
pillar,0a49969fde6d0b4b266614c783863440,"Breaking change: Hard-deprecate ellipsis for printing and formatting (#585, #637).",NA,NA,NA,NA
tibble,5707a3a8a1fcc52289323ed37b6bd13b,Document that `...` must be empty in `print.tbl_df()`.,NA,NA,NA,NA
duckplyr,be47a96363d4eff9cca5a9bb1366955e,"New `ducksql()` (duckdb/duckdb-r#32, #397).",NA,NA,NA,NA
duckplyr,afc8c6d9811951c93ea36623cdfed3ea,"New `duckparquet()`, `duckcsv()`, `duckjson()` and `duckfile()`, deprecating `duckplyr_df_from_*()` and `df_from_*()` functions (#210, #396).",NA,NA,NA,NA
duckplyr,b61749f9fe50cb9cfce1715db6a94e73,Deprecate `is_duckplyr_df()` (#392).,NA,NA,NA,NA
duckplyr,f30ffefc4c48743be4ed2bd58ae86879,New `is_ducktbl()` (#391).,NA,NA,NA,NA
duckplyr,7ea524719cce83ea94fba4c7d4bf58fe,"Add `""lazy_duckplyr_df""` class that requires `collect()` (#381, #390).",NA,NA,NA,NA
duckplyr,e329bb0adbde156fc42c54c78d082c14,Tweak `as_ducktbl()` for dbplyr lazy tables (#395).,NA,NA,NA,NA
duckplyr,3a1da3208e4f7ff597b53319fd661d51,"Add link to DuckDB configuration (#174, #398).",NA,NA,NA,NA
shiny,5aa095f9ff11162eded4272191a573ad,"When busy indicators are enabled (i.e., `useBusyIndicators()` is in the UI), Shiny now:",NA,NA,NA,NA
shiny,5aa095f9ff11162eded4272191a573ad,• Shows the pulse indicator when dynamic UI elements are recalculating and no other spinners are visible in the app. (#4137),NA,NA,NA,NA
shiny,5aa095f9ff11162eded4272191a573ad,• Makes the pulse indicator slightly smaller by default and improves its appearance to better blend with any background. (#4122),NA,NA,NA,NA
shiny,82ee0c589a412deb639ba7129801e8d4,"Improve collection of deep stack traces (stack traces that are tracked across steps in an async promise chain) with `{coro}` async generators such as `{elmer}` chat streams. Previously, Shiny treated each iteration of an async generator as a distinct deep stack, leading to pathologically long stack traces; now, Shiny only keeps/prints unique deep stack trace, discarding duplicates. (#4156)",NA,NA,NA,NA
shiny,730b0a5f84d2280096ea5cb3f5b7c14e,Fixed a bug where stack traces from `observeEvent()` were being stripped of stack frames too aggressively. (#4163),NA,NA,NA,NA
duckplyr,75b1014973db4ec2d1118e043005885d,"Add item in checklist when adding a new translation (@​maelle, #399).",NA,NA,NA,NA
pak,f8f14560d66fd6171456b06a2bb93a23,"pak now uses the `use_bioconductor` configuration option in `meta_*()` and `repo_*()` functions (#295, #726, @​meztez).",NA,NA,NA,NA
ggplot2,80c7535517fe55b8e44f14ee33d33af1,"`geom_ribbon()` now appropriately warns about, and removes, missing values (@​teunbrand, #6243).",NA,NA,NA,NA
renv,0dd5ba8325e49975912bce42a0c86a41,Fixed an issue where packages installed from r-universe via an explicit URL remote could not be restored. (#2060),NA,NA,NA,NA
renv,bc9a902d96e59b9a70d4b699c47c3b37,`renv` now detects dependencies from usages of `utils::citation()`. (#2047),NA,NA,NA,NA
pillar,9eded65bd555074473d3ffd46b8c9377,New `tbl_nrow()` generic to support lazy data frames (#679).,NA,NA,NA,NA
duckplyr,e6b97ab082f942d8aed16bfccc2d207a,"New `duck_exec()`, replaces `duckplyr_execute()` (#404).",NA,NA,NA,NA
duckplyr,32ac0ddb90119a7288ee01b068f5e6ce,IDE.,NA,NA,NA,NA
duckplyr,e6d31099a3b33f5deaed97fb1d84e2ba,`duck_tbl()` and similar (#402).,NA,NA,NA,NA
duckplyr,88de6b0ea9a46e515d63c9fcbd4696eb,Depend on dplyr instead of reexporting all generics (#405).,NA,NA,NA,NA
duckplyr,1eaa928a89ea1e1176f8d81d6dbd3cb9,NEWS.,NA,NA,NA,NA
duckplyr,621343360c9a57bcf373fa71ad6b65bd,Clarify usage by reducing duplication (#400).,NA,NA,NA,NA
duckplyr,d8e6eafabd44e7a4ff1d827db4d89157,Tweak developer vignette.,NA,NA,NA,NA
duckplyr,7eabf2bfdedcd4eaf7bc3e10ec4d615f,New `flights_df()` used instead of `palmerpenguins::penguins` (#408).,NA,NA,NA,NA
duckplyr,eeeb21bed65f6443b8e3ca24c3c5aa40,Disable vignette evaluation for R \< 4.1.,NA,NA,NA,NA
lintr,ed4bc7d09681cf13edcca5b466c2f574,"`{lintr}` now has a hex sticker (https://github.com/rstudio/hex-stickers/pull/110). Thank you, @​gregswinehart!",NA,NA,NA,NA
httr2,0840738bc4d82a101af84850be4b939f,`req_retry()` now defaults to `max_tries = 2` with a message. Set to `max_tries = 1` to disable retries.,NA,NA,NA,NA
httr2,10b0582a69cd4f57d4f4a28c1ce7b5ad,`url_parse()` now uses `curl::curl_parse_url()` which is much faster and more correct (#577).,NA,NA,NA,NA
duckplyr,9a099702b0c8516947ed67fb302b0fc1,"Avoid workaround for R \< 4.3 (#417, #418).",NA,NA,NA,NA
duckplyr,66afb717b54a17c79b55140d726a0a27,Update patches.,NA,NA,NA,NA
duckplyr,917c5595a8e14a975defe320817745fc,"Add example for working with remote data (#260, #411).",NA,NA,NA,NA
pillar,f07efe2ae4d40c5bc9a4696fb67e7e4c,"Define `type_sum.accel()` only in help page to avoid silent errors when loading (#720, #721).",NA,NA,NA,NA
httr2,54c789c4765a2ca1a9002587e069b363,New `url_modify()` makes it easier to modify an existing url (#464).,NA,NA,NA,NA
httr2,d57948e9dfe319dd2b838cd240771eed,New `req_url_relative()` for constructing relative urls (#449).,NA,NA,NA,NA
httr2,4ccc59eb011675140b85b3555249d74d,`url_parse()` gains `base_url` argument so you can also use it to parse relative URLs (#449).,NA,NA,NA,NA
pillar,d85d57761eafccbdf86d1d8daee52bff,Switching to development version.,NA,NA,NA,NA
duckplyr,7dfe721cfccea5daaa9bad42e195ac7e,"Add support for `sub()` and `gsub()` (@​toppyy, #420).",NA,NA,NA,NA
duckplyr,10a98412cebc7a1b83ea8e727fd92901,"Fallback logging is now on by default, can be disabled with configuration (#422).",NA,NA,NA,NA
duckplyr,8dcbd5362358464c5a0ee48a9fc3ddc2,Prefer `DUCKPLYR_FALLBACK_INFO` over `DUCKPLYR_FALLBACK_VERBOSE` (#425).,NA,NA,NA,NA
duckplyr,a5577e665f2552525bd08341b40b2ed9,Adapt README and tests for telemetry (#424).,NA,NA,NA,NA
duckplyr,56bc01e6fac5a97fe7dc915949a11d71,"New `fallback_config()` to create a configuration file for the settings that do not affect behavior (#216, #426).",NA,NA,NA,NA
duckplyr,e5e390f715c7379312c51bca45bfc481,Pass secret.,NA,NA,NA,NA
duckplyr,ec9dbc3f7237bdff98dedec887d8235a,Copy codecov configuration from r-lib/actions.,NA,NA,NA,NA
duckplyr,0780c4beccaec98f545e20b08566c4e5,Install covr if needed.,NA,NA,NA,NA
duckplyr,2e721ae14272a09e05c1f7724c4665c4,Pass correct covr config.,NA,NA,NA,NA
duckplyr,891aa894e22b8159535ac778593ef10b,Logic.,NA,NA,NA,NA
duckplyr,7ffaf27f10e07109c586f75f673218bc,Fix codecov.,NA,NA,NA,NA
duckplyr,b51ff305d0288d1704827f785f79538b,Add codecov badge.,NA,NA,NA,NA
duckplyr,a94bc1f5f13e493c05daa6182ce9e38f,Sync README.,NA,NA,NA,NA
duckplyr,24e05ef24820fb87b2d6f3ff7e151494,Add tests for fallback configuration (#428).,NA,NA,NA,NA
duckplyr,db728339f57925ad409fec4f99b22ecc,Adapt to codecov/codecov-action@​v5.,NA,NA,NA,NA
shiny,2d56b827d589e1673b2ee2daaaa39589,Fixed a bug with modals where calling `removeModal()` too quickly after `showModal()` would fail to remove the modal if the remove modal message was received while the modal was in the process of being revealed. (#4173),NA,NA,NA,NA
duckplyr,3d2d46b8f78fa33c7c7ba26a7fb25100,"New `compute_parquet()` and `compute_csv()`, implement `compute.duckplyr_df()` (#409, #430).",NA,NA,NA,NA
duckplyr,74add93657dab071e858aea82d08361a,Remove unneeded cast that breaks the meta functionality (#436).,NA,NA,NA,NA
duckplyr,a0c3b2e9f5aa61fa8a84e13feaeed470,Remove generated code from coverage analysis (#435).,NA,NA,NA,NA
duckplyr,919b63b612e33023b55273ad10a58946,Switch to comma-separated list of files.,NA,NA,NA,NA
duckplyr,8c056fb7af346b76bb1b0fbe1db95afb,Rename help topic (#443).,NA,NA,NA,NA
httr2,d7f738c229ddb2ce3f4e4c0a738b3254,`print.request()` now correctly escapes `{}` in headers (#586).,NA,NA,NA,NA
httr2,ea89b74ce576f74ab11328d7f457ab1b,New `req_headers_redacted()` provides a user-friendlier way to set redacted headers (#561).,NA,NA,NA,NA
httr2,e14538c0a5a607502ccd9fe877fb47b9,`resp_link_url()` now works if there are multiple `Link` headers (#587).,NA,NA,NA,NA
quarto,07fbe0b473d2360bfd71bdd7a5d12251,"`quarto_path()` now correctly return `NULL` when no quarto is found in the PATH (thanks, @​jeroen, #220, #221).",NA,NA,NA,NA
quarto,223374e93c1229c81b692746d6f53540,"New `quarto_create_project()` calls `quarto create project <type> <name>` (thanks, @​maelle, #87). DESC",NA,NA,NA,NA
httr2,bfdbf8a5d0c15474c0cb129513f7b183,`req_url_query()` gains the ability to control how spaces are encoded (#432).,NA,NA,NA,NA
httr2,0eae49e1374ba799d3f89fb6f47a1d5c,New `resp_request()` aids debugging by returning the request associated with a response (#604).,NA,NA,NA,NA
httr2,6bccb57b95cdaa3d744f78083b6b325e,"New `url_modify()`, `url_modify_query()`, and `url_modify_relative()` make it easier to modify an existing url (#464).",NA,NA,NA,NA
httr2,6d40568ab86e4b48d36b4fa5dc54d244,New `url_query_parse()` and `url_query_build()` allow you to parse and build a query string (#425).,NA,NA,NA,NA
httr2,75c50d8686bc86f8619cb6391c31ac60,`resp_stream_is_complete()` tells you if there is still data remaining to be streamed (#559).,NA,NA,NA,NA
httr2,0117d023dcaf8022abb2db9d3bfe0d08,`curl_transform()` will now use `req_body_json_modify()` for JSON data (#258).,NA,NA,NA,NA
renv,66003bf654dcd6767a0d787186f94bfe,Fixed an issue where `renv` failed to restore packages installed from r-universe when the associated lockfile record had no `RemoteRef` field. (#2068),NA,NA,NA,NA
httr2,6adf086cc15a5d6790b155b7af048f7d,Export `is_online()` as thin wrapper around `curl::has_internet()` (#512).,NA,NA,NA,NA
httr2,1c511923c5f80a40f991755253df4ad6,`curl_translate()` now translates cookie headers to `req_cookies_set()` (#431).,NA,NA,NA,NA
keras,4059c9f9559abb09cda0eea3c3a0242f,`activation_celu()`,NA,NA,NA,NA
keras,8ce81161bb8bc867db7669aa373c4e6b,`activation_glu()`,NA,NA,NA,NA
keras,0bc1f6b27c0246403e81ac7d2cfa7814,`activation_hard_shrink()`,NA,NA,NA,NA
keras,c6caf77107857766236ec8bbd4fd2b4a,`activation_hard_tanh()`,NA,NA,NA,NA
keras,e932d4f48a0b0a74d152b0e7f9f8aebf,`activation_log_sigmoid()`,NA,NA,NA,NA
keras,41672e104c13a214ada4516df1430fee,`activation_soft_shrink()`,NA,NA,NA,NA
keras,b8feeaae234468453436607bcd26da35,`activation_squareplus()`,NA,NA,NA,NA
keras,97f1c2e9d0c5cf3b8d1634164f368f84,`activation_tanh_shrink()`,NA,NA,NA,NA
keras,8f17fca1fb394d8ca6312e41c33ad528,`config_disable_flash_attention()`,NA,NA,NA,NA
keras,4785e3ea66059b70d57dff5b9d137f21,`config_enable_flash_attention()`,NA,NA,NA,NA
keras,ef9b62a401cfb7676d40f04bb0cb524b,`config_is_flash_attention_enabled()`,NA,NA,NA,NA
keras,74593a75312fe9a6742d15dea372c33b,`initializer_stft()`,NA,NA,NA,NA
keras,b210472e2fe102dcedbf7a22aaaca38c,`layer_max_num_bounding_boxes()`,NA,NA,NA,NA
keras,bae7433d09d59054175b570c0a22828c,`layer_stft_spectrogram()`,NA,NA,NA,NA
keras,6d2673b119928e4ab61cadfbd40746d9,`loss_circle()`,NA,NA,NA,NA
keras,d1b47e66a7e56ea11e4b538c05585810,`metric_concordance_correlation()`,NA,NA,NA,NA
keras,339c2c1a12e596dec0dd81a3ba56d3be,`metric_pearson_correlation()`,NA,NA,NA,NA
keras,7a3ee2c0cfeba27aadf56bdce26f5ae4,`op_celu()`,NA,NA,NA,NA
keras,585f306b1cb1dd63da71ed70ae5f7f2e,`op_exp2()`,NA,NA,NA,NA
keras,8c6ddbaaf03078275f4a3ecb7e5e3879,`op_glu()`,NA,NA,NA,NA
keras,d58ade4e021df7741fdace3d9ecd703c,`op_hard_shrink()`,NA,NA,NA,NA
keras,1ec3b91f9b869bfd4a2a13e547f0fedc,`op_hard_tanh()`,NA,NA,NA,NA
keras,2a63a25cb25be4fbf0b2f1ec45f13eda,`op_ifft2()`,NA,NA,NA,NA
keras,8e275faa46492190e03dbc51712572cc,`op_inner()`,NA,NA,NA,NA
keras,082ff244cae2913c1d3775eb5601903b,`op_soft_shrink()`,NA,NA,NA,NA
keras,a149d0ba22837e4444fb9e5a9340afe0,`op_squareplus()`,NA,NA,NA,NA
keras,2dd4e26ea0df1eaf88ae8319f66606d9,`op_tanh_shrink()`,NA,NA,NA,NA
keras,af39aa6a9c0e8dc2c06e509dda3a18bf,`callback_backup_and_restore()`: Added `double_checkpoint` argument to save a fallback checkpoint,NA,NA,NA,NA
keras,821b2003d31d77682f5ab900817e7f20,`callback_tensorboard()`: Added support for `profile_batch` argument,NA,NA,NA,NA
keras,623b47a765700faa185974768eb691c7,`layer_group_query_attention()`: Added `flash_attention` and `seed` arguments,NA,NA,NA,NA
keras,b8505e95c6d88fcddac076b422f505b2,`layer_multi_head_attention()`: Added `flash_attention` argument,NA,NA,NA,NA
keras,f1ee893ead3f3b9d7d1d273b0eb9307b,`metric_sparse_top_k_categorical_accuracy()`: Added `from_sorted_ids` argument,NA,NA,NA,NA
keras,2ed3f7c343e3236e4516dbbe5866a88e,Added native Flash Attention support for GPU (via cuDNN) and TPU (via Pallas kernel) in JAX backend,NA,NA,NA,NA
keras,2db47c459b927e7bf93b043ec1e58bcd,Added opt-in native Flash Attention support for GPU in PyTorch backend,NA,NA,NA,NA
keras,8606799db081d5ac5bb3b4313787a8ec,Enabled additional kernel fusion via bias_add in TensorFlow backend,NA,NA,NA,NA
keras,e79d3aa9867131c615bd237261b83dce,Added support for Intel XPU devices in PyTorch backend,NA,NA,NA,NA
httr2,6cad2308c216b5b4111b9d0318147b32,"`req_retry()` now optionally implements ""circuit breaking"" so that if requests to the same server fail many times (i.e. because the server is down), you can choose to immediately error rather than waiting (#370).",NA,NA,NA,NA
bslib,058cc6608f3b1af5c75dd6d9ed4a7dd9,"bslib now supports unified theming with brand.yml. brand.yml lets you theme your Shiny apps, Quarto documents and more with a single, portable YAML file. Learn more in the new Unified theming with brand.yml article. (#1148)",NA,NA,NA,NA
renv,3bf78effb542942a8a09f5ca77d0da62,Fixed an issue where `RENV_CONFIG_EXTERNAL_LIBRARIES` was incorrectly split when using Windows paths. (#2069),NA,NA,NA,NA
httr2,8a8211f4b67983d38250cce75cc8019b,`req_perform_stream()` is superseded and likely on track for deprecation; `req_perform_connection()` is no longer experimental (#625),NA,NA,NA,NA
testthat,230b6771399a7701b9e02b085f3fa7a6,Fixed an issue where `expect_no_error(1)` was failing (#2037).,NA,NA,NA,NA
httr2,3bf0b29e6e29b7a3a214e51caf247d9e,`req_auth_aws_v4()` correctly formats the Authorization header (#627).,NA,NA,NA,NA
httr2,4168732b219fbaf74d99be38a8b98f7e,"`req_perform_stream()` is superseded in favor of `req_perform_connection()`, which is no longer experimental (#625).",NA,NA,NA,NA
httr2,2790dc08656c00b599179d23fe0a5151,`with_mock()` and `local_mock()` are defunct and will be removed in the next release.,NA,NA,NA,NA
httr2,b3d7298e0ca306ef72d2dd757ca945f3,"`is_online()` wraps `curl::has_internet()`, making it easy to tell if you're currently online (#512).",NA,NA,NA,NA
httr2,8325bb13029366bcb4eaf6f4feaeca94,`req_headers_redacted()` makes it easier to redact sensitive headers (#561).,NA,NA,NA,NA
httr2,c6d91af54fe8aa85fc85c36235cfe3a6,`req_url_relative()` navigates to a relative URL (#449).,NA,NA,NA,NA
httr2,84b5ac448ee8cb5782e3f0430c0f853b,`resp_request()` returns the request associated with a response; this can be useful when debugging (#604).,NA,NA,NA,NA
httr2,37dde16ecacdf7e9e03c290e1478a62e,`resp_stream_is_complete()` checks if data remains in the stream (#559).,NA,NA,NA,NA
httr2,e417b099958fff483ea9b48154a74184,"`url_modify()`, `url_modify_query()`, and `url_modify_relative()` modify URLs (#464); `url_query_parse()` and `url_query_build()` parse and build query strings (#425).",NA,NA,NA,NA
httr2,2d6106801afe09d4616dac55d27b13f6,"OAuth response parsing errors now have a dedicated `httr2_oauth_parse` error class that includes the original response object (@​atheriel, #596).",NA,NA,NA,NA
httr2,5f46ca6beb1e734012c84f6b1a7f5323,`curl_translate()` converts cookie headers to `req_cookies_set()` (#431) and JSON data to `req_body_json_modify()` calls (#258).,NA,NA,NA,NA
httr2,230d2496568cdbf26e325abbdecccf57,`print.request()` escapes `{}` in headers (#586).,NA,NA,NA,NA
httr2,a8ab676c9c8c743512b1515a0c575456,`req_auth_aws_v4()` formats the AWS Authorization header correctly (#627).,NA,NA,NA,NA
httr2,08461ec53defe11e5294c42f5d49f183,"`req_retry()` defaults to `max_tries = 2` when nethier `max_tries` nor `max_seconds` is set. If you want to disable retries, set `max_tries = 1`.",NA,NA,NA,NA
httr2,0a5c82b0f173afb802bb6d1f9ee3100d,`req_url_query()` can control how spaces are encoded with `.space` (#432).,NA,NA,NA,NA
httr2,32ab45f1a6052673bddcb52075517441,`resp_link_url()` handles multiple `Link` headers (#587).,NA,NA,NA,NA
httr2,a254d1e22f1d2bd2da9f5e3474255546,`url_parse()` parses relative URLs with new `base_url` argument (#449) and the uses faster and more correct `curl::curl_parse_url()` (#577).,NA,NA,NA,NA
renv,9eee6991eacd42db9991917798477186,"Fixed an issue where R package installation could fail if the project depended on a package whose current version available from the configured package repositories required on a newer version of R than what was currently installed, even if that package need not be updated. (#2071)",NA,NA,NA,NA
cli,cae78a756633b5a78c2b16a0e1b86396,"The URI generated for `.file`, `.run`, `.help` and `.vignette` hyperlinks can now be configured via options and env vars (@​jennybc, #739, #744).",NA,NA,NA,NA
httr2,7c16396ad877757651ab0827e505c083,"`req_perform_connection()` gains a `verbosity` argument, which is useful for understanding exactly how data is streamed back to you (#599).",NA,NA,NA,NA
httr2,3e1a60e80cf962d3a27b58348e79fa64,`resp_stream_sse()` will warn if it recieves a partial event.,NA,NA,NA,NA
renv,9bcccbed37cf12b36315e47af1f25706,"`renv` now includes additional package DESCRIPTION fields in the lockfile. This can be useful for validating the provenance of packages recorded in the lockfile, and also for applications using `renv` which would like to recompute the hash used for package caching from the lockfile itself. If needed, old-style lockfiles can be generated by setting the option `options(renv.lockfile.version = 1)`. Note that this version of `renv` remains compatible both with the older (minimal) lockfiles, as well as with the newer lockfiles in this release. (#2057)",NA,NA,NA,NA
renv,0a667f8a5ca9bf4be1270293b6491185,Fixed an issue where `renv::snapshot()` could fail if invoked within a project containing empty or invalid `.ipynb` files. (#2073),NA,NA,NA,NA
duckplyr,603625d239e84f0a0b64ee79d2824437,"`collect()` returns a tibble (#438, #447).",NA,NA,NA,NA
duckplyr,fcf44d5115ccb597f6880281d96f0b81,Sync tests (#446).,NA,NA,NA,NA
duckplyr,69f4e7882781416809c07057e9e5f278,"Rename `duck_exec()` to `db_exec()` and `duck_*()` to `read_*_duckdb()` (#210, #459).",NA,NA,NA,NA
duckplyr,94b5f3bea062d88b717e0dec9ea21d66,"Rename `duck_tbl()` to `duckdb_tibble()`, and `as_duck_tbl()` to `as_duckdb_tibble()` (#457).",NA,NA,NA,NA
duckplyr,c5025d250a3a9835799fa88d0f4044d6,"Improve error message with lazy data frame by explicitly materializing before falling back to dplyr (#432, #456).",NA,NA,NA,NA
duckplyr,5889c114e4e8eee614fa2213cb21528c,"The default DuckDB connection is now based on a file, the location can be controlled with the `DUCKPLYR_TEMP_DIR` environment variable (#439, #448).",NA,NA,NA,NA
duckplyr,bd012f71f96dcc9372640b008808ddd8,Capture and return `rel_try()` error (#454).,NA,NA,NA,NA
duckplyr,de1763b67242ffe742d06248f74b0a78,Sync patch (#453).,NA,NA,NA,NA
duckplyr,fdd6516349da05a567f5ad0baf74e5ea,Remove noise from patch files (#451).,NA,NA,NA,NA
duckplyr,5adad8a915f59cc63dcf9b41d5b24493,"Add ""Eager and lazy"" section to `?duck_tbl`, document `collect()` (#455).",NA,NA,NA,NA
duckplyr,f8b6aed5d197cf9950ddd282cf46833e,Review `rel_try()` reasons and docs (#452).,NA,NA,NA,NA
duckplyr,41703d58a0271d6d6e48e8fb664e9824,"Clean up documentation (#444, #460).",NA,NA,NA,NA
plumber,f50f6ecdc0856184093462249e00c5ed,"Fixes #956, allowing a port to be specified as an environment variable. User-provided ports must be between 1024 and 49151 (following IANA guidelines) and may not be a known unsafe port. plumber will now throw an error if an invalid port is requested. (@​shikokuchuo @​gadenbuie #963)",NA,NA,NA,NA
bslib,e0e7cf8dfa2f9ae731f21b6e230afac2,`input_switch()` and `input_dark_mode()` can be included in Shiny's bookmarking feature. (#1166),NA,NA,NA,NA
bench,7bfc2ecda764827753c7f47752a66bdb,"Fixed an issue in `bench_time_trans()` and `bench_bytes_trans()` where pretty breaks were not being applied correctly (#140, @​plietar, @​simonpcouch).",NA,NA,NA,NA
bench,01150debae6ec9914b1b6f4db04827d0,"R \>=4.0.0 is now required, which is aligned with tidyverse standards.",NA,NA,NA,NA
bench,21257810e64cf252670ce41286783219,"Switched to modern ggplot2 conventions internally (#141, @​olivroy).",NA,NA,NA,NA
bench,9be5b3ce77619606d9b1a4cdeff6c537,`press()` gains a new `.quiet` argument to silence progress messages (#145).,NA,NA,NA,NA
bench,87f4d74d5cfe3b458fe58bc533ded8ba,The `.grid` argument of `press()` now subsets data.frames and tibbles consistently (#142).,NA,NA,NA,NA
chromote,f6d694ac10b77437c3ab01dcc65bf646,"Chrome v132 and later no longer support old headless mode. As such, `chromote` no longer defaults to using `--headless=old` and now uses `--headless` when running Chrome. You can still use the `chromote.headless` option or `CHROMOTE_HEADLESS` environment variable to configure the `--headless` flag if you're using an older version of Chrome. (#187)",NA,NA,NA,NA
webshot2,b9c19e29a8ee2268e38ad31427dc964a,Updated the documentation for `webshot()` to clarify that `expand` only applies to the clipping rectangle determined by `selector`. (#68),NA,NA,NA,NA
webshot2,8d05b31446c1cd52f90156295030e44e,"`webshot()` now rounds `vwidth` and `vheight` to the nearest integer to match Chrome's expectations. If this behavior is somehow problematic, you can use `vwidth = I(my_width)` to avoid the conversion. (#70)",NA,NA,NA,NA
webshot2,552fe8dfb1a3c96a8fad316e1c060f0f,`webshot()` now surfaces errors that occur when working with the lower-level screenshot API provided by Chrome via `{chromote}`. (#69),NA,NA,NA,NA
bench,adae8950d3330fd589ee161160561aff,"`bench_time_trans()` and `bench_bytes_trans()` once again apply pretty breaks correctly (#140, @​plietar, @​simonpcouch).",NA,NA,NA,NA
chromote,dafaffc6770fef15df2a902965fa9431,"Added `chromote_info()`, a new utility function to print out key information about chromote and Chrome. Useful when debugging chromote or reporting an issue. (#190)",NA,NA,NA,NA
bslib,dc202cb3d23c813f7aecfb8846992e15,"Fixed an issue with the Shiny preset (`bs_theme(5, ""shiny"")`) that caused a floating underling to appear when a `nav_panel_hidden()` was used and active. (#1170)",NA,NA,NA,NA
duckplyr,4f1025d351b4fadef49f484add7209d3,"Avoid base pipe for compatibility with R 4.0.0 (#463, #466).",NA,NA,NA,NA
duckplyr,018233f3050589e9d06cb32d63350f08,"Point to the native CSV reader if encountering data frames read with readr (#127, #469).",NA,NA,NA,NA
duckplyr,e9fdd60455e06816fe2574cce95ddb2e,Extract function to reset connection (#471).,NA,NA,NA,NA
duckplyr,f87b6be787b97b518df884f10bc8d8ac,Clean up source in error (#468).,NA,NA,NA,NA
duckplyr,fd3f118381e14344c92619c77a264910,Improve markup for error message (#467).,NA,NA,NA,NA
duckplyr,51e186cfb279ec2275c3f90c1e9eed1b,"Tweak reference index (#465, #474).",NA,NA,NA,NA
duckplyr,8e5d57f2580e411e473d8b55f535e01d,Move dplyr tests (#470).,NA,NA,NA,NA
duckplyr,328f8b7b505e200eb1bf17c13ba55645,"Tweak examples and titles (#363, #475).",NA,NA,NA,NA
duckplyr,52aea885181444a647e2ec8bc6928980,"Fix logo (#476, #478).",NA,NA,NA,NA
clock,17876809125aba1d5877a621d1a6e5f9,"Added a `diff()` method for time points and calendars to ensure that durations are always returned, even in the empty result case (#364).",NA,NA,NA,NA
clock,0ed8eea99f42bc877d58969f5634729e,Fixed a test that failed due to `seq.Date()` now returning integer storage in some cases in the development version of R.,NA,NA,NA,NA
ggplot2,53152f8031a200f7de0ae0ee8e322e54,"`scale_{x/y}_discrete(continuous.limits)` is a new argument to control the display range of discrete scales (@​teunbrand, #4174, #6259).",NA,NA,NA,NA
chromote,b329394f88b71fbaf4073732dfbc04cc,"chromote now uses a consistent prefix for logs, e.g `{tempdir}/chrome-{id}-stdout.log` and `{tempdir}/chrome-{id}-stderr.log`. chromote also now uses `--crash-dumps-dir` to set a session-specific temp directory. (#194)",NA,NA,NA,NA
shiny,93906393cda5adafa7b0b1618b2766ca,Shiny now uses `{cli}` instead of `{crayon}` for rich log messages. (@​olivroy #4170),NA,NA,NA,NA
clock,0adebf048d6b23f6de14fb58cd9218d0,Fixed an issue where clock would not compile on Centos 7 using gcc-5.4.0 due to a `constexpr` issue (#357).,NA,NA,NA,NA
rsconnect,be0d81836515ac23aea8780c06d6b709,Use base64 encoded test data. Addresses CRAN test failures when run with newer libssl. (#1130),NA,NA,NA,NA
reticulate,5bad781519e8fa9a3d4733f00e74271c,"Fixed an issue with using Python 3.12 on Linux (#1712, #1714).",NA,NA,NA,NA
reticulate,1f53720880cd37289d1f207a650231d5,Fixed an issue where `virtualenv_starter()` would not discover a custom built Python (#1704).,NA,NA,NA,NA
bslib,352655ec1526e433c180f2cd1e0af290,"The navbar-related style options of `page_navbar()` and `navset_bar()` have been consolidated into a single `navbar_options` argument that pairs with a new `navbar_options()` helper. Using the direct `position`, `bg`, `inverse`, `collapsible`, and `underline` arguments will continue to work with a deprecation message. (#1141) Related to the above change, `navset_bar()` now defaults to using `underline = TRUE` so that both `page_navbar()` and `navset_bar()` use the same set of default `navbar_options()`. In `navbar_options()`, `inverse` is replaced by `theme`, which takes values `""light""` (dark text on a **light** background), `""dark""` (light text on a **dark** background), or `""auto""` (follow page settings). (#1146)",NA,NA,NA,NA
bslib,bbc3fa2343a3f1f68d35d1960c724516,"bslib now uses navbar markup with Bootstrap 5 that's closer to the expected markup for Bootstrap. We still include the `navbar-default` or `navbar-inverse` classes on the `<nav>` element, for backwards compatibility, but in apps that use Bootstrap 5 these classes have no styles. (#1146)",NA,NA,NA,NA
shiny,9f503fd10ffe4809bb323be86e211278,"When busy indicators are enabled (i.e., `useBusyIndicators()`), Shiny now:",NA,NA,NA,NA
shiny,9f503fd10ffe4809bb323be86e211278,• Shows a spinner on recalculating htmlwidgets that have previously rendered an error (including `req()` and `validate()`). (#4172),NA,NA,NA,NA
shiny,9f503fd10ffe4809bb323be86e211278,• Shows a spinner on `tableOutput()`. (#4172),NA,NA,NA,NA
shiny,9f503fd10ffe4809bb323be86e211278,• Places a minimum height on recalculating outputs so that the spinner is always visible. (#4172),NA,NA,NA,NA
duckplyr,8521d9a6286249fc1af8a3197d02f3ee,Deprecate old I/O functions (#481).,NA,NA,NA,NA
duckplyr,12749112097ee6da63a1089596cf0660,Convert bullets to info items (#483).,NA,NA,NA,NA
plumber,2527454f534f7ac3dbcb62bb8f149b3b,"`parse_rds()`, `parse_feather()`, and `parse_parquet()` no longer writes data to disk during parsing (@​thomasp85, #942)",NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,New symbols:,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `activation_sparse_plus()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `activation_sparsemax()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `activation_threshold()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_equalization()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_mix_up()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_rand_augment()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_color_degeneration()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_color_jitter()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_grayscale()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_hue()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_posterization()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_saturation()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_sharpness()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `layer_random_shear()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `op_diagflat()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `op_sparse_plus()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `op_sparsemax()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `op_threshold()`,NA,NA,NA,NA
keras,689c95d3ebea1a12b94b701438af33b5,• `op_unravel_index()`,NA,NA,NA,NA
keras,0d5d336c3ec8b992e0172e4650add91a,Add argument axis to tversky loss,NA,NA,NA,NA
keras,960b918e123b129aef66e80c5229c75b,New: ONNX model export with `export_savedmodel()`,NA,NA,NA,NA
keras,9a5e99a003f347316d02a4a3f978b8e9,Doc improvements and bug fixes.,NA,NA,NA,NA
keras,11c49f20bdb1d5f9ec5dddc03e8175d1,JAX specific changes: Add support for JAX named scope,NA,NA,NA,NA
keras,944b659bcb9983518f2c280ee6c6a9b4,TensorFlow specific changes: Make `random_shuffle()` XLA compilable,NA,NA,NA,NA
httr2,66ee8b4e030eeabc6c0dec884d346511,"`aws_v4_signature()` now works if url contains query parameters (@​ jeffreyzuber, #645).",NA,NA,NA,NA
dtplyr,22cc9aa2323dffc58eeaaafd879fa3e1,`transmute()` preserves row count and avoids unnecessary copies (#470),NA,NA,NA,NA
pointblank,c316f1032472b8f48414e8ad8f003451,The `brief` argument of validation functions now also supports `{glue}` syntax (#587),NA,NA,NA,NA
pointblank,c0e0b28a62b7ce136b5d9c93a01800d2,Validation step `brief`s correctly recycle to match expanded steps (#564),NA,NA,NA,NA
httr2,8ec76561621cc45b1aa8ef4f2c374fb3,`resp_stream_sse()` now automatically retrieves the next event if the current event contains no data. The data is now returned as a single string (#650).,NA,NA,NA,NA
pointblank,d7e05db4d972f0567a8a0ac957842c34,Data extracts for `rows_distinct()` preserves columns other than the ones tested (#588),NA,NA,NA,NA
pointblank,de39aab65a1edf7e23c6f211c77947f2,`info_columns()` warn more informatively when no columns are selected (#589).,NA,NA,NA,NA
duckplyr,a89cfea6cca6bdb926228de68895e773,Support partial funneling (#487).,NA,NA,NA,NA
duckplyr,2dd2e08e07fe12b3fd216c8caabd81eb,Bump.,NA,NA,NA,NA
duckplyr,24e558ff263a4926ecc78fe01792e4e0,Fix remote.,NA,NA,NA,NA
duckplyr,c2f915bb750c7579c81cbf3a2579ac1f,Run fledge before RCC.,NA,NA,NA,NA
duckplyr,09c370d235a586b49b437fc84b11525c,"Make flights data workaround explicit thus less scary (@​maelle, #488, #490).",NA,NA,NA,NA
duckplyr,b67d6b75b26be1f1c13243c38224c9e9,"Remove startup message after second `load_all()` (#480, #492).",NA,NA,NA,NA
duckplyr,0e8cc3fbed21ee9465ad20bcfa13e222,Install duckdb from CRAN (#495).,NA,NA,NA,NA
duckplyr,89deaff0ea7e474e8a656c63d11096c3,"Introduce concept of funneling alongside eagerness and lazyness (#473, #496).",NA,NA,NA,NA
duckplyr,72a2cccb57450f1a78b6d30a5f11a332,`as_duckdb_tibble()` for dbplyr `tbl` objects avoids materialization (#502).,NA,NA,NA,NA
duckplyr,13800118f1e34f169b95c6ca89e573e5,"Avoid forwarding `is.na()` to `is.nan()` to support non-numeric data, avoid checking roundtrip for timestamp data (#482).",NA,NA,NA,NA
duckplyr,57f0a49e981e75e37e44ccf36ced35b8,Funneled data frames inherit limitation of rows and cells after an operation (#501).,NA,NA,NA,NA
duckplyr,d4ba068b27911ca5b2ef4dcf67b5f87e,Clean up `DESCRIPTION`.,NA,NA,NA,NA
duckplyr,799967d4b775006a527649e3d7115645,The meta functionality is now enabled only if the `DUCKPLYR_META_ENABLE` environment variable is set to `TRUE` (#499).,NA,NA,NA,NA
duckplyr,4b204a3cccc31fbeb21601c8e43b27d1,Adapt script.,NA,NA,NA,NA
duckplyr,5a0350e2eb0bffd264d593de12ee2a0f,Tweak wording for readr error message (#503).,NA,NA,NA,NA
duckplyr,32021695bbbba1899a50eec9cab12c8d,Prefer `vctrs::new_data_frame()` over `tibble()` for performance (#500).,NA,NA,NA,NA
ggplot2,b2da7c9d1685e4acb45fa397b8cb5a5b,"New function family for setting parts of a theme. For example, you can now use `theme_sub_axis(line, text, ticks, ticks.length, line)` as a substitute for `theme(axis.line, axis.text, axis.ticks, axis.ticks.length, axis.line)`. This should allow slightly terser and more organised theme declarations (@​teunbrand, #5301).",NA,NA,NA,NA
ggplot2,c47dea9c224879aaec17af1a4df2f898,"Standardised the calculation of `width`, which are now implemented as aesthetics (@​teunbrand, #2800).",NA,NA,NA,NA
ggplot2,99e18fd0591c8be701f8daec3662658f,"`geom_violin()` gains additional arguments to style the colour, linetype and linewidths of the quantiles, which replace the now-deprecated `draw_quantiles` argument (#5912).",NA,NA,NA,NA
ggplot2,e3b1ba0b766a58d47a63d73b581396c3,"(breaking) `geom_violin(quantiles)` now has actual quantiles based on the data, rather than inferred quantiles based on the computed density. The `quantiles` parameter that replaces `draw_quantiles` now belongs to `stat_ydensity()` instead of `geom_violin()` (@​teunbrand, #4120).",NA,NA,NA,NA
ggplot2,035995bf4bdb91279caa9e8768fe40c3,"More stability for vctrs-based palettes (@​teunbrand, #6117).",NA,NA,NA,NA
ggplot2,48ac30bfeb416e14d7d2ff1d53c9c8cb,"Fixed regression in `guide_bins(reverse = TRUE)` (@​teunbrand, #6183).",NA,NA,NA,NA
ggplot2,8b32e0fd4c81577bec8282e708f452bb,"Stricter check on `register_theme_elements(element_tree)` (@​teunbrand, #6162)",NA,NA,NA,NA
ggplot2,87bcd86e1d38fe3c091239fc079eb773,Position adjustments can now have auxiliary aesthetics (@​teunbrand).,NA,NA,NA,NA
ggplot2,87bcd86e1d38fe3c091239fc079eb773,"• `position_nudge()` gains `nudge_x` and `nudge_y` aesthetics (#3026, #5445).",NA,NA,NA,NA
ggplot2,87bcd86e1d38fe3c091239fc079eb773,"• `position_dodge()` gains `order` aesthetic (#3022, #3345)",NA,NA,NA,NA
ggplot2,7a662a86c567e2ad68ffca01f8d01883,"Added `weight` aesthetic for `stat_ellipse()` (@​teunbrand, #5272)",NA,NA,NA,NA
ggplot2,956535250b7957bd4205af8a2807df9c,"New default `geom_qq_line(geom = ""abline"")` for better clipping in the vertical direction. In addition, `slope` and `intercept` are new computed variables in `stat_qq_line()` (@​teunbrand, #6087).",NA,NA,NA,NA
ggplot2,b1135cf562d2db03ab44d33478d44d3e,"Fixed a bug where the `guide_custom(order)` wasn't working (@​teunbrand, #6195)",NA,NA,NA,NA
pointblank,5bc5c55977b4e8ffe639a1eab8610c50,"Data extracts for `rows_distinct()`/`rows_complete()` preserves all columns, not just the ones tested (#588, #591)",NA,NA,NA,NA
ggplot2,09730a3b632cb43cb51f22f223b5cc54,"Binned scales with zero-width data expand the default limits by 0.1 (@​teunbrand, #5066)",NA,NA,NA,NA
ggplot2,f6041685a7f4dd90ffaf40728228c6d2,"Reintroduced `drop` argument to `stat_bin()` (@​teunbrand, #3449)",NA,NA,NA,NA
ggplot2,baf72124395b75e2b608a4869b3666a0,"All binning stats now use the `boundary`/`center` parametrisation rather than `origin`, following in `stat_bin()`'s footsteps (@​teunbrand).",NA,NA,NA,NA
ggplot2,2f691c20b208b4ba11980ec860c95d8c,"`stat_summary_2d()` and `stat_bin_2d()` now deal with zero-range data more elegantly (@​teunbrand, #6207).",NA,NA,NA,NA
pkgdown,ddf5dd3a3e0002bd3dbf2aacc92c6026,"Code repositories hosted on Codeberg are now supported in the `BugReports` and `URL` fields (@​nfrerebeau, #2843).",NA,NA,NA,NA
ggplot2,ebdbdc6513ed8cbfa86455c6f2a8e083,"Munching in `coord_polar()` and `coord_radial()` now adds more detail, particularly for data-points with a low radius near the center (@​teunbrand, #5023).",NA,NA,NA,NA
plumber,958f271c7e676acb134b8e67255bf43e,"Returning error messages are now turned off by default rather than being turned on if running interactively and turned off if not (@​thomasp85, #962)",NA,NA,NA,NA
shiny,06ec2d4272cb5a34bc1f2609384bd12b,The Shiny Client Console (enabled with `shiny::devmode()`) no longer displays duplicate warning or error message. (#4177),NA,NA,NA,NA
shiny,ff45a86905dba6f8a1d6fd0d858dca7f,Updated the JavaScript used when inserting a tab to avoid rendering dynamic UI elements twice when adding the new tab via `insertTab()` or `bslib::nav_insert()`. (#4179),NA,NA,NA,NA
duckplyr,2194d2d69ac37e72d9522dd083999aea,"Move content from README to vignettes (#207, #504).",NA,NA,NA,NA
ggplot2,2485cf7df775a4ea3b00c8e50ecec0f4,"Scale names, guide titles and aesthetic labels can now accept functions (@​teunbrand, #4313)",NA,NA,NA,NA
ggplot2,ba71c3926e25dad772c8b17aff12fecb,"The `fatten` argument has been deprecated in `geom_boxplot()`, `geom_crossbar()` and `geom_pointrange()` (@​teunbrand, #4881).",NA,NA,NA,NA
ggplot2,5426c56c565688702b3b721cc9d89ce5,"Axis labels are now preserved better when using `coord_sf(expand = TRUE)` and graticule lines are straight but do not meet the edge (@​teunbrand, #2985).",NA,NA,NA,NA
ggplot2,53071e4bad65e84052778dba167e836c,"Attempt to boost detail in `coord_polar()` and `coord_radial()` near the center (@​teunbrand, #5023)",NA,NA,NA,NA
ggplot2,de6b7b18b0823d5a2e182120c317ce3f,"All scales now expose the `aesthetics` parameter (@​teunbrand, #5841)",NA,NA,NA,NA
ggplot2,0304dad9c56cc79592064371a43f5220,Turned off fallback for `size` to `linewidth` translation in `geom_bar()`/`geom_col()` (#4848).,NA,NA,NA,NA
ggplot2,24bcec5a3b6cf367bf50f50bc60e26c0,"`coord_radial()` now displays no axis instead of throwing an error when a scale has no breaks (@​teunbrand, #6271).",NA,NA,NA,NA
ggplot2,a90d198fe7baaf81885a7461406c85db,"New `theme(legend.key.justification)` to control the alignment of legend keys (@​teunbrand, #3669).",NA,NA,NA,NA
ggplot2,66cf379e5ec203c1acc824dc6bd015f9,"Added `scale_{x/y}_time(date_breaks, date_minor_breaks, date_labels)` (@​teunbrand, #4335).",NA,NA,NA,NA
ggplot2,119eb03df9f215b82cc017015947a96e,"New `element_point()` and `element_polygon()` that can be given to `theme(point, polygon)` as an extension point (@​teunbrand, #6248).",NA,NA,NA,NA
ggplot2,dcda2ed73412b6a86912bc16903b0d03,"New parameters for `geom_label()` (@​teunbrand and @​steveharoz, #5365):",NA,NA,NA,NA
ggplot2,dcda2ed73412b6a86912bc16903b0d03,• The `linewidth` aesthetic is now applied and replaces the `label.size` argument.,NA,NA,NA,NA
ggplot2,dcda2ed73412b6a86912bc16903b0d03,• The `linetype` aesthetic is now applied.,NA,NA,NA,NA
ggplot2,dcda2ed73412b6a86912bc16903b0d03,• New `border.colour` argument to set the colour of borders.,NA,NA,NA,NA
ggplot2,dcda2ed73412b6a86912bc16903b0d03,• New `text.colour` argument to set the colour of text.,NA,NA,NA,NA
purrr,089e7c11fb47088cfdbacbb582c08dc5,"Varies fixed to bring purrr back into compliance with R CMD check (@​shikokuchuo, @​jayhesselberth).",NA,NA,NA,NA
purrr,4dcd0741c9438bb1627969b4bc23ba5b,Added missing `imap_vec()` (#1084),NA,NA,NA,NA
purrr,d98579ad0f3f1ba8021abcb358dce70b,"`list_transpose()` now asserts that it does not work on data frames (@​KimLopezGuell, #1141, #1149), and inspects all elements to determine the correct template if not provided by the user (#1128, @​krlmlr).",NA,NA,NA,NA
renv,00913fc2f0ff6898046c23435d058ff2,Fixed an issue where `renv::restore()` did not respect the named repository within the lockfile when installing packages from the archives of the configured package repositories. (#2081),NA,NA,NA,NA
renv,8b83e8f7b2d7fbb7d852fd510f850426,The `renv` sandbox is now unlocked on exit after a call to `renv::use()`. This should alleviate issues seen where R's attempts to clean up the temporary directory could fail due to inadequate permissions on the sandbox directory. (#2076),NA,NA,NA,NA
duckplyr,d00d6fb6b61f2d667abb306316195b22,Remove space at EOL in limits (#521).,NA,NA,NA,NA
duckplyr,0f94aff253d06b827ecef0b16f6cbe41,Remove space at EOL in large (#520).,NA,NA,NA,NA
duckplyr,f29a481ee745af5090e096f068d61937,Avoid autoupload.,NA,NA,NA,NA
duckplyr,0f8855a2537afeffbc4fcf661e7fd373,"Remove use of word bottleneck (#517, #519).",NA,NA,NA,NA
duckplyr,b5022f2462d4d2f3fda4f621f220c2b6,Document `.funnel`/`funnel` argument (#513).,NA,NA,NA,NA
duckplyr,439d7e92a79daf31d2d4927d7e9236bd,Rename lazy.R to funnel.R (#509).,NA,NA,NA,NA
plumber,27e3c388e162867eaf14c5806b342ef8,New serializers,NA,NA,NA,NA
plumber,27e3c388e162867eaf14c5806b342ef8,"• `serializer_excel()`: Return an object serialized by `writexl::write_xlsx` (@​r2evans, #973).",NA,NA,NA,NA
plumber,f31dd9c2641903ed0cc1e61df8602053,New request body parsers,NA,NA,NA,NA
plumber,f31dd9c2641903ed0cc1e61df8602053,"• `parser_excel()`: Parse request body as an excel workbook using `readxl::read_excel` (@​r2evans, #973). This defaults to loading in the first worksheet only, you can use `@​parse excel list(sheet=NA)` to import all worksheets. This always returns a list of frames, even if just one worksheet.",NA,NA,NA,NA
pkgdown,7bb12be279a07214c8d59d3662468c1c,"pkgdown now uses the same Sass variables as bslib to set the navbar background color: `$navbar-bg` for the background color in light and dark mode, or `$navbar-light-bg` and `$navbar-dark-bg` for individually controlling light and dark mode background colors. `pkgdown-navbar-bg` and `$pkgdown-navbar-bg-dark` both still provide pkgdown-specific overrides (@​gadenbuie, #2847).",NA,NA,NA,NA
keras,15b0316352d27165d98e11b91e93e80b,"The progress bar in `fit()`, `evaluate()` and `predict()` now defaults to not presenting during testthat tests.",NA,NA,NA,NA
duckplyr,b61635ba940e16ff817538e143b19dac,Use magrittr pipe in tests.,NA,NA,NA,NA
duckplyr,9e4da6061ed0135cf025c23a449d98b9,"Change `funnel` values to `""open""` and `""closed""` instead of a logical value (#526).",NA,NA,NA,NA
duckplyr,692f3fe10b812e654a4dd9fe25d12835,"Fix erroneous argument (@​TimTaylor, #524).",NA,NA,NA,NA
duckplyr,064b01cb1201ecb343005ce4c440d0a9,Review (#516).,NA,NA,NA,NA
gt,11fdc8ed7c0d32f68999888f3c5f95e5,"Fixed an issue where cross-references would fail in bookdown::html_document2 (@​olivroy, #1948)",NA,NA,NA,NA
bslib,cec13b815ecce7af41db04d1e9f05db8,"The navbar-related style options of `page_navbar()` and `navset_bar()` have been consolidated into a single `navbar_options` argument that pairs with a new `navbar_options()` helper. Using the direct `position`, `bg`, `inverse`, `collapsible`, and `underline` arguments will continue to work with a deprecation message. (#1141) Related to the above change, `navset_bar()` now defaults to using `underline = TRUE` so that both `page_navbar()` and `navset_bar()` use the same set of default `navbar_options()`. In `navbar_options()`, `inverse` is replaced by `theme`, which takes values `""light""` (dark text on a **light** background), `""dark""` (light text on a **dark** background), or `""auto""` (follow page settings, the default). This change affects that default navbar foreground and background colors for Bootswatch preset themes with Bootstrap 5. Detailed instructions for customizing the navbar appearance, especially for Bootswatch themes, can be found in `?navbar_options`. (#1146)",NA,NA,NA,NA
keras,c5762a32bec4860b835ebddcdd5cfbae,Keras now uses `reticulate::py_require()` to resolve Python dependencies. Calling `install_keras()` is no longer required (but is still supported).,NA,NA,NA,NA
keras,807a20436e331248f07b7f6a4e809e23,"`use_backend()` gains a `gpu` argument, to specify if a GPU-capable set of dependencies should be resolved by `py_require()`.",NA,NA,NA,NA
duckplyr,233d5a1010b118ef98b78682e442c5b3,Add `funnel` arg to `rel_to_df.duckdb_relation()` (#534).,NA,NA,NA,NA
duckplyr,6f77751647c85c1e2b44c675ab754be7,Reorganize code (#533).,NA,NA,NA,NA
duckplyr,7025b8d95ef36e064830a57c9b71a099,Remove funneling section in docs (#532).,NA,NA,NA,NA
quarto,e47f9316860fecd56f04ea13150c4165,"In `quarto_inspect()`, JSON array xith JSON object are not coerced to data.frame anymore. This ensure list is returned for all elements of `fileInformation` object.",NA,NA,NA,NA
bslib,2b68c1c345b942b36a7b77c536ad6387,"The following functions are no longer marked ""experimental"": `accordion()`, `breakpoints()`, `card()`, `input_dark_mode()`, `input_switch()`, `layout_columns()`, `layout_column_wrap()`, `page_fillable()`, `page_sidebar()`, `layout_sidebar()`, `sidebar()`, `popover()`, `tooltip()` and `value_box()`.",NA,NA,NA,NA
duckplyr,aa110f9112002ca44d6c9a48c3e32c35,No longer support translation of `duckplyr::nth()` and other functions that were previously reexported (#551).,NA,NA,NA,NA
duckplyr,a27b8fab1515a1f8abcf11c7bd03f9b3,Correct criterion for inclusion of `meta.R` (#539).,NA,NA,NA,NA
duckplyr,b504659d13f1268f98937588360f75e3,Handle `dplyr::desc()` (#550).,NA,NA,NA,NA
duckplyr,2868934c2686e7a1d0369dd2ae39f208,"Prudence as concept and as argument (#511, #547).",NA,NA,NA,NA
duckplyr,c483ed73922ce8ea5738b09d0605ee2f,Implement argument matching for `funnel` (#546).,NA,NA,NA,NA
duckplyr,b706049072c5b8a48c1ed8bdefaf1f1d,"New `funnel = ""drip""` (#541).",NA,NA,NA,NA
duckplyr,c2eef1435fb511199abfca3535946439,"`duckdb_tibble()`, `as_duckdb_tibble()` and `collect()` use `new_duckdb_tibble()` (#540).",NA,NA,NA,NA
duckplyr,f6b0ac72c5a9ba9b354d42dd03fc9450,`duckdb_tibble()` checks if columns can be represented in DuckDB (#537).,NA,NA,NA,NA
duckplyr,ff078cc50cce9e9bf76cc851eec62cfa,Sync (#556).,NA,NA,NA,NA
duckplyr,46908c3685fddbd0236348b398892afa,Move code.,NA,NA,NA,NA
duckplyr,c8751e9dc72f046c0561f2f7ef2b73e2,"Add prefix to dplyr generated helper files, and skip if env var is set (#538).",NA,NA,NA,NA
duckplyr,e9318133ab52e450786c6b187aafc47c,Small README tweaks (#543).,NA,NA,NA,NA
duckplyr,c8e12516eed25f053bafa2cd77643468,"Document limiting memory usage (#472, #548).",NA,NA,NA,NA
duckplyr,1a45a5a72b572841a02a3b555444d79b,Tweak funneling (#545).,NA,NA,NA,NA
duckplyr,22ae46664d004af4101b1e51a114650d,Snapshot updates (@​1741643+krlmlr).,NA,NA,NA,NA
pins,79840d4ce0f5fd4b95c507974012e8d5,Prepends 'https://' to Databricks host if missing (#855).,NA,NA,NA,NA
keras,6c80e6bc14290e4799998fd2da617837,`dotty::.` is now reexported.,NA,NA,NA,NA
duckplyr,ce36b289cf64a508c6b1711d87b12121,Only translate what's actually supported (#569).,NA,NA,NA,NA
duckplyr,e2473054f9cd2ca36def3a50f84c2707,"Implement `na.rm` handling for `sum()`, `min()`, `max()`, `any()` and `all()`, with fallback for window functions (#205, #566).",NA,NA,NA,NA
duckplyr,e5560291294f847ff37d7ba294d55a2b,Create database in a subdirectory of `tempdir()` by default (#561).,NA,NA,NA,NA
duckplyr,ec4bf21af5fa6356d769962ad0002258,Consistency.,NA,NA,NA,NA
duckplyr,4116db85905e65e64fb8b3d1ac0e8bd0,Document `prudence` argument (#568).,NA,NA,NA,NA
duckplyr,e626d85502f05575b75d932eba667ccd,"New `vignette(""fallback"")` (#563).",NA,NA,NA,NA
duckplyr,58d9af8b63cf4a62fc9d953f7f59e5ef,Mention fallback in README (#562).,NA,NA,NA,NA
duckplyr,6e45589653e47848776a19fed82fdfba,"Show error source for translation errors (#512, #560).",NA,NA,NA,NA
duckplyr,828968f7eafd8e9fffb779731ff5641e,"Wrap up documentation on prudence (#497, #559).",NA,NA,NA,NA
duckplyr,32baf24844fdd464776c233aed6748b2,Ensure TPC-H tests are run by DuckDB (#555).,NA,NA,NA,NA
duckplyr,3652cbbdda4d7eba331175f67351de4c,"Remove support for edge case in `sum()`, `any()` and `all()` for performance (#573).",NA,NA,NA,NA
duckplyr,25a85abf76bb5e1ceffe0088004a9b7b,Giving up.,NA,NA,NA,NA
duckplyr,50cb9c63d3102af32435d0f2269c1b5c,Clean cache.,NA,NA,NA,NA
duckplyr,c53701955b575e205d2b906031fe8343,Final tweaks.,NA,NA,NA,NA
duckplyr,ca1f727ee96787fd03cb0a741d93d2c4,Try fork.,NA,NA,NA,NA
duckplyr,d376c0f93b1766c27d537e01a20b5ef4,Fix width for articles.,NA,NA,NA,NA
duckplyr,1bf71379820e7acadebf3ecb050734a8,Ideal width for Firefox.,NA,NA,NA,NA
duckplyr,6022c1d06b3bb245e16306a340873b5a,Review prudence vignette (#577).,NA,NA,NA,NA
duckplyr,9bb43be147e1b0a335d07804afe36835,Review large vignette (#576).,NA,NA,NA,NA
duckplyr,31cdfc13b75f54276258bf8542c43ee1,Dev vignette (#574).,NA,NA,NA,NA
duckplyr,8de23d21a04f199c1ec389fd23ecfc11,Review limits vignette (#582).,NA,NA,NA,NA
duckplyr,68a8fce67e67758a588824767466329e,Review fallback vignette (#575).,NA,NA,NA,NA
duckplyr,aea9411016a8c6d05e86e077d1632bbf,Stable.,NA,NA,NA,NA
duckplyr,1d72ee1d0c5d28af74325f83346db365,Final tweaks.,NA,NA,NA,NA
duckplyr,0137a735732dc3b69938119a271e9089,Change wording for fallback in method help pages (#535).,NA,NA,NA,NA
duckplyr,899cfeb059b179e81bdfc101737b5cc3,Add footnote on prudence.,NA,NA,NA,NA
duckplyr,928e6d733e13fcc3475416e5b8231085,Add one-paragraph intro (#549).,NA,NA,NA,NA
duckplyr,3e563e812ca86cb2867156e76dc0035d,"Improved support for handling large data from files and S3: ingestion with `read_parquet_duckdb()` and others, and materialization with `as_duckdb_tibble()`, `compute.duckplyr_df()` and `compute_file()`. See `vignette(""large"")` for details.",NA,NA,NA,NA
duckplyr,49d6741af890e627e6ad4fd7f9e4d6ff,"Control automatic materialization of duckplyr frames with the new `prudence` argument to `as_duckdb_tibble()`, `duckdb_tibble()`, `compute.duckplyr_df()` and `compute_file()`. See `vignette(""prudence"")` for details.",NA,NA,NA,NA
duckplyr,5cc1cb477276214bf5301db300ec18ac,"`read_csv_duckdb()` and others, deprecating `duckplyr_df_from_csv()` and `df_from_csv()` (#210, #396, #459).",NA,NA,NA,NA
duckplyr,7a1a2db1cbcece809d4286708acd7980,"`read_sql_duckdb()` (experimental) to run SQL queries against the default DuckDB connection and return the result as a duckplyr frame (duckdb/duckdb-r#32, #397).",NA,NA,NA,NA
duckplyr,5f7b77447dc91b2045b0b9da7d9c7ac0,"`db_exec()` to execute configuration queries against the default duckdb connection (#39, #165, #227, #404, #459).",NA,NA,NA,NA
duckplyr,1eb4c4136a788f5e1c4a216d2c67896a,"`duckdb_tibble()` (#382, #457).",NA,NA,NA,NA
duckplyr,14e5b1140ac10da7bc7fb298361eb750,"`as_duckdb_tibble()`, replaces `as_duckplyr_tibble()` and `as_duckplyr_df()` (#383, #457) and supports dbplyr connections to a duckdb database (#86, #211, #226).",NA,NA,NA,NA
duckplyr,9316ca4287ad2c8a15f3f36c1b3d1ead,"`compute_parquet()` and `compute_csv()`, implement `compute.duckplyr_df()` (#409, #430).",NA,NA,NA,NA
duckplyr,ed0842694e990a21da40a0df743c8b8b,"`fallback_config()` to create a configuration file for the settings that do not affect behavior (#216, #426).",NA,NA,NA,NA
duckplyr,bb5da3c9350dccbcd403fe94f7388cb9,"`is_duckdb_tibble()`, deprecates `is_duckplyr_df()` (#391, #392).",NA,NA,NA,NA
duckplyr,883dc7921dfe8c29bbe2b1b9d4228bc6,"`last_rel()` to retrieve the last relation object used in materialization (#209, #375).",NA,NA,NA,NA
duckplyr,97273c4a2b95d40e93f61680839b80b6,"Add `""prudent_duckplyr_df""` class that stops automatic materialization and requires `collect()` (#381, #390).",NA,NA,NA,NA
duckplyr,1ad6df5372394f369e18ffe7bdeea7f8,"Partial support for `across()` in `mutate()` and `summarise()` (#296, #306, #318, @​lionel-, @​DavisVaughan).",NA,NA,NA,NA
duckplyr,64f239ed4dba966dc2d68d6ee0b9b015,"Improve fallback error message by explicitly materializing (#432, #456).",NA,NA,NA,NA
duckplyr,b8a3c8d79a9ea8a72d6af1861e07208a,"Improve `as_duckdb_tibble()` error message for invalid `x` (@​maelle, #339).",NA,NA,NA,NA
duckplyr,f1478d99e73fe7971ede90ed7db9432e,"Depend on dplyr instead of reexporting all generics (#405). Nothing changes for users in scripts. When using duckplyr in a package, you now also need to import dplyr.",NA,NA,NA,NA
duckplyr,539ca85ed7eaf6425e9fbce82daacf14,"The default DuckDB connection is now based on a file, the location defaults to a subdirectory of `tempdir()` and can be controlled with the `DUCKPLYR_TEMP_DIR` environment variable (#439, #448, #561).",NA,NA,NA,NA
duckplyr,4470e1244b536a11cecd530a5cb7a7de,"Internal `expr_scrub()` (used for telemetry) can handle function-definitions (@​toppyy, #268, #271).",NA,NA,NA,NA
duckplyr,ee8c1b54c181bcd8c3cd36f03430d22a,"New articles: `vignette(""large"")`, `vignette(""prudence"")`, `vignette(""fallback"")`, `vignette(""limits"")`, `vignette(""developers"")`, `vignette(""telemetry"")` (#207, #504).",NA,NA,NA,NA
duckplyr,8ca0d1aaa4af9840cce705a82e932eb1,"Move to the tidyverse GitHub organization, new repository URL https://github.com/tidyverse/duckplyr/ (#225).",NA,NA,NA,NA
duckplyr,c5c4dce3cd64df62eb518110c13f6b5e,"Avoid base pipe in examples for compatibility with R 4.0.0 (#463, #466).",NA,NA,NA,NA
duckplyr,1ca8c44fdcad23d6ab12e2774762d5c4,Switching to development version.,NA,NA,NA,NA
gh,7ed9b392efed17e37cbb99246147779f,"`gh_token()` can now pick up on the viewer's GitHub credentials (if any) when running on Posit Connect (@​atheriel, #217).",NA,NA,NA,NA
shiny,e9980db7568b299270d0ef5ef1322146,Shiny's Typescript assets are now compiled to ES2021 instead of ES5. (#4066),NA,NA,NA,NA
ggplot2,1ea7ca0a4d41c274b256ff2b03a07c67,"Staged expressions are handled more gracefully if legends cannot resolve them (@​teunbrand, #6264).",NA,NA,NA,NA
desc,c4f6afac4bde3d19c4d595dbe7c82ae9,"New `add_ror()` method and `desc_add_ror()` functions make it possible to add ROR IDs to authors directly instead of via the `comment` argument. (@​maelle, #158)",NA,NA,NA,NA
desc,4e66ba3ca2e620de20cf21b6c55af2e0,"All functions and methods managing possibly non individual authors (`add_author()`, `del_author()`, `add_role()`, `del_role()`, `search_for_author()`, etc.) gain a `ror` argument. (@​maelle, #158)",NA,NA,NA,NA
sessioninfo,2fc1c77c55a32f1eef946d7356782515,"`session_info()` and `platform_info()` now print the host name if the `sessioninfo.include_hostname` global option is set to `TRUE` (@​certara-jcraig, #99).",NA,NA,NA,NA
sessioninfo,e44aa791b93a00fc37343fffc80f3eba,sessioninfo now does not leave behind detritus in the temporary directory.,NA,NA,NA,NA
purrr,711df6e16cab2f28fd4b8c121d2153b6,"purrr gains the capacity for parallel and distributed map, powered by the mirai package. The argument `.parallel` has been added to `map()`, `map2()`, `pmap()` and variants to enable this. See `?parallelization` for more details (@​shikokuchuo, #1163).",NA,NA,NA,NA
httr2,40f271221440db70b90017e1beeddd97,`req_headers()` always redacts `Authorization` (#649).,NA,NA,NA,NA
httr2,fa53aa5fb1ce596059eebb7381fe43f9,`req_headers_redacted()` supports dynamic dots (#647),NA,NA,NA,NA
httr2,74ebe1164c68b235f28cd3ccd860237b,"`oauth_client()` and `oauth_token()` gain refreshed print methods that use bulleted lists, like other httr2 objects. Additionally, print a `oauth_client()` with a custom `auth` function no longer errors (#648).",NA,NA,NA,NA
httr2,78aefd91ec83380544bf78823b9f1792,"`resp_link_url()` once again ignores the case of headers (@​DavidRLovell, #655)",NA,NA,NA,NA
httr2,bb67ecba8663b710fcb6e96e8a5fbac4,"`req_dry_run()` and `req_verbose()` now do a better job of displaying compressed bodies (#91, #656).",NA,NA,NA,NA
renv,bd2556292c6acd526b39036536c56075,Fixed an issue where `renv` inadvertently made web requests in tests during `R CMD check`.,NA,NA,NA,NA
renv,25c142463f8b7f796b38a38784b88b7a,Fixed an issue where very long lockfiles could be truncated on write. (#2089),NA,NA,NA,NA
duckplyr,17ee4bb328e3896c32146f48282bff02,Use stingy instead of frugal (#594).,NA,NA,NA,NA
httr2,50140dca326a97ff7009ce0911ed4040,"`req_oauth_auth_code()` no longer adds trailing ""/"" characters to well-formed `redirect_uri` values (@​jonthegeek, #646).",NA,NA,NA,NA
lintr,e72f570ba5662b27592bfbf20ffda659,"Arguments `allow_cascading_assign=`, `allow_right_assign=`, and `allow_pipe_assign=` to `assignment_linter()` are all deprecated in favor of the new `operator=` argument. Usage of a positional first argument like `assignment_linter(TRUE)`, of which we found 0 cases on GitHub, is totally deprecated to allow `operator=` to be positionally first. See below about the new argument.",NA,NA,NA,NA
lintr,fc5c498433144ea4ab852047dc28df43,"`assignment_linter()` can be fully customized with the new `operator=` argument to specify an exact vector of assignment operators to allow (#2441, @​MichaelChirico and @​J-Moravec). The default is `<-` and `<<-`; authors wishing to use `=` (only) for assignment in their codebase can use `operator = ""=""`. This supersedes several old arguments: to accomplish `allow_cascading_assign=TRUE`, add `""<<-""` (and/or `""->>""`) to `operator=`; for `allow_right_assign=TRUE`, add `""->""` (and/or `""->>""`) to `operator=`; for `allow_pipe_assign=TRUE`, add `""%<>%""` to `operator=`. Use `operator = ""any""` to denote ""ignore all assignment operators""; in this case, only the value of `allow_trailing=` matters. Implicit assignments with `<-` are always ignored by `assignment_linter()`; use `implicit_assignment_linter()` to handle linting these.",NA,NA,NA,NA
httr2,6551cefff9d54daa2c8edf56921adefd,"`req_throttle()` now uses a ""token bucket"" which preserves the average rate limit, but allows bursts of higher requests.",NA,NA,NA,NA
cli,949912ef0178bd3355ecf38dd4eb412b,"Pluralization now handles edge cases (`NA`, `NaN`, `Inf` and `-Inf`) better (@​rundel, #716).",NA,NA,NA,NA
cli,3f4e2bc281bc0f826925856775245486,"`cli_progress_bar()` now accepts `total` = Inf or -Inf which mimics the behavior of when `total` is NA (@​LouisMPenrod, #630).",NA,NA,NA,NA
reticulate,43f107bc67dbf9044924e7e8a0473605,New `py_require()` function for declaring Python requirements for the current R session.,NA,NA,NA,NA
reticulate,cd9f44ce45600e828f65cd60f553a2a8,New `uv_run_tool()` function for running command line tools distributed via Python packages.,NA,NA,NA,NA
shinytest2,92ffc45ecb53b8872287ec8768130353,"`{shinytest2}` now imports `{cli}` and no longer imports `{crayon}` (@​olivroy, #399).",NA,NA,NA,NA
httr2,9a6e0eefacb514a992a8f4141cabf404,`req_perform_connection()` gives a better error if request fails at networking level.,NA,NA,NA,NA
shinytest2,1de4cd946b668ee2d69be97de3a1cc5d,Add support for `$click()`ing `{bslib}`'s `input_task_button()` (#389).,NA,NA,NA,NA
shinytest2,760d0fbfba1d86614f8d2c98764c435c,The `threshold` and `kernel_size` default values of the `AppDriver$expect_screenshot()` method are now configurable via two new global options: `shinytest2.compare_screenshot.threshold` and `shinytest2.compare_screenshot.kernel_size` (#401),NA,NA,NA,NA
duckplyr,0ad4cc8876e5bfd1a94c1473e2cb4a53,"Fix link in documentation (#600, #601).",NA,NA,NA,NA
httr2,1e55c4ec854681b8ee64a0bcda3f47ff,"`req_dry_run()` drops headers that otherwise will vary in tests, and gains the ability to prettify JSON output.",NA,NA,NA,NA
httr2,85d6cf3081374378cc8244d6b00847fa,`req_verbose()` automatically prettifies JSON responses (#668). You can disable this by setting `httr2_pretty_json`.,NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,Various things marked deprecated since {lintr} 3.0.0 have been fully deprecated. They will be completely removed in the subsequent release. See previous NEWS for advice on how to replace them.,NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,• `source_file=` argument to `ids_with_token()` and `with_id()`.,NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,"• Passing linters by name or as non-`""linter""`-classed functions.",NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,• `linter=` argument of `Lint()`.,NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,• `with_defaults()`.,NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,"• Linters `closed_curly_linter()`, `open_curly_linter()`, `paren_brace_linter()`, and `semicolon_terminator_linter()`.",NA,NA,NA,NA
lintr,7dffe41aab8417b65b01bf750ea8373c,• Helper `with_defaults()`.,NA,NA,NA,NA
lintr,e3667daa2f1c74ef2b0c7fbe70900cb8,"`cyclocomp_linter()` is no longer part of the default linters (#2555, @​IndrajeetPatil) because the tidyverse style guide doesn't contain any guidelines on meeting certain complexity requirements. With this, we also downgrade {cyclocomp} from `Imports:` to `Suggests:`. Note that users with `cyclocomp_linter()` in their configs may now need to install {cyclocomp} intentionally, in particular in CI/CD pipelines.",NA,NA,NA,NA
lintr,d89ac19446d57be6efad487d991d69ce,"Arguments `allow_cascading_assign=`, `allow_right_assign=`, and `allow_pipe_assign=` to `assignment_linter()` are all deprecated in favor of the new `operator=` argument. Usage of a positional first argument like `assignment_linter(TRUE)`, of which we found zero cases on GitHub, is totally deprecated to allow `operator=` to be positionally first. See below about the new argument.",NA,NA,NA,NA
lintr,ab69334887c37d52f0a308cfc1900558,"`rep_len_linter()` for encouraging use of `rep_len()` directly instead of `rep(x, length.out = n)` (part of #884, @​MichaelChirico). Note that in older versions of R (e.g. pre-4.0), `rep_len()` may not copy attributes as expected.",NA,NA,NA,NA
renv,21fee6999cdf66515db5593e1e2073a9,`renv::snapshot()` no longer fails to generate a new lockfile if the project contains a lockfile which could not be read or parsed.,NA,NA,NA,NA
renv,b7c706b46a015c830b75da710a49129d,Fixed an issue where lockfiles containing unicode characters were not correctly written or read with versions of R (\< 4.2.0) on Windows. (#2091),NA,NA,NA,NA
lintr,aa8c6f9e6d8646560c8db02bacf94aca,"As previously announced, the following fully-deprecated items are now removed from the package:",NA,NA,NA,NA
lintr,aa8c6f9e6d8646560c8db02bacf94aca,• `linter=` argument of `Lint()`.,NA,NA,NA,NA
lintr,d179c289be0d778f418d1a7a0d572d2e,"As previously announced, the following fully-deprecated items are now removed from the package:",NA,NA,NA,NA
lintr,d179c289be0d778f418d1a7a0d572d2e,"• Linters `closed_curly_linter()`, `open_curly_linter()`, `paren_brace_linter()`, and `semicolon_terminator_linter()`.",NA,NA,NA,NA
lintr,d179c289be0d778f418d1a7a0d572d2e,• `linter=` argument of `Lint()`.,NA,NA,NA,NA
webshot2,02f65f709b130fb558757ff6580ccd5c,`webshot()` works harder to set the size of the virtual viewport when `vwidth` and `vheight` are used. This change improves compatibility with recent versions of Chrome (\>= v132). (#72),NA,NA,NA,NA
lintr,7cc1c1ef8cfffe4b5e15b616ff15fd32,"As previously announced, the following fully-deprecated items are now removed from the package:",NA,NA,NA,NA
lintr,7cc1c1ef8cfffe4b5e15b616ff15fd32,"• Passing linters by name or as non-`""linter""`-classed functions.",NA,NA,NA,NA
lintr,7cc1c1ef8cfffe4b5e15b616ff15fd32,"• Linters `closed_curly_linter()`, `open_curly_linter()`, `paren_brace_linter()`, and `semicolon_terminator_linter()`.",NA,NA,NA,NA
lintr,7cc1c1ef8cfffe4b5e15b616ff15fd32,• `linter=` argument of `Lint()`.,NA,NA,NA,NA
lintr,7cabe010d03528775f383e9e4435ada7,Two linters marked as deprecated with warning in the previous release are now fully deprecated: `extraction_operator_linter()` and `unnecessary_nested_if_linter()`. They will be removed in the next release.,NA,NA,NA,NA
httr2,05cf0d17ab4c1f64e6069fe34040d171,"`req_user_agent()` now memoises the default user agent, since it's relatively slow (300 µs) to compute because it requires looking up version numbers.",NA,NA,NA,NA
renv,70134481b3c29295626a056fae3efd2b,Fixed an issue where `renv` could stall when loading a project and validating that the configured version of Bioconductor is compatible with the version of R currently in use.,NA,NA,NA,NA
lintr,53a07a488e6d78c827b11965c9cad88b,"Arguments `allow_cascading_assign=`, `allow_right_assign=`, and `allow_pipe_assign=` to `assignment_linter()` are now defunct.",NA,NA,NA,NA
lintr,98d4e7b84c8172648a042f8ea9272bb6,"`brace_linter()`' has a new argument `function_bodies` (default `""multi_line""`) which controls when to require function bodies to be wrapped in curly braces, with the options `""always""`, `""multi_line""` (only require curly braces when a function body spans multiple lines), `""not_inline""` (only require curly braces when a function body starts on a new line) and `""never""` (#1807, #2240, @​salim-b).",NA,NA,NA,NA
httr2,09aebfe32b4b838791a9c750c1b791b5,`req_perform_parallel(pool)` has been deprecated in favour of a new `max_active` argument (#681).,NA,NA,NA,NA
httr2,c1d185e18a19f2b55f277362a37b5e28,"Most of the limitations of `req_perform_parallel()` have been lifted. It can now refresh OAuth tokens and look at the cache for each individual requests. It also supports a simple version of `req_throttle()` and `req_retry()`, where it assumes that all requests have the same throttling and rate limits (#681).",NA,NA,NA,NA
lintr,7b8383c806ec4d69468f21d533b5122e,"`unnecessary_nesting_linter()` treats function bodies under the shorthand lambda (`\()`) the same as normal function bodies (#2748, @​MichaelChirico).",NA,NA,NA,NA
R6,621150813765499bdbbb668c5d2fc951,"Closed #298: In `.DollarNames.R6()`, avoid use of `NextMethod()`. This is to work around a compatibility issue with RStudio IDE. (#299)",NA,NA,NA,NA
httr2,d76c8bb27b7bbe73cbe3d993714ff226,New `local_verbosity()` (#687).,NA,NA,NA,NA
httr2,a82461f76c6b5ed829767ffd5bb12018,Can now use `HTTR2_VERBOSITY` env var to control default verbosity (#687).,NA,NA,NA,NA
duckplyr,2c0b6d1d25abae0d9cbf9994d453a1d1,Show source of error if data frame cannot be converted to duck frame (#614).,NA,NA,NA,NA
lintr,0ecf79d44eba04fa3e9d0fcdc05afd25,"`implicit_integer_linter(allow_colon = TRUE)` is OK with negative literals, e.g. `-1:1` or `1:-1` (#2673, @​MichaelChirico).",NA,NA,NA,NA
httr2,7df2f814cecaf6a6b4e9216f48e5c54e,`str()` correctly redacts redacted headers (#682).,NA,NA,NA,NA
httr2,c33f1daccfcf907953bdc32768e5bcb8,`req_headers()` replaces existing headers with different case (#682).,NA,NA,NA,NA
pointblank,19ff46169cb683294ac0cc14a21246a9,`write_yaml()` errors more informatively when `tbl` value is incompatible for yaml-writing (#597),NA,NA,NA,NA
lintr,b6f1e874b3954174df6c8576ae1e4ad1,"`Lint()`, and thus all linters, ensures that the returned object's `message` attribute is consistently a simple character string (and not, for example, an object of class `""glue""`; #2740, @​MichaelChirico).",NA,NA,NA,NA
lintr,e47dabe0ee085651614d844b284525fe,"`string_boundary_linter()` omits lints of patterns like `\\^` which have an anchor but are not regular expressions (#2636, @​MichaelChirico).",NA,NA,NA,NA
lintr,e7b7792c7475ca25755aee3f76d11c9a,"`missing_argument_linter()` allows empty calls like `foo()` even if there are comments between `(` and `)` (#2741, @​MichaelChirico).",NA,NA,NA,NA
lintr,426b5fcfe9149e6246c474385688ec30,`unnecessary_nesting_linter()`:,NA,NA,NA,NA
lintr,426b5fcfe9149e6246c474385688ec30,"• Treats function bodies under the shorthand lambda (`\()`) the same as normal function bodies (#2748, @​MichaelChirico).",NA,NA,NA,NA
lintr,426b5fcfe9149e6246c474385688ec30,"• Treats `=` assignment the same as `<-` when deciding to combine consecutive `if()` clauses (#2245, @​MichaelChirico).",NA,NA,NA,NA
reticulate,9eca3e6d3dcb75b6b55409c51cedb523,"Raw R arrays now convert to NumPy arrays with dtype ""V1"" (""void8"") (#1734).",NA,NA,NA,NA
reticulate,a7e1e47f8ac1ee990955acb1c57e3946,"NumPy arrays with dtype ""V1"" (""void8"") now convert to R raw arrays (#1734).",NA,NA,NA,NA
lintr,d922ae53471fa5a49dcaea53e18e6597,"Six linters marked as deprecated with warning in the previous release are now fully deprecated: `consecutive_stopifnot_linter()`, `extraction_operator_linter()`, `no_tab_linter()`, `single_quotes_linter()`, `unnecessary_nested_if_linter()`, and `unneeded_concatenation_linter()`. They will be removed in the next release.",NA,NA,NA,NA
pointblank,6906b531b6579b18af2f2df68274e915,Bugfix agents not searching the formula environment when materializing `~ tbl` (#599),NA,NA,NA,NA
bslib,322110d5180180759a91cf78d18f690a,`bs_theme_dependencies()` now avoids unecessarily copying internal package files to R's temporary directory more than once when preparing precompiled theme dependencies (e.g. for a standard `bs_theme()` theme). (#1184),NA,NA,NA,NA
plumber,a54863567121a838053b91623959aed6,bug: Mounts now use a `req$PATH_INFO` instead of a pre-computed value. (#888),NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,Improvements to `lint_lifecycle()` and `lint_tidyverse_lifecycle()` (@​AshesITR):,NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,• Updated to support lintr \>= 3.0.0 (#178).,NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,• Fixed default `pattern=` argument to only find R files (#165).,NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,• Fixed `lint_tidyverse_lifecycle()` ignoring the `pattern=` argument (#179).,NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,• Added support for Quarto qmd files to the default `pattern=` argument (#155).,NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,"• Added support for Rnw, Rhtml, Rrst, Rtex and Rtxt files to the default `pattern=` argument.",NA,NA,NA,NA
lifecycle,aa20df5532258d5ed7af14952c19b938,• Exported `lifecycle_linter()` to allow including the linter in `.lintr` configurations when using `lintr` (#122).,NA,NA,NA,NA
plumber,b42561c09dbbafddfd8592b7c7febe5f,`validate_api_spec()` now uses `@​redocly/cli` to validate the API spec. (#986),NA,NA,NA,NA
plumber,a5d3bd55ef4dbdf9a26ebffb8d36cf27,"Added `operationId` to each operation within the auto-generated OpenAPI output. The value is similar to the `PATH-VERB`, e.g. `/users/create-POST`. (#986)",NA,NA,NA,NA
lintr,62a01468dcc3e7e0bb7856f12133f190,"`seq_linter()` recommends using `seq_along(x)` instead of `seq_len(length(x))` (#2577, @​MichaelChirico).",NA,NA,NA,NA
plumber,c1dd36768269aef1044e04b2038e86cf,The port many now be specified as an environment variable. User-provided ports must be between 1024 and 49151 (following IANA guidelines) and may not be a known unsafe port. plumber will now throw an error if an invalid port is requested. (@​shikokuchuo @​gadenbuie #963),NA,NA,NA,NA
plumber,d54d0d568b5409d7f6feafbad98cf061,Added support for graphic devices provided by {ragg} and {svglite} (@​thomasp85 #964).,NA,NA,NA,NA
plumber,b893dacf5da50ed995153d36b4a221ae,Mounts now have a dynamic `req$PATH_INFO` instead of a pre-computed value. (#888),NA,NA,NA,NA
lintr,8e830221e950cb78fd06152b7b3c0de5,"`unnecessary_nesting_linter()` gives a more specific lint message, identifying the unmatched ""exit call"" that prompts the recommendation to reduce nesting (#2316, @​MichaelChirico).",NA,NA,NA,NA
chromote,3582f177751916caea1c5b2fa853bd16,"chromote now includes experimental features to download versioned binaries of Chrome and `chrome-headless-shell` for Mac (x64 or arm64), Windows (32- or 64-bit) or Linux (x86-64) from the Chrome for Testing service. (#198)",NA,NA,NA,NA
chromote,3582f177751916caea1c5b2fa853bd16,• Use `with_chrome_version()` or `local_chrome_version()` to temporarily switch to a specific version of Chrome. The appropriate binary will be downloaded automatically if not yet available locally.,NA,NA,NA,NA
chromote,3582f177751916caea1c5b2fa853bd16,• Use `chrome_versions_list()` to list installed or available versions of Chrome.,NA,NA,NA,NA
chromote,3582f177751916caea1c5b2fa853bd16,• Or use `chrome_versions_add()` and `chrome_versions_remove()` to manually add or remove a specific version of Chrome from chromote's cache.,NA,NA,NA,NA
reticulate,7aeb7779f9c05e6d183e5bf453076aeb,"Raw R arrays now convert to NumPy arrays with dtype ""V1"" (""void8"") (#1734). Use `r_to_py(as.array(x))` to efficiently convert raw vectors to numpy arrays.",NA,NA,NA,NA
reticulate,555d0669bf2d925c35572b0d38dde40a,"NumPy arrays with dtype ""V1"" (""void8"") now convert to R raw arrays (#1734). Use `py_to_r(array$view(""V1""))` to efficiently convert numpy arrays to raw vectors.",NA,NA,NA,NA
lintr,d11e9d423cb8e70b730f33fca26bece1,"`undesirable_operator_linter()` lints operators in prefix form, e.g. `` `%%`(x, 2) `` (#1910, @​MichaelChirico). Disable this by setting `call_is_undesirable=FALSE`.",NA,NA,NA,NA
gt,0844bec80b542288ad37c1b1362b760b,"The default table position in LaTeX is now ""t"" instead of ""!t"" (@​AaronGullickson, #1935).",NA,NA,NA,NA
duckplyr,933ca5f6eed192266a21d840c30cc858,Fix typo in `filter(.by = ...)` error message (#611).,NA,NA,NA,NA
duckplyr,7e394f9473aa2c585c2f3c189711970a,Check if extensions can be loaded before running examples and vignettes (#620).,NA,NA,NA,NA
duckplyr,20a02d7e673eca70cdabf3bbb6288235,Require duckdb \>= 1.2.0 (#619).,NA,NA,NA,NA
duckplyr,5515640306c63fa324542587c6fd4026,Break this version with duckdb 2.0.0 (#623).,NA,NA,NA,NA
duckplyr,63e9c40cefec635a17a3a88dc8f9d92f,"Separate `?compute_parquet` and `?compute_csv` (#610, #622).",NA,NA,NA,NA
duckplyr,c8fa6c6676b0dfc12c19dac03e60b810,"Italicize book title in README (@​wibeasley, #607).",NA,NA,NA,NA
duckplyr,7a4679f559371d3820f17c4d15e7c048,"Fix typo in `filter(.by = ...)` error message (@​maelle, #611).",NA,NA,NA,NA
duckplyr,d32311818656bb4b495a72bfdff6e7e9,Correct formatting for controlled fallbacks with `Sys.setenv(DUCKPLYR_FALLBACK_INFO = TRUE)`,NA,NA,NA,NA
lintr,c1e1f64c1a89c0e1c4dcbd3aaa4f0dab,"`indentation_linter()` handles `for` un-braced for loops correctly (#2564, @​MichaelChirico).",NA,NA,NA,NA
lintr,399586b9639eb8980cae15af2a722327,"The description in `?paste_linter` of `allow_file_path=` has been corrected (#2675, @​MichaelChirico). In particular, `allow_file_path=""never""` is the most strict form, `allow_file_path=""always""` is the most lax form.",NA,NA,NA,NA
lintr,07fea1a6e67047ff83e5cecc9bffcf37,`unnecessary_nesting_linter()` gives a more specific lint message identifying:,NA,NA,NA,NA
lintr,07fea1a6e67047ff83e5cecc9bffcf37,"• the unmatched ""exit call"" that prompts the recommendation to reduce nesting (#2316, @​MichaelChirico).",NA,NA,NA,NA
lintr,07fea1a6e67047ff83e5cecc9bffcf37,"• the specific `if()` statement that can be combined with the linted one (#1891, @​MichaelChirico).",NA,NA,NA,NA
lintr,f390a67320dfa34a32a8037507cdd604,"Setting `exclusions` supports globs like `knitr*` to exclude files/directories with a pattern (#1554, @​MichaelChirico).",NA,NA,NA,NA
lintr,15bb42f4f78cf09d8ddc21d1668ce886,"`return_linter()` works on functions that happen to use braced expressions in their formals (#2616, @​MichaelChirico).",NA,NA,NA,NA
reticulate,c02edc398df9237faeeff0df5e984a08,"New `py_require()` function for declaring Python requirements for the current R session. For details, see updated vignettes and help:",NA,NA,NA,NA
reticulate,c02edc398df9237faeeff0df5e984a08,• Installing Python Packages: https://rstudio.github.io/reticulate/dev/articles/python_packages.html,NA,NA,NA,NA
reticulate,c02edc398df9237faeeff0df5e984a08,• Using reticulate in an R Package: https://rstudio.github.io/reticulate/dev/articles/package.html,NA,NA,NA,NA
reticulate,c02edc398df9237faeeff0df5e984a08,• `py_require()` help: https://rstudio.github.io/reticulate/dev/reference/py_require.html,NA,NA,NA,NA
reticulate,f4eb1908815467a190009e293b8a90f9,"Raw R arrays and NumPy arrays with dtype ""V1"" (""void8"") now convert between each other. Use `r_to_py(as.array(x))` to efficiently convert raw vectors to NumPy arrays, and `py_to_r(array$view(""V1""))` to efficiently convert NumPy arrays to raw vectors. (#1734)",NA,NA,NA,NA
lintr,8b6e3e5b53bd8c24bdee0ea864988637,`comment_token` is removed from settings. This was a vestige of the now-defunct support for posting GitHub comments.,NA,NA,NA,NA
gt,e08367cef86557833f2135d17aad5d30,"Fixed an issue where `fmt_markdown()` could create strange output in Quarto (html and Typst formats) (@​olivroy, #1957, quarto-dev/quarto-cli#11932, quarto-dev/quarto-cli#11610).",NA,NA,NA,NA
tensorflow,ff4f7b040477f7062685068337513e9f,Updates for reticulate 1.41. The tensorflow R package now calls `reticuate::py_require()` when it is loaded. Calling `install_tensorflow()` in most circumstances is no longer necessary.,NA,NA,NA,NA
tensorflow,67309d3c033dadec70fb92adb7973008,GPU usage on M-series Macs is once again enabled by default.,NA,NA,NA,NA
tensorflow,dbbd1102402d6857562ed3e044590976,Fixes for R-devel (4.5),NA,NA,NA,NA
gt,5098361bd45043a32d7b948e4c099ab8,"Fixed an issue in `fmt_number()` where `drop_trailing_dec_mark` would be ignored if `use_seps = FALSE` (@​olivroy, #1961).",NA,NA,NA,NA
reticulate,8e5fc1cdb67544436dd77e1d8a9cf71d,Internal fixes to prevent reticulate-managed `uv` from writing outside reticulates cache directory (#1745).,NA,NA,NA,NA
renv,47e9fd6c7ea3e31a0c93898faf15f7dd,Fixed an issue where `renv` could fail to retrieve credentials registered for 'github.com' when querying URLs at 'api.github.com'.,NA,NA,NA,NA
rsconnect,e037e76f99e26278562b52caa4f66950,Content directories with a period in their name are no longer treated as a document path when computing the location for deployment records. (#1138),NA,NA,NA,NA
lintr,7ee29e9b1a2b989463ffa29a282b1c10,"`object_name_linter()` and `object_length_linter()` apply to objects assigned with `assign()` or generics created with `setGeneric()` (#1665, @​MichaelChirico).",NA,NA,NA,NA
readxl,9a95333aa9a10e16a74207f9971ce75f,"readxl embeds libxls v1.6.3, with release notes at https://github.com/libxls/libxls/releases/tag/v1.6.3. This version of libxls fixes several vulnerabilities.",NA,NA,NA,NA
readxl,8d451ede57903c6f784efde3ed99dbe1,"Other small internal changes have been made to comply with CRAN requests, such as avoiding the use of `Rf_StringTrue()`.",NA,NA,NA,NA
reticulate,7781681bac9de9e965c4ae3658185982,`uv_run_tool()` gains an `exclude_newer` argument (#1748).,NA,NA,NA,NA
reticulate,84140136195e16f75db45838e078dcec,Internal changes to support R-devel (4.5) (#1747).,NA,NA,NA,NA
shiny,c726d38b85d06257254542254f7a10e1,"When `textInput()` is called with `updateOn=""blur""`, instead of updating as the user types, the input value will update only when the text input loses focus or when the user presses Enter (or Cmd/Ctrl + Enter for `textAreaInput()`). (#4183)",NA,NA,NA,NA
xml2,38cbe3994851a328098d8659738efeba,Update maintainer,NA,NA,NA,NA
xml2,036be50c18aee67073d89e00ad64e755,Minor cleanups,NA,NA,NA,NA
duckplyr,1530f8f42584e11bc462e51bf6d83dbf,CRAN release v1.0.1 (#624).,NA,NA,NA,NA
pkgdown,4823c12f2a03cfc71df16269d733fe07,"pkgdown now transforms ROR IDs in `DESCRIPTION` into icons, like it already did for ORCID IDs. (#2850)",NA,NA,NA,NA
pak,589ef8ae9ab6b1d333f2258feee5a0b0,pak now supports HTTP basic authentication for CRAN-like repositories. See 'Authenticated repositories' in the reference manual.,NA,NA,NA,NA
pkgdown,f54c25b9493a3fba063c3d311d4321cd,"ROR IDs in `DESCRIPTION` are transformed into icons, similar to ORCID IDs. (#2850)",NA,NA,NA,NA
pkgdown,1d5d66a79eade37f47f093c1df110d60,"Articles (i.e., Rmd/qmd files in `vignettes/articles`, created by `usethis::use_article()` and available on pkgdown sites but not included in a built package) have improved test cases (thanks to @​venpopov and @​ethanbass).",NA,NA,NA,NA
reticulate,d28ebc1531f242031a46150062ce5baf,"Reticulate-managed `uv` can now resolve system-installed Pythons, supporting platforms where pre-built binaries are unavailable, such as musl-based Alpine Linux (#1751, #1752).",NA,NA,NA,NA
gt,c1c702a5e30a6e6bcee4220723adcde9,"`gt(row_group_as_column = TRUE)` now works if multiple groups are supplied (@​olivroy, #1552).",NA,NA,NA,NA
reticulate,c48d035625f086be28e85251a46061a0,"`py_register_load_hook()` is now exported to enable usage described in the ""Using reticulate in an R package vignette"" (#1754). https://rstudio.github.io/reticulate/articles/package.html",NA,NA,NA,NA
reticulate,dcad9f43c9c214017b13ce52f4aac959,Fixed an issue in RStudio on Windows where interrupts were ignored while Python code was executing (#1753).,NA,NA,NA,NA
lintr,7775f6bb7e4a83162daba582c0a5fd82,"`object_name_linter()` and `object_length_linter()` account for S3 class correctly when the generic is assigned with `=` (#2507, @​MichaelChirico).",NA,NA,NA,NA
keras,d7aaa279c4c64ebb7a58557f18bd7654,"`%*%` now dispatches to `op_matmul()` for tensorflow tensors, which has relaxed shape constraints compared to `tf$matmul()`.",NA,NA,NA,NA
xml2,2ea4560c920981a799f086ea2428c830,"Replace new ""non-api"" call IS_S4_OBJECT with Rf_isS4",NA,NA,NA,NA
xml2,9f0f6885e4a881cdba68d7faf7f4e311,Windows: update fallback libs (for R \< 4.3) to libxml2 2.11.5,NA,NA,NA,NA
reticulate,3b7b0b026f98f4f656cd6f3a9d582207,Updates for Positron to fix issues with `repl_python()` and Variables Pane (#1755).,NA,NA,NA,NA
lintr,f5556f360328da3f8551ccb4007d0e63,"`assignment_linter()` with `operator = ""=""` does a better job of skipping implicit assignments, which are intended to be governed by `implicit_assignment_linter()` (#2765, @​MichaelChirico).",NA,NA,NA,NA
pkgdown,96edbde3d9f5309c7eec7acb865effe3,Support for math rendering using katex and mathjax was improved and now includes necessary components using CDN (#2704).,NA,NA,NA,NA
pkgdown,252162098ce8f367a790b2cd1759a770,"Articles (i.e., Rmarkdown/Quarto documents in `vignettes/articles`, created by `usethis::use_article()` and available on pkgdown sites but not included in a built package) have improved test cases (thanks to @​venpopov and @​ethanbass).",NA,NA,NA,NA
renv,c376dcc577edda7952c628019788cdf2,"`renv` gains the `sysreqs()` function, which can be used to query the system packages required by a set of R packages. Functionality is currently available for Debian-based distributions, as well as Red Hat distributions.",NA,NA,NA,NA
renv,fd1edb2a5a5054f6a9d0704de2fb0809,"On Linux, `renv` now uses the database from https://github.com/rstudio/r-system-requirements when determining if an R package's required system libraries are installed, and notifies the user which packages (if any) are missing during install / restore.",NA,NA,NA,NA
keras,8f6d70c409050f7d143fcda7e0fdf364,Fixed an issue where calling a `Metric` and `Loss` object with unnamed arguments would error.,NA,NA,NA,NA
leaflet,68513c8c63d0ce18057d1d6c034e89ae,"`{leaflet}` no longer install sp by default and attempts to convert object to sf internally before creating a map and warns when it fails conversion (@​olivroy, #942).",NA,NA,NA,NA
lintr,4dcd22c225136d31fd32b68a5497ce1d,"Argument `interpret_glue` to `object_usage_linter()` is deprecated in favor of the more general `interpret_extensions`, in which `""glue""` is present by default (#1472, @​MichaelChirico). See the description below.",NA,NA,NA,NA
lintr,8ca7cc6ff9faa4c05d0089c50dd75676,"`object_usage_linter()` gains argument `interpret_extensions` to govern which false positive-prone common syntaxes should be checked for used objects (#1472, @​MichaelChirico). Currently `""glue""` (renamed from earlier argument `interpret_glue`) and `""rlang""` are supported. The latter newly covers usage of the `.env` pronoun like `.env$key`, where `key` was previously missed as being a used variable.",NA,NA,NA,NA
lintr,0a7a4fca3c1b26e2420f316a055c91ed,"`coalesce_linter()` encourages the use of the infix operator `x %||% y`, which is equivalent to `if (is.null(x)) y else x` (#2246, @​MichaelChirico). While this has long been used in many tidyverse packages (it was added to {ggplot2} in 2008), it became part of every R installation from R 4.4.0.",NA,NA,NA,NA
leaflet,4d8c2b910fd83f9374c81097959957e6,"The `breweries91`, `atlStorms2005`, and `gadmCHE` datasets are now `{sf}` objects (@​olivroy, #944).",NA,NA,NA,NA
leaflet,ccb7a91f070a45a89002e929f703bbae,"`{leaflet}` now requires R 3.5 and above (@​olivroy, #944).",NA,NA,NA,NA
lintr,37ba6c45fd4981914742599ae12f7acb,"`T_and_F_symbol_linter()` ignores `T` and `F` used as symbols in formulas (`y ~ T + F`), which can represent variables in data not controlled by the author (#2637, @​MichaelChirico).",NA,NA,NA,NA
lintr,a07d1d9e6bee3826a9cfc9ffc3dcd7b2,"`todo_comment_linter()` finds comments inside {roxygen2} markup comments (#2447, @​MichaelChirico).",NA,NA,NA,NA
lintr,e7a1fbde6ae39d164075530dc6f462ba,"Files with encoding inferred from settings read more robustly under `lint(parse_settings = TRUE)` (#2803, @​MichaelChirico).",NA,NA,NA,NA
lintr,c2843a4af936f9883e494405efe557a7,"`get_source_expression()` captures warnings emitted by the R parser (currently always for mis-specified literal integers like `1.1L`) and `lint()` returns them as lints (#2065, @​MichaelChirico).",NA,NA,NA,NA
reticulate,80ab74ae333928c82688b690cb7f30e4,Fixed an issue with pointing reticulate at a pyenv shim python (#1758),NA,NA,NA,NA
lintr,063a268f3a767544ca86ecb27a97fd15,`seq_linter()`:,NA,NA,NA,NA
lintr,063a268f3a767544ca86ecb27a97fd15,"• recommends using `seq_along(x)` instead of `seq_len(length(x))` (#2577, @​MichaelChirico).",NA,NA,NA,NA
lintr,063a268f3a767544ca86ecb27a97fd15,"• recommends using `sequence()` instead of `unlist(lapply(ints, seq))` (#2618, @​Bisaloo)",NA,NA,NA,NA
lintr,298a4085de54651b44ea40f9ec321dd5,"`boolean_arithmetic_linter()` finds many more cases like `sum(x | y) == 0` where the total of a known-logical vector is compared to 0 (#1580, @​MichaelChirico).",NA,NA,NA,NA
usethis,eb4d9ec1ca6480ae1960a9fef677d1e0,"`use_air()` is a new function to configure a project to use Air, an extremely fast R code formatter.",NA,NA,NA,NA
httr2,131f022c8d9392f7866bae879cf1ba31,"`req_perform_parallel()` lifts many of the previous restrictions. It supports simplified versions of `req_throttle()` and `req_retry()`, can refresh OAuth tokens, and checks the cache before/after each request. (#681).",NA,NA,NA,NA
httr2,94eb48c5414bd5ca797e718c0bb28368,Default verbosity can be controlled by the `HTTR2_VERBOSITY` environment variable (#687).,NA,NA,NA,NA
httr2,aa2bb84672e6c64ed31852a478328473,`local_verbosity()` matches the existing `with_verbosity()` and allows for local control of verbosity (#687).,NA,NA,NA,NA
httr2,95852ed5d0caa1be3ba5f7bc7de30c51,"`req_dry_run()` and `req_verbose()` display compressed correctly (#91, #656) and automatically prettify JSON bodies (#668). You can suppress prettification with `options(httr2_pretty_json = FALSE)` (#668).",NA,NA,NA,NA
httr2,a68339fe690fe1fa98e50701ef83a833,"`aws_v4_signature()` correctly processes URLs containing query parameters (@​jeffreyzuber, #645).",NA,NA,NA,NA
httr2,ba74adfb221c851ec127070770393c6d,"`oauth_client()` and `oauth_token()` implement improved print methods with bulleted lists, similar to other httr2 objects, and `oauth_client()` with custom `auth` functions no longer produces errors (#648).",NA,NA,NA,NA
httr2,fa9edec4d878d8807dc5a971c6103ac2,`req_dry_run()` omits headers that would vary in tests and can prettify JSON output.,NA,NA,NA,NA
httr2,b1cedc1d85b34df09684da5bfe6bf89a,`req_headers()` automatically redacts `Authorization` headers (#649) and correctly implements case-insensitive modification of existing headers (#682).,NA,NA,NA,NA
httr2,6fd031d1411a939c8f607f353d67d1e1,`req_headers_redacted()` now supports dynamic dots (#647).,NA,NA,NA,NA
httr2,6967ad05c2eeafa9377b21ce6e396520,"`req_oauth_auth_code()` no longer adds trailing ""/"" characters to properly formed `redirect_uri` values (@​jonthegeek, #646).",NA,NA,NA,NA
httr2,479b8554599e3faad0354a55ab3b8001,`req_perform_connection()` produces more helpful error messages when requests fail at the networking level.,NA,NA,NA,NA
httr2,6ee729024703b11792e765986885f4f4,`req_perform_parallel(pool)` now is deprecated in favour of a new `max_active` argument (#681).,NA,NA,NA,NA
httr2,1161c728eb8eff9c570badf89b6dbe29,"`req_user_agent()` memoizes the default user agent to improve performance, as computing version numbers is relatively slow (300 µs).",NA,NA,NA,NA
httr2,0a3aa4396a669fbfa0ffdb4b404e796e,"`resp_link_url()` once again respects the case insensitivity for header names (@​DavidRLovell, #655).",NA,NA,NA,NA
httr2,27837f936fd6f795244903607d742a58,"`resp_stream_sse()` automatically retrieves the next event when the current event contains no data, and returns data as a single string (#650).",NA,NA,NA,NA
bslib,7a8e8bb53aa7b4f5bbc3cec9c134df37,Fixed an issue where the `<main>` areas of `page_sidebar()` and `page_navbar()` (with a `sidebar`) were made to be a fillable containers even when `fillable = FALSE`. (#1188),NA,NA,NA,NA
renv,601c1d9488b1789714f240314e55e545,"`renv::install()` gains the `transactional` argument, for parity with `renv::restore()`. (#1109)",NA,NA,NA,NA
renv,99cf577c110d120d27e6639b6a06ecce,"The environment variable `RENV_PATHS_VERSION` can now be used to substitute the R version component normally used in library / cache paths. The provided path can include placeholders like `%V` for the full R version including the patch level, and `%v` for the R version without the patch level. Defaults to `R-%v` when unset. (#1687)",NA,NA,NA,NA
renv,0041a37e6bed24fa1eddc2f5d4ef6c8c,"`renv` now supports profile-specific comments within `.gitignore` and `.renvignore` files. These are comments of the form `#| <code>`, where `<code>` is R code which should indicate if the `.renvignore` rules should apply. Typically, this should be of the form `#| profile == ""extra""`, or `#| profile %in% c(""extra"", ""other"")`. Note that only a small subset of base R functions are available for evaluation in this context. Note that the first section in a `.renvignore` implicitly applies to all profiles -- if you want to limit it to just the default profile, you can use `#| profile == ""default""` for the first line. (#1662)",NA,NA,NA,NA
renv,5d6810b13950672ffe69901821be68a1,"Fixed an issue where package installation could fail on Arch Linux with the error message ""don't know how to check sysreqs on this system"". (#2107)",NA,NA,NA,NA
chromote,fdf183d6963f66d1c6faaaa658bcaecc,"`ChromoteSession$new()` gains a `mobile` argument that can be used to set the device emulation in that session to emulate a mobile browser. The default is `mobile = FALSE`, which matches previous behavior. (#205)",NA,NA,NA,NA
chromote,ba88a04464ff9890c02fbb755dd161d8,"`ChromoteSession$new()` now sets `width` and `height` using Emulation.setDeviceMetricsOverride, which works for all Chrome binaries and versions. This fixes an issue with `width` and `height` being ignored for Chrome versions 128-133. (#205)",NA,NA,NA,NA
renv,7974c876fbb5a696f19a3a10cb79db69,"`renv::update()` now only updates the packages installed in the project library by default. `renv::update(all = TRUE)` can be used to also check if packages installed in the default library are out-of-date, and install updated copies into the project library. (#2108)",NA,NA,NA,NA
pointblank,69deef9e1274ae319ebc6ccdefe995c7,A new Get Started vignette (#605).,NA,NA,NA,NA
duckplyr,981aa3dd413239412d6ce674aeca9f35,Check loadability of extensino in test (#636).,NA,NA,NA,NA
duckplyr,476e5a2926b9af7c9362eccaee934060,Joins no longer materialize the input data when the package is used with `methods_overwrite()` or `library(duckplyr)` (#641).,NA,NA,NA,NA
duckplyr,bd08d5dfbbe05ccbf6356c389dbf2ccb,"`compute()` does not have a fallback, failures are reported to the client (#637).",NA,NA,NA,NA
duckplyr,0624fa748ebbbe9c9be434a1eabab416,Implement `slice_head()` (#640).,NA,NA,NA,NA
duckplyr,5ec90b9037c20a99980152d50ae26a0b,Fix sync scripts and add reproducible code (#639).,NA,NA,NA,NA
reticulate,7a1a37ae01495166b86af68399e96ac5,"Fixed an issue where `[` received Python objects as slice arguments. e.g., `x[start:end]` when `start` or `end` were Python objects (#1731).",NA,NA,NA,NA
chromote,323080b7d592fb4d24646d31be7852ec,"`ChromoteSession` gains two new helper methods: `$set_viewport_size()` and `$get_viewport_size()`. These methods allow you to change the viewport size -- effectively the virtual window size for a page -- or to get the current viewport size. If you previously relied on `$Emulation$setVisibleSize()` (now a deprecated method in the Chrome DevTools Protocol), `$set_viewport_size()` is a good replacement as it uses Emulation.setDeviceMetricsOverride instead. (#206)",NA,NA,NA,NA
duckplyr,b2fd7e5a91bedf3f6985111523e47c4d,Internal `rel_to_df()` needs `prudence` argument (#644).,NA,NA,NA,NA
ragg,f69b014267deac4dfb9e402a6a05fb61,Added `agg_record()` for optimised plot recording,NA,NA,NA,NA
chromote,a078e6d5eaec04177b0bfcfb97aeaf52,Fixed a bug in `chromote_info()` on Windows with Powershell when no version info is returned. (#207),NA,NA,NA,NA
plumber,db86e308b9a6afaa1e2bfbb6fdbbf3ed,Added support for Arrow IPC Streams (@​josiahparry #968),NA,NA,NA,NA
renv,0cdb01cbb7e8630dc6b8d348b9386cc5,Fixed an issue where `renv::hydrate()` could fail to install packages discovered in the user library during `renv::init()`. (#2109),NA,NA,NA,NA
duckplyr,028bf2b2a683784539b2fbb51051643b,Translate `dplyr::coalesce()`.,NA,NA,NA,NA
duckplyr,1d983d307e0a2d72d23281f3350e31a5,"Bring tools and patch up to date (@​joakimlinde, #647).",NA,NA,NA,NA
keras,87ed90eb91ea1cd3cc3b9661ec20edb9,"`KERAS_HOME` is now set to `tools::R_user_dir(""keras3"", ""cache"")` if `~/.keras` does not exist and `KERAS_HOME` is unset.",NA,NA,NA,NA
keras,7f7282155ed64db33ebd91488c53d40e,"`tf.experimental_enable_numpy_behavior()` is no longer automatically called, due to errors with `keras-hub`. This change makes dtype promotion behavior more strict. To reenable, it's recommended to use ""safe"" mode:",NA,NA,NA,NA
keras,7f7282155ed64db33ebd91488c53d40e,"```
reticulate::import(""tensorflow"")$experimental$numpy$
  experimental_enable_numpy_behavior(
    prefer_float32 = TRUE,
    dtype_conversion_mode = ""safe""
  )
```",NA,NA,NA,NA
keras,7f7282155ed64db33ebd91488c53d40e,• new `op_convert_to_array()` to convert a tensor to an R array.,NA,NA,NA,NA
keras,7f7282155ed64db33ebd91488c53d40e,• Fixed an issue where `op_shape()` would sometimes return a TensorFlow `TensorShape`,NA,NA,NA,NA
keras,7f7282155ed64db33ebd91488c53d40e,"• Fixes for `metric_iou()`, `op_top_k()`, and `op_eye()` being called with R atomic doubles",NA,NA,NA,NA
R6,913ae8566383d46e22011288b3816668,"In `.DollarNames.R6()`, add a default value for `pattern = """"`.",NA,NA,NA,NA
pillar,d0821544606c78ede70cb71afd633fda,"Show up to 20 rows by default for lazy tables again, regression introduced in pillar 1.10.0 (#727).",NA,NA,NA,NA
pillar,ebfb575235deea87f7a2e9c2481a9092,Must be on one line.,NA,NA,NA,NA
pillar,fdc1fd954a2acf9e09955dedd2f909da,Fix package name for R \< 4.3.,NA,NA,NA,NA
pillar,44f8f0c6191cfaf4cd3ffad3ead9bdc6,Hard ignore.,NA,NA,NA,NA
pillar,bb8a33dd08d1e82d19bba6e7a226764a,Ignore udunits2 for R \< 4.3.0.,NA,NA,NA,NA
pillar,a0d4cbd6199f5f7e2f189467c607c97b,Add tests for regression.,NA,NA,NA,NA
chromote,5d5fe809515f0bea8ce13fc9ae9dac0a,"`Chromote` and `ChromoteSesssion` gain an `$auto_events_enable_args()` method that sets that arguments used by chromote's auto-events feature when calling the `enable` command for a domain, e.g. `Fetch.enable`. (#208)",NA,NA,NA,NA
xml2,a3477ff89da4692fa523301e8c9069fd,Compile with C_VISIBILITY and CXX_VISIBILITY on supporte platforms,NA,NA,NA,NA
chromote,d33fd47d25aa0d65610c88f0cad3df7a,The `$view()` method of a `ChromoteSession` will now detect when `chrome-headless-shell` is being used and will use the system browser (via `utils::browseURL()`) rather than the Chrome instance attached to chromote. (#214),NA,NA,NA,NA
clock,9ee1dd14a69c70773d60f31973bd1adc,"Fixed `-Wdeprecated-literal-operator` reported by clang (#386, @​MichaelChirico).",NA,NA,NA,NA
clock,8afd7028d8d67891adc8dacc3aadb25d,"`%Y`, `%F`, `%G`, and `%c` now parse up to 4 *characters* by default, rather than 4 *digits*. This is more in line with the C++20 specification and was a change made in the upstream `<date.h>` parser. Practically, this means that negative years such as `-1000-01-01` will no longer parse with `%Y-%m-%d`, and instead requires `%5Y-%m-%d` to capture the leading `-` (#387).",NA,NA,NA,NA
clock,58c9cf1a7d7c0ae0e8903f4ddfcffa76,"tzdb \>=0.5.0 is required. Note that older versions of clock are not compatible with tzdb 0.5.0 and above, so if you are having issues (particularly with parsing) please make sure that both clock and tzdb are fully updated (#387).",NA,NA,NA,NA
reticulate,f597fdd8ec4d52269f7e4c84afb2469c,The `[` method will now translate symbol `..` to a Python Ellipsis `...`. (#1763),NA,NA,NA,NA
keras,510b1b8271b02d0d4306b95fae339eeb,New `op_subset()` and `x@​r[...]` methods enable tensor subsetting using R's `[` semantics and idioms.,NA,NA,NA,NA
keras,e3954d0453cbcd612d3742ed94c425b4,"New subset assignment methods implemented for tensors: `op_subset(x, ...) <- value` and `x@​r[...] <- value`",NA,NA,NA,NA
keras,a2997215c7c2bcc187e5ffb2df75d189,"Breaking changes: All operations prefixed with `op_` now return 1-based indices by default. The following functions that return or consume indices have changed: `op_argmax()`, `op_argmin()`, `op_top_k()`, `op_argpartition()`, `op_searchsorted()`, `op_argsort()`, `op_digitize()`, `op_nonzero()`, `op_split()`, `op_trace()`, `op_swapaxes()`, `op_ctc_decode()`, `op_ctc_loss()`, `op_one_hot()`, `op_arange()`",NA,NA,NA,NA
keras,9549a263b1623d56631bccc2a17fec6b,"`op_arange()` now matches the semantics of `base::seq()`. By default it starts, includes the end value, and automatically infers step direction.",NA,NA,NA,NA
keras,1d970739cb9b3dfcbf5cf7019d09f88d,`op_one_hot()` now infers `num_classes` if supplied a factor.,NA,NA,NA,NA
keras,a277afa2a2f650d53a35f3fac642d2e0,`op_hstack()` and `op_vstack()` now accept arguments passed via `...`.,NA,NA,NA,NA
keras,519f6b821b389c677253d1f9247c3287,`application_decode_predictions()` now returns a processed data frame by default or a decoder function if predictions are missing.,NA,NA,NA,NA
keras,55d619d2942d85118e2be6328dd4faf9,`application_preprocess_inputs()` returns a preprocessor function if inputs are missing.,NA,NA,NA,NA
keras,d048be760cae01d535729cd6168e462a,"Various new examples added to documentation, including `op_scatter()`, `op_switch()`, and `op_nonzero()`.",NA,NA,NA,NA
keras,b18f4e20ea907a799db3f042f96c26e9,New `x@​py[...]` accessor introduced for Python-style 0-based indexing of tensors.,NA,NA,NA,NA
keras,11234d46325290d422a88699c82aba56,"New `Summary` group generic method for `keras_shape`, enabling usage like `prod(shape(3, 4))`",NA,NA,NA,NA
keras,52f5c254e99535ef644eefec5023ebb3,new `op_convert_to_array()` to convert a tensor to an R array.,NA,NA,NA,NA
keras,ea70893b0c778d41a6c6efd2b432461b,Fixed an issue where `op_shape()` would sometimes return a TensorFlow `TensorShape`,NA,NA,NA,NA
keras,d7b2749adf6f4e1fe2ec0a7a677b4560,"Fixes for `metric_iou()`, `op_top_k()`, and `op_eye()` being called with R atomic doubles",NA,NA,NA,NA
chromote,5cda4283119062cc54b9cd247b0bacf2,"`Chromote` and `ChromoteSession` once again corrrectly handles connections to remote Chrome browsers via `ChromeRemote`. Calling `$close()` on a `Chromote` object connected to a remote browser no longer attempts to close the browser, and will now simply close the websocket connection to the browser. For local process, the `Chromote$close()` gains a `wait` argument that sets the number of seconds to wait for Chrome to gracefully shut down before chromote closes the process. (#212)",NA,NA,NA,NA
quarto,72777431c445dcec497baeacccb8ce0e,"`QUARTO_R_QUIET` environment variable can be used to set `quarto.quiet` option, which overrides any `quiet = TRUE` argument passed to `quarto_*` functions. This can be useful to debug Quarto rendering inside other packages, like **pkgdown**. Overrides will also now happens for GHA debug logging.",NA,NA,NA,NA
chromote,c6a214e05eb11fdd23e33980a86aa5f1,chromote now has a hex sticker! Thank you to @​davidrsch for the inspiration. (#216),NA,NA,NA,NA
ragg,c0e9149d74c65246846e9b6985284cc8,"Added support for hold and flushing, mainly in service of Positron",NA,NA,NA,NA
reticulate,f6132025b99630b4970943eae363706c,The `[` method can now accept index values greater than 2\^31 (#1769),NA,NA,NA,NA
renv,2ba4df462a3158dd0a917cdb75985fd4,Fixed an issue where `renv::dependencies()` could fail with an unhelpful error message if the scanned document contained a malformed YAML header. (#2117),NA,NA,NA,NA
tibble,4e6abcf79056c70130abf43dfc9fc6a4,IDE.,NA,NA,NA,NA
renv,56c515851c9d43c56929e107e0feaff2,`renv` now only checks for archived packages during installation when `options(renv.install.allowArchivedPackages = TRUE)` is set.,NA,NA,NA,NA
renv,0ea1e522d773afc5d97142e3a4b0ce91,Fixed an issue where `renv` could erroneously record packages installed from Posit Package Manager snapshots as being installed from CRAN. (#2104),NA,NA,NA,NA
tibble,fb459e376f332178dace368bf566381f,Create `index.md` for pkgdown.,NA,NA,NA,NA
tibble,7571ab820d19c212279cd1895f395e73,Ignore files.,NA,NA,NA,NA
tibble,ad89ee6bacea2c95146c7d845564e81f,Fix `R CMD check` errors on R-devel.,NA,NA,NA,NA
tibble,0451dfaeb7a5d17ce161e6af8400382b,"Keep a copy of the vignettes inside the tests (#1576, #1586).",NA,NA,NA,NA
tibble,e9ace6ea7f9042e3f8ebf83e3cf9f14d,"Update comparison between tibble and data.frame (@​olivroy, #1567).",NA,NA,NA,NA
tibble,b34bd8b1bcb90a66e707015d46c41848,"Use pak for installing dev version in README (@​luisDVA, #1600).",NA,NA,NA,NA
renv,9a0a5a50fcbecf03945532dde24c4930,`renv` now only checks for archived packages during installation when `options(renv.install.allowArchivedPackages = TRUE)` is set. This fixes an issue where `renv` could erroneously discover that Rcpp 1.3 was available when using the Posit Package Manager repository.,NA,NA,NA,NA
renv,54ce8e9b77e58c14de79d651021ea7fd,Fixed an issue where multimode R documents containing chunk headers which did not parse to an R list could cause dependency inference to fail. (#2110),NA,NA,NA,NA
httr2,592edce8ff6b3f772784c9817addc591,"Fix AWS request signing due to `argument 'cache' is missing` error (#706, @​jcheng5).",NA,NA,NA,NA
httr2,a17c5fddcd1c41ee5087244c5b0854ed,`req_headers()` more carefully checks its input types (#707).,NA,NA,NA,NA
ggplot2,fcb1071cde8b807304796a693c8b9077,"Date scales silently coerce `<POSIXct>`{=html} to `<Date>`{=html} and datetime scales silently coerce `<Date>`{=html} to `<POSIXct>`{=html} (@​laurabrianna, #3533)",NA,NA,NA,NA
ggplot2,5d3c87427088bdd712b7ac820e5b6b35,"(internal) layer data can be attenuated with parameter attributes (@​teunbrand, #3175).",NA,NA,NA,NA
ggplot2,fe96886fe9edd179132e2271bbb9fa5d,"`ggsave()` can write a multi-page pdf file when provided with a list of plots (@​teunbrand, #5093).",NA,NA,NA,NA
ggplot2,462012082aeb2c79d98c75ea317d3777,Deprecated functions and arguments prior to ggplot2 3.0.0 throw errors instead of warnings.,NA,NA,NA,NA
ggplot2,b1c83b644771e03446cd5e95eb6858b8,Functions and arguments that were soft-deprecated up to ggplot2 3.4.0 now throw warnings.,NA,NA,NA,NA
ggplot2,eab717c1a2de57d023fd0eaead30d475,"(internal) When `validate_subclass()` fails to find a class directly, it tries to retrieve the class via constructor functions (@​teunbrand).",NA,NA,NA,NA
ggplot2,af7eb570347fb11b35ce5f8f85bce940,"Fixed regression with incorrectly drawn gridlines when using `coord_flip()` (@​teunbrand, #6293).",NA,NA,NA,NA
ggplot2,1a6585e63468e8620e417644bfab0bb4,"`theme_classic()` has the following changes (@​teunbrand, #5978 & #6320):",NA,NA,NA,NA
ggplot2,1a6585e63468e8620e417644bfab0bb4,• Axis ticks are now black (`ink`-coloured) instead of dark gray.,NA,NA,NA,NA
ggplot2,1a6585e63468e8620e417644bfab0bb4,"• Axis line ends are now `""square""`.",NA,NA,NA,NA
ggplot2,1a6585e63468e8620e417644bfab0bb4,• The panel grid is now blank at the `panel.grid` hierarchy level instead of the `panel.grid.major` and `panel.grid.minor` levels.,NA,NA,NA,NA
ggplot2,3f605cd596f2e5651ac8978c6e876560,(internal) The ViewScale class has a `make_fixed_copy()` method to permit copying trained position scales (#3441).,NA,NA,NA,NA
ggplot2,ccf6f235f1af2ee9ea0ffd424d7fa552,"New `stat_connect()` to connect points via steps or other shapes (@​teunbrand, #6228)",NA,NA,NA,NA
ggplot2,9ec1bd78dffa893563ffa51b11b5f6fc,"`geom_tile()` and `position_jitter()` computes default widths and heights per panel instead of per layer (@​teunbrand, #5740, #3722).",NA,NA,NA,NA
ggplot2,7ab2310aaf8304189268df4524287cc6,"Improved consistency of curve direction in `geom_curve()` (@​teunbrand, #5069)",NA,NA,NA,NA
ggplot2,6fa58d153c1c69264df06a24a1c483a6,"`position_fill()` avoids stacking observations of zero (@​teunbrand, #6338)",NA,NA,NA,NA
ggplot2,129d5bb9d9a8dd11cc8b362d18edd9b1,"New `layer(layout)` argument to interact with facets (@​teunbrand, #3062)",NA,NA,NA,NA
ggplot2,3935dfd12213a20ed5994188818530bc,"(internal) `legend.key.width` and `legend.key.height` calculations are no longer precomputed before guides are drawn (@​teunbrand, #6339)",NA,NA,NA,NA
ggplot2,7e092504a56bbc0dbb6e087853212f8f,"`linetype = NA` is now interpreted to mean 'no line' instead of raising errors (@​teunbrand, #6269).",NA,NA,NA,NA
ggplot2,995072fd52710a0fda4397ac5d8dae23,"The default colour and fill scales have a new `palette` argument (@​teunbrand, #6064).",NA,NA,NA,NA
reticulate,f3aa1571bbf31e271625c85bdc74182b,"Internal changes to support R-devel (4.5) and R API updates (#1747, #1774).",NA,NA,NA,NA
ggplot2,62b58dfc2eb8a469277537d6439a1f9e,"`draw_key_rect()` replaces a `NA` fill by the `colour` aesthetic and `draw_key_polygon()` has 0 linewidth as internal default (@​teunbrand, #5385).",NA,NA,NA,NA
pointblank,071313aa1e6c341bec2aa7bcc67e70c0,Bugfix agents auto-generating a table label that was too long. They now get truncated (#614),NA,NA,NA,NA
renv,4289a8943995d82329a3e3b48af95172,Fixed an issue where `renv::sysreqs(distro = <...>)` could fail when passed an alternate distribution without a version specifier. (#2105),NA,NA,NA,NA
shinytest2,995a95405d6f1298022d9a011ee72439,"`{shinytest2}` will skip and test on CRAN where an `AppDriver` is initialized. From a request from CRAN, using `{chromote}` during CRAN package testing should be avoided as it can create failing tests over time due to application changes within the testing machine, not changes in package code. Since `AppDriver` directly depends on `{chromote}` to test Shiny applications, creating an `AppDriver` should always skip the current test during CRAN package testing. This decision was made to achieve consistent testing behavior over time (rather than silently skipping tests that are expected to run due to a Chrome update). To escape this behavior, you can set the system environment variable `SHINYTEST2_APP_DRIVER_TEST_ON_CRAN=1`. Following `{chromote}`'s recommendation, you should test your R package in a CI environment, ideally on a weekly or monthly schedule to test your Shiny app with the latest R package versions. (#407)",NA,NA,NA,NA
chromote,dc7d55bb72cd4fad4ce8204d3310a030,"`ChromoteSession` gets a new helper method, `$go_to()`. This is an easier way of reliably waiting for a page load, instead of using `Page$loadEventFired()` and `Page$navigate()` together. (#221)",NA,NA,NA,NA
duckplyr,66448824c09331472eb1066563aa241b,"Implement `n_distinct()` as macro with support for `na.rm = TRUE` (@​joakimlinde, #572, #655).",NA,NA,NA,NA
duckplyr,0aa6bd16f18229546e6d57bf26ce83e6,"Use roxyglobals from CRAN rather than GitHub (@​andreranza, #659).",NA,NA,NA,NA
duckplyr,4742febbb728371072f28ef59716acce,Space at EOL.,NA,NA,NA,NA
duckplyr,4ac1be7e269940492f17b1aba4a2ca8c,Recommend `pak::pak()`.,NA,NA,NA,NA
tibble,d24daeec41a9176b5345f4f6a5e34459,Add permissions to update.,NA,NA,NA,NA
ragg,4e04d714c3c76277fe08560e79ee9be7,Added support for `saturate` composition operator,NA,NA,NA,NA
tibble,9c8d0a8f0f6efb7297c4d5b5baa409a9,Auto-update from GitHub Actions. Run: https://github.com/tidyverse/tibble/actions/runs/14178874040,NA,NA,NA,NA
tibble,e40625b789d12eae5efa159751d1028d,Only block direct updates for pull requests.,NA,NA,NA,NA
config,98d7a8aaef9654610998e4776df08ee3,New package logo,NA,NA,NA,NA
duckplyr,4a1b08d330d8c126ba4f1fea8256ebcb,"Register Ark methods for Positron's Variables Pane (@​DavisVaughan, #661).",NA,NA,NA,NA
rlang,9dd7b762b81808787ac69941f9da6396,The SEXP iterator of the rlang C library (used in r-lib/memtools) is now behind a feature flag because it requires private API accessors. Compile rlang with `-DRLANG_USE_PRIVATE_ACCESSORS` to enable it.,NA,NA,NA,NA
devtools,e8d3ddf698adc65a7efde5a4a3ff721f,"On macOS, `install()` now generates `dSYM` sidecar files for native libraries by default.",NA,NA,NA,NA
rsconnect,f7a987a93f9c0590b4a1e543022e129e,A `_server.yml` file indicates that the content is an API. (#1144),NA,NA,NA,NA
blastula,f3e7caa10958eb0158f7a62c2a1144bf,"Fixed erroneous use of `sprintf()`. (#335, thanks @​pabecer!)",NA,NA,NA,NA
blastula,7b0bad51dd4fcf50a1fc8b7adb05bc75,"Updated full product name of Connect. (#334, thanks @​aronatkins!)",NA,NA,NA,NA
blastula,3bbc257948c5b90176a04de0bcdd341d,Updated several GHA workflows (#336). (#337),NA,NA,NA,NA
lintr,8f69815e17799740d0099e7a8daca359,"`{lintr}` now has an associated paper at the Journal of Open Source Software that you can use to cite the package if you use it in a paper - see citation(""lintr"") for details.",NA,NA,NA,NA
rsconnect,7a93b7c19f0959f647870b39e31b136d,Quarto documents which specify a server must include executable code or an engine declaration. (#1145),NA,NA,NA,NA
reticulate,7f69a5f62e831cf84cc3e138789b14cd,"Fixed usage of micromamba and mamba, next-generation conda environment management tools. reticulate now prefers to use micromamba, mamba, then conda when managing environments",NA,NA,NA,NA
pillar,dff708b96178fdaf9c9a076bf4b3cb08,"`print()` and `format()` pass on `...` to `tbl_format_setup()` again, as documented (@​thothal, #726).",NA,NA,NA,NA
pillar,1c0bca3645a7fa0504eeed74d564b61c,"Add color to commas for `tibble::glimpse()` (@​TSchiefer, #658, #734).",NA,NA,NA,NA
pillar,d214fe8e5249b513a826130a5ffd8a41,"Compatibility with upcoming ggplot2 (@​teunbrand, tidyverse/ggplot2#6361, #729).",NA,NA,NA,NA
pillar,44d9e13b068a5f4ab42d519b17ed14d9,"Fix introductory example in `vignette(""extending"")` (#732, #736).",NA,NA,NA,NA
pillar,ac11b485aa18555b2cc0ce085e36d501,"Snapshot updates for R-CMD-check-dev ({""package"":""ggplot2""}) (#733).",NA,NA,NA,NA
pillar,60a42bf0740467ec65d26b2a00f977da,"Snapshot updates for R-CMD-check-dev ({""package"":""ggplot2""}) (#730).",NA,NA,NA,NA
bslib,6fc4f94e06e48f3a2d7c74d2186290fb,Fixed some typos in the documentation,NA,NA,NA,NA
gt,f72d213693b18e893ebac70670ddc57b,"`gt(row_group_as_column = TRUE)` now works if multiple groups are supplied (#1552). (@​olivroy, #1801).",NA,NA,NA,NA
gt,69098c47cc77a16de909d54462653115,"Fixed many typos in the documentation. (#1910, thanks @​MichaelChirico!)",NA,NA,NA,NA
ragg,35d68d67c4a68cbc7bb04137c6ff19c6,Sanitise file name before plotting (#176),NA,NA,NA,NA
ragg,c54b319dbdacbb35c579994dac9eae07,Tiff files can now include unicode characters on all platforms (#87),NA,NA,NA,NA
pointblank,e47c7ea91719698b5651850f988521be,"Add `na_pass` to `col_vals_expr()` for finer control of `NA` values. Previously, `NA`s were ignored, but now they are caught as failures with the default `na_pass = FALSE`. As a safeguard, if an expression generates `NA` values while `na_pass` is not explicitly supplied, a warning is thrown. (#617)",NA,NA,NA,NA
rlang,60fddcf1ac4338b0ecd0f4d16d834061,Progress towards making rlang conformant with the public C API of R.,NA,NA,NA,NA
pins,b6f584b04980682c58bc278e15e0f22f,Fixed handling of `rsconnect::accounts()` results (#861).,NA,NA,NA,NA
ggplot2,e89f2c0deefbe1768c73e7b9b022a772,"Facet gains a new method `setup_panel_params` to interact with the panel_params setted by Coord object (@​Yunuuuu, #6397, #6380)",NA,NA,NA,NA
bslib,77e51f88cd364003900719eeec7e8324,Fixed some typos in the documentation.,NA,NA,NA,NA
bslib,d78a72ce2a549230aaaa504c6aaba2c6,When `bs_theme(brand = FALSE)` we now correctly do not apply brand theming when a `_brand.yml` file is present in the project. (#1196),NA,NA,NA,NA
shinytest2,7b6faf69be1d241227430752d52c925b,Added `{testthat}`'s snapshot file `transform=` parameter support to `AppDriver$expect_download()` and `AppDriver$expect_values()`. This allows for text transformations of the snapshot files before they are compared. (#403),NA,NA,NA,NA
lintr,2b612ce598ca470e6bcf5fe3df24d155,"`lint2df_linter()` encourages the use of the `list2DF()` function, or the `data.frame()` function when recycling is required, over the slower and less readable `do.call(cbind.data.frame, )` alternative (#2834, @​Bisaloo).",NA,NA,NA,NA
reticulate,494e8dc2ec58fc6ddd12994ad03c4548,"Added `str()`, `dim()`, and `t()` S3 methods for NumPy Arrays.",NA,NA,NA,NA
duckplyr,0894d29a6834d331c4174530e8cbec99,"Typos + clarification edits to ""large"" vignette (@​mine-cetinkaya-rundel, #665).",NA,NA,NA,NA
duckplyr,e84a957abbc897bf2e578046f7197a1e,Snapshot updates for rcc-smoke (null) (#675).,NA,NA,NA,NA
ggplot2,3097627f82143910cae8ba3d7b22d09a,"Standardised test functions for important classes: `is_ggproto()`, `is_ggplot()`, `is_mapping()`, `is_layer()`, `is_geom()`, `is_stat()`, `is_position()`, `is_coord()`, `is_facet()`, `is_scale()`, `is_guide()`, `is_guides()`, `is_margin()`, `is_theme_element()` and `is_theme()`.",NA,NA,NA,NA
ggplot2,95a89f81c041fe6794dbdad47885c780,New `get_geom_defaults()` for retrieving resolved default aesthetics.,NA,NA,NA,NA
reticulate,df602013cd12ee8d18763a8558d858ca,"Fixed a segfault observed on R session exit (#1785, #1786).",NA,NA,NA,NA
duckplyr,8dbb1fd222be89d3e4cd49546f592ce3,"Verbose `conflict_prefer()` (#667, #684).",NA,NA,NA,NA
shinytest2,c8000ea179e677466e08a5f32f5f43d6,Fixed a bug where `AppDriver$expect_values(transform=)` default value caused error to be thrown. (#413),NA,NA,NA,NA
duckplyr,3fcdf590430e8655dc9ce66ff04af754,"Passthrough of functions prefixed with `dd$`, e.g., `dd$ROW()` will be translated as DuckDB's `ROW()` function (#658).",NA,NA,NA,NA
duckplyr,ae1bc86c04aa8b7dbaa2e451f68441de,"New `as_tbl()` to convert to a dbplyr tbl object (#634, #685).",NA,NA,NA,NA
duckplyr,e82c3bdbae55334f5f4d83fc679de750,Remove space at EOL.,NA,NA,NA,NA
duckplyr,a6e112bcb5d5fa002c1131cdfb97b8ef,Bump required version of pillar.,NA,NA,NA,NA
duckplyr,3b75f8d6ba13626998874c9eb5328e0f,"Add `vignette(""duckdb"")` (#690).",NA,NA,NA,NA
duckplyr,82688f08232fb9463cae46a0afdc1b22,Add experimental badge.,NA,NA,NA,NA
pkgdown,5d36e022580236d2aae3307f0ca4ef2d,Option `pkgdown.internet` was removed because CDN file caching now requires an internet connection.,NA,NA,NA,NA
chromote,a862b9c93d2d1b08d023a4ecaedcded6,"`ChromoteSession$view()` now accommodates the new DevTools Frontend URL used by Chrome v135 and later (#225, #226).",NA,NA,NA,NA
rsconnect,f79b0346a0bdb50d47794bcafe812f54,Expand tilde when resolving the `rsconnect.ca.bundle` option. (#1152),NA,NA,NA,NA
duckplyr,8f1671982bfc90af202a18bf0d280011,Register `has_children` and `has_viewer` methods for Positron (#678).,NA,NA,NA,NA
duckplyr,b1d7bd24307e2f59fd9b43a6885b6884,Add Posit's ROR ID (#592).,NA,NA,NA,NA
duckplyr,270a7127b5f8f3ab9574b93abdd3c71d,"Set functions like `union()` no longer trigger materialization (#654, #692).",NA,NA,NA,NA
duckplyr,e5365d4cf76ec48e93f82a9adb4b5504,"Remove experimental flag (#682, #695).",NA,NA,NA,NA
duckplyr,7d364b4e49b649bfc858064dd13fec84,Move package.,NA,NA,NA,NA
promises,99027cb17044aac5da72d6bd27b2cb39,Changed the way we create future objects to stay compatible with new versions of `{future}`. Apparently the way we were doing it was never idiomatic and only worked by accident. (#121),NA,NA,NA,NA
shinydashboard,8e3a811011896e37324150f245e912f1,Fixed #397: `updateTabItems()` is now a run-time alias of `shiny::updateTabsetPanel()`. (#398),NA,NA,NA,NA
duckplyr,817841a31c46d7d0b6623e0fd6bfd9e2,Remove superfluous check.,NA,NA,NA,NA
duckplyr,f96835722e6b79342ea95dbc9f1f6c60,Fix lints.,NA,NA,NA,NA
cli,43eb4d42ab1b4ee0532fdf84a6138dc5,`code_highlight()` supports long strings and symbols (#727 @​moodymudskipper),NA,NA,NA,NA
scales,9e7e840fae3ae474383f370230f5d9e3,Range training now supports custom classes. Continuous classes require a `range()` method that returns numeric values. Discrete classes require a `levels()` method (and optionally a `droplevels()` method) (#480).,NA,NA,NA,NA
scales,8221b85e27b9892bbf6c6da2673c4515,`breaks_exp()` now provides more sensible breaks for the exponential transform,NA,NA,NA,NA
roxygen2,e969efe3bc3ad915d529bfcf2904b5b9,"Package documentation now converts ROR IDs into a useful link (#1698, @​maelle).",NA,NA,NA,NA
scales,f55dd15b02d92b7aa2bb859a7b2c09a3,`label_date_short()` gains `tz` and `locale` argument (#478),NA,NA,NA,NA
desc,1f75f6697d7d74dff61ba0dde6a90bfa,`desc_coerce_authors_at_r()` now works correctly for authors with multiple given names.,NA,NA,NA,NA
fs,f1d923dc1249f357f6d3790571d2274d,"New `path_select_components()` function to select components of one or more paths (#326, @​Tazinho).",NA,NA,NA,NA
rlang,766315e82d37da64e601426ef8ab64c0,C code no longer calls `memcpy()` and `memset()` on 0-length R object memory (#1797).,NA,NA,NA,NA
gt,7bfeed77ecc47a32c3ff653726898195,"as_word() now handles ""`<br>`{=html}"" line breaks for md() and html(), and no longer automatically adds ""Table N"" ahead of the caption.",NA,NA,NA,NA
gt,8e034b98efaae5beccc607ec1cdfea8f,"Fixed an issue with a warning in Quarto (@​olivroy, #1985)",NA,NA,NA,NA
shiny,02fe5663168c2c036cacee7d1b832903,"When auto-reload is enabled, Shiny now reloads the entire app when support files, like Shiny modules, additional script files, or web assets, change. To enable auto-reload, call `devmode(TRUE)` to enable Shiny's developer mode, or set `options(shiny.autoreload = TRUE)` to specifically enable auto-reload. You can choose which files are watched for changes with the `shiny.autoreload.pattern` option. (#4184)",NA,NA,NA,NA
tibble,6ba7b6737bb3ee3391cf2223035ae36a,Explain (#1630).,NA,NA,NA,NA
tibble,837e7f998cfb3c112eb25ae6f97de7b7,"Add xml2 for covr, print testthat results (#1629).",NA,NA,NA,NA
tibble,a267381aec46b09b966a0c9ddf98aea2,Fix (#1628).,NA,NA,NA,NA
tibble,6a72bf450afedcc6a4746262ddaa0d7a,Sync (#1627).,NA,NA,NA,NA
fs,3eed16b96788e0818aae2d5bd22cfaa7,`path_has_parent()` now expands `~` (#412).,NA,NA,NA,NA
fs,fc06bae959d8829d90eea71e0995adcf,"`dir_exists()` follows relative symlinks in non-current directories (@​heavywatal, #395).",NA,NA,NA,NA
cli,b2a7064ee77cf289e4b399824847536c,"New `{.num}` and `{.bytes}` inline styles to format numbers and bytes (@​m-muecke, #644, #588, #643).",NA,NA,NA,NA
dbplyr,4aeb68537e2e033affebe59ff0178360,"Fix for failing snapshot tests (@​edward-burn, #1567).",NA,NA,NA,NA
tibble,f929a759789e0641f542b8eb7f578ac6,Correct installation of xml2 (#1631).,NA,NA,NA,NA
pkgdown,e4d4bae1a73ab50a5d423e3fe002c056,Math rendering using katex and mathjax was improved and now includes necessary components using CDN (#2704).,NA,NA,NA,NA
pkgdown,ba86de6a13920f85dc227387424fff5f,Articles have improved test cases (thanks to @​venpopov and @​ethanbass).,NA,NA,NA,NA
prettyunits,f0945d6b6bedb3fe22b1289d6b39c9cb,"Add `""q""`, `""r""`, `""R""`, `""Q""` prefix from BIPM to `pretty_num()` (#41, @​cregouby)",NA,NA,NA,NA
tibble,f3483bd542dbf9238ccc84ebebbdca22,Only fail covr builds if token is given (#1633).,NA,NA,NA,NA
tibble,455aa0d1aab925b732455fda09b604f1,Always use `_R_CHECK_FORCE_SUGGESTS_=false` (#1632).,NA,NA,NA,NA
ggplot2,b661ffbcd008c0d62bcd75d610c22103,"(internal) New `Facet$draw_panel_content()` method for delegating panel assembly (@​Yunuuuu, #6406).",NA,NA,NA,NA
rsconnect,4346e9f60bb75ad0ad98be5b33085411,Added support for interaction with Posit Connect deployments hosted in Snowpark Container Services.,NA,NA,NA,NA
duckplyr,fc0fa861a45dea469944279dd6e846ee,Syntax in code generation.,NA,NA,NA,NA
duckplyr,d6b73872d721632dd9a86d8717d2fe5f,Remove access of unknown variable.,NA,NA,NA,NA
duckplyr,743fb22f5e56403b9efc0fcc3aa0cab5,"Permissions, better tests for missing suggests, lints (#710).",NA,NA,NA,NA
duckplyr,de94cfac3bf75133cdf1ed09bd7a8abe,Only fail covr builds if token is given (#707).,NA,NA,NA,NA
duckplyr,481de79f03d61057264613b6604616e3,Always use `_R_CHECK_FORCE_SUGGESTS_=false` (#706).,NA,NA,NA,NA
duckplyr,b350a3b02bcbb7fe6d09b9c9d5e47d7e,Correct installation of xml2 (#703).,NA,NA,NA,NA
duckplyr,edad4d59171d9f1487695c474257dde2,"Add xml2 for covr, print testthat results (#701).",NA,NA,NA,NA
duckplyr,bb268eebbf72acf7ee1d647fd4952a9a,Sync (#700).,NA,NA,NA,NA
duckplyr,f05ca18cf3a74af1d6a2baa6ba9c16e4,Document `slice_head()` as supported.,NA,NA,NA,NA
duckplyr,a9cb84e04d717746e7d2aba1738bfeb1,Skip tests using `grep()` or `sub()` on CRAN.,NA,NA,NA,NA
tibble,ec668ab20cdcb55b1fce92d5f94e9c91,"Permissions, better tests for missing suggests, lints (#1634).",NA,NA,NA,NA
pins,f9a3c10448ee00b4b93bb4b72e157d25,Escalated gradual deprecation process for legacy pins functions such as `pin()` (#864).,NA,NA,NA,NA
shiny,000144e983718b4701073e31a3823187,"`textAreaInput()` gains a `autoresize` option, which automatically resizes the text area to fit its content. (#4210)",NA,NA,NA,NA
shiny,239749e0f1a015d0b72a0b8283301267,"Shiny no longer suspends input changes when *any* `<input type=""submit"">` or `<button type=""submit"">` is on the page. Instead, it now only suspends when a `submitButton()` is present. If you have reason for creating a submit button from custom HTML, add a CSS class of `shiny-submit-button` to the button. (#4209)",NA,NA,NA,NA
tibble,5255e93372709ab60f795113b6c76e90,"Support new vctrs `.name_repair` options: `unique_quiet`, `universal_quiet` (@​andreranza, #1549, #1625).",NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,Added compatibility with Keras v3.9.2.,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• New operations added:,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_rot90()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_rearrange()` (Einops-style),NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_signbit()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_polar()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_image_perspective_transform()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `op_image_gaussian_blur()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• New layers introduced:,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_rms_normalization()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_aug_mix()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_cut_mix()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_random_invert()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_random_erasing()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_random_gaussian_blur()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,‣ `layer_random_perspective()`,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• `layer_resizing()` gains an `antialias` argument.,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,"• `keras_input()`, `keras_model_sequential()`, and `op_convert_to_tensor()` gain a `ragged` argument.",NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• `layer$pop_layer()` gains a `rebuild` argument and now returns the removed layer.,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• New `rematerialized_call()` method added to `Layer` objects.,NA,NA,NA,NA
keras,344650309f89a6b5231191adfa79f116,• Documentation improvements and minor fixes.,NA,NA,NA,NA
quarto,7f51f4824a7f7cc25463d1728d7c26ef,"Correctly report Quarto CLI error when background process call to `quarto` fails (thanks, @​salim-b, #235)",NA,NA,NA,NA
duckplyr,4b165514ddd9935e0a5eb6cb92f0dc9c,Enhance permissions for workflow (#717).,NA,NA,NA,NA
tibble,391d6b286f6bb9a6ae7d1306b3b8ddea,Enhance permissions for workflow (#1635).,NA,NA,NA,NA
quarto,dfb132d60a1f05d9ca8c8c2e6de266e9,"Add some helpers function `theme_brand_*` and `theme_colors_*` to help theme with dark and light brand using some common graph and table packages (thanks, @​gordonwoodhull, #234).",NA,NA,NA,NA
httr2,27dd24b3e5ad7701ad00b8ff98b0be3d,"`req_url_query()` now re-calculates n lengths when using `.multi = ""explode""` to avoid select/recycling issues (@​Kevanness, #719).",NA,NA,NA,NA
promises,3b1bbe761bed5eac83498b0eb256afd5,"Fixed #122: Use `future::future(..., lazy = TRUE)` to avoid manual capturing of state within `future_promise` (Thank you, @​HenrikBengtsson! #123)",NA,NA,NA,NA
quarto,77218c6cc5089c6cbb9720fd256c3bae,"`quarto_preview()` gains a `quiet` argument to suppress any output from R or Quarto CLI (thanks, @​cwickham, #232.)",NA,NA,NA,NA
rcmdcheck,d60b1d739d33c51388a6a9cf9462e0de,`cran_check_results()` works again.,NA,NA,NA,NA
quarto,39da736a763ba87bcc1ea65f7e5038be,"`quarto_create_project()` offers better user experience now (thanks, @​jennybc, #206, #153).",NA,NA,NA,NA
duckplyr,96649a3d2b699d9a38cac2d719ac1d27,Move compatibility checks to duckdb (#699).,NA,NA,NA,NA
lintr,cd72a00fbb85a7926fbf8ae175a7e495,"`expect_lint()` has a new argument `ignore_order` (default `FALSE`), which, if `TRUE`, allows the `checks=` to be provided in arbitary order vs. how `lint()` produces them (@​MichaelChirico).",NA,NA,NA,NA
lintr,1787ed00882911924b08fed3d848e246,"The default for `pipe_consistency_linter()` is changed from `""auto""` (require one pipe style, either magrittr or native) to `""|>""` (R native pipe required) to coincide with the same change in the Tidyverse Style Guide (#2707, @​MichaelChirico).",NA,NA,NA,NA
lintr,2013ba107abcaa2c4dbd6e8bb07df02e,"`pipe_consistency_linter()`, with its new default to enforce the native pipe `|>`, is now a default linter, since it corresponds directly to a rule in the Tidyverse Style Guide (#2707, @​MichaelChirico).",NA,NA,NA,NA
duckplyr,4e471e4efa1705c93a3f4fedd8bffec6,Move compat checks back to duckplyr.,NA,NA,NA,NA
duckplyr,d1cd88246b2d7584d19f2e2b1cf99987,"Register Ark methods for Positron's ""Variables"" pane (@​DavisVaughan, #661, #678). DuckDB tibbles are no longer displayed as data frames in the ""Variables"" pane due to a limitation in Positron. Use `collect()` to convert them to data frames if you rely on the viewer functionality.",NA,NA,NA,NA
duckplyr,4f9d2b434ce63997cd702eb3b7d5a0f7,Translate `coalesce()`.,NA,NA,NA,NA
duckplyr,5b090a87c56e4c3317e0ce03a8ea4c04,Bump duckdb and pillar dependencies.,NA,NA,NA,NA
lintr,4f2fd7a963f0f970f228d35dfffd1f56,`undesirable_operator_linter()`:,NA,NA,NA,NA
lintr,4f2fd7a963f0f970f228d35dfffd1f56,"• Lints operators in prefix form, e.g. `` `%%`(x, 2) `` (#1910, @​MichaelChirico). Disable this by setting `call_is_undesirable=FALSE`.",NA,NA,NA,NA
lintr,4f2fd7a963f0f970f228d35dfffd1f56,"• Accepts unnamed entries, treating them as undesirable operators, e.g. `undesirable_operator_linter(""%%"")` (#2536, @​MichaelChirico).",NA,NA,NA,NA
lintr,2534b65e41ef258359f92548dedbf36d,"`undesirable_function_linter()` accepts unnamed entries, treating them as undesirable functions, e.g. `undesirable_function_linter(""sum"")` (#2536, @​MichaelChirico).",NA,NA,NA,NA
quarto,4590bb6d5632d9c6a33ab4501fa3cc98,"Add several new wrapper function (thanks, @​parmsam, #192):",NA,NA,NA,NA
quarto,4590bb6d5632d9c6a33ab4501fa3cc98,• `quarto_list_extensions()` to list installed extensions using `quarto list extensions`,NA,NA,NA,NA
quarto,4590bb6d5632d9c6a33ab4501fa3cc98,• `quarto_remove_extension()` to remove an installed extension using `quarto remove extensions`,NA,NA,NA,NA
quarto,4590bb6d5632d9c6a33ab4501fa3cc98,• `quarto_update_extension()` to update an installed extension using `quarto update extensions`,NA,NA,NA,NA
reticulate,fddc43947c1de828989e991e546fa1ce,"Added check in `install_miniconda()` if existing files will be overwritten. (#1794, #1796)",NA,NA,NA,NA
reticulate,630befc13b319691cd02be767b63f479,"Fixed error in `install_python()` under R 4.5 when the requested Python version has a `"":latest""` suffix, as it does by default. (#1792, #1797)",NA,NA,NA,NA
rsconnect,ae7133f2c7de57e06d5fcb0f2b4a8eb2,Introduced detection of required R interpreter version based on `DESCRIPTION` file and `renv.lock` file. This setting is inserted into the manifest as `environment.r.requires`.,NA,NA,NA,NA
rsconnect,c0b89fba9d38710996fe3bc1cd7e2949,"Introduced detection of required Python interpreter version based on project files `.python-version`, `pyproject.toml` and `setup.cfg`. This setting is inserted into the manifest as `environment.python.requires`.",NA,NA,NA,NA
rcmdcheck,19b3b293d23ad30a36d79685e5250d3b,Fix usage of `libpath` argument (#195).,NA,NA,NA,NA
